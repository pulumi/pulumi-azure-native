// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiConnectionDefinitionProperties struct {
	Api *ApiReference `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime *string `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime *string `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues map[string]string `pulumi:"customParameterValues"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues map[string]string `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues map[string]string `pulumi:"parameterValues"`
	// Status of the connection
	Statuses []ConnectionStatusDefinition `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks []ApiConnectionTestLink `pulumi:"testLinks"`
}

// ApiConnectionDefinitionPropertiesInput is an input type that accepts ApiConnectionDefinitionPropertiesArgs and ApiConnectionDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionPropertiesInput` via:
//
//          ApiConnectionDefinitionPropertiesArgs{...}
type ApiConnectionDefinitionPropertiesInput interface {
	pulumi.Input

	ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput
	ToApiConnectionDefinitionPropertiesOutputWithContext(context.Context) ApiConnectionDefinitionPropertiesOutput
}

type ApiConnectionDefinitionPropertiesArgs struct {
	Api ApiReferencePtrInput `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime pulumi.StringPtrInput `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues pulumi.StringMapInput `pulumi:"customParameterValues"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues pulumi.StringMapInput `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues pulumi.StringMapInput `pulumi:"parameterValues"`
	// Status of the connection
	Statuses ConnectionStatusDefinitionArrayInput `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks ApiConnectionTestLinkArrayInput `pulumi:"testLinks"`
}

func (ApiConnectionDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput {
	return i.ToApiConnectionDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesOutput)
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return i.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesOutput).ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ApiConnectionDefinitionPropertiesPtrInput is an input type that accepts ApiConnectionDefinitionPropertiesArgs, ApiConnectionDefinitionPropertiesPtr and ApiConnectionDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionPropertiesPtrInput` via:
//
//          ApiConnectionDefinitionPropertiesArgs{...}
//
//  or:
//
//          nil
type ApiConnectionDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput
	ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Context) ApiConnectionDefinitionPropertiesPtrOutput
}

type apiConnectionDefinitionPropertiesPtrType ApiConnectionDefinitionPropertiesArgs

func ApiConnectionDefinitionPropertiesPtr(v *ApiConnectionDefinitionPropertiesArgs) ApiConnectionDefinitionPropertiesPtrInput {
	return (*apiConnectionDefinitionPropertiesPtrType)(v)
}

func (*apiConnectionDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (i *apiConnectionDefinitionPropertiesPtrType) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return i.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiConnectionDefinitionPropertiesPtrType) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesPtrOutput)
}

type ApiConnectionDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return o.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *ApiConnectionDefinitionProperties {
		return &v
	}).(ApiConnectionDefinitionPropertiesPtrOutput)
}
func (o ApiConnectionDefinitionPropertiesOutput) Api() ApiReferencePtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *ApiReference { return v.Api }).(ApiReferencePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionPropertiesOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionPropertiesOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionPropertiesOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.CustomParameterValues }).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionPropertiesOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.NonSecretParameterValues }).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionPropertiesOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.ParameterValues }).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionPropertiesOutput) Statuses() ConnectionStatusDefinitionArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) []ConnectionStatusDefinition { return v.Statuses }).(ConnectionStatusDefinitionArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionPropertiesOutput) TestLinks() ApiConnectionTestLinkArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) []ApiConnectionTestLink { return v.TestLinks }).(ApiConnectionTestLinkArrayOutput)
}

type ApiConnectionDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) Elem() ApiConnectionDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) ApiConnectionDefinitionProperties { return *v }).(ApiConnectionDefinitionPropertiesOutput)
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) Api() ApiReferencePtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *ApiReference {
		if v == nil {
			return nil
		}
		return v.Api
	}).(ApiReferencePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionPropertiesPtrOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChangedTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionPropertiesPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomParameterValues
	}).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.NonSecretParameterValues
	}).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParameterValues
	}).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionPropertiesPtrOutput) Statuses() ConnectionStatusDefinitionArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) []ConnectionStatusDefinition {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(ConnectionStatusDefinitionArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionPropertiesPtrOutput) TestLinks() ApiConnectionTestLinkArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) []ApiConnectionTestLink {
		if v == nil {
			return nil
		}
		return v.TestLinks
	}).(ApiConnectionTestLinkArrayOutput)
}

type ApiConnectionDefinitionResponseProperties struct {
	Api *ApiReferenceResponse `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime *string `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime *string `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues map[string]string `pulumi:"customParameterValues"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues map[string]string `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues map[string]string `pulumi:"parameterValues"`
	// Status of the connection
	Statuses []ConnectionStatusDefinitionResponse `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks []ApiConnectionTestLinkResponse `pulumi:"testLinks"`
}

// ApiConnectionDefinitionResponsePropertiesInput is an input type that accepts ApiConnectionDefinitionResponsePropertiesArgs and ApiConnectionDefinitionResponsePropertiesOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionResponsePropertiesInput` via:
//
//          ApiConnectionDefinitionResponsePropertiesArgs{...}
type ApiConnectionDefinitionResponsePropertiesInput interface {
	pulumi.Input

	ToApiConnectionDefinitionResponsePropertiesOutput() ApiConnectionDefinitionResponsePropertiesOutput
	ToApiConnectionDefinitionResponsePropertiesOutputWithContext(context.Context) ApiConnectionDefinitionResponsePropertiesOutput
}

type ApiConnectionDefinitionResponsePropertiesArgs struct {
	Api ApiReferenceResponsePtrInput `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime pulumi.StringPtrInput `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues pulumi.StringMapInput `pulumi:"customParameterValues"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues pulumi.StringMapInput `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues pulumi.StringMapInput `pulumi:"parameterValues"`
	// Status of the connection
	Statuses ConnectionStatusDefinitionResponseArrayInput `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks ApiConnectionTestLinkResponseArrayInput `pulumi:"testLinks"`
}

func (ApiConnectionDefinitionResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionResponseProperties)(nil)).Elem()
}

func (i ApiConnectionDefinitionResponsePropertiesArgs) ToApiConnectionDefinitionResponsePropertiesOutput() ApiConnectionDefinitionResponsePropertiesOutput {
	return i.ToApiConnectionDefinitionResponsePropertiesOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionResponsePropertiesArgs) ToApiConnectionDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionResponsePropertiesOutput)
}

func (i ApiConnectionDefinitionResponsePropertiesArgs) ToApiConnectionDefinitionResponsePropertiesPtrOutput() ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return i.ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionResponsePropertiesArgs) ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionResponsePropertiesOutput).ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(ctx)
}

// ApiConnectionDefinitionResponsePropertiesPtrInput is an input type that accepts ApiConnectionDefinitionResponsePropertiesArgs, ApiConnectionDefinitionResponsePropertiesPtr and ApiConnectionDefinitionResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionResponsePropertiesPtrInput` via:
//
//          ApiConnectionDefinitionResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ApiConnectionDefinitionResponsePropertiesPtrInput interface {
	pulumi.Input

	ToApiConnectionDefinitionResponsePropertiesPtrOutput() ApiConnectionDefinitionResponsePropertiesPtrOutput
	ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(context.Context) ApiConnectionDefinitionResponsePropertiesPtrOutput
}

type apiConnectionDefinitionResponsePropertiesPtrType ApiConnectionDefinitionResponsePropertiesArgs

func ApiConnectionDefinitionResponsePropertiesPtr(v *ApiConnectionDefinitionResponsePropertiesArgs) ApiConnectionDefinitionResponsePropertiesPtrInput {
	return (*apiConnectionDefinitionResponsePropertiesPtrType)(v)
}

func (*apiConnectionDefinitionResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionResponseProperties)(nil)).Elem()
}

func (i *apiConnectionDefinitionResponsePropertiesPtrType) ToApiConnectionDefinitionResponsePropertiesPtrOutput() ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return i.ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *apiConnectionDefinitionResponsePropertiesPtrType) ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionResponsePropertiesPtrOutput)
}

type ApiConnectionDefinitionResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionResponseProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesOutput() ApiConnectionDefinitionResponsePropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesPtrOutput() ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return o.ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *ApiConnectionDefinitionResponseProperties {
		return &v
	}).(ApiConnectionDefinitionResponsePropertiesPtrOutput)
}
func (o ApiConnectionDefinitionResponsePropertiesOutput) Api() ApiReferenceResponsePtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *ApiReferenceResponse { return v.Api }).(ApiReferenceResponsePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionResponsePropertiesOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionResponsePropertiesOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.CustomParameterValues }).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionResponsePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.NonSecretParameterValues }).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.ParameterValues }).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionResponsePropertiesOutput) Statuses() ConnectionStatusDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) []ConnectionStatusDefinitionResponse {
		return v.Statuses
	}).(ConnectionStatusDefinitionResponseArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionResponsePropertiesOutput) TestLinks() ApiConnectionTestLinkResponseArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) []ApiConnectionTestLinkResponse { return v.TestLinks }).(ApiConnectionTestLinkResponseArrayOutput)
}

type ApiConnectionDefinitionResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionResponseProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) ToApiConnectionDefinitionResponsePropertiesPtrOutput() ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) ToApiConnectionDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) Elem() ApiConnectionDefinitionResponsePropertiesOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) ApiConnectionDefinitionResponseProperties {
		return *v
	}).(ApiConnectionDefinitionResponsePropertiesOutput)
}

func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) Api() ApiReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) *ApiReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Api
	}).(ApiReferenceResponsePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChangedTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomParameterValues
	}).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.NonSecretParameterValues
	}).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParameterValues
	}).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) Statuses() ConnectionStatusDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) []ConnectionStatusDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(ConnectionStatusDefinitionResponseArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionResponsePropertiesPtrOutput) TestLinks() ApiConnectionTestLinkResponseArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionResponseProperties) []ApiConnectionTestLinkResponse {
		if v == nil {
			return nil
		}
		return v.TestLinks
	}).(ApiConnectionTestLinkResponseArrayOutput)
}

// API connection properties
type ApiConnectionTestLink struct {
	// HTTP Method
	Method *string `pulumi:"method"`
	// Test link request URI
	RequestUri *string `pulumi:"requestUri"`
}

// ApiConnectionTestLinkInput is an input type that accepts ApiConnectionTestLinkArgs and ApiConnectionTestLinkOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkInput` via:
//
//          ApiConnectionTestLinkArgs{...}
type ApiConnectionTestLinkInput interface {
	pulumi.Input

	ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput
	ToApiConnectionTestLinkOutputWithContext(context.Context) ApiConnectionTestLinkOutput
}

// API connection properties
type ApiConnectionTestLinkArgs struct {
	// HTTP Method
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Test link request URI
	RequestUri pulumi.StringPtrInput `pulumi:"requestUri"`
}

func (ApiConnectionTestLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLink)(nil)).Elem()
}

func (i ApiConnectionTestLinkArgs) ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput {
	return i.ToApiConnectionTestLinkOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkArgs) ToApiConnectionTestLinkOutputWithContext(ctx context.Context) ApiConnectionTestLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkOutput)
}

// ApiConnectionTestLinkArrayInput is an input type that accepts ApiConnectionTestLinkArray and ApiConnectionTestLinkArrayOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkArrayInput` via:
//
//          ApiConnectionTestLinkArray{ ApiConnectionTestLinkArgs{...} }
type ApiConnectionTestLinkArrayInput interface {
	pulumi.Input

	ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput
	ToApiConnectionTestLinkArrayOutputWithContext(context.Context) ApiConnectionTestLinkArrayOutput
}

type ApiConnectionTestLinkArray []ApiConnectionTestLinkInput

func (ApiConnectionTestLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLink)(nil)).Elem()
}

func (i ApiConnectionTestLinkArray) ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput {
	return i.ToApiConnectionTestLinkArrayOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkArray) ToApiConnectionTestLinkArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkArrayOutput)
}

// API connection properties
type ApiConnectionTestLinkOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLink)(nil)).Elem()
}

func (o ApiConnectionTestLinkOutput) ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput {
	return o
}

func (o ApiConnectionTestLinkOutput) ToApiConnectionTestLinkOutputWithContext(ctx context.Context) ApiConnectionTestLinkOutput {
	return o
}

// HTTP Method
func (o ApiConnectionTestLinkOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLink) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Test link request URI
func (o ApiConnectionTestLinkOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLink) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

type ApiConnectionTestLinkArrayOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLink)(nil)).Elem()
}

func (o ApiConnectionTestLinkArrayOutput) ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput {
	return o
}

func (o ApiConnectionTestLinkArrayOutput) ToApiConnectionTestLinkArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkArrayOutput {
	return o
}

func (o ApiConnectionTestLinkArrayOutput) Index(i pulumi.IntInput) ApiConnectionTestLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiConnectionTestLink {
		return vs[0].([]ApiConnectionTestLink)[vs[1].(int)]
	}).(ApiConnectionTestLinkOutput)
}

// API connection properties
type ApiConnectionTestLinkResponse struct {
	// HTTP Method
	Method *string `pulumi:"method"`
	// Test link request URI
	RequestUri *string `pulumi:"requestUri"`
}

// ApiConnectionTestLinkResponseInput is an input type that accepts ApiConnectionTestLinkResponseArgs and ApiConnectionTestLinkResponseOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkResponseInput` via:
//
//          ApiConnectionTestLinkResponseArgs{...}
type ApiConnectionTestLinkResponseInput interface {
	pulumi.Input

	ToApiConnectionTestLinkResponseOutput() ApiConnectionTestLinkResponseOutput
	ToApiConnectionTestLinkResponseOutputWithContext(context.Context) ApiConnectionTestLinkResponseOutput
}

// API connection properties
type ApiConnectionTestLinkResponseArgs struct {
	// HTTP Method
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Test link request URI
	RequestUri pulumi.StringPtrInput `pulumi:"requestUri"`
}

func (ApiConnectionTestLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (i ApiConnectionTestLinkResponseArgs) ToApiConnectionTestLinkResponseOutput() ApiConnectionTestLinkResponseOutput {
	return i.ToApiConnectionTestLinkResponseOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkResponseArgs) ToApiConnectionTestLinkResponseOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkResponseOutput)
}

// ApiConnectionTestLinkResponseArrayInput is an input type that accepts ApiConnectionTestLinkResponseArray and ApiConnectionTestLinkResponseArrayOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkResponseArrayInput` via:
//
//          ApiConnectionTestLinkResponseArray{ ApiConnectionTestLinkResponseArgs{...} }
type ApiConnectionTestLinkResponseArrayInput interface {
	pulumi.Input

	ToApiConnectionTestLinkResponseArrayOutput() ApiConnectionTestLinkResponseArrayOutput
	ToApiConnectionTestLinkResponseArrayOutputWithContext(context.Context) ApiConnectionTestLinkResponseArrayOutput
}

type ApiConnectionTestLinkResponseArray []ApiConnectionTestLinkResponseInput

func (ApiConnectionTestLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (i ApiConnectionTestLinkResponseArray) ToApiConnectionTestLinkResponseArrayOutput() ApiConnectionTestLinkResponseArrayOutput {
	return i.ToApiConnectionTestLinkResponseArrayOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkResponseArray) ToApiConnectionTestLinkResponseArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkResponseArrayOutput)
}

// API connection properties
type ApiConnectionTestLinkResponseOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (o ApiConnectionTestLinkResponseOutput) ToApiConnectionTestLinkResponseOutput() ApiConnectionTestLinkResponseOutput {
	return o
}

func (o ApiConnectionTestLinkResponseOutput) ToApiConnectionTestLinkResponseOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseOutput {
	return o
}

// HTTP Method
func (o ApiConnectionTestLinkResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLinkResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Test link request URI
func (o ApiConnectionTestLinkResponseOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLinkResponse) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

type ApiConnectionTestLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (o ApiConnectionTestLinkResponseArrayOutput) ToApiConnectionTestLinkResponseArrayOutput() ApiConnectionTestLinkResponseArrayOutput {
	return o
}

func (o ApiConnectionTestLinkResponseArrayOutput) ToApiConnectionTestLinkResponseArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseArrayOutput {
	return o
}

func (o ApiConnectionTestLinkResponseArrayOutput) Index(i pulumi.IntInput) ApiConnectionTestLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiConnectionTestLinkResponse {
		return vs[0].([]ApiConnectionTestLinkResponse)[vs[1].(int)]
	}).(ApiConnectionTestLinkResponseOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfo struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInput is an input type that accepts ApiDefinitionInfoArgs and ApiDefinitionInfoOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInput` via:
//
//          ApiDefinitionInfoArgs{...}
type ApiDefinitionInfoInput interface {
	pulumi.Input

	ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput
	ToApiDefinitionInfoOutputWithContext(context.Context) ApiDefinitionInfoOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return i.ToApiDefinitionInfoOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput)
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput).ToApiDefinitionInfoPtrOutputWithContext(ctx)
}

// ApiDefinitionInfoPtrInput is an input type that accepts ApiDefinitionInfoArgs, ApiDefinitionInfoPtr and ApiDefinitionInfoPtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoPtrInput` via:
//
//          ApiDefinitionInfoArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoPtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput
	ToApiDefinitionInfoPtrOutputWithContext(context.Context) ApiDefinitionInfoPtrOutput
}

type apiDefinitionInfoPtrType ApiDefinitionInfoArgs

func ApiDefinitionInfoPtr(v *ApiDefinitionInfoArgs) ApiDefinitionInfoPtrInput {
	return (*apiDefinitionInfoPtrType)(v)
}

func (*apiDefinitionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *ApiDefinitionInfo {
		return &v
	}).(ApiDefinitionInfoPtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoPtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) Elem() ApiDefinitionInfoOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) ApiDefinitionInfo { return *v }).(ApiDefinitionInfoOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoResponseInput is an input type that accepts ApiDefinitionInfoResponseArgs and ApiDefinitionInfoResponseOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponseInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
type ApiDefinitionInfoResponseInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput
	ToApiDefinitionInfoResponseOutputWithContext(context.Context) ApiDefinitionInfoResponseOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return i.ToApiDefinitionInfoResponseOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput)
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput).ToApiDefinitionInfoResponsePtrOutputWithContext(ctx)
}

// ApiDefinitionInfoResponsePtrInput is an input type that accepts ApiDefinitionInfoResponseArgs, ApiDefinitionInfoResponsePtr and ApiDefinitionInfoResponsePtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponsePtrInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoResponsePtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput
	ToApiDefinitionInfoResponsePtrOutputWithContext(context.Context) ApiDefinitionInfoResponsePtrOutput
}

type apiDefinitionInfoResponsePtrType ApiDefinitionInfoResponseArgs

func ApiDefinitionInfoResponsePtr(v *ApiDefinitionInfoResponseArgs) ApiDefinitionInfoResponsePtrInput {
	return (*apiDefinitionInfoResponsePtrType)(v)
}

func (*apiDefinitionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponsePtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *ApiDefinitionInfoResponse {
		return &v
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) Elem() ApiDefinitionInfoResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) ApiDefinitionInfoResponse { return *v }).(ApiDefinitionInfoResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfig struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigInput is an input type that accepts ApiManagementConfigArgs and ApiManagementConfigOutput values.
// You can construct a concrete instance of `ApiManagementConfigInput` via:
//
//          ApiManagementConfigArgs{...}
type ApiManagementConfigInput interface {
	pulumi.Input

	ToApiManagementConfigOutput() ApiManagementConfigOutput
	ToApiManagementConfigOutputWithContext(context.Context) ApiManagementConfigOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return i.ToApiManagementConfigOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput)
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput).ToApiManagementConfigPtrOutputWithContext(ctx)
}

// ApiManagementConfigPtrInput is an input type that accepts ApiManagementConfigArgs, ApiManagementConfigPtr and ApiManagementConfigPtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigPtrInput` via:
//
//          ApiManagementConfigArgs{...}
//
//  or:
//
//          nil
type ApiManagementConfigPtrInput interface {
	pulumi.Input

	ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput
	ToApiManagementConfigPtrOutputWithContext(context.Context) ApiManagementConfigPtrOutput
}

type apiManagementConfigPtrType ApiManagementConfigArgs

func ApiManagementConfigPtr(v *ApiManagementConfigArgs) ApiManagementConfigPtrInput {
	return (*apiManagementConfigPtrType)(v)
}

func (*apiManagementConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v ApiManagementConfig) *ApiManagementConfig {
		return &v
	}).(ApiManagementConfigPtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) Elem() ApiManagementConfigOutput {
	return o.ApplyT(func(v *ApiManagementConfig) ApiManagementConfig { return *v }).(ApiManagementConfigOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponse struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigResponseInput is an input type that accepts ApiManagementConfigResponseArgs and ApiManagementConfigResponseOutput values.
// You can construct a concrete instance of `ApiManagementConfigResponseInput` via:
//
//          ApiManagementConfigResponseArgs{...}
type ApiManagementConfigResponseInput interface {
	pulumi.Input

	ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput
	ToApiManagementConfigResponseOutputWithContext(context.Context) ApiManagementConfigResponseOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponseArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigResponse)(nil)).Elem()
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput {
	return i.ToApiManagementConfigResponseOutputWithContext(context.Background())
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponseOutputWithContext(ctx context.Context) ApiManagementConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponseOutput)
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return i.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponseOutput).ToApiManagementConfigResponsePtrOutputWithContext(ctx)
}

// ApiManagementConfigResponsePtrInput is an input type that accepts ApiManagementConfigResponseArgs, ApiManagementConfigResponsePtr and ApiManagementConfigResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigResponsePtrInput` via:
//
//          ApiManagementConfigResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementConfigResponsePtrInput interface {
	pulumi.Input

	ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput
	ToApiManagementConfigResponsePtrOutputWithContext(context.Context) ApiManagementConfigResponsePtrOutput
}

type apiManagementConfigResponsePtrType ApiManagementConfigResponseArgs

func ApiManagementConfigResponsePtr(v *ApiManagementConfigResponseArgs) ApiManagementConfigResponsePtrInput {
	return (*apiManagementConfigResponsePtrType)(v)
}

func (*apiManagementConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigResponse)(nil)).Elem()
}

func (i *apiManagementConfigResponsePtrType) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return i.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigResponsePtrType) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponsePtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput {
	return o
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutputWithContext(ctx context.Context) ApiManagementConfigResponseOutput {
	return o
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return o.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementConfigResponse) *ApiManagementConfigResponse {
		return &v
	}).(ApiManagementConfigResponsePtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfigResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) Elem() ApiManagementConfigResponseOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) ApiManagementConfigResponse { return *v }).(ApiManagementConfigResponseOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettings struct {
	// Resource provider client id
	ClientId *string `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret *string `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters map[string]ApiOAuthSettingsParameter `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider *string `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties interface{} `pulumi:"properties"`
	// Url
	RedirectUrl *string `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes []string `pulumi:"scopes"`
}

// ApiOAuthSettingsInput is an input type that accepts ApiOAuthSettingsArgs and ApiOAuthSettingsOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsInput` via:
//
//          ApiOAuthSettingsArgs{...}
type ApiOAuthSettingsInput interface {
	pulumi.Input

	ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput
	ToApiOAuthSettingsOutputWithContext(context.Context) ApiOAuthSettingsOutput
}

// OAuth settings for the connection provider
type ApiOAuthSettingsArgs struct {
	// Resource provider client id
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters ApiOAuthSettingsParameterMapInput `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties pulumi.Input `pulumi:"properties"`
	// Url
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ApiOAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettings)(nil)).Elem()
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput {
	return i.ToApiOAuthSettingsOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsOutputWithContext(ctx context.Context) ApiOAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsOutput)
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return i.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsOutput).ToApiOAuthSettingsPtrOutputWithContext(ctx)
}

// ApiOAuthSettingsPtrInput is an input type that accepts ApiOAuthSettingsArgs, ApiOAuthSettingsPtr and ApiOAuthSettingsPtrOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsPtrInput` via:
//
//          ApiOAuthSettingsArgs{...}
//
//  or:
//
//          nil
type ApiOAuthSettingsPtrInput interface {
	pulumi.Input

	ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput
	ToApiOAuthSettingsPtrOutputWithContext(context.Context) ApiOAuthSettingsPtrOutput
}

type apiOAuthSettingsPtrType ApiOAuthSettingsArgs

func ApiOAuthSettingsPtr(v *ApiOAuthSettingsArgs) ApiOAuthSettingsPtrInput {
	return (*apiOAuthSettingsPtrType)(v)
}

func (*apiOAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettings)(nil)).Elem()
}

func (i *apiOAuthSettingsPtrType) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return i.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *apiOAuthSettingsPtrType) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsPtrOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettingsOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettings)(nil)).Elem()
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput {
	return o
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsOutputWithContext(ctx context.Context) ApiOAuthSettingsOutput {
	return o
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return o.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *ApiOAuthSettings {
		return &v
	}).(ApiOAuthSettingsPtrOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsOutput) CustomParameters() ApiOAuthSettingsParameterMapOutput {
	return o.ApplyT(func(v ApiOAuthSettings) map[string]ApiOAuthSettingsParameter { return v.CustomParameters }).(ApiOAuthSettingsParameterMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettings) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOAuthSettings) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ApiOAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettings)(nil)).Elem()
}

func (o ApiOAuthSettingsPtrOutput) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return o
}

func (o ApiOAuthSettingsPtrOutput) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return o
}

func (o ApiOAuthSettingsPtrOutput) Elem() ApiOAuthSettingsOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) ApiOAuthSettings { return *v }).(ApiOAuthSettingsOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsPtrOutput) CustomParameters() ApiOAuthSettingsParameterMapOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) map[string]ApiOAuthSettingsParameter {
		if v == nil {
			return nil
		}
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsPtrOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.IdentityProvider
	}).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsPtrOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameter struct {
	// Options available to this parameter
	Options interface{} `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition interface{} `pulumi:"uiDefinition"`
	// Value of the setting
	Value *string `pulumi:"value"`
}

// ApiOAuthSettingsParameterInput is an input type that accepts ApiOAuthSettingsParameterArgs and ApiOAuthSettingsParameterOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterInput` via:
//
//          ApiOAuthSettingsParameterArgs{...}
type ApiOAuthSettingsParameterInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput
	ToApiOAuthSettingsParameterOutputWithContext(context.Context) ApiOAuthSettingsParameterOutput
}

// OAuth settings for the API
type ApiOAuthSettingsParameterArgs struct {
	// Options available to this parameter
	Options pulumi.Input `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition pulumi.Input `pulumi:"uiDefinition"`
	// Value of the setting
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOAuthSettingsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameter)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterArgs) ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput {
	return i.ToApiOAuthSettingsParameterOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterArgs) ToApiOAuthSettingsParameterOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterOutput)
}

// ApiOAuthSettingsParameterMapInput is an input type that accepts ApiOAuthSettingsParameterMap and ApiOAuthSettingsParameterMapOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterMapInput` via:
//
//          ApiOAuthSettingsParameterMap{ "key": ApiOAuthSettingsParameterArgs{...} }
type ApiOAuthSettingsParameterMapInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput
	ToApiOAuthSettingsParameterMapOutputWithContext(context.Context) ApiOAuthSettingsParameterMapOutput
}

type ApiOAuthSettingsParameterMap map[string]ApiOAuthSettingsParameterInput

func (ApiOAuthSettingsParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameter)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterMap) ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput {
	return i.ToApiOAuthSettingsParameterMapOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterMap) ToApiOAuthSettingsParameterMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterMapOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameterOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameter)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterOutput) ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput {
	return o
}

func (o ApiOAuthSettingsParameterOutput) ToApiOAuthSettingsParameterOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterOutput {
	return o
}

// Options available to this parameter
func (o ApiOAuthSettingsParameterOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) interface{} { return v.Options }).(pulumi.AnyOutput)
}

// UI definitions per culture as caller can specify the culture
func (o ApiOAuthSettingsParameterOutput) UiDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) interface{} { return v.UiDefinition }).(pulumi.AnyOutput)
}

// Value of the setting
func (o ApiOAuthSettingsParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOAuthSettingsParameterMapOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameter)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterMapOutput) ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterMapOutput) ToApiOAuthSettingsParameterMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterMapOutput) MapIndex(k pulumi.StringInput) ApiOAuthSettingsParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ApiOAuthSettingsParameter {
		return vs[0].(map[string]ApiOAuthSettingsParameter)[vs[1].(string)]
	}).(ApiOAuthSettingsParameterOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameterResponse struct {
	// Options available to this parameter
	Options interface{} `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition interface{} `pulumi:"uiDefinition"`
	// Value of the setting
	Value *string `pulumi:"value"`
}

// ApiOAuthSettingsParameterResponseInput is an input type that accepts ApiOAuthSettingsParameterResponseArgs and ApiOAuthSettingsParameterResponseOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterResponseInput` via:
//
//          ApiOAuthSettingsParameterResponseArgs{...}
type ApiOAuthSettingsParameterResponseInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterResponseOutput() ApiOAuthSettingsParameterResponseOutput
	ToApiOAuthSettingsParameterResponseOutputWithContext(context.Context) ApiOAuthSettingsParameterResponseOutput
}

// OAuth settings for the API
type ApiOAuthSettingsParameterResponseArgs struct {
	// Options available to this parameter
	Options pulumi.Input `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition pulumi.Input `pulumi:"uiDefinition"`
	// Value of the setting
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOAuthSettingsParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterResponseArgs) ToApiOAuthSettingsParameterResponseOutput() ApiOAuthSettingsParameterResponseOutput {
	return i.ToApiOAuthSettingsParameterResponseOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterResponseArgs) ToApiOAuthSettingsParameterResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterResponseOutput)
}

// ApiOAuthSettingsParameterResponseMapInput is an input type that accepts ApiOAuthSettingsParameterResponseMap and ApiOAuthSettingsParameterResponseMapOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterResponseMapInput` via:
//
//          ApiOAuthSettingsParameterResponseMap{ "key": ApiOAuthSettingsParameterResponseArgs{...} }
type ApiOAuthSettingsParameterResponseMapInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterResponseMapOutput() ApiOAuthSettingsParameterResponseMapOutput
	ToApiOAuthSettingsParameterResponseMapOutputWithContext(context.Context) ApiOAuthSettingsParameterResponseMapOutput
}

type ApiOAuthSettingsParameterResponseMap map[string]ApiOAuthSettingsParameterResponseInput

func (ApiOAuthSettingsParameterResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterResponseMap) ToApiOAuthSettingsParameterResponseMapOutput() ApiOAuthSettingsParameterResponseMapOutput {
	return i.ToApiOAuthSettingsParameterResponseMapOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterResponseMap) ToApiOAuthSettingsParameterResponseMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterResponseMapOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameterResponseOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterResponseOutput) ToApiOAuthSettingsParameterResponseOutput() ApiOAuthSettingsParameterResponseOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseOutput) ToApiOAuthSettingsParameterResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseOutput {
	return o
}

// Options available to this parameter
func (o ApiOAuthSettingsParameterResponseOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) interface{} { return v.Options }).(pulumi.AnyOutput)
}

// UI definitions per culture as caller can specify the culture
func (o ApiOAuthSettingsParameterResponseOutput) UiDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) interface{} { return v.UiDefinition }).(pulumi.AnyOutput)
}

// Value of the setting
func (o ApiOAuthSettingsParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOAuthSettingsParameterResponseMapOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterResponseMapOutput) ToApiOAuthSettingsParameterResponseMapOutput() ApiOAuthSettingsParameterResponseMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseMapOutput) ToApiOAuthSettingsParameterResponseMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseMapOutput) MapIndex(k pulumi.StringInput) ApiOAuthSettingsParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ApiOAuthSettingsParameterResponse {
		return vs[0].(map[string]ApiOAuthSettingsParameterResponse)[vs[1].(string)]
	}).(ApiOAuthSettingsParameterResponseOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettingsResponse struct {
	// Resource provider client id
	ClientId *string `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret *string `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters map[string]ApiOAuthSettingsParameterResponse `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider *string `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties interface{} `pulumi:"properties"`
	// Url
	RedirectUrl *string `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes []string `pulumi:"scopes"`
}

// ApiOAuthSettingsResponseInput is an input type that accepts ApiOAuthSettingsResponseArgs and ApiOAuthSettingsResponseOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsResponseInput` via:
//
//          ApiOAuthSettingsResponseArgs{...}
type ApiOAuthSettingsResponseInput interface {
	pulumi.Input

	ToApiOAuthSettingsResponseOutput() ApiOAuthSettingsResponseOutput
	ToApiOAuthSettingsResponseOutputWithContext(context.Context) ApiOAuthSettingsResponseOutput
}

// OAuth settings for the connection provider
type ApiOAuthSettingsResponseArgs struct {
	// Resource provider client id
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters ApiOAuthSettingsParameterResponseMapInput `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties pulumi.Input `pulumi:"properties"`
	// Url
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ApiOAuthSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsResponse)(nil)).Elem()
}

func (i ApiOAuthSettingsResponseArgs) ToApiOAuthSettingsResponseOutput() ApiOAuthSettingsResponseOutput {
	return i.ToApiOAuthSettingsResponseOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsResponseArgs) ToApiOAuthSettingsResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsResponseOutput)
}

func (i ApiOAuthSettingsResponseArgs) ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput {
	return i.ToApiOAuthSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsResponseArgs) ToApiOAuthSettingsResponsePtrOutputWithContext(ctx context.Context) ApiOAuthSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsResponseOutput).ToApiOAuthSettingsResponsePtrOutputWithContext(ctx)
}

// ApiOAuthSettingsResponsePtrInput is an input type that accepts ApiOAuthSettingsResponseArgs, ApiOAuthSettingsResponsePtr and ApiOAuthSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsResponsePtrInput` via:
//
//          ApiOAuthSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ApiOAuthSettingsResponsePtrInput interface {
	pulumi.Input

	ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput
	ToApiOAuthSettingsResponsePtrOutputWithContext(context.Context) ApiOAuthSettingsResponsePtrOutput
}

type apiOAuthSettingsResponsePtrType ApiOAuthSettingsResponseArgs

func ApiOAuthSettingsResponsePtr(v *ApiOAuthSettingsResponseArgs) ApiOAuthSettingsResponsePtrInput {
	return (*apiOAuthSettingsResponsePtrType)(v)
}

func (*apiOAuthSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettingsResponse)(nil)).Elem()
}

func (i *apiOAuthSettingsResponsePtrType) ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput {
	return i.ToApiOAuthSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *apiOAuthSettingsResponsePtrType) ToApiOAuthSettingsResponsePtrOutputWithContext(ctx context.Context) ApiOAuthSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsResponsePtrOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponseOutput() ApiOAuthSettingsResponseOutput {
	return o
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsResponseOutput {
	return o
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput {
	return o.ToApiOAuthSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponsePtrOutputWithContext(ctx context.Context) ApiOAuthSettingsResponsePtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *ApiOAuthSettingsResponse {
		return &v
	}).(ApiOAuthSettingsResponsePtrOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsResponseOutput) CustomParameters() ApiOAuthSettingsParameterResponseMapOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) map[string]ApiOAuthSettingsParameterResponse {
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterResponseMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsResponseOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsResponseOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsResponseOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ApiOAuthSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettingsResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsResponsePtrOutput) ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput {
	return o
}

func (o ApiOAuthSettingsResponsePtrOutput) ToApiOAuthSettingsResponsePtrOutputWithContext(ctx context.Context) ApiOAuthSettingsResponsePtrOutput {
	return o
}

func (o ApiOAuthSettingsResponsePtrOutput) Elem() ApiOAuthSettingsResponseOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) ApiOAuthSettingsResponse { return *v }).(ApiOAuthSettingsResponseOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsResponsePtrOutput) CustomParameters() ApiOAuthSettingsParameterResponseMapOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) map[string]ApiOAuthSettingsParameterResponse {
		if v == nil {
			return nil
		}
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterResponseMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsResponsePtrOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityProvider
	}).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsResponsePtrOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsResponsePtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

type ApiReference struct {
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Resource reference id
	Id *string `pulumi:"id"`
	// The name of the API
	Name *string `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ApiReferenceInput is an input type that accepts ApiReferenceArgs and ApiReferenceOutput values.
// You can construct a concrete instance of `ApiReferenceInput` via:
//
//          ApiReferenceArgs{...}
type ApiReferenceInput interface {
	pulumi.Input

	ToApiReferenceOutput() ApiReferenceOutput
	ToApiReferenceOutputWithContext(context.Context) ApiReferenceOutput
}

type ApiReferenceArgs struct {
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the API
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApiReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReference)(nil)).Elem()
}

func (i ApiReferenceArgs) ToApiReferenceOutput() ApiReferenceOutput {
	return i.ToApiReferenceOutputWithContext(context.Background())
}

func (i ApiReferenceArgs) ToApiReferenceOutputWithContext(ctx context.Context) ApiReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceOutput)
}

func (i ApiReferenceArgs) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return i.ToApiReferencePtrOutputWithContext(context.Background())
}

func (i ApiReferenceArgs) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceOutput).ToApiReferencePtrOutputWithContext(ctx)
}

// ApiReferencePtrInput is an input type that accepts ApiReferenceArgs, ApiReferencePtr and ApiReferencePtrOutput values.
// You can construct a concrete instance of `ApiReferencePtrInput` via:
//
//          ApiReferenceArgs{...}
//
//  or:
//
//          nil
type ApiReferencePtrInput interface {
	pulumi.Input

	ToApiReferencePtrOutput() ApiReferencePtrOutput
	ToApiReferencePtrOutputWithContext(context.Context) ApiReferencePtrOutput
}

type apiReferencePtrType ApiReferenceArgs

func ApiReferencePtr(v *ApiReferenceArgs) ApiReferencePtrInput {
	return (*apiReferencePtrType)(v)
}

func (*apiReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReference)(nil)).Elem()
}

func (i *apiReferencePtrType) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return i.ToApiReferencePtrOutputWithContext(context.Background())
}

func (i *apiReferencePtrType) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferencePtrOutput)
}

type ApiReferenceOutput struct{ *pulumi.OutputState }

func (ApiReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReference)(nil)).Elem()
}

func (o ApiReferenceOutput) ToApiReferenceOutput() ApiReferenceOutput {
	return o
}

func (o ApiReferenceOutput) ToApiReferenceOutputWithContext(ctx context.Context) ApiReferenceOutput {
	return o
}

func (o ApiReferenceOutput) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return o.ToApiReferencePtrOutputWithContext(context.Background())
}

func (o ApiReferenceOutput) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return o.ApplyT(func(v ApiReference) *ApiReference {
		return &v
	}).(ApiReferencePtrOutput)
}

// Brand color
func (o ApiReferenceOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiReference) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiReferencePtrOutput struct{ *pulumi.OutputState }

func (ApiReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReference)(nil)).Elem()
}

func (o ApiReferencePtrOutput) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return o
}

func (o ApiReferencePtrOutput) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return o
}

func (o ApiReferencePtrOutput) Elem() ApiReferenceOutput {
	return o.ApplyT(func(v *ApiReference) ApiReference { return *v }).(ApiReferenceOutput)
}

// Brand color
func (o ApiReferencePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferencePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferencePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferencePtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferencePtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiReference) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ApiReferenceResponse struct {
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Resource reference id
	Id *string `pulumi:"id"`
	// The name of the API
	Name *string `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ApiReferenceResponseInput is an input type that accepts ApiReferenceResponseArgs and ApiReferenceResponseOutput values.
// You can construct a concrete instance of `ApiReferenceResponseInput` via:
//
//          ApiReferenceResponseArgs{...}
type ApiReferenceResponseInput interface {
	pulumi.Input

	ToApiReferenceResponseOutput() ApiReferenceResponseOutput
	ToApiReferenceResponseOutputWithContext(context.Context) ApiReferenceResponseOutput
}

type ApiReferenceResponseArgs struct {
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the API
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApiReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReferenceResponse)(nil)).Elem()
}

func (i ApiReferenceResponseArgs) ToApiReferenceResponseOutput() ApiReferenceResponseOutput {
	return i.ToApiReferenceResponseOutputWithContext(context.Background())
}

func (i ApiReferenceResponseArgs) ToApiReferenceResponseOutputWithContext(ctx context.Context) ApiReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceResponseOutput)
}

func (i ApiReferenceResponseArgs) ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput {
	return i.ToApiReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ApiReferenceResponseArgs) ToApiReferenceResponsePtrOutputWithContext(ctx context.Context) ApiReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceResponseOutput).ToApiReferenceResponsePtrOutputWithContext(ctx)
}

// ApiReferenceResponsePtrInput is an input type that accepts ApiReferenceResponseArgs, ApiReferenceResponsePtr and ApiReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ApiReferenceResponsePtrInput` via:
//
//          ApiReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ApiReferenceResponsePtrInput interface {
	pulumi.Input

	ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput
	ToApiReferenceResponsePtrOutputWithContext(context.Context) ApiReferenceResponsePtrOutput
}

type apiReferenceResponsePtrType ApiReferenceResponseArgs

func ApiReferenceResponsePtr(v *ApiReferenceResponseArgs) ApiReferenceResponsePtrInput {
	return (*apiReferenceResponsePtrType)(v)
}

func (*apiReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReferenceResponse)(nil)).Elem()
}

func (i *apiReferenceResponsePtrType) ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput {
	return i.ToApiReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *apiReferenceResponsePtrType) ToApiReferenceResponsePtrOutputWithContext(ctx context.Context) ApiReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceResponsePtrOutput)
}

type ApiReferenceResponseOutput struct{ *pulumi.OutputState }

func (ApiReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReferenceResponse)(nil)).Elem()
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponseOutput() ApiReferenceResponseOutput {
	return o
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponseOutputWithContext(ctx context.Context) ApiReferenceResponseOutput {
	return o
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput {
	return o.ToApiReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponsePtrOutputWithContext(ctx context.Context) ApiReferenceResponsePtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *ApiReferenceResponse {
		return &v
	}).(ApiReferenceResponsePtrOutput)
}

// Brand color
func (o ApiReferenceResponseOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceResponseOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceResponseOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiReferenceResponse) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReferenceResponse)(nil)).Elem()
}

func (o ApiReferenceResponsePtrOutput) ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput {
	return o
}

func (o ApiReferenceResponsePtrOutput) ToApiReferenceResponsePtrOutputWithContext(ctx context.Context) ApiReferenceResponsePtrOutput {
	return o
}

func (o ApiReferenceResponsePtrOutput) Elem() ApiReferenceResponseOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) ApiReferenceResponse { return *v }).(ApiReferenceResponseOutput)
}

// Brand color
func (o ApiReferenceResponsePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceResponsePtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceResponsePtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The API backend service
type ApiResourceBackendService struct {
	// The service URL
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// ApiResourceBackendServiceInput is an input type that accepts ApiResourceBackendServiceArgs and ApiResourceBackendServiceOutput values.
// You can construct a concrete instance of `ApiResourceBackendServiceInput` via:
//
//          ApiResourceBackendServiceArgs{...}
type ApiResourceBackendServiceInput interface {
	pulumi.Input

	ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput
	ToApiResourceBackendServiceOutputWithContext(context.Context) ApiResourceBackendServiceOutput
}

// The API backend service
type ApiResourceBackendServiceArgs struct {
	// The service URL
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (ApiResourceBackendServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendService)(nil)).Elem()
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput {
	return i.ToApiResourceBackendServiceOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServiceOutputWithContext(ctx context.Context) ApiResourceBackendServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceOutput)
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return i.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceOutput).ToApiResourceBackendServicePtrOutputWithContext(ctx)
}

// ApiResourceBackendServicePtrInput is an input type that accepts ApiResourceBackendServiceArgs, ApiResourceBackendServicePtr and ApiResourceBackendServicePtrOutput values.
// You can construct a concrete instance of `ApiResourceBackendServicePtrInput` via:
//
//          ApiResourceBackendServiceArgs{...}
//
//  or:
//
//          nil
type ApiResourceBackendServicePtrInput interface {
	pulumi.Input

	ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput
	ToApiResourceBackendServicePtrOutputWithContext(context.Context) ApiResourceBackendServicePtrOutput
}

type apiResourceBackendServicePtrType ApiResourceBackendServiceArgs

func ApiResourceBackendServicePtr(v *ApiResourceBackendServiceArgs) ApiResourceBackendServicePtrInput {
	return (*apiResourceBackendServicePtrType)(v)
}

func (*apiResourceBackendServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendService)(nil)).Elem()
}

func (i *apiResourceBackendServicePtrType) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return i.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (i *apiResourceBackendServicePtrType) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServicePtrOutput)
}

// The API backend service
type ApiResourceBackendServiceOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendService)(nil)).Elem()
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput {
	return o
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServiceOutputWithContext(ctx context.Context) ApiResourceBackendServiceOutput {
	return o
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return o.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return o.ApplyT(func(v ApiResourceBackendService) *ApiResourceBackendService {
		return &v
	}).(ApiResourceBackendServicePtrOutput)
}

// The service URL
func (o ApiResourceBackendServiceOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceBackendService) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceBackendServicePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendService)(nil)).Elem()
}

func (o ApiResourceBackendServicePtrOutput) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return o
}

func (o ApiResourceBackendServicePtrOutput) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return o
}

func (o ApiResourceBackendServicePtrOutput) Elem() ApiResourceBackendServiceOutput {
	return o.ApplyT(func(v *ApiResourceBackendService) ApiResourceBackendService { return *v }).(ApiResourceBackendServiceOutput)
}

// The service URL
func (o ApiResourceBackendServicePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceBackendService) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// The API backend service
type ApiResourceBackendServiceResponse struct {
	// The service URL
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// ApiResourceBackendServiceResponseInput is an input type that accepts ApiResourceBackendServiceResponseArgs and ApiResourceBackendServiceResponseOutput values.
// You can construct a concrete instance of `ApiResourceBackendServiceResponseInput` via:
//
//          ApiResourceBackendServiceResponseArgs{...}
type ApiResourceBackendServiceResponseInput interface {
	pulumi.Input

	ToApiResourceBackendServiceResponseOutput() ApiResourceBackendServiceResponseOutput
	ToApiResourceBackendServiceResponseOutputWithContext(context.Context) ApiResourceBackendServiceResponseOutput
}

// The API backend service
type ApiResourceBackendServiceResponseArgs struct {
	// The service URL
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (ApiResourceBackendServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (i ApiResourceBackendServiceResponseArgs) ToApiResourceBackendServiceResponseOutput() ApiResourceBackendServiceResponseOutput {
	return i.ToApiResourceBackendServiceResponseOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceResponseArgs) ToApiResourceBackendServiceResponseOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceResponseOutput)
}

func (i ApiResourceBackendServiceResponseArgs) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return i.ToApiResourceBackendServiceResponsePtrOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceResponseArgs) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceResponseOutput).ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx)
}

// ApiResourceBackendServiceResponsePtrInput is an input type that accepts ApiResourceBackendServiceResponseArgs, ApiResourceBackendServiceResponsePtr and ApiResourceBackendServiceResponsePtrOutput values.
// You can construct a concrete instance of `ApiResourceBackendServiceResponsePtrInput` via:
//
//          ApiResourceBackendServiceResponseArgs{...}
//
//  or:
//
//          nil
type ApiResourceBackendServiceResponsePtrInput interface {
	pulumi.Input

	ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput
	ToApiResourceBackendServiceResponsePtrOutputWithContext(context.Context) ApiResourceBackendServiceResponsePtrOutput
}

type apiResourceBackendServiceResponsePtrType ApiResourceBackendServiceResponseArgs

func ApiResourceBackendServiceResponsePtr(v *ApiResourceBackendServiceResponseArgs) ApiResourceBackendServiceResponsePtrInput {
	return (*apiResourceBackendServiceResponsePtrType)(v)
}

func (*apiResourceBackendServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (i *apiResourceBackendServiceResponsePtrType) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return i.ToApiResourceBackendServiceResponsePtrOutputWithContext(context.Background())
}

func (i *apiResourceBackendServiceResponsePtrType) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceResponsePtrOutput)
}

// The API backend service
type ApiResourceBackendServiceResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutput() ApiResourceBackendServiceResponseOutput {
	return o
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponseOutput {
	return o
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return o.ToApiResourceBackendServiceResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceBackendServiceResponse) *ApiResourceBackendServiceResponse {
		return &v
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// The service URL
func (o ApiResourceBackendServiceResponseOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceBackendServiceResponse) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceBackendServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) Elem() ApiResourceBackendServiceResponseOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) ApiResourceBackendServiceResponse { return *v }).(ApiResourceBackendServiceResponseOutput)
}

// The service URL
func (o ApiResourceBackendServiceResponsePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// API Definitions
type ApiResourceDefinitions struct {
	// The modified swagger URL
	ModifiedSwaggerUrl *string `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl *string `pulumi:"originalSwaggerUrl"`
}

// ApiResourceDefinitionsInput is an input type that accepts ApiResourceDefinitionsArgs and ApiResourceDefinitionsOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsInput` via:
//
//          ApiResourceDefinitionsArgs{...}
type ApiResourceDefinitionsInput interface {
	pulumi.Input

	ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput
	ToApiResourceDefinitionsOutputWithContext(context.Context) ApiResourceDefinitionsOutput
}

// API Definitions
type ApiResourceDefinitionsArgs struct {
	// The modified swagger URL
	ModifiedSwaggerUrl pulumi.StringPtrInput `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl pulumi.StringPtrInput `pulumi:"originalSwaggerUrl"`
}

func (ApiResourceDefinitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitions)(nil)).Elem()
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput {
	return i.ToApiResourceDefinitionsOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsOutputWithContext(ctx context.Context) ApiResourceDefinitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsOutput)
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return i.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsOutput).ToApiResourceDefinitionsPtrOutputWithContext(ctx)
}

// ApiResourceDefinitionsPtrInput is an input type that accepts ApiResourceDefinitionsArgs, ApiResourceDefinitionsPtr and ApiResourceDefinitionsPtrOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsPtrInput` via:
//
//          ApiResourceDefinitionsArgs{...}
//
//  or:
//
//          nil
type ApiResourceDefinitionsPtrInput interface {
	pulumi.Input

	ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput
	ToApiResourceDefinitionsPtrOutputWithContext(context.Context) ApiResourceDefinitionsPtrOutput
}

type apiResourceDefinitionsPtrType ApiResourceDefinitionsArgs

func ApiResourceDefinitionsPtr(v *ApiResourceDefinitionsArgs) ApiResourceDefinitionsPtrInput {
	return (*apiResourceDefinitionsPtrType)(v)
}

func (*apiResourceDefinitionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitions)(nil)).Elem()
}

func (i *apiResourceDefinitionsPtrType) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return i.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (i *apiResourceDefinitionsPtrType) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsPtrOutput)
}

// API Definitions
type ApiResourceDefinitionsOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitions)(nil)).Elem()
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput {
	return o
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsOutputWithContext(ctx context.Context) ApiResourceDefinitionsOutput {
	return o
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return o.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitions) *ApiResourceDefinitions {
		return &v
	}).(ApiResourceDefinitionsPtrOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitions) *string { return v.ModifiedSwaggerUrl }).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitions) *string { return v.OriginalSwaggerUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitions)(nil)).Elem()
}

func (o ApiResourceDefinitionsPtrOutput) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return o
}

func (o ApiResourceDefinitionsPtrOutput) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return o
}

func (o ApiResourceDefinitionsPtrOutput) Elem() ApiResourceDefinitionsOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) ApiResourceDefinitions { return *v }).(ApiResourceDefinitionsOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsPtrOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsPtrOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.OriginalSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// API Definitions
type ApiResourceDefinitionsResponse struct {
	// The modified swagger URL
	ModifiedSwaggerUrl *string `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl *string `pulumi:"originalSwaggerUrl"`
}

// ApiResourceDefinitionsResponseInput is an input type that accepts ApiResourceDefinitionsResponseArgs and ApiResourceDefinitionsResponseOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsResponseInput` via:
//
//          ApiResourceDefinitionsResponseArgs{...}
type ApiResourceDefinitionsResponseInput interface {
	pulumi.Input

	ToApiResourceDefinitionsResponseOutput() ApiResourceDefinitionsResponseOutput
	ToApiResourceDefinitionsResponseOutputWithContext(context.Context) ApiResourceDefinitionsResponseOutput
}

// API Definitions
type ApiResourceDefinitionsResponseArgs struct {
	// The modified swagger URL
	ModifiedSwaggerUrl pulumi.StringPtrInput `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl pulumi.StringPtrInput `pulumi:"originalSwaggerUrl"`
}

func (ApiResourceDefinitionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (i ApiResourceDefinitionsResponseArgs) ToApiResourceDefinitionsResponseOutput() ApiResourceDefinitionsResponseOutput {
	return i.ToApiResourceDefinitionsResponseOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsResponseArgs) ToApiResourceDefinitionsResponseOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsResponseOutput)
}

func (i ApiResourceDefinitionsResponseArgs) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return i.ToApiResourceDefinitionsResponsePtrOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsResponseArgs) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsResponseOutput).ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx)
}

// ApiResourceDefinitionsResponsePtrInput is an input type that accepts ApiResourceDefinitionsResponseArgs, ApiResourceDefinitionsResponsePtr and ApiResourceDefinitionsResponsePtrOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsResponsePtrInput` via:
//
//          ApiResourceDefinitionsResponseArgs{...}
//
//  or:
//
//          nil
type ApiResourceDefinitionsResponsePtrInput interface {
	pulumi.Input

	ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput
	ToApiResourceDefinitionsResponsePtrOutputWithContext(context.Context) ApiResourceDefinitionsResponsePtrOutput
}

type apiResourceDefinitionsResponsePtrType ApiResourceDefinitionsResponseArgs

func ApiResourceDefinitionsResponsePtr(v *ApiResourceDefinitionsResponseArgs) ApiResourceDefinitionsResponsePtrInput {
	return (*apiResourceDefinitionsResponsePtrType)(v)
}

func (*apiResourceDefinitionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (i *apiResourceDefinitionsResponsePtrType) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return i.ToApiResourceDefinitionsResponsePtrOutputWithContext(context.Background())
}

func (i *apiResourceDefinitionsResponsePtrType) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsResponsePtrOutput)
}

// API Definitions
type ApiResourceDefinitionsResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutput() ApiResourceDefinitionsResponseOutput {
	return o
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponseOutput {
	return o
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return o.ToApiResourceDefinitionsResponsePtrOutputWithContext(context.Background())
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *ApiResourceDefinitionsResponse {
		return &v
	}).(ApiResourceDefinitionsResponsePtrOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsResponseOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.ModifiedSwaggerUrl }).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsResponseOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.OriginalSwaggerUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceDefinitionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) Elem() ApiResourceDefinitionsResponseOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) ApiResourceDefinitionsResponse { return *v }).(ApiResourceDefinitionsResponseOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsResponsePtrOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsResponsePtrOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginalSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponse struct {
	Id string `pulumi:"id"`
}

// ArmIdWrapperResponseInput is an input type that accepts ArmIdWrapperResponseArgs and ArmIdWrapperResponseOutput values.
// You can construct a concrete instance of `ArmIdWrapperResponseInput` via:
//
//          ArmIdWrapperResponseArgs{...}
type ArmIdWrapperResponseInput interface {
	pulumi.Input

	ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput
	ToArmIdWrapperResponseOutputWithContext(context.Context) ArmIdWrapperResponseOutput
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponseArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (ArmIdWrapperResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperResponse)(nil)).Elem()
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput {
	return i.ToArmIdWrapperResponseOutputWithContext(context.Background())
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponseOutputWithContext(ctx context.Context) ArmIdWrapperResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponseOutput)
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return i.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponseOutput).ToArmIdWrapperResponsePtrOutputWithContext(ctx)
}

// ArmIdWrapperResponsePtrInput is an input type that accepts ArmIdWrapperResponseArgs, ArmIdWrapperResponsePtr and ArmIdWrapperResponsePtrOutput values.
// You can construct a concrete instance of `ArmIdWrapperResponsePtrInput` via:
//
//          ArmIdWrapperResponseArgs{...}
//
//  or:
//
//          nil
type ArmIdWrapperResponsePtrInput interface {
	pulumi.Input

	ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput
	ToArmIdWrapperResponsePtrOutputWithContext(context.Context) ArmIdWrapperResponsePtrOutput
}

type armIdWrapperResponsePtrType ArmIdWrapperResponseArgs

func ArmIdWrapperResponsePtr(v *ArmIdWrapperResponseArgs) ArmIdWrapperResponsePtrInput {
	return (*armIdWrapperResponsePtrType)(v)
}

func (*armIdWrapperResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdWrapperResponse)(nil)).Elem()
}

func (i *armIdWrapperResponsePtrType) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return i.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (i *armIdWrapperResponsePtrType) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponsePtrOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponseOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutputWithContext(ctx context.Context) ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return o.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return o.ApplyT(func(v ArmIdWrapperResponse) *ArmIdWrapperResponse {
		return &v
	}).(ArmIdWrapperResponsePtrOutput)
}
func (o ArmIdWrapperResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdWrapperResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ArmIdWrapperResponsePtrOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) Elem() ArmIdWrapperResponseOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) ArmIdWrapperResponse { return *v }).(ArmIdWrapperResponseOutput)
}

func (o ArmIdWrapperResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActions struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomAction `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInput is an input type that accepts AutoHealActionsArgs and AutoHealActionsOutput values.
// You can construct a concrete instance of `AutoHealActionsInput` via:
//
//          AutoHealActionsArgs{...}
type AutoHealActionsInput interface {
	pulumi.Input

	ToAutoHealActionsOutput() AutoHealActionsOutput
	ToAutoHealActionsOutputWithContext(context.Context) AutoHealActionsOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionPtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return i.ToAutoHealActionsOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput)
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput).ToAutoHealActionsPtrOutputWithContext(ctx)
}

// AutoHealActionsPtrInput is an input type that accepts AutoHealActionsArgs, AutoHealActionsPtr and AutoHealActionsPtrOutput values.
// You can construct a concrete instance of `AutoHealActionsPtrInput` via:
//
//          AutoHealActionsArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsPtrInput interface {
	pulumi.Input

	ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput
	ToAutoHealActionsPtrOutputWithContext(context.Context) AutoHealActionsPtrOutput
}

type autoHealActionsPtrType AutoHealActionsArgs

func AutoHealActionsPtr(v *AutoHealActionsArgs) AutoHealActionsPtrInput {
	return (*autoHealActionsPtrType)(v)
}

func (*autoHealActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsOutput struct{ *pulumi.OutputState }

func (AutoHealActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealActions {
		return &v
	}).(AutoHealActionsPtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealCustomAction { return v.CustomAction }).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsPtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) Elem() AutoHealActionsOutput {
	return o.ApplyT(func(v *AutoHealActions) AutoHealActions { return *v }).(AutoHealActionsOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsPtrOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsPtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponse struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomActionResponse `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsResponseInput is an input type that accepts AutoHealActionsResponseArgs and AutoHealActionsResponseOutput values.
// You can construct a concrete instance of `AutoHealActionsResponseInput` via:
//
//          AutoHealActionsResponseArgs{...}
type AutoHealActionsResponseInput interface {
	pulumi.Input

	ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput
	ToAutoHealActionsResponseOutputWithContext(context.Context) AutoHealActionsResponseOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionResponsePtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return i.ToAutoHealActionsResponseOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput)
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput).ToAutoHealActionsResponsePtrOutputWithContext(ctx)
}

// AutoHealActionsResponsePtrInput is an input type that accepts AutoHealActionsResponseArgs, AutoHealActionsResponsePtr and AutoHealActionsResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealActionsResponsePtrInput` via:
//
//          AutoHealActionsResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsResponsePtrInput interface {
	pulumi.Input

	ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput
	ToAutoHealActionsResponsePtrOutputWithContext(context.Context) AutoHealActionsResponsePtrOutput
}

type autoHealActionsResponsePtrType AutoHealActionsResponseArgs

func AutoHealActionsResponsePtr(v *AutoHealActionsResponseArgs) AutoHealActionsResponsePtrInput {
	return (*autoHealActionsResponsePtrType)(v)
}

func (*autoHealActionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponsePtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealActionsResponse {
		return &v
	}).(AutoHealActionsResponsePtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponseOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponseOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealCustomActionResponse { return v.CustomAction }).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) Elem() AutoHealActionsResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) AutoHealActionsResponse { return *v }).(AutoHealActionsResponseOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponsePtrOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *AutoHealCustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomAction struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInput is an input type that accepts AutoHealCustomActionArgs and AutoHealCustomActionOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInput` via:
//
//          AutoHealCustomActionArgs{...}
type AutoHealCustomActionInput interface {
	pulumi.Input

	ToAutoHealCustomActionOutput() AutoHealCustomActionOutput
	ToAutoHealCustomActionOutputWithContext(context.Context) AutoHealCustomActionOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return i.ToAutoHealCustomActionOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput)
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput).ToAutoHealCustomActionPtrOutputWithContext(ctx)
}

// AutoHealCustomActionPtrInput is an input type that accepts AutoHealCustomActionArgs, AutoHealCustomActionPtr and AutoHealCustomActionPtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionPtrInput` via:
//
//          AutoHealCustomActionArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionPtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput
	ToAutoHealCustomActionPtrOutputWithContext(context.Context) AutoHealCustomActionPtrOutput
}

type autoHealCustomActionPtrType AutoHealCustomActionArgs

func AutoHealCustomActionPtr(v *AutoHealCustomActionArgs) AutoHealCustomActionPtrInput {
	return (*autoHealCustomActionPtrType)(v)
}

func (*autoHealCustomActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *AutoHealCustomAction {
		return &v
	}).(AutoHealCustomActionPtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionPtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) Elem() AutoHealCustomActionOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) AutoHealCustomAction { return *v }).(AutoHealCustomActionOutput)
}

// Executable to be run.
func (o AutoHealCustomActionPtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionPtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponse struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionResponseInput is an input type that accepts AutoHealCustomActionResponseArgs and AutoHealCustomActionResponseOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponseInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
type AutoHealCustomActionResponseInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput
	ToAutoHealCustomActionResponseOutputWithContext(context.Context) AutoHealCustomActionResponseOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return i.ToAutoHealCustomActionResponseOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput)
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput).ToAutoHealCustomActionResponsePtrOutputWithContext(ctx)
}

// AutoHealCustomActionResponsePtrInput is an input type that accepts AutoHealCustomActionResponseArgs, AutoHealCustomActionResponsePtr and AutoHealCustomActionResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponsePtrInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionResponsePtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput
	ToAutoHealCustomActionResponsePtrOutputWithContext(context.Context) AutoHealCustomActionResponsePtrOutput
}

type autoHealCustomActionResponsePtrType AutoHealCustomActionResponseArgs

func AutoHealCustomActionResponsePtr(v *AutoHealCustomActionResponseArgs) AutoHealCustomActionResponsePtrInput {
	return (*autoHealCustomActionResponsePtrType)(v)
}

func (*autoHealCustomActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponsePtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *AutoHealCustomActionResponse {
		return &v
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) Elem() AutoHealCustomActionResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) AutoHealCustomActionResponse { return *v }).(AutoHealCustomActionResponseOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRules struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActions `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggers `pulumi:"triggers"`
}

// AutoHealRulesInput is an input type that accepts AutoHealRulesArgs and AutoHealRulesOutput values.
// You can construct a concrete instance of `AutoHealRulesInput` via:
//
//          AutoHealRulesArgs{...}
type AutoHealRulesInput interface {
	pulumi.Input

	ToAutoHealRulesOutput() AutoHealRulesOutput
	ToAutoHealRulesOutputWithContext(context.Context) AutoHealRulesOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsPtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersPtrInput `pulumi:"triggers"`
}

func (AutoHealRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return i.ToAutoHealRulesOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput)
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput).ToAutoHealRulesPtrOutputWithContext(ctx)
}

// AutoHealRulesPtrInput is an input type that accepts AutoHealRulesArgs, AutoHealRulesPtr and AutoHealRulesPtrOutput values.
// You can construct a concrete instance of `AutoHealRulesPtrInput` via:
//
//          AutoHealRulesArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesPtrInput interface {
	pulumi.Input

	ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput
	ToAutoHealRulesPtrOutputWithContext(context.Context) AutoHealRulesPtrOutput
}

type autoHealRulesPtrType AutoHealRulesArgs

func AutoHealRulesPtr(v *AutoHealRulesArgs) AutoHealRulesPtrInput {
	return (*autoHealRulesPtrType)(v)
}

func (*autoHealRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesOutput struct{ *pulumi.OutputState }

func (AutoHealRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealRules {
		return &v
	}).(AutoHealRulesPtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealActions { return v.Actions }).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealTriggers { return v.Triggers }).(AutoHealTriggersPtrOutput)
}

type AutoHealRulesPtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) Elem() AutoHealRulesOutput {
	return o.ApplyT(func(v *AutoHealRules) AutoHealRules { return *v }).(AutoHealRulesOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesPtrOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealActions {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesPtrOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealTriggers {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponse struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActionsResponse `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggersResponse `pulumi:"triggers"`
}

// AutoHealRulesResponseInput is an input type that accepts AutoHealRulesResponseArgs and AutoHealRulesResponseOutput values.
// You can construct a concrete instance of `AutoHealRulesResponseInput` via:
//
//          AutoHealRulesResponseArgs{...}
type AutoHealRulesResponseInput interface {
	pulumi.Input

	ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput
	ToAutoHealRulesResponseOutputWithContext(context.Context) AutoHealRulesResponseOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsResponsePtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersResponsePtrInput `pulumi:"triggers"`
}

func (AutoHealRulesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return i.ToAutoHealRulesResponseOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput)
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput).ToAutoHealRulesResponsePtrOutputWithContext(ctx)
}

// AutoHealRulesResponsePtrInput is an input type that accepts AutoHealRulesResponseArgs, AutoHealRulesResponsePtr and AutoHealRulesResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealRulesResponsePtrInput` via:
//
//          AutoHealRulesResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesResponsePtrInput interface {
	pulumi.Input

	ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput
	ToAutoHealRulesResponsePtrOutputWithContext(context.Context) AutoHealRulesResponsePtrOutput
}

type autoHealRulesResponsePtrType AutoHealRulesResponseArgs

func AutoHealRulesResponsePtr(v *AutoHealRulesResponseArgs) AutoHealRulesResponsePtrInput {
	return (*autoHealRulesResponsePtrType)(v)
}

func (*autoHealRulesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponsePtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealRulesResponse {
		return &v
	}).(AutoHealRulesResponsePtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponseOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealActionsResponse { return v.Actions }).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponseOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealTriggersResponse { return v.Triggers }).(AutoHealTriggersResponsePtrOutput)
}

type AutoHealRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) Elem() AutoHealRulesResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) AutoHealRulesResponse { return *v }).(AutoHealRulesResponseOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponsePtrOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealActionsResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponsePtrOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealTriggersResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggers struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTrigger `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTrigger `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTrigger `pulumi:"statusCodes"`
}

// AutoHealTriggersInput is an input type that accepts AutoHealTriggersArgs and AutoHealTriggersOutput values.
// You can construct a concrete instance of `AutoHealTriggersInput` via:
//
//          AutoHealTriggersArgs{...}
type AutoHealTriggersInput interface {
	pulumi.Input

	ToAutoHealTriggersOutput() AutoHealTriggersOutput
	ToAutoHealTriggersOutputWithContext(context.Context) AutoHealTriggersOutput
}

// Triggers for auto-heal.
type AutoHealTriggersArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerPtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerPtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return i.ToAutoHealTriggersOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput)
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput).ToAutoHealTriggersPtrOutputWithContext(ctx)
}

// AutoHealTriggersPtrInput is an input type that accepts AutoHealTriggersArgs, AutoHealTriggersPtr and AutoHealTriggersPtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersPtrInput` via:
//
//          AutoHealTriggersArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersPtrInput interface {
	pulumi.Input

	ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput
	ToAutoHealTriggersPtrOutputWithContext(context.Context) AutoHealTriggersPtrOutput
}

type autoHealTriggersPtrType AutoHealTriggersArgs

func AutoHealTriggersPtr(v *AutoHealTriggersArgs) AutoHealTriggersPtrInput {
	return (*autoHealTriggersPtrType)(v)
}

func (*autoHealTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersPtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *AutoHealTriggers {
		return &v
	}).(AutoHealTriggersPtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *RequestsBasedTrigger { return v.Requests }).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *SlowRequestsBasedTrigger { return v.SlowRequests }).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesBasedTrigger { return v.StatusCodes }).(StatusCodesBasedTriggerArrayOutput)
}

type AutoHealTriggersPtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) Elem() AutoHealTriggersOutput {
	return o.ApplyT(func(v *AutoHealTriggers) AutoHealTriggers { return *v }).(AutoHealTriggersOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersPtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersPtrOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *RequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersPtrOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersPtrOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerArrayOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponse struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTriggerResponse `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTriggerResponse `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTriggerResponse `pulumi:"statusCodes"`
}

// AutoHealTriggersResponseInput is an input type that accepts AutoHealTriggersResponseArgs and AutoHealTriggersResponseOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponseInput` via:
//
//          AutoHealTriggersResponseArgs{...}
type AutoHealTriggersResponseInput interface {
	pulumi.Input

	ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput
	ToAutoHealTriggersResponseOutputWithContext(context.Context) AutoHealTriggersResponseOutput
}

// Triggers for auto-heal.
type AutoHealTriggersResponseArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerResponsePtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerResponsePtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerResponseArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return i.ToAutoHealTriggersResponseOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput)
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput).ToAutoHealTriggersResponsePtrOutputWithContext(ctx)
}

// AutoHealTriggersResponsePtrInput is an input type that accepts AutoHealTriggersResponseArgs, AutoHealTriggersResponsePtr and AutoHealTriggersResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponsePtrInput` via:
//
//          AutoHealTriggersResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersResponsePtrInput interface {
	pulumi.Input

	ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput
	ToAutoHealTriggersResponsePtrOutputWithContext(context.Context) AutoHealTriggersResponsePtrOutput
}

type autoHealTriggersResponsePtrType AutoHealTriggersResponseArgs

func AutoHealTriggersResponsePtr(v *AutoHealTriggersResponseArgs) AutoHealTriggersResponsePtrInput {
	return (*autoHealTriggersResponsePtrType)(v)
}

func (*autoHealTriggersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *AutoHealTriggersResponse {
		return &v
	}).(AutoHealTriggersResponsePtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponseOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *RequestsBasedTriggerResponse { return v.Requests }).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponseOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponseOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse { return v.StatusCodes }).(StatusCodesBasedTriggerResponseArrayOutput)
}

type AutoHealTriggersResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) Elem() AutoHealTriggersResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) AutoHealTriggersResponse { return *v }).(AutoHealTriggersResponseOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponsePtrOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *RequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponse struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// State of the storage account.
	State string `pulumi:"state"`
	// Type of storage.
	Type *string `pulumi:"type"`
}

// AzureStorageInfoValueResponseInput is an input type that accepts AzureStorageInfoValueResponseArgs and AzureStorageInfoValueResponseOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueResponseInput` via:
//
//          AzureStorageInfoValueResponseArgs{...}
type AzureStorageInfoValueResponseInput interface {
	pulumi.Input

	ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput
	ToAzureStorageInfoValueResponseOutputWithContext(context.Context) AzureStorageInfoValueResponseOutput
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponseArgs struct {
	// Access key for the storage account.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// State of the storage account.
	State pulumi.StringInput `pulumi:"state"`
	// Type of storage.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureStorageInfoValueResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueResponseArgs) ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput {
	return i.ToAzureStorageInfoValueResponseOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueResponseArgs) ToAzureStorageInfoValueResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueResponseOutput)
}

// AzureStorageInfoValueResponseMapInput is an input type that accepts AzureStorageInfoValueResponseMap and AzureStorageInfoValueResponseMapOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueResponseMapInput` via:
//
//          AzureStorageInfoValueResponseMap{ "key": AzureStorageInfoValueResponseArgs{...} }
type AzureStorageInfoValueResponseMapInput interface {
	pulumi.Input

	ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput
	ToAzureStorageInfoValueResponseMapOutputWithContext(context.Context) AzureStorageInfoValueResponseMapOutput
}

type AzureStorageInfoValueResponseMap map[string]AzureStorageInfoValueResponseInput

func (AzureStorageInfoValueResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueResponseMap) ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput {
	return i.ToAzureStorageInfoValueResponseMapOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueResponseMap) ToAzureStorageInfoValueResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueResponseMapOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput {
	return o
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueResponseOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueResponseOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// State of the storage account.
func (o AzureStorageInfoValueResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of storage.
func (o AzureStorageInfoValueResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureStorageInfoValueResponseMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValueResponse {
		return vs[0].(map[string]AzureStorageInfoValueResponse)[vs[1].(string)]
	}).(AzureStorageInfoValueResponseOutput)
}

// Backup description.
type BackupItemResponse struct {
	// Id of the backup.
	BackupId int `pulumi:"backupId"`
	// Name of the blob which contains data for this backup.
	BlobName string `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId string `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created string `pulumi:"created"`
	// List of databases included in the backup.
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp string `pulumi:"finishedTimeStamp"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp string `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log string `pulumi:"log"`
	// Resource Name.
	Name string `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled bool `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes int `pulumi:"sizeInBytes"`
	// Backup status.
	Status string `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
	// Resource type.
	Type string `pulumi:"type"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes int `pulumi:"websiteSizeInBytes"`
}

// BackupItemResponseInput is an input type that accepts BackupItemResponseArgs and BackupItemResponseOutput values.
// You can construct a concrete instance of `BackupItemResponseInput` via:
//
//          BackupItemResponseArgs{...}
type BackupItemResponseInput interface {
	pulumi.Input

	ToBackupItemResponseOutput() BackupItemResponseOutput
	ToBackupItemResponseOutputWithContext(context.Context) BackupItemResponseOutput
}

// Backup description.
type BackupItemResponseArgs struct {
	// Id of the backup.
	BackupId pulumi.IntInput `pulumi:"backupId"`
	// Name of the blob which contains data for this backup.
	BlobName pulumi.StringInput `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created pulumi.StringInput `pulumi:"created"`
	// List of databases included in the backup.
	Databases DatabaseBackupSettingResponseArrayInput `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp pulumi.StringInput `pulumi:"finishedTimeStamp"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp pulumi.StringInput `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log pulumi.StringInput `pulumi:"log"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled pulumi.BoolInput `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes pulumi.IntInput `pulumi:"sizeInBytes"`
	// Backup status.
	Status pulumi.StringInput `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl pulumi.StringInput `pulumi:"storageAccountUrl"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes pulumi.IntInput `pulumi:"websiteSizeInBytes"`
}

func (BackupItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponse)(nil)).Elem()
}

func (i BackupItemResponseArgs) ToBackupItemResponseOutput() BackupItemResponseOutput {
	return i.ToBackupItemResponseOutputWithContext(context.Background())
}

func (i BackupItemResponseArgs) ToBackupItemResponseOutputWithContext(ctx context.Context) BackupItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemResponseOutput)
}

// BackupItemResponseArrayInput is an input type that accepts BackupItemResponseArray and BackupItemResponseArrayOutput values.
// You can construct a concrete instance of `BackupItemResponseArrayInput` via:
//
//          BackupItemResponseArray{ BackupItemResponseArgs{...} }
type BackupItemResponseArrayInput interface {
	pulumi.Input

	ToBackupItemResponseArrayOutput() BackupItemResponseArrayOutput
	ToBackupItemResponseArrayOutputWithContext(context.Context) BackupItemResponseArrayOutput
}

type BackupItemResponseArray []BackupItemResponseInput

func (BackupItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupItemResponse)(nil)).Elem()
}

func (i BackupItemResponseArray) ToBackupItemResponseArrayOutput() BackupItemResponseArrayOutput {
	return i.ToBackupItemResponseArrayOutputWithContext(context.Background())
}

func (i BackupItemResponseArray) ToBackupItemResponseArrayOutputWithContext(ctx context.Context) BackupItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemResponseArrayOutput)
}

// Backup description.
type BackupItemResponseOutput struct{ *pulumi.OutputState }

func (BackupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponse)(nil)).Elem()
}

func (o BackupItemResponseOutput) ToBackupItemResponseOutput() BackupItemResponseOutput {
	return o
}

func (o BackupItemResponseOutput) ToBackupItemResponseOutputWithContext(ctx context.Context) BackupItemResponseOutput {
	return o
}

// Id of the backup.
func (o BackupItemResponseOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponse) int { return v.BackupId }).(pulumi.IntOutput)
}

// Name of the blob which contains data for this backup.
func (o BackupItemResponseOutput) BlobName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.BlobName }).(pulumi.StringOutput)
}

// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
func (o BackupItemResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// Timestamp of the backup creation.
func (o BackupItemResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Created }).(pulumi.StringOutput)
}

// List of databases included in the backup.
func (o BackupItemResponseOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupItemResponse) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// Timestamp when this backup finished.
func (o BackupItemResponseOutput) FinishedTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.FinishedTimeStamp }).(pulumi.StringOutput)
}

// Resource Id.
func (o BackupItemResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o BackupItemResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Timestamp of a last restore operation which used this backup.
func (o BackupItemResponseOutput) LastRestoreTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.LastRestoreTimeStamp }).(pulumi.StringOutput)
}

// Details regarding this backup. Might contain an error message.
func (o BackupItemResponseOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Log }).(pulumi.StringOutput)
}

// Resource Name.
func (o BackupItemResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Name }).(pulumi.StringOutput)
}

// True if this backup has been created due to a schedule being triggered.
func (o BackupItemResponseOutput) Scheduled() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupItemResponse) bool { return v.Scheduled }).(pulumi.BoolOutput)
}

// Size of the backup in bytes.
func (o BackupItemResponseOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponse) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

// Backup status.
func (o BackupItemResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Status }).(pulumi.StringOutput)
}

// SAS URL for the storage account container which contains this backup.
func (o BackupItemResponseOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

// Resource type.
func (o BackupItemResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Size of the original web app which has been backed up.
func (o BackupItemResponseOutput) WebsiteSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponse) int { return v.WebsiteSizeInBytes }).(pulumi.IntOutput)
}

type BackupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupItemResponse)(nil)).Elem()
}

func (o BackupItemResponseArrayOutput) ToBackupItemResponseArrayOutput() BackupItemResponseArrayOutput {
	return o
}

func (o BackupItemResponseArrayOutput) ToBackupItemResponseArrayOutputWithContext(ctx context.Context) BackupItemResponseArrayOutput {
	return o
}

func (o BackupItemResponseArrayOutput) Index(i pulumi.IntInput) BackupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupItemResponse {
		return vs[0].([]BackupItemResponse)[vs[1].(int)]
	}).(BackupItemResponseOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupSchedule struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleInput is an input type that accepts BackupScheduleArgs and BackupScheduleOutput values.
// You can construct a concrete instance of `BackupScheduleInput` via:
//
//          BackupScheduleArgs{...}
type BackupScheduleInput interface {
	pulumi.Input

	ToBackupScheduleOutput() BackupScheduleOutput
	ToBackupScheduleOutputWithContext(context.Context) BackupScheduleOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (i BackupScheduleArgs) ToBackupScheduleOutput() BackupScheduleOutput {
	return i.ToBackupScheduleOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleOutput struct{ *pulumi.OutputState }

func (BackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (o BackupScheduleOutput) ToBackupScheduleOutput() BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSchedule) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupSchedule) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponse struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleResponseInput is an input type that accepts BackupScheduleResponseArgs and BackupScheduleResponseOutput values.
// You can construct a concrete instance of `BackupScheduleResponseInput` via:
//
//          BackupScheduleResponseArgs{...}
type BackupScheduleResponseInput interface {
	pulumi.Input

	ToBackupScheduleResponseOutput() BackupScheduleResponseOutput
	ToBackupScheduleResponseOutputWithContext(context.Context) BackupScheduleResponseOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime pulumi.StringInput `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return i.ToBackupScheduleResponseOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponseOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponseOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponseOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupScheduleResponse) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleResponseOutput) LastExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.LastExecutionTime }).(pulumi.StringOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleResponseOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type Capability struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityResponseInput is an input type that accepts CapabilityResponseArgs and CapabilityResponseOutput values.
// You can construct a concrete instance of `CapabilityResponseInput` via:
//
//          CapabilityResponseArgs{...}
type CapabilityResponseInput interface {
	pulumi.Input

	ToCapabilityResponseOutput() CapabilityResponseOutput
	ToCapabilityResponseOutputWithContext(context.Context) CapabilityResponseOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return i.ToCapabilityResponseOutputWithContext(context.Background())
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseOutput)
}

// CapabilityResponseArrayInput is an input type that accepts CapabilityResponseArray and CapabilityResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityResponseArrayInput` via:
//
//          CapabilityResponseArray{ CapabilityResponseArgs{...} }
type CapabilityResponseArrayInput interface {
	pulumi.Input

	ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput
	ToCapabilityResponseArrayOutputWithContext(context.Context) CapabilityResponseArrayOutput
}

type CapabilityResponseArray []CapabilityResponseInput

func (CapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return i.ToCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// Information needed for cloning operation.
type CloningInfo struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInput is an input type that accepts CloningInfoArgs and CloningInfoOutput values.
// You can construct a concrete instance of `CloningInfoInput` via:
//
//          CloningInfoArgs{...}
type CloningInfoInput interface {
	pulumi.Input

	ToCloningInfoOutput() CloningInfoOutput
	ToCloningInfoOutputWithContext(context.Context) CloningInfoOutput
}

// Information needed for cloning operation.
type CloningInfoArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (i CloningInfoArgs) ToCloningInfoOutput() CloningInfoOutput {
	return i.ToCloningInfoOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput)
}

func (i CloningInfoArgs) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput).ToCloningInfoPtrOutputWithContext(ctx)
}

// CloningInfoPtrInput is an input type that accepts CloningInfoArgs, CloningInfoPtr and CloningInfoPtrOutput values.
// You can construct a concrete instance of `CloningInfoPtrInput` via:
//
//          CloningInfoArgs{...}
//
//  or:
//
//          nil
type CloningInfoPtrInput interface {
	pulumi.Input

	ToCloningInfoPtrOutput() CloningInfoPtrOutput
	ToCloningInfoPtrOutputWithContext(context.Context) CloningInfoPtrOutput
}

type cloningInfoPtrType CloningInfoArgs

func CloningInfoPtr(v *CloningInfoArgs) CloningInfoPtrInput {
	return (*cloningInfoPtrType)(v)
}

func (*cloningInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoOutput struct{ *pulumi.OutputState }

func (CloningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (o CloningInfoOutput) ToCloningInfoOutput() CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (o CloningInfoOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o.ApplyT(func(v CloningInfo) *CloningInfo {
		return &v
	}).(CloningInfoPtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfo) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfo) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoPtrOutput struct{ *pulumi.OutputState }

func (CloningInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) Elem() CloningInfoOutput {
	return o.ApplyT(func(v *CloningInfo) CloningInfo { return *v }).(CloningInfoOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoPtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoPtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoPtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoPtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoPtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoPtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoPtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponse struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoResponseInput is an input type that accepts CloningInfoResponseArgs and CloningInfoResponseOutput values.
// You can construct a concrete instance of `CloningInfoResponseInput` via:
//
//          CloningInfoResponseArgs{...}
type CloningInfoResponseInput interface {
	pulumi.Input

	ToCloningInfoResponseOutput() CloningInfoResponseOutput
	ToCloningInfoResponseOutputWithContext(context.Context) CloningInfoResponseOutput
}

// Information needed for cloning operation.
type CloningInfoResponseArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return i.ToCloningInfoResponseOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput)
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput).ToCloningInfoResponsePtrOutputWithContext(ctx)
}

// CloningInfoResponsePtrInput is an input type that accepts CloningInfoResponseArgs, CloningInfoResponsePtr and CloningInfoResponsePtrOutput values.
// You can construct a concrete instance of `CloningInfoResponsePtrInput` via:
//
//          CloningInfoResponseArgs{...}
//
//  or:
//
//          nil
type CloningInfoResponsePtrInput interface {
	pulumi.Input

	ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput
	ToCloningInfoResponsePtrOutputWithContext(context.Context) CloningInfoResponsePtrOutput
}

type cloningInfoResponsePtrType CloningInfoResponseArgs

func CloningInfoResponsePtr(v *CloningInfoResponseArgs) CloningInfoResponsePtrInput {
	return (*cloningInfoResponsePtrType)(v)
}

func (*cloningInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponsePtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponseOutput struct{ *pulumi.OutputState }

func (CloningInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *CloningInfoResponse {
		return &v
	}).(CloningInfoResponsePtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponseOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfoResponse) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponseOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponseOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponseOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponseOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfoResponse) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponseOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponseOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponseOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CloningInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) Elem() CloningInfoResponseOutput {
	return o.ApplyT(func(v *CloningInfoResponse) CloningInfoResponse { return *v }).(CloningInfoResponseOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponsePtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponsePtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponsePtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponsePtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponsePtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponsePtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Database connection string information.
type ConnStringInfo struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoInput is an input type that accepts ConnStringInfoArgs and ConnStringInfoOutput values.
// You can construct a concrete instance of `ConnStringInfoInput` via:
//
//          ConnStringInfoArgs{...}
type ConnStringInfoInput interface {
	pulumi.Input

	ToConnStringInfoOutput() ConnStringInfoOutput
	ToConnStringInfoOutputWithContext(context.Context) ConnStringInfoOutput
}

// Database connection string information.
type ConnStringInfoArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArgs) ToConnStringInfoOutput() ConnStringInfoOutput {
	return i.ToConnStringInfoOutputWithContext(context.Background())
}

func (i ConnStringInfoArgs) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoOutput)
}

// ConnStringInfoArrayInput is an input type that accepts ConnStringInfoArray and ConnStringInfoArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoArrayInput` via:
//
//          ConnStringInfoArray{ ConnStringInfoArgs{...} }
type ConnStringInfoArrayInput interface {
	pulumi.Input

	ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput
	ToConnStringInfoArrayOutputWithContext(context.Context) ConnStringInfoArrayOutput
}

type ConnStringInfoArray []ConnStringInfoInput

func (ConnStringInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return i.ToConnStringInfoArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoArrayOutput)
}

// Database connection string information.
type ConnStringInfoOutput struct{ *pulumi.OutputState }

func (ConnStringInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoOutput) ToConnStringInfoOutput() ConnStringInfoOutput {
	return o
}

func (o ConnStringInfoOutput) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) Index(i pulumi.IntInput) ConnStringInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfo {
		return vs[0].([]ConnStringInfo)[vs[1].(int)]
	}).(ConnStringInfoOutput)
}

// Database connection string information.
type ConnStringInfoResponse struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoResponseInput is an input type that accepts ConnStringInfoResponseArgs and ConnStringInfoResponseOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseInput` via:
//
//          ConnStringInfoResponseArgs{...}
type ConnStringInfoResponseInput interface {
	pulumi.Input

	ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput
	ToConnStringInfoResponseOutputWithContext(context.Context) ConnStringInfoResponseOutput
}

// Database connection string information.
type ConnStringInfoResponseArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return i.ToConnStringInfoResponseOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseOutput)
}

// ConnStringInfoResponseArrayInput is an input type that accepts ConnStringInfoResponseArray and ConnStringInfoResponseArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseArrayInput` via:
//
//          ConnStringInfoResponseArray{ ConnStringInfoResponseArgs{...} }
type ConnStringInfoResponseArrayInput interface {
	pulumi.Input

	ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput
	ToConnStringInfoResponseArrayOutputWithContext(context.Context) ConnStringInfoResponseArrayOutput
}

type ConnStringInfoResponseArray []ConnStringInfoResponseInput

func (ConnStringInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return i.ToConnStringInfoResponseArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseArrayOutput)
}

// Database connection string information.
type ConnStringInfoResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return o
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoResponse {
		return vs[0].([]ConnStringInfoResponse)[vs[1].(int)]
	}).(ConnStringInfoResponseOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponse struct {
	// Type of database.
	Type string `pulumi:"type"`
	// Value of pair.
	Value string `pulumi:"value"`
}

// ConnStringValueTypePairResponseInput is an input type that accepts ConnStringValueTypePairResponseArgs and ConnStringValueTypePairResponseOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairResponseInput` via:
//
//          ConnStringValueTypePairResponseArgs{...}
type ConnStringValueTypePairResponseInput interface {
	pulumi.Input

	ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput
	ToConnStringValueTypePairResponseOutputWithContext(context.Context) ConnStringValueTypePairResponseOutput
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponseArgs struct {
	// Type of database.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnStringValueTypePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairResponseArgs) ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput {
	return i.ToConnStringValueTypePairResponseOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairResponseArgs) ToConnStringValueTypePairResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairResponseOutput)
}

// ConnStringValueTypePairResponseMapInput is an input type that accepts ConnStringValueTypePairResponseMap and ConnStringValueTypePairResponseMapOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairResponseMapInput` via:
//
//          ConnStringValueTypePairResponseMap{ "key": ConnStringValueTypePairResponseArgs{...} }
type ConnStringValueTypePairResponseMapInput interface {
	pulumi.Input

	ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput
	ToConnStringValueTypePairResponseMapOutputWithContext(context.Context) ConnStringValueTypePairResponseMapOutput
}

type ConnStringValueTypePairResponseMap map[string]ConnStringValueTypePairResponseInput

func (ConnStringValueTypePairResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairResponseMap) ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput {
	return i.ToConnStringValueTypePairResponseMapOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairResponseMap) ToConnStringValueTypePairResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairResponseMapOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponseOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput {
	return o
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseOutput {
	return o
}

// Type of database.
func (o ConnStringValueTypePairResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Value of pair.
func (o ConnStringValueTypePairResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ConnStringValueTypePairResponseMapOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) MapIndex(k pulumi.StringInput) ConnStringValueTypePairResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnStringValueTypePairResponse {
		return vs[0].(map[string]ConnStringValueTypePairResponse)[vs[1].(string)]
	}).(ConnStringValueTypePairResponseOutput)
}

// Connection error
type ConnectionError struct {
	// Code of the status
	Code *string `pulumi:"code"`
	// Resource ETag
	Etag *string `pulumi:"etag"`
	// Resource location
	Location *string `pulumi:"location"`
	// Description of the status
	Message *string `pulumi:"message"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// ConnectionErrorInput is an input type that accepts ConnectionErrorArgs and ConnectionErrorOutput values.
// You can construct a concrete instance of `ConnectionErrorInput` via:
//
//          ConnectionErrorArgs{...}
type ConnectionErrorInput interface {
	pulumi.Input

	ToConnectionErrorOutput() ConnectionErrorOutput
	ToConnectionErrorOutputWithContext(context.Context) ConnectionErrorOutput
}

// Connection error
type ConnectionErrorArgs struct {
	// Code of the status
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Resource ETag
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Description of the status
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ConnectionErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionError)(nil)).Elem()
}

func (i ConnectionErrorArgs) ToConnectionErrorOutput() ConnectionErrorOutput {
	return i.ToConnectionErrorOutputWithContext(context.Background())
}

func (i ConnectionErrorArgs) ToConnectionErrorOutputWithContext(ctx context.Context) ConnectionErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorOutput)
}

func (i ConnectionErrorArgs) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return i.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (i ConnectionErrorArgs) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorOutput).ToConnectionErrorPtrOutputWithContext(ctx)
}

// ConnectionErrorPtrInput is an input type that accepts ConnectionErrorArgs, ConnectionErrorPtr and ConnectionErrorPtrOutput values.
// You can construct a concrete instance of `ConnectionErrorPtrInput` via:
//
//          ConnectionErrorArgs{...}
//
//  or:
//
//          nil
type ConnectionErrorPtrInput interface {
	pulumi.Input

	ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput
	ToConnectionErrorPtrOutputWithContext(context.Context) ConnectionErrorPtrOutput
}

type connectionErrorPtrType ConnectionErrorArgs

func ConnectionErrorPtr(v *ConnectionErrorArgs) ConnectionErrorPtrInput {
	return (*connectionErrorPtrType)(v)
}

func (*connectionErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionError)(nil)).Elem()
}

func (i *connectionErrorPtrType) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return i.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (i *connectionErrorPtrType) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorPtrOutput)
}

// Connection error
type ConnectionErrorOutput struct{ *pulumi.OutputState }

func (ConnectionErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionError)(nil)).Elem()
}

func (o ConnectionErrorOutput) ToConnectionErrorOutput() ConnectionErrorOutput {
	return o
}

func (o ConnectionErrorOutput) ToConnectionErrorOutputWithContext(ctx context.Context) ConnectionErrorOutput {
	return o
}

func (o ConnectionErrorOutput) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return o.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (o ConnectionErrorOutput) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return o.ApplyT(func(v ConnectionError) *ConnectionError {
		return &v
	}).(ConnectionErrorPtrOutput)
}

// Code of the status
func (o ConnectionErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionError) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ConnectionErrorPtrOutput struct{ *pulumi.OutputState }

func (ConnectionErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionError)(nil)).Elem()
}

func (o ConnectionErrorPtrOutput) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return o
}

func (o ConnectionErrorPtrOutput) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return o
}

func (o ConnectionErrorPtrOutput) Elem() ConnectionErrorOutput {
	return o.ApplyT(func(v *ConnectionError) ConnectionError { return *v }).(ConnectionErrorOutput)
}

// Code of the status
func (o ConnectionErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionError) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Connection error
type ConnectionErrorResponse struct {
	// Code of the status
	Code *string `pulumi:"code"`
	// Resource ETag
	Etag *string `pulumi:"etag"`
	// Resource id
	Id string `pulumi:"id"`
	// Resource location
	Location *string `pulumi:"location"`
	// Description of the status
	Message *string `pulumi:"message"`
	// Resource name
	Name string `pulumi:"name"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// ConnectionErrorResponseInput is an input type that accepts ConnectionErrorResponseArgs and ConnectionErrorResponseOutput values.
// You can construct a concrete instance of `ConnectionErrorResponseInput` via:
//
//          ConnectionErrorResponseArgs{...}
type ConnectionErrorResponseInput interface {
	pulumi.Input

	ToConnectionErrorResponseOutput() ConnectionErrorResponseOutput
	ToConnectionErrorResponseOutputWithContext(context.Context) ConnectionErrorResponseOutput
}

// Connection error
type ConnectionErrorResponseArgs struct {
	// Code of the status
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Resource ETag
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Description of the status
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectionErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionErrorResponse)(nil)).Elem()
}

func (i ConnectionErrorResponseArgs) ToConnectionErrorResponseOutput() ConnectionErrorResponseOutput {
	return i.ToConnectionErrorResponseOutputWithContext(context.Background())
}

func (i ConnectionErrorResponseArgs) ToConnectionErrorResponseOutputWithContext(ctx context.Context) ConnectionErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorResponseOutput)
}

func (i ConnectionErrorResponseArgs) ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput {
	return i.ToConnectionErrorResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionErrorResponseArgs) ToConnectionErrorResponsePtrOutputWithContext(ctx context.Context) ConnectionErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorResponseOutput).ToConnectionErrorResponsePtrOutputWithContext(ctx)
}

// ConnectionErrorResponsePtrInput is an input type that accepts ConnectionErrorResponseArgs, ConnectionErrorResponsePtr and ConnectionErrorResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionErrorResponsePtrInput` via:
//
//          ConnectionErrorResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionErrorResponsePtrInput interface {
	pulumi.Input

	ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput
	ToConnectionErrorResponsePtrOutputWithContext(context.Context) ConnectionErrorResponsePtrOutput
}

type connectionErrorResponsePtrType ConnectionErrorResponseArgs

func ConnectionErrorResponsePtr(v *ConnectionErrorResponseArgs) ConnectionErrorResponsePtrInput {
	return (*connectionErrorResponsePtrType)(v)
}

func (*connectionErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionErrorResponse)(nil)).Elem()
}

func (i *connectionErrorResponsePtrType) ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput {
	return i.ToConnectionErrorResponsePtrOutputWithContext(context.Background())
}

func (i *connectionErrorResponsePtrType) ToConnectionErrorResponsePtrOutputWithContext(ctx context.Context) ConnectionErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorResponsePtrOutput)
}

// Connection error
type ConnectionErrorResponseOutput struct{ *pulumi.OutputState }

func (ConnectionErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionErrorResponse)(nil)).Elem()
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponseOutput() ConnectionErrorResponseOutput {
	return o
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponseOutputWithContext(ctx context.Context) ConnectionErrorResponseOutput {
	return o
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput {
	return o.ToConnectionErrorResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponsePtrOutputWithContext(ctx context.Context) ConnectionErrorResponsePtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *ConnectionErrorResponse {
		return &v
	}).(ConnectionErrorResponsePtrOutput)
}

// Code of the status
func (o ConnectionErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource id
func (o ConnectionErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource location
func (o ConnectionErrorResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Resource name
func (o ConnectionErrorResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags
func (o ConnectionErrorResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ConnectionErrorResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectionErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionErrorResponse)(nil)).Elem()
}

func (o ConnectionErrorResponsePtrOutput) ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput {
	return o
}

func (o ConnectionErrorResponsePtrOutput) ToConnectionErrorResponsePtrOutputWithContext(ctx context.Context) ConnectionErrorResponsePtrOutput {
	return o
}

func (o ConnectionErrorResponsePtrOutput) Elem() ConnectionErrorResponseOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) ConnectionErrorResponse { return *v }).(ConnectionErrorResponseOutput)
}

// Code of the status
func (o ConnectionErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource id
func (o ConnectionErrorResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Resource name
func (o ConnectionErrorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o ConnectionErrorResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionGatewayDefinitionProperties struct {
	// The URI of the backend
	BackendUri *string `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation *ConnectionGatewayReference `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation []string `pulumi:"contactInformation"`
	// The gateway description
	Description *string `pulumi:"description"`
	// The gateway display name
	DisplayName *string `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName *string `pulumi:"machineName"`
	// The gateway status
	Status interface{} `pulumi:"status"`
}

// ConnectionGatewayDefinitionPropertiesInput is an input type that accepts ConnectionGatewayDefinitionPropertiesArgs and ConnectionGatewayDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionPropertiesInput` via:
//
//          ConnectionGatewayDefinitionPropertiesArgs{...}
type ConnectionGatewayDefinitionPropertiesInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput
	ToConnectionGatewayDefinitionPropertiesOutputWithContext(context.Context) ConnectionGatewayDefinitionPropertiesOutput
}

type ConnectionGatewayDefinitionPropertiesArgs struct {
	// The URI of the backend
	BackendUri pulumi.StringPtrInput `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation ConnectionGatewayReferencePtrInput `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation pulumi.StringArrayInput `pulumi:"contactInformation"`
	// The gateway description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The gateway display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName pulumi.StringPtrInput `pulumi:"machineName"`
	// The gateway status
	Status pulumi.Input `pulumi:"status"`
}

func (ConnectionGatewayDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput {
	return i.ToConnectionGatewayDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesOutput)
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesOutput).ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ConnectionGatewayDefinitionPropertiesPtrInput is an input type that accepts ConnectionGatewayDefinitionPropertiesArgs, ConnectionGatewayDefinitionPropertiesPtr and ConnectionGatewayDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionPropertiesPtrInput` via:
//
//          ConnectionGatewayDefinitionPropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectionGatewayDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput
	ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput
}

type connectionGatewayDefinitionPropertiesPtrType ConnectionGatewayDefinitionPropertiesArgs

func ConnectionGatewayDefinitionPropertiesPtr(v *ConnectionGatewayDefinitionPropertiesArgs) ConnectionGatewayDefinitionPropertiesPtrInput {
	return (*connectionGatewayDefinitionPropertiesPtrType)(v)
}

func (*connectionGatewayDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (i *connectionGatewayDefinitionPropertiesPtrType) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionGatewayDefinitionPropertiesPtrType) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesPtrOutput)
}

type ConnectionGatewayDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *ConnectionGatewayDefinitionProperties {
		return &v
	}).(ConnectionGatewayDefinitionPropertiesPtrOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionPropertiesOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.BackendUri }).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionPropertiesOutput) ConnectionGatewayInstallation() ConnectionGatewayReferencePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *ConnectionGatewayReference {
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferencePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionPropertiesOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) []string { return v.ContactInformation }).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionPropertiesOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionPropertiesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) interface{} { return v.Status }).(pulumi.AnyOutput)
}

type ConnectionGatewayDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Elem() ConnectionGatewayDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) ConnectionGatewayDefinitionProperties { return *v }).(ConnectionGatewayDefinitionPropertiesOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.BackendUri
	}).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ConnectionGatewayInstallation() ConnectionGatewayReferencePtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *ConnectionGatewayReference {
		if v == nil {
			return nil
		}
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferencePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) []string {
		if v == nil {
			return nil
		}
		return v.ContactInformation
	}).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.MachineName
	}).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.AnyOutput)
}

type ConnectionGatewayDefinitionResponseProperties struct {
	// The URI of the backend
	BackendUri *string `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation *ConnectionGatewayReferenceResponse `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation []string `pulumi:"contactInformation"`
	// The gateway description
	Description *string `pulumi:"description"`
	// The gateway display name
	DisplayName *string `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName *string `pulumi:"machineName"`
	// The gateway status
	Status interface{} `pulumi:"status"`
}

// ConnectionGatewayDefinitionResponsePropertiesInput is an input type that accepts ConnectionGatewayDefinitionResponsePropertiesArgs and ConnectionGatewayDefinitionResponsePropertiesOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionResponsePropertiesInput` via:
//
//          ConnectionGatewayDefinitionResponsePropertiesArgs{...}
type ConnectionGatewayDefinitionResponsePropertiesInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionResponsePropertiesOutput() ConnectionGatewayDefinitionResponsePropertiesOutput
	ToConnectionGatewayDefinitionResponsePropertiesOutputWithContext(context.Context) ConnectionGatewayDefinitionResponsePropertiesOutput
}

type ConnectionGatewayDefinitionResponsePropertiesArgs struct {
	// The URI of the backend
	BackendUri pulumi.StringPtrInput `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation ConnectionGatewayReferenceResponsePtrInput `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation pulumi.StringArrayInput `pulumi:"contactInformation"`
	// The gateway description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The gateway display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName pulumi.StringPtrInput `pulumi:"machineName"`
	// The gateway status
	Status pulumi.Input `pulumi:"status"`
}

func (ConnectionGatewayDefinitionResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionResponseProperties)(nil)).Elem()
}

func (i ConnectionGatewayDefinitionResponsePropertiesArgs) ToConnectionGatewayDefinitionResponsePropertiesOutput() ConnectionGatewayDefinitionResponsePropertiesOutput {
	return i.ToConnectionGatewayDefinitionResponsePropertiesOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionResponsePropertiesArgs) ToConnectionGatewayDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionResponsePropertiesOutput)
}

func (i ConnectionGatewayDefinitionResponsePropertiesArgs) ToConnectionGatewayDefinitionResponsePropertiesPtrOutput() ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionResponsePropertiesArgs) ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionResponsePropertiesOutput).ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(ctx)
}

// ConnectionGatewayDefinitionResponsePropertiesPtrInput is an input type that accepts ConnectionGatewayDefinitionResponsePropertiesArgs, ConnectionGatewayDefinitionResponsePropertiesPtr and ConnectionGatewayDefinitionResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionResponsePropertiesPtrInput` via:
//
//          ConnectionGatewayDefinitionResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ConnectionGatewayDefinitionResponsePropertiesPtrInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionResponsePropertiesPtrOutput() ConnectionGatewayDefinitionResponsePropertiesPtrOutput
	ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(context.Context) ConnectionGatewayDefinitionResponsePropertiesPtrOutput
}

type connectionGatewayDefinitionResponsePropertiesPtrType ConnectionGatewayDefinitionResponsePropertiesArgs

func ConnectionGatewayDefinitionResponsePropertiesPtr(v *ConnectionGatewayDefinitionResponsePropertiesArgs) ConnectionGatewayDefinitionResponsePropertiesPtrInput {
	return (*connectionGatewayDefinitionResponsePropertiesPtrType)(v)
}

func (*connectionGatewayDefinitionResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionResponseProperties)(nil)).Elem()
}

func (i *connectionGatewayDefinitionResponsePropertiesPtrType) ToConnectionGatewayDefinitionResponsePropertiesPtrOutput() ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionGatewayDefinitionResponsePropertiesPtrType) ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionResponsePropertiesPtrOutput)
}

type ConnectionGatewayDefinitionResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionResponseProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesOutput() ConnectionGatewayDefinitionResponsePropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesPtrOutput() ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return o.ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *ConnectionGatewayDefinitionResponseProperties {
		return &v
	}).(ConnectionGatewayDefinitionResponsePropertiesPtrOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.BackendUri }).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ConnectionGatewayInstallation() ConnectionGatewayReferenceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *ConnectionGatewayReferenceResponse {
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferenceResponsePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) []string { return v.ContactInformation }).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) interface{} { return v.Status }).(pulumi.AnyOutput)
}

type ConnectionGatewayDefinitionResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionResponseProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) ToConnectionGatewayDefinitionResponsePropertiesPtrOutput() ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) ToConnectionGatewayDefinitionResponsePropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) Elem() ConnectionGatewayDefinitionResponsePropertiesOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) ConnectionGatewayDefinitionResponseProperties {
		return *v
	}).(ConnectionGatewayDefinitionResponsePropertiesOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.BackendUri
	}).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) ConnectionGatewayInstallation() ConnectionGatewayReferenceResponsePtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) *ConnectionGatewayReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferenceResponsePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.ContactInformation
	}).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.MachineName
	}).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionResponsePropertiesPtrOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionResponseProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.AnyOutput)
}

// The gateway installation reference
type ConnectionGatewayReference struct {
	// Resource reference id
	Id *string `pulumi:"id"`
	// Resource reference location
	Location *string `pulumi:"location"`
	// Resource reference name
	Name *string `pulumi:"name"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ConnectionGatewayReferenceInput is an input type that accepts ConnectionGatewayReferenceArgs and ConnectionGatewayReferenceOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferenceInput` via:
//
//          ConnectionGatewayReferenceArgs{...}
type ConnectionGatewayReferenceInput interface {
	pulumi.Input

	ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput
	ToConnectionGatewayReferenceOutputWithContext(context.Context) ConnectionGatewayReferenceOutput
}

// The gateway installation reference
type ConnectionGatewayReferenceArgs struct {
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource reference location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource reference name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionGatewayReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReference)(nil)).Elem()
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput {
	return i.ToConnectionGatewayReferenceOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferenceOutputWithContext(ctx context.Context) ConnectionGatewayReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceOutput)
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return i.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceOutput).ToConnectionGatewayReferencePtrOutputWithContext(ctx)
}

// ConnectionGatewayReferencePtrInput is an input type that accepts ConnectionGatewayReferenceArgs, ConnectionGatewayReferencePtr and ConnectionGatewayReferencePtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferencePtrInput` via:
//
//          ConnectionGatewayReferenceArgs{...}
//
//  or:
//
//          nil
type ConnectionGatewayReferencePtrInput interface {
	pulumi.Input

	ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput
	ToConnectionGatewayReferencePtrOutputWithContext(context.Context) ConnectionGatewayReferencePtrOutput
}

type connectionGatewayReferencePtrType ConnectionGatewayReferenceArgs

func ConnectionGatewayReferencePtr(v *ConnectionGatewayReferenceArgs) ConnectionGatewayReferencePtrInput {
	return (*connectionGatewayReferencePtrType)(v)
}

func (*connectionGatewayReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReference)(nil)).Elem()
}

func (i *connectionGatewayReferencePtrType) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return i.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (i *connectionGatewayReferencePtrType) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferencePtrOutput)
}

// The gateway installation reference
type ConnectionGatewayReferenceOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReference)(nil)).Elem()
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput {
	return o
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferenceOutputWithContext(ctx context.Context) ConnectionGatewayReferenceOutput {
	return o
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return o.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *ConnectionGatewayReference {
		return &v
	}).(ConnectionGatewayReferencePtrOutput)
}

// Resource reference id
func (o ConnectionGatewayReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionGatewayReferencePtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReference)(nil)).Elem()
}

func (o ConnectionGatewayReferencePtrOutput) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return o
}

func (o ConnectionGatewayReferencePtrOutput) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return o
}

func (o ConnectionGatewayReferencePtrOutput) Elem() ConnectionGatewayReferenceOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) ConnectionGatewayReference { return *v }).(ConnectionGatewayReferenceOutput)
}

// Resource reference id
func (o ConnectionGatewayReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferencePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The gateway installation reference
type ConnectionGatewayReferenceResponse struct {
	// Resource reference id
	Id *string `pulumi:"id"`
	// Resource reference location
	Location *string `pulumi:"location"`
	// Resource reference name
	Name *string `pulumi:"name"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ConnectionGatewayReferenceResponseInput is an input type that accepts ConnectionGatewayReferenceResponseArgs and ConnectionGatewayReferenceResponseOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferenceResponseInput` via:
//
//          ConnectionGatewayReferenceResponseArgs{...}
type ConnectionGatewayReferenceResponseInput interface {
	pulumi.Input

	ToConnectionGatewayReferenceResponseOutput() ConnectionGatewayReferenceResponseOutput
	ToConnectionGatewayReferenceResponseOutputWithContext(context.Context) ConnectionGatewayReferenceResponseOutput
}

// The gateway installation reference
type ConnectionGatewayReferenceResponseArgs struct {
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource reference location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource reference name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionGatewayReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (i ConnectionGatewayReferenceResponseArgs) ToConnectionGatewayReferenceResponseOutput() ConnectionGatewayReferenceResponseOutput {
	return i.ToConnectionGatewayReferenceResponseOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceResponseArgs) ToConnectionGatewayReferenceResponseOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceResponseOutput)
}

func (i ConnectionGatewayReferenceResponseArgs) ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput {
	return i.ToConnectionGatewayReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceResponseArgs) ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceResponseOutput).ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx)
}

// ConnectionGatewayReferenceResponsePtrInput is an input type that accepts ConnectionGatewayReferenceResponseArgs, ConnectionGatewayReferenceResponsePtr and ConnectionGatewayReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferenceResponsePtrInput` via:
//
//          ConnectionGatewayReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionGatewayReferenceResponsePtrInput interface {
	pulumi.Input

	ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput
	ToConnectionGatewayReferenceResponsePtrOutputWithContext(context.Context) ConnectionGatewayReferenceResponsePtrOutput
}

type connectionGatewayReferenceResponsePtrType ConnectionGatewayReferenceResponseArgs

func ConnectionGatewayReferenceResponsePtr(v *ConnectionGatewayReferenceResponseArgs) ConnectionGatewayReferenceResponsePtrInput {
	return (*connectionGatewayReferenceResponsePtrType)(v)
}

func (*connectionGatewayReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (i *connectionGatewayReferenceResponsePtrType) ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput {
	return i.ToConnectionGatewayReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *connectionGatewayReferenceResponsePtrType) ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceResponsePtrOutput)
}

// The gateway installation reference
type ConnectionGatewayReferenceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponseOutput() ConnectionGatewayReferenceResponseOutput {
	return o
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponseOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponseOutput {
	return o
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput {
	return o.ToConnectionGatewayReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *ConnectionGatewayReferenceResponse {
		return &v
	}).(ConnectionGatewayReferenceResponsePtrOutput)
}

// Resource reference id
func (o ConnectionGatewayReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionGatewayReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (o ConnectionGatewayReferenceResponsePtrOutput) ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput {
	return o
}

func (o ConnectionGatewayReferenceResponsePtrOutput) ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponsePtrOutput {
	return o
}

func (o ConnectionGatewayReferenceResponsePtrOutput) Elem() ConnectionGatewayReferenceResponseOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) ConnectionGatewayReferenceResponse { return *v }).(ConnectionGatewayReferenceResponseOutput)
}

// Resource reference id
func (o ConnectionGatewayReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Connection provider parameters
type ConnectionParameter struct {
	// OAuth settings for the connection provider
	OAuthSettings *ApiOAuthSettings `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type *string `pulumi:"type"`
}

// ConnectionParameterInput is an input type that accepts ConnectionParameterArgs and ConnectionParameterOutput values.
// You can construct a concrete instance of `ConnectionParameterInput` via:
//
//          ConnectionParameterArgs{...}
type ConnectionParameterInput interface {
	pulumi.Input

	ToConnectionParameterOutput() ConnectionParameterOutput
	ToConnectionParameterOutputWithContext(context.Context) ConnectionParameterOutput
}

// Connection provider parameters
type ConnectionParameterArgs struct {
	// OAuth settings for the connection provider
	OAuthSettings ApiOAuthSettingsPtrInput `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterArgs) ToConnectionParameterOutput() ConnectionParameterOutput {
	return i.ToConnectionParameterOutputWithContext(context.Background())
}

func (i ConnectionParameterArgs) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterOutput)
}

// ConnectionParameterMapInput is an input type that accepts ConnectionParameterMap and ConnectionParameterMapOutput values.
// You can construct a concrete instance of `ConnectionParameterMapInput` via:
//
//          ConnectionParameterMap{ "key": ConnectionParameterArgs{...} }
type ConnectionParameterMapInput interface {
	pulumi.Input

	ToConnectionParameterMapOutput() ConnectionParameterMapOutput
	ToConnectionParameterMapOutputWithContext(context.Context) ConnectionParameterMapOutput
}

type ConnectionParameterMap map[string]ConnectionParameterInput

func (ConnectionParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterMap) ToConnectionParameterMapOutput() ConnectionParameterMapOutput {
	return i.ToConnectionParameterMapOutputWithContext(context.Background())
}

func (i ConnectionParameterMap) ToConnectionParameterMapOutputWithContext(ctx context.Context) ConnectionParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterMapOutput)
}

// Connection provider parameters
type ConnectionParameterOutput struct{ *pulumi.OutputState }

func (ConnectionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterOutput) ToConnectionParameterOutput() ConnectionParameterOutput {
	return o
}

func (o ConnectionParameterOutput) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return o
}

// OAuth settings for the connection provider
func (o ConnectionParameterOutput) OAuthSettings() ApiOAuthSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionParameter) *ApiOAuthSettings { return v.OAuthSettings }).(ApiOAuthSettingsPtrOutput)
}

// Type of the parameter
func (o ConnectionParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionParameterMapOutput struct{ *pulumi.OutputState }

func (ConnectionParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterMapOutput) ToConnectionParameterMapOutput() ConnectionParameterMapOutput {
	return o
}

func (o ConnectionParameterMapOutput) ToConnectionParameterMapOutputWithContext(ctx context.Context) ConnectionParameterMapOutput {
	return o
}

func (o ConnectionParameterMapOutput) MapIndex(k pulumi.StringInput) ConnectionParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnectionParameter {
		return vs[0].(map[string]ConnectionParameter)[vs[1].(string)]
	}).(ConnectionParameterOutput)
}

// Connection provider parameters
type ConnectionParameterResponse struct {
	// OAuth settings for the connection provider
	OAuthSettings *ApiOAuthSettingsResponse `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type *string `pulumi:"type"`
}

// ConnectionParameterResponseInput is an input type that accepts ConnectionParameterResponseArgs and ConnectionParameterResponseOutput values.
// You can construct a concrete instance of `ConnectionParameterResponseInput` via:
//
//          ConnectionParameterResponseArgs{...}
type ConnectionParameterResponseInput interface {
	pulumi.Input

	ToConnectionParameterResponseOutput() ConnectionParameterResponseOutput
	ToConnectionParameterResponseOutputWithContext(context.Context) ConnectionParameterResponseOutput
}

// Connection provider parameters
type ConnectionParameterResponseArgs struct {
	// OAuth settings for the connection provider
	OAuthSettings ApiOAuthSettingsResponsePtrInput `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionParameterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameterResponse)(nil)).Elem()
}

func (i ConnectionParameterResponseArgs) ToConnectionParameterResponseOutput() ConnectionParameterResponseOutput {
	return i.ToConnectionParameterResponseOutputWithContext(context.Background())
}

func (i ConnectionParameterResponseArgs) ToConnectionParameterResponseOutputWithContext(ctx context.Context) ConnectionParameterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterResponseOutput)
}

// ConnectionParameterResponseMapInput is an input type that accepts ConnectionParameterResponseMap and ConnectionParameterResponseMapOutput values.
// You can construct a concrete instance of `ConnectionParameterResponseMapInput` via:
//
//          ConnectionParameterResponseMap{ "key": ConnectionParameterResponseArgs{...} }
type ConnectionParameterResponseMapInput interface {
	pulumi.Input

	ToConnectionParameterResponseMapOutput() ConnectionParameterResponseMapOutput
	ToConnectionParameterResponseMapOutputWithContext(context.Context) ConnectionParameterResponseMapOutput
}

type ConnectionParameterResponseMap map[string]ConnectionParameterResponseInput

func (ConnectionParameterResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameterResponse)(nil)).Elem()
}

func (i ConnectionParameterResponseMap) ToConnectionParameterResponseMapOutput() ConnectionParameterResponseMapOutput {
	return i.ToConnectionParameterResponseMapOutputWithContext(context.Background())
}

func (i ConnectionParameterResponseMap) ToConnectionParameterResponseMapOutputWithContext(ctx context.Context) ConnectionParameterResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterResponseMapOutput)
}

// Connection provider parameters
type ConnectionParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameterResponse)(nil)).Elem()
}

func (o ConnectionParameterResponseOutput) ToConnectionParameterResponseOutput() ConnectionParameterResponseOutput {
	return o
}

func (o ConnectionParameterResponseOutput) ToConnectionParameterResponseOutputWithContext(ctx context.Context) ConnectionParameterResponseOutput {
	return o
}

// OAuth settings for the connection provider
func (o ConnectionParameterResponseOutput) OAuthSettings() ApiOAuthSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConnectionParameterResponse) *ApiOAuthSettingsResponse { return v.OAuthSettings }).(ApiOAuthSettingsResponsePtrOutput)
}

// Type of the parameter
func (o ConnectionParameterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionParameterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionParameterResponseMapOutput struct{ *pulumi.OutputState }

func (ConnectionParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameterResponse)(nil)).Elem()
}

func (o ConnectionParameterResponseMapOutput) ToConnectionParameterResponseMapOutput() ConnectionParameterResponseMapOutput {
	return o
}

func (o ConnectionParameterResponseMapOutput) ToConnectionParameterResponseMapOutputWithContext(ctx context.Context) ConnectionParameterResponseMapOutput {
	return o
}

func (o ConnectionParameterResponseMapOutput) MapIndex(k pulumi.StringInput) ConnectionParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnectionParameterResponse {
		return vs[0].(map[string]ConnectionParameterResponse)[vs[1].(string)]
	}).(ConnectionParameterResponseOutput)
}

// Connection status
type ConnectionStatusDefinition struct {
	// Connection error
	Error *ConnectionError `pulumi:"error"`
	// The gateway status
	Status *string `pulumi:"status"`
	// Target of the error
	Target *string `pulumi:"target"`
}

// ConnectionStatusDefinitionInput is an input type that accepts ConnectionStatusDefinitionArgs and ConnectionStatusDefinitionOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionInput` via:
//
//          ConnectionStatusDefinitionArgs{...}
type ConnectionStatusDefinitionInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput
	ToConnectionStatusDefinitionOutputWithContext(context.Context) ConnectionStatusDefinitionOutput
}

// Connection status
type ConnectionStatusDefinitionArgs struct {
	// Connection error
	Error ConnectionErrorPtrInput `pulumi:"error"`
	// The gateway status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Target of the error
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ConnectionStatusDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinition)(nil)).Elem()
}

func (i ConnectionStatusDefinitionArgs) ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput {
	return i.ToConnectionStatusDefinitionOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionArgs) ToConnectionStatusDefinitionOutputWithContext(ctx context.Context) ConnectionStatusDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionOutput)
}

// ConnectionStatusDefinitionArrayInput is an input type that accepts ConnectionStatusDefinitionArray and ConnectionStatusDefinitionArrayOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionArrayInput` via:
//
//          ConnectionStatusDefinitionArray{ ConnectionStatusDefinitionArgs{...} }
type ConnectionStatusDefinitionArrayInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput
	ToConnectionStatusDefinitionArrayOutputWithContext(context.Context) ConnectionStatusDefinitionArrayOutput
}

type ConnectionStatusDefinitionArray []ConnectionStatusDefinitionInput

func (ConnectionStatusDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinition)(nil)).Elem()
}

func (i ConnectionStatusDefinitionArray) ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput {
	return i.ToConnectionStatusDefinitionArrayOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionArray) ToConnectionStatusDefinitionArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionArrayOutput)
}

// Connection status
type ConnectionStatusDefinitionOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinition)(nil)).Elem()
}

func (o ConnectionStatusDefinitionOutput) ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput {
	return o
}

func (o ConnectionStatusDefinitionOutput) ToConnectionStatusDefinitionOutputWithContext(ctx context.Context) ConnectionStatusDefinitionOutput {
	return o
}

// Connection error
func (o ConnectionStatusDefinitionOutput) Error() ConnectionErrorPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *ConnectionError { return v.Error }).(ConnectionErrorPtrOutput)
}

// The gateway status
func (o ConnectionStatusDefinitionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Target of the error
func (o ConnectionStatusDefinitionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ConnectionStatusDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinition)(nil)).Elem()
}

func (o ConnectionStatusDefinitionArrayOutput) ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionArrayOutput) ToConnectionStatusDefinitionArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionArrayOutput) Index(i pulumi.IntInput) ConnectionStatusDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionStatusDefinition {
		return vs[0].([]ConnectionStatusDefinition)[vs[1].(int)]
	}).(ConnectionStatusDefinitionOutput)
}

// Connection status
type ConnectionStatusDefinitionResponse struct {
	// Connection error
	Error *ConnectionErrorResponse `pulumi:"error"`
	// The gateway status
	Status *string `pulumi:"status"`
	// Target of the error
	Target *string `pulumi:"target"`
}

// ConnectionStatusDefinitionResponseInput is an input type that accepts ConnectionStatusDefinitionResponseArgs and ConnectionStatusDefinitionResponseOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionResponseInput` via:
//
//          ConnectionStatusDefinitionResponseArgs{...}
type ConnectionStatusDefinitionResponseInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionResponseOutput() ConnectionStatusDefinitionResponseOutput
	ToConnectionStatusDefinitionResponseOutputWithContext(context.Context) ConnectionStatusDefinitionResponseOutput
}

// Connection status
type ConnectionStatusDefinitionResponseArgs struct {
	// Connection error
	Error ConnectionErrorResponsePtrInput `pulumi:"error"`
	// The gateway status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Target of the error
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ConnectionStatusDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (i ConnectionStatusDefinitionResponseArgs) ToConnectionStatusDefinitionResponseOutput() ConnectionStatusDefinitionResponseOutput {
	return i.ToConnectionStatusDefinitionResponseOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionResponseArgs) ToConnectionStatusDefinitionResponseOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionResponseOutput)
}

// ConnectionStatusDefinitionResponseArrayInput is an input type that accepts ConnectionStatusDefinitionResponseArray and ConnectionStatusDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionResponseArrayInput` via:
//
//          ConnectionStatusDefinitionResponseArray{ ConnectionStatusDefinitionResponseArgs{...} }
type ConnectionStatusDefinitionResponseArrayInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionResponseArrayOutput() ConnectionStatusDefinitionResponseArrayOutput
	ToConnectionStatusDefinitionResponseArrayOutputWithContext(context.Context) ConnectionStatusDefinitionResponseArrayOutput
}

type ConnectionStatusDefinitionResponseArray []ConnectionStatusDefinitionResponseInput

func (ConnectionStatusDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (i ConnectionStatusDefinitionResponseArray) ToConnectionStatusDefinitionResponseArrayOutput() ConnectionStatusDefinitionResponseArrayOutput {
	return i.ToConnectionStatusDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionResponseArray) ToConnectionStatusDefinitionResponseArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionResponseArrayOutput)
}

// Connection status
type ConnectionStatusDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (o ConnectionStatusDefinitionResponseOutput) ToConnectionStatusDefinitionResponseOutput() ConnectionStatusDefinitionResponseOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseOutput) ToConnectionStatusDefinitionResponseOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseOutput {
	return o
}

// Connection error
func (o ConnectionStatusDefinitionResponseOutput) Error() ConnectionErrorResponsePtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *ConnectionErrorResponse { return v.Error }).(ConnectionErrorResponsePtrOutput)
}

// The gateway status
func (o ConnectionStatusDefinitionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Target of the error
func (o ConnectionStatusDefinitionResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ConnectionStatusDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (o ConnectionStatusDefinitionResponseArrayOutput) ToConnectionStatusDefinitionResponseArrayOutput() ConnectionStatusDefinitionResponseArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseArrayOutput) ToConnectionStatusDefinitionResponseArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ConnectionStatusDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionStatusDefinitionResponse {
		return vs[0].([]ConnectionStatusDefinitionResponse)[vs[1].(int)]
	}).(ConnectionStatusDefinitionResponseOutput)
}

// A consent link
type ConsentLinkDefinitionResponse struct {
	// Display name of the parameter in the connection provider's OAuth settings
	DisplayName *string `pulumi:"displayName"`
	// URI for first party login
	FirstPartyLoginUri *string `pulumi:"firstPartyLoginUri"`
	// URI for the consent link
	Link *string `pulumi:"link"`
	// Status of the link
	Status *string `pulumi:"status"`
}

// ConsentLinkDefinitionResponseInput is an input type that accepts ConsentLinkDefinitionResponseArgs and ConsentLinkDefinitionResponseOutput values.
// You can construct a concrete instance of `ConsentLinkDefinitionResponseInput` via:
//
//          ConsentLinkDefinitionResponseArgs{...}
type ConsentLinkDefinitionResponseInput interface {
	pulumi.Input

	ToConsentLinkDefinitionResponseOutput() ConsentLinkDefinitionResponseOutput
	ToConsentLinkDefinitionResponseOutputWithContext(context.Context) ConsentLinkDefinitionResponseOutput
}

// A consent link
type ConsentLinkDefinitionResponseArgs struct {
	// Display name of the parameter in the connection provider's OAuth settings
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URI for first party login
	FirstPartyLoginUri pulumi.StringPtrInput `pulumi:"firstPartyLoginUri"`
	// URI for the consent link
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Status of the link
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ConsentLinkDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (i ConsentLinkDefinitionResponseArgs) ToConsentLinkDefinitionResponseOutput() ConsentLinkDefinitionResponseOutput {
	return i.ToConsentLinkDefinitionResponseOutputWithContext(context.Background())
}

func (i ConsentLinkDefinitionResponseArgs) ToConsentLinkDefinitionResponseOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkDefinitionResponseOutput)
}

// ConsentLinkDefinitionResponseArrayInput is an input type that accepts ConsentLinkDefinitionResponseArray and ConsentLinkDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `ConsentLinkDefinitionResponseArrayInput` via:
//
//          ConsentLinkDefinitionResponseArray{ ConsentLinkDefinitionResponseArgs{...} }
type ConsentLinkDefinitionResponseArrayInput interface {
	pulumi.Input

	ToConsentLinkDefinitionResponseArrayOutput() ConsentLinkDefinitionResponseArrayOutput
	ToConsentLinkDefinitionResponseArrayOutputWithContext(context.Context) ConsentLinkDefinitionResponseArrayOutput
}

type ConsentLinkDefinitionResponseArray []ConsentLinkDefinitionResponseInput

func (ConsentLinkDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (i ConsentLinkDefinitionResponseArray) ToConsentLinkDefinitionResponseArrayOutput() ConsentLinkDefinitionResponseArrayOutput {
	return i.ToConsentLinkDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i ConsentLinkDefinitionResponseArray) ToConsentLinkDefinitionResponseArrayOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkDefinitionResponseArrayOutput)
}

// A consent link
type ConsentLinkDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ConsentLinkDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (o ConsentLinkDefinitionResponseOutput) ToConsentLinkDefinitionResponseOutput() ConsentLinkDefinitionResponseOutput {
	return o
}

func (o ConsentLinkDefinitionResponseOutput) ToConsentLinkDefinitionResponseOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseOutput {
	return o
}

// Display name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkDefinitionResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URI for first party login
func (o ConsentLinkDefinitionResponseOutput) FirstPartyLoginUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.FirstPartyLoginUri }).(pulumi.StringPtrOutput)
}

// URI for the consent link
func (o ConsentLinkDefinitionResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Status of the link
func (o ConsentLinkDefinitionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ConsentLinkDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ConsentLinkDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (o ConsentLinkDefinitionResponseArrayOutput) ToConsentLinkDefinitionResponseArrayOutput() ConsentLinkDefinitionResponseArrayOutput {
	return o
}

func (o ConsentLinkDefinitionResponseArrayOutput) ToConsentLinkDefinitionResponseArrayOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseArrayOutput {
	return o
}

func (o ConsentLinkDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ConsentLinkDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConsentLinkDefinitionResponse {
		return vs[0].([]ConsentLinkDefinitionResponse)[vs[1].(int)]
	}).(ConsentLinkDefinitionResponseOutput)
}

// Consent link definition
type ConsentLinkParameterDefinition struct {
	// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
	ObjectId *string `pulumi:"objectId"`
	// Name of the parameter in the connection provider's OAuth settings
	ParameterName *string `pulumi:"parameterName"`
	// Name of the parameter in the connection provider's OAuth settings
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The tenant id
	TenantId *string `pulumi:"tenantId"`
}

// ConsentLinkParameterDefinitionInput is an input type that accepts ConsentLinkParameterDefinitionArgs and ConsentLinkParameterDefinitionOutput values.
// You can construct a concrete instance of `ConsentLinkParameterDefinitionInput` via:
//
//          ConsentLinkParameterDefinitionArgs{...}
type ConsentLinkParameterDefinitionInput interface {
	pulumi.Input

	ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput
	ToConsentLinkParameterDefinitionOutputWithContext(context.Context) ConsentLinkParameterDefinitionOutput
}

// Consent link definition
type ConsentLinkParameterDefinitionArgs struct {
	// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Name of the parameter in the connection provider's OAuth settings
	ParameterName pulumi.StringPtrInput `pulumi:"parameterName"`
	// Name of the parameter in the connection provider's OAuth settings
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The tenant id
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ConsentLinkParameterDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkParameterDefinition)(nil)).Elem()
}

func (i ConsentLinkParameterDefinitionArgs) ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput {
	return i.ToConsentLinkParameterDefinitionOutputWithContext(context.Background())
}

func (i ConsentLinkParameterDefinitionArgs) ToConsentLinkParameterDefinitionOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkParameterDefinitionOutput)
}

// ConsentLinkParameterDefinitionArrayInput is an input type that accepts ConsentLinkParameterDefinitionArray and ConsentLinkParameterDefinitionArrayOutput values.
// You can construct a concrete instance of `ConsentLinkParameterDefinitionArrayInput` via:
//
//          ConsentLinkParameterDefinitionArray{ ConsentLinkParameterDefinitionArgs{...} }
type ConsentLinkParameterDefinitionArrayInput interface {
	pulumi.Input

	ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput
	ToConsentLinkParameterDefinitionArrayOutputWithContext(context.Context) ConsentLinkParameterDefinitionArrayOutput
}

type ConsentLinkParameterDefinitionArray []ConsentLinkParameterDefinitionInput

func (ConsentLinkParameterDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkParameterDefinition)(nil)).Elem()
}

func (i ConsentLinkParameterDefinitionArray) ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput {
	return i.ToConsentLinkParameterDefinitionArrayOutputWithContext(context.Background())
}

func (i ConsentLinkParameterDefinitionArray) ToConsentLinkParameterDefinitionArrayOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkParameterDefinitionArrayOutput)
}

// Consent link definition
type ConsentLinkParameterDefinitionOutput struct{ *pulumi.OutputState }

func (ConsentLinkParameterDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkParameterDefinition)(nil)).Elem()
}

func (o ConsentLinkParameterDefinitionOutput) ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput {
	return o
}

func (o ConsentLinkParameterDefinitionOutput) ToConsentLinkParameterDefinitionOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionOutput {
	return o
}

// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
func (o ConsentLinkParameterDefinitionOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkParameterDefinitionOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// Name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkParameterDefinitionOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The tenant id
func (o ConsentLinkParameterDefinitionOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ConsentLinkParameterDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ConsentLinkParameterDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkParameterDefinition)(nil)).Elem()
}

func (o ConsentLinkParameterDefinitionArrayOutput) ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput {
	return o
}

func (o ConsentLinkParameterDefinitionArrayOutput) ToConsentLinkParameterDefinitionArrayOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionArrayOutput {
	return o
}

func (o ConsentLinkParameterDefinitionArrayOutput) Index(i pulumi.IntInput) ConsentLinkParameterDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConsentLinkParameterDefinition {
		return vs[0].([]ConsentLinkParameterDefinition)[vs[1].(int)]
	}).(ConsentLinkParameterDefinitionOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettings struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsInput is an input type that accepts CorsSettingsArgs and CorsSettingsOutput values.
// You can construct a concrete instance of `CorsSettingsInput` via:
//
//          CorsSettingsArgs{...}
type CorsSettingsInput interface {
	pulumi.Input

	ToCorsSettingsOutput() CorsSettingsOutput
	ToCorsSettingsOutputWithContext(context.Context) CorsSettingsOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (i CorsSettingsArgs) ToCorsSettingsOutput() CorsSettingsOutput {
	return i.ToCorsSettingsOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput)
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput).ToCorsSettingsPtrOutputWithContext(ctx)
}

// CorsSettingsPtrInput is an input type that accepts CorsSettingsArgs, CorsSettingsPtr and CorsSettingsPtrOutput values.
// You can construct a concrete instance of `CorsSettingsPtrInput` via:
//
//          CorsSettingsArgs{...}
//
//  or:
//
//          nil
type CorsSettingsPtrInput interface {
	pulumi.Input

	ToCorsSettingsPtrOutput() CorsSettingsPtrOutput
	ToCorsSettingsPtrOutputWithContext(context.Context) CorsSettingsPtrOutput
}

type corsSettingsPtrType CorsSettingsArgs

func CorsSettingsPtr(v *CorsSettingsArgs) CorsSettingsPtrInput {
	return (*corsSettingsPtrType)(v)
}

func (*corsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsOutput struct{ *pulumi.OutputState }

func (CorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (o CorsSettingsOutput) ToCorsSettingsOutput() CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o.ApplyT(func(v CorsSettings) *CorsSettings {
		return &v
	}).(CorsSettingsPtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettings) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettings) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) Elem() CorsSettingsOutput {
	return o.ApplyT(func(v *CorsSettings) CorsSettings { return *v }).(CorsSettingsOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsResponseInput is an input type that accepts CorsSettingsResponseArgs and CorsSettingsResponseOutput values.
// You can construct a concrete instance of `CorsSettingsResponseInput` via:
//
//          CorsSettingsResponseArgs{...}
type CorsSettingsResponseInput interface {
	pulumi.Input

	ToCorsSettingsResponseOutput() CorsSettingsResponseOutput
	ToCorsSettingsResponseOutputWithContext(context.Context) CorsSettingsResponseOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return i.ToCorsSettingsResponseOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput)
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput).ToCorsSettingsResponsePtrOutputWithContext(ctx)
}

// CorsSettingsResponsePtrInput is an input type that accepts CorsSettingsResponseArgs, CorsSettingsResponsePtr and CorsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CorsSettingsResponsePtrInput` via:
//
//          CorsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CorsSettingsResponsePtrInput interface {
	pulumi.Input

	ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput
	ToCorsSettingsResponsePtrOutputWithContext(context.Context) CorsSettingsResponsePtrOutput
}

type corsSettingsResponsePtrType CorsSettingsResponseArgs

func CorsSettingsResponsePtr(v *CorsSettingsResponseArgs) CorsSettingsResponsePtrInput {
	return (*corsSettingsResponsePtrType)(v)
}

func (*corsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponsePtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *CorsSettingsResponse {
		return &v
	}).(CorsSettingsResponsePtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponseOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) Elem() CorsSettingsResponseOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) CorsSettingsResponse { return *v }).(CorsSettingsResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponsePtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinition struct {
	// API Definitions
	ApiDefinitions *ApiResourceDefinitions `pulumi:"apiDefinitions"`
	// The API type
	ApiType *string `pulumi:"apiType"`
	// The API backend service
	BackendService *ApiResourceBackendService `pulumi:"backendService"`
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters map[string]ConnectionParameter `pulumi:"connectionParameters"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls []string `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition *WsdlDefinition `pulumi:"wsdlDefinition"`
}

// CustomApiPropertiesDefinitionInput is an input type that accepts CustomApiPropertiesDefinitionArgs and CustomApiPropertiesDefinitionOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionInput` via:
//
//          CustomApiPropertiesDefinitionArgs{...}
type CustomApiPropertiesDefinitionInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput
	ToCustomApiPropertiesDefinitionOutputWithContext(context.Context) CustomApiPropertiesDefinitionOutput
}

// Custom API properties
type CustomApiPropertiesDefinitionArgs struct {
	// API Definitions
	ApiDefinitions ApiResourceDefinitionsPtrInput `pulumi:"apiDefinitions"`
	// The API type
	ApiType pulumi.StringPtrInput `pulumi:"apiType"`
	// The API backend service
	BackendService ApiResourceBackendServicePtrInput `pulumi:"backendService"`
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters ConnectionParameterMapInput `pulumi:"connectionParameters"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls pulumi.StringArrayInput `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition WsdlDefinitionPtrInput `pulumi:"wsdlDefinition"`
}

func (CustomApiPropertiesDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinition)(nil)).Elem()
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput {
	return i.ToCustomApiPropertiesDefinitionOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionOutput)
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return i.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionOutput).ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx)
}

// CustomApiPropertiesDefinitionPtrInput is an input type that accepts CustomApiPropertiesDefinitionArgs, CustomApiPropertiesDefinitionPtr and CustomApiPropertiesDefinitionPtrOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionPtrInput` via:
//
//          CustomApiPropertiesDefinitionArgs{...}
//
//  or:
//
//          nil
type CustomApiPropertiesDefinitionPtrInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput
	ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Context) CustomApiPropertiesDefinitionPtrOutput
}

type customApiPropertiesDefinitionPtrType CustomApiPropertiesDefinitionArgs

func CustomApiPropertiesDefinitionPtr(v *CustomApiPropertiesDefinitionArgs) CustomApiPropertiesDefinitionPtrInput {
	return (*customApiPropertiesDefinitionPtrType)(v)
}

func (*customApiPropertiesDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinition)(nil)).Elem()
}

func (i *customApiPropertiesDefinitionPtrType) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return i.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (i *customApiPropertiesDefinitionPtrType) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinitionOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinition)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput {
	return o
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionOutput {
	return o
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return o.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *CustomApiPropertiesDefinition {
		return &v
	}).(CustomApiPropertiesDefinitionPtrOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionOutput) ApiDefinitions() ApiResourceDefinitionsPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *ApiResourceDefinitions { return v.ApiDefinitions }).(ApiResourceDefinitionsPtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionOutput) BackendService() ApiResourceBackendServicePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *ApiResourceBackendService { return v.BackendService }).(ApiResourceBackendServicePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionOutput) ConnectionParameters() ConnectionParameterMapOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) map[string]ConnectionParameter { return v.ConnectionParameters }).(ConnectionParameterMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) []string { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionOutput) WsdlDefinition() WsdlDefinitionPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *WsdlDefinition { return v.WsdlDefinition }).(WsdlDefinitionPtrOutput)
}

type CustomApiPropertiesDefinitionPtrOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinition)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionPtrOutput) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionPtrOutput) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionPtrOutput) Elem() CustomApiPropertiesDefinitionOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) CustomApiPropertiesDefinition { return *v }).(CustomApiPropertiesDefinitionOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionPtrOutput) ApiDefinitions() ApiResourceDefinitionsPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *ApiResourceDefinitions {
		if v == nil {
			return nil
		}
		return v.ApiDefinitions
	}).(ApiResourceDefinitionsPtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionPtrOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ApiType
	}).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionPtrOutput) BackendService() ApiResourceBackendServicePtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *ApiResourceBackendService {
		if v == nil {
			return nil
		}
		return v.BackendService
	}).(ApiResourceBackendServicePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionPtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionPtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionPtrOutput) ConnectionParameters() ConnectionParameterMapOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) map[string]ConnectionParameter {
		if v == nil {
			return nil
		}
		return v.ConnectionParameters
	}).(ConnectionParameterMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionPtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionPtrOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) []string {
		if v == nil {
			return nil
		}
		return v.RuntimeUrls
	}).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionPtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionPtrOutput) WsdlDefinition() WsdlDefinitionPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *WsdlDefinition {
		if v == nil {
			return nil
		}
		return v.WsdlDefinition
	}).(WsdlDefinitionPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinitionResponse struct {
	// API Definitions
	ApiDefinitions *ApiResourceDefinitionsResponse `pulumi:"apiDefinitions"`
	// The API type
	ApiType *string `pulumi:"apiType"`
	// The API backend service
	BackendService *ApiResourceBackendServiceResponse `pulumi:"backendService"`
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters map[string]ConnectionParameterResponse `pulumi:"connectionParameters"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls []string `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition *WsdlDefinitionResponse `pulumi:"wsdlDefinition"`
}

// CustomApiPropertiesDefinitionResponseInput is an input type that accepts CustomApiPropertiesDefinitionResponseArgs and CustomApiPropertiesDefinitionResponseOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionResponseInput` via:
//
//          CustomApiPropertiesDefinitionResponseArgs{...}
type CustomApiPropertiesDefinitionResponseInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionResponseOutput() CustomApiPropertiesDefinitionResponseOutput
	ToCustomApiPropertiesDefinitionResponseOutputWithContext(context.Context) CustomApiPropertiesDefinitionResponseOutput
}

// Custom API properties
type CustomApiPropertiesDefinitionResponseArgs struct {
	// API Definitions
	ApiDefinitions ApiResourceDefinitionsResponsePtrInput `pulumi:"apiDefinitions"`
	// The API type
	ApiType pulumi.StringPtrInput `pulumi:"apiType"`
	// The API backend service
	BackendService ApiResourceBackendServiceResponsePtrInput `pulumi:"backendService"`
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters ConnectionParameterResponseMapInput `pulumi:"connectionParameters"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls pulumi.StringArrayInput `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition WsdlDefinitionResponsePtrInput `pulumi:"wsdlDefinition"`
}

func (CustomApiPropertiesDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinitionResponse)(nil)).Elem()
}

func (i CustomApiPropertiesDefinitionResponseArgs) ToCustomApiPropertiesDefinitionResponseOutput() CustomApiPropertiesDefinitionResponseOutput {
	return i.ToCustomApiPropertiesDefinitionResponseOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionResponseArgs) ToCustomApiPropertiesDefinitionResponseOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionResponseOutput)
}

func (i CustomApiPropertiesDefinitionResponseArgs) ToCustomApiPropertiesDefinitionResponsePtrOutput() CustomApiPropertiesDefinitionResponsePtrOutput {
	return i.ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionResponseArgs) ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionResponseOutput).ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(ctx)
}

// CustomApiPropertiesDefinitionResponsePtrInput is an input type that accepts CustomApiPropertiesDefinitionResponseArgs, CustomApiPropertiesDefinitionResponsePtr and CustomApiPropertiesDefinitionResponsePtrOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionResponsePtrInput` via:
//
//          CustomApiPropertiesDefinitionResponseArgs{...}
//
//  or:
//
//          nil
type CustomApiPropertiesDefinitionResponsePtrInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionResponsePtrOutput() CustomApiPropertiesDefinitionResponsePtrOutput
	ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(context.Context) CustomApiPropertiesDefinitionResponsePtrOutput
}

type customApiPropertiesDefinitionResponsePtrType CustomApiPropertiesDefinitionResponseArgs

func CustomApiPropertiesDefinitionResponsePtr(v *CustomApiPropertiesDefinitionResponseArgs) CustomApiPropertiesDefinitionResponsePtrInput {
	return (*customApiPropertiesDefinitionResponsePtrType)(v)
}

func (*customApiPropertiesDefinitionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinitionResponse)(nil)).Elem()
}

func (i *customApiPropertiesDefinitionResponsePtrType) ToCustomApiPropertiesDefinitionResponsePtrOutput() CustomApiPropertiesDefinitionResponsePtrOutput {
	return i.ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i *customApiPropertiesDefinitionResponsePtrType) ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionResponsePtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinitionResponseOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinitionResponse)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponseOutput() CustomApiPropertiesDefinitionResponseOutput {
	return o
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponseOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponseOutput {
	return o
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponsePtrOutput() CustomApiPropertiesDefinitionResponsePtrOutput {
	return o.ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *CustomApiPropertiesDefinitionResponse {
		return &v
	}).(CustomApiPropertiesDefinitionResponsePtrOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionResponseOutput) ApiDefinitions() ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *ApiResourceDefinitionsResponse { return v.ApiDefinitions }).(ApiResourceDefinitionsResponsePtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionResponseOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionResponseOutput) BackendService() ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *ApiResourceBackendServiceResponse {
		return v.BackendService
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionResponseOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionResponseOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionResponseOutput) ConnectionParameters() ConnectionParameterResponseMapOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) map[string]ConnectionParameterResponse {
		return v.ConnectionParameters
	}).(ConnectionParameterResponseMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionResponseOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionResponseOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) []string { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionResponseOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionResponseOutput) WsdlDefinition() WsdlDefinitionResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *WsdlDefinitionResponse { return v.WsdlDefinition }).(WsdlDefinitionResponsePtrOutput)
}

type CustomApiPropertiesDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinitionResponse)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionResponsePtrOutput) ToCustomApiPropertiesDefinitionResponsePtrOutput() CustomApiPropertiesDefinitionResponsePtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionResponsePtrOutput) ToCustomApiPropertiesDefinitionResponsePtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponsePtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionResponsePtrOutput) Elem() CustomApiPropertiesDefinitionResponseOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) CustomApiPropertiesDefinitionResponse { return *v }).(CustomApiPropertiesDefinitionResponseOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionResponsePtrOutput) ApiDefinitions() ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *ApiResourceDefinitionsResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinitions
	}).(ApiResourceDefinitionsResponsePtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionResponsePtrOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiType
	}).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionResponsePtrOutput) BackendService() ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *ApiResourceBackendServiceResponse {
		if v == nil {
			return nil
		}
		return v.BackendService
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionResponsePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionResponsePtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionResponsePtrOutput) ConnectionParameters() ConnectionParameterResponseMapOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) map[string]ConnectionParameterResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionParameters
	}).(ConnectionParameterResponseMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionResponsePtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionResponsePtrOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) []string {
		if v == nil {
			return nil
		}
		return v.RuntimeUrls
	}).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionResponsePtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionResponsePtrOutput) WsdlDefinition() WsdlDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinitionResponse) *WsdlDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.WsdlDefinition
	}).(WsdlDefinitionResponsePtrOutput)
}

// Database backup settings.
type DatabaseBackupSetting struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInput is an input type that accepts DatabaseBackupSettingArgs and DatabaseBackupSettingOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInput` via:
//
//          DatabaseBackupSettingArgs{...}
type DatabaseBackupSettingInput interface {
	pulumi.Input

	ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput
	ToDatabaseBackupSettingOutputWithContext(context.Context) DatabaseBackupSettingOutput
}

// Database backup settings.
type DatabaseBackupSettingArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return i.ToDatabaseBackupSettingOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingOutput)
}

// DatabaseBackupSettingArrayInput is an input type that accepts DatabaseBackupSettingArray and DatabaseBackupSettingArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingArrayInput` via:
//
//          DatabaseBackupSettingArray{ DatabaseBackupSettingArgs{...} }
type DatabaseBackupSettingArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput
	ToDatabaseBackupSettingArrayOutputWithContext(context.Context) DatabaseBackupSettingArrayOutput
}

type DatabaseBackupSettingArray []DatabaseBackupSettingInput

func (DatabaseBackupSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return i.ToDatabaseBackupSettingArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return o
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSetting {
		return vs[0].([]DatabaseBackupSetting)[vs[1].(int)]
	}).(DatabaseBackupSettingOutput)
}

// Database backup settings.
type DatabaseBackupSettingResponse struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingResponseInput is an input type that accepts DatabaseBackupSettingResponseArgs and DatabaseBackupSettingResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseInput` via:
//
//          DatabaseBackupSettingResponseArgs{...}
type DatabaseBackupSettingResponseInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput
	ToDatabaseBackupSettingResponseOutputWithContext(context.Context) DatabaseBackupSettingResponseOutput
}

// Database backup settings.
type DatabaseBackupSettingResponseArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return i.ToDatabaseBackupSettingResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArgs) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseOutput)
}

// DatabaseBackupSettingResponseArrayInput is an input type that accepts DatabaseBackupSettingResponseArray and DatabaseBackupSettingResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingResponseArrayInput` via:
//
//          DatabaseBackupSettingResponseArray{ DatabaseBackupSettingResponseArgs{...} }
type DatabaseBackupSettingResponseArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput
	ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Context) DatabaseBackupSettingResponseArrayOutput
}

type DatabaseBackupSettingResponseArray []DatabaseBackupSettingResponseInput

func (DatabaseBackupSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return i.ToDatabaseBackupSettingResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingResponseArray) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingResponseArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return o
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingResponseOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingResponseOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingResponse {
		return vs[0].([]DatabaseBackupSettingResponse)[vs[1].(int)]
	}).(DatabaseBackupSettingResponseOutput)
}

// Routing rules in production experiments.
type Experiments struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRule `pulumi:"rampUpRules"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//          ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

// Routing rules in production experiments.
type ExperimentsArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

func (i ExperimentsArgs) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput).ToExperimentsPtrOutputWithContext(ctx)
}

// ExperimentsPtrInput is an input type that accepts ExperimentsArgs, ExperimentsPtr and ExperimentsPtrOutput values.
// You can construct a concrete instance of `ExperimentsPtrInput` via:
//
//          ExperimentsArgs{...}
//
//  or:
//
//          nil
type ExperimentsPtrInput interface {
	pulumi.Input

	ToExperimentsPtrOutput() ExperimentsPtrOutput
	ToExperimentsPtrOutputWithContext(context.Context) ExperimentsPtrOutput
}

type experimentsPtrType ExperimentsArgs

func ExperimentsPtr(v *ExperimentsArgs) ExperimentsPtrInput {
	return (*experimentsPtrType)(v)
}

func (*experimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (i *experimentsPtrType) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i *experimentsPtrType) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsPtrOutput)
}

// Routing rules in production experiments.
type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o.ToExperimentsPtrOutputWithContext(context.Background())
}

func (o ExperimentsOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o.ApplyT(func(v Experiments) *Experiments {
		return &v
	}).(ExperimentsPtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v Experiments) []RampUpRule { return v.RampUpRules }).(RampUpRuleArrayOutput)
}

type ExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) Elem() ExperimentsOutput {
	return o.ApplyT(func(v *Experiments) Experiments { return *v }).(ExperimentsOutput)
}

// List of ramp-up rules.
func (o ExperimentsPtrOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v *Experiments) []RampUpRule {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleArrayOutput)
}

// Routing rules in production experiments.
type ExperimentsResponse struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRuleResponse `pulumi:"rampUpRules"`
}

// ExperimentsResponseInput is an input type that accepts ExperimentsResponseArgs and ExperimentsResponseOutput values.
// You can construct a concrete instance of `ExperimentsResponseInput` via:
//
//          ExperimentsResponseArgs{...}
type ExperimentsResponseInput interface {
	pulumi.Input

	ToExperimentsResponseOutput() ExperimentsResponseOutput
	ToExperimentsResponseOutputWithContext(context.Context) ExperimentsResponseOutput
}

// Routing rules in production experiments.
type ExperimentsResponseArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleResponseArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return i.ToExperimentsResponseOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput)
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput).ToExperimentsResponsePtrOutputWithContext(ctx)
}

// ExperimentsResponsePtrInput is an input type that accepts ExperimentsResponseArgs, ExperimentsResponsePtr and ExperimentsResponsePtrOutput values.
// You can construct a concrete instance of `ExperimentsResponsePtrInput` via:
//
//          ExperimentsResponseArgs{...}
//
//  or:
//
//          nil
type ExperimentsResponsePtrInput interface {
	pulumi.Input

	ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput
	ToExperimentsResponsePtrOutputWithContext(context.Context) ExperimentsResponsePtrOutput
}

type experimentsResponsePtrType ExperimentsResponseArgs

func ExperimentsResponsePtr(v *ExperimentsResponseArgs) ExperimentsResponsePtrInput {
	return (*experimentsResponsePtrType)(v)
}

func (*experimentsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponsePtrOutput)
}

// Routing rules in production experiments.
type ExperimentsResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v ExperimentsResponse) *ExperimentsResponse {
		return &v
	}).(ExperimentsResponsePtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponseOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsResponse) []RampUpRuleResponse { return v.RampUpRules }).(RampUpRuleResponseArrayOutput)
}

type ExperimentsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) Elem() ExperimentsResponseOutput {
	return o.ApplyT(func(v *ExperimentsResponse) ExperimentsResponse { return *v }).(ExperimentsResponseOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponsePtrOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsResponse) []RampUpRuleResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMapping struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInput is an input type that accepts HandlerMappingArgs and HandlerMappingOutput values.
// You can construct a concrete instance of `HandlerMappingInput` via:
//
//          HandlerMappingArgs{...}
type HandlerMappingInput interface {
	pulumi.Input

	ToHandlerMappingOutput() HandlerMappingOutput
	ToHandlerMappingOutputWithContext(context.Context) HandlerMappingOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArgs) ToHandlerMappingOutput() HandlerMappingOutput {
	return i.ToHandlerMappingOutputWithContext(context.Background())
}

func (i HandlerMappingArgs) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingOutput)
}

// HandlerMappingArrayInput is an input type that accepts HandlerMappingArray and HandlerMappingArrayOutput values.
// You can construct a concrete instance of `HandlerMappingArrayInput` via:
//
//          HandlerMappingArray{ HandlerMappingArgs{...} }
type HandlerMappingArrayInput interface {
	pulumi.Input

	ToHandlerMappingArrayOutput() HandlerMappingArrayOutput
	ToHandlerMappingArrayOutputWithContext(context.Context) HandlerMappingArrayOutput
}

type HandlerMappingArray []HandlerMappingInput

func (HandlerMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return i.ToHandlerMappingArrayOutputWithContext(context.Background())
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingOutput struct{ *pulumi.OutputState }

func (HandlerMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingOutput) ToHandlerMappingOutput() HandlerMappingOutput {
	return o
}

func (o HandlerMappingOutput) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) Index(i pulumi.IntInput) HandlerMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMapping {
		return vs[0].([]HandlerMapping)[vs[1].(int)]
	}).(HandlerMappingOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingResponseInput is an input type that accepts HandlerMappingResponseArgs and HandlerMappingResponseOutput values.
// You can construct a concrete instance of `HandlerMappingResponseInput` via:
//
//          HandlerMappingResponseArgs{...}
type HandlerMappingResponseInput interface {
	pulumi.Input

	ToHandlerMappingResponseOutput() HandlerMappingResponseOutput
	ToHandlerMappingResponseOutputWithContext(context.Context) HandlerMappingResponseOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return i.ToHandlerMappingResponseOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseOutput)
}

// HandlerMappingResponseArrayInput is an input type that accepts HandlerMappingResponseArray and HandlerMappingResponseArrayOutput values.
// You can construct a concrete instance of `HandlerMappingResponseArrayInput` via:
//
//          HandlerMappingResponseArray{ HandlerMappingResponseArgs{...} }
type HandlerMappingResponseArrayInput interface {
	pulumi.Input

	ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput
	ToHandlerMappingResponseArrayOutputWithContext(context.Context) HandlerMappingResponseArrayOutput
}

type HandlerMappingResponseArray []HandlerMappingResponseInput

func (HandlerMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return i.ToHandlerMappingResponseArrayOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return o
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingResponse {
		return vs[0].([]HandlerMappingResponse)[vs[1].(int)]
	}).(HandlerMappingResponseOutput)
}

// SSL-enabled hostname.
type HostNameSslState struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInput is an input type that accepts HostNameSslStateArgs and HostNameSslStateOutput values.
// You can construct a concrete instance of `HostNameSslStateInput` via:
//
//          HostNameSslStateArgs{...}
type HostNameSslStateInput interface {
	pulumi.Input

	ToHostNameSslStateOutput() HostNameSslStateOutput
	ToHostNameSslStateOutputWithContext(context.Context) HostNameSslStateOutput
}

// SSL-enabled hostname.
type HostNameSslStateArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return i.ToHostNameSslStateOutputWithContext(context.Background())
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateOutput)
}

// HostNameSslStateArrayInput is an input type that accepts HostNameSslStateArray and HostNameSslStateArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateArrayInput` via:
//
//          HostNameSslStateArray{ HostNameSslStateArgs{...} }
type HostNameSslStateArrayInput interface {
	pulumi.Input

	ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput
	ToHostNameSslStateArrayOutputWithContext(context.Context) HostNameSslStateArrayOutput
}

type HostNameSslStateArray []HostNameSslStateInput

func (HostNameSslStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return i.ToHostNameSslStateArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateOutput struct{ *pulumi.OutputState }

func (HostNameSslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return o
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) Index(i pulumi.IntInput) HostNameSslStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslState {
		return vs[0].([]HostNameSslState)[vs[1].(int)]
	}).(HostNameSslStateOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponse struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateResponseInput is an input type that accepts HostNameSslStateResponseArgs and HostNameSslStateResponseOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseInput` via:
//
//          HostNameSslStateResponseArgs{...}
type HostNameSslStateResponseInput interface {
	pulumi.Input

	ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput
	ToHostNameSslStateResponseOutputWithContext(context.Context) HostNameSslStateResponseOutput
}

// SSL-enabled hostname.
type HostNameSslStateResponseArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return i.ToHostNameSslStateResponseOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseOutput)
}

// HostNameSslStateResponseArrayInput is an input type that accepts HostNameSslStateResponseArray and HostNameSslStateResponseArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseArrayInput` via:
//
//          HostNameSslStateResponseArray{ HostNameSslStateResponseArgs{...} }
type HostNameSslStateResponseArrayInput interface {
	pulumi.Input

	ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput
	ToHostNameSslStateResponseArrayOutputWithContext(context.Context) HostNameSslStateResponseArrayOutput
}

type HostNameSslStateResponseArray []HostNameSslStateResponseInput

func (HostNameSslStateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return i.ToHostNameSslStateResponseArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return o
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateResponseOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateResponse {
		return vs[0].([]HostNameSslStateResponse)[vs[1].(int)]
	}).(HostNameSslStateResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//          HostingEnvironmentProfileArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile { return *v }).(HostingEnvironmentProfileOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A domain specific resource identifier.
type IdentifierResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
	// String representation of the identity.
	Value *string `pulumi:"value"`
}

// IdentifierResponseInput is an input type that accepts IdentifierResponseArgs and IdentifierResponseOutput values.
// You can construct a concrete instance of `IdentifierResponseInput` via:
//
//          IdentifierResponseArgs{...}
type IdentifierResponseInput interface {
	pulumi.Input

	ToIdentifierResponseOutput() IdentifierResponseOutput
	ToIdentifierResponseOutputWithContext(context.Context) IdentifierResponseOutput
}

// A domain specific resource identifier.
type IdentifierResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// String representation of the identity.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return i.ToIdentifierResponseOutputWithContext(context.Background())
}

func (i IdentifierResponseArgs) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseOutput)
}

// IdentifierResponseArrayInput is an input type that accepts IdentifierResponseArray and IdentifierResponseArrayOutput values.
// You can construct a concrete instance of `IdentifierResponseArrayInput` via:
//
//          IdentifierResponseArray{ IdentifierResponseArgs{...} }
type IdentifierResponseArrayInput interface {
	pulumi.Input

	ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput
	ToIdentifierResponseArrayOutputWithContext(context.Context) IdentifierResponseArrayOutput
}

type IdentifierResponseArray []IdentifierResponseInput

func (IdentifierResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return i.ToIdentifierResponseArrayOutputWithContext(context.Background())
}

func (i IdentifierResponseArray) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierResponseArrayOutput)
}

// A domain specific resource identifier.
type IdentifierResponseOutput struct{ *pulumi.OutputState }

func (IdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return o
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return o
}

// Resource Id.
func (o IdentifierResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o IdentifierResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o IdentifierResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o IdentifierResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Type }).(pulumi.StringOutput)
}

// String representation of the identity.
func (o IdentifierResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) Index(i pulumi.IntInput) IdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentifierResponse {
		return vs[0].([]IdentifierResponse)[vs[1].(int)]
	}).(IdentifierResponseOutput)
}

// IP security restriction on an app.
type IpSecurityRestriction struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionInput is an input type that accepts IpSecurityRestrictionArgs and IpSecurityRestrictionOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInput` via:
//
//          IpSecurityRestrictionArgs{...}
type IpSecurityRestrictionInput interface {
	pulumi.Input

	ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput
	ToIpSecurityRestrictionOutputWithContext(context.Context) IpSecurityRestrictionOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return i.ToIpSecurityRestrictionOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionOutput)
}

// IpSecurityRestrictionArrayInput is an input type that accepts IpSecurityRestrictionArray and IpSecurityRestrictionArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionArrayInput` via:
//
//          IpSecurityRestrictionArray{ IpSecurityRestrictionArgs{...} }
type IpSecurityRestrictionArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput
	ToIpSecurityRestrictionArrayOutputWithContext(context.Context) IpSecurityRestrictionArrayOutput
}

type IpSecurityRestrictionArray []IpSecurityRestrictionInput

func (IpSecurityRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return i.ToIpSecurityRestrictionArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return o
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
// - If the property is null or empty (default), all hosts(or lack of) are allowed.
// - A value is compared using ordinal-ignore-case (excluding port number).
// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
// - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestriction) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestriction {
		return vs[0].([]IpSecurityRestriction)[vs[1].(int)]
	}).(IpSecurityRestrictionOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponse struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionResponseInput is an input type that accepts IpSecurityRestrictionResponseArgs and IpSecurityRestrictionResponseOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseInput` via:
//
//          IpSecurityRestrictionResponseArgs{...}
type IpSecurityRestrictionResponseInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput
	ToIpSecurityRestrictionResponseOutputWithContext(context.Context) IpSecurityRestrictionResponseOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return i.ToIpSecurityRestrictionResponseOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseOutput)
}

// IpSecurityRestrictionResponseArrayInput is an input type that accepts IpSecurityRestrictionResponseArray and IpSecurityRestrictionResponseArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseArrayInput` via:
//
//          IpSecurityRestrictionResponseArray{ IpSecurityRestrictionResponseArgs{...} }
type IpSecurityRestrictionResponseArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput
	ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Context) IpSecurityRestrictionResponseArrayOutput
}

type IpSecurityRestrictionResponseArray []IpSecurityRestrictionResponseInput

func (IpSecurityRestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return i.ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return o
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
// - If the property is null or empty (default), all hosts(or lack of) are allowed.
// - A value is compared using ordinal-ignore-case (excluding port number).
// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
// - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionResponseOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionResponseOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionResponseOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionResponseOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionResponse {
		return vs[0].([]IpSecurityRestrictionResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionResponseOutput)
}

// Managed service identity.
type ManagedServiceIdentity struct {
	// Type of managed service identity.
	Type *string `pulumi:"type"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//          ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity.
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//          ManagedServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity { return *v }).(ManagedServiceIdentityOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponse struct {
	// Principal Id of managed service identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityResponseInput is an input type that accepts ManagedServiceIdentityResponseArgs and ManagedServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
type ManagedServiceIdentityResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput
	ToManagedServiceIdentityResponseOutputWithContext(context.Context) ManagedServiceIdentityResponseOutput
}

// Managed service identity.
type ManagedServiceIdentityResponseArgs struct {
	// Principal Id of managed service identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return i.ToManagedServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput)
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput).ToManagedServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedServiceIdentityResponsePtrInput is an input type that accepts ManagedServiceIdentityResponseArgs, ManagedServiceIdentityResponsePtr and ManagedServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePtrInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput
	ToManagedServiceIdentityResponsePtrOutputWithContext(context.Context) ManagedServiceIdentityResponsePtrOutput
}

type managedServiceIdentityResponsePtrType ManagedServiceIdentityResponseArgs

func ManagedServiceIdentityResponsePtr(v *ManagedServiceIdentityResponseArgs) ManagedServiceIdentityResponsePtrInput {
	return (*managedServiceIdentityResponsePtrType)(v)
}

func (*managedServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *ManagedServiceIdentityResponse {
		return &v
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse { return *v }).(ManagedServiceIdentityResponseOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesArgs and ManagedServiceIdentityResponseUserAssignedIdentitiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...}
type ManagedServiceIdentityResponseUserAssignedIdentitiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesArgs struct {
	// Client Id of user assigned identity
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesMap and ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesMap{ "key": ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...} }
type ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMap map[string]ManagedServiceIdentityResponseUserAssignedIdentitiesInput

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// Client Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Name value pair.
type NameValuePair struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//          NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair.
type NameValuePairArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//          NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair.
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name.
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair.
type NameValuePairResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Name value pair.
type NameValuePairResponseArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Name value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

type NetworkAccessControlEntry struct {
	Action       *string `pulumi:"action"`
	Description  *string `pulumi:"description"`
	Order        *int    `pulumi:"order"`
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInput is an input type that accepts NetworkAccessControlEntryArgs and NetworkAccessControlEntryOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInput` via:
//
//          NetworkAccessControlEntryArgs{...}
type NetworkAccessControlEntryInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput
	ToNetworkAccessControlEntryOutputWithContext(context.Context) NetworkAccessControlEntryOutput
}

type NetworkAccessControlEntryArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	Description  pulumi.StringPtrInput `pulumi:"description"`
	Order        pulumi.IntPtrInput    `pulumi:"order"`
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return i.ToNetworkAccessControlEntryOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryOutput)
}

// NetworkAccessControlEntryArrayInput is an input type that accepts NetworkAccessControlEntryArray and NetworkAccessControlEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryArrayInput` via:
//
//          NetworkAccessControlEntryArray{ NetworkAccessControlEntryArgs{...} }
type NetworkAccessControlEntryArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput
	ToNetworkAccessControlEntryArrayOutputWithContext(context.Context) NetworkAccessControlEntryArrayOutput
}

type NetworkAccessControlEntryArray []NetworkAccessControlEntryInput

func (NetworkAccessControlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return i.ToNetworkAccessControlEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryArrayOutput)
}

type NetworkAccessControlEntryOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o NetworkAccessControlEntryOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntry {
		return vs[0].([]NetworkAccessControlEntry)[vs[1].(int)]
	}).(NetworkAccessControlEntryOutput)
}

type NetworkAccessControlEntryResponse struct {
	Action       *string `pulumi:"action"`
	Description  *string `pulumi:"description"`
	Order        *int    `pulumi:"order"`
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryResponseInput is an input type that accepts NetworkAccessControlEntryResponseArgs and NetworkAccessControlEntryResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseInput` via:
//
//          NetworkAccessControlEntryResponseArgs{...}
type NetworkAccessControlEntryResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput
	ToNetworkAccessControlEntryResponseOutputWithContext(context.Context) NetworkAccessControlEntryResponseOutput
}

type NetworkAccessControlEntryResponseArgs struct {
	Action       pulumi.StringPtrInput `pulumi:"action"`
	Description  pulumi.StringPtrInput `pulumi:"description"`
	Order        pulumi.IntPtrInput    `pulumi:"order"`
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return i.ToNetworkAccessControlEntryResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseOutput)
}

// NetworkAccessControlEntryResponseArrayInput is an input type that accepts NetworkAccessControlEntryResponseArray and NetworkAccessControlEntryResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseArrayInput` via:
//
//          NetworkAccessControlEntryResponseArray{ NetworkAccessControlEntryResponseArgs{...} }
type NetworkAccessControlEntryResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput
	ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryResponseArrayOutput
}

type NetworkAccessControlEntryResponseArray []NetworkAccessControlEntryResponseInput

func (NetworkAccessControlEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return i.ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseArrayOutput)
}

type NetworkAccessControlEntryResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

func (o NetworkAccessControlEntryResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryResponse {
		return vs[0].([]NetworkAccessControlEntryResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryResponseOutput)
}

// The state of a private link connection
type PrivateLinkConnectionState struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateInput is an input type that accepts PrivateLinkConnectionStateArgs and PrivateLinkConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateInput` via:
//
//          PrivateLinkConnectionStateArgs{...}
type PrivateLinkConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput
	ToPrivateLinkConnectionStateOutputWithContext(context.Context) PrivateLinkConnectionStateOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return i.ToPrivateLinkConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput)
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput).ToPrivateLinkConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkConnectionStatePtrInput is an input type that accepts PrivateLinkConnectionStateArgs, PrivateLinkConnectionStatePtr and PrivateLinkConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStatePtrInput` via:
//
//          PrivateLinkConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput
	ToPrivateLinkConnectionStatePtrOutputWithContext(context.Context) PrivateLinkConnectionStatePtrOutput
}

type privateLinkConnectionStatePtrType PrivateLinkConnectionStateArgs

func PrivateLinkConnectionStatePtr(v *PrivateLinkConnectionStateArgs) PrivateLinkConnectionStatePtrInput {
	return (*privateLinkConnectionStatePtrType)(v)
}

func (*privateLinkConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStatePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *PrivateLinkConnectionState {
		return &v
	}).(PrivateLinkConnectionStatePtrOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) Elem() PrivateLinkConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) PrivateLinkConnectionState { return *v }).(PrivateLinkConnectionStateOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateResponse struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateResponseInput is an input type that accepts PrivateLinkConnectionStateResponseArgs and PrivateLinkConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateResponseInput` via:
//
//          PrivateLinkConnectionStateResponseArgs{...}
type PrivateLinkConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput
	ToPrivateLinkConnectionStateResponseOutputWithContext(context.Context) PrivateLinkConnectionStateResponseOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateResponseArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return i.ToPrivateLinkConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponseOutput)
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponseOutput).ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkConnectionStateResponsePtrInput is an input type that accepts PrivateLinkConnectionStateResponseArgs, PrivateLinkConnectionStateResponsePtr and PrivateLinkConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateResponsePtrInput` via:
//
//          PrivateLinkConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput
	ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkConnectionStateResponsePtrOutput
}

type privateLinkConnectionStateResponsePtrType PrivateLinkConnectionStateResponseArgs

func PrivateLinkConnectionStateResponsePtr(v *PrivateLinkConnectionStateResponseArgs) PrivateLinkConnectionStateResponsePtrInput {
	return (*privateLinkConnectionStateResponsePtrType)(v)
}

func (*privateLinkConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkConnectionStateResponsePtrType) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkConnectionStateResponsePtrType) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponsePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *PrivateLinkConnectionStateResponse {
		return &v
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) Elem() PrivateLinkConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) PrivateLinkConnectionStateResponse { return *v }).(PrivateLinkConnectionStateResponseOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettings struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
}

// PushSettingsInput is an input type that accepts PushSettingsArgs and PushSettingsOutput values.
// You can construct a concrete instance of `PushSettingsInput` via:
//
//          PushSettingsArgs{...}
type PushSettingsInput interface {
	pulumi.Input

	ToPushSettingsOutput() PushSettingsOutput
	ToPushSettingsOutputWithContext(context.Context) PushSettingsOutput
}

// Push settings for the App.
type PushSettingsArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
}

func (PushSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (i PushSettingsArgs) ToPushSettingsOutput() PushSettingsOutput {
	return i.ToPushSettingsOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput)
}

func (i PushSettingsArgs) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput).ToPushSettingsPtrOutputWithContext(ctx)
}

// PushSettingsPtrInput is an input type that accepts PushSettingsArgs, PushSettingsPtr and PushSettingsPtrOutput values.
// You can construct a concrete instance of `PushSettingsPtrInput` via:
//
//          PushSettingsArgs{...}
//
//  or:
//
//          nil
type PushSettingsPtrInput interface {
	pulumi.Input

	ToPushSettingsPtrOutput() PushSettingsPtrOutput
	ToPushSettingsPtrOutputWithContext(context.Context) PushSettingsPtrOutput
}

type pushSettingsPtrType PushSettingsArgs

func PushSettingsPtr(v *PushSettingsArgs) PushSettingsPtrInput {
	return (*pushSettingsPtrType)(v)
}

func (*pushSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsPtrOutput)
}

// Push settings for the App.
type PushSettingsOutput struct{ *pulumi.OutputState }

func (PushSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (o PushSettingsOutput) ToPushSettingsOutput() PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (o PushSettingsOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o.ApplyT(func(v PushSettings) *PushSettings {
		return &v
	}).(PushSettingsPtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettings) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

type PushSettingsPtrOutput struct{ *pulumi.OutputState }

func (PushSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) Elem() PushSettingsOutput {
	return o.ApplyT(func(v *PushSettings) PushSettings { return *v }).(PushSettingsOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsPtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsPtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsPtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsPtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettingsResponse struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PushSettingsResponseInput is an input type that accepts PushSettingsResponseArgs and PushSettingsResponseOutput values.
// You can construct a concrete instance of `PushSettingsResponseInput` via:
//
//          PushSettingsResponseArgs{...}
type PushSettingsResponseInput interface {
	pulumi.Input

	ToPushSettingsResponseOutput() PushSettingsResponseOutput
	ToPushSettingsResponseOutputWithContext(context.Context) PushSettingsResponseOutput
}

// Push settings for the App.
type PushSettingsResponseArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PushSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return i.ToPushSettingsResponseOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput)
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput).ToPushSettingsResponsePtrOutputWithContext(ctx)
}

// PushSettingsResponsePtrInput is an input type that accepts PushSettingsResponseArgs, PushSettingsResponsePtr and PushSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PushSettingsResponsePtrInput` via:
//
//          PushSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PushSettingsResponsePtrInput interface {
	pulumi.Input

	ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput
	ToPushSettingsResponsePtrOutputWithContext(context.Context) PushSettingsResponsePtrOutput
}

type pushSettingsResponsePtrType PushSettingsResponseArgs

func PushSettingsResponsePtr(v *PushSettingsResponseArgs) PushSettingsResponsePtrInput {
	return (*pushSettingsResponsePtrType)(v)
}

func (*pushSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePtrOutput)
}

// Push settings for the App.
type PushSettingsResponseOutput struct{ *pulumi.OutputState }

func (PushSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *PushSettingsResponse {
		return &v
	}).(PushSettingsResponsePtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponseOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponseOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettingsResponse) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponseOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponseOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PushSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) Elem() PushSettingsResponseOutput {
	return o.ApplyT(func(v *PushSettingsResponse) PushSettingsResponse { return *v }).(PushSettingsResponseOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponsePtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponsePtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponsePtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponsePtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRule struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInput is an input type that accepts RampUpRuleArgs and RampUpRuleOutput values.
// You can construct a concrete instance of `RampUpRuleInput` via:
//
//          RampUpRuleArgs{...}
type RampUpRuleInput interface {
	pulumi.Input

	ToRampUpRuleOutput() RampUpRuleOutput
	ToRampUpRuleOutputWithContext(context.Context) RampUpRuleOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArgs) ToRampUpRuleOutput() RampUpRuleOutput {
	return i.ToRampUpRuleOutputWithContext(context.Background())
}

func (i RampUpRuleArgs) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleOutput)
}

// RampUpRuleArrayInput is an input type that accepts RampUpRuleArray and RampUpRuleArrayOutput values.
// You can construct a concrete instance of `RampUpRuleArrayInput` via:
//
//          RampUpRuleArray{ RampUpRuleArgs{...} }
type RampUpRuleArrayInput interface {
	pulumi.Input

	ToRampUpRuleArrayOutput() RampUpRuleArrayOutput
	ToRampUpRuleArrayOutputWithContext(context.Context) RampUpRuleArrayOutput
}

type RampUpRuleArray []RampUpRuleInput

func (RampUpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return i.ToRampUpRuleArrayOutputWithContext(context.Background())
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleOutput struct{ *pulumi.OutputState }

func (RampUpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (o RampUpRuleOutput) ToRampUpRuleOutput() RampUpRuleOutput {
	return o
}

func (o RampUpRuleOutput) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRule) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) Index(i pulumi.IntInput) RampUpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRule {
		return vs[0].([]RampUpRule)[vs[1].(int)]
	}).(RampUpRuleOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleResponseInput is an input type that accepts RampUpRuleResponseArgs and RampUpRuleResponseOutput values.
// You can construct a concrete instance of `RampUpRuleResponseInput` via:
//
//          RampUpRuleResponseArgs{...}
type RampUpRuleResponseInput interface {
	pulumi.Input

	ToRampUpRuleResponseOutput() RampUpRuleResponseOutput
	ToRampUpRuleResponseOutputWithContext(context.Context) RampUpRuleResponseOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return i.ToRampUpRuleResponseOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseOutput)
}

// RampUpRuleResponseArrayInput is an input type that accepts RampUpRuleResponseArray and RampUpRuleResponseArrayOutput values.
// You can construct a concrete instance of `RampUpRuleResponseArrayInput` via:
//
//          RampUpRuleResponseArray{ RampUpRuleResponseArgs{...} }
type RampUpRuleResponseArrayInput interface {
	pulumi.Input

	ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput
	ToRampUpRuleResponseArrayOutputWithContext(context.Context) RampUpRuleResponseArrayOutput
}

type RampUpRuleResponseArray []RampUpRuleResponseInput

func (RampUpRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return i.ToRampUpRuleResponseArrayOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return o
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleResponse {
		return vs[0].([]RampUpRuleResponse)[vs[1].(int)]
	}).(RampUpRuleResponseOutput)
}

// Trigger based on total requests.
type RequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInput is an input type that accepts RequestsBasedTriggerArgs and RequestsBasedTriggerOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInput` via:
//
//          RequestsBasedTriggerArgs{...}
type RequestsBasedTriggerInput interface {
	pulumi.Input

	ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput
	ToRequestsBasedTriggerOutputWithContext(context.Context) RequestsBasedTriggerOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return i.ToRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput)
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput).ToRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// RequestsBasedTriggerPtrInput is an input type that accepts RequestsBasedTriggerArgs, RequestsBasedTriggerPtr and RequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerPtrInput` via:
//
//          RequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput
	ToRequestsBasedTriggerPtrOutputWithContext(context.Context) RequestsBasedTriggerPtrOutput
}

type requestsBasedTriggerPtrType RequestsBasedTriggerArgs

func RequestsBasedTriggerPtr(v *RequestsBasedTriggerArgs) RequestsBasedTriggerPtrInput {
	return (*requestsBasedTriggerPtrType)(v)
}

func (*requestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *RequestsBasedTrigger {
		return &v
	}).(RequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) Elem() RequestsBasedTriggerOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) RequestsBasedTrigger { return *v }).(RequestsBasedTriggerOutput)
}

// Request Count.
func (o RequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerResponseInput is an input type that accepts RequestsBasedTriggerResponseArgs and RequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponseInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
type RequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput
	ToRequestsBasedTriggerResponseOutputWithContext(context.Context) RequestsBasedTriggerResponseOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return i.ToRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput)
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput).ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// RequestsBasedTriggerResponsePtrInput is an input type that accepts RequestsBasedTriggerResponseArgs, RequestsBasedTriggerResponsePtr and RequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponsePtrInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput
	ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) RequestsBasedTriggerResponsePtrOutput
}

type requestsBasedTriggerResponsePtrType RequestsBasedTriggerResponseArgs

func RequestsBasedTriggerResponsePtr(v *RequestsBasedTriggerResponseArgs) RequestsBasedTriggerResponsePtrInput {
	return (*requestsBasedTriggerResponsePtrType)(v)
}

func (*requestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *RequestsBasedTriggerResponse {
		return &v
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) Elem() RequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) RequestsBasedTriggerResponse { return *v }).(RequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Configuration of an App Service app.
type SiteConfig struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfig `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *Experiments `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimits `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettings `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestriction `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigInput is an input type that accepts SiteConfigArgs and SiteConfigOutput values.
// You can construct a concrete instance of `SiteConfigInput` via:
//
//          SiteConfigArgs{...}
type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(context.Context) SiteConfigOutput
}

// Configuration of an App Service app.
type SiteConfigArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoPtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigPtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesPtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings ConnStringInfoArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsPtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsPtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsPtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (i SiteConfigArgs) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

func (i SiteConfigArgs) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput).ToSiteConfigPtrOutputWithContext(ctx)
}

// SiteConfigPtrInput is an input type that accepts SiteConfigArgs, SiteConfigPtr and SiteConfigPtrOutput values.
// You can construct a concrete instance of `SiteConfigPtrInput` via:
//
//          SiteConfigArgs{...}
//
//  or:
//
//          nil
type SiteConfigPtrInput interface {
	pulumi.Input

	ToSiteConfigPtrOutput() SiteConfigPtrOutput
	ToSiteConfigPtrOutputWithContext(context.Context) SiteConfigPtrOutput
}

type siteConfigPtrType SiteConfigArgs

func SiteConfigPtr(v *SiteConfigArgs) SiteConfigPtrInput {
	return (*siteConfigPtrType)(v)
}

func (*siteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigOutput struct{ *pulumi.OutputState }

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (o SiteConfigOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteConfig {
		return &v
	}).(SiteConfigPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiDefinitionInfo { return v.ApiDefinition }).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiManagementConfig { return v.ApiManagementConfig }).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfig) []NameValuePair { return v.AppSettings }).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v SiteConfig) *AutoHealRules { return v.AutoHealRules }).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v SiteConfig) []ConnStringInfo { return v.ConnectionStrings }).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *CorsSettings { return v.Cors }).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *Experiments { return v.Experiments }).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v SiteConfig) []HandlerMapping { return v.HandlerMappings }).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.IpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteLimits { return v.Limits }).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *PushSettings { return v.Push }).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v SiteConfig) []VirtualApplication { return v.VirtualApplications }).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) Elem() SiteConfigOutput {
	return o.ApplyT(func(v *SiteConfig) SiteConfig { return *v }).(SiteConfigOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigPtrOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiDefinitionInfo {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigPtrOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiManagementConfig {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigPtrOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigPtrOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *AutoHealRules {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigPtrOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []ConnStringInfo {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPtrOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *CorsSettings {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigPtrOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *Experiments {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigPtrOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []HandlerMapping {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigPtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigPtrOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigPtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigPtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigPtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigPtrOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *PushSettings {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigPtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigPtrOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []VirtualApplication {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigPtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigPtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigPtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponse struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfigResponse `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigResponseInput is an input type that accepts SiteConfigResponseArgs and SiteConfigResponseOutput values.
// You can construct a concrete instance of `SiteConfigResponseInput` via:
//
//          SiteConfigResponseArgs{...}
type SiteConfigResponseInput interface {
	pulumi.Input

	ToSiteConfigResponseOutput() SiteConfigResponseOutput
	ToSiteConfigResponseOutputWithContext(context.Context) SiteConfigResponseOutput
}

// Configuration of an App Service app.
type SiteConfigResponseArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigResponsePtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairResponseArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesResponsePtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings ConnStringInfoResponseArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsResponsePtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingResponseArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsResponsePtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponseInput `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsResponsePtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationResponseArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return i.ToSiteConfigResponseOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput)
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput).ToSiteConfigResponsePtrOutputWithContext(ctx)
}

// SiteConfigResponsePtrInput is an input type that accepts SiteConfigResponseArgs, SiteConfigResponsePtr and SiteConfigResponsePtrOutput values.
// You can construct a concrete instance of `SiteConfigResponsePtrInput` via:
//
//          SiteConfigResponseArgs{...}
//
//  or:
//
//          nil
type SiteConfigResponsePtrInput interface {
	pulumi.Input

	ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput
	ToSiteConfigResponsePtrOutputWithContext(context.Context) SiteConfigResponsePtrOutput
}

type siteConfigResponsePtrType SiteConfigResponseArgs

func SiteConfigResponsePtr(v *SiteConfigResponseArgs) SiteConfigResponsePtrInput {
	return (*siteConfigResponsePtrType)(v)
}

func (*siteConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteConfigResponse {
		return &v
	}).(SiteConfigResponsePtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponseOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiDefinitionInfoResponse { return v.ApiDefinition }).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponseOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiManagementConfigResponse { return v.ApiManagementConfig }).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponseOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponseOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []NameValuePairResponse { return v.AppSettings }).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponseOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *AutoHealRulesResponse { return v.AutoHealRules }).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponseOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigResponseOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []ConnStringInfoResponse { return v.ConnectionStrings }).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponseOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *CorsSettingsResponse { return v.Cors }).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponseOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponseOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponseOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ExperimentsResponse { return v.Experiments }).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponseOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponseOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []HandlerMappingResponse { return v.HandlerMappings }).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponseOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponseOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponseOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.IpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponseOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponseOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponseOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponseOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteLimitsResponse { return v.Limits }).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponseOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponseOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponseOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponseOutput) MachineKey() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v SiteConfigResponse) SiteMachineKeyResponse { return v.MachineKey }).(SiteMachineKeyResponseOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponseOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponseOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponseOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponseOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponseOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponseOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponseOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponseOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponseOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponseOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *PushSettingsResponse { return v.Push }).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponseOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponseOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponseOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponseOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponseOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponseOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponseOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []VirtualApplicationResponse { return v.VirtualApplications }).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponseOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponseOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponseOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponseOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) Elem() SiteConfigResponseOutput {
	return o.ApplyT(func(v *SiteConfigResponse) SiteConfigResponse { return *v }).(SiteConfigResponseOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponsePtrOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiDefinitionInfoResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponsePtrOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiManagementConfigResponse {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponsePtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponsePtrOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponsePtrOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *AutoHealRulesResponse {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponsePtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigResponsePtrOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []ConnStringInfoResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePtrOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *CorsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponsePtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponsePtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponsePtrOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ExperimentsResponse {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponsePtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponsePtrOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []HandlerMappingResponse {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponsePtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponsePtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponsePtrOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponsePtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponsePtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponsePtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponsePtrOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteLimitsResponse {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponsePtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponsePtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponsePtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponsePtrOutput) MachineKey() SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteMachineKeyResponse {
		if v == nil {
			return nil
		}
		return &v.MachineKey
	}).(SiteMachineKeyResponsePtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponsePtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponsePtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponsePtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponsePtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponsePtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponsePtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponsePtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponsePtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponsePtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponsePtrOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *PushSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponsePtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponsePtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponsePtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponsePtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponsePtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponsePtrOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []VirtualApplicationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponsePtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponsePtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponsePtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Metric limits set on an app.
type SiteLimits struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInput is an input type that accepts SiteLimitsArgs and SiteLimitsOutput values.
// You can construct a concrete instance of `SiteLimitsInput` via:
//
//          SiteLimitsArgs{...}
type SiteLimitsInput interface {
	pulumi.Input

	ToSiteLimitsOutput() SiteLimitsOutput
	ToSiteLimitsOutputWithContext(context.Context) SiteLimitsOutput
}

// Metric limits set on an app.
type SiteLimitsArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (i SiteLimitsArgs) ToSiteLimitsOutput() SiteLimitsOutput {
	return i.ToSiteLimitsOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput)
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput).ToSiteLimitsPtrOutputWithContext(ctx)
}

// SiteLimitsPtrInput is an input type that accepts SiteLimitsArgs, SiteLimitsPtr and SiteLimitsPtrOutput values.
// You can construct a concrete instance of `SiteLimitsPtrInput` via:
//
//          SiteLimitsArgs{...}
//
//  or:
//
//          nil
type SiteLimitsPtrInput interface {
	pulumi.Input

	ToSiteLimitsPtrOutput() SiteLimitsPtrOutput
	ToSiteLimitsPtrOutputWithContext(context.Context) SiteLimitsPtrOutput
}

type siteLimitsPtrType SiteLimitsArgs

func SiteLimitsPtr(v *SiteLimitsArgs) SiteLimitsPtrInput {
	return (*siteLimitsPtrType)(v)
}

func (*siteLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsPtrOutput)
}

// Metric limits set on an app.
type SiteLimitsOutput struct{ *pulumi.OutputState }

func (SiteLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (o SiteLimitsOutput) ToSiteLimitsOutput() SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteLimits) *SiteLimits {
		return &v
	}).(SiteLimitsPtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimits) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsPtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) Elem() SiteLimitsOutput {
	return o.ApplyT(func(v *SiteLimits) SiteLimits { return *v }).(SiteLimitsOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsPtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsPtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsPtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponse struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *int `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *int `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsResponseInput is an input type that accepts SiteLimitsResponseArgs and SiteLimitsResponseOutput values.
// You can construct a concrete instance of `SiteLimitsResponseInput` via:
//
//          SiteLimitsResponseArgs{...}
type SiteLimitsResponseInput interface {
	pulumi.Input

	ToSiteLimitsResponseOutput() SiteLimitsResponseOutput
	ToSiteLimitsResponseOutputWithContext(context.Context) SiteLimitsResponseOutput
}

// Metric limits set on an app.
type SiteLimitsResponseArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.IntPtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.IntPtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return i.ToSiteLimitsResponseOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput)
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput).ToSiteLimitsResponsePtrOutputWithContext(ctx)
}

// SiteLimitsResponsePtrInput is an input type that accepts SiteLimitsResponseArgs, SiteLimitsResponsePtr and SiteLimitsResponsePtrOutput values.
// You can construct a concrete instance of `SiteLimitsResponsePtrInput` via:
//
//          SiteLimitsResponseArgs{...}
//
//  or:
//
//          nil
type SiteLimitsResponsePtrInput interface {
	pulumi.Input

	ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput
	ToSiteLimitsResponsePtrOutputWithContext(context.Context) SiteLimitsResponsePtrOutput
}

type siteLimitsResponsePtrType SiteLimitsResponseArgs

func SiteLimitsResponsePtr(v *SiteLimitsResponseArgs) SiteLimitsResponsePtrInput {
	return (*siteLimitsResponsePtrType)(v)
}

func (*siteLimitsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponsePtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *SiteLimitsResponse {
		return &v
	}).(SiteLimitsResponsePtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponseOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxDiskSizeInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponseOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *int { return v.MaxMemoryInMb }).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) Elem() SiteLimitsResponseOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) SiteLimitsResponse { return *v }).(SiteLimitsResponseOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxDiskSizeInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponse struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// SiteMachineKeyResponseInput is an input type that accepts SiteMachineKeyResponseArgs and SiteMachineKeyResponseOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponseInput` via:
//
//          SiteMachineKeyResponseArgs{...}
type SiteMachineKeyResponseInput interface {
	pulumi.Input

	ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput
	ToSiteMachineKeyResponseOutputWithContext(context.Context) SiteMachineKeyResponseOutput
}

// MachineKey of an app.
type SiteMachineKeyResponseArgs struct {
	// Algorithm used for decryption.
	Decryption pulumi.StringPtrInput `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey pulumi.StringPtrInput `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
	// Validation key.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (SiteMachineKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return i.ToSiteMachineKeyResponseOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput)
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput).ToSiteMachineKeyResponsePtrOutputWithContext(ctx)
}

// SiteMachineKeyResponsePtrInput is an input type that accepts SiteMachineKeyResponseArgs, SiteMachineKeyResponsePtr and SiteMachineKeyResponsePtrOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponsePtrInput` via:
//
//          SiteMachineKeyResponseArgs{...}
//
//  or:
//
//          nil
type SiteMachineKeyResponsePtrInput interface {
	pulumi.Input

	ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput
	ToSiteMachineKeyResponsePtrOutputWithContext(context.Context) SiteMachineKeyResponsePtrOutput
}

type siteMachineKeyResponsePtrType SiteMachineKeyResponseArgs

func SiteMachineKeyResponsePtr(v *SiteMachineKeyResponseArgs) SiteMachineKeyResponsePtrInput {
	return (*siteMachineKeyResponsePtrType)(v)
}

func (*siteMachineKeyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponsePtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponseOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *SiteMachineKeyResponse {
		return &v
	}).(SiteMachineKeyResponsePtrOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponseOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponseOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponseOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponseOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

type SiteMachineKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) Elem() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) SiteMachineKeyResponse { return *v }).(SiteMachineKeyResponseOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponsePtrOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Decryption
	}).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponsePtrOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.DecryptionKey
	}).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponsePtrOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponsePtrOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationKey
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacity struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInput is an input type that accepts SkuCapacityArgs and SkuCapacityOutput values.
// You can construct a concrete instance of `SkuCapacityInput` via:
//
//          SkuCapacityArgs{...}
type SkuCapacityInput interface {
	pulumi.Input

	ToSkuCapacityOutput() SkuCapacityOutput
	ToSkuCapacityOutputWithContext(context.Context) SkuCapacityOutput
}

// Description of the App Service plan scale options.
type SkuCapacityArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (i SkuCapacityArgs) ToSkuCapacityOutput() SkuCapacityOutput {
	return i.ToSkuCapacityOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput)
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput).ToSkuCapacityPtrOutputWithContext(ctx)
}

// SkuCapacityPtrInput is an input type that accepts SkuCapacityArgs, SkuCapacityPtr and SkuCapacityPtrOutput values.
// You can construct a concrete instance of `SkuCapacityPtrInput` via:
//
//          SkuCapacityArgs{...}
//
//  or:
//
//          nil
type SkuCapacityPtrInput interface {
	pulumi.Input

	ToSkuCapacityPtrOutput() SkuCapacityPtrOutput
	ToSkuCapacityPtrOutputWithContext(context.Context) SkuCapacityPtrOutput
}

type skuCapacityPtrType SkuCapacityArgs

func SkuCapacityPtr(v *SkuCapacityArgs) SkuCapacityPtrInput {
	return (*skuCapacityPtrType)(v)
}

func (*skuCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityOutput struct{ *pulumi.OutputState }

func (SkuCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityOutput) ToSkuCapacityOutput() SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *SkuCapacity {
		return &v
	}).(SkuCapacityPtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityPtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) Elem() SkuCapacityOutput {
	return o.ApplyT(func(v *SkuCapacity) SkuCapacity { return *v }).(SkuCapacityOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityResponseInput is an input type that accepts SkuCapacityResponseArgs and SkuCapacityResponseOutput values.
// You can construct a concrete instance of `SkuCapacityResponseInput` via:
//
//          SkuCapacityResponseArgs{...}
type SkuCapacityResponseInput interface {
	pulumi.Input

	ToSkuCapacityResponseOutput() SkuCapacityResponseOutput
	ToSkuCapacityResponseOutputWithContext(context.Context) SkuCapacityResponseOutput
}

// Description of the App Service plan scale options.
type SkuCapacityResponseArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return i.ToSkuCapacityResponseOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput)
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput).ToSkuCapacityResponsePtrOutputWithContext(ctx)
}

// SkuCapacityResponsePtrInput is an input type that accepts SkuCapacityResponseArgs, SkuCapacityResponsePtr and SkuCapacityResponsePtrOutput values.
// You can construct a concrete instance of `SkuCapacityResponsePtrInput` via:
//
//          SkuCapacityResponseArgs{...}
//
//  or:
//
//          nil
type SkuCapacityResponsePtrInput interface {
	pulumi.Input

	ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput
	ToSkuCapacityResponsePtrOutputWithContext(context.Context) SkuCapacityResponsePtrOutput
}

type skuCapacityResponsePtrType SkuCapacityResponseArgs

func SkuCapacityResponsePtr(v *SkuCapacityResponseArgs) SkuCapacityResponsePtrInput {
	return (*skuCapacityResponsePtrType)(v)
}

func (*skuCapacityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponsePtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *SkuCapacityResponse {
		return &v
	}).(SkuCapacityResponsePtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) Elem() SkuCapacityResponseOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) SkuCapacityResponse { return *v }).(SkuCapacityResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescription struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []Capability `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacity `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//          SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityPtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//          SkuDescriptionArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v SkuDescription) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescription) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuCapacity { return v.SkuCapacity }).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription { return *v }).(SkuDescriptionOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionPtrOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *SkuCapacity {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionResponseInput is an input type that accepts SkuDescriptionResponseArgs and SkuDescriptionResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionResponseInput` via:
//
//          SkuDescriptionResponseArgs{...}
type SkuDescriptionResponseInput interface {
	pulumi.Input

	ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput
	ToSkuDescriptionResponseOutputWithContext(context.Context) SkuDescriptionResponseOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityResponseArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityResponsePtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return i.ToSkuDescriptionResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput)
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput).ToSkuDescriptionResponsePtrOutputWithContext(ctx)
}

// SkuDescriptionResponsePtrInput is an input type that accepts SkuDescriptionResponseArgs, SkuDescriptionResponsePtr and SkuDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `SkuDescriptionResponsePtrInput` via:
//
//          SkuDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionResponsePtrInput interface {
	pulumi.Input

	ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput
	ToSkuDescriptionResponsePtrOutputWithContext(context.Context) SkuDescriptionResponsePtrOutput
}

type skuDescriptionResponsePtrType SkuDescriptionResponseArgs

func SkuDescriptionResponsePtr(v *SkuDescriptionResponseArgs) SkuDescriptionResponsePtrInput {
	return (*skuDescriptionResponsePtrType)(v)
}

func (*skuDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponsePtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuDescriptionResponse {
		return &v
	}).(SkuDescriptionResponsePtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponseOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuCapacityResponse { return v.SkuCapacity }).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse { return *v }).(SkuDescriptionResponseOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponsePtrOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []CapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponsePtrOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *SkuCapacityResponse {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponse struct {
	// The destination slot of the last swap operation.
	DestinationSlotName string `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName string `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc string `pulumi:"timestampUtc"`
}

// SlotSwapStatusResponseInput is an input type that accepts SlotSwapStatusResponseArgs and SlotSwapStatusResponseOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponseInput` via:
//
//          SlotSwapStatusResponseArgs{...}
type SlotSwapStatusResponseInput interface {
	pulumi.Input

	ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput
	ToSlotSwapStatusResponseOutputWithContext(context.Context) SlotSwapStatusResponseOutput
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseArgs struct {
	// The destination slot of the last swap operation.
	DestinationSlotName pulumi.StringInput `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName pulumi.StringInput `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc pulumi.StringInput `pulumi:"timestampUtc"`
}

func (SlotSwapStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return i.ToSlotSwapStatusResponseOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput)
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput).ToSlotSwapStatusResponsePtrOutputWithContext(ctx)
}

// SlotSwapStatusResponsePtrInput is an input type that accepts SlotSwapStatusResponseArgs, SlotSwapStatusResponsePtr and SlotSwapStatusResponsePtrOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponsePtrInput` via:
//
//          SlotSwapStatusResponseArgs{...}
//
//  or:
//
//          nil
type SlotSwapStatusResponsePtrInput interface {
	pulumi.Input

	ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput
	ToSlotSwapStatusResponsePtrOutputWithContext(context.Context) SlotSwapStatusResponsePtrOutput
}

type slotSwapStatusResponsePtrType SlotSwapStatusResponseArgs

func SlotSwapStatusResponsePtr(v *SlotSwapStatusResponseArgs) SlotSwapStatusResponsePtrInput {
	return (*slotSwapStatusResponsePtrType)(v)
}

func (*slotSwapStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponsePtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) *SlotSwapStatusResponse {
		return &v
	}).(SlotSwapStatusResponsePtrOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) DestinationSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.DestinationSlotName }).(pulumi.StringOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) SourceSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.SourceSlotName }).(pulumi.StringOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponseOutput) TimestampUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.TimestampUtc }).(pulumi.StringOutput)
}

type SlotSwapStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) Elem() SlotSwapStatusResponseOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) SlotSwapStatusResponse { return *v }).(SlotSwapStatusResponseOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) DestinationSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationSlotName
	}).(pulumi.StringPtrOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) SourceSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceSlotName
	}).(pulumi.StringPtrOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponsePtrOutput) TimestampUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimestampUtc
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInput is an input type that accepts SlowRequestsBasedTriggerArgs and SlowRequestsBasedTriggerOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
type SlowRequestsBasedTriggerInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput
	ToSlowRequestsBasedTriggerOutputWithContext(context.Context) SlowRequestsBasedTriggerOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return i.ToSlowRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput)
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput).ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerPtrInput is an input type that accepts SlowRequestsBasedTriggerArgs, SlowRequestsBasedTriggerPtr and SlowRequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerPtrInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput
	ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Context) SlowRequestsBasedTriggerPtrOutput
}

type slowRequestsBasedTriggerPtrType SlowRequestsBasedTriggerArgs

func SlowRequestsBasedTriggerPtr(v *SlowRequestsBasedTriggerArgs) SlowRequestsBasedTriggerPtrInput {
	return (*slowRequestsBasedTriggerPtrType)(v)
}

func (*slowRequestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *SlowRequestsBasedTrigger {
		return &v
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) Elem() SlowRequestsBasedTriggerOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) SlowRequestsBasedTrigger { return *v }).(SlowRequestsBasedTriggerOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerPtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerResponseInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs and SlowRequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponseInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
type SlowRequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput
	ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Context) SlowRequestsBasedTriggerResponseOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return i.ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput)
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput).ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerResponsePtrInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs, SlowRequestsBasedTriggerResponsePtr and SlowRequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponsePtrInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput
	ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) SlowRequestsBasedTriggerResponsePtrOutput
}

type slowRequestsBasedTriggerResponsePtrType SlowRequestsBasedTriggerResponseArgs

func SlowRequestsBasedTriggerResponsePtr(v *SlowRequestsBasedTriggerResponseArgs) SlowRequestsBasedTriggerResponsePtrInput {
	return (*slowRequestsBasedTriggerResponsePtrType)(v)
}

func (*slowRequestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *SlowRequestsBasedTriggerResponse {
		return &v
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) Elem() SlowRequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) SlowRequestsBasedTriggerResponse { return *v }).(SlowRequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Class containing stamp capacity information
type StampCapacity struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode *string `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name *string `pulumi:"name"`
	// Shared or Dedicated
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit
	Unit *string `pulumi:"unit"`
	// Size of the machines
	WorkerSize *string `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityInput is an input type that accepts StampCapacityArgs and StampCapacityOutput values.
// You can construct a concrete instance of `StampCapacityInput` via:
//
//          StampCapacityArgs{...}
type StampCapacityInput interface {
	pulumi.Input

	ToStampCapacityOutput() StampCapacityOutput
	ToStampCapacityOutputWithContext(context.Context) StampCapacityOutput
}

// Class containing stamp capacity information
type StampCapacityArgs struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (i StampCapacityArgs) ToStampCapacityOutput() StampCapacityOutput {
	return i.ToStampCapacityOutputWithContext(context.Background())
}

func (i StampCapacityArgs) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityOutput)
}

// StampCapacityArrayInput is an input type that accepts StampCapacityArray and StampCapacityArrayOutput values.
// You can construct a concrete instance of `StampCapacityArrayInput` via:
//
//          StampCapacityArray{ StampCapacityArgs{...} }
type StampCapacityArrayInput interface {
	pulumi.Input

	ToStampCapacityArrayOutput() StampCapacityArrayOutput
	ToStampCapacityArrayOutputWithContext(context.Context) StampCapacityArrayOutput
}

type StampCapacityArray []StampCapacityInput

func (StampCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacity)(nil)).Elem()
}

func (i StampCapacityArray) ToStampCapacityArrayOutput() StampCapacityArrayOutput {
	return i.ToStampCapacityArrayOutputWithContext(context.Background())
}

func (i StampCapacityArray) ToStampCapacityArrayOutputWithContext(ctx context.Context) StampCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityArrayOutput)
}

// Class containing stamp capacity information
type StampCapacityOutput struct{ *pulumi.OutputState }

func (StampCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacity)(nil)).Elem()
}

func (o StampCapacityOutput) ToStampCapacityOutput() StampCapacityOutput {
	return o
}

func (o StampCapacityOutput) ToStampCapacityOutputWithContext(ctx context.Context) StampCapacityOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...)
func (o StampCapacityOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/Dedicated workers
func (o StampCapacityOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If true it includes basic sites
//             Basic sites are not used for capacity allocation.
func (o StampCapacityOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// Is capacity applicable for all sites?
func (o StampCapacityOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacity) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Name of the stamp
func (o StampCapacityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated
func (o StampCapacityOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...)
func (o StampCapacityOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit
func (o StampCapacityOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines
func (o StampCapacityOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacity) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size Id of machines:
//             0 - Small
//             1 - Medium
//             2 - Large
func (o StampCapacityOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacity) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacity)(nil)).Elem()
}

func (o StampCapacityArrayOutput) ToStampCapacityArrayOutput() StampCapacityArrayOutput {
	return o
}

func (o StampCapacityArrayOutput) ToStampCapacityArrayOutputWithContext(ctx context.Context) StampCapacityArrayOutput {
	return o
}

func (o StampCapacityArrayOutput) Index(i pulumi.IntInput) StampCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacity {
		return vs[0].([]StampCapacity)[vs[1].(int)]
	}).(StampCapacityOutput)
}

// Class containing stamp capacity information
type StampCapacityResponse struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity *int `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode *string `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name *string `pulumi:"name"`
	// Shared or Dedicated
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Name of the unit
	Unit *string `pulumi:"unit"`
	// Size of the machines
	WorkerSize *string `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityResponseInput is an input type that accepts StampCapacityResponseArgs and StampCapacityResponseOutput values.
// You can construct a concrete instance of `StampCapacityResponseInput` via:
//
//          StampCapacityResponseArgs{...}
type StampCapacityResponseInput interface {
	pulumi.Input

	ToStampCapacityResponseOutput() StampCapacityResponseOutput
	ToStampCapacityResponseOutputWithContext(context.Context) StampCapacityResponseOutput
}

// Class containing stamp capacity information
type StampCapacityResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...)
	AvailableCapacity pulumi.IntPtrInput `pulumi:"availableCapacity"`
	// Shared/Dedicated workers
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If true it includes basic sites
	//             Basic sites are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// Is capacity applicable for all sites?
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Name of the stamp
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...)
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Name of the unit
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size Id of machines:
	//             0 - Small
	//             1 - Medium
	//             2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return i.ToStampCapacityResponseOutputWithContext(context.Background())
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseOutput)
}

// StampCapacityResponseArrayInput is an input type that accepts StampCapacityResponseArray and StampCapacityResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityResponseArrayInput` via:
//
//          StampCapacityResponseArray{ StampCapacityResponseArgs{...} }
type StampCapacityResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput
	ToStampCapacityResponseArrayOutputWithContext(context.Context) StampCapacityResponseArrayOutput
}

type StampCapacityResponseArray []StampCapacityResponseInput

func (StampCapacityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return i.ToStampCapacityResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseArrayOutput)
}

// Class containing stamp capacity information
type StampCapacityResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return o
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...)
func (o StampCapacityResponseOutput) AvailableCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.AvailableCapacity }).(pulumi.IntPtrOutput)
}

// Shared/Dedicated workers
func (o StampCapacityResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If true it includes basic sites
//             Basic sites are not used for capacity allocation.
func (o StampCapacityResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// Is capacity applicable for all sites?
func (o StampCapacityResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Name of the stamp
func (o StampCapacityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated
func (o StampCapacityResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...)
func (o StampCapacityResponseOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Name of the unit
func (o StampCapacityResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines
func (o StampCapacityResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size Id of machines:
//             0 - Small
//             1 - Medium
//             2 - Large
func (o StampCapacityResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityResponse {
		return vs[0].([]StampCapacityResponse)[vs[1].(int)]
	}).(StampCapacityResponseOutput)
}

// Build properties for the static site.
type StaticSiteBuildProperties struct {
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
}

// StaticSiteBuildPropertiesInput is an input type that accepts StaticSiteBuildPropertiesArgs and StaticSiteBuildPropertiesOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesInput` via:
//
//          StaticSiteBuildPropertiesArgs{...}
type StaticSiteBuildPropertiesInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput
	ToStaticSiteBuildPropertiesOutputWithContext(context.Context) StaticSiteBuildPropertiesOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesArgs struct {
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
}

func (StaticSiteBuildPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return i.ToStaticSiteBuildPropertiesOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput)
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput).ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx)
}

// StaticSiteBuildPropertiesPtrInput is an input type that accepts StaticSiteBuildPropertiesArgs, StaticSiteBuildPropertiesPtr and StaticSiteBuildPropertiesPtrOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesPtrInput` via:
//
//          StaticSiteBuildPropertiesArgs{...}
//
//  or:
//
//          nil
type StaticSiteBuildPropertiesPtrInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput
	ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Context) StaticSiteBuildPropertiesPtrOutput
}

type staticSiteBuildPropertiesPtrType StaticSiteBuildPropertiesArgs

func StaticSiteBuildPropertiesPtr(v *StaticSiteBuildPropertiesArgs) StaticSiteBuildPropertiesPtrInput {
	return (*staticSiteBuildPropertiesPtrType)(v)
}

func (*staticSiteBuildPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *StaticSiteBuildProperties {
		return &v
	}).(StaticSiteBuildPropertiesPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

type StaticSiteBuildPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) Elem() StaticSiteBuildPropertiesOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) StaticSiteBuildProperties { return *v }).(StaticSiteBuildPropertiesOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesPtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponse struct {
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
}

// StaticSiteBuildPropertiesResponseInput is an input type that accepts StaticSiteBuildPropertiesResponseArgs and StaticSiteBuildPropertiesResponseOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesResponseInput` via:
//
//          StaticSiteBuildPropertiesResponseArgs{...}
type StaticSiteBuildPropertiesResponseInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput
	ToStaticSiteBuildPropertiesResponseOutputWithContext(context.Context) StaticSiteBuildPropertiesResponseOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponseArgs struct {
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
}

func (StaticSiteBuildPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput {
	return i.ToStaticSiteBuildPropertiesResponseOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponseOutput)
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return i.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponseOutput).ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx)
}

// StaticSiteBuildPropertiesResponsePtrInput is an input type that accepts StaticSiteBuildPropertiesResponseArgs, StaticSiteBuildPropertiesResponsePtr and StaticSiteBuildPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesResponsePtrInput` via:
//
//          StaticSiteBuildPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StaticSiteBuildPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput
	ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Context) StaticSiteBuildPropertiesResponsePtrOutput
}

type staticSiteBuildPropertiesResponsePtrType StaticSiteBuildPropertiesResponseArgs

func StaticSiteBuildPropertiesResponsePtr(v *StaticSiteBuildPropertiesResponseArgs) StaticSiteBuildPropertiesResponsePtrInput {
	return (*staticSiteBuildPropertiesResponsePtrType)(v)
}

func (*staticSiteBuildPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (i *staticSiteBuildPropertiesResponsePtrType) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return i.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *staticSiteBuildPropertiesResponsePtrType) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponsePtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return o.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *StaticSiteBuildPropertiesResponse {
		return &v
	}).(StaticSiteBuildPropertiesResponsePtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesResponseOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

type StaticSiteBuildPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) Elem() StaticSiteBuildPropertiesResponseOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) StaticSiteBuildPropertiesResponse { return *v }).(StaticSiteBuildPropertiesResponseOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceResponse struct {
	// The display name for the static site user.
	DisplayName string `pulumi:"displayName"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The identity provider for the static site user.
	Provider string `pulumi:"provider"`
	// The roles for the static site user, in free-form string format
	Roles *string `pulumi:"roles"`
	// Resource type.
	Type string `pulumi:"type"`
	// The user id for the static site user.
	UserId string `pulumi:"userId"`
}

// StaticSiteUserARMResourceResponseInput is an input type that accepts StaticSiteUserARMResourceResponseArgs and StaticSiteUserARMResourceResponseOutput values.
// You can construct a concrete instance of `StaticSiteUserARMResourceResponseInput` via:
//
//          StaticSiteUserARMResourceResponseArgs{...}
type StaticSiteUserARMResourceResponseInput interface {
	pulumi.Input

	ToStaticSiteUserARMResourceResponseOutput() StaticSiteUserARMResourceResponseOutput
	ToStaticSiteUserARMResourceResponseOutputWithContext(context.Context) StaticSiteUserARMResourceResponseOutput
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceResponseArgs struct {
	// The display name for the static site user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The identity provider for the static site user.
	Provider pulumi.StringInput `pulumi:"provider"`
	// The roles for the static site user, in free-form string format
	Roles pulumi.StringPtrInput `pulumi:"roles"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The user id for the static site user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (StaticSiteUserARMResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (i StaticSiteUserARMResourceResponseArgs) ToStaticSiteUserARMResourceResponseOutput() StaticSiteUserARMResourceResponseOutput {
	return i.ToStaticSiteUserARMResourceResponseOutputWithContext(context.Background())
}

func (i StaticSiteUserARMResourceResponseArgs) ToStaticSiteUserARMResourceResponseOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteUserARMResourceResponseOutput)
}

// StaticSiteUserARMResourceResponseArrayInput is an input type that accepts StaticSiteUserARMResourceResponseArray and StaticSiteUserARMResourceResponseArrayOutput values.
// You can construct a concrete instance of `StaticSiteUserARMResourceResponseArrayInput` via:
//
//          StaticSiteUserARMResourceResponseArray{ StaticSiteUserARMResourceResponseArgs{...} }
type StaticSiteUserARMResourceResponseArrayInput interface {
	pulumi.Input

	ToStaticSiteUserARMResourceResponseArrayOutput() StaticSiteUserARMResourceResponseArrayOutput
	ToStaticSiteUserARMResourceResponseArrayOutputWithContext(context.Context) StaticSiteUserARMResourceResponseArrayOutput
}

type StaticSiteUserARMResourceResponseArray []StaticSiteUserARMResourceResponseInput

func (StaticSiteUserARMResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (i StaticSiteUserARMResourceResponseArray) ToStaticSiteUserARMResourceResponseArrayOutput() StaticSiteUserARMResourceResponseArrayOutput {
	return i.ToStaticSiteUserARMResourceResponseArrayOutputWithContext(context.Background())
}

func (i StaticSiteUserARMResourceResponseArray) ToStaticSiteUserARMResourceResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteUserARMResourceResponseArrayOutput)
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceResponseOutput) ToStaticSiteUserARMResourceResponseOutput() StaticSiteUserARMResourceResponseOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseOutput) ToStaticSiteUserARMResourceResponseOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseOutput {
	return o
}

// The display name for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource Id.
func (o StaticSiteUserARMResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o StaticSiteUserARMResourceResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o StaticSiteUserARMResourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The identity provider for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Provider }).(pulumi.StringOutput)
}

// The roles for the static site user, in free-form string format
func (o StaticSiteUserARMResourceResponseOutput) Roles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) *string { return v.Roles }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o StaticSiteUserARMResourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user id for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type StaticSiteUserARMResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceResponseArrayOutput) ToStaticSiteUserARMResourceResponseArrayOutput() StaticSiteUserARMResourceResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseArrayOutput) ToStaticSiteUserARMResourceResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseArrayOutput) Index(i pulumi.IntInput) StaticSiteUserARMResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSiteUserARMResourceResponse {
		return vs[0].([]StaticSiteUserARMResourceResponse)[vs[1].(int)]
	}).(StaticSiteUserARMResourceResponseOutput)
}

// Trigger based on status code.
type StatusCodesBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInput is an input type that accepts StatusCodesBasedTriggerArgs and StatusCodesBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInput` via:
//
//          StatusCodesBasedTriggerArgs{...}
type StatusCodesBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput
	ToStatusCodesBasedTriggerOutputWithContext(context.Context) StatusCodesBasedTriggerOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return i.ToStatusCodesBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerOutput)
}

// StatusCodesBasedTriggerArrayInput is an input type that accepts StatusCodesBasedTriggerArray and StatusCodesBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerArrayInput` via:
//
//          StatusCodesBasedTriggerArray{ StatusCodesBasedTriggerArgs{...} }
type StatusCodesBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput
	ToStatusCodesBasedTriggerArrayOutputWithContext(context.Context) StatusCodesBasedTriggerArrayOutput
}

type StatusCodesBasedTriggerArray []StatusCodesBasedTriggerInput

func (StatusCodesBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return i.ToStatusCodesBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return o
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTrigger {
		return vs[0].([]StatusCodesBasedTrigger)[vs[1].(int)]
	}).(StatusCodesBasedTriggerOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerResponseInput is an input type that accepts StatusCodesBasedTriggerResponseArgs and StatusCodesBasedTriggerResponseOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseInput` via:
//
//          StatusCodesBasedTriggerResponseArgs{...}
type StatusCodesBasedTriggerResponseInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput
	ToStatusCodesBasedTriggerResponseOutputWithContext(context.Context) StatusCodesBasedTriggerResponseOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return i.ToStatusCodesBasedTriggerResponseOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseOutput)
}

// StatusCodesBasedTriggerResponseArrayInput is an input type that accepts StatusCodesBasedTriggerResponseArray and StatusCodesBasedTriggerResponseArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseArrayInput` via:
//
//          StatusCodesBasedTriggerResponseArray{ StatusCodesBasedTriggerResponseArgs{...} }
type StatusCodesBasedTriggerResponseArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput
	ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Context) StatusCodesBasedTriggerResponseArrayOutput
}

type StatusCodesBasedTriggerResponseArray []StatusCodesBasedTriggerResponseInput

func (StatusCodesBasedTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return i.ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerResponse {
		return vs[0].([]StatusCodesBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerResponseOutput)
}

// Virtual application in an app.
type VirtualApplication struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectory `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationInput is an input type that accepts VirtualApplicationArgs and VirtualApplicationOutput values.
// You can construct a concrete instance of `VirtualApplicationInput` via:
//
//          VirtualApplicationArgs{...}
type VirtualApplicationInput interface {
	pulumi.Input

	ToVirtualApplicationOutput() VirtualApplicationOutput
	ToVirtualApplicationOutputWithContext(context.Context) VirtualApplicationOutput
}

// Virtual application in an app.
type VirtualApplicationArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return i.ToVirtualApplicationOutputWithContext(context.Background())
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationOutput)
}

// VirtualApplicationArrayInput is an input type that accepts VirtualApplicationArray and VirtualApplicationArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationArrayInput` via:
//
//          VirtualApplicationArray{ VirtualApplicationArgs{...} }
type VirtualApplicationArrayInput interface {
	pulumi.Input

	ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput
	ToVirtualApplicationArrayOutputWithContext(context.Context) VirtualApplicationArrayOutput
}

type VirtualApplicationArray []VirtualApplicationInput

func (VirtualApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return i.ToVirtualApplicationArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationOutput struct{ *pulumi.OutputState }

func (VirtualApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return o
}

// Physical path.
func (o VirtualApplicationOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationOutput) VirtualDirectories() VirtualDirectoryArrayOutput {
	return o.ApplyT(func(v VirtualApplication) []VirtualDirectory { return v.VirtualDirectories }).(VirtualDirectoryArrayOutput)
}

// Virtual path.
func (o VirtualApplicationOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) Index(i pulumi.IntInput) VirtualApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplication {
		return vs[0].([]VirtualApplication)[vs[1].(int)]
	}).(VirtualApplicationOutput)
}

// Virtual application in an app.
type VirtualApplicationResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectoryResponse `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationResponseInput is an input type that accepts VirtualApplicationResponseArgs and VirtualApplicationResponseOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseInput` via:
//
//          VirtualApplicationResponseArgs{...}
type VirtualApplicationResponseInput interface {
	pulumi.Input

	ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput
	ToVirtualApplicationResponseOutputWithContext(context.Context) VirtualApplicationResponseOutput
}

// Virtual application in an app.
type VirtualApplicationResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryResponseArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return i.ToVirtualApplicationResponseOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseOutput)
}

// VirtualApplicationResponseArrayInput is an input type that accepts VirtualApplicationResponseArray and VirtualApplicationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseArrayInput` via:
//
//          VirtualApplicationResponseArray{ VirtualApplicationResponseArgs{...} }
type VirtualApplicationResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput
	ToVirtualApplicationResponseArrayOutputWithContext(context.Context) VirtualApplicationResponseArrayOutput
}

type VirtualApplicationResponseArray []VirtualApplicationResponseInput

func (VirtualApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return i.ToVirtualApplicationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return o
}

// Physical path.
func (o VirtualApplicationResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationResponseOutput) VirtualDirectories() VirtualDirectoryResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) []VirtualDirectoryResponse { return v.VirtualDirectories }).(VirtualDirectoryResponseArrayOutput)
}

// Virtual path.
func (o VirtualApplicationResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationResponse {
		return vs[0].([]VirtualApplicationResponse)[vs[1].(int)]
	}).(VirtualApplicationResponseOutput)
}

// Directory for virtual application.
type VirtualDirectory struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInput is an input type that accepts VirtualDirectoryArgs and VirtualDirectoryOutput values.
// You can construct a concrete instance of `VirtualDirectoryInput` via:
//
//          VirtualDirectoryArgs{...}
type VirtualDirectoryInput interface {
	pulumi.Input

	ToVirtualDirectoryOutput() VirtualDirectoryOutput
	ToVirtualDirectoryOutputWithContext(context.Context) VirtualDirectoryOutput
}

// Directory for virtual application.
type VirtualDirectoryArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return i.ToVirtualDirectoryOutputWithContext(context.Background())
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryOutput)
}

// VirtualDirectoryArrayInput is an input type that accepts VirtualDirectoryArray and VirtualDirectoryArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryArrayInput` via:
//
//          VirtualDirectoryArray{ VirtualDirectoryArgs{...} }
type VirtualDirectoryArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput
	ToVirtualDirectoryArrayOutputWithContext(context.Context) VirtualDirectoryArrayOutput
}

type VirtualDirectoryArray []VirtualDirectoryInput

func (VirtualDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return i.ToVirtualDirectoryArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectory {
		return vs[0].([]VirtualDirectory)[vs[1].(int)]
	}).(VirtualDirectoryOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryResponseInput is an input type that accepts VirtualDirectoryResponseArgs and VirtualDirectoryResponseOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseInput` via:
//
//          VirtualDirectoryResponseArgs{...}
type VirtualDirectoryResponseInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput
	ToVirtualDirectoryResponseOutputWithContext(context.Context) VirtualDirectoryResponseOutput
}

// Directory for virtual application.
type VirtualDirectoryResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return i.ToVirtualDirectoryResponseOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseOutput)
}

// VirtualDirectoryResponseArrayInput is an input type that accepts VirtualDirectoryResponseArray and VirtualDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseArrayInput` via:
//
//          VirtualDirectoryResponseArray{ VirtualDirectoryResponseArgs{...} }
type VirtualDirectoryResponseArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput
	ToVirtualDirectoryResponseArrayOutputWithContext(context.Context) VirtualDirectoryResponseArrayOutput
}

type VirtualDirectoryResponseArray []VirtualDirectoryResponseInput

func (VirtualDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return i.ToVirtualDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryResponse {
		return vs[0].([]VirtualDirectoryResponse)[vs[1].(int)]
	}).(VirtualDirectoryResponseOutput)
}

// Class that represents a VIP mapping
type VirtualIPMapping struct {
	// Is VIP mapping in use
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingInput is an input type that accepts VirtualIPMappingArgs and VirtualIPMappingOutput values.
// You can construct a concrete instance of `VirtualIPMappingInput` via:
//
//          VirtualIPMappingArgs{...}
type VirtualIPMappingInput interface {
	pulumi.Input

	ToVirtualIPMappingOutput() VirtualIPMappingOutput
	ToVirtualIPMappingOutputWithContext(context.Context) VirtualIPMappingOutput
}

// Class that represents a VIP mapping
type VirtualIPMappingArgs struct {
	// Is VIP mapping in use
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return i.ToVirtualIPMappingOutputWithContext(context.Background())
}

func (i VirtualIPMappingArgs) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingOutput)
}

// VirtualIPMappingArrayInput is an input type that accepts VirtualIPMappingArray and VirtualIPMappingArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingArrayInput` via:
//
//          VirtualIPMappingArray{ VirtualIPMappingArgs{...} }
type VirtualIPMappingArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput
	ToVirtualIPMappingArrayOutputWithContext(context.Context) VirtualIPMappingArrayOutput
}

type VirtualIPMappingArray []VirtualIPMappingInput

func (VirtualIPMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMapping)(nil)).Elem()
}

func (i VirtualIPMappingArray) ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput {
	return i.ToVirtualIPMappingArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingArray) ToVirtualIPMappingArrayOutputWithContext(ctx context.Context) VirtualIPMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingArrayOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMapping)(nil)).Elem()
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutput() VirtualIPMappingOutput {
	return o
}

func (o VirtualIPMappingOutput) ToVirtualIPMappingOutputWithContext(ctx context.Context) VirtualIPMappingOutput {
	return o
}

// Is VIP mapping in use
func (o VirtualIPMappingOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port
func (o VirtualIPMappingOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port
func (o VirtualIPMappingOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address
func (o VirtualIPMappingOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMapping) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMapping)(nil)).Elem()
}

func (o VirtualIPMappingArrayOutput) ToVirtualIPMappingArrayOutput() VirtualIPMappingArrayOutput {
	return o
}

func (o VirtualIPMappingArrayOutput) ToVirtualIPMappingArrayOutputWithContext(ctx context.Context) VirtualIPMappingArrayOutput {
	return o
}

func (o VirtualIPMappingArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMapping {
		return vs[0].([]VirtualIPMapping)[vs[1].(int)]
	}).(VirtualIPMappingOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingResponse struct {
	// Is VIP mapping in use
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingResponseInput is an input type that accepts VirtualIPMappingResponseArgs and VirtualIPMappingResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseInput` via:
//
//          VirtualIPMappingResponseArgs{...}
type VirtualIPMappingResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput
	ToVirtualIPMappingResponseOutputWithContext(context.Context) VirtualIPMappingResponseOutput
}

// Class that represents a VIP mapping
type VirtualIPMappingResponseArgs struct {
	// Is VIP mapping in use
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// Virtual IP address
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return i.ToVirtualIPMappingResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseOutput)
}

// VirtualIPMappingResponseArrayInput is an input type that accepts VirtualIPMappingResponseArray and VirtualIPMappingResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseArrayInput` via:
//
//          VirtualIPMappingResponseArray{ VirtualIPMappingResponseArgs{...} }
type VirtualIPMappingResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput
	ToVirtualIPMappingResponseArrayOutputWithContext(context.Context) VirtualIPMappingResponseArrayOutput
}

type VirtualIPMappingResponseArray []VirtualIPMappingResponseInput

func (VirtualIPMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return i.ToVirtualIPMappingResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseArrayOutput)
}

// Class that represents a VIP mapping
type VirtualIPMappingResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return o
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return o
}

// Is VIP mapping in use
func (o VirtualIPMappingResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port
func (o VirtualIPMappingResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port
func (o VirtualIPMappingResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// Virtual IP address
func (o VirtualIPMappingResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingResponse {
		return vs[0].([]VirtualIPMappingResponse)[vs[1].(int)]
	}).(VirtualIPMappingResponseOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfile struct {
	// Resource id of the virtual network
	Id *string `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name *string `pulumi:"name"`
	// Subnet within the virtual network
	Subnet *string `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type *string `pulumi:"type"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//          VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a virtual network
type VirtualNetworkProfileArgs struct {
	// Resource id of the virtual network
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet within the virtual network
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//          VirtualNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile { return *v }).(VirtualNetworkProfileOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfilePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileResponse struct {
	// Resource id of the virtual network
	Id *string `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name *string `pulumi:"name"`
	// Subnet within the virtual network
	Subnet *string `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type *string `pulumi:"type"`
}

// VirtualNetworkProfileResponseInput is an input type that accepts VirtualNetworkProfileResponseArgs and VirtualNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponseInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
type VirtualNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput
	ToVirtualNetworkProfileResponseOutputWithContext(context.Context) VirtualNetworkProfileResponseOutput
}

// Specification for using a virtual network
type VirtualNetworkProfileResponseArgs struct {
	// Resource id of the virtual network
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the virtual network (read-only)
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Subnet within the virtual network
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the virtual network (read-only)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return i.ToVirtualNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput)
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput).ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkProfileResponsePtrInput is an input type that accepts VirtualNetworkProfileResponseArgs, VirtualNetworkProfileResponsePtr and VirtualNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponsePtrInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput
	ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualNetworkProfileResponsePtrOutput
}

type virtualNetworkProfileResponsePtrType VirtualNetworkProfileResponseArgs

func VirtualNetworkProfileResponsePtr(v *VirtualNetworkProfileResponseArgs) VirtualNetworkProfileResponsePtrInput {
	return (*virtualNetworkProfileResponsePtrType)(v)
}

func (*virtualNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponsePtrOutput)
}

// Specification for using a virtual network
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *VirtualNetworkProfileResponse {
		return &v
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse { return *v }).(VirtualNetworkProfileResponseOutput)
}

// Resource id of the virtual network
func (o VirtualNetworkProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the virtual network (read-only)
func (o VirtualNetworkProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the virtual network
func (o VirtualNetworkProfileResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the virtual network (read-only)
func (o VirtualNetworkProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponse struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VnetRouteResponseInput is an input type that accepts VnetRouteResponseArgs and VnetRouteResponseOutput values.
// You can construct a concrete instance of `VnetRouteResponseInput` via:
//
//          VnetRouteResponseArgs{...}
type VnetRouteResponseInput interface {
	pulumi.Input

	ToVnetRouteResponseOutput() VnetRouteResponseOutput
	ToVnetRouteResponseOutputWithContext(context.Context) VnetRouteResponseOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VnetRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return i.ToVnetRouteResponseOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput)
}

// VnetRouteResponseArrayInput is an input type that accepts VnetRouteResponseArray and VnetRouteResponseArrayOutput values.
// You can construct a concrete instance of `VnetRouteResponseArrayInput` via:
//
//          VnetRouteResponseArray{ VnetRouteResponseArgs{...} }
type VnetRouteResponseArrayInput interface {
	pulumi.Input

	ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput
	ToVnetRouteResponseArrayOutputWithContext(context.Context) VnetRouteResponseArrayOutput
}

type VnetRouteResponseArray []VnetRouteResponseInput

func (VnetRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return i.ToVnetRouteResponseArrayOutputWithContext(context.Background())
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseArrayOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponseOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o VnetRouteResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o VnetRouteResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o VnetRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponseOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponseOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o VnetRouteResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VnetRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteResponse {
		return vs[0].([]VnetRouteResponse)[vs[1].(int)]
	}).(VnetRouteResponseOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPool struct {
	// Shared or dedicated web app hosting
	ComputeMode *string `pulumi:"computeMode"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Names of all instances in the worker pool (read only)
	InstanceNames []string `pulumi:"instanceNames"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Describes a sku for a scalable resource
	Sku *SkuDescription `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// Number of instances in the worker pool
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolInput is an input type that accepts WorkerPoolArgs and WorkerPoolOutput values.
// You can construct a concrete instance of `WorkerPoolInput` via:
//
//          WorkerPoolArgs{...}
type WorkerPoolInput interface {
	pulumi.Input

	ToWorkerPoolOutput() WorkerPoolOutput
	ToWorkerPoolOutputWithContext(context.Context) WorkerPoolOutput
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolArgs struct {
	// Shared or dedicated web app hosting
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Names of all instances in the worker pool (read only)
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes a sku for a scalable resource
	Sku SkuDescriptionPtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Number of instances in the worker pool
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArgs) ToWorkerPoolOutput() WorkerPoolOutput {
	return i.ToWorkerPoolOutputWithContext(context.Background())
}

func (i WorkerPoolArgs) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolOutput)
}

// WorkerPoolArrayInput is an input type that accepts WorkerPoolArray and WorkerPoolArrayOutput values.
// You can construct a concrete instance of `WorkerPoolArrayInput` via:
//
//          WorkerPoolArray{ WorkerPoolArgs{...} }
type WorkerPoolArrayInput interface {
	pulumi.Input

	ToWorkerPoolArrayOutput() WorkerPoolArrayOutput
	ToWorkerPoolArrayOutputWithContext(context.Context) WorkerPoolArrayOutput
}

type WorkerPoolArray []WorkerPoolInput

func (WorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return i.ToWorkerPoolArrayOutputWithContext(context.Background())
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolArrayOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolOutput struct{ *pulumi.OutputState }

func (WorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (o WorkerPoolOutput) ToWorkerPoolOutput() WorkerPoolOutput {
	return o
}

func (o WorkerPoolOutput) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return o
}

// Shared or dedicated web app hosting
func (o WorkerPoolOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o WorkerPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPool) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Kind of resource
func (o WorkerPoolOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o WorkerPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerPool) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o WorkerPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes a sku for a scalable resource
func (o WorkerPoolOutput) Sku() SkuDescriptionPtrOutput {
	return o.ApplyT(func(v WorkerPool) *SkuDescription { return v.Sku }).(SkuDescriptionPtrOutput)
}

// Resource tags
func (o WorkerPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkerPool) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o WorkerPoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) Index(i pulumi.IntInput) WorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPool {
		return vs[0].([]WorkerPool)[vs[1].(int)]
	}).(WorkerPoolOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponse struct {
	// Shared or dedicated web app hosting
	ComputeMode *string `pulumi:"computeMode"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Names of all instances in the worker pool (read only)
	InstanceNames []string `pulumi:"instanceNames"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Describes a sku for a scalable resource
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// Number of instances in the worker pool
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolResponseInput is an input type that accepts WorkerPoolResponseArgs and WorkerPoolResponseOutput values.
// You can construct a concrete instance of `WorkerPoolResponseInput` via:
//
//          WorkerPoolResponseArgs{...}
type WorkerPoolResponseInput interface {
	pulumi.Input

	ToWorkerPoolResponseOutput() WorkerPoolResponseOutput
	ToWorkerPoolResponseOutputWithContext(context.Context) WorkerPoolResponseOutput
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponseArgs struct {
	// Shared or dedicated web app hosting
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Names of all instances in the worker pool (read only)
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Kind of resource
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource Name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes a sku for a scalable resource
	Sku SkuDescriptionResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Number of instances in the worker pool
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size id for referencing this worker pool
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return i.ToWorkerPoolResponseOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseOutput)
}

// WorkerPoolResponseArrayInput is an input type that accepts WorkerPoolResponseArray and WorkerPoolResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolResponseArrayInput` via:
//
//          WorkerPoolResponseArray{ WorkerPoolResponseArgs{...} }
type WorkerPoolResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput
	ToWorkerPoolResponseArrayOutputWithContext(context.Context) WorkerPoolResponseArrayOutput
}

type WorkerPoolResponseArray []WorkerPoolResponseInput

func (WorkerPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return i.ToWorkerPoolResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseArrayOutput)
}

// Worker pool of a hostingEnvironment (App Service Environment)
type WorkerPoolResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return o
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return o
}

// Shared or dedicated web app hosting
func (o WorkerPoolResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o WorkerPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only)
func (o WorkerPoolResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Kind of resource
func (o WorkerPoolResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o WorkerPoolResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v WorkerPoolResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name
func (o WorkerPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes a sku for a scalable resource
func (o WorkerPoolResponseOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *SkuDescriptionResponse { return v.Sku }).(SkuDescriptionResponsePtrOutput)
}

// Resource tags
func (o WorkerPoolResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v WorkerPoolResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o WorkerPoolResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Number of instances in the worker pool
func (o WorkerPoolResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances
func (o WorkerPoolResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size id for referencing this worker pool
func (o WorkerPoolResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolResponse {
		return vs[0].([]WorkerPoolResponse)[vs[1].(int)]
	}).(WorkerPoolResponseOutput)
}

// The WSDL definition
type WsdlDefinition struct {
	// The WSDL content
	Content *string `pulumi:"content"`
	// The WSDL import method
	ImportMethod *string `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service *WsdlService `pulumi:"service"`
	// The WSDL URL
	Url *string `pulumi:"url"`
}

// WsdlDefinitionInput is an input type that accepts WsdlDefinitionArgs and WsdlDefinitionOutput values.
// You can construct a concrete instance of `WsdlDefinitionInput` via:
//
//          WsdlDefinitionArgs{...}
type WsdlDefinitionInput interface {
	pulumi.Input

	ToWsdlDefinitionOutput() WsdlDefinitionOutput
	ToWsdlDefinitionOutputWithContext(context.Context) WsdlDefinitionOutput
}

// The WSDL definition
type WsdlDefinitionArgs struct {
	// The WSDL content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The WSDL import method
	ImportMethod pulumi.StringPtrInput `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service WsdlServicePtrInput `pulumi:"service"`
	// The WSDL URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WsdlDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinition)(nil)).Elem()
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionOutput() WsdlDefinitionOutput {
	return i.ToWsdlDefinitionOutputWithContext(context.Background())
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionOutputWithContext(ctx context.Context) WsdlDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionOutput)
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return i.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionOutput).ToWsdlDefinitionPtrOutputWithContext(ctx)
}

// WsdlDefinitionPtrInput is an input type that accepts WsdlDefinitionArgs, WsdlDefinitionPtr and WsdlDefinitionPtrOutput values.
// You can construct a concrete instance of `WsdlDefinitionPtrInput` via:
//
//          WsdlDefinitionArgs{...}
//
//  or:
//
//          nil
type WsdlDefinitionPtrInput interface {
	pulumi.Input

	ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput
	ToWsdlDefinitionPtrOutputWithContext(context.Context) WsdlDefinitionPtrOutput
}

type wsdlDefinitionPtrType WsdlDefinitionArgs

func WsdlDefinitionPtr(v *WsdlDefinitionArgs) WsdlDefinitionPtrInput {
	return (*wsdlDefinitionPtrType)(v)
}

func (*wsdlDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinition)(nil)).Elem()
}

func (i *wsdlDefinitionPtrType) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return i.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (i *wsdlDefinitionPtrType) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionPtrOutput)
}

// The WSDL definition
type WsdlDefinitionOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinition)(nil)).Elem()
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionOutput() WsdlDefinitionOutput {
	return o
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionOutputWithContext(ctx context.Context) WsdlDefinitionOutput {
	return o
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return o.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *WsdlDefinition {
		return &v
	}).(WsdlDefinitionPtrOutput)
}

// The WSDL content
func (o WsdlDefinitionOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.ImportMethod }).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionOutput) Service() WsdlServicePtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *WsdlService { return v.Service }).(WsdlServicePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WsdlDefinitionPtrOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinition)(nil)).Elem()
}

func (o WsdlDefinitionPtrOutput) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return o
}

func (o WsdlDefinitionPtrOutput) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return o
}

func (o WsdlDefinitionPtrOutput) Elem() WsdlDefinitionOutput {
	return o.ApplyT(func(v *WsdlDefinition) WsdlDefinition { return *v }).(WsdlDefinitionOutput)
}

// The WSDL content
func (o WsdlDefinitionPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionPtrOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ImportMethod
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionPtrOutput) Service() WsdlServicePtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *WsdlService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(WsdlServicePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The WSDL definition
type WsdlDefinitionResponse struct {
	// The WSDL content
	Content *string `pulumi:"content"`
	// The WSDL import method
	ImportMethod *string `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service *WsdlServiceResponse `pulumi:"service"`
	// The WSDL URL
	Url *string `pulumi:"url"`
}

// WsdlDefinitionResponseInput is an input type that accepts WsdlDefinitionResponseArgs and WsdlDefinitionResponseOutput values.
// You can construct a concrete instance of `WsdlDefinitionResponseInput` via:
//
//          WsdlDefinitionResponseArgs{...}
type WsdlDefinitionResponseInput interface {
	pulumi.Input

	ToWsdlDefinitionResponseOutput() WsdlDefinitionResponseOutput
	ToWsdlDefinitionResponseOutputWithContext(context.Context) WsdlDefinitionResponseOutput
}

// The WSDL definition
type WsdlDefinitionResponseArgs struct {
	// The WSDL content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The WSDL import method
	ImportMethod pulumi.StringPtrInput `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service WsdlServiceResponsePtrInput `pulumi:"service"`
	// The WSDL URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WsdlDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinitionResponse)(nil)).Elem()
}

func (i WsdlDefinitionResponseArgs) ToWsdlDefinitionResponseOutput() WsdlDefinitionResponseOutput {
	return i.ToWsdlDefinitionResponseOutputWithContext(context.Background())
}

func (i WsdlDefinitionResponseArgs) ToWsdlDefinitionResponseOutputWithContext(ctx context.Context) WsdlDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionResponseOutput)
}

func (i WsdlDefinitionResponseArgs) ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput {
	return i.ToWsdlDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i WsdlDefinitionResponseArgs) ToWsdlDefinitionResponsePtrOutputWithContext(ctx context.Context) WsdlDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionResponseOutput).ToWsdlDefinitionResponsePtrOutputWithContext(ctx)
}

// WsdlDefinitionResponsePtrInput is an input type that accepts WsdlDefinitionResponseArgs, WsdlDefinitionResponsePtr and WsdlDefinitionResponsePtrOutput values.
// You can construct a concrete instance of `WsdlDefinitionResponsePtrInput` via:
//
//          WsdlDefinitionResponseArgs{...}
//
//  or:
//
//          nil
type WsdlDefinitionResponsePtrInput interface {
	pulumi.Input

	ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput
	ToWsdlDefinitionResponsePtrOutputWithContext(context.Context) WsdlDefinitionResponsePtrOutput
}

type wsdlDefinitionResponsePtrType WsdlDefinitionResponseArgs

func WsdlDefinitionResponsePtr(v *WsdlDefinitionResponseArgs) WsdlDefinitionResponsePtrInput {
	return (*wsdlDefinitionResponsePtrType)(v)
}

func (*wsdlDefinitionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinitionResponse)(nil)).Elem()
}

func (i *wsdlDefinitionResponsePtrType) ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput {
	return i.ToWsdlDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i *wsdlDefinitionResponsePtrType) ToWsdlDefinitionResponsePtrOutputWithContext(ctx context.Context) WsdlDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionResponsePtrOutput)
}

// The WSDL definition
type WsdlDefinitionResponseOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinitionResponse)(nil)).Elem()
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponseOutput() WsdlDefinitionResponseOutput {
	return o
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponseOutputWithContext(ctx context.Context) WsdlDefinitionResponseOutput {
	return o
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput {
	return o.ToWsdlDefinitionResponsePtrOutputWithContext(context.Background())
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponsePtrOutputWithContext(ctx context.Context) WsdlDefinitionResponsePtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *WsdlDefinitionResponse {
		return &v
	}).(WsdlDefinitionResponsePtrOutput)
}

// The WSDL content
func (o WsdlDefinitionResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionResponseOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.ImportMethod }).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionResponseOutput) Service() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *WsdlServiceResponse { return v.Service }).(WsdlServiceResponsePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WsdlDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinitionResponse)(nil)).Elem()
}

func (o WsdlDefinitionResponsePtrOutput) ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput {
	return o
}

func (o WsdlDefinitionResponsePtrOutput) ToWsdlDefinitionResponsePtrOutputWithContext(ctx context.Context) WsdlDefinitionResponsePtrOutput {
	return o
}

func (o WsdlDefinitionResponsePtrOutput) Elem() WsdlDefinitionResponseOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) WsdlDefinitionResponse { return *v }).(WsdlDefinitionResponseOutput)
}

// The WSDL content
func (o WsdlDefinitionResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionResponsePtrOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImportMethod
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionResponsePtrOutput) Service() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *WsdlServiceResponse {
		if v == nil {
			return nil
		}
		return v.Service
	}).(WsdlServiceResponsePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
type WsdlService struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames []string `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName string `pulumi:"qualifiedName"`
}

// WsdlServiceInput is an input type that accepts WsdlServiceArgs and WsdlServiceOutput values.
// You can construct a concrete instance of `WsdlServiceInput` via:
//
//          WsdlServiceArgs{...}
type WsdlServiceInput interface {
	pulumi.Input

	ToWsdlServiceOutput() WsdlServiceOutput
	ToWsdlServiceOutputWithContext(context.Context) WsdlServiceOutput
}

// The service with name and endpoint names
type WsdlServiceArgs struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames pulumi.StringArrayInput `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName pulumi.StringInput `pulumi:"qualifiedName"`
}

func (WsdlServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlService)(nil)).Elem()
}

func (i WsdlServiceArgs) ToWsdlServiceOutput() WsdlServiceOutput {
	return i.ToWsdlServiceOutputWithContext(context.Background())
}

func (i WsdlServiceArgs) ToWsdlServiceOutputWithContext(ctx context.Context) WsdlServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceOutput)
}

func (i WsdlServiceArgs) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return i.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (i WsdlServiceArgs) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceOutput).ToWsdlServicePtrOutputWithContext(ctx)
}

// WsdlServicePtrInput is an input type that accepts WsdlServiceArgs, WsdlServicePtr and WsdlServicePtrOutput values.
// You can construct a concrete instance of `WsdlServicePtrInput` via:
//
//          WsdlServiceArgs{...}
//
//  or:
//
//          nil
type WsdlServicePtrInput interface {
	pulumi.Input

	ToWsdlServicePtrOutput() WsdlServicePtrOutput
	ToWsdlServicePtrOutputWithContext(context.Context) WsdlServicePtrOutput
}

type wsdlServicePtrType WsdlServiceArgs

func WsdlServicePtr(v *WsdlServiceArgs) WsdlServicePtrInput {
	return (*wsdlServicePtrType)(v)
}

func (*wsdlServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlService)(nil)).Elem()
}

func (i *wsdlServicePtrType) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return i.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (i *wsdlServicePtrType) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServicePtrOutput)
}

// The service with name and endpoint names
type WsdlServiceOutput struct{ *pulumi.OutputState }

func (WsdlServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlService)(nil)).Elem()
}

func (o WsdlServiceOutput) ToWsdlServiceOutput() WsdlServiceOutput {
	return o
}

func (o WsdlServiceOutput) ToWsdlServiceOutputWithContext(ctx context.Context) WsdlServiceOutput {
	return o
}

func (o WsdlServiceOutput) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return o.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (o WsdlServiceOutput) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return o.ApplyT(func(v WsdlService) *WsdlService {
		return &v
	}).(WsdlServicePtrOutput)
}

// List of the endpoints' qualified names
func (o WsdlServiceOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WsdlService) []string { return v.EndpointQualifiedNames }).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v WsdlService) string { return v.QualifiedName }).(pulumi.StringOutput)
}

type WsdlServicePtrOutput struct{ *pulumi.OutputState }

func (WsdlServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlService)(nil)).Elem()
}

func (o WsdlServicePtrOutput) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return o
}

func (o WsdlServicePtrOutput) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return o
}

func (o WsdlServicePtrOutput) Elem() WsdlServiceOutput {
	return o.ApplyT(func(v *WsdlService) WsdlService { return *v }).(WsdlServiceOutput)
}

// List of the endpoints' qualified names
func (o WsdlServicePtrOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WsdlService) []string {
		if v == nil {
			return nil
		}
		return v.EndpointQualifiedNames
	}).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServicePtrOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlService) *string {
		if v == nil {
			return nil
		}
		return &v.QualifiedName
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
type WsdlServiceResponse struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames []string `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName string `pulumi:"qualifiedName"`
}

// WsdlServiceResponseInput is an input type that accepts WsdlServiceResponseArgs and WsdlServiceResponseOutput values.
// You can construct a concrete instance of `WsdlServiceResponseInput` via:
//
//          WsdlServiceResponseArgs{...}
type WsdlServiceResponseInput interface {
	pulumi.Input

	ToWsdlServiceResponseOutput() WsdlServiceResponseOutput
	ToWsdlServiceResponseOutputWithContext(context.Context) WsdlServiceResponseOutput
}

// The service with name and endpoint names
type WsdlServiceResponseArgs struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames pulumi.StringArrayInput `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName pulumi.StringInput `pulumi:"qualifiedName"`
}

func (WsdlServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlServiceResponse)(nil)).Elem()
}

func (i WsdlServiceResponseArgs) ToWsdlServiceResponseOutput() WsdlServiceResponseOutput {
	return i.ToWsdlServiceResponseOutputWithContext(context.Background())
}

func (i WsdlServiceResponseArgs) ToWsdlServiceResponseOutputWithContext(ctx context.Context) WsdlServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceResponseOutput)
}

func (i WsdlServiceResponseArgs) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return i.ToWsdlServiceResponsePtrOutputWithContext(context.Background())
}

func (i WsdlServiceResponseArgs) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceResponseOutput).ToWsdlServiceResponsePtrOutputWithContext(ctx)
}

// WsdlServiceResponsePtrInput is an input type that accepts WsdlServiceResponseArgs, WsdlServiceResponsePtr and WsdlServiceResponsePtrOutput values.
// You can construct a concrete instance of `WsdlServiceResponsePtrInput` via:
//
//          WsdlServiceResponseArgs{...}
//
//  or:
//
//          nil
type WsdlServiceResponsePtrInput interface {
	pulumi.Input

	ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput
	ToWsdlServiceResponsePtrOutputWithContext(context.Context) WsdlServiceResponsePtrOutput
}

type wsdlServiceResponsePtrType WsdlServiceResponseArgs

func WsdlServiceResponsePtr(v *WsdlServiceResponseArgs) WsdlServiceResponsePtrInput {
	return (*wsdlServiceResponsePtrType)(v)
}

func (*wsdlServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlServiceResponse)(nil)).Elem()
}

func (i *wsdlServiceResponsePtrType) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return i.ToWsdlServiceResponsePtrOutputWithContext(context.Background())
}

func (i *wsdlServiceResponsePtrType) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceResponsePtrOutput)
}

// WsdlServiceResponseArrayInput is an input type that accepts WsdlServiceResponseArray and WsdlServiceResponseArrayOutput values.
// You can construct a concrete instance of `WsdlServiceResponseArrayInput` via:
//
//          WsdlServiceResponseArray{ WsdlServiceResponseArgs{...} }
type WsdlServiceResponseArrayInput interface {
	pulumi.Input

	ToWsdlServiceResponseArrayOutput() WsdlServiceResponseArrayOutput
	ToWsdlServiceResponseArrayOutputWithContext(context.Context) WsdlServiceResponseArrayOutput
}

type WsdlServiceResponseArray []WsdlServiceResponseInput

func (WsdlServiceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WsdlServiceResponse)(nil)).Elem()
}

func (i WsdlServiceResponseArray) ToWsdlServiceResponseArrayOutput() WsdlServiceResponseArrayOutput {
	return i.ToWsdlServiceResponseArrayOutputWithContext(context.Background())
}

func (i WsdlServiceResponseArray) ToWsdlServiceResponseArrayOutputWithContext(ctx context.Context) WsdlServiceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceResponseArrayOutput)
}

// The service with name and endpoint names
type WsdlServiceResponseOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutput() WsdlServiceResponseOutput {
	return o
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutputWithContext(ctx context.Context) WsdlServiceResponseOutput {
	return o
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return o.ToWsdlServiceResponsePtrOutputWithContext(context.Background())
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v WsdlServiceResponse) *WsdlServiceResponse {
		return &v
	}).(WsdlServiceResponsePtrOutput)
}

// List of the endpoints' qualified names
func (o WsdlServiceResponseOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WsdlServiceResponse) []string { return v.EndpointQualifiedNames }).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceResponseOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v WsdlServiceResponse) string { return v.QualifiedName }).(pulumi.StringOutput)
}

type WsdlServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) Elem() WsdlServiceResponseOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) WsdlServiceResponse { return *v }).(WsdlServiceResponseOutput)
}

// List of the endpoints' qualified names
func (o WsdlServiceResponsePtrOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointQualifiedNames
	}).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceResponsePtrOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QualifiedName
	}).(pulumi.StringPtrOutput)
}

type WsdlServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponseArrayOutput) ToWsdlServiceResponseArrayOutput() WsdlServiceResponseArrayOutput {
	return o
}

func (o WsdlServiceResponseArrayOutput) ToWsdlServiceResponseArrayOutputWithContext(ctx context.Context) WsdlServiceResponseArrayOutput {
	return o
}

func (o WsdlServiceResponseArrayOutput) Index(i pulumi.IntInput) WsdlServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WsdlServiceResponse {
		return vs[0].([]WsdlServiceResponse)[vs[1].(int)]
	}).(WsdlServiceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiConnectionDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkArrayOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkResponseOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoPtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterMapOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterResponseOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterResponseMapOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiReferenceOutput{})
	pulumi.RegisterOutputType(ApiReferencePtrOutput{})
	pulumi.RegisterOutputType(ApiReferenceResponseOutput{})
	pulumi.RegisterOutputType(ApiReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServicePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponseOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsOutput{})
	pulumi.RegisterOutputType(AutoHealActionsPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionPtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesOutput{})
	pulumi.RegisterOutputType(AutoHealRulesPtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersPtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseMapOutput{})
	pulumi.RegisterOutputType(BackupItemResponseOutput{})
	pulumi.RegisterOutputType(BackupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupScheduleOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponseOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CloningInfoOutput{})
	pulumi.RegisterOutputType(CloningInfoPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoResponseOutput{})
	pulumi.RegisterOutputType(CloningInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnStringInfoOutput{})
	pulumi.RegisterOutputType(ConnStringInfoArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseMapOutput{})
	pulumi.RegisterOutputType(ConnectionErrorOutput{})
	pulumi.RegisterOutputType(ConnectionErrorPtrOutput{})
	pulumi.RegisterOutputType(ConnectionErrorResponseOutput{})
	pulumi.RegisterOutputType(ConnectionErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferencePtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionParameterOutput{})
	pulumi.RegisterOutputType(ConnectionParameterMapOutput{})
	pulumi.RegisterOutputType(ConnectionParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionParameterResponseMapOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ConsentLinkDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ConsentLinkDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ConsentLinkParameterDefinitionOutput{})
	pulumi.RegisterOutputType(ConsentLinkParameterDefinitionArrayOutput{})
	pulumi.RegisterOutputType(CorsSettingsOutput{})
	pulumi.RegisterOutputType(CorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionPtrOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionResponseOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(ExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsResponsePtrOutput{})
	pulumi.RegisterOutputType(HandlerMappingOutput{})
	pulumi.RegisterOutputType(HandlerMappingArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateOutput{})
	pulumi.RegisterOutputType(HostNameSslStateArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentifierResponseOutput{})
	pulumi.RegisterOutputType(IdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PushSettingsOutput{})
	pulumi.RegisterOutputType(PushSettingsPtrOutput{})
	pulumi.RegisterOutputType(PushSettingsResponseOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RampUpRuleOutput{})
	pulumi.RegisterOutputType(RampUpRuleArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteConfigOutput{})
	pulumi.RegisterOutputType(SiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsOutput{})
	pulumi.RegisterOutputType(SiteLimitsPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponseOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityOutput{})
	pulumi.RegisterOutputType(SkuCapacityPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponseOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(StampCapacityOutput{})
	pulumi.RegisterOutputType(StampCapacityArrayOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationOutput{})
	pulumi.RegisterOutputType(VirtualApplicationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolOutput{})
	pulumi.RegisterOutputType(WorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionPtrOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionResponseOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceOutput{})
	pulumi.RegisterOutputType(WsdlServicePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponseOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponseArrayOutput{})
}
