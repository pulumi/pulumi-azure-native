// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Push settings for the App.
func ListWebAppSitePushSettingsSlot(ctx *pulumi.Context, args *ListWebAppSitePushSettingsSlotArgs, opts ...pulumi.InvokeOption) (*ListWebAppSitePushSettingsSlotResult, error) {
	var rv ListWebAppSitePushSettingsSlotResult
	err := ctx.Invoke("azure-native:web/v20160801:listWebAppSitePushSettingsSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListWebAppSitePushSettingsSlotArgs struct {
	// Name of web app.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of web app slot. If not specified then will default to production slot.
	Slot string `pulumi:"slot"`
}

// Push settings for the App.
type ListWebAppSitePushSettingsSlotResult struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type string `pulumi:"type"`
}

func ListWebAppSitePushSettingsSlotOutput(ctx *pulumi.Context, args ListWebAppSitePushSettingsSlotOutputArgs, opts ...pulumi.InvokeOption) ListWebAppSitePushSettingsSlotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListWebAppSitePushSettingsSlotResult, error) {
			args := v.(ListWebAppSitePushSettingsSlotArgs)
			r, err := ListWebAppSitePushSettingsSlot(ctx, &args, opts...)
			var s ListWebAppSitePushSettingsSlotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListWebAppSitePushSettingsSlotResultOutput)
}

type ListWebAppSitePushSettingsSlotOutputArgs struct {
	// Name of web app.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of web app slot. If not specified then will default to production slot.
	Slot pulumi.StringInput `pulumi:"slot"`
}

func (ListWebAppSitePushSettingsSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWebAppSitePushSettingsSlotArgs)(nil)).Elem()
}

// Push settings for the App.
type ListWebAppSitePushSettingsSlotResultOutput struct{ *pulumi.OutputState }

func (ListWebAppSitePushSettingsSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWebAppSitePushSettingsSlotResult)(nil)).Elem()
}

func (o ListWebAppSitePushSettingsSlotResultOutput) ToListWebAppSitePushSettingsSlotResultOutput() ListWebAppSitePushSettingsSlotResultOutput {
	return o
}

func (o ListWebAppSitePushSettingsSlotResultOutput) ToListWebAppSitePushSettingsSlotResultOutputWithContext(ctx context.Context) ListWebAppSitePushSettingsSlotResultOutput {
	return o
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o ListWebAppSitePushSettingsSlotResultOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o ListWebAppSitePushSettingsSlotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o ListWebAppSitePushSettingsSlotResultOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o ListWebAppSitePushSettingsSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o ListWebAppSitePushSettingsSlotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o ListWebAppSitePushSettingsSlotResultOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o ListWebAppSitePushSettingsSlotResultOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o ListWebAppSitePushSettingsSlotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListWebAppSitePushSettingsSlotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListWebAppSitePushSettingsSlotResultOutput{})
}
