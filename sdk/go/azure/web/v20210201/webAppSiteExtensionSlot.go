// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Site Extension Information.
type WebAppSiteExtensionSlot struct {
	pulumi.CustomResourceState

	// List of authors.
	Authors pulumi.StringArrayOutput `pulumi:"authors"`
	// Site Extension comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// Detailed description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Count of downloads.
	DownloadCount pulumi.IntPtrOutput `pulumi:"downloadCount"`
	// Site extension ID.
	ExtensionId pulumi.StringPtrOutput `pulumi:"extensionId"`
	// Site extension type.
	ExtensionType pulumi.StringPtrOutput `pulumi:"extensionType"`
	// Extension URL.
	ExtensionUrl pulumi.StringPtrOutput `pulumi:"extensionUrl"`
	// Feed URL.
	FeedUrl pulumi.StringPtrOutput `pulumi:"feedUrl"`
	// Icon URL.
	IconUrl pulumi.StringPtrOutput `pulumi:"iconUrl"`
	// Installed timestamp.
	InstalledDateTime pulumi.StringPtrOutput `pulumi:"installedDateTime"`
	// Installer command line parameters.
	InstallerCommandLineParams pulumi.StringPtrOutput `pulumi:"installerCommandLineParams"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// License URL.
	LicenseUrl pulumi.StringPtrOutput `pulumi:"licenseUrl"`
	// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
	LocalIsLatestVersion pulumi.BoolPtrOutput `pulumi:"localIsLatestVersion"`
	// Local path.
	LocalPath pulumi.StringPtrOutput `pulumi:"localPath"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Project URL.
	ProjectUrl pulumi.StringPtrOutput `pulumi:"projectUrl"`
	// Provisioning state.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Published timestamp.
	PublishedDateTime pulumi.StringPtrOutput `pulumi:"publishedDateTime"`
	// Summary description.
	Summary pulumi.StringPtrOutput `pulumi:"summary"`
	Title   pulumi.StringPtrOutput `pulumi:"title"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Version information.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewWebAppSiteExtensionSlot registers a new resource with the given unique name, arguments, and options.
func NewWebAppSiteExtensionSlot(ctx *pulumi.Context,
	name string, args *WebAppSiteExtensionSlotArgs, opts ...pulumi.ResourceOption) (*WebAppSiteExtensionSlot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Slot == nil {
		return nil, errors.New("invalid value for required argument 'Slot'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20160801:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20180201:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20181101:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20190801:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200601:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200901:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201001:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201201:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210101:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210115:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210301:WebAppSiteExtensionSlot"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220301:WebAppSiteExtensionSlot"),
		},
	})
	opts = append(opts, aliases)
	var resource WebAppSiteExtensionSlot
	err := ctx.RegisterResource("azure-native:web/v20210201:WebAppSiteExtensionSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppSiteExtensionSlot gets an existing WebAppSiteExtensionSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppSiteExtensionSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppSiteExtensionSlotState, opts ...pulumi.ResourceOption) (*WebAppSiteExtensionSlot, error) {
	var resource WebAppSiteExtensionSlot
	err := ctx.ReadResource("azure-native:web/v20210201:WebAppSiteExtensionSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppSiteExtensionSlot resources.
type webAppSiteExtensionSlotState struct {
}

type WebAppSiteExtensionSlotState struct {
}

func (WebAppSiteExtensionSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionSlotState)(nil)).Elem()
}

type webAppSiteExtensionSlotArgs struct {
	// Site name.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Site extension name.
	SiteExtensionId *string `pulumi:"siteExtensionId"`
	// Name of the deployment slot. If a slot is not specified, the API uses the production slot.
	Slot string `pulumi:"slot"`
}

// The set of arguments for constructing a WebAppSiteExtensionSlot resource.
type WebAppSiteExtensionSlotArgs struct {
	// Site name.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Site extension name.
	SiteExtensionId pulumi.StringPtrInput
	// Name of the deployment slot. If a slot is not specified, the API uses the production slot.
	Slot pulumi.StringInput
}

func (WebAppSiteExtensionSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppSiteExtensionSlotArgs)(nil)).Elem()
}

type WebAppSiteExtensionSlotInput interface {
	pulumi.Input

	ToWebAppSiteExtensionSlotOutput() WebAppSiteExtensionSlotOutput
	ToWebAppSiteExtensionSlotOutputWithContext(ctx context.Context) WebAppSiteExtensionSlotOutput
}

func (*WebAppSiteExtensionSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppSiteExtensionSlot)(nil)).Elem()
}

func (i *WebAppSiteExtensionSlot) ToWebAppSiteExtensionSlotOutput() WebAppSiteExtensionSlotOutput {
	return i.ToWebAppSiteExtensionSlotOutputWithContext(context.Background())
}

func (i *WebAppSiteExtensionSlot) ToWebAppSiteExtensionSlotOutputWithContext(ctx context.Context) WebAppSiteExtensionSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppSiteExtensionSlotOutput)
}

type WebAppSiteExtensionSlotOutput struct{ *pulumi.OutputState }

func (WebAppSiteExtensionSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppSiteExtensionSlot)(nil)).Elem()
}

func (o WebAppSiteExtensionSlotOutput) ToWebAppSiteExtensionSlotOutput() WebAppSiteExtensionSlotOutput {
	return o
}

func (o WebAppSiteExtensionSlotOutput) ToWebAppSiteExtensionSlotOutputWithContext(ctx context.Context) WebAppSiteExtensionSlotOutput {
	return o
}

// List of authors.
func (o WebAppSiteExtensionSlotOutput) Authors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringArrayOutput { return v.Authors }).(pulumi.StringArrayOutput)
}

// Site Extension comment.
func (o WebAppSiteExtensionSlotOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// Detailed description.
func (o WebAppSiteExtensionSlotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Count of downloads.
func (o WebAppSiteExtensionSlotOutput) DownloadCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.IntPtrOutput { return v.DownloadCount }).(pulumi.IntPtrOutput)
}

// Site extension ID.
func (o WebAppSiteExtensionSlotOutput) ExtensionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.ExtensionId }).(pulumi.StringPtrOutput)
}

// Site extension type.
func (o WebAppSiteExtensionSlotOutput) ExtensionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.ExtensionType }).(pulumi.StringPtrOutput)
}

// Extension URL.
func (o WebAppSiteExtensionSlotOutput) ExtensionUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.ExtensionUrl }).(pulumi.StringPtrOutput)
}

// Feed URL.
func (o WebAppSiteExtensionSlotOutput) FeedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.FeedUrl }).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o WebAppSiteExtensionSlotOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Installed timestamp.
func (o WebAppSiteExtensionSlotOutput) InstalledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.InstalledDateTime }).(pulumi.StringPtrOutput)
}

// Installer command line parameters.
func (o WebAppSiteExtensionSlotOutput) InstallerCommandLineParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.InstallerCommandLineParams }).(pulumi.StringPtrOutput)
}

// Kind of resource.
func (o WebAppSiteExtensionSlotOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// License URL.
func (o WebAppSiteExtensionSlotOutput) LicenseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.LicenseUrl }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the local version is the latest version; <code>false</code> otherwise.
func (o WebAppSiteExtensionSlotOutput) LocalIsLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.BoolPtrOutput { return v.LocalIsLatestVersion }).(pulumi.BoolPtrOutput)
}

// Local path.
func (o WebAppSiteExtensionSlotOutput) LocalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.LocalPath }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o WebAppSiteExtensionSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project URL.
func (o WebAppSiteExtensionSlotOutput) ProjectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.ProjectUrl }).(pulumi.StringPtrOutput)
}

// Provisioning state.
func (o WebAppSiteExtensionSlotOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Published timestamp.
func (o WebAppSiteExtensionSlotOutput) PublishedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.PublishedDateTime }).(pulumi.StringPtrOutput)
}

// Summary description.
func (o WebAppSiteExtensionSlotOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Summary }).(pulumi.StringPtrOutput)
}

func (o WebAppSiteExtensionSlotOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o WebAppSiteExtensionSlotOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Version information.
func (o WebAppSiteExtensionSlotOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppSiteExtensionSlot) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(WebAppSiteExtensionSlotOutput{})
}
