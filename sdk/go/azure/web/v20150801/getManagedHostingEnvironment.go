// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupManagedHostingEnvironment(ctx *pulumi.Context, args *LookupManagedHostingEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupManagedHostingEnvironmentResult, error) {
	var rv LookupManagedHostingEnvironmentResult
	err := ctx.Invoke("azure-native:web/v20150801:getManagedHostingEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedHostingEnvironmentArgs struct {
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Description of a managed hosting environment
type LookupManagedHostingEnvironmentResult struct {
	ApiManagementAccount *string                        `pulumi:"apiManagementAccount"`
	DnsSuffix            *string                        `pulumi:"dnsSuffix"`
	EnvironmentIsHealthy *bool                          `pulumi:"environmentIsHealthy"`
	EnvironmentStatus    *string                        `pulumi:"environmentStatus"`
	Id                   *string                        `pulumi:"id"`
	IpsslAddressCount    *int                           `pulumi:"ipsslAddressCount"`
	Kind                 *string                        `pulumi:"kind"`
	Location             string                         `pulumi:"location"`
	Name                 *string                        `pulumi:"name"`
	ResourceGroup        *string                        `pulumi:"resourceGroup"`
	Status               string                         `pulumi:"status"`
	SubscriptionId       *string                        `pulumi:"subscriptionId"`
	Suspended            *bool                          `pulumi:"suspended"`
	Tags                 map[string]string              `pulumi:"tags"`
	Type                 *string                        `pulumi:"type"`
	VirtualNetwork       *VirtualNetworkProfileResponse `pulumi:"virtualNetwork"`
}
