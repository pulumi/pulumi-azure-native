// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// App Service Plan Model
//
// Deprecated: Version 2015-08-01 will be removed in v2 of the provider.
func LookupServerFarm(ctx *pulumi.Context, args *LookupServerFarmArgs, opts ...pulumi.InvokeOption) (*LookupServerFarmResult, error) {
	var rv LookupServerFarmResult
	err := ctx.Invoke("azure-native:web/v20150801:getServerFarm", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerFarmArgs struct {
	// Name of App Service Plan
	Name string `pulumi:"name"`
	// Name of resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// App Service Plan Model
type LookupServerFarmResult struct {
	// App Service Plan administration site
	AdminSiteName *string `pulumi:"adminSiteName"`
	// Geographical location for the App Service Plan
	GeoRegion string `pulumi:"geoRegion"`
	// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Maximum number of instances that can be assigned to this App Service Plan
	MaximumNumberOfWorkers *int `pulumi:"maximumNumberOfWorkers"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Number of web apps assigned to this App Service Plan
	NumberOfSites int `pulumi:"numberOfSites"`
	// If True apps assigned to this App Service Plan can be scaled independently
	//             If False apps assigned to this App Service Plan will scale to all instances of the plan
	PerSiteScaling *bool `pulumi:"perSiteScaling"`
	// Enables creation of a Linux App Service Plan
	Reserved *bool `pulumi:"reserved"`
	// Resource group of the server farm
	ResourceGroup string `pulumi:"resourceGroup"`
	// Describes a sku for a scalable resource
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// App Service Plan Status
	Status string `pulumi:"status"`
	// App Service Plan Subscription
	Subscription string `pulumi:"subscription"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// Target worker tier assigned to the App Service Plan
	WorkerTierName *string `pulumi:"workerTierName"`
}

func LookupServerFarmOutput(ctx *pulumi.Context, args LookupServerFarmOutputArgs, opts ...pulumi.InvokeOption) LookupServerFarmResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerFarmResult, error) {
			args := v.(LookupServerFarmArgs)
			r, err := LookupServerFarm(ctx, &args, opts...)
			var s LookupServerFarmResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerFarmResultOutput)
}

type LookupServerFarmOutputArgs struct {
	// Name of App Service Plan
	Name pulumi.StringInput `pulumi:"name"`
	// Name of resource group
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupServerFarmOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerFarmArgs)(nil)).Elem()
}

// App Service Plan Model
type LookupServerFarmResultOutput struct{ *pulumi.OutputState }

func (LookupServerFarmResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerFarmResult)(nil)).Elem()
}

func (o LookupServerFarmResultOutput) ToLookupServerFarmResultOutput() LookupServerFarmResultOutput {
	return o
}

func (o LookupServerFarmResultOutput) ToLookupServerFarmResultOutputWithContext(ctx context.Context) LookupServerFarmResultOutput {
	return o
}

// App Service Plan administration site
func (o LookupServerFarmResultOutput) AdminSiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.AdminSiteName }).(pulumi.StringPtrOutput)
}

// Geographical location for the App Service Plan
func (o LookupServerFarmResultOutput) GeoRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerFarmResult) string { return v.GeoRegion }).(pulumi.StringOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the App Service Plan
func (o LookupServerFarmResultOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *HostingEnvironmentProfileResponse { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource Id
func (o LookupServerFarmResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of resource
func (o LookupServerFarmResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location
func (o LookupServerFarmResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerFarmResult) string { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of instances that can be assigned to this App Service Plan
func (o LookupServerFarmResultOutput) MaximumNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *int { return v.MaximumNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Resource Name
func (o LookupServerFarmResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of web apps assigned to this App Service Plan
func (o LookupServerFarmResultOutput) NumberOfSites() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerFarmResult) int { return v.NumberOfSites }).(pulumi.IntOutput)
}

// If True apps assigned to this App Service Plan can be scaled independently
//
//	If False apps assigned to this App Service Plan will scale to all instances of the plan
func (o LookupServerFarmResultOutput) PerSiteScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *bool { return v.PerSiteScaling }).(pulumi.BoolPtrOutput)
}

// Enables creation of a Linux App Service Plan
func (o LookupServerFarmResultOutput) Reserved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *bool { return v.Reserved }).(pulumi.BoolPtrOutput)
}

// Resource group of the server farm
func (o LookupServerFarmResultOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerFarmResult) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Describes a sku for a scalable resource
func (o LookupServerFarmResultOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *SkuDescriptionResponse { return v.Sku }).(SkuDescriptionResponsePtrOutput)
}

// App Service Plan Status
func (o LookupServerFarmResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerFarmResult) string { return v.Status }).(pulumi.StringOutput)
}

// App Service Plan Subscription
func (o LookupServerFarmResultOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerFarmResult) string { return v.Subscription }).(pulumi.StringOutput)
}

// Resource tags
func (o LookupServerFarmResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerFarmResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o LookupServerFarmResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Target worker tier assigned to the App Service Plan
func (o LookupServerFarmResultOutput) WorkerTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerFarmResult) *string { return v.WorkerTierName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerFarmResultOutput{})
}
