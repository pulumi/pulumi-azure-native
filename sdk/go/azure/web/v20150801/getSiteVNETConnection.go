// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupSiteVNETConnection(ctx *pulumi.Context, args *LookupSiteVNETConnectionArgs, opts ...pulumi.InvokeOption) (*LookupSiteVNETConnectionResult, error) {
	var rv LookupSiteVNETConnectionResult
	err := ctx.Invoke("azure-nextgen:web/v20150801:getSiteVNETConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSiteVNETConnectionArgs struct {
	// The name of the web app
	Name string `pulumi:"name"`
	// The resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Virtual Network
	VnetName string `pulumi:"vnetName"`
}

// VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal
type LookupSiteVNETConnectionResult struct {
	// A certificate file (.cer) blob containing the public key of the private key used to authenticate a
	//             Point-To-Site VPN connection.
	CertBlob *string `pulumi:"certBlob"`
	// The client certificate thumbprint
	CertThumbprint *string `pulumi:"certThumbprint"`
	// Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.
	DnsServers *string `pulumi:"dnsServers"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Flag to determine if a resync is required
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The routes that this virtual network connection uses.
	Routes []VnetRouteResponse `pulumi:"routes"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// The vnet resource id
	VnetResourceId *string `pulumi:"vnetResourceId"`
}
