// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Description of a backup which will be performed
type SiteBackupConfiguration struct {
	pulumi.CustomResourceState

	// Schedule for the backup if it is executed periodically
	BackupSchedule BackupScheduleResponsePtrOutput `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases DatabaseBackupSettingResponseArrayOutput `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Kind of resource
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl pulumi.StringPtrOutput `pulumi:"storageAccountUrl"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSiteBackupConfiguration registers a new resource with the given unique name, arguments, and options.
func NewSiteBackupConfiguration(ctx *pulumi.Context,
	name string, args *SiteBackupConfigurationArgs, opts ...pulumi.ResourceOption) (*SiteBackupConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:web:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/latest:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20160801:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20180201:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20181101:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20190801:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200601:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200901:SiteBackupConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20201001:SiteBackupConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource SiteBackupConfiguration
	err := ctx.RegisterResource("azure-nextgen:web/v20150801:SiteBackupConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteBackupConfiguration gets an existing SiteBackupConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteBackupConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteBackupConfigurationState, opts ...pulumi.ResourceOption) (*SiteBackupConfiguration, error) {
	var resource SiteBackupConfiguration
	err := ctx.ReadResource("azure-nextgen:web/v20150801:SiteBackupConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteBackupConfiguration resources.
type siteBackupConfigurationState struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule *BackupScheduleResponse `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled *bool `pulumi:"enabled"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location *string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// SAS URL to the container
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

type SiteBackupConfigurationState struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule BackupScheduleResponsePtrInput
	// Databases included in the backup
	Databases DatabaseBackupSettingResponseArrayInput
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled pulumi.BoolPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Resource Location
	Location pulumi.StringPtrInput
	// Resource Name
	Name pulumi.StringPtrInput
	// SAS URL to the container
	StorageAccountUrl pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (SiteBackupConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteBackupConfigurationState)(nil)).Elem()
}

type siteBackupConfigurationArgs struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule *BackupSchedule `pulumi:"backupSchedule"`
	// Databases included in the backup
	Databases []DatabaseBackupSetting `pulumi:"databases"`
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled *bool `pulumi:"enabled"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Resource Location
	Location *string `pulumi:"location"`
	// Resource Name
	Name string `pulumi:"name"`
	// Name of resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SAS URL to the container
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a SiteBackupConfiguration resource.
type SiteBackupConfigurationArgs struct {
	// Schedule for the backup if it is executed periodically
	BackupSchedule BackupSchedulePtrInput
	// Databases included in the backup
	Databases DatabaseBackupSettingArrayInput
	// True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled
	Enabled pulumi.BoolPtrInput
	// Resource Id
	Id pulumi.StringPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Resource Location
	Location pulumi.StringPtrInput
	// Resource Name
	Name pulumi.StringInput
	// Name of resource group
	ResourceGroupName pulumi.StringInput
	// SAS URL to the container
	StorageAccountUrl pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringInput
}

func (SiteBackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteBackupConfigurationArgs)(nil)).Elem()
}

type SiteBackupConfigurationInput interface {
	pulumi.Input

	ToSiteBackupConfigurationOutput() SiteBackupConfigurationOutput
	ToSiteBackupConfigurationOutputWithContext(ctx context.Context) SiteBackupConfigurationOutput
}

func (*SiteBackupConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteBackupConfiguration)(nil))
}

func (i *SiteBackupConfiguration) ToSiteBackupConfigurationOutput() SiteBackupConfigurationOutput {
	return i.ToSiteBackupConfigurationOutputWithContext(context.Background())
}

func (i *SiteBackupConfiguration) ToSiteBackupConfigurationOutputWithContext(ctx context.Context) SiteBackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteBackupConfigurationOutput)
}

type SiteBackupConfigurationOutput struct {
	*pulumi.OutputState
}

func (SiteBackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteBackupConfiguration)(nil))
}

func (o SiteBackupConfigurationOutput) ToSiteBackupConfigurationOutput() SiteBackupConfigurationOutput {
	return o
}

func (o SiteBackupConfigurationOutput) ToSiteBackupConfigurationOutputWithContext(ctx context.Context) SiteBackupConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SiteBackupConfigurationOutput{})
}
