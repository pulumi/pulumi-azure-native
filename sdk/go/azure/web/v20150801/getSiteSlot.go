// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a web app
//
// Deprecated: Version 2015-08-01 will be removed in v2 of the provider.
func LookupSiteSlot(ctx *pulumi.Context, args *LookupSiteSlotArgs, opts ...pulumi.InvokeOption) (*LookupSiteSlotResult, error) {
	var rv LookupSiteSlotResult
	err := ctx.Invoke("azure-native:web/v20150801:getSiteSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSiteSlotArgs struct {
	// Name of web app
	Name string `pulumi:"name"`
	// Additional web app properties included in the response
	PropertiesToInclude *string `pulumi:"propertiesToInclude"`
	// Name of resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of web app slot. If not specified then will default to production slot.
	Slot string `pulumi:"slot"`
}

// Represents a web app
type LookupSiteSlotResult struct {
	// Management information availability state for the web app. Possible values are Normal or Limited.
	//             Normal means that the site is running correctly and that management information for the site is available.
	//             Limited means that only partial management information for the site is available and that detailed site information is unavailable.
	AvailabilityState string `pulumi:"availabilityState"`
	// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// Specifies if the client certificate is enabled for the web app
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// This is only valid for web app creation. If specified, web app is cloned from
	//             a source web app
	CloningInfo *CloningInfoResponse `pulumi:"cloningInfo"`
	// Size of a function container
	ContainerSize *int `pulumi:"containerSize"`
	// Default hostname of the web app
	DefaultHostName string `pulumi:"defaultHostName"`
	// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
	Enabled *bool `pulumi:"enabled"`
	// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
	//             the app is not served on those hostnames
	EnabledHostNames []string `pulumi:"enabledHostNames"`
	// Name of gateway app associated with web app
	GatewaySiteName *string `pulumi:"gatewaySiteName"`
	// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
	HostNameSslStates []HostNameSslStateResponse `pulumi:"hostNameSslStates"`
	// Hostnames associated with web app
	HostNames []string `pulumi:"hostNames"`
	// Specifies if the public hostnames are disabled the web app.
	//             If set to true the app is only accessible via API Management process
	HostNamesDisabled *bool `pulumi:"hostNamesDisabled"`
	// Specification for the hosting environment (App Service Environment) to use for the web app
	HostingEnvironmentProfile *HostingEnvironmentProfileResponse `pulumi:"hostingEnvironmentProfile"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Site is a default container
	IsDefaultContainer bool `pulumi:"isDefaultContainer"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Last time web app was modified in UTC
	LastModifiedTimeUtc string `pulumi:"lastModifiedTimeUtc"`
	// Resource Location
	Location string `pulumi:"location"`
	// Maximum number of workers
	//             This only applies to function container
	MaxNumberOfWorkers *int    `pulumi:"maxNumberOfWorkers"`
	MicroService       *string `pulumi:"microService"`
	// Resource Name
	Name *string `pulumi:"name"`
	// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
	OutboundIpAddresses string `pulumi:"outboundIpAddresses"`
	// If set indicates whether web app is deployed as a premium app
	PremiumAppDeployed bool `pulumi:"premiumAppDeployed"`
	// Name of repository site
	RepositorySiteName string `pulumi:"repositorySiteName"`
	// Resource group web app belongs to
	ResourceGroup string `pulumi:"resourceGroup"`
	// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
	ScmSiteAlsoStopped *bool   `pulumi:"scmSiteAlsoStopped"`
	ServerFarmId       *string `pulumi:"serverFarmId"`
	// Configuration of web app
	SiteConfig *SiteConfigResponse `pulumi:"siteConfig"`
	// State of the web app
	State string `pulumi:"state"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Read-only property that specifies which slot this app will swap into
	TargetSwapSlot string `pulumi:"targetSwapSlot"`
	// Read-only list of Azure Traffic manager hostnames associated with web app
	TrafficManagerHostNames []string `pulumi:"trafficManagerHostNames"`
	// Resource type
	Type *string `pulumi:"type"`
	// State indicating whether web app has exceeded its quota usage
	UsageState string `pulumi:"usageState"`
}

func LookupSiteSlotOutput(ctx *pulumi.Context, args LookupSiteSlotOutputArgs, opts ...pulumi.InvokeOption) LookupSiteSlotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSiteSlotResult, error) {
			args := v.(LookupSiteSlotArgs)
			r, err := LookupSiteSlot(ctx, &args, opts...)
			var s LookupSiteSlotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSiteSlotResultOutput)
}

type LookupSiteSlotOutputArgs struct {
	// Name of web app
	Name pulumi.StringInput `pulumi:"name"`
	// Additional web app properties included in the response
	PropertiesToInclude pulumi.StringPtrInput `pulumi:"propertiesToInclude"`
	// Name of resource group
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of web app slot. If not specified then will default to production slot.
	Slot pulumi.StringInput `pulumi:"slot"`
}

func (LookupSiteSlotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteSlotArgs)(nil)).Elem()
}

// Represents a web app
type LookupSiteSlotResultOutput struct{ *pulumi.OutputState }

func (LookupSiteSlotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteSlotResult)(nil)).Elem()
}

func (o LookupSiteSlotResultOutput) ToLookupSiteSlotResultOutput() LookupSiteSlotResultOutput {
	return o
}

func (o LookupSiteSlotResultOutput) ToLookupSiteSlotResultOutputWithContext(ctx context.Context) LookupSiteSlotResultOutput {
	return o
}

// Management information availability state for the web app. Possible values are Normal or Limited.
//
//	Normal means that the site is running correctly and that management information for the site is available.
//	Limited means that only partial management information for the site is available and that detailed site information is unavailable.
func (o LookupSiteSlotResultOutput) AvailabilityState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.AvailabilityState }).(pulumi.StringOutput)
}

// Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app
func (o LookupSiteSlotResultOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *bool { return v.ClientAffinityEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if the client certificate is enabled for the web app
func (o LookupSiteSlotResultOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *bool { return v.ClientCertEnabled }).(pulumi.BoolPtrOutput)
}

// This is only valid for web app creation. If specified, web app is cloned from
//
//	a source web app
func (o LookupSiteSlotResultOutput) CloningInfo() CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *CloningInfoResponse { return v.CloningInfo }).(CloningInfoResponsePtrOutput)
}

// Size of a function container
func (o LookupSiteSlotResultOutput) ContainerSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *int { return v.ContainerSize }).(pulumi.IntPtrOutput)
}

// Default hostname of the web app
func (o LookupSiteSlotResultOutput) DefaultHostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.DefaultHostName }).(pulumi.StringOutput)
}

// True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).
func (o LookupSiteSlotResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled
//
//	the app is not served on those hostnames
func (o LookupSiteSlotResultOutput) EnabledHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) []string { return v.EnabledHostNames }).(pulumi.StringArrayOutput)
}

// Name of gateway app associated with web app
func (o LookupSiteSlotResultOutput) GatewaySiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.GatewaySiteName }).(pulumi.StringPtrOutput)
}

// Hostname SSL states are  used to manage the SSL bindings for site's hostnames.
func (o LookupSiteSlotResultOutput) HostNameSslStates() HostNameSslStateResponseArrayOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) []HostNameSslStateResponse { return v.HostNameSslStates }).(HostNameSslStateResponseArrayOutput)
}

// Hostnames associated with web app
func (o LookupSiteSlotResultOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Specifies if the public hostnames are disabled the web app.
//
//	If set to true the app is only accessible via API Management process
func (o LookupSiteSlotResultOutput) HostNamesDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *bool { return v.HostNamesDisabled }).(pulumi.BoolPtrOutput)
}

// Specification for the hosting environment (App Service Environment) to use for the web app
func (o LookupSiteSlotResultOutput) HostingEnvironmentProfile() HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *HostingEnvironmentProfileResponse { return v.HostingEnvironmentProfile }).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource Id
func (o LookupSiteSlotResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Site is a default container
func (o LookupSiteSlotResultOutput) IsDefaultContainer() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) bool { return v.IsDefaultContainer }).(pulumi.BoolOutput)
}

// Kind of resource
func (o LookupSiteSlotResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Last time web app was modified in UTC
func (o LookupSiteSlotResultOutput) LastModifiedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.LastModifiedTimeUtc }).(pulumi.StringOutput)
}

// Resource Location
func (o LookupSiteSlotResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of workers
//
//	This only applies to function container
func (o LookupSiteSlotResultOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *int { return v.MaxNumberOfWorkers }).(pulumi.IntPtrOutput)
}

func (o LookupSiteSlotResultOutput) MicroService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.MicroService }).(pulumi.StringPtrOutput)
}

// Resource Name
func (o LookupSiteSlotResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.
func (o LookupSiteSlotResultOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// If set indicates whether web app is deployed as a premium app
func (o LookupSiteSlotResultOutput) PremiumAppDeployed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) bool { return v.PremiumAppDeployed }).(pulumi.BoolOutput)
}

// Name of repository site
func (o LookupSiteSlotResultOutput) RepositorySiteName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.RepositorySiteName }).(pulumi.StringOutput)
}

// Resource group web app belongs to
func (o LookupSiteSlotResultOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.
func (o LookupSiteSlotResultOutput) ScmSiteAlsoStopped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *bool { return v.ScmSiteAlsoStopped }).(pulumi.BoolPtrOutput)
}

func (o LookupSiteSlotResultOutput) ServerFarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.ServerFarmId }).(pulumi.StringPtrOutput)
}

// Configuration of web app
func (o LookupSiteSlotResultOutput) SiteConfig() SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *SiteConfigResponse { return v.SiteConfig }).(SiteConfigResponsePtrOutput)
}

// State of the web app
func (o LookupSiteSlotResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.State }).(pulumi.StringOutput)
}

// Resource tags
func (o LookupSiteSlotResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Read-only property that specifies which slot this app will swap into
func (o LookupSiteSlotResultOutput) TargetSwapSlot() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.TargetSwapSlot }).(pulumi.StringOutput)
}

// Read-only list of Azure Traffic manager hostnames associated with web app
func (o LookupSiteSlotResultOutput) TrafficManagerHostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) []string { return v.TrafficManagerHostNames }).(pulumi.StringArrayOutput)
}

// Resource type
func (o LookupSiteSlotResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// State indicating whether web app has exceeded its quota usage
func (o LookupSiteSlotResultOutput) UsageState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteSlotResult) string { return v.UsageState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSiteSlotResultOutput{})
}
