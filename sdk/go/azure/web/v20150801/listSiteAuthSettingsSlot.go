// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func ListSiteAuthSettingsSlot(ctx *pulumi.Context, args *ListSiteAuthSettingsSlotArgs, opts ...pulumi.InvokeOption) (*ListSiteAuthSettingsSlotResult, error) {
	var rv ListSiteAuthSettingsSlotResult
	err := ctx.Invoke("azure-nextgen:web/v20150801:listSiteAuthSettingsSlot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSiteAuthSettingsSlotArgs struct {
	// Name of web app
	Name string `pulumi:"name"`
	// Name of resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of web app slot. If not specified then will default to production slot.
	Slot string `pulumi:"slot"`
}

// Configuration settings for the Azure App Service Authentication / Authorization feature.
type ListSiteAuthSettingsSlotResult struct {
	AadClientId *string `pulumi:"aadClientId"`
	// Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when
	//             a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams []string `pulumi:"additionalLoginParams"`
	// Gets or sets a list of allowed audience values to consider when validating JWTs issued by
	//             Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an
	//             allowed audience, regardless of this setting.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// Gets or sets a collection of external URLs that can be redirected to as part of logging in
	//             or logging out of the web app. Note that the query string part of the URL is ignored.
	//             This is an advanced setting typically only needed by Windows Store application backends.
	//             Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// Gets or sets the Client ID of this relying party application, known as the client_id.
	//             This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	//             other 3rd party OpenID Connect providers.
	//             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId *string `pulumi:"clientId"`
	// Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
	//             This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
	//             Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
	//             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientSecret *string `pulumi:"clientSecret"`
	// Gets or sets the default authentication provider to use when multiple providers are configured.
	//             This setting is only needed if multiple providers are configured and the unauthenticated client
	//             action is set to "RedirectToLoginPage".
	DefaultProvider *string `pulumi:"defaultProvider"`
	// Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app.
	Enabled *bool `pulumi:"enabled"`
	// Gets or sets the App ID of the Facebook app used for login.
	//             This setting is required for enabling Facebook Login.
	//             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppId *string `pulumi:"facebookAppId"`
	// Gets or sets the App Secret of the Facebook app used for Facebook Login.
	//             This setting is required for enabling Facebook Login.
	//             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookAppSecret *string `pulumi:"facebookAppSecret"`
	// Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
	//             This setting is optional.
	//             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
	FacebookOAuthScopes []string `pulumi:"facebookOAuthScopes"`
	// Gets or sets the OpenID Connect Client ID for the Google web application.
	//             This setting is required for enabling Google Sign-In.
	//             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientId *string `pulumi:"googleClientId"`
	// Gets or sets the client secret associated with the Google web application.
	//             This setting is required for enabling Google Sign-In.
	//             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleClientSecret *string `pulumi:"googleClientSecret"`
	// Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
	//             This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
	//             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
	GoogleOAuthScopes []string `pulumi:"googleOAuthScopes"`
	// Gets or sets the relative path prefix used by platform HTTP APIs.
	//             Changing this value is not recommended except for compatibility reasons.
	HttpApiPrefixPath *string `pulumi:"httpApiPrefixPath"`
	// Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	//             When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	//             This URI is a case-sensitive identifier for the token issuer.
	//             More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	Issuer *string `pulumi:"issuer"`
	// Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.
	//             This setting is required for enabling Microsoft Account authentication.
	//             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientId *string `pulumi:"microsoftAccountClientId"`
	// Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.
	//             This setting is required for enabling Microsoft Account authentication.
	//             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
	MicrosoftAccountClientSecret *string `pulumi:"microsoftAccountClientSecret"`
	// Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
	//             This setting is optional. If not specified, "wl.basic" is used as the default scope.
	//             Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
	MicrosoftAccountOAuthScopes []string `pulumi:"microsoftAccountOAuthScopes"`
	OpenIdIssuer                *string  `pulumi:"openIdIssuer"`
	// Gets or sets the number of hours after session token expiration that a session token can be used to
	//             call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// Gets or sets a value indicating whether to durably store platform-specific security tokens
	//             obtained during login flows. This capability is disabled by default.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.
	//             This setting is required for enabling Twitter Sign-In.
	//             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerKey *string `pulumi:"twitterConsumerKey"`
	// Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
	//             This setting is required for enabling Twitter Sign-In.
	//             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	TwitterConsumerSecret *string `pulumi:"twitterConsumerSecret"`
	// Gets or sets the action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}
