// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// App Service Environment ARM resource.
type AppServiceEnvironment struct {
	pulumi.CustomResourceState

	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings NameValuePairResponseArrayOutput `pulumi:"clusterSettings"`
	// Dedicated Host Count
	DedicatedHostCount pulumi.IntOutput `pulumi:"dedicatedHostCount"`
	// DNS suffix of the App Service Environment.
	DnsSuffix pulumi.StringPtrOutput `pulumi:"dnsSuffix"`
	// Scale factor for front-ends.
	FrontEndScaleFactor pulumi.IntPtrOutput `pulumi:"frontEndScaleFactor"`
	// Flag that displays whether an ASE has linux workers or not
	HasLinuxWorkers pulumi.BoolOutput `pulumi:"hasLinuxWorkers"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode pulumi.StringPtrOutput `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount pulumi.IntPtrOutput `pulumi:"ipsslAddressCount"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Maximum number of VMs in the App Service Environment.
	MaximumNumberOfMachines pulumi.IntOutput `pulumi:"maximumNumberOfMachines"`
	// Number of front-end instances.
	MultiRoleCount pulumi.IntOutput `pulumi:"multiRoleCount"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize pulumi.StringPtrOutput `pulumi:"multiSize"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the App Service Environment.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Current status of the App Service Environment.
	Status pulumi.StringOutput `pulumi:"status"`
	// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
	//  (most likely because NSG blocked the incoming traffic).
	Suspended pulumi.BoolOutput `pulumi:"suspended"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges pulumi.StringArrayOutput `pulumi:"userWhitelistedIpRanges"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileResponseOutput `pulumi:"virtualNetwork"`
}

// NewAppServiceEnvironment registers a new resource with the given unique name, arguments, and options.
func NewAppServiceEnvironment(ctx *pulumi.Context,
	name string, args *AppServiceEnvironmentArgs, opts ...pulumi.ResourceOption) (*AppServiceEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VirtualNetwork == nil {
		return nil, errors.New("invalid value for required argument 'VirtualNetwork'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20150801:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20160901:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20180201:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20190801:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200601:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200901:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201001:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201201:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210115:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210201:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20210301:AppServiceEnvironment"),
		},
		{
			Type: pulumi.String("azure-native:web/v20220301:AppServiceEnvironment"),
		},
	})
	opts = append(opts, aliases)
	var resource AppServiceEnvironment
	err := ctx.RegisterResource("azure-native:web/v20210101:AppServiceEnvironment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppServiceEnvironment gets an existing AppServiceEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppServiceEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceEnvironmentState, opts ...pulumi.ResourceOption) (*AppServiceEnvironment, error) {
	var resource AppServiceEnvironment
	err := ctx.ReadResource("azure-native:web/v20210101:AppServiceEnvironment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppServiceEnvironment resources.
type appServiceEnvironmentState struct {
}

type AppServiceEnvironmentState struct {
}

func (AppServiceEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentState)(nil)).Elem()
}

type appServiceEnvironmentArgs struct {
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings []NameValuePair `pulumi:"clusterSettings"`
	// DNS suffix of the App Service Environment.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Scale factor for front-ends.
	FrontEndScaleFactor *int `pulumi:"frontEndScaleFactor"`
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode *string `pulumi:"internalLoadBalancingMode"`
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount *int `pulumi:"ipsslAddressCount"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location *string `pulumi:"location"`
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize *string `pulumi:"multiSize"`
	// Name of the App Service Environment.
	Name *string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges []string `pulumi:"userWhitelistedIpRanges"`
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfile `pulumi:"virtualNetwork"`
}

// The set of arguments for constructing a AppServiceEnvironment resource.
type AppServiceEnvironmentArgs struct {
	// Custom settings for changing the behavior of the App Service Environment.
	ClusterSettings NameValuePairArrayInput
	// DNS suffix of the App Service Environment.
	DnsSuffix pulumi.StringPtrInput
	// Scale factor for front-ends.
	FrontEndScaleFactor pulumi.IntPtrInput
	// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
	InternalLoadBalancingMode pulumi.StringPtrInput
	// Number of IP SSL addresses reserved for the App Service Environment.
	IpsslAddressCount pulumi.IntPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringPtrInput
	// Front-end VM size, e.g. "Medium", "Large".
	MultiSize pulumi.StringPtrInput
	// Name of the App Service Environment.
	Name pulumi.StringPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// User added ip ranges to whitelist on ASE db
	UserWhitelistedIpRanges pulumi.StringArrayInput
	// Description of the Virtual Network.
	VirtualNetwork VirtualNetworkProfileInput
}

func (AppServiceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentArgs)(nil)).Elem()
}

type AppServiceEnvironmentInput interface {
	pulumi.Input

	ToAppServiceEnvironmentOutput() AppServiceEnvironmentOutput
	ToAppServiceEnvironmentOutputWithContext(ctx context.Context) AppServiceEnvironmentOutput
}

func (*AppServiceEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironment)(nil)).Elem()
}

func (i *AppServiceEnvironment) ToAppServiceEnvironmentOutput() AppServiceEnvironmentOutput {
	return i.ToAppServiceEnvironmentOutputWithContext(context.Background())
}

func (i *AppServiceEnvironment) ToAppServiceEnvironmentOutputWithContext(ctx context.Context) AppServiceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentOutput)
}

type AppServiceEnvironmentOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironment)(nil)).Elem()
}

func (o AppServiceEnvironmentOutput) ToAppServiceEnvironmentOutput() AppServiceEnvironmentOutput {
	return o
}

func (o AppServiceEnvironmentOutput) ToAppServiceEnvironmentOutputWithContext(ctx context.Context) AppServiceEnvironmentOutput {
	return o
}

// Custom settings for changing the behavior of the App Service Environment.
func (o AppServiceEnvironmentOutput) ClusterSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) NameValuePairResponseArrayOutput { return v.ClusterSettings }).(NameValuePairResponseArrayOutput)
}

// Dedicated Host Count
func (o AppServiceEnvironmentOutput) DedicatedHostCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.IntOutput { return v.DedicatedHostCount }).(pulumi.IntOutput)
}

// DNS suffix of the App Service Environment.
func (o AppServiceEnvironmentOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringPtrOutput { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Scale factor for front-ends.
func (o AppServiceEnvironmentOutput) FrontEndScaleFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.IntPtrOutput { return v.FrontEndScaleFactor }).(pulumi.IntPtrOutput)
}

// Flag that displays whether an ASE has linux workers or not
func (o AppServiceEnvironmentOutput) HasLinuxWorkers() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.BoolOutput { return v.HasLinuxWorkers }).(pulumi.BoolOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
func (o AppServiceEnvironmentOutput) InternalLoadBalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringPtrOutput { return v.InternalLoadBalancingMode }).(pulumi.StringPtrOutput)
}

// Number of IP SSL addresses reserved for the App Service Environment.
func (o AppServiceEnvironmentOutput) IpsslAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.IntPtrOutput { return v.IpsslAddressCount }).(pulumi.IntPtrOutput)
}

// Kind of resource.
func (o AppServiceEnvironmentOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o AppServiceEnvironmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of VMs in the App Service Environment.
func (o AppServiceEnvironmentOutput) MaximumNumberOfMachines() pulumi.IntOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.IntOutput { return v.MaximumNumberOfMachines }).(pulumi.IntOutput)
}

// Number of front-end instances.
func (o AppServiceEnvironmentOutput) MultiRoleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.IntOutput { return v.MultiRoleCount }).(pulumi.IntOutput)
}

// Front-end VM size, e.g. "Medium", "Large".
func (o AppServiceEnvironmentOutput) MultiSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringPtrOutput { return v.MultiSize }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o AppServiceEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the App Service Environment.
func (o AppServiceEnvironmentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Current status of the App Service Environment.
func (o AppServiceEnvironmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// <code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available
//
//	(most likely because NSG blocked the incoming traffic).
func (o AppServiceEnvironmentOutput) Suspended() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.BoolOutput { return v.Suspended }).(pulumi.BoolOutput)
}

// Resource tags.
func (o AppServiceEnvironmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceEnvironmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// User added ip ranges to whitelist on ASE db
func (o AppServiceEnvironmentOutput) UserWhitelistedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) pulumi.StringArrayOutput { return v.UserWhitelistedIpRanges }).(pulumi.StringArrayOutput)
}

// Description of the Virtual Network.
func (o AppServiceEnvironmentOutput) VirtualNetwork() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *AppServiceEnvironment) VirtualNetworkProfileResponseOutput { return v.VirtualNetwork }).(VirtualNetworkProfileResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceEnvironmentOutput{})
}
