// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about the formal API definition for the app.
type ApiDefinitionInfo struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInput is an input type that accepts ApiDefinitionInfoArgs and ApiDefinitionInfoOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInput` via:
//
//          ApiDefinitionInfoArgs{...}
type ApiDefinitionInfoInput interface {
	pulumi.Input

	ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput
	ToApiDefinitionInfoOutputWithContext(context.Context) ApiDefinitionInfoOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return i.ToApiDefinitionInfoOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput)
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput).ToApiDefinitionInfoPtrOutputWithContext(ctx)
}

// ApiDefinitionInfoPtrInput is an input type that accepts ApiDefinitionInfoArgs, ApiDefinitionInfoPtr and ApiDefinitionInfoPtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoPtrInput` via:
//
//          ApiDefinitionInfoArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoPtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput
	ToApiDefinitionInfoPtrOutputWithContext(context.Context) ApiDefinitionInfoPtrOutput
}

type apiDefinitionInfoPtrType ApiDefinitionInfoArgs

func ApiDefinitionInfoPtr(v *ApiDefinitionInfoArgs) ApiDefinitionInfoPtrInput {
	return (*apiDefinitionInfoPtrType)(v)
}

func (*apiDefinitionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *ApiDefinitionInfo {
		return &v
	}).(ApiDefinitionInfoPtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoPtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) Elem() ApiDefinitionInfoOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) ApiDefinitionInfo { return *v }).(ApiDefinitionInfoOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoInvokeResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInvokeResponseInput is an input type that accepts ApiDefinitionInfoInvokeResponseArgs and ApiDefinitionInfoInvokeResponseOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInvokeResponseInput` via:
//
//          ApiDefinitionInfoInvokeResponseArgs{...}
type ApiDefinitionInfoInvokeResponseInput interface {
	pulumi.Input

	ToApiDefinitionInfoInvokeResponseOutput() ApiDefinitionInfoInvokeResponseOutput
	ToApiDefinitionInfoInvokeResponseOutputWithContext(context.Context) ApiDefinitionInfoInvokeResponseOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoInvokeResponseArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoInvokeResponse)(nil)).Elem()
}

func (i ApiDefinitionInfoInvokeResponseArgs) ToApiDefinitionInfoInvokeResponseOutput() ApiDefinitionInfoInvokeResponseOutput {
	return i.ToApiDefinitionInfoInvokeResponseOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoInvokeResponseArgs) ToApiDefinitionInfoInvokeResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoInvokeResponseOutput)
}

func (i ApiDefinitionInfoInvokeResponseArgs) ToApiDefinitionInfoInvokeResponsePtrOutput() ApiDefinitionInfoInvokeResponsePtrOutput {
	return i.ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoInvokeResponseArgs) ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoInvokeResponseOutput).ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(ctx)
}

// ApiDefinitionInfoInvokeResponsePtrInput is an input type that accepts ApiDefinitionInfoInvokeResponseArgs, ApiDefinitionInfoInvokeResponsePtr and ApiDefinitionInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInvokeResponsePtrInput` via:
//
//          ApiDefinitionInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoInvokeResponsePtrOutput() ApiDefinitionInfoInvokeResponsePtrOutput
	ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(context.Context) ApiDefinitionInfoInvokeResponsePtrOutput
}

type apiDefinitionInfoInvokeResponsePtrType ApiDefinitionInfoInvokeResponseArgs

func ApiDefinitionInfoInvokeResponsePtr(v *ApiDefinitionInfoInvokeResponseArgs) ApiDefinitionInfoInvokeResponsePtrInput {
	return (*apiDefinitionInfoInvokeResponsePtrType)(v)
}

func (*apiDefinitionInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoInvokeResponse)(nil)).Elem()
}

func (i *apiDefinitionInfoInvokeResponsePtrType) ToApiDefinitionInfoInvokeResponsePtrOutput() ApiDefinitionInfoInvokeResponsePtrOutput {
	return i.ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoInvokeResponsePtrType) ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoInvokeResponsePtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoInvokeResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoInvokeResponseOutput) ToApiDefinitionInfoInvokeResponseOutput() ApiDefinitionInfoInvokeResponseOutput {
	return o
}

func (o ApiDefinitionInfoInvokeResponseOutput) ToApiDefinitionInfoInvokeResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponseOutput {
	return o
}

func (o ApiDefinitionInfoInvokeResponseOutput) ToApiDefinitionInfoInvokeResponsePtrOutput() ApiDefinitionInfoInvokeResponsePtrOutput {
	return o.ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoInvokeResponseOutput) ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoInvokeResponse) *ApiDefinitionInfoInvokeResponse {
		return &v
	}).(ApiDefinitionInfoInvokeResponsePtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoInvokeResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoInvokeResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoInvokeResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoInvokeResponsePtrOutput) ToApiDefinitionInfoInvokeResponsePtrOutput() ApiDefinitionInfoInvokeResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoInvokeResponsePtrOutput) ToApiDefinitionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoInvokeResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoInvokeResponsePtrOutput) Elem() ApiDefinitionInfoInvokeResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoInvokeResponse) ApiDefinitionInfoInvokeResponse { return *v }).(ApiDefinitionInfoInvokeResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoInvokeResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoResponseInput is an input type that accepts ApiDefinitionInfoResponseArgs and ApiDefinitionInfoResponseOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponseInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
type ApiDefinitionInfoResponseInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput
	ToApiDefinitionInfoResponseOutputWithContext(context.Context) ApiDefinitionInfoResponseOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return i.ToApiDefinitionInfoResponseOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput)
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoResponseArgs) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponseOutput).ToApiDefinitionInfoResponsePtrOutputWithContext(ctx)
}

// ApiDefinitionInfoResponsePtrInput is an input type that accepts ApiDefinitionInfoResponseArgs, ApiDefinitionInfoResponsePtr and ApiDefinitionInfoResponsePtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoResponsePtrInput` via:
//
//          ApiDefinitionInfoResponseArgs{...}
//
//  or:
//
//          nil
type ApiDefinitionInfoResponsePtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput
	ToApiDefinitionInfoResponsePtrOutputWithContext(context.Context) ApiDefinitionInfoResponsePtrOutput
}

type apiDefinitionInfoResponsePtrType ApiDefinitionInfoResponseArgs

func ApiDefinitionInfoResponsePtr(v *ApiDefinitionInfoResponseArgs) ApiDefinitionInfoResponsePtrInput {
	return (*apiDefinitionInfoResponsePtrType)(v)
}

func (*apiDefinitionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return i.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoResponsePtrType) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoResponsePtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o.ToApiDefinitionInfoResponsePtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *ApiDefinitionInfoResponse {
		return &v
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) Elem() ApiDefinitionInfoResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) ApiDefinitionInfoResponse { return *v }).(ApiDefinitionInfoResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfig struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigInput is an input type that accepts ApiManagementConfigArgs and ApiManagementConfigOutput values.
// You can construct a concrete instance of `ApiManagementConfigInput` via:
//
//          ApiManagementConfigArgs{...}
type ApiManagementConfigInput interface {
	pulumi.Input

	ToApiManagementConfigOutput() ApiManagementConfigOutput
	ToApiManagementConfigOutputWithContext(context.Context) ApiManagementConfigOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return i.ToApiManagementConfigOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput)
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput).ToApiManagementConfigPtrOutputWithContext(ctx)
}

// ApiManagementConfigPtrInput is an input type that accepts ApiManagementConfigArgs, ApiManagementConfigPtr and ApiManagementConfigPtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigPtrInput` via:
//
//          ApiManagementConfigArgs{...}
//
//  or:
//
//          nil
type ApiManagementConfigPtrInput interface {
	pulumi.Input

	ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput
	ToApiManagementConfigPtrOutputWithContext(context.Context) ApiManagementConfigPtrOutput
}

type apiManagementConfigPtrType ApiManagementConfigArgs

func ApiManagementConfigPtr(v *ApiManagementConfigArgs) ApiManagementConfigPtrInput {
	return (*apiManagementConfigPtrType)(v)
}

func (*apiManagementConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v ApiManagementConfig) *ApiManagementConfig {
		return &v
	}).(ApiManagementConfigPtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) Elem() ApiManagementConfigOutput {
	return o.ApplyT(func(v *ApiManagementConfig) ApiManagementConfig { return *v }).(ApiManagementConfigOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigInvokeResponse struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigInvokeResponseInput is an input type that accepts ApiManagementConfigInvokeResponseArgs and ApiManagementConfigInvokeResponseOutput values.
// You can construct a concrete instance of `ApiManagementConfigInvokeResponseInput` via:
//
//          ApiManagementConfigInvokeResponseArgs{...}
type ApiManagementConfigInvokeResponseInput interface {
	pulumi.Input

	ToApiManagementConfigInvokeResponseOutput() ApiManagementConfigInvokeResponseOutput
	ToApiManagementConfigInvokeResponseOutputWithContext(context.Context) ApiManagementConfigInvokeResponseOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigInvokeResponseArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigInvokeResponse)(nil)).Elem()
}

func (i ApiManagementConfigInvokeResponseArgs) ToApiManagementConfigInvokeResponseOutput() ApiManagementConfigInvokeResponseOutput {
	return i.ToApiManagementConfigInvokeResponseOutputWithContext(context.Background())
}

func (i ApiManagementConfigInvokeResponseArgs) ToApiManagementConfigInvokeResponseOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigInvokeResponseOutput)
}

func (i ApiManagementConfigInvokeResponseArgs) ToApiManagementConfigInvokeResponsePtrOutput() ApiManagementConfigInvokeResponsePtrOutput {
	return i.ToApiManagementConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigInvokeResponseArgs) ToApiManagementConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigInvokeResponseOutput).ToApiManagementConfigInvokeResponsePtrOutputWithContext(ctx)
}

// ApiManagementConfigInvokeResponsePtrInput is an input type that accepts ApiManagementConfigInvokeResponseArgs, ApiManagementConfigInvokeResponsePtr and ApiManagementConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigInvokeResponsePtrInput` via:
//
//          ApiManagementConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToApiManagementConfigInvokeResponsePtrOutput() ApiManagementConfigInvokeResponsePtrOutput
	ToApiManagementConfigInvokeResponsePtrOutputWithContext(context.Context) ApiManagementConfigInvokeResponsePtrOutput
}

type apiManagementConfigInvokeResponsePtrType ApiManagementConfigInvokeResponseArgs

func ApiManagementConfigInvokeResponsePtr(v *ApiManagementConfigInvokeResponseArgs) ApiManagementConfigInvokeResponsePtrInput {
	return (*apiManagementConfigInvokeResponsePtrType)(v)
}

func (*apiManagementConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigInvokeResponse)(nil)).Elem()
}

func (i *apiManagementConfigInvokeResponsePtrType) ToApiManagementConfigInvokeResponsePtrOutput() ApiManagementConfigInvokeResponsePtrOutput {
	return i.ToApiManagementConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigInvokeResponsePtrType) ToApiManagementConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigInvokeResponsePtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigInvokeResponse)(nil)).Elem()
}

func (o ApiManagementConfigInvokeResponseOutput) ToApiManagementConfigInvokeResponseOutput() ApiManagementConfigInvokeResponseOutput {
	return o
}

func (o ApiManagementConfigInvokeResponseOutput) ToApiManagementConfigInvokeResponseOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponseOutput {
	return o
}

func (o ApiManagementConfigInvokeResponseOutput) ToApiManagementConfigInvokeResponsePtrOutput() ApiManagementConfigInvokeResponsePtrOutput {
	return o.ToApiManagementConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigInvokeResponseOutput) ToApiManagementConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementConfigInvokeResponse) *ApiManagementConfigInvokeResponse {
		return &v
	}).(ApiManagementConfigInvokeResponsePtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfigInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigInvokeResponse)(nil)).Elem()
}

func (o ApiManagementConfigInvokeResponsePtrOutput) ToApiManagementConfigInvokeResponsePtrOutput() ApiManagementConfigInvokeResponsePtrOutput {
	return o
}

func (o ApiManagementConfigInvokeResponsePtrOutput) ToApiManagementConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigInvokeResponsePtrOutput {
	return o
}

func (o ApiManagementConfigInvokeResponsePtrOutput) Elem() ApiManagementConfigInvokeResponseOutput {
	return o.ApplyT(func(v *ApiManagementConfigInvokeResponse) ApiManagementConfigInvokeResponse { return *v }).(ApiManagementConfigInvokeResponseOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponse struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigResponseInput is an input type that accepts ApiManagementConfigResponseArgs and ApiManagementConfigResponseOutput values.
// You can construct a concrete instance of `ApiManagementConfigResponseInput` via:
//
//          ApiManagementConfigResponseArgs{...}
type ApiManagementConfigResponseInput interface {
	pulumi.Input

	ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput
	ToApiManagementConfigResponseOutputWithContext(context.Context) ApiManagementConfigResponseOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponseArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigResponse)(nil)).Elem()
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput {
	return i.ToApiManagementConfigResponseOutputWithContext(context.Background())
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponseOutputWithContext(ctx context.Context) ApiManagementConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponseOutput)
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return i.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigResponseArgs) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponseOutput).ToApiManagementConfigResponsePtrOutputWithContext(ctx)
}

// ApiManagementConfigResponsePtrInput is an input type that accepts ApiManagementConfigResponseArgs, ApiManagementConfigResponsePtr and ApiManagementConfigResponsePtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigResponsePtrInput` via:
//
//          ApiManagementConfigResponseArgs{...}
//
//  or:
//
//          nil
type ApiManagementConfigResponsePtrInput interface {
	pulumi.Input

	ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput
	ToApiManagementConfigResponsePtrOutputWithContext(context.Context) ApiManagementConfigResponsePtrOutput
}

type apiManagementConfigResponsePtrType ApiManagementConfigResponseArgs

func ApiManagementConfigResponsePtr(v *ApiManagementConfigResponseArgs) ApiManagementConfigResponsePtrInput {
	return (*apiManagementConfigResponsePtrType)(v)
}

func (*apiManagementConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigResponse)(nil)).Elem()
}

func (i *apiManagementConfigResponsePtrType) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return i.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigResponsePtrType) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigResponsePtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput {
	return o
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutputWithContext(ctx context.Context) ApiManagementConfigResponseOutput {
	return o
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return o.ToApiManagementConfigResponsePtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v ApiManagementConfigResponse) *ApiManagementConfigResponse {
		return &v
	}).(ApiManagementConfigResponsePtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfigResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) Elem() ApiManagementConfigResponseOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) ApiManagementConfigResponse { return *v }).(ApiManagementConfigResponseOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfig struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage *AzureBlobStorageApplicationLogsConfig `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage *AzureTableStorageApplicationLogsConfig `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem *FileSystemApplicationLogsConfig `pulumi:"fileSystem"`
}

// ApplicationLogsConfigInput is an input type that accepts ApplicationLogsConfigArgs and ApplicationLogsConfigOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigInput` via:
//
//          ApplicationLogsConfigArgs{...}
type ApplicationLogsConfigInput interface {
	pulumi.Input

	ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput
	ToApplicationLogsConfigOutputWithContext(context.Context) ApplicationLogsConfigOutput
}

// Application logs configuration.
type ApplicationLogsConfigArgs struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage AzureBlobStorageApplicationLogsConfigPtrInput `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage AzureTableStorageApplicationLogsConfigPtrInput `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem FileSystemApplicationLogsConfigPtrInput `pulumi:"fileSystem"`
}

func (ApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfig)(nil)).Elem()
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput {
	return i.ToApplicationLogsConfigOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigOutputWithContext(ctx context.Context) ApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigOutput)
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return i.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigOutput).ToApplicationLogsConfigPtrOutputWithContext(ctx)
}

// ApplicationLogsConfigPtrInput is an input type that accepts ApplicationLogsConfigArgs, ApplicationLogsConfigPtr and ApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigPtrInput` via:
//
//          ApplicationLogsConfigArgs{...}
//
//  or:
//
//          nil
type ApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput
	ToApplicationLogsConfigPtrOutputWithContext(context.Context) ApplicationLogsConfigPtrOutput
}

type applicationLogsConfigPtrType ApplicationLogsConfigArgs

func ApplicationLogsConfigPtr(v *ApplicationLogsConfigArgs) ApplicationLogsConfigPtrInput {
	return (*applicationLogsConfigPtrType)(v)
}

func (*applicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfig)(nil)).Elem()
}

func (i *applicationLogsConfigPtrType) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return i.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *applicationLogsConfigPtrType) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigPtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfig)(nil)).Elem()
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput {
	return o
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigOutputWithContext(ctx context.Context) ApplicationLogsConfigOutput {
	return o
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return o.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *ApplicationLogsConfig {
		return &v
	}).(ApplicationLogsConfigPtrOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig { return v.AzureBlobStorage }).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig { return v.AzureTableStorage }).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigOutput) FileSystem() FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *FileSystemApplicationLogsConfig { return v.FileSystem }).(FileSystemApplicationLogsConfigPtrOutput)
}

type ApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfig)(nil)).Elem()
}

func (o ApplicationLogsConfigPtrOutput) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return o
}

func (o ApplicationLogsConfigPtrOutput) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return o
}

func (o ApplicationLogsConfigPtrOutput) Elem() ApplicationLogsConfigOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) ApplicationLogsConfig { return *v }).(ApplicationLogsConfigOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigPtrOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigPtrOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigPtrOutput) FileSystem() FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *FileSystemApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemApplicationLogsConfigPtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigInvokeResponse struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage *AzureBlobStorageApplicationLogsConfigInvokeResponse `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage *AzureTableStorageApplicationLogsConfigInvokeResponse `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem *FileSystemApplicationLogsConfigInvokeResponse `pulumi:"fileSystem"`
}

// ApplicationLogsConfigInvokeResponseInput is an input type that accepts ApplicationLogsConfigInvokeResponseArgs and ApplicationLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigInvokeResponseInput` via:
//
//          ApplicationLogsConfigInvokeResponseArgs{...}
type ApplicationLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToApplicationLogsConfigInvokeResponseOutput() ApplicationLogsConfigInvokeResponseOutput
	ToApplicationLogsConfigInvokeResponseOutputWithContext(context.Context) ApplicationLogsConfigInvokeResponseOutput
}

// Application logs configuration.
type ApplicationLogsConfigInvokeResponseArgs struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage AzureBlobStorageApplicationLogsConfigInvokeResponsePtrInput `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage AzureTableStorageApplicationLogsConfigInvokeResponsePtrInput `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem FileSystemApplicationLogsConfigInvokeResponsePtrInput `pulumi:"fileSystem"`
}

func (ApplicationLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i ApplicationLogsConfigInvokeResponseArgs) ToApplicationLogsConfigInvokeResponseOutput() ApplicationLogsConfigInvokeResponseOutput {
	return i.ToApplicationLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigInvokeResponseArgs) ToApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) ApplicationLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigInvokeResponseOutput)
}

// Application logs configuration.
type ApplicationLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o ApplicationLogsConfigInvokeResponseOutput) ToApplicationLogsConfigInvokeResponseOutput() ApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o ApplicationLogsConfigInvokeResponseOutput) ToApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) ApplicationLogsConfigInvokeResponseOutput {
	return o
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigInvokeResponseOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigInvokeResponse) *AzureBlobStorageApplicationLogsConfigInvokeResponse {
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigInvokeResponseOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigInvokeResponse) *AzureTableStorageApplicationLogsConfigInvokeResponse {
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigInvokeResponseOutput) FileSystem() FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigInvokeResponse) *FileSystemApplicationLogsConfigInvokeResponse {
		return v.FileSystem
	}).(FileSystemApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigResponse struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage *AzureBlobStorageApplicationLogsConfigResponse `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage *AzureTableStorageApplicationLogsConfigResponse `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem *FileSystemApplicationLogsConfigResponse `pulumi:"fileSystem"`
}

// ApplicationLogsConfigResponseInput is an input type that accepts ApplicationLogsConfigResponseArgs and ApplicationLogsConfigResponseOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigResponseInput` via:
//
//          ApplicationLogsConfigResponseArgs{...}
type ApplicationLogsConfigResponseInput interface {
	pulumi.Input

	ToApplicationLogsConfigResponseOutput() ApplicationLogsConfigResponseOutput
	ToApplicationLogsConfigResponseOutputWithContext(context.Context) ApplicationLogsConfigResponseOutput
}

// Application logs configuration.
type ApplicationLogsConfigResponseArgs struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage AzureBlobStorageApplicationLogsConfigResponsePtrInput `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage AzureTableStorageApplicationLogsConfigResponsePtrInput `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem FileSystemApplicationLogsConfigResponsePtrInput `pulumi:"fileSystem"`
}

func (ApplicationLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfigResponse)(nil)).Elem()
}

func (i ApplicationLogsConfigResponseArgs) ToApplicationLogsConfigResponseOutput() ApplicationLogsConfigResponseOutput {
	return i.ToApplicationLogsConfigResponseOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigResponseArgs) ToApplicationLogsConfigResponseOutputWithContext(ctx context.Context) ApplicationLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigResponseOutput)
}

func (i ApplicationLogsConfigResponseArgs) ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput {
	return i.ToApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigResponseArgs) ToApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) ApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigResponseOutput).ToApplicationLogsConfigResponsePtrOutputWithContext(ctx)
}

// ApplicationLogsConfigResponsePtrInput is an input type that accepts ApplicationLogsConfigResponseArgs, ApplicationLogsConfigResponsePtr and ApplicationLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigResponsePtrInput` via:
//
//          ApplicationLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput
	ToApplicationLogsConfigResponsePtrOutputWithContext(context.Context) ApplicationLogsConfigResponsePtrOutput
}

type applicationLogsConfigResponsePtrType ApplicationLogsConfigResponseArgs

func ApplicationLogsConfigResponsePtr(v *ApplicationLogsConfigResponseArgs) ApplicationLogsConfigResponsePtrInput {
	return (*applicationLogsConfigResponsePtrType)(v)
}

func (*applicationLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfigResponse)(nil)).Elem()
}

func (i *applicationLogsConfigResponsePtrType) ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput {
	return i.ToApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *applicationLogsConfigResponsePtrType) ToApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) ApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigResponsePtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfigResponse)(nil)).Elem()
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponseOutput() ApplicationLogsConfigResponseOutput {
	return o
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponseOutputWithContext(ctx context.Context) ApplicationLogsConfigResponseOutput {
	return o
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput {
	return o.ToApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) ApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *ApplicationLogsConfigResponse {
		return &v
	}).(ApplicationLogsConfigResponsePtrOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigResponseOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *AzureBlobStorageApplicationLogsConfigResponse {
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigResponseOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *AzureTableStorageApplicationLogsConfigResponse {
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigResponseOutput) FileSystem() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *FileSystemApplicationLogsConfigResponse { return v.FileSystem }).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

type ApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfigResponse)(nil)).Elem()
}

func (o ApplicationLogsConfigResponsePtrOutput) ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o ApplicationLogsConfigResponsePtrOutput) ToApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) ApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o ApplicationLogsConfigResponsePtrOutput) Elem() ApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) ApplicationLogsConfigResponse { return *v }).(ApplicationLogsConfigResponseOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigResponsePtrOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *AzureBlobStorageApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigResponsePtrOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *AzureTableStorageApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigResponsePtrOutput) FileSystem() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *FileSystemApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperInvokeResponse struct {
	Id string `pulumi:"id"`
}

// ArmIdWrapperInvokeResponseInput is an input type that accepts ArmIdWrapperInvokeResponseArgs and ArmIdWrapperInvokeResponseOutput values.
// You can construct a concrete instance of `ArmIdWrapperInvokeResponseInput` via:
//
//          ArmIdWrapperInvokeResponseArgs{...}
type ArmIdWrapperInvokeResponseInput interface {
	pulumi.Input

	ToArmIdWrapperInvokeResponseOutput() ArmIdWrapperInvokeResponseOutput
	ToArmIdWrapperInvokeResponseOutputWithContext(context.Context) ArmIdWrapperInvokeResponseOutput
}

// A wrapper for an ARM resource id
type ArmIdWrapperInvokeResponseArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (ArmIdWrapperInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperInvokeResponse)(nil)).Elem()
}

func (i ArmIdWrapperInvokeResponseArgs) ToArmIdWrapperInvokeResponseOutput() ArmIdWrapperInvokeResponseOutput {
	return i.ToArmIdWrapperInvokeResponseOutputWithContext(context.Background())
}

func (i ArmIdWrapperInvokeResponseArgs) ToArmIdWrapperInvokeResponseOutputWithContext(ctx context.Context) ArmIdWrapperInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperInvokeResponseOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperInvokeResponseOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperInvokeResponse)(nil)).Elem()
}

func (o ArmIdWrapperInvokeResponseOutput) ToArmIdWrapperInvokeResponseOutput() ArmIdWrapperInvokeResponseOutput {
	return o
}

func (o ArmIdWrapperInvokeResponseOutput) ToArmIdWrapperInvokeResponseOutputWithContext(ctx context.Context) ArmIdWrapperInvokeResponseOutput {
	return o
}

func (o ArmIdWrapperInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdWrapperInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponse struct {
	Id string `pulumi:"id"`
}

// ArmIdWrapperResponseInput is an input type that accepts ArmIdWrapperResponseArgs and ArmIdWrapperResponseOutput values.
// You can construct a concrete instance of `ArmIdWrapperResponseInput` via:
//
//          ArmIdWrapperResponseArgs{...}
type ArmIdWrapperResponseInput interface {
	pulumi.Input

	ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput
	ToArmIdWrapperResponseOutputWithContext(context.Context) ArmIdWrapperResponseOutput
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponseArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (ArmIdWrapperResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperResponse)(nil)).Elem()
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput {
	return i.ToArmIdWrapperResponseOutputWithContext(context.Background())
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponseOutputWithContext(ctx context.Context) ArmIdWrapperResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponseOutput)
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return i.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (i ArmIdWrapperResponseArgs) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponseOutput).ToArmIdWrapperResponsePtrOutputWithContext(ctx)
}

// ArmIdWrapperResponsePtrInput is an input type that accepts ArmIdWrapperResponseArgs, ArmIdWrapperResponsePtr and ArmIdWrapperResponsePtrOutput values.
// You can construct a concrete instance of `ArmIdWrapperResponsePtrInput` via:
//
//          ArmIdWrapperResponseArgs{...}
//
//  or:
//
//          nil
type ArmIdWrapperResponsePtrInput interface {
	pulumi.Input

	ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput
	ToArmIdWrapperResponsePtrOutputWithContext(context.Context) ArmIdWrapperResponsePtrOutput
}

type armIdWrapperResponsePtrType ArmIdWrapperResponseArgs

func ArmIdWrapperResponsePtr(v *ArmIdWrapperResponseArgs) ArmIdWrapperResponsePtrInput {
	return (*armIdWrapperResponsePtrType)(v)
}

func (*armIdWrapperResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdWrapperResponse)(nil)).Elem()
}

func (i *armIdWrapperResponsePtrType) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return i.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (i *armIdWrapperResponsePtrType) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdWrapperResponsePtrOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponseOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutputWithContext(ctx context.Context) ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return o.ToArmIdWrapperResponsePtrOutputWithContext(context.Background())
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return o.ApplyT(func(v ArmIdWrapperResponse) *ArmIdWrapperResponse {
		return &v
	}).(ArmIdWrapperResponsePtrOutput)
}
func (o ArmIdWrapperResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdWrapperResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ArmIdWrapperResponsePtrOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) Elem() ArmIdWrapperResponseOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) ArmIdWrapperResponse { return *v }).(ArmIdWrapperResponseOutput)
}

func (o ArmIdWrapperResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActions struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomAction `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInput is an input type that accepts AutoHealActionsArgs and AutoHealActionsOutput values.
// You can construct a concrete instance of `AutoHealActionsInput` via:
//
//          AutoHealActionsArgs{...}
type AutoHealActionsInput interface {
	pulumi.Input

	ToAutoHealActionsOutput() AutoHealActionsOutput
	ToAutoHealActionsOutputWithContext(context.Context) AutoHealActionsOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsArgs struct {
	// Predefined action to be taken.
	ActionType AutoHealActionType `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionPtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return i.ToAutoHealActionsOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput)
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput).ToAutoHealActionsPtrOutputWithContext(ctx)
}

// AutoHealActionsPtrInput is an input type that accepts AutoHealActionsArgs, AutoHealActionsPtr and AutoHealActionsPtrOutput values.
// You can construct a concrete instance of `AutoHealActionsPtrInput` via:
//
//          AutoHealActionsArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsPtrInput interface {
	pulumi.Input

	ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput
	ToAutoHealActionsPtrOutputWithContext(context.Context) AutoHealActionsPtrOutput
}

type autoHealActionsPtrType AutoHealActionsArgs

func AutoHealActionsPtr(v *AutoHealActionsArgs) AutoHealActionsPtrInput {
	return (*autoHealActionsPtrType)(v)
}

func (*autoHealActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsOutput struct{ *pulumi.OutputState }

func (AutoHealActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealActions {
		return &v
	}).(AutoHealActionsPtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealCustomAction { return v.CustomAction }).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsPtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) Elem() AutoHealActionsOutput {
	return o.ApplyT(func(v *AutoHealActions) AutoHealActions { return *v }).(AutoHealActionsOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsPtrOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsPtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsInvokeResponse struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomActionInvokeResponse `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInvokeResponseInput is an input type that accepts AutoHealActionsInvokeResponseArgs and AutoHealActionsInvokeResponseOutput values.
// You can construct a concrete instance of `AutoHealActionsInvokeResponseInput` via:
//
//          AutoHealActionsInvokeResponseArgs{...}
type AutoHealActionsInvokeResponseInput interface {
	pulumi.Input

	ToAutoHealActionsInvokeResponseOutput() AutoHealActionsInvokeResponseOutput
	ToAutoHealActionsInvokeResponseOutputWithContext(context.Context) AutoHealActionsInvokeResponseOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsInvokeResponseArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionInvokeResponsePtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsInvokeResponse)(nil)).Elem()
}

func (i AutoHealActionsInvokeResponseArgs) ToAutoHealActionsInvokeResponseOutput() AutoHealActionsInvokeResponseOutput {
	return i.ToAutoHealActionsInvokeResponseOutputWithContext(context.Background())
}

func (i AutoHealActionsInvokeResponseArgs) ToAutoHealActionsInvokeResponseOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsInvokeResponseOutput)
}

func (i AutoHealActionsInvokeResponseArgs) ToAutoHealActionsInvokeResponsePtrOutput() AutoHealActionsInvokeResponsePtrOutput {
	return i.ToAutoHealActionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealActionsInvokeResponseArgs) ToAutoHealActionsInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsInvokeResponseOutput).ToAutoHealActionsInvokeResponsePtrOutputWithContext(ctx)
}

// AutoHealActionsInvokeResponsePtrInput is an input type that accepts AutoHealActionsInvokeResponseArgs, AutoHealActionsInvokeResponsePtr and AutoHealActionsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealActionsInvokeResponsePtrInput` via:
//
//          AutoHealActionsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsInvokeResponsePtrInput interface {
	pulumi.Input

	ToAutoHealActionsInvokeResponsePtrOutput() AutoHealActionsInvokeResponsePtrOutput
	ToAutoHealActionsInvokeResponsePtrOutputWithContext(context.Context) AutoHealActionsInvokeResponsePtrOutput
}

type autoHealActionsInvokeResponsePtrType AutoHealActionsInvokeResponseArgs

func AutoHealActionsInvokeResponsePtr(v *AutoHealActionsInvokeResponseArgs) AutoHealActionsInvokeResponsePtrInput {
	return (*autoHealActionsInvokeResponsePtrType)(v)
}

func (*autoHealActionsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsInvokeResponse)(nil)).Elem()
}

func (i *autoHealActionsInvokeResponsePtrType) ToAutoHealActionsInvokeResponsePtrOutput() AutoHealActionsInvokeResponsePtrOutput {
	return i.ToAutoHealActionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealActionsInvokeResponsePtrType) ToAutoHealActionsInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsInvokeResponsePtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsInvokeResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsInvokeResponse)(nil)).Elem()
}

func (o AutoHealActionsInvokeResponseOutput) ToAutoHealActionsInvokeResponseOutput() AutoHealActionsInvokeResponseOutput {
	return o
}

func (o AutoHealActionsInvokeResponseOutput) ToAutoHealActionsInvokeResponseOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponseOutput {
	return o
}

func (o AutoHealActionsInvokeResponseOutput) ToAutoHealActionsInvokeResponsePtrOutput() AutoHealActionsInvokeResponsePtrOutput {
	return o.ToAutoHealActionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealActionsInvokeResponseOutput) ToAutoHealActionsInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsInvokeResponse) *AutoHealActionsInvokeResponse {
		return &v
	}).(AutoHealActionsInvokeResponsePtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsInvokeResponseOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsInvokeResponse) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsInvokeResponseOutput) CustomAction() AutoHealCustomActionInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsInvokeResponse) *AutoHealCustomActionInvokeResponse { return v.CustomAction }).(AutoHealCustomActionInvokeResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsInvokeResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsInvokeResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsInvokeResponse)(nil)).Elem()
}

func (o AutoHealActionsInvokeResponsePtrOutput) ToAutoHealActionsInvokeResponsePtrOutput() AutoHealActionsInvokeResponsePtrOutput {
	return o
}

func (o AutoHealActionsInvokeResponsePtrOutput) ToAutoHealActionsInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsInvokeResponsePtrOutput {
	return o
}

func (o AutoHealActionsInvokeResponsePtrOutput) Elem() AutoHealActionsInvokeResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsInvokeResponse) AutoHealActionsInvokeResponse { return *v }).(AutoHealActionsInvokeResponseOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsInvokeResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsInvokeResponsePtrOutput) CustomAction() AutoHealCustomActionInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsInvokeResponse) *AutoHealCustomActionInvokeResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionInvokeResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsInvokeResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponse struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomActionResponse `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsResponseInput is an input type that accepts AutoHealActionsResponseArgs and AutoHealActionsResponseOutput values.
// You can construct a concrete instance of `AutoHealActionsResponseInput` via:
//
//          AutoHealActionsResponseArgs{...}
type AutoHealActionsResponseInput interface {
	pulumi.Input

	ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput
	ToAutoHealActionsResponseOutputWithContext(context.Context) AutoHealActionsResponseOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseArgs struct {
	// Predefined action to be taken.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionResponsePtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return i.ToAutoHealActionsResponseOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput)
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealActionsResponseArgs) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponseOutput).ToAutoHealActionsResponsePtrOutputWithContext(ctx)
}

// AutoHealActionsResponsePtrInput is an input type that accepts AutoHealActionsResponseArgs, AutoHealActionsResponsePtr and AutoHealActionsResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealActionsResponsePtrInput` via:
//
//          AutoHealActionsResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealActionsResponsePtrInput interface {
	pulumi.Input

	ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput
	ToAutoHealActionsResponsePtrOutputWithContext(context.Context) AutoHealActionsResponsePtrOutput
}

type autoHealActionsResponsePtrType AutoHealActionsResponseArgs

func AutoHealActionsResponsePtr(v *AutoHealActionsResponseArgs) AutoHealActionsResponsePtrInput {
	return (*autoHealActionsResponsePtrType)(v)
}

func (*autoHealActionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return i.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealActionsResponsePtrType) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsResponsePtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o.ToAutoHealActionsResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealActionsResponse {
		return &v
	}).(AutoHealActionsResponsePtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponseOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponseOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealCustomActionResponse { return v.CustomAction }).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) Elem() AutoHealActionsResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) AutoHealActionsResponse { return *v }).(AutoHealActionsResponseOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponsePtrOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *AutoHealCustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomAction struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInput is an input type that accepts AutoHealCustomActionArgs and AutoHealCustomActionOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInput` via:
//
//          AutoHealCustomActionArgs{...}
type AutoHealCustomActionInput interface {
	pulumi.Input

	ToAutoHealCustomActionOutput() AutoHealCustomActionOutput
	ToAutoHealCustomActionOutputWithContext(context.Context) AutoHealCustomActionOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return i.ToAutoHealCustomActionOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput)
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput).ToAutoHealCustomActionPtrOutputWithContext(ctx)
}

// AutoHealCustomActionPtrInput is an input type that accepts AutoHealCustomActionArgs, AutoHealCustomActionPtr and AutoHealCustomActionPtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionPtrInput` via:
//
//          AutoHealCustomActionArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionPtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput
	ToAutoHealCustomActionPtrOutputWithContext(context.Context) AutoHealCustomActionPtrOutput
}

type autoHealCustomActionPtrType AutoHealCustomActionArgs

func AutoHealCustomActionPtr(v *AutoHealCustomActionArgs) AutoHealCustomActionPtrInput {
	return (*autoHealCustomActionPtrType)(v)
}

func (*autoHealCustomActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *AutoHealCustomAction {
		return &v
	}).(AutoHealCustomActionPtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionPtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) Elem() AutoHealCustomActionOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) AutoHealCustomAction { return *v }).(AutoHealCustomActionOutput)
}

// Executable to be run.
func (o AutoHealCustomActionPtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionPtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionInvokeResponse struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInvokeResponseInput is an input type that accepts AutoHealCustomActionInvokeResponseArgs and AutoHealCustomActionInvokeResponseOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInvokeResponseInput` via:
//
//          AutoHealCustomActionInvokeResponseArgs{...}
type AutoHealCustomActionInvokeResponseInput interface {
	pulumi.Input

	ToAutoHealCustomActionInvokeResponseOutput() AutoHealCustomActionInvokeResponseOutput
	ToAutoHealCustomActionInvokeResponseOutputWithContext(context.Context) AutoHealCustomActionInvokeResponseOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionInvokeResponseArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionInvokeResponse)(nil)).Elem()
}

func (i AutoHealCustomActionInvokeResponseArgs) ToAutoHealCustomActionInvokeResponseOutput() AutoHealCustomActionInvokeResponseOutput {
	return i.ToAutoHealCustomActionInvokeResponseOutputWithContext(context.Background())
}

func (i AutoHealCustomActionInvokeResponseArgs) ToAutoHealCustomActionInvokeResponseOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionInvokeResponseOutput)
}

func (i AutoHealCustomActionInvokeResponseArgs) ToAutoHealCustomActionInvokeResponsePtrOutput() AutoHealCustomActionInvokeResponsePtrOutput {
	return i.ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionInvokeResponseArgs) ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionInvokeResponseOutput).ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(ctx)
}

// AutoHealCustomActionInvokeResponsePtrInput is an input type that accepts AutoHealCustomActionInvokeResponseArgs, AutoHealCustomActionInvokeResponsePtr and AutoHealCustomActionInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInvokeResponsePtrInput` via:
//
//          AutoHealCustomActionInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionInvokeResponsePtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionInvokeResponsePtrOutput() AutoHealCustomActionInvokeResponsePtrOutput
	ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(context.Context) AutoHealCustomActionInvokeResponsePtrOutput
}

type autoHealCustomActionInvokeResponsePtrType AutoHealCustomActionInvokeResponseArgs

func AutoHealCustomActionInvokeResponsePtr(v *AutoHealCustomActionInvokeResponseArgs) AutoHealCustomActionInvokeResponsePtrInput {
	return (*autoHealCustomActionInvokeResponsePtrType)(v)
}

func (*autoHealCustomActionInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionInvokeResponse)(nil)).Elem()
}

func (i *autoHealCustomActionInvokeResponsePtrType) ToAutoHealCustomActionInvokeResponsePtrOutput() AutoHealCustomActionInvokeResponsePtrOutput {
	return i.ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionInvokeResponsePtrType) ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionInvokeResponsePtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionInvokeResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionInvokeResponse)(nil)).Elem()
}

func (o AutoHealCustomActionInvokeResponseOutput) ToAutoHealCustomActionInvokeResponseOutput() AutoHealCustomActionInvokeResponseOutput {
	return o
}

func (o AutoHealCustomActionInvokeResponseOutput) ToAutoHealCustomActionInvokeResponseOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponseOutput {
	return o
}

func (o AutoHealCustomActionInvokeResponseOutput) ToAutoHealCustomActionInvokeResponsePtrOutput() AutoHealCustomActionInvokeResponsePtrOutput {
	return o.ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionInvokeResponseOutput) ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionInvokeResponse) *AutoHealCustomActionInvokeResponse {
		return &v
	}).(AutoHealCustomActionInvokeResponsePtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionInvokeResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionInvokeResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionInvokeResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionInvokeResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionInvokeResponse)(nil)).Elem()
}

func (o AutoHealCustomActionInvokeResponsePtrOutput) ToAutoHealCustomActionInvokeResponsePtrOutput() AutoHealCustomActionInvokeResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionInvokeResponsePtrOutput) ToAutoHealCustomActionInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionInvokeResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionInvokeResponsePtrOutput) Elem() AutoHealCustomActionInvokeResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionInvokeResponse) AutoHealCustomActionInvokeResponse { return *v }).(AutoHealCustomActionInvokeResponseOutput)
}

// Executable to be run.
func (o AutoHealCustomActionInvokeResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionInvokeResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponse struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionResponseInput is an input type that accepts AutoHealCustomActionResponseArgs and AutoHealCustomActionResponseOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponseInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
type AutoHealCustomActionResponseInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput
	ToAutoHealCustomActionResponseOutputWithContext(context.Context) AutoHealCustomActionResponseOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return i.ToAutoHealCustomActionResponseOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput)
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionResponseArgs) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponseOutput).ToAutoHealCustomActionResponsePtrOutputWithContext(ctx)
}

// AutoHealCustomActionResponsePtrInput is an input type that accepts AutoHealCustomActionResponseArgs, AutoHealCustomActionResponsePtr and AutoHealCustomActionResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionResponsePtrInput` via:
//
//          AutoHealCustomActionResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealCustomActionResponsePtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput
	ToAutoHealCustomActionResponsePtrOutputWithContext(context.Context) AutoHealCustomActionResponsePtrOutput
}

type autoHealCustomActionResponsePtrType AutoHealCustomActionResponseArgs

func AutoHealCustomActionResponsePtr(v *AutoHealCustomActionResponseArgs) AutoHealCustomActionResponsePtrInput {
	return (*autoHealCustomActionResponsePtrType)(v)
}

func (*autoHealCustomActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return i.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionResponsePtrType) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionResponsePtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o.ToAutoHealCustomActionResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *AutoHealCustomActionResponse {
		return &v
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) Elem() AutoHealCustomActionResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) AutoHealCustomActionResponse { return *v }).(AutoHealCustomActionResponseOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRules struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActions `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggers `pulumi:"triggers"`
}

// AutoHealRulesInput is an input type that accepts AutoHealRulesArgs and AutoHealRulesOutput values.
// You can construct a concrete instance of `AutoHealRulesInput` via:
//
//          AutoHealRulesArgs{...}
type AutoHealRulesInput interface {
	pulumi.Input

	ToAutoHealRulesOutput() AutoHealRulesOutput
	ToAutoHealRulesOutputWithContext(context.Context) AutoHealRulesOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsPtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersPtrInput `pulumi:"triggers"`
}

func (AutoHealRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return i.ToAutoHealRulesOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput)
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput).ToAutoHealRulesPtrOutputWithContext(ctx)
}

// AutoHealRulesPtrInput is an input type that accepts AutoHealRulesArgs, AutoHealRulesPtr and AutoHealRulesPtrOutput values.
// You can construct a concrete instance of `AutoHealRulesPtrInput` via:
//
//          AutoHealRulesArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesPtrInput interface {
	pulumi.Input

	ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput
	ToAutoHealRulesPtrOutputWithContext(context.Context) AutoHealRulesPtrOutput
}

type autoHealRulesPtrType AutoHealRulesArgs

func AutoHealRulesPtr(v *AutoHealRulesArgs) AutoHealRulesPtrInput {
	return (*autoHealRulesPtrType)(v)
}

func (*autoHealRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesOutput struct{ *pulumi.OutputState }

func (AutoHealRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealRules {
		return &v
	}).(AutoHealRulesPtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealActions { return v.Actions }).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealTriggers { return v.Triggers }).(AutoHealTriggersPtrOutput)
}

type AutoHealRulesPtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) Elem() AutoHealRulesOutput {
	return o.ApplyT(func(v *AutoHealRules) AutoHealRules { return *v }).(AutoHealRulesOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesPtrOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealActions {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesPtrOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealTriggers {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesInvokeResponse struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActionsInvokeResponse `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggersInvokeResponse `pulumi:"triggers"`
}

// AutoHealRulesInvokeResponseInput is an input type that accepts AutoHealRulesInvokeResponseArgs and AutoHealRulesInvokeResponseOutput values.
// You can construct a concrete instance of `AutoHealRulesInvokeResponseInput` via:
//
//          AutoHealRulesInvokeResponseArgs{...}
type AutoHealRulesInvokeResponseInput interface {
	pulumi.Input

	ToAutoHealRulesInvokeResponseOutput() AutoHealRulesInvokeResponseOutput
	ToAutoHealRulesInvokeResponseOutputWithContext(context.Context) AutoHealRulesInvokeResponseOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesInvokeResponseArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsInvokeResponsePtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersInvokeResponsePtrInput `pulumi:"triggers"`
}

func (AutoHealRulesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesInvokeResponse)(nil)).Elem()
}

func (i AutoHealRulesInvokeResponseArgs) ToAutoHealRulesInvokeResponseOutput() AutoHealRulesInvokeResponseOutput {
	return i.ToAutoHealRulesInvokeResponseOutputWithContext(context.Background())
}

func (i AutoHealRulesInvokeResponseArgs) ToAutoHealRulesInvokeResponseOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesInvokeResponseOutput)
}

func (i AutoHealRulesInvokeResponseArgs) ToAutoHealRulesInvokeResponsePtrOutput() AutoHealRulesInvokeResponsePtrOutput {
	return i.ToAutoHealRulesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealRulesInvokeResponseArgs) ToAutoHealRulesInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesInvokeResponseOutput).ToAutoHealRulesInvokeResponsePtrOutputWithContext(ctx)
}

// AutoHealRulesInvokeResponsePtrInput is an input type that accepts AutoHealRulesInvokeResponseArgs, AutoHealRulesInvokeResponsePtr and AutoHealRulesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealRulesInvokeResponsePtrInput` via:
//
//          AutoHealRulesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesInvokeResponsePtrInput interface {
	pulumi.Input

	ToAutoHealRulesInvokeResponsePtrOutput() AutoHealRulesInvokeResponsePtrOutput
	ToAutoHealRulesInvokeResponsePtrOutputWithContext(context.Context) AutoHealRulesInvokeResponsePtrOutput
}

type autoHealRulesInvokeResponsePtrType AutoHealRulesInvokeResponseArgs

func AutoHealRulesInvokeResponsePtr(v *AutoHealRulesInvokeResponseArgs) AutoHealRulesInvokeResponsePtrInput {
	return (*autoHealRulesInvokeResponsePtrType)(v)
}

func (*autoHealRulesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesInvokeResponse)(nil)).Elem()
}

func (i *autoHealRulesInvokeResponsePtrType) ToAutoHealRulesInvokeResponsePtrOutput() AutoHealRulesInvokeResponsePtrOutput {
	return i.ToAutoHealRulesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealRulesInvokeResponsePtrType) ToAutoHealRulesInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesInvokeResponsePtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesInvokeResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesInvokeResponse)(nil)).Elem()
}

func (o AutoHealRulesInvokeResponseOutput) ToAutoHealRulesInvokeResponseOutput() AutoHealRulesInvokeResponseOutput {
	return o
}

func (o AutoHealRulesInvokeResponseOutput) ToAutoHealRulesInvokeResponseOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponseOutput {
	return o
}

func (o AutoHealRulesInvokeResponseOutput) ToAutoHealRulesInvokeResponsePtrOutput() AutoHealRulesInvokeResponsePtrOutput {
	return o.ToAutoHealRulesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealRulesInvokeResponseOutput) ToAutoHealRulesInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesInvokeResponse) *AutoHealRulesInvokeResponse {
		return &v
	}).(AutoHealRulesInvokeResponsePtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesInvokeResponseOutput) Actions() AutoHealActionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesInvokeResponse) *AutoHealActionsInvokeResponse { return v.Actions }).(AutoHealActionsInvokeResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesInvokeResponseOutput) Triggers() AutoHealTriggersInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesInvokeResponse) *AutoHealTriggersInvokeResponse { return v.Triggers }).(AutoHealTriggersInvokeResponsePtrOutput)
}

type AutoHealRulesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesInvokeResponse)(nil)).Elem()
}

func (o AutoHealRulesInvokeResponsePtrOutput) ToAutoHealRulesInvokeResponsePtrOutput() AutoHealRulesInvokeResponsePtrOutput {
	return o
}

func (o AutoHealRulesInvokeResponsePtrOutput) ToAutoHealRulesInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesInvokeResponsePtrOutput {
	return o
}

func (o AutoHealRulesInvokeResponsePtrOutput) Elem() AutoHealRulesInvokeResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesInvokeResponse) AutoHealRulesInvokeResponse { return *v }).(AutoHealRulesInvokeResponseOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesInvokeResponsePtrOutput) Actions() AutoHealActionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesInvokeResponse) *AutoHealActionsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsInvokeResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesInvokeResponsePtrOutput) Triggers() AutoHealTriggersInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesInvokeResponse) *AutoHealTriggersInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersInvokeResponsePtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponse struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActionsResponse `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggersResponse `pulumi:"triggers"`
}

// AutoHealRulesResponseInput is an input type that accepts AutoHealRulesResponseArgs and AutoHealRulesResponseOutput values.
// You can construct a concrete instance of `AutoHealRulesResponseInput` via:
//
//          AutoHealRulesResponseArgs{...}
type AutoHealRulesResponseInput interface {
	pulumi.Input

	ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput
	ToAutoHealRulesResponseOutputWithContext(context.Context) AutoHealRulesResponseOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsResponsePtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersResponsePtrInput `pulumi:"triggers"`
}

func (AutoHealRulesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return i.ToAutoHealRulesResponseOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput)
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealRulesResponseArgs) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponseOutput).ToAutoHealRulesResponsePtrOutputWithContext(ctx)
}

// AutoHealRulesResponsePtrInput is an input type that accepts AutoHealRulesResponseArgs, AutoHealRulesResponsePtr and AutoHealRulesResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealRulesResponsePtrInput` via:
//
//          AutoHealRulesResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealRulesResponsePtrInput interface {
	pulumi.Input

	ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput
	ToAutoHealRulesResponsePtrOutputWithContext(context.Context) AutoHealRulesResponsePtrOutput
}

type autoHealRulesResponsePtrType AutoHealRulesResponseArgs

func AutoHealRulesResponsePtr(v *AutoHealRulesResponseArgs) AutoHealRulesResponsePtrInput {
	return (*autoHealRulesResponsePtrType)(v)
}

func (*autoHealRulesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return i.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealRulesResponsePtrType) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesResponsePtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o.ToAutoHealRulesResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealRulesResponse {
		return &v
	}).(AutoHealRulesResponsePtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponseOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealActionsResponse { return v.Actions }).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponseOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealTriggersResponse { return v.Triggers }).(AutoHealTriggersResponsePtrOutput)
}

type AutoHealRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) Elem() AutoHealRulesResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) AutoHealRulesResponse { return *v }).(AutoHealRulesResponseOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponsePtrOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealActionsResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponsePtrOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealTriggersResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggers struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTrigger `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTrigger `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTrigger `pulumi:"statusCodes"`
}

// AutoHealTriggersInput is an input type that accepts AutoHealTriggersArgs and AutoHealTriggersOutput values.
// You can construct a concrete instance of `AutoHealTriggersInput` via:
//
//          AutoHealTriggersArgs{...}
type AutoHealTriggersInput interface {
	pulumi.Input

	ToAutoHealTriggersOutput() AutoHealTriggersOutput
	ToAutoHealTriggersOutputWithContext(context.Context) AutoHealTriggersOutput
}

// Triggers for auto-heal.
type AutoHealTriggersArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerPtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerPtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return i.ToAutoHealTriggersOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput)
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput).ToAutoHealTriggersPtrOutputWithContext(ctx)
}

// AutoHealTriggersPtrInput is an input type that accepts AutoHealTriggersArgs, AutoHealTriggersPtr and AutoHealTriggersPtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersPtrInput` via:
//
//          AutoHealTriggersArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersPtrInput interface {
	pulumi.Input

	ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput
	ToAutoHealTriggersPtrOutputWithContext(context.Context) AutoHealTriggersPtrOutput
}

type autoHealTriggersPtrType AutoHealTriggersArgs

func AutoHealTriggersPtr(v *AutoHealTriggersArgs) AutoHealTriggersPtrInput {
	return (*autoHealTriggersPtrType)(v)
}

func (*autoHealTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersPtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *AutoHealTriggers {
		return &v
	}).(AutoHealTriggersPtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *RequestsBasedTrigger { return v.Requests }).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *SlowRequestsBasedTrigger { return v.SlowRequests }).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesBasedTrigger { return v.StatusCodes }).(StatusCodesBasedTriggerArrayOutput)
}

type AutoHealTriggersPtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) Elem() AutoHealTriggersOutput {
	return o.ApplyT(func(v *AutoHealTriggers) AutoHealTriggers { return *v }).(AutoHealTriggersOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersPtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersPtrOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *RequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersPtrOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersPtrOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerArrayOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersInvokeResponse struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTriggerInvokeResponse `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTriggerInvokeResponse `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTriggerInvokeResponse `pulumi:"statusCodes"`
}

// AutoHealTriggersInvokeResponseInput is an input type that accepts AutoHealTriggersInvokeResponseArgs and AutoHealTriggersInvokeResponseOutput values.
// You can construct a concrete instance of `AutoHealTriggersInvokeResponseInput` via:
//
//          AutoHealTriggersInvokeResponseArgs{...}
type AutoHealTriggersInvokeResponseInput interface {
	pulumi.Input

	ToAutoHealTriggersInvokeResponseOutput() AutoHealTriggersInvokeResponseOutput
	ToAutoHealTriggersInvokeResponseOutputWithContext(context.Context) AutoHealTriggersInvokeResponseOutput
}

// Triggers for auto-heal.
type AutoHealTriggersInvokeResponseArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerInvokeResponsePtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerInvokeResponsePtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerInvokeResponseArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersInvokeResponse)(nil)).Elem()
}

func (i AutoHealTriggersInvokeResponseArgs) ToAutoHealTriggersInvokeResponseOutput() AutoHealTriggersInvokeResponseOutput {
	return i.ToAutoHealTriggersInvokeResponseOutputWithContext(context.Background())
}

func (i AutoHealTriggersInvokeResponseArgs) ToAutoHealTriggersInvokeResponseOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersInvokeResponseOutput)
}

func (i AutoHealTriggersInvokeResponseArgs) ToAutoHealTriggersInvokeResponsePtrOutput() AutoHealTriggersInvokeResponsePtrOutput {
	return i.ToAutoHealTriggersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersInvokeResponseArgs) ToAutoHealTriggersInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersInvokeResponseOutput).ToAutoHealTriggersInvokeResponsePtrOutputWithContext(ctx)
}

// AutoHealTriggersInvokeResponsePtrInput is an input type that accepts AutoHealTriggersInvokeResponseArgs, AutoHealTriggersInvokeResponsePtr and AutoHealTriggersInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersInvokeResponsePtrInput` via:
//
//          AutoHealTriggersInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersInvokeResponsePtrInput interface {
	pulumi.Input

	ToAutoHealTriggersInvokeResponsePtrOutput() AutoHealTriggersInvokeResponsePtrOutput
	ToAutoHealTriggersInvokeResponsePtrOutputWithContext(context.Context) AutoHealTriggersInvokeResponsePtrOutput
}

type autoHealTriggersInvokeResponsePtrType AutoHealTriggersInvokeResponseArgs

func AutoHealTriggersInvokeResponsePtr(v *AutoHealTriggersInvokeResponseArgs) AutoHealTriggersInvokeResponsePtrInput {
	return (*autoHealTriggersInvokeResponsePtrType)(v)
}

func (*autoHealTriggersInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersInvokeResponse)(nil)).Elem()
}

func (i *autoHealTriggersInvokeResponsePtrType) ToAutoHealTriggersInvokeResponsePtrOutput() AutoHealTriggersInvokeResponsePtrOutput {
	return i.ToAutoHealTriggersInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersInvokeResponsePtrType) ToAutoHealTriggersInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersInvokeResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersInvokeResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersInvokeResponse)(nil)).Elem()
}

func (o AutoHealTriggersInvokeResponseOutput) ToAutoHealTriggersInvokeResponseOutput() AutoHealTriggersInvokeResponseOutput {
	return o
}

func (o AutoHealTriggersInvokeResponseOutput) ToAutoHealTriggersInvokeResponseOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponseOutput {
	return o
}

func (o AutoHealTriggersInvokeResponseOutput) ToAutoHealTriggersInvokeResponsePtrOutput() AutoHealTriggersInvokeResponsePtrOutput {
	return o.ToAutoHealTriggersInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersInvokeResponseOutput) ToAutoHealTriggersInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersInvokeResponse) *AutoHealTriggersInvokeResponse {
		return &v
	}).(AutoHealTriggersInvokeResponsePtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersInvokeResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersInvokeResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersInvokeResponseOutput) Requests() RequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersInvokeResponse) *RequestsBasedTriggerInvokeResponse { return v.Requests }).(RequestsBasedTriggerInvokeResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersInvokeResponseOutput) SlowRequests() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersInvokeResponse) *SlowRequestsBasedTriggerInvokeResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerInvokeResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersInvokeResponseOutput) StatusCodes() StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersInvokeResponse) []StatusCodesBasedTriggerInvokeResponse { return v.StatusCodes }).(StatusCodesBasedTriggerInvokeResponseArrayOutput)
}

type AutoHealTriggersInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersInvokeResponse)(nil)).Elem()
}

func (o AutoHealTriggersInvokeResponsePtrOutput) ToAutoHealTriggersInvokeResponsePtrOutput() AutoHealTriggersInvokeResponsePtrOutput {
	return o
}

func (o AutoHealTriggersInvokeResponsePtrOutput) ToAutoHealTriggersInvokeResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersInvokeResponsePtrOutput {
	return o
}

func (o AutoHealTriggersInvokeResponsePtrOutput) Elem() AutoHealTriggersInvokeResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersInvokeResponse) AutoHealTriggersInvokeResponse { return *v }).(AutoHealTriggersInvokeResponseOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersInvokeResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersInvokeResponsePtrOutput) Requests() RequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersInvokeResponse) *RequestsBasedTriggerInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerInvokeResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersInvokeResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersInvokeResponse) *SlowRequestsBasedTriggerInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerInvokeResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersInvokeResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersInvokeResponse) []StatusCodesBasedTriggerInvokeResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerInvokeResponseArrayOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponse struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTriggerResponse `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTriggerResponse `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTriggerResponse `pulumi:"statusCodes"`
}

// AutoHealTriggersResponseInput is an input type that accepts AutoHealTriggersResponseArgs and AutoHealTriggersResponseOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponseInput` via:
//
//          AutoHealTriggersResponseArgs{...}
type AutoHealTriggersResponseInput interface {
	pulumi.Input

	ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput
	ToAutoHealTriggersResponseOutputWithContext(context.Context) AutoHealTriggersResponseOutput
}

// Triggers for auto-heal.
type AutoHealTriggersResponseArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerResponsePtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerResponsePtrInput `pulumi:"slowRequests"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerResponseArrayInput `pulumi:"statusCodes"`
}

func (AutoHealTriggersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return i.ToAutoHealTriggersResponseOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput)
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersResponseArgs) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponseOutput).ToAutoHealTriggersResponsePtrOutputWithContext(ctx)
}

// AutoHealTriggersResponsePtrInput is an input type that accepts AutoHealTriggersResponseArgs, AutoHealTriggersResponsePtr and AutoHealTriggersResponsePtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersResponsePtrInput` via:
//
//          AutoHealTriggersResponseArgs{...}
//
//  or:
//
//          nil
type AutoHealTriggersResponsePtrInput interface {
	pulumi.Input

	ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput
	ToAutoHealTriggersResponsePtrOutputWithContext(context.Context) AutoHealTriggersResponsePtrOutput
}

type autoHealTriggersResponsePtrType AutoHealTriggersResponseArgs

func AutoHealTriggersResponsePtr(v *AutoHealTriggersResponseArgs) AutoHealTriggersResponsePtrInput {
	return (*autoHealTriggersResponsePtrType)(v)
}

func (*autoHealTriggersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return i.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersResponsePtrType) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o.ToAutoHealTriggersResponsePtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *AutoHealTriggersResponse {
		return &v
	}).(AutoHealTriggersResponsePtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponseOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *RequestsBasedTriggerResponse { return v.Requests }).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponseOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponseOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse { return v.StatusCodes }).(StatusCodesBasedTriggerResponseArrayOutput)
}

type AutoHealTriggersResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) Elem() AutoHealTriggersResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) AutoHealTriggersResponse { return *v }).(AutoHealTriggersResponseOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponsePtrOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *RequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfig struct {
	// Log level.
	Level *string `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageApplicationLogsConfigInput is an input type that accepts AzureBlobStorageApplicationLogsConfigArgs and AzureBlobStorageApplicationLogsConfigOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigInput` via:
//
//          AzureBlobStorageApplicationLogsConfigArgs{...}
type AzureBlobStorageApplicationLogsConfigInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput
	ToAzureBlobStorageApplicationLogsConfigOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigOutput
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevel `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigOutput)
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigOutput).ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx)
}

// AzureBlobStorageApplicationLogsConfigPtrInput is an input type that accepts AzureBlobStorageApplicationLogsConfigArgs, AzureBlobStorageApplicationLogsConfigPtr and AzureBlobStorageApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigPtrInput` via:
//
//          AzureBlobStorageApplicationLogsConfigArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput
	ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput
}

type azureBlobStorageApplicationLogsConfigPtrType AzureBlobStorageApplicationLogsConfigArgs

func AzureBlobStorageApplicationLogsConfigPtr(v *AzureBlobStorageApplicationLogsConfigArgs) AzureBlobStorageApplicationLogsConfigPtrInput {
	return (*azureBlobStorageApplicationLogsConfigPtrType)(v)
}

func (*azureBlobStorageApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (i *azureBlobStorageApplicationLogsConfigPtrType) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageApplicationLogsConfigPtrType) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig {
		return &v
	}).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) Elem() AzureBlobStorageApplicationLogsConfigOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) AzureBlobStorageApplicationLogsConfig { return *v }).(AzureBlobStorageApplicationLogsConfigOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigInvokeResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageApplicationLogsConfigInvokeResponseInput is an input type that accepts AzureBlobStorageApplicationLogsConfigInvokeResponseArgs and AzureBlobStorageApplicationLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigInvokeResponseInput` via:
//
//          AzureBlobStorageApplicationLogsConfigInvokeResponseArgs{...}
type AzureBlobStorageApplicationLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutput() AzureBlobStorageApplicationLogsConfigInvokeResponseOutput
	ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponseOutput
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigInvokeResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutput() AzureBlobStorageApplicationLogsConfigInvokeResponseOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigInvokeResponseOutput)
}

func (i AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigInvokeResponseOutput).ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx)
}

// AzureBlobStorageApplicationLogsConfigInvokeResponsePtrInput is an input type that accepts AzureBlobStorageApplicationLogsConfigInvokeResponseArgs, AzureBlobStorageApplicationLogsConfigInvokeResponsePtr and AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigInvokeResponsePtrInput` via:
//
//          AzureBlobStorageApplicationLogsConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageApplicationLogsConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput
	ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput
}

type azureBlobStorageApplicationLogsConfigInvokeResponsePtrType AzureBlobStorageApplicationLogsConfigInvokeResponseArgs

func AzureBlobStorageApplicationLogsConfigInvokeResponsePtr(v *AzureBlobStorageApplicationLogsConfigInvokeResponseArgs) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrInput {
	return (*azureBlobStorageApplicationLogsConfigInvokeResponsePtrType)(v)
}

func (*azureBlobStorageApplicationLogsConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i *azureBlobStorageApplicationLogsConfigInvokeResponsePtrType) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageApplicationLogsConfigInvokeResponsePtrType) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutput() AzureBlobStorageApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigInvokeResponse) *AzureBlobStorageApplicationLogsConfigInvokeResponse {
		return &v
	}).(AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigInvokeResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigInvokeResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigInvokeResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) Elem() AzureBlobStorageApplicationLogsConfigInvokeResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigInvokeResponse) AzureBlobStorageApplicationLogsConfigInvokeResponse {
		return *v
	}).(AzureBlobStorageApplicationLogsConfigInvokeResponseOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageApplicationLogsConfigResponseInput is an input type that accepts AzureBlobStorageApplicationLogsConfigResponseArgs and AzureBlobStorageApplicationLogsConfigResponseOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigResponseInput` via:
//
//          AzureBlobStorageApplicationLogsConfigResponseArgs{...}
type AzureBlobStorageApplicationLogsConfigResponseInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigResponseOutput() AzureBlobStorageApplicationLogsConfigResponseOutput
	ToAzureBlobStorageApplicationLogsConfigResponseOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigResponseOutput
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageApplicationLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (i AzureBlobStorageApplicationLogsConfigResponseArgs) ToAzureBlobStorageApplicationLogsConfigResponseOutput() AzureBlobStorageApplicationLogsConfigResponseOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigResponseOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigResponseArgs) ToAzureBlobStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigResponseOutput)
}

func (i AzureBlobStorageApplicationLogsConfigResponseArgs) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigResponseArgs) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigResponseOutput).ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx)
}

// AzureBlobStorageApplicationLogsConfigResponsePtrInput is an input type that accepts AzureBlobStorageApplicationLogsConfigResponseArgs, AzureBlobStorageApplicationLogsConfigResponsePtr and AzureBlobStorageApplicationLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigResponsePtrInput` via:
//
//          AzureBlobStorageApplicationLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageApplicationLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput
	ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput
}

type azureBlobStorageApplicationLogsConfigResponsePtrType AzureBlobStorageApplicationLogsConfigResponseArgs

func AzureBlobStorageApplicationLogsConfigResponsePtr(v *AzureBlobStorageApplicationLogsConfigResponseArgs) AzureBlobStorageApplicationLogsConfigResponsePtrInput {
	return (*azureBlobStorageApplicationLogsConfigResponsePtrType)(v)
}

func (*azureBlobStorageApplicationLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (i *azureBlobStorageApplicationLogsConfigResponsePtrType) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageApplicationLogsConfigResponsePtrType) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponseOutput() AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *AzureBlobStorageApplicationLogsConfigResponse {
		return &v
	}).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) Elem() AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) AzureBlobStorageApplicationLogsConfigResponse {
		return *v
	}).(AzureBlobStorageApplicationLogsConfigResponseOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageHttpLogsConfigInput is an input type that accepts AzureBlobStorageHttpLogsConfigArgs and AzureBlobStorageHttpLogsConfigOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigInput` via:
//
//          AzureBlobStorageHttpLogsConfigArgs{...}
type AzureBlobStorageHttpLogsConfigInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput
	ToAzureBlobStorageHttpLogsConfigOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigOutput
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageHttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput {
	return i.ToAzureBlobStorageHttpLogsConfigOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigOutput)
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigOutput).ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx)
}

// AzureBlobStorageHttpLogsConfigPtrInput is an input type that accepts AzureBlobStorageHttpLogsConfigArgs, AzureBlobStorageHttpLogsConfigPtr and AzureBlobStorageHttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigPtrInput` via:
//
//          AzureBlobStorageHttpLogsConfigArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageHttpLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput
	ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigPtrOutput
}

type azureBlobStorageHttpLogsConfigPtrType AzureBlobStorageHttpLogsConfigArgs

func AzureBlobStorageHttpLogsConfigPtr(v *AzureBlobStorageHttpLogsConfigArgs) AzureBlobStorageHttpLogsConfigPtrInput {
	return (*azureBlobStorageHttpLogsConfigPtrType)(v)
}

func (*azureBlobStorageHttpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (i *azureBlobStorageHttpLogsConfigPtrType) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageHttpLogsConfigPtrType) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *AzureBlobStorageHttpLogsConfig {
		return &v
	}).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageHttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) Elem() AzureBlobStorageHttpLogsConfigOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) AzureBlobStorageHttpLogsConfig { return *v }).(AzureBlobStorageHttpLogsConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigInvokeResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageHttpLogsConfigInvokeResponseInput is an input type that accepts AzureBlobStorageHttpLogsConfigInvokeResponseArgs and AzureBlobStorageHttpLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigInvokeResponseInput` via:
//
//          AzureBlobStorageHttpLogsConfigInvokeResponseArgs{...}
type AzureBlobStorageHttpLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigInvokeResponseOutput() AzureBlobStorageHttpLogsConfigInvokeResponseOutput
	ToAzureBlobStorageHttpLogsConfigInvokeResponseOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigInvokeResponseOutput
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigInvokeResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageHttpLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (i AzureBlobStorageHttpLogsConfigInvokeResponseArgs) ToAzureBlobStorageHttpLogsConfigInvokeResponseOutput() AzureBlobStorageHttpLogsConfigInvokeResponseOutput {
	return i.ToAzureBlobStorageHttpLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigInvokeResponseArgs) ToAzureBlobStorageHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigInvokeResponseOutput)
}

func (i AzureBlobStorageHttpLogsConfigInvokeResponseArgs) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigInvokeResponseArgs) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigInvokeResponseOutput).ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx)
}

// AzureBlobStorageHttpLogsConfigInvokeResponsePtrInput is an input type that accepts AzureBlobStorageHttpLogsConfigInvokeResponseArgs, AzureBlobStorageHttpLogsConfigInvokeResponsePtr and AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigInvokeResponsePtrInput` via:
//
//          AzureBlobStorageHttpLogsConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageHttpLogsConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput
	ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput
}

type azureBlobStorageHttpLogsConfigInvokeResponsePtrType AzureBlobStorageHttpLogsConfigInvokeResponseArgs

func AzureBlobStorageHttpLogsConfigInvokeResponsePtr(v *AzureBlobStorageHttpLogsConfigInvokeResponseArgs) AzureBlobStorageHttpLogsConfigInvokeResponsePtrInput {
	return (*azureBlobStorageHttpLogsConfigInvokeResponsePtrType)(v)
}

func (*azureBlobStorageHttpLogsConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (i *azureBlobStorageHttpLogsConfigInvokeResponsePtrType) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageHttpLogsConfigInvokeResponsePtrType) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponseOutput() AzureBlobStorageHttpLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return o.ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigInvokeResponse) *AzureBlobStorageHttpLogsConfigInvokeResponse {
		return &v
	}).(AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigInvokeResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigInvokeResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigInvokeResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) Elem() AzureBlobStorageHttpLogsConfigInvokeResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigInvokeResponse) AzureBlobStorageHttpLogsConfigInvokeResponse {
		return *v
	}).(AzureBlobStorageHttpLogsConfigInvokeResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageHttpLogsConfigResponseInput is an input type that accepts AzureBlobStorageHttpLogsConfigResponseArgs and AzureBlobStorageHttpLogsConfigResponseOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigResponseInput` via:
//
//          AzureBlobStorageHttpLogsConfigResponseArgs{...}
type AzureBlobStorageHttpLogsConfigResponseInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigResponseOutput() AzureBlobStorageHttpLogsConfigResponseOutput
	ToAzureBlobStorageHttpLogsConfigResponseOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigResponseOutput
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageHttpLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (i AzureBlobStorageHttpLogsConfigResponseArgs) ToAzureBlobStorageHttpLogsConfigResponseOutput() AzureBlobStorageHttpLogsConfigResponseOutput {
	return i.ToAzureBlobStorageHttpLogsConfigResponseOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigResponseArgs) ToAzureBlobStorageHttpLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigResponseOutput)
}

func (i AzureBlobStorageHttpLogsConfigResponseArgs) ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigResponseArgs) ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigResponseOutput).ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx)
}

// AzureBlobStorageHttpLogsConfigResponsePtrInput is an input type that accepts AzureBlobStorageHttpLogsConfigResponseArgs, AzureBlobStorageHttpLogsConfigResponsePtr and AzureBlobStorageHttpLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigResponsePtrInput` via:
//
//          AzureBlobStorageHttpLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type AzureBlobStorageHttpLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput
	ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput
}

type azureBlobStorageHttpLogsConfigResponsePtrType AzureBlobStorageHttpLogsConfigResponseArgs

func AzureBlobStorageHttpLogsConfigResponsePtr(v *AzureBlobStorageHttpLogsConfigResponseArgs) AzureBlobStorageHttpLogsConfigResponsePtrInput {
	return (*azureBlobStorageHttpLogsConfigResponsePtrType)(v)
}

func (*azureBlobStorageHttpLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (i *azureBlobStorageHttpLogsConfigResponsePtrType) ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageHttpLogsConfigResponsePtrType) ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponseOutput() AzureBlobStorageHttpLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *AzureBlobStorageHttpLogsConfigResponse {
		return &v
	}).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageHttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) Elem() AzureBlobStorageHttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) AzureBlobStorageHttpLogsConfigResponse { return *v }).(AzureBlobStorageHttpLogsConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueInvokeResponse struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// State of the storage account.
	State string `pulumi:"state"`
	// Type of storage.
	Type *string `pulumi:"type"`
}

// AzureStorageInfoValueInvokeResponseInput is an input type that accepts AzureStorageInfoValueInvokeResponseArgs and AzureStorageInfoValueInvokeResponseOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueInvokeResponseInput` via:
//
//          AzureStorageInfoValueInvokeResponseArgs{...}
type AzureStorageInfoValueInvokeResponseInput interface {
	pulumi.Input

	ToAzureStorageInfoValueInvokeResponseOutput() AzureStorageInfoValueInvokeResponseOutput
	ToAzureStorageInfoValueInvokeResponseOutputWithContext(context.Context) AzureStorageInfoValueInvokeResponseOutput
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueInvokeResponseArgs struct {
	// Access key for the storage account.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// State of the storage account.
	State pulumi.StringInput `pulumi:"state"`
	// Type of storage.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureStorageInfoValueInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueInvokeResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueInvokeResponseArgs) ToAzureStorageInfoValueInvokeResponseOutput() AzureStorageInfoValueInvokeResponseOutput {
	return i.ToAzureStorageInfoValueInvokeResponseOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueInvokeResponseArgs) ToAzureStorageInfoValueInvokeResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueInvokeResponseOutput)
}

// AzureStorageInfoValueInvokeResponseMapInput is an input type that accepts AzureStorageInfoValueInvokeResponseMap and AzureStorageInfoValueInvokeResponseMapOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueInvokeResponseMapInput` via:
//
//          AzureStorageInfoValueInvokeResponseMap{ "key": AzureStorageInfoValueInvokeResponseArgs{...} }
type AzureStorageInfoValueInvokeResponseMapInput interface {
	pulumi.Input

	ToAzureStorageInfoValueInvokeResponseMapOutput() AzureStorageInfoValueInvokeResponseMapOutput
	ToAzureStorageInfoValueInvokeResponseMapOutputWithContext(context.Context) AzureStorageInfoValueInvokeResponseMapOutput
}

type AzureStorageInfoValueInvokeResponseMap map[string]AzureStorageInfoValueInvokeResponseInput

func (AzureStorageInfoValueInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueInvokeResponse)(nil)).Elem()
}

func (i AzureStorageInfoValueInvokeResponseMap) ToAzureStorageInfoValueInvokeResponseMapOutput() AzureStorageInfoValueInvokeResponseMapOutput {
	return i.ToAzureStorageInfoValueInvokeResponseMapOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueInvokeResponseMap) ToAzureStorageInfoValueInvokeResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueInvokeResponseMapOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueInvokeResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueInvokeResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueInvokeResponseOutput) ToAzureStorageInfoValueInvokeResponseOutput() AzureStorageInfoValueInvokeResponseOutput {
	return o
}

func (o AzureStorageInfoValueInvokeResponseOutput) ToAzureStorageInfoValueInvokeResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueInvokeResponseOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueInvokeResponseOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueInvokeResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueInvokeResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueInvokeResponseOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// State of the storage account.
func (o AzureStorageInfoValueInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of storage.
func (o AzureStorageInfoValueInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureStorageInfoValueInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueInvokeResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueInvokeResponseMapOutput) ToAzureStorageInfoValueInvokeResponseMapOutput() AzureStorageInfoValueInvokeResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueInvokeResponseMapOutput) ToAzureStorageInfoValueInvokeResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueInvokeResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValueInvokeResponse {
		return vs[0].(map[string]AzureStorageInfoValueInvokeResponse)[vs[1].(string)]
	}).(AzureStorageInfoValueInvokeResponseOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfig struct {
	// Log level.
	Level *string `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl string `pulumi:"sasUrl"`
}

// AzureTableStorageApplicationLogsConfigInput is an input type that accepts AzureTableStorageApplicationLogsConfigArgs and AzureTableStorageApplicationLogsConfigOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigInput` via:
//
//          AzureTableStorageApplicationLogsConfigArgs{...}
type AzureTableStorageApplicationLogsConfigInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput
	ToAzureTableStorageApplicationLogsConfigOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigOutput
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevel `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AzureTableStorageApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput {
	return i.ToAzureTableStorageApplicationLogsConfigOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigOutput)
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigOutput).ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx)
}

// AzureTableStorageApplicationLogsConfigPtrInput is an input type that accepts AzureTableStorageApplicationLogsConfigArgs, AzureTableStorageApplicationLogsConfigPtr and AzureTableStorageApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigPtrInput` via:
//
//          AzureTableStorageApplicationLogsConfigArgs{...}
//
//  or:
//
//          nil
type AzureTableStorageApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput
	ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigPtrOutput
}

type azureTableStorageApplicationLogsConfigPtrType AzureTableStorageApplicationLogsConfigArgs

func AzureTableStorageApplicationLogsConfigPtr(v *AzureTableStorageApplicationLogsConfigArgs) AzureTableStorageApplicationLogsConfigPtrInput {
	return (*azureTableStorageApplicationLogsConfigPtrType)(v)
}

func (*azureTableStorageApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (i *azureTableStorageApplicationLogsConfigPtrType) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureTableStorageApplicationLogsConfigPtrType) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig {
		return &v
	}).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfig) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfig) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AzureTableStorageApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) Elem() AzureTableStorageApplicationLogsConfigOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) AzureTableStorageApplicationLogsConfig { return *v }).(AzureTableStorageApplicationLogsConfigOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigInvokeResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl string `pulumi:"sasUrl"`
}

// AzureTableStorageApplicationLogsConfigInvokeResponseInput is an input type that accepts AzureTableStorageApplicationLogsConfigInvokeResponseArgs and AzureTableStorageApplicationLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigInvokeResponseInput` via:
//
//          AzureTableStorageApplicationLogsConfigInvokeResponseArgs{...}
type AzureTableStorageApplicationLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigInvokeResponseOutput() AzureTableStorageApplicationLogsConfigInvokeResponseOutput
	ToAzureTableStorageApplicationLogsConfigInvokeResponseOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigInvokeResponseOutput
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigInvokeResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AzureTableStorageApplicationLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i AzureTableStorageApplicationLogsConfigInvokeResponseArgs) ToAzureTableStorageApplicationLogsConfigInvokeResponseOutput() AzureTableStorageApplicationLogsConfigInvokeResponseOutput {
	return i.ToAzureTableStorageApplicationLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigInvokeResponseArgs) ToAzureTableStorageApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigInvokeResponseOutput)
}

func (i AzureTableStorageApplicationLogsConfigInvokeResponseArgs) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigInvokeResponseArgs) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigInvokeResponseOutput).ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx)
}

// AzureTableStorageApplicationLogsConfigInvokeResponsePtrInput is an input type that accepts AzureTableStorageApplicationLogsConfigInvokeResponseArgs, AzureTableStorageApplicationLogsConfigInvokeResponsePtr and AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigInvokeResponsePtrInput` via:
//
//          AzureTableStorageApplicationLogsConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AzureTableStorageApplicationLogsConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput
	ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput
}

type azureTableStorageApplicationLogsConfigInvokeResponsePtrType AzureTableStorageApplicationLogsConfigInvokeResponseArgs

func AzureTableStorageApplicationLogsConfigInvokeResponsePtr(v *AzureTableStorageApplicationLogsConfigInvokeResponseArgs) AzureTableStorageApplicationLogsConfigInvokeResponsePtrInput {
	return (*azureTableStorageApplicationLogsConfigInvokeResponsePtrType)(v)
}

func (*azureTableStorageApplicationLogsConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i *azureTableStorageApplicationLogsConfigInvokeResponsePtrType) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *azureTableStorageApplicationLogsConfigInvokeResponsePtrType) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponseOutput() AzureTableStorageApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigInvokeResponse) *AzureTableStorageApplicationLogsConfigInvokeResponse {
		return &v
	}).(AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigInvokeResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigInvokeResponseOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigInvokeResponse) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput() AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) Elem() AzureTableStorageApplicationLogsConfigInvokeResponseOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigInvokeResponse) AzureTableStorageApplicationLogsConfigInvokeResponse {
		return *v
	}).(AzureTableStorageApplicationLogsConfigInvokeResponseOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl string `pulumi:"sasUrl"`
}

// AzureTableStorageApplicationLogsConfigResponseInput is an input type that accepts AzureTableStorageApplicationLogsConfigResponseArgs and AzureTableStorageApplicationLogsConfigResponseOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigResponseInput` via:
//
//          AzureTableStorageApplicationLogsConfigResponseArgs{...}
type AzureTableStorageApplicationLogsConfigResponseInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigResponseOutput() AzureTableStorageApplicationLogsConfigResponseOutput
	ToAzureTableStorageApplicationLogsConfigResponseOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigResponseOutput
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AzureTableStorageApplicationLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (i AzureTableStorageApplicationLogsConfigResponseArgs) ToAzureTableStorageApplicationLogsConfigResponseOutput() AzureTableStorageApplicationLogsConfigResponseOutput {
	return i.ToAzureTableStorageApplicationLogsConfigResponseOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigResponseArgs) ToAzureTableStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigResponseOutput)
}

func (i AzureTableStorageApplicationLogsConfigResponseArgs) ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigResponseArgs) ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigResponseOutput).ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx)
}

// AzureTableStorageApplicationLogsConfigResponsePtrInput is an input type that accepts AzureTableStorageApplicationLogsConfigResponseArgs, AzureTableStorageApplicationLogsConfigResponsePtr and AzureTableStorageApplicationLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigResponsePtrInput` via:
//
//          AzureTableStorageApplicationLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type AzureTableStorageApplicationLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput
	ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput
}

type azureTableStorageApplicationLogsConfigResponsePtrType AzureTableStorageApplicationLogsConfigResponseArgs

func AzureTableStorageApplicationLogsConfigResponsePtr(v *AzureTableStorageApplicationLogsConfigResponseArgs) AzureTableStorageApplicationLogsConfigResponsePtrInput {
	return (*azureTableStorageApplicationLogsConfigResponsePtrType)(v)
}

func (*azureTableStorageApplicationLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (i *azureTableStorageApplicationLogsConfigResponsePtrType) ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *azureTableStorageApplicationLogsConfigResponsePtrType) ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponseOutput() AzureTableStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigResponse) *AzureTableStorageApplicationLogsConfigResponse {
		return &v
	}).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigResponseOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigResponse) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AzureTableStorageApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) Elem() AzureTableStorageApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) AzureTableStorageApplicationLogsConfigResponse {
		return *v
	}).(AzureTableStorageApplicationLogsConfigResponseOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Backup description.
type BackupItemInvokeResponse struct {
	// Id of the backup.
	BackupId int `pulumi:"backupId"`
	// Name of the blob which contains data for this backup.
	BlobName string `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId string `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created string `pulumi:"created"`
	// List of databases included in the backup.
	Databases []DatabaseBackupSettingInvokeResponse `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp string `pulumi:"finishedTimeStamp"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp string `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log string `pulumi:"log"`
	// Resource Name.
	Name string `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled bool `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes float64 `pulumi:"sizeInBytes"`
	// Backup status.
	Status string `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes float64 `pulumi:"websiteSizeInBytes"`
}

// BackupItemInvokeResponseInput is an input type that accepts BackupItemInvokeResponseArgs and BackupItemInvokeResponseOutput values.
// You can construct a concrete instance of `BackupItemInvokeResponseInput` via:
//
//          BackupItemInvokeResponseArgs{...}
type BackupItemInvokeResponseInput interface {
	pulumi.Input

	ToBackupItemInvokeResponseOutput() BackupItemInvokeResponseOutput
	ToBackupItemInvokeResponseOutputWithContext(context.Context) BackupItemInvokeResponseOutput
}

// Backup description.
type BackupItemInvokeResponseArgs struct {
	// Id of the backup.
	BackupId pulumi.IntInput `pulumi:"backupId"`
	// Name of the blob which contains data for this backup.
	BlobName pulumi.StringInput `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created pulumi.StringInput `pulumi:"created"`
	// List of databases included in the backup.
	Databases DatabaseBackupSettingInvokeResponseArrayInput `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp pulumi.StringInput `pulumi:"finishedTimeStamp"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp pulumi.StringInput `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log pulumi.StringInput `pulumi:"log"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled pulumi.BoolInput `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes pulumi.Float64Input `pulumi:"sizeInBytes"`
	// Backup status.
	Status pulumi.StringInput `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl pulumi.StringInput `pulumi:"storageAccountUrl"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes pulumi.Float64Input `pulumi:"websiteSizeInBytes"`
}

func (BackupItemInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemInvokeResponse)(nil)).Elem()
}

func (i BackupItemInvokeResponseArgs) ToBackupItemInvokeResponseOutput() BackupItemInvokeResponseOutput {
	return i.ToBackupItemInvokeResponseOutputWithContext(context.Background())
}

func (i BackupItemInvokeResponseArgs) ToBackupItemInvokeResponseOutputWithContext(ctx context.Context) BackupItemInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemInvokeResponseOutput)
}

// BackupItemInvokeResponseArrayInput is an input type that accepts BackupItemInvokeResponseArray and BackupItemInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BackupItemInvokeResponseArrayInput` via:
//
//          BackupItemInvokeResponseArray{ BackupItemInvokeResponseArgs{...} }
type BackupItemInvokeResponseArrayInput interface {
	pulumi.Input

	ToBackupItemInvokeResponseArrayOutput() BackupItemInvokeResponseArrayOutput
	ToBackupItemInvokeResponseArrayOutputWithContext(context.Context) BackupItemInvokeResponseArrayOutput
}

type BackupItemInvokeResponseArray []BackupItemInvokeResponseInput

func (BackupItemInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupItemInvokeResponse)(nil)).Elem()
}

func (i BackupItemInvokeResponseArray) ToBackupItemInvokeResponseArrayOutput() BackupItemInvokeResponseArrayOutput {
	return i.ToBackupItemInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BackupItemInvokeResponseArray) ToBackupItemInvokeResponseArrayOutputWithContext(ctx context.Context) BackupItemInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupItemInvokeResponseArrayOutput)
}

// Backup description.
type BackupItemInvokeResponseOutput struct{ *pulumi.OutputState }

func (BackupItemInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemInvokeResponse)(nil)).Elem()
}

func (o BackupItemInvokeResponseOutput) ToBackupItemInvokeResponseOutput() BackupItemInvokeResponseOutput {
	return o
}

func (o BackupItemInvokeResponseOutput) ToBackupItemInvokeResponseOutputWithContext(ctx context.Context) BackupItemInvokeResponseOutput {
	return o
}

// Id of the backup.
func (o BackupItemInvokeResponseOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) int { return v.BackupId }).(pulumi.IntOutput)
}

// Name of the blob which contains data for this backup.
func (o BackupItemInvokeResponseOutput) BlobName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.BlobName }).(pulumi.StringOutput)
}

// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
func (o BackupItemInvokeResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// Timestamp of the backup creation.
func (o BackupItemInvokeResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Created }).(pulumi.StringOutput)
}

// List of databases included in the backup.
func (o BackupItemInvokeResponseOutput) Databases() DatabaseBackupSettingInvokeResponseArrayOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) []DatabaseBackupSettingInvokeResponse { return v.Databases }).(DatabaseBackupSettingInvokeResponseArrayOutput)
}

// Timestamp when this backup finished.
func (o BackupItemInvokeResponseOutput) FinishedTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.FinishedTimeStamp }).(pulumi.StringOutput)
}

// Resource Id.
func (o BackupItemInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o BackupItemInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Timestamp of a last restore operation which used this backup.
func (o BackupItemInvokeResponseOutput) LastRestoreTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.LastRestoreTimeStamp }).(pulumi.StringOutput)
}

// Details regarding this backup. Might contain an error message.
func (o BackupItemInvokeResponseOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Log }).(pulumi.StringOutput)
}

// Resource Name.
func (o BackupItemInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// True if this backup has been created due to a schedule being triggered.
func (o BackupItemInvokeResponseOutput) Scheduled() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) bool { return v.Scheduled }).(pulumi.BoolOutput)
}

// Size of the backup in bytes.
func (o BackupItemInvokeResponseOutput) SizeInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v BackupItemInvokeResponse) float64 { return v.SizeInBytes }).(pulumi.Float64Output)
}

// Backup status.
func (o BackupItemInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// SAS URL for the storage account container which contains this backup.
func (o BackupItemInvokeResponseOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

// The system metadata relating to this resource.
func (o BackupItemInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// Resource type.
func (o BackupItemInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Size of the original web app which has been backed up.
func (o BackupItemInvokeResponseOutput) WebsiteSizeInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v BackupItemInvokeResponse) float64 { return v.WebsiteSizeInBytes }).(pulumi.Float64Output)
}

type BackupItemInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupItemInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupItemInvokeResponse)(nil)).Elem()
}

func (o BackupItemInvokeResponseArrayOutput) ToBackupItemInvokeResponseArrayOutput() BackupItemInvokeResponseArrayOutput {
	return o
}

func (o BackupItemInvokeResponseArrayOutput) ToBackupItemInvokeResponseArrayOutputWithContext(ctx context.Context) BackupItemInvokeResponseArrayOutput {
	return o
}

func (o BackupItemInvokeResponseArrayOutput) Index(i pulumi.IntInput) BackupItemInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupItemInvokeResponse {
		return vs[0].([]BackupItemInvokeResponse)[vs[1].(int)]
	}).(BackupItemInvokeResponseOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvoke struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleInvokeInput is an input type that accepts BackupScheduleInvokeArgs and BackupScheduleInvokeOutput values.
// You can construct a concrete instance of `BackupScheduleInvokeInput` via:
//
//          BackupScheduleInvokeArgs{...}
type BackupScheduleInvokeInput interface {
	pulumi.Input

	ToBackupScheduleInvokeOutput() BackupScheduleInvokeOutput
	ToBackupScheduleInvokeOutputWithContext(context.Context) BackupScheduleInvokeOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvokeArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit FrequencyUnit `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleInvokeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleInvoke)(nil)).Elem()
}

func (i BackupScheduleInvokeArgs) ToBackupScheduleInvokeOutput() BackupScheduleInvokeOutput {
	return i.ToBackupScheduleInvokeOutputWithContext(context.Background())
}

func (i BackupScheduleInvokeArgs) ToBackupScheduleInvokeOutputWithContext(ctx context.Context) BackupScheduleInvokeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleInvokeOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvokeOutput struct{ *pulumi.OutputState }

func (BackupScheduleInvokeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleInvoke)(nil)).Elem()
}

func (o BackupScheduleInvokeOutput) ToBackupScheduleInvokeOutput() BackupScheduleInvokeOutput {
	return o
}

func (o BackupScheduleInvokeOutput) ToBackupScheduleInvokeOutputWithContext(ctx context.Context) BackupScheduleInvokeOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleInvokeOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleInvoke) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleInvokeOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleInvoke) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleInvokeOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupScheduleInvoke) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleInvokeOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleInvoke) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleInvokeOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleInvoke) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvokeResponse struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// BackupScheduleInvokeResponseInput is an input type that accepts BackupScheduleInvokeResponseArgs and BackupScheduleInvokeResponseOutput values.
// You can construct a concrete instance of `BackupScheduleInvokeResponseInput` via:
//
//          BackupScheduleInvokeResponseArgs{...}
type BackupScheduleInvokeResponseInput interface {
	pulumi.Input

	ToBackupScheduleInvokeResponseOutput() BackupScheduleInvokeResponseOutput
	ToBackupScheduleInvokeResponseOutputWithContext(context.Context) BackupScheduleInvokeResponseOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvokeResponseArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime pulumi.StringInput `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupScheduleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleInvokeResponse)(nil)).Elem()
}

func (i BackupScheduleInvokeResponseArgs) ToBackupScheduleInvokeResponseOutput() BackupScheduleInvokeResponseOutput {
	return i.ToBackupScheduleInvokeResponseOutputWithContext(context.Background())
}

func (i BackupScheduleInvokeResponseArgs) ToBackupScheduleInvokeResponseOutputWithContext(ctx context.Context) BackupScheduleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleInvokeResponseOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleInvokeResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleInvokeResponse)(nil)).Elem()
}

func (o BackupScheduleInvokeResponseOutput) ToBackupScheduleInvokeResponseOutput() BackupScheduleInvokeResponseOutput {
	return o
}

func (o BackupScheduleInvokeResponseOutput) ToBackupScheduleInvokeResponseOutputWithContext(ctx context.Context) BackupScheduleInvokeResponseOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleInvokeResponseOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleInvokeResponseOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleInvokeResponseOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleInvokeResponseOutput) LastExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) string { return v.LastExecutionTime }).(pulumi.StringOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleInvokeResponseOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleInvokeResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleInvokeResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type Capability struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityInvokeResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInvokeResponseInput is an input type that accepts CapabilityInvokeResponseArgs and CapabilityInvokeResponseOutput values.
// You can construct a concrete instance of `CapabilityInvokeResponseInput` via:
//
//          CapabilityInvokeResponseArgs{...}
type CapabilityInvokeResponseInput interface {
	pulumi.Input

	ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput
	ToCapabilityInvokeResponseOutputWithContext(context.Context) CapabilityInvokeResponseOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityInvokeResponseArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityInvokeResponse)(nil)).Elem()
}

func (i CapabilityInvokeResponseArgs) ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput {
	return i.ToCapabilityInvokeResponseOutputWithContext(context.Background())
}

func (i CapabilityInvokeResponseArgs) ToCapabilityInvokeResponseOutputWithContext(ctx context.Context) CapabilityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityInvokeResponseOutput)
}

// CapabilityInvokeResponseArrayInput is an input type that accepts CapabilityInvokeResponseArray and CapabilityInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityInvokeResponseArrayInput` via:
//
//          CapabilityInvokeResponseArray{ CapabilityInvokeResponseArgs{...} }
type CapabilityInvokeResponseArrayInput interface {
	pulumi.Input

	ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput
	ToCapabilityInvokeResponseArrayOutputWithContext(context.Context) CapabilityInvokeResponseArrayOutput
}

type CapabilityInvokeResponseArray []CapabilityInvokeResponseInput

func (CapabilityInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityInvokeResponse)(nil)).Elem()
}

func (i CapabilityInvokeResponseArray) ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput {
	return i.ToCapabilityInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityInvokeResponseArray) ToCapabilityInvokeResponseArrayOutputWithContext(ctx context.Context) CapabilityInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityInvokeResponseArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityInvokeResponseOutput struct{ *pulumi.OutputState }

func (CapabilityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityInvokeResponse)(nil)).Elem()
}

func (o CapabilityInvokeResponseOutput) ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput {
	return o
}

func (o CapabilityInvokeResponseOutput) ToCapabilityInvokeResponseOutputWithContext(ctx context.Context) CapabilityInvokeResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityInvokeResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityInvokeResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityInvokeResponse)(nil)).Elem()
}

func (o CapabilityInvokeResponseArrayOutput) ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput {
	return o
}

func (o CapabilityInvokeResponseArrayOutput) ToCapabilityInvokeResponseArrayOutputWithContext(ctx context.Context) CapabilityInvokeResponseArrayOutput {
	return o
}

func (o CapabilityInvokeResponseArrayOutput) Index(i pulumi.IntInput) CapabilityInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityInvokeResponse {
		return vs[0].([]CapabilityInvokeResponse)[vs[1].(int)]
	}).(CapabilityInvokeResponseOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityResponseInput is an input type that accepts CapabilityResponseArgs and CapabilityResponseOutput values.
// You can construct a concrete instance of `CapabilityResponseInput` via:
//
//          CapabilityResponseArgs{...}
type CapabilityResponseInput interface {
	pulumi.Input

	ToCapabilityResponseOutput() CapabilityResponseOutput
	ToCapabilityResponseOutputWithContext(context.Context) CapabilityResponseOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return i.ToCapabilityResponseOutputWithContext(context.Background())
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseOutput)
}

// CapabilityResponseArrayInput is an input type that accepts CapabilityResponseArray and CapabilityResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityResponseArrayInput` via:
//
//          CapabilityResponseArray{ CapabilityResponseArgs{...} }
type CapabilityResponseArrayInput interface {
	pulumi.Input

	ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput
	ToCapabilityResponseArrayOutputWithContext(context.Context) CapabilityResponseArrayOutput
}

type CapabilityResponseArray []CapabilityResponseInput

func (CapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return i.ToCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// Information needed for cloning operation.
type CloningInfo struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInput is an input type that accepts CloningInfoArgs and CloningInfoOutput values.
// You can construct a concrete instance of `CloningInfoInput` via:
//
//          CloningInfoArgs{...}
type CloningInfoInput interface {
	pulumi.Input

	ToCloningInfoOutput() CloningInfoOutput
	ToCloningInfoOutputWithContext(context.Context) CloningInfoOutput
}

// Information needed for cloning operation.
type CloningInfoArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (i CloningInfoArgs) ToCloningInfoOutput() CloningInfoOutput {
	return i.ToCloningInfoOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput)
}

func (i CloningInfoArgs) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput).ToCloningInfoPtrOutputWithContext(ctx)
}

// CloningInfoPtrInput is an input type that accepts CloningInfoArgs, CloningInfoPtr and CloningInfoPtrOutput values.
// You can construct a concrete instance of `CloningInfoPtrInput` via:
//
//          CloningInfoArgs{...}
//
//  or:
//
//          nil
type CloningInfoPtrInput interface {
	pulumi.Input

	ToCloningInfoPtrOutput() CloningInfoPtrOutput
	ToCloningInfoPtrOutputWithContext(context.Context) CloningInfoPtrOutput
}

type cloningInfoPtrType CloningInfoArgs

func CloningInfoPtr(v *CloningInfoArgs) CloningInfoPtrInput {
	return (*cloningInfoPtrType)(v)
}

func (*cloningInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoOutput struct{ *pulumi.OutputState }

func (CloningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (o CloningInfoOutput) ToCloningInfoOutput() CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (o CloningInfoOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o.ApplyT(func(v CloningInfo) *CloningInfo {
		return &v
	}).(CloningInfoPtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfo) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfo) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoPtrOutput struct{ *pulumi.OutputState }

func (CloningInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) Elem() CloningInfoOutput {
	return o.ApplyT(func(v *CloningInfo) CloningInfo { return *v }).(CloningInfoOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoPtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoPtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoPtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoPtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoPtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoPtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoPtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoInvokeResponse struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInvokeResponseInput is an input type that accepts CloningInfoInvokeResponseArgs and CloningInfoInvokeResponseOutput values.
// You can construct a concrete instance of `CloningInfoInvokeResponseInput` via:
//
//          CloningInfoInvokeResponseArgs{...}
type CloningInfoInvokeResponseInput interface {
	pulumi.Input

	ToCloningInfoInvokeResponseOutput() CloningInfoInvokeResponseOutput
	ToCloningInfoInvokeResponseOutputWithContext(context.Context) CloningInfoInvokeResponseOutput
}

// Information needed for cloning operation.
type CloningInfoInvokeResponseArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoInvokeResponse)(nil)).Elem()
}

func (i CloningInfoInvokeResponseArgs) ToCloningInfoInvokeResponseOutput() CloningInfoInvokeResponseOutput {
	return i.ToCloningInfoInvokeResponseOutputWithContext(context.Background())
}

func (i CloningInfoInvokeResponseArgs) ToCloningInfoInvokeResponseOutputWithContext(ctx context.Context) CloningInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoInvokeResponseOutput)
}

// Information needed for cloning operation.
type CloningInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (CloningInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoInvokeResponse)(nil)).Elem()
}

func (o CloningInfoInvokeResponseOutput) ToCloningInfoInvokeResponseOutput() CloningInfoInvokeResponseOutput {
	return o
}

func (o CloningInfoInvokeResponseOutput) ToCloningInfoInvokeResponseOutputWithContext(ctx context.Context) CloningInfoInvokeResponseOutput {
	return o
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoInvokeResponseOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoInvokeResponseOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoInvokeResponseOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoInvokeResponseOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoInvokeResponseOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoInvokeResponseOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoInvokeResponseOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoInvokeResponseOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoInvokeResponseOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoInvokeResponseOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoInvokeResponseOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoInvokeResponse) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponse struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoResponseInput is an input type that accepts CloningInfoResponseArgs and CloningInfoResponseOutput values.
// You can construct a concrete instance of `CloningInfoResponseInput` via:
//
//          CloningInfoResponseArgs{...}
type CloningInfoResponseInput interface {
	pulumi.Input

	ToCloningInfoResponseOutput() CloningInfoResponseOutput
	ToCloningInfoResponseOutputWithContext(context.Context) CloningInfoResponseOutput
}

// Information needed for cloning operation.
type CloningInfoResponseArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return i.ToCloningInfoResponseOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput)
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i CloningInfoResponseArgs) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponseOutput).ToCloningInfoResponsePtrOutputWithContext(ctx)
}

// CloningInfoResponsePtrInput is an input type that accepts CloningInfoResponseArgs, CloningInfoResponsePtr and CloningInfoResponsePtrOutput values.
// You can construct a concrete instance of `CloningInfoResponsePtrInput` via:
//
//          CloningInfoResponseArgs{...}
//
//  or:
//
//          nil
type CloningInfoResponsePtrInput interface {
	pulumi.Input

	ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput
	ToCloningInfoResponsePtrOutputWithContext(context.Context) CloningInfoResponsePtrOutput
}

type cloningInfoResponsePtrType CloningInfoResponseArgs

func CloningInfoResponsePtr(v *CloningInfoResponseArgs) CloningInfoResponsePtrInput {
	return (*cloningInfoResponsePtrType)(v)
}

func (*cloningInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return i.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (i *cloningInfoResponsePtrType) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoResponsePtrOutput)
}

// Information needed for cloning operation.
type CloningInfoResponseOutput struct{ *pulumi.OutputState }

func (CloningInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutput() CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponseOutputWithContext(ctx context.Context) CloningInfoResponseOutput {
	return o
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o.ToCloningInfoResponsePtrOutputWithContext(context.Background())
}

func (o CloningInfoResponseOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *CloningInfoResponse {
		return &v
	}).(CloningInfoResponsePtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponseOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfoResponse) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponseOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponseOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponseOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponseOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponseOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfoResponse) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponseOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponseOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponseOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfoResponse) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (CloningInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfoResponse)(nil)).Elem()
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutput() CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) ToCloningInfoResponsePtrOutputWithContext(ctx context.Context) CloningInfoResponsePtrOutput {
	return o
}

func (o CloningInfoResponsePtrOutput) Elem() CloningInfoResponseOutput {
	return o.ApplyT(func(v *CloningInfoResponse) CloningInfoResponse { return *v }).(CloningInfoResponseOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoResponsePtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoResponsePtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoResponsePtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoResponsePtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoResponsePtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoResponsePtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoResponsePtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoResponsePtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Database connection string information.
type ConnStringInfo struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoInput is an input type that accepts ConnStringInfoArgs and ConnStringInfoOutput values.
// You can construct a concrete instance of `ConnStringInfoInput` via:
//
//          ConnStringInfoArgs{...}
type ConnStringInfoInput interface {
	pulumi.Input

	ToConnStringInfoOutput() ConnStringInfoOutput
	ToConnStringInfoOutputWithContext(context.Context) ConnStringInfoOutput
}

// Database connection string information.
type ConnStringInfoArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type ConnectionStringType `pulumi:"type"`
}

func (ConnStringInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArgs) ToConnStringInfoOutput() ConnStringInfoOutput {
	return i.ToConnStringInfoOutputWithContext(context.Background())
}

func (i ConnStringInfoArgs) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoOutput)
}

// ConnStringInfoArrayInput is an input type that accepts ConnStringInfoArray and ConnStringInfoArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoArrayInput` via:
//
//          ConnStringInfoArray{ ConnStringInfoArgs{...} }
type ConnStringInfoArrayInput interface {
	pulumi.Input

	ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput
	ToConnStringInfoArrayOutputWithContext(context.Context) ConnStringInfoArrayOutput
}

type ConnStringInfoArray []ConnStringInfoInput

func (ConnStringInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return i.ToConnStringInfoArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoArrayOutput)
}

// Database connection string information.
type ConnStringInfoOutput struct{ *pulumi.OutputState }

func (ConnStringInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoOutput) ToConnStringInfoOutput() ConnStringInfoOutput {
	return o
}

func (o ConnStringInfoOutput) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) Index(i pulumi.IntInput) ConnStringInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfo {
		return vs[0].([]ConnStringInfo)[vs[1].(int)]
	}).(ConnStringInfoOutput)
}

// Database connection string information.
type ConnStringInfoInvokeResponse struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoInvokeResponseInput is an input type that accepts ConnStringInfoInvokeResponseArgs and ConnStringInfoInvokeResponseOutput values.
// You can construct a concrete instance of `ConnStringInfoInvokeResponseInput` via:
//
//          ConnStringInfoInvokeResponseArgs{...}
type ConnStringInfoInvokeResponseInput interface {
	pulumi.Input

	ToConnStringInfoInvokeResponseOutput() ConnStringInfoInvokeResponseOutput
	ToConnStringInfoInvokeResponseOutputWithContext(context.Context) ConnStringInfoInvokeResponseOutput
}

// Database connection string information.
type ConnStringInfoInvokeResponseArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoInvokeResponse)(nil)).Elem()
}

func (i ConnStringInfoInvokeResponseArgs) ToConnStringInfoInvokeResponseOutput() ConnStringInfoInvokeResponseOutput {
	return i.ToConnStringInfoInvokeResponseOutputWithContext(context.Background())
}

func (i ConnStringInfoInvokeResponseArgs) ToConnStringInfoInvokeResponseOutputWithContext(ctx context.Context) ConnStringInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoInvokeResponseOutput)
}

// ConnStringInfoInvokeResponseArrayInput is an input type that accepts ConnStringInfoInvokeResponseArray and ConnStringInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoInvokeResponseArrayInput` via:
//
//          ConnStringInfoInvokeResponseArray{ ConnStringInfoInvokeResponseArgs{...} }
type ConnStringInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnStringInfoInvokeResponseArrayOutput() ConnStringInfoInvokeResponseArrayOutput
	ToConnStringInfoInvokeResponseArrayOutputWithContext(context.Context) ConnStringInfoInvokeResponseArrayOutput
}

type ConnStringInfoInvokeResponseArray []ConnStringInfoInvokeResponseInput

func (ConnStringInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoInvokeResponse)(nil)).Elem()
}

func (i ConnStringInfoInvokeResponseArray) ToConnStringInfoInvokeResponseArrayOutput() ConnStringInfoInvokeResponseArrayOutput {
	return i.ToConnStringInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoInvokeResponseArray) ToConnStringInfoInvokeResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoInvokeResponseArrayOutput)
}

// Database connection string information.
type ConnStringInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoInvokeResponse)(nil)).Elem()
}

func (o ConnStringInfoInvokeResponseOutput) ToConnStringInfoInvokeResponseOutput() ConnStringInfoInvokeResponseOutput {
	return o
}

func (o ConnStringInfoInvokeResponseOutput) ToConnStringInfoInvokeResponseOutputWithContext(ctx context.Context) ConnStringInfoInvokeResponseOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoInvokeResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoInvokeResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoInvokeResponse)(nil)).Elem()
}

func (o ConnStringInfoInvokeResponseArrayOutput) ToConnStringInfoInvokeResponseArrayOutput() ConnStringInfoInvokeResponseArrayOutput {
	return o
}

func (o ConnStringInfoInvokeResponseArrayOutput) ToConnStringInfoInvokeResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoInvokeResponseArrayOutput {
	return o
}

func (o ConnStringInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoInvokeResponse {
		return vs[0].([]ConnStringInfoInvokeResponse)[vs[1].(int)]
	}).(ConnStringInfoInvokeResponseOutput)
}

// Database connection string information.
type ConnStringInfoResponse struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// ConnStringInfoResponseInput is an input type that accepts ConnStringInfoResponseArgs and ConnStringInfoResponseOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseInput` via:
//
//          ConnStringInfoResponseArgs{...}
type ConnStringInfoResponseInput interface {
	pulumi.Input

	ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput
	ToConnStringInfoResponseOutputWithContext(context.Context) ConnStringInfoResponseOutput
}

// Database connection string information.
type ConnStringInfoResponseArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnStringInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return i.ToConnStringInfoResponseOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArgs) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseOutput)
}

// ConnStringInfoResponseArrayInput is an input type that accepts ConnStringInfoResponseArray and ConnStringInfoResponseArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoResponseArrayInput` via:
//
//          ConnStringInfoResponseArray{ ConnStringInfoResponseArgs{...} }
type ConnStringInfoResponseArrayInput interface {
	pulumi.Input

	ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput
	ToConnStringInfoResponseArrayOutputWithContext(context.Context) ConnStringInfoResponseArrayOutput
}

type ConnStringInfoResponseArray []ConnStringInfoResponseInput

func (ConnStringInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return i.ToConnStringInfoResponseArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoResponseArray) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoResponseArrayOutput)
}

// Database connection string information.
type ConnStringInfoResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return o
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoResponse {
		return vs[0].([]ConnStringInfoResponse)[vs[1].(int)]
	}).(ConnStringInfoResponseOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairInvokeResponse struct {
	// Type of database.
	Type string `pulumi:"type"`
	// Value of pair.
	Value string `pulumi:"value"`
}

// ConnStringValueTypePairInvokeResponseInput is an input type that accepts ConnStringValueTypePairInvokeResponseArgs and ConnStringValueTypePairInvokeResponseOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairInvokeResponseInput` via:
//
//          ConnStringValueTypePairInvokeResponseArgs{...}
type ConnStringValueTypePairInvokeResponseInput interface {
	pulumi.Input

	ToConnStringValueTypePairInvokeResponseOutput() ConnStringValueTypePairInvokeResponseOutput
	ToConnStringValueTypePairInvokeResponseOutputWithContext(context.Context) ConnStringValueTypePairInvokeResponseOutput
}

// Database connection string value to type pair.
type ConnStringValueTypePairInvokeResponseArgs struct {
	// Type of database.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnStringValueTypePairInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairInvokeResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairInvokeResponseArgs) ToConnStringValueTypePairInvokeResponseOutput() ConnStringValueTypePairInvokeResponseOutput {
	return i.ToConnStringValueTypePairInvokeResponseOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairInvokeResponseArgs) ToConnStringValueTypePairInvokeResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairInvokeResponseOutput)
}

// ConnStringValueTypePairInvokeResponseMapInput is an input type that accepts ConnStringValueTypePairInvokeResponseMap and ConnStringValueTypePairInvokeResponseMapOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairInvokeResponseMapInput` via:
//
//          ConnStringValueTypePairInvokeResponseMap{ "key": ConnStringValueTypePairInvokeResponseArgs{...} }
type ConnStringValueTypePairInvokeResponseMapInput interface {
	pulumi.Input

	ToConnStringValueTypePairInvokeResponseMapOutput() ConnStringValueTypePairInvokeResponseMapOutput
	ToConnStringValueTypePairInvokeResponseMapOutputWithContext(context.Context) ConnStringValueTypePairInvokeResponseMapOutput
}

type ConnStringValueTypePairInvokeResponseMap map[string]ConnStringValueTypePairInvokeResponseInput

func (ConnStringValueTypePairInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairInvokeResponse)(nil)).Elem()
}

func (i ConnStringValueTypePairInvokeResponseMap) ToConnStringValueTypePairInvokeResponseMapOutput() ConnStringValueTypePairInvokeResponseMapOutput {
	return i.ToConnStringValueTypePairInvokeResponseMapOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairInvokeResponseMap) ToConnStringValueTypePairInvokeResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairInvokeResponseMapOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairInvokeResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairInvokeResponseOutput) ToConnStringValueTypePairInvokeResponseOutput() ConnStringValueTypePairInvokeResponseOutput {
	return o
}

func (o ConnStringValueTypePairInvokeResponseOutput) ToConnStringValueTypePairInvokeResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairInvokeResponseOutput {
	return o
}

// Type of database.
func (o ConnStringValueTypePairInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Value of pair.
func (o ConnStringValueTypePairInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ConnStringValueTypePairInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairInvokeResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairInvokeResponseMapOutput) ToConnStringValueTypePairInvokeResponseMapOutput() ConnStringValueTypePairInvokeResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairInvokeResponseMapOutput) ToConnStringValueTypePairInvokeResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairInvokeResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) ConnStringValueTypePairInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnStringValueTypePairInvokeResponse {
		return vs[0].(map[string]ConnStringValueTypePairInvokeResponse)[vs[1].(string)]
	}).(ConnStringValueTypePairInvokeResponseOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettings struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsInput is an input type that accepts CorsSettingsArgs and CorsSettingsOutput values.
// You can construct a concrete instance of `CorsSettingsInput` via:
//
//          CorsSettingsArgs{...}
type CorsSettingsInput interface {
	pulumi.Input

	ToCorsSettingsOutput() CorsSettingsOutput
	ToCorsSettingsOutputWithContext(context.Context) CorsSettingsOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (i CorsSettingsArgs) ToCorsSettingsOutput() CorsSettingsOutput {
	return i.ToCorsSettingsOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput)
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput).ToCorsSettingsPtrOutputWithContext(ctx)
}

// CorsSettingsPtrInput is an input type that accepts CorsSettingsArgs, CorsSettingsPtr and CorsSettingsPtrOutput values.
// You can construct a concrete instance of `CorsSettingsPtrInput` via:
//
//          CorsSettingsArgs{...}
//
//  or:
//
//          nil
type CorsSettingsPtrInput interface {
	pulumi.Input

	ToCorsSettingsPtrOutput() CorsSettingsPtrOutput
	ToCorsSettingsPtrOutputWithContext(context.Context) CorsSettingsPtrOutput
}

type corsSettingsPtrType CorsSettingsArgs

func CorsSettingsPtr(v *CorsSettingsArgs) CorsSettingsPtrInput {
	return (*corsSettingsPtrType)(v)
}

func (*corsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsOutput struct{ *pulumi.OutputState }

func (CorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (o CorsSettingsOutput) ToCorsSettingsOutput() CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o.ApplyT(func(v CorsSettings) *CorsSettings {
		return &v
	}).(CorsSettingsPtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettings) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettings) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) Elem() CorsSettingsOutput {
	return o.ApplyT(func(v *CorsSettings) CorsSettings { return *v }).(CorsSettingsOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsInvokeResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsInvokeResponseInput is an input type that accepts CorsSettingsInvokeResponseArgs and CorsSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `CorsSettingsInvokeResponseInput` via:
//
//          CorsSettingsInvokeResponseArgs{...}
type CorsSettingsInvokeResponseInput interface {
	pulumi.Input

	ToCorsSettingsInvokeResponseOutput() CorsSettingsInvokeResponseOutput
	ToCorsSettingsInvokeResponseOutputWithContext(context.Context) CorsSettingsInvokeResponseOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsInvokeResponseArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsInvokeResponse)(nil)).Elem()
}

func (i CorsSettingsInvokeResponseArgs) ToCorsSettingsInvokeResponseOutput() CorsSettingsInvokeResponseOutput {
	return i.ToCorsSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i CorsSettingsInvokeResponseArgs) ToCorsSettingsInvokeResponseOutputWithContext(ctx context.Context) CorsSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsInvokeResponseOutput)
}

func (i CorsSettingsInvokeResponseArgs) ToCorsSettingsInvokeResponsePtrOutput() CorsSettingsInvokeResponsePtrOutput {
	return i.ToCorsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CorsSettingsInvokeResponseArgs) ToCorsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) CorsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsInvokeResponseOutput).ToCorsSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// CorsSettingsInvokeResponsePtrInput is an input type that accepts CorsSettingsInvokeResponseArgs, CorsSettingsInvokeResponsePtr and CorsSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CorsSettingsInvokeResponsePtrInput` via:
//
//          CorsSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CorsSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToCorsSettingsInvokeResponsePtrOutput() CorsSettingsInvokeResponsePtrOutput
	ToCorsSettingsInvokeResponsePtrOutputWithContext(context.Context) CorsSettingsInvokeResponsePtrOutput
}

type corsSettingsInvokeResponsePtrType CorsSettingsInvokeResponseArgs

func CorsSettingsInvokeResponsePtr(v *CorsSettingsInvokeResponseArgs) CorsSettingsInvokeResponsePtrInput {
	return (*corsSettingsInvokeResponsePtrType)(v)
}

func (*corsSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsInvokeResponse)(nil)).Elem()
}

func (i *corsSettingsInvokeResponsePtrType) ToCorsSettingsInvokeResponsePtrOutput() CorsSettingsInvokeResponsePtrOutput {
	return i.ToCorsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *corsSettingsInvokeResponsePtrType) ToCorsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) CorsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsInvokeResponsePtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsInvokeResponse)(nil)).Elem()
}

func (o CorsSettingsInvokeResponseOutput) ToCorsSettingsInvokeResponseOutput() CorsSettingsInvokeResponseOutput {
	return o
}

func (o CorsSettingsInvokeResponseOutput) ToCorsSettingsInvokeResponseOutputWithContext(ctx context.Context) CorsSettingsInvokeResponseOutput {
	return o
}

func (o CorsSettingsInvokeResponseOutput) ToCorsSettingsInvokeResponsePtrOutput() CorsSettingsInvokeResponsePtrOutput {
	return o.ToCorsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CorsSettingsInvokeResponseOutput) ToCorsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) CorsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v CorsSettingsInvokeResponse) *CorsSettingsInvokeResponse {
		return &v
	}).(CorsSettingsInvokeResponsePtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsInvokeResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsInvokeResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsInvokeResponseOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettingsInvokeResponse) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsInvokeResponse)(nil)).Elem()
}

func (o CorsSettingsInvokeResponsePtrOutput) ToCorsSettingsInvokeResponsePtrOutput() CorsSettingsInvokeResponsePtrOutput {
	return o
}

func (o CorsSettingsInvokeResponsePtrOutput) ToCorsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) CorsSettingsInvokeResponsePtrOutput {
	return o
}

func (o CorsSettingsInvokeResponsePtrOutput) Elem() CorsSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *CorsSettingsInvokeResponse) CorsSettingsInvokeResponse { return *v }).(CorsSettingsInvokeResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsInvokeResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsInvokeResponsePtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettingsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsResponseInput is an input type that accepts CorsSettingsResponseArgs and CorsSettingsResponseOutput values.
// You can construct a concrete instance of `CorsSettingsResponseInput` via:
//
//          CorsSettingsResponseArgs{...}
type CorsSettingsResponseInput interface {
	pulumi.Input

	ToCorsSettingsResponseOutput() CorsSettingsResponseOutput
	ToCorsSettingsResponseOutputWithContext(context.Context) CorsSettingsResponseOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return i.ToCorsSettingsResponseOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput)
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i CorsSettingsResponseArgs) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponseOutput).ToCorsSettingsResponsePtrOutputWithContext(ctx)
}

// CorsSettingsResponsePtrInput is an input type that accepts CorsSettingsResponseArgs, CorsSettingsResponsePtr and CorsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `CorsSettingsResponsePtrInput` via:
//
//          CorsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type CorsSettingsResponsePtrInput interface {
	pulumi.Input

	ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput
	ToCorsSettingsResponsePtrOutputWithContext(context.Context) CorsSettingsResponsePtrOutput
}

type corsSettingsResponsePtrType CorsSettingsResponseArgs

func CorsSettingsResponsePtr(v *CorsSettingsResponseArgs) CorsSettingsResponsePtrInput {
	return (*corsSettingsResponsePtrType)(v)
}

func (*corsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return i.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *corsSettingsResponsePtrType) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsResponsePtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o.ToCorsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *CorsSettingsResponse {
		return &v
	}).(CorsSettingsResponsePtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponseOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) Elem() CorsSettingsResponseOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) CorsSettingsResponse { return *v }).(CorsSettingsResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponsePtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Database backup settings.
type DatabaseBackupSettingInvoke struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInvokeInput is an input type that accepts DatabaseBackupSettingInvokeArgs and DatabaseBackupSettingInvokeOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInvokeInput` via:
//
//          DatabaseBackupSettingInvokeArgs{...}
type DatabaseBackupSettingInvokeInput interface {
	pulumi.Input

	ToDatabaseBackupSettingInvokeOutput() DatabaseBackupSettingInvokeOutput
	ToDatabaseBackupSettingInvokeOutputWithContext(context.Context) DatabaseBackupSettingInvokeOutput
}

// Database backup settings.
type DatabaseBackupSettingInvokeArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingInvokeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingInvoke)(nil)).Elem()
}

func (i DatabaseBackupSettingInvokeArgs) ToDatabaseBackupSettingInvokeOutput() DatabaseBackupSettingInvokeOutput {
	return i.ToDatabaseBackupSettingInvokeOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingInvokeArgs) ToDatabaseBackupSettingInvokeOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingInvokeOutput)
}

// DatabaseBackupSettingInvokeArrayInput is an input type that accepts DatabaseBackupSettingInvokeArray and DatabaseBackupSettingInvokeArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInvokeArrayInput` via:
//
//          DatabaseBackupSettingInvokeArray{ DatabaseBackupSettingInvokeArgs{...} }
type DatabaseBackupSettingInvokeArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingInvokeArrayOutput() DatabaseBackupSettingInvokeArrayOutput
	ToDatabaseBackupSettingInvokeArrayOutputWithContext(context.Context) DatabaseBackupSettingInvokeArrayOutput
}

type DatabaseBackupSettingInvokeArray []DatabaseBackupSettingInvokeInput

func (DatabaseBackupSettingInvokeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingInvoke)(nil)).Elem()
}

func (i DatabaseBackupSettingInvokeArray) ToDatabaseBackupSettingInvokeArrayOutput() DatabaseBackupSettingInvokeArrayOutput {
	return i.ToDatabaseBackupSettingInvokeArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingInvokeArray) ToDatabaseBackupSettingInvokeArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingInvokeArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingInvokeOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingInvokeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingInvoke)(nil)).Elem()
}

func (o DatabaseBackupSettingInvokeOutput) ToDatabaseBackupSettingInvokeOutput() DatabaseBackupSettingInvokeOutput {
	return o
}

func (o DatabaseBackupSettingInvokeOutput) ToDatabaseBackupSettingInvokeOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingInvokeOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvoke) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingInvokeOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvoke) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingInvokeOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvoke) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingInvokeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvoke) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingInvokeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingInvokeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingInvoke)(nil)).Elem()
}

func (o DatabaseBackupSettingInvokeArrayOutput) ToDatabaseBackupSettingInvokeArrayOutput() DatabaseBackupSettingInvokeArrayOutput {
	return o
}

func (o DatabaseBackupSettingInvokeArrayOutput) ToDatabaseBackupSettingInvokeArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeArrayOutput {
	return o
}

func (o DatabaseBackupSettingInvokeArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingInvokeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingInvoke {
		return vs[0].([]DatabaseBackupSettingInvoke)[vs[1].(int)]
	}).(DatabaseBackupSettingInvokeOutput)
}

// Database backup settings.
type DatabaseBackupSettingInvokeResponse struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInvokeResponseInput is an input type that accepts DatabaseBackupSettingInvokeResponseArgs and DatabaseBackupSettingInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInvokeResponseInput` via:
//
//          DatabaseBackupSettingInvokeResponseArgs{...}
type DatabaseBackupSettingInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseBackupSettingInvokeResponseOutput() DatabaseBackupSettingInvokeResponseOutput
	ToDatabaseBackupSettingInvokeResponseOutputWithContext(context.Context) DatabaseBackupSettingInvokeResponseOutput
}

// Database backup settings.
type DatabaseBackupSettingInvokeResponseArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingInvokeResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingInvokeResponseArgs) ToDatabaseBackupSettingInvokeResponseOutput() DatabaseBackupSettingInvokeResponseOutput {
	return i.ToDatabaseBackupSettingInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingInvokeResponseArgs) ToDatabaseBackupSettingInvokeResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingInvokeResponseOutput)
}

// DatabaseBackupSettingInvokeResponseArrayInput is an input type that accepts DatabaseBackupSettingInvokeResponseArray and DatabaseBackupSettingInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInvokeResponseArrayInput` via:
//
//          DatabaseBackupSettingInvokeResponseArray{ DatabaseBackupSettingInvokeResponseArgs{...} }
type DatabaseBackupSettingInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingInvokeResponseArrayOutput() DatabaseBackupSettingInvokeResponseArrayOutput
	ToDatabaseBackupSettingInvokeResponseArrayOutputWithContext(context.Context) DatabaseBackupSettingInvokeResponseArrayOutput
}

type DatabaseBackupSettingInvokeResponseArray []DatabaseBackupSettingInvokeResponseInput

func (DatabaseBackupSettingInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingInvokeResponse)(nil)).Elem()
}

func (i DatabaseBackupSettingInvokeResponseArray) ToDatabaseBackupSettingInvokeResponseArrayOutput() DatabaseBackupSettingInvokeResponseArrayOutput {
	return i.ToDatabaseBackupSettingInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingInvokeResponseArray) ToDatabaseBackupSettingInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingInvokeResponseArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingInvokeResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingInvokeResponseOutput) ToDatabaseBackupSettingInvokeResponseOutput() DatabaseBackupSettingInvokeResponseOutput {
	return o
}

func (o DatabaseBackupSettingInvokeResponseOutput) ToDatabaseBackupSettingInvokeResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeResponseOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingInvokeResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvokeResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingInvokeResponseOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvokeResponse) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingInvokeResponseOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvokeResponse) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingInvokeResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingInvokeResponseArrayOutput) ToDatabaseBackupSettingInvokeResponseArrayOutput() DatabaseBackupSettingInvokeResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingInvokeResponseArrayOutput) ToDatabaseBackupSettingInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingInvokeResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingInvokeResponse {
		return vs[0].([]DatabaseBackupSettingInvokeResponse)[vs[1].(int)]
	}).(DatabaseBackupSettingInvokeResponseOutput)
}

// Enabled configuration.
type EnabledConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
}

// EnabledConfigInput is an input type that accepts EnabledConfigArgs and EnabledConfigOutput values.
// You can construct a concrete instance of `EnabledConfigInput` via:
//
//          EnabledConfigArgs{...}
type EnabledConfigInput interface {
	pulumi.Input

	ToEnabledConfigOutput() EnabledConfigOutput
	ToEnabledConfigOutputWithContext(context.Context) EnabledConfigOutput
}

// Enabled configuration.
type EnabledConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EnabledConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfig)(nil)).Elem()
}

func (i EnabledConfigArgs) ToEnabledConfigOutput() EnabledConfigOutput {
	return i.ToEnabledConfigOutputWithContext(context.Background())
}

func (i EnabledConfigArgs) ToEnabledConfigOutputWithContext(ctx context.Context) EnabledConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigOutput)
}

func (i EnabledConfigArgs) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return i.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (i EnabledConfigArgs) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigOutput).ToEnabledConfigPtrOutputWithContext(ctx)
}

// EnabledConfigPtrInput is an input type that accepts EnabledConfigArgs, EnabledConfigPtr and EnabledConfigPtrOutput values.
// You can construct a concrete instance of `EnabledConfigPtrInput` via:
//
//          EnabledConfigArgs{...}
//
//  or:
//
//          nil
type EnabledConfigPtrInput interface {
	pulumi.Input

	ToEnabledConfigPtrOutput() EnabledConfigPtrOutput
	ToEnabledConfigPtrOutputWithContext(context.Context) EnabledConfigPtrOutput
}

type enabledConfigPtrType EnabledConfigArgs

func EnabledConfigPtr(v *EnabledConfigArgs) EnabledConfigPtrInput {
	return (*enabledConfigPtrType)(v)
}

func (*enabledConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfig)(nil)).Elem()
}

func (i *enabledConfigPtrType) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return i.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (i *enabledConfigPtrType) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigPtrOutput)
}

// Enabled configuration.
type EnabledConfigOutput struct{ *pulumi.OutputState }

func (EnabledConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfig)(nil)).Elem()
}

func (o EnabledConfigOutput) ToEnabledConfigOutput() EnabledConfigOutput {
	return o
}

func (o EnabledConfigOutput) ToEnabledConfigOutputWithContext(ctx context.Context) EnabledConfigOutput {
	return o
}

func (o EnabledConfigOutput) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return o.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (o EnabledConfigOutput) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return o.ApplyT(func(v EnabledConfig) *EnabledConfig {
		return &v
	}).(EnabledConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnabledConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EnabledConfigPtrOutput struct{ *pulumi.OutputState }

func (EnabledConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfig)(nil)).Elem()
}

func (o EnabledConfigPtrOutput) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return o
}

func (o EnabledConfigPtrOutput) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return o
}

func (o EnabledConfigPtrOutput) Elem() EnabledConfigOutput {
	return o.ApplyT(func(v *EnabledConfig) EnabledConfig { return *v }).(EnabledConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnabledConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enabled configuration.
type EnabledConfigInvokeResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
}

// EnabledConfigInvokeResponseInput is an input type that accepts EnabledConfigInvokeResponseArgs and EnabledConfigInvokeResponseOutput values.
// You can construct a concrete instance of `EnabledConfigInvokeResponseInput` via:
//
//          EnabledConfigInvokeResponseArgs{...}
type EnabledConfigInvokeResponseInput interface {
	pulumi.Input

	ToEnabledConfigInvokeResponseOutput() EnabledConfigInvokeResponseOutput
	ToEnabledConfigInvokeResponseOutputWithContext(context.Context) EnabledConfigInvokeResponseOutput
}

// Enabled configuration.
type EnabledConfigInvokeResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EnabledConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfigInvokeResponse)(nil)).Elem()
}

func (i EnabledConfigInvokeResponseArgs) ToEnabledConfigInvokeResponseOutput() EnabledConfigInvokeResponseOutput {
	return i.ToEnabledConfigInvokeResponseOutputWithContext(context.Background())
}

func (i EnabledConfigInvokeResponseArgs) ToEnabledConfigInvokeResponseOutputWithContext(ctx context.Context) EnabledConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigInvokeResponseOutput)
}

// Enabled configuration.
type EnabledConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (EnabledConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfigInvokeResponse)(nil)).Elem()
}

func (o EnabledConfigInvokeResponseOutput) ToEnabledConfigInvokeResponseOutput() EnabledConfigInvokeResponseOutput {
	return o
}

func (o EnabledConfigInvokeResponseOutput) ToEnabledConfigInvokeResponseOutputWithContext(ctx context.Context) EnabledConfigInvokeResponseOutput {
	return o
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnabledConfigInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enabled configuration.
type EnabledConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
}

// EnabledConfigResponseInput is an input type that accepts EnabledConfigResponseArgs and EnabledConfigResponseOutput values.
// You can construct a concrete instance of `EnabledConfigResponseInput` via:
//
//          EnabledConfigResponseArgs{...}
type EnabledConfigResponseInput interface {
	pulumi.Input

	ToEnabledConfigResponseOutput() EnabledConfigResponseOutput
	ToEnabledConfigResponseOutputWithContext(context.Context) EnabledConfigResponseOutput
}

// Enabled configuration.
type EnabledConfigResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EnabledConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfigResponse)(nil)).Elem()
}

func (i EnabledConfigResponseArgs) ToEnabledConfigResponseOutput() EnabledConfigResponseOutput {
	return i.ToEnabledConfigResponseOutputWithContext(context.Background())
}

func (i EnabledConfigResponseArgs) ToEnabledConfigResponseOutputWithContext(ctx context.Context) EnabledConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigResponseOutput)
}

func (i EnabledConfigResponseArgs) ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput {
	return i.ToEnabledConfigResponsePtrOutputWithContext(context.Background())
}

func (i EnabledConfigResponseArgs) ToEnabledConfigResponsePtrOutputWithContext(ctx context.Context) EnabledConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigResponseOutput).ToEnabledConfigResponsePtrOutputWithContext(ctx)
}

// EnabledConfigResponsePtrInput is an input type that accepts EnabledConfigResponseArgs, EnabledConfigResponsePtr and EnabledConfigResponsePtrOutput values.
// You can construct a concrete instance of `EnabledConfigResponsePtrInput` via:
//
//          EnabledConfigResponseArgs{...}
//
//  or:
//
//          nil
type EnabledConfigResponsePtrInput interface {
	pulumi.Input

	ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput
	ToEnabledConfigResponsePtrOutputWithContext(context.Context) EnabledConfigResponsePtrOutput
}

type enabledConfigResponsePtrType EnabledConfigResponseArgs

func EnabledConfigResponsePtr(v *EnabledConfigResponseArgs) EnabledConfigResponsePtrInput {
	return (*enabledConfigResponsePtrType)(v)
}

func (*enabledConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfigResponse)(nil)).Elem()
}

func (i *enabledConfigResponsePtrType) ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput {
	return i.ToEnabledConfigResponsePtrOutputWithContext(context.Background())
}

func (i *enabledConfigResponsePtrType) ToEnabledConfigResponsePtrOutputWithContext(ctx context.Context) EnabledConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigResponsePtrOutput)
}

// Enabled configuration.
type EnabledConfigResponseOutput struct{ *pulumi.OutputState }

func (EnabledConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfigResponse)(nil)).Elem()
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponseOutput() EnabledConfigResponseOutput {
	return o
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponseOutputWithContext(ctx context.Context) EnabledConfigResponseOutput {
	return o
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput {
	return o.ToEnabledConfigResponsePtrOutputWithContext(context.Background())
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponsePtrOutputWithContext(ctx context.Context) EnabledConfigResponsePtrOutput {
	return o.ApplyT(func(v EnabledConfigResponse) *EnabledConfigResponse {
		return &v
	}).(EnabledConfigResponsePtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnabledConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EnabledConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (EnabledConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfigResponse)(nil)).Elem()
}

func (o EnabledConfigResponsePtrOutput) ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput {
	return o
}

func (o EnabledConfigResponsePtrOutput) ToEnabledConfigResponsePtrOutputWithContext(ctx context.Context) EnabledConfigResponsePtrOutput {
	return o
}

func (o EnabledConfigResponsePtrOutput) Elem() EnabledConfigResponseOutput {
	return o.ApplyT(func(v *EnabledConfigResponse) EnabledConfigResponse { return *v }).(EnabledConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnabledConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Routing rules in production experiments.
type Experiments struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRule `pulumi:"rampUpRules"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//          ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

// Routing rules in production experiments.
type ExperimentsArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

func (i ExperimentsArgs) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput).ToExperimentsPtrOutputWithContext(ctx)
}

// ExperimentsPtrInput is an input type that accepts ExperimentsArgs, ExperimentsPtr and ExperimentsPtrOutput values.
// You can construct a concrete instance of `ExperimentsPtrInput` via:
//
//          ExperimentsArgs{...}
//
//  or:
//
//          nil
type ExperimentsPtrInput interface {
	pulumi.Input

	ToExperimentsPtrOutput() ExperimentsPtrOutput
	ToExperimentsPtrOutputWithContext(context.Context) ExperimentsPtrOutput
}

type experimentsPtrType ExperimentsArgs

func ExperimentsPtr(v *ExperimentsArgs) ExperimentsPtrInput {
	return (*experimentsPtrType)(v)
}

func (*experimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (i *experimentsPtrType) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i *experimentsPtrType) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsPtrOutput)
}

// Routing rules in production experiments.
type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o.ToExperimentsPtrOutputWithContext(context.Background())
}

func (o ExperimentsOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o.ApplyT(func(v Experiments) *Experiments {
		return &v
	}).(ExperimentsPtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v Experiments) []RampUpRule { return v.RampUpRules }).(RampUpRuleArrayOutput)
}

type ExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) Elem() ExperimentsOutput {
	return o.ApplyT(func(v *Experiments) Experiments { return *v }).(ExperimentsOutput)
}

// List of ramp-up rules.
func (o ExperimentsPtrOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v *Experiments) []RampUpRule {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleArrayOutput)
}

// Routing rules in production experiments.
type ExperimentsInvokeResponse struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRuleInvokeResponse `pulumi:"rampUpRules"`
}

// ExperimentsInvokeResponseInput is an input type that accepts ExperimentsInvokeResponseArgs and ExperimentsInvokeResponseOutput values.
// You can construct a concrete instance of `ExperimentsInvokeResponseInput` via:
//
//          ExperimentsInvokeResponseArgs{...}
type ExperimentsInvokeResponseInput interface {
	pulumi.Input

	ToExperimentsInvokeResponseOutput() ExperimentsInvokeResponseOutput
	ToExperimentsInvokeResponseOutputWithContext(context.Context) ExperimentsInvokeResponseOutput
}

// Routing rules in production experiments.
type ExperimentsInvokeResponseArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleInvokeResponseArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsInvokeResponse)(nil)).Elem()
}

func (i ExperimentsInvokeResponseArgs) ToExperimentsInvokeResponseOutput() ExperimentsInvokeResponseOutput {
	return i.ToExperimentsInvokeResponseOutputWithContext(context.Background())
}

func (i ExperimentsInvokeResponseArgs) ToExperimentsInvokeResponseOutputWithContext(ctx context.Context) ExperimentsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsInvokeResponseOutput)
}

func (i ExperimentsInvokeResponseArgs) ToExperimentsInvokeResponsePtrOutput() ExperimentsInvokeResponsePtrOutput {
	return i.ToExperimentsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ExperimentsInvokeResponseArgs) ToExperimentsInvokeResponsePtrOutputWithContext(ctx context.Context) ExperimentsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsInvokeResponseOutput).ToExperimentsInvokeResponsePtrOutputWithContext(ctx)
}

// ExperimentsInvokeResponsePtrInput is an input type that accepts ExperimentsInvokeResponseArgs, ExperimentsInvokeResponsePtr and ExperimentsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ExperimentsInvokeResponsePtrInput` via:
//
//          ExperimentsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ExperimentsInvokeResponsePtrInput interface {
	pulumi.Input

	ToExperimentsInvokeResponsePtrOutput() ExperimentsInvokeResponsePtrOutput
	ToExperimentsInvokeResponsePtrOutputWithContext(context.Context) ExperimentsInvokeResponsePtrOutput
}

type experimentsInvokeResponsePtrType ExperimentsInvokeResponseArgs

func ExperimentsInvokeResponsePtr(v *ExperimentsInvokeResponseArgs) ExperimentsInvokeResponsePtrInput {
	return (*experimentsInvokeResponsePtrType)(v)
}

func (*experimentsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsInvokeResponse)(nil)).Elem()
}

func (i *experimentsInvokeResponsePtrType) ToExperimentsInvokeResponsePtrOutput() ExperimentsInvokeResponsePtrOutput {
	return i.ToExperimentsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *experimentsInvokeResponsePtrType) ToExperimentsInvokeResponsePtrOutputWithContext(ctx context.Context) ExperimentsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsInvokeResponsePtrOutput)
}

// Routing rules in production experiments.
type ExperimentsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsInvokeResponse)(nil)).Elem()
}

func (o ExperimentsInvokeResponseOutput) ToExperimentsInvokeResponseOutput() ExperimentsInvokeResponseOutput {
	return o
}

func (o ExperimentsInvokeResponseOutput) ToExperimentsInvokeResponseOutputWithContext(ctx context.Context) ExperimentsInvokeResponseOutput {
	return o
}

func (o ExperimentsInvokeResponseOutput) ToExperimentsInvokeResponsePtrOutput() ExperimentsInvokeResponsePtrOutput {
	return o.ToExperimentsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ExperimentsInvokeResponseOutput) ToExperimentsInvokeResponsePtrOutputWithContext(ctx context.Context) ExperimentsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ExperimentsInvokeResponse) *ExperimentsInvokeResponse {
		return &v
	}).(ExperimentsInvokeResponsePtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsInvokeResponseOutput) RampUpRules() RampUpRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsInvokeResponse) []RampUpRuleInvokeResponse { return v.RampUpRules }).(RampUpRuleInvokeResponseArrayOutput)
}

type ExperimentsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsInvokeResponse)(nil)).Elem()
}

func (o ExperimentsInvokeResponsePtrOutput) ToExperimentsInvokeResponsePtrOutput() ExperimentsInvokeResponsePtrOutput {
	return o
}

func (o ExperimentsInvokeResponsePtrOutput) ToExperimentsInvokeResponsePtrOutputWithContext(ctx context.Context) ExperimentsInvokeResponsePtrOutput {
	return o
}

func (o ExperimentsInvokeResponsePtrOutput) Elem() ExperimentsInvokeResponseOutput {
	return o.ApplyT(func(v *ExperimentsInvokeResponse) ExperimentsInvokeResponse { return *v }).(ExperimentsInvokeResponseOutput)
}

// List of ramp-up rules.
func (o ExperimentsInvokeResponsePtrOutput) RampUpRules() RampUpRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsInvokeResponse) []RampUpRuleInvokeResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleInvokeResponseArrayOutput)
}

// Routing rules in production experiments.
type ExperimentsResponse struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRuleResponse `pulumi:"rampUpRules"`
}

// ExperimentsResponseInput is an input type that accepts ExperimentsResponseArgs and ExperimentsResponseOutput values.
// You can construct a concrete instance of `ExperimentsResponseInput` via:
//
//          ExperimentsResponseArgs{...}
type ExperimentsResponseInput interface {
	pulumi.Input

	ToExperimentsResponseOutput() ExperimentsResponseOutput
	ToExperimentsResponseOutputWithContext(context.Context) ExperimentsResponseOutput
}

// Routing rules in production experiments.
type ExperimentsResponseArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleResponseArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return i.ToExperimentsResponseOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput)
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i ExperimentsResponseArgs) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponseOutput).ToExperimentsResponsePtrOutputWithContext(ctx)
}

// ExperimentsResponsePtrInput is an input type that accepts ExperimentsResponseArgs, ExperimentsResponsePtr and ExperimentsResponsePtrOutput values.
// You can construct a concrete instance of `ExperimentsResponsePtrInput` via:
//
//          ExperimentsResponseArgs{...}
//
//  or:
//
//          nil
type ExperimentsResponsePtrInput interface {
	pulumi.Input

	ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput
	ToExperimentsResponsePtrOutputWithContext(context.Context) ExperimentsResponsePtrOutput
}

type experimentsResponsePtrType ExperimentsResponseArgs

func ExperimentsResponsePtr(v *ExperimentsResponseArgs) ExperimentsResponsePtrInput {
	return (*experimentsResponsePtrType)(v)
}

func (*experimentsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return i.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (i *experimentsResponsePtrType) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsResponsePtrOutput)
}

// Routing rules in production experiments.
type ExperimentsResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o.ToExperimentsResponsePtrOutputWithContext(context.Background())
}

func (o ExperimentsResponseOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v ExperimentsResponse) *ExperimentsResponse {
		return &v
	}).(ExperimentsResponsePtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponseOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsResponse) []RampUpRuleResponse { return v.RampUpRules }).(RampUpRuleResponseArrayOutput)
}

type ExperimentsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) Elem() ExperimentsResponseOutput {
	return o.ApplyT(func(v *ExperimentsResponse) ExperimentsResponse { return *v }).(ExperimentsResponseOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponsePtrOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsResponse) []RampUpRuleResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleResponseArrayOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfig struct {
	// Log level.
	Level *string `pulumi:"level"`
}

// FileSystemApplicationLogsConfigInput is an input type that accepts FileSystemApplicationLogsConfigArgs and FileSystemApplicationLogsConfigOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigInput` via:
//
//          FileSystemApplicationLogsConfigArgs{...}
type FileSystemApplicationLogsConfigInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput
	ToFileSystemApplicationLogsConfigOutputWithContext(context.Context) FileSystemApplicationLogsConfigOutput
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevel `pulumi:"level"`
}

func (FileSystemApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput {
	return i.ToFileSystemApplicationLogsConfigOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigOutput)
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return i.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigOutput).ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx)
}

// FileSystemApplicationLogsConfigPtrInput is an input type that accepts FileSystemApplicationLogsConfigArgs, FileSystemApplicationLogsConfigPtr and FileSystemApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigPtrInput` via:
//
//          FileSystemApplicationLogsConfigArgs{...}
//
//  or:
//
//          nil
type FileSystemApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput
	ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Context) FileSystemApplicationLogsConfigPtrOutput
}

type fileSystemApplicationLogsConfigPtrType FileSystemApplicationLogsConfigArgs

func FileSystemApplicationLogsConfigPtr(v *FileSystemApplicationLogsConfigArgs) FileSystemApplicationLogsConfigPtrInput {
	return (*fileSystemApplicationLogsConfigPtrType)(v)
}

func (*fileSystemApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (i *fileSystemApplicationLogsConfigPtrType) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return i.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *fileSystemApplicationLogsConfigPtrType) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput {
	return o
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigOutput {
	return o
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return o.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfig) *FileSystemApplicationLogsConfig {
		return &v
	}).(FileSystemApplicationLogsConfigPtrOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfig) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type FileSystemApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigPtrOutput) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigPtrOutput) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigPtrOutput) Elem() FileSystemApplicationLogsConfigOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfig) FileSystemApplicationLogsConfig { return *v }).(FileSystemApplicationLogsConfigOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigInvokeResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
}

// FileSystemApplicationLogsConfigInvokeResponseInput is an input type that accepts FileSystemApplicationLogsConfigInvokeResponseArgs and FileSystemApplicationLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigInvokeResponseInput` via:
//
//          FileSystemApplicationLogsConfigInvokeResponseArgs{...}
type FileSystemApplicationLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigInvokeResponseOutput() FileSystemApplicationLogsConfigInvokeResponseOutput
	ToFileSystemApplicationLogsConfigInvokeResponseOutputWithContext(context.Context) FileSystemApplicationLogsConfigInvokeResponseOutput
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigInvokeResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (FileSystemApplicationLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i FileSystemApplicationLogsConfigInvokeResponseArgs) ToFileSystemApplicationLogsConfigInvokeResponseOutput() FileSystemApplicationLogsConfigInvokeResponseOutput {
	return i.ToFileSystemApplicationLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigInvokeResponseArgs) ToFileSystemApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigInvokeResponseOutput)
}

func (i FileSystemApplicationLogsConfigInvokeResponseArgs) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutput() FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigInvokeResponseArgs) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigInvokeResponseOutput).ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx)
}

// FileSystemApplicationLogsConfigInvokeResponsePtrInput is an input type that accepts FileSystemApplicationLogsConfigInvokeResponseArgs, FileSystemApplicationLogsConfigInvokeResponsePtr and FileSystemApplicationLogsConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigInvokeResponsePtrInput` via:
//
//          FileSystemApplicationLogsConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FileSystemApplicationLogsConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigInvokeResponsePtrOutput() FileSystemApplicationLogsConfigInvokeResponsePtrOutput
	ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Context) FileSystemApplicationLogsConfigInvokeResponsePtrOutput
}

type fileSystemApplicationLogsConfigInvokeResponsePtrType FileSystemApplicationLogsConfigInvokeResponseArgs

func FileSystemApplicationLogsConfigInvokeResponsePtr(v *FileSystemApplicationLogsConfigInvokeResponseArgs) FileSystemApplicationLogsConfigInvokeResponsePtrInput {
	return (*fileSystemApplicationLogsConfigInvokeResponsePtrType)(v)
}

func (*fileSystemApplicationLogsConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (i *fileSystemApplicationLogsConfigInvokeResponsePtrType) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutput() FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return i.ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *fileSystemApplicationLogsConfigInvokeResponsePtrType) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigInvokeResponsePtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigInvokeResponseOutput) ToFileSystemApplicationLogsConfigInvokeResponseOutput() FileSystemApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o FileSystemApplicationLogsConfigInvokeResponseOutput) ToFileSystemApplicationLogsConfigInvokeResponseOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponseOutput {
	return o
}

func (o FileSystemApplicationLogsConfigInvokeResponseOutput) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutput() FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FileSystemApplicationLogsConfigInvokeResponseOutput) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfigInvokeResponse) *FileSystemApplicationLogsConfigInvokeResponse {
		return &v
	}).(FileSystemApplicationLogsConfigInvokeResponsePtrOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigInvokeResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfigInvokeResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type FileSystemApplicationLogsConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfigInvokeResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigInvokeResponsePtrOutput) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutput() FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigInvokeResponsePtrOutput) ToFileSystemApplicationLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigInvokeResponsePtrOutput) Elem() FileSystemApplicationLogsConfigInvokeResponseOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigInvokeResponse) FileSystemApplicationLogsConfigInvokeResponse {
		return *v
	}).(FileSystemApplicationLogsConfigInvokeResponseOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigInvokeResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
}

// FileSystemApplicationLogsConfigResponseInput is an input type that accepts FileSystemApplicationLogsConfigResponseArgs and FileSystemApplicationLogsConfigResponseOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigResponseInput` via:
//
//          FileSystemApplicationLogsConfigResponseArgs{...}
type FileSystemApplicationLogsConfigResponseInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigResponseOutput() FileSystemApplicationLogsConfigResponseOutput
	ToFileSystemApplicationLogsConfigResponseOutputWithContext(context.Context) FileSystemApplicationLogsConfigResponseOutput
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigResponseArgs struct {
	// Log level.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (FileSystemApplicationLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (i FileSystemApplicationLogsConfigResponseArgs) ToFileSystemApplicationLogsConfigResponseOutput() FileSystemApplicationLogsConfigResponseOutput {
	return i.ToFileSystemApplicationLogsConfigResponseOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigResponseArgs) ToFileSystemApplicationLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigResponseOutput)
}

func (i FileSystemApplicationLogsConfigResponseArgs) ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput {
	return i.ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigResponseArgs) ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigResponseOutput).ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx)
}

// FileSystemApplicationLogsConfigResponsePtrInput is an input type that accepts FileSystemApplicationLogsConfigResponseArgs, FileSystemApplicationLogsConfigResponsePtr and FileSystemApplicationLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigResponsePtrInput` via:
//
//          FileSystemApplicationLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type FileSystemApplicationLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput
	ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(context.Context) FileSystemApplicationLogsConfigResponsePtrOutput
}

type fileSystemApplicationLogsConfigResponsePtrType FileSystemApplicationLogsConfigResponseArgs

func FileSystemApplicationLogsConfigResponsePtr(v *FileSystemApplicationLogsConfigResponseArgs) FileSystemApplicationLogsConfigResponsePtrInput {
	return (*fileSystemApplicationLogsConfigResponsePtrType)(v)
}

func (*fileSystemApplicationLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (i *fileSystemApplicationLogsConfigResponsePtrType) ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput {
	return i.ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *fileSystemApplicationLogsConfigResponsePtrType) ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponseOutput() FileSystemApplicationLogsConfigResponseOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponseOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfigResponse) *FileSystemApplicationLogsConfigResponse {
		return &v
	}).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type FileSystemApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) Elem() FileSystemApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigResponse) FileSystemApplicationLogsConfigResponse { return *v }).(FileSystemApplicationLogsConfigResponseOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb *int `pulumi:"retentionInMb"`
}

// FileSystemHttpLogsConfigInput is an input type that accepts FileSystemHttpLogsConfigArgs and FileSystemHttpLogsConfigOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigInput` via:
//
//          FileSystemHttpLogsConfigArgs{...}
type FileSystemHttpLogsConfigInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput
	ToFileSystemHttpLogsConfigOutputWithContext(context.Context) FileSystemHttpLogsConfigOutput
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb pulumi.IntPtrInput `pulumi:"retentionInMb"`
}

func (FileSystemHttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfig)(nil)).Elem()
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput {
	return i.ToFileSystemHttpLogsConfigOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigOutput)
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return i.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigOutput).ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx)
}

// FileSystemHttpLogsConfigPtrInput is an input type that accepts FileSystemHttpLogsConfigArgs, FileSystemHttpLogsConfigPtr and FileSystemHttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigPtrInput` via:
//
//          FileSystemHttpLogsConfigArgs{...}
//
//  or:
//
//          nil
type FileSystemHttpLogsConfigPtrInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput
	ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Context) FileSystemHttpLogsConfigPtrOutput
}

type fileSystemHttpLogsConfigPtrType FileSystemHttpLogsConfigArgs

func FileSystemHttpLogsConfigPtr(v *FileSystemHttpLogsConfigArgs) FileSystemHttpLogsConfigPtrInput {
	return (*fileSystemHttpLogsConfigPtrType)(v)
}

func (*fileSystemHttpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfig)(nil)).Elem()
}

func (i *fileSystemHttpLogsConfigPtrType) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return i.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *fileSystemHttpLogsConfigPtrType) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfig)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput {
	return o
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigOutput {
	return o
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return o.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *FileSystemHttpLogsConfig {
		return &v
	}).(FileSystemHttpLogsConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *int { return v.RetentionInMb }).(pulumi.IntPtrOutput)
}

type FileSystemHttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfig)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigPtrOutput) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigPtrOutput) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigPtrOutput) Elem() FileSystemHttpLogsConfigOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) FileSystemHttpLogsConfig { return *v }).(FileSystemHttpLogsConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigPtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigInvokeResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb *int `pulumi:"retentionInMb"`
}

// FileSystemHttpLogsConfigInvokeResponseInput is an input type that accepts FileSystemHttpLogsConfigInvokeResponseArgs and FileSystemHttpLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigInvokeResponseInput` via:
//
//          FileSystemHttpLogsConfigInvokeResponseArgs{...}
type FileSystemHttpLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigInvokeResponseOutput() FileSystemHttpLogsConfigInvokeResponseOutput
	ToFileSystemHttpLogsConfigInvokeResponseOutputWithContext(context.Context) FileSystemHttpLogsConfigInvokeResponseOutput
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigInvokeResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb pulumi.IntPtrInput `pulumi:"retentionInMb"`
}

func (FileSystemHttpLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (i FileSystemHttpLogsConfigInvokeResponseArgs) ToFileSystemHttpLogsConfigInvokeResponseOutput() FileSystemHttpLogsConfigInvokeResponseOutput {
	return i.ToFileSystemHttpLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigInvokeResponseArgs) ToFileSystemHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigInvokeResponseOutput)
}

func (i FileSystemHttpLogsConfigInvokeResponseArgs) ToFileSystemHttpLogsConfigInvokeResponsePtrOutput() FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return i.ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigInvokeResponseArgs) ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigInvokeResponseOutput).ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx)
}

// FileSystemHttpLogsConfigInvokeResponsePtrInput is an input type that accepts FileSystemHttpLogsConfigInvokeResponseArgs, FileSystemHttpLogsConfigInvokeResponsePtr and FileSystemHttpLogsConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigInvokeResponsePtrInput` via:
//
//          FileSystemHttpLogsConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FileSystemHttpLogsConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigInvokeResponsePtrOutput() FileSystemHttpLogsConfigInvokeResponsePtrOutput
	ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Context) FileSystemHttpLogsConfigInvokeResponsePtrOutput
}

type fileSystemHttpLogsConfigInvokeResponsePtrType FileSystemHttpLogsConfigInvokeResponseArgs

func FileSystemHttpLogsConfigInvokeResponsePtr(v *FileSystemHttpLogsConfigInvokeResponseArgs) FileSystemHttpLogsConfigInvokeResponsePtrInput {
	return (*fileSystemHttpLogsConfigInvokeResponsePtrType)(v)
}

func (*fileSystemHttpLogsConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (i *fileSystemHttpLogsConfigInvokeResponsePtrType) ToFileSystemHttpLogsConfigInvokeResponsePtrOutput() FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return i.ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *fileSystemHttpLogsConfigInvokeResponsePtrType) ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigInvokeResponsePtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigInvokeResponseOutput) ToFileSystemHttpLogsConfigInvokeResponseOutput() FileSystemHttpLogsConfigInvokeResponseOutput {
	return o
}

func (o FileSystemHttpLogsConfigInvokeResponseOutput) ToFileSystemHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponseOutput {
	return o
}

func (o FileSystemHttpLogsConfigInvokeResponseOutput) ToFileSystemHttpLogsConfigInvokeResponsePtrOutput() FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return o.ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FileSystemHttpLogsConfigInvokeResponseOutput) ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigInvokeResponse) *FileSystemHttpLogsConfigInvokeResponse {
		return &v
	}).(FileSystemHttpLogsConfigInvokeResponsePtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigInvokeResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigInvokeResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigInvokeResponseOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigInvokeResponse) *int { return v.RetentionInMb }).(pulumi.IntPtrOutput)
}

type FileSystemHttpLogsConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) ToFileSystemHttpLogsConfigInvokeResponsePtrOutput() FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) ToFileSystemHttpLogsConfigInvokeResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) Elem() FileSystemHttpLogsConfigInvokeResponseOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigInvokeResponse) FileSystemHttpLogsConfigInvokeResponse { return *v }).(FileSystemHttpLogsConfigInvokeResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigInvokeResponsePtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb *int `pulumi:"retentionInMb"`
}

// FileSystemHttpLogsConfigResponseInput is an input type that accepts FileSystemHttpLogsConfigResponseArgs and FileSystemHttpLogsConfigResponseOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigResponseInput` via:
//
//          FileSystemHttpLogsConfigResponseArgs{...}
type FileSystemHttpLogsConfigResponseInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigResponseOutput() FileSystemHttpLogsConfigResponseOutput
	ToFileSystemHttpLogsConfigResponseOutputWithContext(context.Context) FileSystemHttpLogsConfigResponseOutput
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigResponseArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb pulumi.IntPtrInput `pulumi:"retentionInMb"`
}

func (FileSystemHttpLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (i FileSystemHttpLogsConfigResponseArgs) ToFileSystemHttpLogsConfigResponseOutput() FileSystemHttpLogsConfigResponseOutput {
	return i.ToFileSystemHttpLogsConfigResponseOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigResponseArgs) ToFileSystemHttpLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigResponseOutput)
}

func (i FileSystemHttpLogsConfigResponseArgs) ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput {
	return i.ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigResponseArgs) ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigResponseOutput).ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx)
}

// FileSystemHttpLogsConfigResponsePtrInput is an input type that accepts FileSystemHttpLogsConfigResponseArgs, FileSystemHttpLogsConfigResponsePtr and FileSystemHttpLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigResponsePtrInput` via:
//
//          FileSystemHttpLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type FileSystemHttpLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput
	ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(context.Context) FileSystemHttpLogsConfigResponsePtrOutput
}

type fileSystemHttpLogsConfigResponsePtrType FileSystemHttpLogsConfigResponseArgs

func FileSystemHttpLogsConfigResponsePtr(v *FileSystemHttpLogsConfigResponseArgs) FileSystemHttpLogsConfigResponsePtrInput {
	return (*fileSystemHttpLogsConfigResponsePtrType)(v)
}

func (*fileSystemHttpLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (i *fileSystemHttpLogsConfigResponsePtrType) ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput {
	return i.ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *fileSystemHttpLogsConfigResponsePtrType) ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigResponsePtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponseOutput() FileSystemHttpLogsConfigResponseOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponseOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *FileSystemHttpLogsConfigResponse {
		return &v
	}).(FileSystemHttpLogsConfigResponsePtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigResponseOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *int { return v.RetentionInMb }).(pulumi.IntPtrOutput)
}

type FileSystemHttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) Elem() FileSystemHttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) FileSystemHttpLogsConfigResponse { return *v }).(FileSystemHttpLogsConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigResponsePtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMapping struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInput is an input type that accepts HandlerMappingArgs and HandlerMappingOutput values.
// You can construct a concrete instance of `HandlerMappingInput` via:
//
//          HandlerMappingArgs{...}
type HandlerMappingInput interface {
	pulumi.Input

	ToHandlerMappingOutput() HandlerMappingOutput
	ToHandlerMappingOutputWithContext(context.Context) HandlerMappingOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArgs) ToHandlerMappingOutput() HandlerMappingOutput {
	return i.ToHandlerMappingOutputWithContext(context.Background())
}

func (i HandlerMappingArgs) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingOutput)
}

// HandlerMappingArrayInput is an input type that accepts HandlerMappingArray and HandlerMappingArrayOutput values.
// You can construct a concrete instance of `HandlerMappingArrayInput` via:
//
//          HandlerMappingArray{ HandlerMappingArgs{...} }
type HandlerMappingArrayInput interface {
	pulumi.Input

	ToHandlerMappingArrayOutput() HandlerMappingArrayOutput
	ToHandlerMappingArrayOutputWithContext(context.Context) HandlerMappingArrayOutput
}

type HandlerMappingArray []HandlerMappingInput

func (HandlerMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return i.ToHandlerMappingArrayOutputWithContext(context.Background())
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingOutput struct{ *pulumi.OutputState }

func (HandlerMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingOutput) ToHandlerMappingOutput() HandlerMappingOutput {
	return o
}

func (o HandlerMappingOutput) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) Index(i pulumi.IntInput) HandlerMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMapping {
		return vs[0].([]HandlerMapping)[vs[1].(int)]
	}).(HandlerMappingOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingInvokeResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInvokeResponseInput is an input type that accepts HandlerMappingInvokeResponseArgs and HandlerMappingInvokeResponseOutput values.
// You can construct a concrete instance of `HandlerMappingInvokeResponseInput` via:
//
//          HandlerMappingInvokeResponseArgs{...}
type HandlerMappingInvokeResponseInput interface {
	pulumi.Input

	ToHandlerMappingInvokeResponseOutput() HandlerMappingInvokeResponseOutput
	ToHandlerMappingInvokeResponseOutputWithContext(context.Context) HandlerMappingInvokeResponseOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingInvokeResponseArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingInvokeResponse)(nil)).Elem()
}

func (i HandlerMappingInvokeResponseArgs) ToHandlerMappingInvokeResponseOutput() HandlerMappingInvokeResponseOutput {
	return i.ToHandlerMappingInvokeResponseOutputWithContext(context.Background())
}

func (i HandlerMappingInvokeResponseArgs) ToHandlerMappingInvokeResponseOutputWithContext(ctx context.Context) HandlerMappingInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingInvokeResponseOutput)
}

// HandlerMappingInvokeResponseArrayInput is an input type that accepts HandlerMappingInvokeResponseArray and HandlerMappingInvokeResponseArrayOutput values.
// You can construct a concrete instance of `HandlerMappingInvokeResponseArrayInput` via:
//
//          HandlerMappingInvokeResponseArray{ HandlerMappingInvokeResponseArgs{...} }
type HandlerMappingInvokeResponseArrayInput interface {
	pulumi.Input

	ToHandlerMappingInvokeResponseArrayOutput() HandlerMappingInvokeResponseArrayOutput
	ToHandlerMappingInvokeResponseArrayOutputWithContext(context.Context) HandlerMappingInvokeResponseArrayOutput
}

type HandlerMappingInvokeResponseArray []HandlerMappingInvokeResponseInput

func (HandlerMappingInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingInvokeResponse)(nil)).Elem()
}

func (i HandlerMappingInvokeResponseArray) ToHandlerMappingInvokeResponseArrayOutput() HandlerMappingInvokeResponseArrayOutput {
	return i.ToHandlerMappingInvokeResponseArrayOutputWithContext(context.Background())
}

func (i HandlerMappingInvokeResponseArray) ToHandlerMappingInvokeResponseArrayOutputWithContext(ctx context.Context) HandlerMappingInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingInvokeResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingInvokeResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingInvokeResponse)(nil)).Elem()
}

func (o HandlerMappingInvokeResponseOutput) ToHandlerMappingInvokeResponseOutput() HandlerMappingInvokeResponseOutput {
	return o
}

func (o HandlerMappingInvokeResponseOutput) ToHandlerMappingInvokeResponseOutputWithContext(ctx context.Context) HandlerMappingInvokeResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingInvokeResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingInvokeResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingInvokeResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingInvokeResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingInvokeResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingInvokeResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingInvokeResponse)(nil)).Elem()
}

func (o HandlerMappingInvokeResponseArrayOutput) ToHandlerMappingInvokeResponseArrayOutput() HandlerMappingInvokeResponseArrayOutput {
	return o
}

func (o HandlerMappingInvokeResponseArrayOutput) ToHandlerMappingInvokeResponseArrayOutputWithContext(ctx context.Context) HandlerMappingInvokeResponseArrayOutput {
	return o
}

func (o HandlerMappingInvokeResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingInvokeResponse {
		return vs[0].([]HandlerMappingInvokeResponse)[vs[1].(int)]
	}).(HandlerMappingInvokeResponseOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingResponseInput is an input type that accepts HandlerMappingResponseArgs and HandlerMappingResponseOutput values.
// You can construct a concrete instance of `HandlerMappingResponseInput` via:
//
//          HandlerMappingResponseArgs{...}
type HandlerMappingResponseInput interface {
	pulumi.Input

	ToHandlerMappingResponseOutput() HandlerMappingResponseOutput
	ToHandlerMappingResponseOutputWithContext(context.Context) HandlerMappingResponseOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return i.ToHandlerMappingResponseOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArgs) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseOutput)
}

// HandlerMappingResponseArrayInput is an input type that accepts HandlerMappingResponseArray and HandlerMappingResponseArrayOutput values.
// You can construct a concrete instance of `HandlerMappingResponseArrayInput` via:
//
//          HandlerMappingResponseArray{ HandlerMappingResponseArgs{...} }
type HandlerMappingResponseArrayInput interface {
	pulumi.Input

	ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput
	ToHandlerMappingResponseArrayOutputWithContext(context.Context) HandlerMappingResponseArrayOutput
}

type HandlerMappingResponseArray []HandlerMappingResponseInput

func (HandlerMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return i.ToHandlerMappingResponseArrayOutputWithContext(context.Background())
}

func (i HandlerMappingResponseArray) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingResponseArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return o
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingResponse {
		return vs[0].([]HandlerMappingResponse)[vs[1].(int)]
	}).(HandlerMappingResponseOutput)
}

// SSL-enabled hostname.
type HostNameSslState struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInput is an input type that accepts HostNameSslStateArgs and HostNameSslStateOutput values.
// You can construct a concrete instance of `HostNameSslStateInput` via:
//
//          HostNameSslStateArgs{...}
type HostNameSslStateInput interface {
	pulumi.Input

	ToHostNameSslStateOutput() HostNameSslStateOutput
	ToHostNameSslStateOutputWithContext(context.Context) HostNameSslStateOutput
}

// SSL-enabled hostname.
type HostNameSslStateArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType HostType `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState SslState `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return i.ToHostNameSslStateOutputWithContext(context.Background())
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateOutput)
}

// HostNameSslStateArrayInput is an input type that accepts HostNameSslStateArray and HostNameSslStateArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateArrayInput` via:
//
//          HostNameSslStateArray{ HostNameSslStateArgs{...} }
type HostNameSslStateArrayInput interface {
	pulumi.Input

	ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput
	ToHostNameSslStateArrayOutputWithContext(context.Context) HostNameSslStateArrayOutput
}

type HostNameSslStateArray []HostNameSslStateInput

func (HostNameSslStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return i.ToHostNameSslStateArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateOutput struct{ *pulumi.OutputState }

func (HostNameSslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return o
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) Index(i pulumi.IntInput) HostNameSslStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslState {
		return vs[0].([]HostNameSslState)[vs[1].(int)]
	}).(HostNameSslStateOutput)
}

// SSL-enabled hostname.
type HostNameSslStateInvokeResponse struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInvokeResponseInput is an input type that accepts HostNameSslStateInvokeResponseArgs and HostNameSslStateInvokeResponseOutput values.
// You can construct a concrete instance of `HostNameSslStateInvokeResponseInput` via:
//
//          HostNameSslStateInvokeResponseArgs{...}
type HostNameSslStateInvokeResponseInput interface {
	pulumi.Input

	ToHostNameSslStateInvokeResponseOutput() HostNameSslStateInvokeResponseOutput
	ToHostNameSslStateInvokeResponseOutputWithContext(context.Context) HostNameSslStateInvokeResponseOutput
}

// SSL-enabled hostname.
type HostNameSslStateInvokeResponseArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateInvokeResponse)(nil)).Elem()
}

func (i HostNameSslStateInvokeResponseArgs) ToHostNameSslStateInvokeResponseOutput() HostNameSslStateInvokeResponseOutput {
	return i.ToHostNameSslStateInvokeResponseOutputWithContext(context.Background())
}

func (i HostNameSslStateInvokeResponseArgs) ToHostNameSslStateInvokeResponseOutputWithContext(ctx context.Context) HostNameSslStateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateInvokeResponseOutput)
}

// HostNameSslStateInvokeResponseArrayInput is an input type that accepts HostNameSslStateInvokeResponseArray and HostNameSslStateInvokeResponseArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateInvokeResponseArrayInput` via:
//
//          HostNameSslStateInvokeResponseArray{ HostNameSslStateInvokeResponseArgs{...} }
type HostNameSslStateInvokeResponseArrayInput interface {
	pulumi.Input

	ToHostNameSslStateInvokeResponseArrayOutput() HostNameSslStateInvokeResponseArrayOutput
	ToHostNameSslStateInvokeResponseArrayOutputWithContext(context.Context) HostNameSslStateInvokeResponseArrayOutput
}

type HostNameSslStateInvokeResponseArray []HostNameSslStateInvokeResponseInput

func (HostNameSslStateInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateInvokeResponse)(nil)).Elem()
}

func (i HostNameSslStateInvokeResponseArray) ToHostNameSslStateInvokeResponseArrayOutput() HostNameSslStateInvokeResponseArrayOutput {
	return i.ToHostNameSslStateInvokeResponseArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateInvokeResponseArray) ToHostNameSslStateInvokeResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateInvokeResponseArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateInvokeResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateInvokeResponse)(nil)).Elem()
}

func (o HostNameSslStateInvokeResponseOutput) ToHostNameSslStateInvokeResponseOutput() HostNameSslStateInvokeResponseOutput {
	return o
}

func (o HostNameSslStateInvokeResponseOutput) ToHostNameSslStateInvokeResponseOutputWithContext(ctx context.Context) HostNameSslStateInvokeResponseOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateInvokeResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateInvokeResponseOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateInvokeResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateInvokeResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateInvokeResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateInvokeResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateInvokeResponse)(nil)).Elem()
}

func (o HostNameSslStateInvokeResponseArrayOutput) ToHostNameSslStateInvokeResponseArrayOutput() HostNameSslStateInvokeResponseArrayOutput {
	return o
}

func (o HostNameSslStateInvokeResponseArrayOutput) ToHostNameSslStateInvokeResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateInvokeResponseArrayOutput {
	return o
}

func (o HostNameSslStateInvokeResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateInvokeResponse {
		return vs[0].([]HostNameSslStateInvokeResponse)[vs[1].(int)]
	}).(HostNameSslStateInvokeResponseOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponse struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateResponseInput is an input type that accepts HostNameSslStateResponseArgs and HostNameSslStateResponseOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseInput` via:
//
//          HostNameSslStateResponseArgs{...}
type HostNameSslStateResponseInput interface {
	pulumi.Input

	ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput
	ToHostNameSslStateResponseOutputWithContext(context.Context) HostNameSslStateResponseOutput
}

// SSL-enabled hostname.
type HostNameSslStateResponseArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType pulumi.StringPtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState pulumi.StringPtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return i.ToHostNameSslStateResponseOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArgs) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseOutput)
}

// HostNameSslStateResponseArrayInput is an input type that accepts HostNameSslStateResponseArray and HostNameSslStateResponseArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateResponseArrayInput` via:
//
//          HostNameSslStateResponseArray{ HostNameSslStateResponseArgs{...} }
type HostNameSslStateResponseArrayInput interface {
	pulumi.Input

	ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput
	ToHostNameSslStateResponseArrayOutputWithContext(context.Context) HostNameSslStateResponseArrayOutput
}

type HostNameSslStateResponseArray []HostNameSslStateResponseInput

func (HostNameSslStateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return i.ToHostNameSslStateResponseArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateResponseArray) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateResponseArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return o
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateResponseOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateResponse {
		return vs[0].([]HostNameSslStateResponse)[vs[1].(int)]
	}).(HostNameSslStateResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//          HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//          HostingEnvironmentProfileArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile { return *v }).(HostingEnvironmentProfileOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileInvokeResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileInvokeResponseInput is an input type that accepts HostingEnvironmentProfileInvokeResponseArgs and HostingEnvironmentProfileInvokeResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInvokeResponseInput` via:
//
//          HostingEnvironmentProfileInvokeResponseArgs{...}
type HostingEnvironmentProfileInvokeResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileInvokeResponseOutput() HostingEnvironmentProfileInvokeResponseOutput
	ToHostingEnvironmentProfileInvokeResponseOutputWithContext(context.Context) HostingEnvironmentProfileInvokeResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileInvokeResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileInvokeResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileInvokeResponseArgs) ToHostingEnvironmentProfileInvokeResponseOutput() HostingEnvironmentProfileInvokeResponseOutput {
	return i.ToHostingEnvironmentProfileInvokeResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileInvokeResponseArgs) ToHostingEnvironmentProfileInvokeResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileInvokeResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileInvokeResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileInvokeResponseOutput) ToHostingEnvironmentProfileInvokeResponseOutput() HostingEnvironmentProfileInvokeResponseOutput {
	return o
}

func (o HostingEnvironmentProfileInvokeResponseOutput) ToHostingEnvironmentProfileInvokeResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileInvokeResponseOutput {
	return o
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// HostingEnvironmentProfileResponseInput is an input type that accepts HostingEnvironmentProfileResponseArgs and HostingEnvironmentProfileResponseOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponseInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
type HostingEnvironmentProfileResponseInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput
	ToHostingEnvironmentProfileResponseOutputWithContext(context.Context) HostingEnvironmentProfileResponseOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HostingEnvironmentProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return i.ToHostingEnvironmentProfileResponseOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput)
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileResponseArgs) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponseOutput).ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfileResponsePtrInput is an input type that accepts HostingEnvironmentProfileResponseArgs, HostingEnvironmentProfileResponsePtr and HostingEnvironmentProfileResponsePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileResponsePtrInput` via:
//
//          HostingEnvironmentProfileResponseArgs{...}
//
//  or:
//
//          nil
type HostingEnvironmentProfileResponsePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput
	ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Context) HostingEnvironmentProfileResponsePtrOutput
}

type hostingEnvironmentProfileResponsePtrType HostingEnvironmentProfileResponseArgs

func HostingEnvironmentProfileResponsePtr(v *HostingEnvironmentProfileResponseArgs) HostingEnvironmentProfileResponsePtrInput {
	return (*hostingEnvironmentProfileResponsePtrType)(v)
}

func (*hostingEnvironmentProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return i.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfileResponsePtrType) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileResponsePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o.ToHostingEnvironmentProfileResponsePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *HostingEnvironmentProfileResponse {
		return &v
	}).(HostingEnvironmentProfileResponsePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse { return *v }).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Http logs configuration.
type HttpLogsConfig struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage *AzureBlobStorageHttpLogsConfig `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem *FileSystemHttpLogsConfig `pulumi:"fileSystem"`
}

// HttpLogsConfigInput is an input type that accepts HttpLogsConfigArgs and HttpLogsConfigOutput values.
// You can construct a concrete instance of `HttpLogsConfigInput` via:
//
//          HttpLogsConfigArgs{...}
type HttpLogsConfigInput interface {
	pulumi.Input

	ToHttpLogsConfigOutput() HttpLogsConfigOutput
	ToHttpLogsConfigOutputWithContext(context.Context) HttpLogsConfigOutput
}

// Http logs configuration.
type HttpLogsConfigArgs struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage AzureBlobStorageHttpLogsConfigPtrInput `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem FileSystemHttpLogsConfigPtrInput `pulumi:"fileSystem"`
}

func (HttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfig)(nil)).Elem()
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigOutput() HttpLogsConfigOutput {
	return i.ToHttpLogsConfigOutputWithContext(context.Background())
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigOutputWithContext(ctx context.Context) HttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigOutput)
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return i.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigOutput).ToHttpLogsConfigPtrOutputWithContext(ctx)
}

// HttpLogsConfigPtrInput is an input type that accepts HttpLogsConfigArgs, HttpLogsConfigPtr and HttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `HttpLogsConfigPtrInput` via:
//
//          HttpLogsConfigArgs{...}
//
//  or:
//
//          nil
type HttpLogsConfigPtrInput interface {
	pulumi.Input

	ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput
	ToHttpLogsConfigPtrOutputWithContext(context.Context) HttpLogsConfigPtrOutput
}

type httpLogsConfigPtrType HttpLogsConfigArgs

func HttpLogsConfigPtr(v *HttpLogsConfigArgs) HttpLogsConfigPtrInput {
	return (*httpLogsConfigPtrType)(v)
}

func (*httpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfig)(nil)).Elem()
}

func (i *httpLogsConfigPtrType) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return i.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *httpLogsConfigPtrType) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigPtrOutput)
}

// Http logs configuration.
type HttpLogsConfigOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfig)(nil)).Elem()
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigOutput() HttpLogsConfigOutput {
	return o
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigOutputWithContext(ctx context.Context) HttpLogsConfigOutput {
	return o
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return o.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return o.ApplyT(func(v HttpLogsConfig) *HttpLogsConfig {
		return &v
	}).(HttpLogsConfigPtrOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v HttpLogsConfig) *AzureBlobStorageHttpLogsConfig { return v.AzureBlobStorage }).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigOutput) FileSystem() FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v HttpLogsConfig) *FileSystemHttpLogsConfig { return v.FileSystem }).(FileSystemHttpLogsConfigPtrOutput)
}

type HttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfig)(nil)).Elem()
}

func (o HttpLogsConfigPtrOutput) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return o
}

func (o HttpLogsConfigPtrOutput) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return o
}

func (o HttpLogsConfigPtrOutput) Elem() HttpLogsConfigOutput {
	return o.ApplyT(func(v *HttpLogsConfig) HttpLogsConfig { return *v }).(HttpLogsConfigOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigPtrOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v *HttpLogsConfig) *AzureBlobStorageHttpLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigPtrOutput) FileSystem() FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v *HttpLogsConfig) *FileSystemHttpLogsConfig {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemHttpLogsConfigPtrOutput)
}

// Http logs configuration.
type HttpLogsConfigInvokeResponse struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage *AzureBlobStorageHttpLogsConfigInvokeResponse `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem *FileSystemHttpLogsConfigInvokeResponse `pulumi:"fileSystem"`
}

// HttpLogsConfigInvokeResponseInput is an input type that accepts HttpLogsConfigInvokeResponseArgs and HttpLogsConfigInvokeResponseOutput values.
// You can construct a concrete instance of `HttpLogsConfigInvokeResponseInput` via:
//
//          HttpLogsConfigInvokeResponseArgs{...}
type HttpLogsConfigInvokeResponseInput interface {
	pulumi.Input

	ToHttpLogsConfigInvokeResponseOutput() HttpLogsConfigInvokeResponseOutput
	ToHttpLogsConfigInvokeResponseOutputWithContext(context.Context) HttpLogsConfigInvokeResponseOutput
}

// Http logs configuration.
type HttpLogsConfigInvokeResponseArgs struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage AzureBlobStorageHttpLogsConfigInvokeResponsePtrInput `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem FileSystemHttpLogsConfigInvokeResponsePtrInput `pulumi:"fileSystem"`
}

func (HttpLogsConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (i HttpLogsConfigInvokeResponseArgs) ToHttpLogsConfigInvokeResponseOutput() HttpLogsConfigInvokeResponseOutput {
	return i.ToHttpLogsConfigInvokeResponseOutputWithContext(context.Background())
}

func (i HttpLogsConfigInvokeResponseArgs) ToHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) HttpLogsConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigInvokeResponseOutput)
}

// Http logs configuration.
type HttpLogsConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfigInvokeResponse)(nil)).Elem()
}

func (o HttpLogsConfigInvokeResponseOutput) ToHttpLogsConfigInvokeResponseOutput() HttpLogsConfigInvokeResponseOutput {
	return o
}

func (o HttpLogsConfigInvokeResponseOutput) ToHttpLogsConfigInvokeResponseOutputWithContext(ctx context.Context) HttpLogsConfigInvokeResponseOutput {
	return o
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigInvokeResponseOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigInvokeResponse) *AzureBlobStorageHttpLogsConfigInvokeResponse {
		return v.AzureBlobStorage
	}).(AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigInvokeResponseOutput) FileSystem() FileSystemHttpLogsConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigInvokeResponse) *FileSystemHttpLogsConfigInvokeResponse { return v.FileSystem }).(FileSystemHttpLogsConfigInvokeResponsePtrOutput)
}

// Http logs configuration.
type HttpLogsConfigResponse struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage *AzureBlobStorageHttpLogsConfigResponse `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem *FileSystemHttpLogsConfigResponse `pulumi:"fileSystem"`
}

// HttpLogsConfigResponseInput is an input type that accepts HttpLogsConfigResponseArgs and HttpLogsConfigResponseOutput values.
// You can construct a concrete instance of `HttpLogsConfigResponseInput` via:
//
//          HttpLogsConfigResponseArgs{...}
type HttpLogsConfigResponseInput interface {
	pulumi.Input

	ToHttpLogsConfigResponseOutput() HttpLogsConfigResponseOutput
	ToHttpLogsConfigResponseOutputWithContext(context.Context) HttpLogsConfigResponseOutput
}

// Http logs configuration.
type HttpLogsConfigResponseArgs struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage AzureBlobStorageHttpLogsConfigResponsePtrInput `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem FileSystemHttpLogsConfigResponsePtrInput `pulumi:"fileSystem"`
}

func (HttpLogsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfigResponse)(nil)).Elem()
}

func (i HttpLogsConfigResponseArgs) ToHttpLogsConfigResponseOutput() HttpLogsConfigResponseOutput {
	return i.ToHttpLogsConfigResponseOutputWithContext(context.Background())
}

func (i HttpLogsConfigResponseArgs) ToHttpLogsConfigResponseOutputWithContext(ctx context.Context) HttpLogsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigResponseOutput)
}

func (i HttpLogsConfigResponseArgs) ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput {
	return i.ToHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i HttpLogsConfigResponseArgs) ToHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) HttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigResponseOutput).ToHttpLogsConfigResponsePtrOutputWithContext(ctx)
}

// HttpLogsConfigResponsePtrInput is an input type that accepts HttpLogsConfigResponseArgs, HttpLogsConfigResponsePtr and HttpLogsConfigResponsePtrOutput values.
// You can construct a concrete instance of `HttpLogsConfigResponsePtrInput` via:
//
//          HttpLogsConfigResponseArgs{...}
//
//  or:
//
//          nil
type HttpLogsConfigResponsePtrInput interface {
	pulumi.Input

	ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput
	ToHttpLogsConfigResponsePtrOutputWithContext(context.Context) HttpLogsConfigResponsePtrOutput
}

type httpLogsConfigResponsePtrType HttpLogsConfigResponseArgs

func HttpLogsConfigResponsePtr(v *HttpLogsConfigResponseArgs) HttpLogsConfigResponsePtrInput {
	return (*httpLogsConfigResponsePtrType)(v)
}

func (*httpLogsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfigResponse)(nil)).Elem()
}

func (i *httpLogsConfigResponsePtrType) ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput {
	return i.ToHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *httpLogsConfigResponsePtrType) ToHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) HttpLogsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigResponsePtrOutput)
}

// Http logs configuration.
type HttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfigResponse)(nil)).Elem()
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponseOutput() HttpLogsConfigResponseOutput {
	return o
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponseOutputWithContext(ctx context.Context) HttpLogsConfigResponseOutput {
	return o
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput {
	return o.ToHttpLogsConfigResponsePtrOutputWithContext(context.Background())
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) HttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigResponse) *HttpLogsConfigResponse {
		return &v
	}).(HttpLogsConfigResponsePtrOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigResponseOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigResponse) *AzureBlobStorageHttpLogsConfigResponse { return v.AzureBlobStorage }).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigResponseOutput) FileSystem() FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigResponse) *FileSystemHttpLogsConfigResponse { return v.FileSystem }).(FileSystemHttpLogsConfigResponsePtrOutput)
}

type HttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfigResponse)(nil)).Elem()
}

func (o HttpLogsConfigResponsePtrOutput) ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput {
	return o
}

func (o HttpLogsConfigResponsePtrOutput) ToHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) HttpLogsConfigResponsePtrOutput {
	return o
}

func (o HttpLogsConfigResponsePtrOutput) Elem() HttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) HttpLogsConfigResponse { return *v }).(HttpLogsConfigResponseOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigResponsePtrOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) *AzureBlobStorageHttpLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigResponsePtrOutput) FileSystem() FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) *FileSystemHttpLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemHttpLogsConfigResponsePtrOutput)
}

// A domain specific resource identifier.
type IdentifierInvokeResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
	// String representation of the identity.
	Value *string `pulumi:"value"`
}

// IdentifierInvokeResponseInput is an input type that accepts IdentifierInvokeResponseArgs and IdentifierInvokeResponseOutput values.
// You can construct a concrete instance of `IdentifierInvokeResponseInput` via:
//
//          IdentifierInvokeResponseArgs{...}
type IdentifierInvokeResponseInput interface {
	pulumi.Input

	ToIdentifierInvokeResponseOutput() IdentifierInvokeResponseOutput
	ToIdentifierInvokeResponseOutputWithContext(context.Context) IdentifierInvokeResponseOutput
}

// A domain specific resource identifier.
type IdentifierInvokeResponseArgs struct {
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// String representation of the identity.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IdentifierInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierInvokeResponse)(nil)).Elem()
}

func (i IdentifierInvokeResponseArgs) ToIdentifierInvokeResponseOutput() IdentifierInvokeResponseOutput {
	return i.ToIdentifierInvokeResponseOutputWithContext(context.Background())
}

func (i IdentifierInvokeResponseArgs) ToIdentifierInvokeResponseOutputWithContext(ctx context.Context) IdentifierInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierInvokeResponseOutput)
}

// IdentifierInvokeResponseArrayInput is an input type that accepts IdentifierInvokeResponseArray and IdentifierInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IdentifierInvokeResponseArrayInput` via:
//
//          IdentifierInvokeResponseArray{ IdentifierInvokeResponseArgs{...} }
type IdentifierInvokeResponseArrayInput interface {
	pulumi.Input

	ToIdentifierInvokeResponseArrayOutput() IdentifierInvokeResponseArrayOutput
	ToIdentifierInvokeResponseArrayOutputWithContext(context.Context) IdentifierInvokeResponseArrayOutput
}

type IdentifierInvokeResponseArray []IdentifierInvokeResponseInput

func (IdentifierInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierInvokeResponse)(nil)).Elem()
}

func (i IdentifierInvokeResponseArray) ToIdentifierInvokeResponseArrayOutput() IdentifierInvokeResponseArrayOutput {
	return i.ToIdentifierInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IdentifierInvokeResponseArray) ToIdentifierInvokeResponseArrayOutputWithContext(ctx context.Context) IdentifierInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentifierInvokeResponseArrayOutput)
}

// A domain specific resource identifier.
type IdentifierInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentifierInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierInvokeResponse)(nil)).Elem()
}

func (o IdentifierInvokeResponseOutput) ToIdentifierInvokeResponseOutput() IdentifierInvokeResponseOutput {
	return o
}

func (o IdentifierInvokeResponseOutput) ToIdentifierInvokeResponseOutputWithContext(ctx context.Context) IdentifierInvokeResponseOutput {
	return o
}

// Resource Id.
func (o IdentifierInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o IdentifierInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o IdentifierInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The system metadata relating to this resource.
func (o IdentifierInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// Resource type.
func (o IdentifierInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// String representation of the identity.
func (o IdentifierInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IdentifierInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentifierInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierInvokeResponse)(nil)).Elem()
}

func (o IdentifierInvokeResponseArrayOutput) ToIdentifierInvokeResponseArrayOutput() IdentifierInvokeResponseArrayOutput {
	return o
}

func (o IdentifierInvokeResponseArrayOutput) ToIdentifierInvokeResponseArrayOutputWithContext(ctx context.Context) IdentifierInvokeResponseArrayOutput {
	return o
}

func (o IdentifierInvokeResponseArrayOutput) Index(i pulumi.IntInput) IdentifierInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentifierInvokeResponse {
		return vs[0].([]IdentifierInvokeResponse)[vs[1].(int)]
	}).(IdentifierInvokeResponseOutput)
}

// IP security restriction on an app.
type IpSecurityRestriction struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionInput is an input type that accepts IpSecurityRestrictionArgs and IpSecurityRestrictionOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInput` via:
//
//          IpSecurityRestrictionArgs{...}
type IpSecurityRestrictionInput interface {
	pulumi.Input

	ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput
	ToIpSecurityRestrictionOutputWithContext(context.Context) IpSecurityRestrictionOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return i.ToIpSecurityRestrictionOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionOutput)
}

// IpSecurityRestrictionArrayInput is an input type that accepts IpSecurityRestrictionArray and IpSecurityRestrictionArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionArrayInput` via:
//
//          IpSecurityRestrictionArray{ IpSecurityRestrictionArgs{...} }
type IpSecurityRestrictionArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput
	ToIpSecurityRestrictionArrayOutputWithContext(context.Context) IpSecurityRestrictionArrayOutput
}

type IpSecurityRestrictionArray []IpSecurityRestrictionInput

func (IpSecurityRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return i.ToIpSecurityRestrictionArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return o
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
// - If the property is null or empty (default), all hosts(or lack of) are allowed.
// - A value is compared using ordinal-ignore-case (excluding port number).
// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
// - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestriction) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestriction {
		return vs[0].([]IpSecurityRestriction)[vs[1].(int)]
	}).(IpSecurityRestrictionOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionInvokeResponse struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionInvokeResponseInput is an input type that accepts IpSecurityRestrictionInvokeResponseArgs and IpSecurityRestrictionInvokeResponseOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInvokeResponseInput` via:
//
//          IpSecurityRestrictionInvokeResponseArgs{...}
type IpSecurityRestrictionInvokeResponseInput interface {
	pulumi.Input

	ToIpSecurityRestrictionInvokeResponseOutput() IpSecurityRestrictionInvokeResponseOutput
	ToIpSecurityRestrictionInvokeResponseOutputWithContext(context.Context) IpSecurityRestrictionInvokeResponseOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionInvokeResponseArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionInvokeResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionInvokeResponseArgs) ToIpSecurityRestrictionInvokeResponseOutput() IpSecurityRestrictionInvokeResponseOutput {
	return i.ToIpSecurityRestrictionInvokeResponseOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionInvokeResponseArgs) ToIpSecurityRestrictionInvokeResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionInvokeResponseOutput)
}

// IpSecurityRestrictionInvokeResponseArrayInput is an input type that accepts IpSecurityRestrictionInvokeResponseArray and IpSecurityRestrictionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInvokeResponseArrayInput` via:
//
//          IpSecurityRestrictionInvokeResponseArray{ IpSecurityRestrictionInvokeResponseArgs{...} }
type IpSecurityRestrictionInvokeResponseArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionInvokeResponseArrayOutput() IpSecurityRestrictionInvokeResponseArrayOutput
	ToIpSecurityRestrictionInvokeResponseArrayOutputWithContext(context.Context) IpSecurityRestrictionInvokeResponseArrayOutput
}

type IpSecurityRestrictionInvokeResponseArray []IpSecurityRestrictionInvokeResponseInput

func (IpSecurityRestrictionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionInvokeResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionInvokeResponseArray) ToIpSecurityRestrictionInvokeResponseArrayOutput() IpSecurityRestrictionInvokeResponseArrayOutput {
	return i.ToIpSecurityRestrictionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionInvokeResponseArray) ToIpSecurityRestrictionInvokeResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionInvokeResponseArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionInvokeResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionInvokeResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionInvokeResponseOutput) ToIpSecurityRestrictionInvokeResponseOutput() IpSecurityRestrictionInvokeResponseOutput {
	return o
}

func (o IpSecurityRestrictionInvokeResponseOutput) ToIpSecurityRestrictionInvokeResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionInvokeResponseOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
// - If the property is null or empty (default), all hosts(or lack of) are allowed.
// - A value is compared using ordinal-ignore-case (excluding port number).
// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
// - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionInvokeResponseOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionInvokeResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionInvokeResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionInvokeResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionInvokeResponseOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionInvokeResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionInvokeResponseOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionInvokeResponseOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionInvokeResponse) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionInvokeResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionInvokeResponseArrayOutput) ToIpSecurityRestrictionInvokeResponseArrayOutput() IpSecurityRestrictionInvokeResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionInvokeResponseArrayOutput) ToIpSecurityRestrictionInvokeResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionInvokeResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionInvokeResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionInvokeResponse {
		return vs[0].([]IpSecurityRestrictionInvokeResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionInvokeResponseOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponse struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionResponseInput is an input type that accepts IpSecurityRestrictionResponseArgs and IpSecurityRestrictionResponseOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseInput` via:
//
//          IpSecurityRestrictionResponseArgs{...}
type IpSecurityRestrictionResponseInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput
	ToIpSecurityRestrictionResponseOutputWithContext(context.Context) IpSecurityRestrictionResponseOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return i.ToIpSecurityRestrictionResponseOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArgs) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseOutput)
}

// IpSecurityRestrictionResponseArrayInput is an input type that accepts IpSecurityRestrictionResponseArray and IpSecurityRestrictionResponseArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionResponseArrayInput` via:
//
//          IpSecurityRestrictionResponseArray{ IpSecurityRestrictionResponseArgs{...} }
type IpSecurityRestrictionResponseArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput
	ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Context) IpSecurityRestrictionResponseArrayOutput
}

type IpSecurityRestrictionResponseArray []IpSecurityRestrictionResponseInput

func (IpSecurityRestrictionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return i.ToIpSecurityRestrictionResponseArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionResponseArray) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return o
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
// - If the property is null or empty (default), all hosts(or lack of) are allowed.
// - A value is compared using ordinal-ignore-case (excluding port number).
// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
// - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionResponseOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionResponseOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionResponseOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionResponseOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionResponse {
		return vs[0].([]IpSecurityRestrictionResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionResponseOutput)
}

// Managed service identity.
type ManagedServiceIdentity struct {
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//          ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity.
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity.
	Type ManagedServiceIdentityType `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//          ManagedServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity { return *v }).(ManagedServiceIdentityOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Managed service identity.
type ManagedServiceIdentityInvokeResponse struct {
	// Principal Id of managed service identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInvokeResponseInput is an input type that accepts ManagedServiceIdentityInvokeResponseArgs and ManagedServiceIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInvokeResponseInput` via:
//
//          ManagedServiceIdentityInvokeResponseArgs{...}
type ManagedServiceIdentityInvokeResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityInvokeResponseOutput() ManagedServiceIdentityInvokeResponseOutput
	ToManagedServiceIdentityInvokeResponseOutputWithContext(context.Context) ManagedServiceIdentityInvokeResponseOutput
}

// Managed service identity.
type ManagedServiceIdentityInvokeResponseArgs struct {
	// Principal Id of managed service identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityInvokeResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityInvokeResponseArgs) ToManagedServiceIdentityInvokeResponseOutput() ManagedServiceIdentityInvokeResponseOutput {
	return i.ToManagedServiceIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityInvokeResponseArgs) ToManagedServiceIdentityInvokeResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityInvokeResponseOutput)
}

// Managed service identity.
type ManagedServiceIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityInvokeResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityInvokeResponseOutput) ToManagedServiceIdentityInvokeResponseOutput() ManagedServiceIdentityInvokeResponseOutput {
	return o
}

func (o ManagedServiceIdentityInvokeResponseOutput) ToManagedServiceIdentityInvokeResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseOutput {
	return o
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityInvokeResponseOutput) UserAssignedIdentities() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponse) map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityInvokeResponseUserAssignedIdentities struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

// ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesInput is an input type that accepts ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs and ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesInput` via:
//
//          ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs{...}
type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput
	ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutputWithContext(context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput
}

type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs struct {
	// Client Id of user assigned identity
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityInvokeResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput {
	return i.ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput)
}

// ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapInput is an input type that accepts ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap and ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapInput` via:
//
//          ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap{ "key": ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesArgs{...} }
type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput
	ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutputWithContext(context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput
}

type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesInput

func (ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput {
	return i.ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityInvokeResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput {
	return o
}

// Client Id of user assigned identity
func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityInvokeResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityInvokeResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityInvokeResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponse struct {
	// Principal Id of managed service identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityResponseInput is an input type that accepts ManagedServiceIdentityResponseArgs and ManagedServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
type ManagedServiceIdentityResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput
	ToManagedServiceIdentityResponseOutputWithContext(context.Context) ManagedServiceIdentityResponseOutput
}

// Managed service identity.
type ManagedServiceIdentityResponseArgs struct {
	// Principal Id of managed service identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return i.ToManagedServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput)
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput).ToManagedServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedServiceIdentityResponsePtrInput is an input type that accepts ManagedServiceIdentityResponseArgs, ManagedServiceIdentityResponsePtr and ManagedServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePtrInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput
	ToManagedServiceIdentityResponsePtrOutputWithContext(context.Context) ManagedServiceIdentityResponsePtrOutput
}

type managedServiceIdentityResponsePtrType ManagedServiceIdentityResponseArgs

func ManagedServiceIdentityResponsePtr(v *ManagedServiceIdentityResponseArgs) ManagedServiceIdentityResponsePtrInput {
	return (*managedServiceIdentityResponsePtrType)(v)
}

func (*managedServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *ManagedServiceIdentityResponse {
		return &v
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse { return *v }).(ManagedServiceIdentityResponseOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesArgs and ManagedServiceIdentityResponseUserAssignedIdentitiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...}
type ManagedServiceIdentityResponseUserAssignedIdentitiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesArgs struct {
	// Client Id of user assigned identity
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesMap and ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesMap{ "key": ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...} }
type ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMap map[string]ManagedServiceIdentityResponseUserAssignedIdentitiesInput

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// Client Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Name value pair.
type NameValuePair struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//          NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair.
type NameValuePairArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//          NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair.
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name.
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair.
type NameValuePairInvokeResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInvokeResponseInput is an input type that accepts NameValuePairInvokeResponseArgs and NameValuePairInvokeResponseOutput values.
// You can construct a concrete instance of `NameValuePairInvokeResponseInput` via:
//
//          NameValuePairInvokeResponseArgs{...}
type NameValuePairInvokeResponseInput interface {
	pulumi.Input

	ToNameValuePairInvokeResponseOutput() NameValuePairInvokeResponseOutput
	ToNameValuePairInvokeResponseOutputWithContext(context.Context) NameValuePairInvokeResponseOutput
}

// Name value pair.
type NameValuePairInvokeResponseArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairInvokeResponse)(nil)).Elem()
}

func (i NameValuePairInvokeResponseArgs) ToNameValuePairInvokeResponseOutput() NameValuePairInvokeResponseOutput {
	return i.ToNameValuePairInvokeResponseOutputWithContext(context.Background())
}

func (i NameValuePairInvokeResponseArgs) ToNameValuePairInvokeResponseOutputWithContext(ctx context.Context) NameValuePairInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairInvokeResponseOutput)
}

// NameValuePairInvokeResponseArrayInput is an input type that accepts NameValuePairInvokeResponseArray and NameValuePairInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairInvokeResponseArrayInput` via:
//
//          NameValuePairInvokeResponseArray{ NameValuePairInvokeResponseArgs{...} }
type NameValuePairInvokeResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairInvokeResponseArrayOutput() NameValuePairInvokeResponseArrayOutput
	ToNameValuePairInvokeResponseArrayOutputWithContext(context.Context) NameValuePairInvokeResponseArrayOutput
}

type NameValuePairInvokeResponseArray []NameValuePairInvokeResponseInput

func (NameValuePairInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairInvokeResponse)(nil)).Elem()
}

func (i NameValuePairInvokeResponseArray) ToNameValuePairInvokeResponseArrayOutput() NameValuePairInvokeResponseArrayOutput {
	return i.ToNameValuePairInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairInvokeResponseArray) ToNameValuePairInvokeResponseArrayOutputWithContext(ctx context.Context) NameValuePairInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairInvokeResponseArrayOutput)
}

// Name value pair.
type NameValuePairInvokeResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairInvokeResponse)(nil)).Elem()
}

func (o NameValuePairInvokeResponseOutput) ToNameValuePairInvokeResponseOutput() NameValuePairInvokeResponseOutput {
	return o
}

func (o NameValuePairInvokeResponseOutput) ToNameValuePairInvokeResponseOutputWithContext(ctx context.Context) NameValuePairInvokeResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairInvokeResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairInvokeResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairInvokeResponse)(nil)).Elem()
}

func (o NameValuePairInvokeResponseArrayOutput) ToNameValuePairInvokeResponseArrayOutput() NameValuePairInvokeResponseArrayOutput {
	return o
}

func (o NameValuePairInvokeResponseArrayOutput) ToNameValuePairInvokeResponseArrayOutputWithContext(ctx context.Context) NameValuePairInvokeResponseArrayOutput {
	return o
}

func (o NameValuePairInvokeResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairInvokeResponse {
		return vs[0].([]NameValuePairInvokeResponse)[vs[1].(int)]
	}).(NameValuePairInvokeResponseOutput)
}

// Name value pair.
type NameValuePairResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairResponseInput is an input type that accepts NameValuePairResponseArgs and NameValuePairResponseOutput values.
// You can construct a concrete instance of `NameValuePairResponseInput` via:
//
//          NameValuePairResponseArgs{...}
type NameValuePairResponseInput interface {
	pulumi.Input

	ToNameValuePairResponseOutput() NameValuePairResponseOutput
	ToNameValuePairResponseOutputWithContext(context.Context) NameValuePairResponseOutput
}

// Name value pair.
type NameValuePairResponseArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return i.ToNameValuePairResponseOutputWithContext(context.Background())
}

func (i NameValuePairResponseArgs) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseOutput)
}

// NameValuePairResponseArrayInput is an input type that accepts NameValuePairResponseArray and NameValuePairResponseArrayOutput values.
// You can construct a concrete instance of `NameValuePairResponseArrayInput` via:
//
//          NameValuePairResponseArray{ NameValuePairResponseArgs{...} }
type NameValuePairResponseArrayInput interface {
	pulumi.Input

	ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput
	ToNameValuePairResponseArrayOutputWithContext(context.Context) NameValuePairResponseArrayOutput
}

type NameValuePairResponseArray []NameValuePairResponseInput

func (NameValuePairResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return i.ToNameValuePairResponseArrayOutputWithContext(context.Background())
}

func (i NameValuePairResponseArray) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairResponseArrayOutput)
}

// Name value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

// Network access control entry.
type NetworkAccessControlEntry struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInput is an input type that accepts NetworkAccessControlEntryArgs and NetworkAccessControlEntryOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInput` via:
//
//          NetworkAccessControlEntryArgs{...}
type NetworkAccessControlEntryInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput
	ToNetworkAccessControlEntryOutputWithContext(context.Context) NetworkAccessControlEntryOutput
}

// Network access control entry.
type NetworkAccessControlEntryArgs struct {
	// Action object.
	Action AccessControlEntryAction `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return i.ToNetworkAccessControlEntryOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArgs) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryOutput)
}

// NetworkAccessControlEntryArrayInput is an input type that accepts NetworkAccessControlEntryArray and NetworkAccessControlEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryArrayInput` via:
//
//          NetworkAccessControlEntryArray{ NetworkAccessControlEntryArgs{...} }
type NetworkAccessControlEntryArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput
	ToNetworkAccessControlEntryArrayOutputWithContext(context.Context) NetworkAccessControlEntryArrayOutput
}

type NetworkAccessControlEntryArray []NetworkAccessControlEntryInput

func (NetworkAccessControlEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return i.ToNetworkAccessControlEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryArray) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutput() NetworkAccessControlEntryOutput {
	return o
}

func (o NetworkAccessControlEntryOutput) ToNetworkAccessControlEntryOutputWithContext(ctx context.Context) NetworkAccessControlEntryOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntry) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntry)(nil)).Elem()
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutput() NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) ToNetworkAccessControlEntryArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryArrayOutput {
	return o
}

func (o NetworkAccessControlEntryArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntry {
		return vs[0].([]NetworkAccessControlEntry)[vs[1].(int)]
	}).(NetworkAccessControlEntryOutput)
}

// Network access control entry.
type NetworkAccessControlEntryInvokeResponse struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryInvokeResponseInput is an input type that accepts NetworkAccessControlEntryInvokeResponseArgs and NetworkAccessControlEntryInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInvokeResponseInput` via:
//
//          NetworkAccessControlEntryInvokeResponseArgs{...}
type NetworkAccessControlEntryInvokeResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryInvokeResponseOutput() NetworkAccessControlEntryInvokeResponseOutput
	ToNetworkAccessControlEntryInvokeResponseOutputWithContext(context.Context) NetworkAccessControlEntryInvokeResponseOutput
}

// Network access control entry.
type NetworkAccessControlEntryInvokeResponseArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryInvokeResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryInvokeResponseArgs) ToNetworkAccessControlEntryInvokeResponseOutput() NetworkAccessControlEntryInvokeResponseOutput {
	return i.ToNetworkAccessControlEntryInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryInvokeResponseArgs) ToNetworkAccessControlEntryInvokeResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryInvokeResponseOutput)
}

// NetworkAccessControlEntryInvokeResponseArrayInput is an input type that accepts NetworkAccessControlEntryInvokeResponseArray and NetworkAccessControlEntryInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryInvokeResponseArrayInput` via:
//
//          NetworkAccessControlEntryInvokeResponseArray{ NetworkAccessControlEntryInvokeResponseArgs{...} }
type NetworkAccessControlEntryInvokeResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryInvokeResponseArrayOutput() NetworkAccessControlEntryInvokeResponseArrayOutput
	ToNetworkAccessControlEntryInvokeResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryInvokeResponseArrayOutput
}

type NetworkAccessControlEntryInvokeResponseArray []NetworkAccessControlEntryInvokeResponseInput

func (NetworkAccessControlEntryInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryInvokeResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryInvokeResponseArray) ToNetworkAccessControlEntryInvokeResponseArrayOutput() NetworkAccessControlEntryInvokeResponseArrayOutput {
	return i.ToNetworkAccessControlEntryInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryInvokeResponseArray) ToNetworkAccessControlEntryInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryInvokeResponseArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryInvokeResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryInvokeResponseOutput) ToNetworkAccessControlEntryInvokeResponseOutput() NetworkAccessControlEntryInvokeResponseOutput {
	return o
}

func (o NetworkAccessControlEntryInvokeResponseOutput) ToNetworkAccessControlEntryInvokeResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryInvokeResponseOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryInvokeResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryInvokeResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryInvokeResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryInvokeResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryInvokeResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryInvokeResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryInvokeResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryInvokeResponseArrayOutput) ToNetworkAccessControlEntryInvokeResponseArrayOutput() NetworkAccessControlEntryInvokeResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryInvokeResponseArrayOutput) ToNetworkAccessControlEntryInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryInvokeResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryInvokeResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryInvokeResponse {
		return vs[0].([]NetworkAccessControlEntryInvokeResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryInvokeResponseOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponse struct {
	// Action object.
	Action *string `pulumi:"action"`
	// Description of network access control entry.
	Description *string `pulumi:"description"`
	// Order of precedence.
	Order *int `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet *string `pulumi:"remoteSubnet"`
}

// NetworkAccessControlEntryResponseInput is an input type that accepts NetworkAccessControlEntryResponseArgs and NetworkAccessControlEntryResponseOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseInput` via:
//
//          NetworkAccessControlEntryResponseArgs{...}
type NetworkAccessControlEntryResponseInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput
	ToNetworkAccessControlEntryResponseOutputWithContext(context.Context) NetworkAccessControlEntryResponseOutput
}

// Network access control entry.
type NetworkAccessControlEntryResponseArgs struct {
	// Action object.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Description of network access control entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Order of precedence.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Remote subnet.
	RemoteSubnet pulumi.StringPtrInput `pulumi:"remoteSubnet"`
}

func (NetworkAccessControlEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return i.ToNetworkAccessControlEntryResponseOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArgs) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseOutput)
}

// NetworkAccessControlEntryResponseArrayInput is an input type that accepts NetworkAccessControlEntryResponseArray and NetworkAccessControlEntryResponseArrayOutput values.
// You can construct a concrete instance of `NetworkAccessControlEntryResponseArrayInput` via:
//
//          NetworkAccessControlEntryResponseArray{ NetworkAccessControlEntryResponseArgs{...} }
type NetworkAccessControlEntryResponseArrayInput interface {
	pulumi.Input

	ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput
	ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Context) NetworkAccessControlEntryResponseArrayOutput
}

type NetworkAccessControlEntryResponseArray []NetworkAccessControlEntryResponseInput

func (NetworkAccessControlEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return i.ToNetworkAccessControlEntryResponseArrayOutputWithContext(context.Background())
}

func (i NetworkAccessControlEntryResponseArray) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAccessControlEntryResponseArrayOutput)
}

// Network access control entry.
type NetworkAccessControlEntryResponseOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutput() NetworkAccessControlEntryResponseOutput {
	return o
}

func (o NetworkAccessControlEntryResponseOutput) ToNetworkAccessControlEntryResponseOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseOutput {
	return o
}

// Action object.
func (o NetworkAccessControlEntryResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// Description of network access control entry.
func (o NetworkAccessControlEntryResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Order of precedence.
func (o NetworkAccessControlEntryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Remote subnet.
func (o NetworkAccessControlEntryResponseOutput) RemoteSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAccessControlEntryResponse) *string { return v.RemoteSubnet }).(pulumi.StringPtrOutput)
}

type NetworkAccessControlEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkAccessControlEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAccessControlEntryResponse)(nil)).Elem()
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutput() NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) ToNetworkAccessControlEntryResponseArrayOutputWithContext(ctx context.Context) NetworkAccessControlEntryResponseArrayOutput {
	return o
}

func (o NetworkAccessControlEntryResponseArrayOutput) Index(i pulumi.IntInput) NetworkAccessControlEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAccessControlEntryResponse {
		return vs[0].([]NetworkAccessControlEntryResponse)[vs[1].(int)]
	}).(NetworkAccessControlEntryResponseOutput)
}

// The state of a private link connection
type PrivateLinkConnectionState struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateInput is an input type that accepts PrivateLinkConnectionStateArgs and PrivateLinkConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateInput` via:
//
//          PrivateLinkConnectionStateArgs{...}
type PrivateLinkConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput
	ToPrivateLinkConnectionStateOutputWithContext(context.Context) PrivateLinkConnectionStateOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return i.ToPrivateLinkConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput)
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput).ToPrivateLinkConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkConnectionStatePtrInput is an input type that accepts PrivateLinkConnectionStateArgs, PrivateLinkConnectionStatePtr and PrivateLinkConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStatePtrInput` via:
//
//          PrivateLinkConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput
	ToPrivateLinkConnectionStatePtrOutputWithContext(context.Context) PrivateLinkConnectionStatePtrOutput
}

type privateLinkConnectionStatePtrType PrivateLinkConnectionStateArgs

func PrivateLinkConnectionStatePtr(v *PrivateLinkConnectionStateArgs) PrivateLinkConnectionStatePtrInput {
	return (*privateLinkConnectionStatePtrType)(v)
}

func (*privateLinkConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStatePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *PrivateLinkConnectionState {
		return &v
	}).(PrivateLinkConnectionStatePtrOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) Elem() PrivateLinkConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) PrivateLinkConnectionState { return *v }).(PrivateLinkConnectionStateOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateInvokeResponse struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateInvokeResponseInput is an input type that accepts PrivateLinkConnectionStateInvokeResponseArgs and PrivateLinkConnectionStateInvokeResponseOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateInvokeResponseInput` via:
//
//          PrivateLinkConnectionStateInvokeResponseArgs{...}
type PrivateLinkConnectionStateInvokeResponseInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateInvokeResponseOutput() PrivateLinkConnectionStateInvokeResponseOutput
	ToPrivateLinkConnectionStateInvokeResponseOutputWithContext(context.Context) PrivateLinkConnectionStateInvokeResponseOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateInvokeResponseArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateInvokeResponse)(nil)).Elem()
}

func (i PrivateLinkConnectionStateInvokeResponseArgs) ToPrivateLinkConnectionStateInvokeResponseOutput() PrivateLinkConnectionStateInvokeResponseOutput {
	return i.ToPrivateLinkConnectionStateInvokeResponseOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateInvokeResponseArgs) ToPrivateLinkConnectionStateInvokeResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateInvokeResponseOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateInvokeResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateInvokeResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateInvokeResponseOutput) ToPrivateLinkConnectionStateInvokeResponseOutput() PrivateLinkConnectionStateInvokeResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateInvokeResponseOutput) ToPrivateLinkConnectionStateInvokeResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateInvokeResponseOutput {
	return o
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateInvokeResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateInvokeResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateResponse struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateResponseInput is an input type that accepts PrivateLinkConnectionStateResponseArgs and PrivateLinkConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateResponseInput` via:
//
//          PrivateLinkConnectionStateResponseArgs{...}
type PrivateLinkConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput
	ToPrivateLinkConnectionStateResponseOutputWithContext(context.Context) PrivateLinkConnectionStateResponseOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateResponseArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return i.ToPrivateLinkConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponseOutput)
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateResponseArgs) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponseOutput).ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkConnectionStateResponsePtrInput is an input type that accepts PrivateLinkConnectionStateResponseArgs, PrivateLinkConnectionStateResponsePtr and PrivateLinkConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateResponsePtrInput` via:
//
//          PrivateLinkConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput
	ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkConnectionStateResponsePtrOutput
}

type privateLinkConnectionStateResponsePtrType PrivateLinkConnectionStateResponseArgs

func PrivateLinkConnectionStateResponsePtr(v *PrivateLinkConnectionStateResponseArgs) PrivateLinkConnectionStateResponsePtrInput {
	return (*privateLinkConnectionStateResponsePtrType)(v)
}

func (*privateLinkConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkConnectionStateResponsePtrType) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkConnectionStateResponsePtrType) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateResponsePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *PrivateLinkConnectionStateResponse {
		return &v
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) Elem() PrivateLinkConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) PrivateLinkConnectionStateResponse { return *v }).(PrivateLinkConnectionStateResponseOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettings struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
}

// PushSettingsInput is an input type that accepts PushSettingsArgs and PushSettingsOutput values.
// You can construct a concrete instance of `PushSettingsInput` via:
//
//          PushSettingsArgs{...}
type PushSettingsInput interface {
	pulumi.Input

	ToPushSettingsOutput() PushSettingsOutput
	ToPushSettingsOutputWithContext(context.Context) PushSettingsOutput
}

// Push settings for the App.
type PushSettingsArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
}

func (PushSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (i PushSettingsArgs) ToPushSettingsOutput() PushSettingsOutput {
	return i.ToPushSettingsOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput)
}

func (i PushSettingsArgs) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput).ToPushSettingsPtrOutputWithContext(ctx)
}

// PushSettingsPtrInput is an input type that accepts PushSettingsArgs, PushSettingsPtr and PushSettingsPtrOutput values.
// You can construct a concrete instance of `PushSettingsPtrInput` via:
//
//          PushSettingsArgs{...}
//
//  or:
//
//          nil
type PushSettingsPtrInput interface {
	pulumi.Input

	ToPushSettingsPtrOutput() PushSettingsPtrOutput
	ToPushSettingsPtrOutputWithContext(context.Context) PushSettingsPtrOutput
}

type pushSettingsPtrType PushSettingsArgs

func PushSettingsPtr(v *PushSettingsArgs) PushSettingsPtrInput {
	return (*pushSettingsPtrType)(v)
}

func (*pushSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsPtrOutput)
}

// Push settings for the App.
type PushSettingsOutput struct{ *pulumi.OutputState }

func (PushSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (o PushSettingsOutput) ToPushSettingsOutput() PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (o PushSettingsOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o.ApplyT(func(v PushSettings) *PushSettings {
		return &v
	}).(PushSettingsPtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettings) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

type PushSettingsPtrOutput struct{ *pulumi.OutputState }

func (PushSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) Elem() PushSettingsOutput {
	return o.ApplyT(func(v *PushSettings) PushSettings { return *v }).(PushSettingsOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsPtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsPtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsPtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsPtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettingsInvokeResponse struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PushSettingsInvokeResponseInput is an input type that accepts PushSettingsInvokeResponseArgs and PushSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `PushSettingsInvokeResponseInput` via:
//
//          PushSettingsInvokeResponseArgs{...}
type PushSettingsInvokeResponseInput interface {
	pulumi.Input

	ToPushSettingsInvokeResponseOutput() PushSettingsInvokeResponseOutput
	ToPushSettingsInvokeResponseOutputWithContext(context.Context) PushSettingsInvokeResponseOutput
}

// Push settings for the App.
type PushSettingsInvokeResponseArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PushSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsInvokeResponse)(nil)).Elem()
}

func (i PushSettingsInvokeResponseArgs) ToPushSettingsInvokeResponseOutput() PushSettingsInvokeResponseOutput {
	return i.ToPushSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i PushSettingsInvokeResponseArgs) ToPushSettingsInvokeResponseOutputWithContext(ctx context.Context) PushSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsInvokeResponseOutput)
}

func (i PushSettingsInvokeResponseArgs) ToPushSettingsInvokeResponsePtrOutput() PushSettingsInvokeResponsePtrOutput {
	return i.ToPushSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PushSettingsInvokeResponseArgs) ToPushSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PushSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsInvokeResponseOutput).ToPushSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// PushSettingsInvokeResponsePtrInput is an input type that accepts PushSettingsInvokeResponseArgs, PushSettingsInvokeResponsePtr and PushSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PushSettingsInvokeResponsePtrInput` via:
//
//          PushSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PushSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToPushSettingsInvokeResponsePtrOutput() PushSettingsInvokeResponsePtrOutput
	ToPushSettingsInvokeResponsePtrOutputWithContext(context.Context) PushSettingsInvokeResponsePtrOutput
}

type pushSettingsInvokeResponsePtrType PushSettingsInvokeResponseArgs

func PushSettingsInvokeResponsePtr(v *PushSettingsInvokeResponseArgs) PushSettingsInvokeResponsePtrInput {
	return (*pushSettingsInvokeResponsePtrType)(v)
}

func (*pushSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsInvokeResponse)(nil)).Elem()
}

func (i *pushSettingsInvokeResponsePtrType) ToPushSettingsInvokeResponsePtrOutput() PushSettingsInvokeResponsePtrOutput {
	return i.ToPushSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *pushSettingsInvokeResponsePtrType) ToPushSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PushSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsInvokeResponsePtrOutput)
}

// Push settings for the App.
type PushSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (PushSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsInvokeResponse)(nil)).Elem()
}

func (o PushSettingsInvokeResponseOutput) ToPushSettingsInvokeResponseOutput() PushSettingsInvokeResponseOutput {
	return o
}

func (o PushSettingsInvokeResponseOutput) ToPushSettingsInvokeResponseOutputWithContext(ctx context.Context) PushSettingsInvokeResponseOutput {
	return o
}

func (o PushSettingsInvokeResponseOutput) ToPushSettingsInvokeResponsePtrOutput() PushSettingsInvokeResponsePtrOutput {
	return o.ToPushSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PushSettingsInvokeResponseOutput) ToPushSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PushSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) *PushSettingsInvokeResponse {
		return &v
	}).(PushSettingsInvokeResponsePtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsInvokeResponseOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsInvokeResponseOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The system metadata relating to this resource.
func (o PushSettingsInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsInvokeResponseOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsInvokeResponseOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PushSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PushSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsInvokeResponse)(nil)).Elem()
}

func (o PushSettingsInvokeResponsePtrOutput) ToPushSettingsInvokeResponsePtrOutput() PushSettingsInvokeResponsePtrOutput {
	return o
}

func (o PushSettingsInvokeResponsePtrOutput) ToPushSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PushSettingsInvokeResponsePtrOutput {
	return o
}

func (o PushSettingsInvokeResponsePtrOutput) Elem() PushSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) PushSettingsInvokeResponse { return *v }).(PushSettingsInvokeResponseOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsInvokeResponsePtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsInvokeResponsePtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsInvokeResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o PushSettingsInvokeResponsePtrOutput) SystemData() SystemDataInvokeResponsePtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *SystemDataInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SystemData
	}).(SystemDataInvokeResponsePtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsInvokeResponsePtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsInvokeResponsePtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettingsResponse struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PushSettingsResponseInput is an input type that accepts PushSettingsResponseArgs and PushSettingsResponseOutput values.
// You can construct a concrete instance of `PushSettingsResponseInput` via:
//
//          PushSettingsResponseArgs{...}
type PushSettingsResponseInput interface {
	pulumi.Input

	ToPushSettingsResponseOutput() PushSettingsResponseOutput
	ToPushSettingsResponseOutputWithContext(context.Context) PushSettingsResponseOutput
}

// Push settings for the App.
type PushSettingsResponseArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponseInput `pulumi:"systemData"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PushSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return i.ToPushSettingsResponseOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput)
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PushSettingsResponseArgs) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponseOutput).ToPushSettingsResponsePtrOutputWithContext(ctx)
}

// PushSettingsResponsePtrInput is an input type that accepts PushSettingsResponseArgs, PushSettingsResponsePtr and PushSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PushSettingsResponsePtrInput` via:
//
//          PushSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PushSettingsResponsePtrInput interface {
	pulumi.Input

	ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput
	ToPushSettingsResponsePtrOutputWithContext(context.Context) PushSettingsResponsePtrOutput
}

type pushSettingsResponsePtrType PushSettingsResponseArgs

func PushSettingsResponsePtr(v *PushSettingsResponseArgs) PushSettingsResponsePtrInput {
	return (*pushSettingsResponsePtrType)(v)
}

func (*pushSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return i.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *pushSettingsResponsePtrType) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsResponsePtrOutput)
}

// Push settings for the App.
type PushSettingsResponseOutput struct{ *pulumi.OutputState }

func (PushSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o.ToPushSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PushSettingsResponseOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *PushSettingsResponse {
		return &v
	}).(PushSettingsResponsePtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponseOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponseOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettingsResponse) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The system metadata relating to this resource.
func (o PushSettingsResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PushSettingsResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponseOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponseOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PushSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) Elem() PushSettingsResponseOutput {
	return o.ApplyT(func(v *PushSettingsResponse) PushSettingsResponse { return *v }).(PushSettingsResponseOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponsePtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponsePtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o PushSettingsResponsePtrOutput) SystemData() SystemDataResponsePtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *SystemDataResponse {
		if v == nil {
			return nil
		}
		return &v.SystemData
	}).(SystemDataResponsePtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponsePtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponsePtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRule struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInput is an input type that accepts RampUpRuleArgs and RampUpRuleOutput values.
// You can construct a concrete instance of `RampUpRuleInput` via:
//
//          RampUpRuleArgs{...}
type RampUpRuleInput interface {
	pulumi.Input

	ToRampUpRuleOutput() RampUpRuleOutput
	ToRampUpRuleOutputWithContext(context.Context) RampUpRuleOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArgs) ToRampUpRuleOutput() RampUpRuleOutput {
	return i.ToRampUpRuleOutputWithContext(context.Background())
}

func (i RampUpRuleArgs) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleOutput)
}

// RampUpRuleArrayInput is an input type that accepts RampUpRuleArray and RampUpRuleArrayOutput values.
// You can construct a concrete instance of `RampUpRuleArrayInput` via:
//
//          RampUpRuleArray{ RampUpRuleArgs{...} }
type RampUpRuleArrayInput interface {
	pulumi.Input

	ToRampUpRuleArrayOutput() RampUpRuleArrayOutput
	ToRampUpRuleArrayOutputWithContext(context.Context) RampUpRuleArrayOutput
}

type RampUpRuleArray []RampUpRuleInput

func (RampUpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return i.ToRampUpRuleArrayOutputWithContext(context.Background())
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleOutput struct{ *pulumi.OutputState }

func (RampUpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (o RampUpRuleOutput) ToRampUpRuleOutput() RampUpRuleOutput {
	return o
}

func (o RampUpRuleOutput) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRule) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) Index(i pulumi.IntInput) RampUpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRule {
		return vs[0].([]RampUpRule)[vs[1].(int)]
	}).(RampUpRuleOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleInvokeResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInvokeResponseInput is an input type that accepts RampUpRuleInvokeResponseArgs and RampUpRuleInvokeResponseOutput values.
// You can construct a concrete instance of `RampUpRuleInvokeResponseInput` via:
//
//          RampUpRuleInvokeResponseArgs{...}
type RampUpRuleInvokeResponseInput interface {
	pulumi.Input

	ToRampUpRuleInvokeResponseOutput() RampUpRuleInvokeResponseOutput
	ToRampUpRuleInvokeResponseOutputWithContext(context.Context) RampUpRuleInvokeResponseOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleInvokeResponseArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleInvokeResponse)(nil)).Elem()
}

func (i RampUpRuleInvokeResponseArgs) ToRampUpRuleInvokeResponseOutput() RampUpRuleInvokeResponseOutput {
	return i.ToRampUpRuleInvokeResponseOutputWithContext(context.Background())
}

func (i RampUpRuleInvokeResponseArgs) ToRampUpRuleInvokeResponseOutputWithContext(ctx context.Context) RampUpRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleInvokeResponseOutput)
}

// RampUpRuleInvokeResponseArrayInput is an input type that accepts RampUpRuleInvokeResponseArray and RampUpRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RampUpRuleInvokeResponseArrayInput` via:
//
//          RampUpRuleInvokeResponseArray{ RampUpRuleInvokeResponseArgs{...} }
type RampUpRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToRampUpRuleInvokeResponseArrayOutput() RampUpRuleInvokeResponseArrayOutput
	ToRampUpRuleInvokeResponseArrayOutputWithContext(context.Context) RampUpRuleInvokeResponseArrayOutput
}

type RampUpRuleInvokeResponseArray []RampUpRuleInvokeResponseInput

func (RampUpRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleInvokeResponse)(nil)).Elem()
}

func (i RampUpRuleInvokeResponseArray) ToRampUpRuleInvokeResponseArrayOutput() RampUpRuleInvokeResponseArrayOutput {
	return i.ToRampUpRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RampUpRuleInvokeResponseArray) ToRampUpRuleInvokeResponseArrayOutputWithContext(ctx context.Context) RampUpRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleInvokeResponseArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleInvokeResponse)(nil)).Elem()
}

func (o RampUpRuleInvokeResponseOutput) ToRampUpRuleInvokeResponseOutput() RampUpRuleInvokeResponseOutput {
	return o
}

func (o RampUpRuleInvokeResponseOutput) ToRampUpRuleInvokeResponseOutputWithContext(ctx context.Context) RampUpRuleInvokeResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleInvokeResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleInvokeResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleInvokeResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleInvokeResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleInvokeResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleInvokeResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleInvokeResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleInvokeResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleInvokeResponse)(nil)).Elem()
}

func (o RampUpRuleInvokeResponseArrayOutput) ToRampUpRuleInvokeResponseArrayOutput() RampUpRuleInvokeResponseArrayOutput {
	return o
}

func (o RampUpRuleInvokeResponseArrayOutput) ToRampUpRuleInvokeResponseArrayOutputWithContext(ctx context.Context) RampUpRuleInvokeResponseArrayOutput {
	return o
}

func (o RampUpRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleInvokeResponse {
		return vs[0].([]RampUpRuleInvokeResponse)[vs[1].(int)]
	}).(RampUpRuleInvokeResponseOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleResponseInput is an input type that accepts RampUpRuleResponseArgs and RampUpRuleResponseOutput values.
// You can construct a concrete instance of `RampUpRuleResponseInput` via:
//
//          RampUpRuleResponseArgs{...}
type RampUpRuleResponseInput interface {
	pulumi.Input

	ToRampUpRuleResponseOutput() RampUpRuleResponseOutput
	ToRampUpRuleResponseOutputWithContext(context.Context) RampUpRuleResponseOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return i.ToRampUpRuleResponseOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArgs) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseOutput)
}

// RampUpRuleResponseArrayInput is an input type that accepts RampUpRuleResponseArray and RampUpRuleResponseArrayOutput values.
// You can construct a concrete instance of `RampUpRuleResponseArrayInput` via:
//
//          RampUpRuleResponseArray{ RampUpRuleResponseArgs{...} }
type RampUpRuleResponseArrayInput interface {
	pulumi.Input

	ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput
	ToRampUpRuleResponseArrayOutputWithContext(context.Context) RampUpRuleResponseArrayOutput
}

type RampUpRuleResponseArray []RampUpRuleResponseInput

func (RampUpRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return i.ToRampUpRuleResponseArrayOutputWithContext(context.Background())
}

func (i RampUpRuleResponseArray) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleResponseArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return o
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleResponse {
		return vs[0].([]RampUpRuleResponse)[vs[1].(int)]
	}).(RampUpRuleResponseOutput)
}

// Trigger based on total requests.
type RequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInput is an input type that accepts RequestsBasedTriggerArgs and RequestsBasedTriggerOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInput` via:
//
//          RequestsBasedTriggerArgs{...}
type RequestsBasedTriggerInput interface {
	pulumi.Input

	ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput
	ToRequestsBasedTriggerOutputWithContext(context.Context) RequestsBasedTriggerOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return i.ToRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput)
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput).ToRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// RequestsBasedTriggerPtrInput is an input type that accepts RequestsBasedTriggerArgs, RequestsBasedTriggerPtr and RequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerPtrInput` via:
//
//          RequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput
	ToRequestsBasedTriggerPtrOutputWithContext(context.Context) RequestsBasedTriggerPtrOutput
}

type requestsBasedTriggerPtrType RequestsBasedTriggerArgs

func RequestsBasedTriggerPtr(v *RequestsBasedTriggerArgs) RequestsBasedTriggerPtrInput {
	return (*requestsBasedTriggerPtrType)(v)
}

func (*requestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *RequestsBasedTrigger {
		return &v
	}).(RequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) Elem() RequestsBasedTriggerOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) RequestsBasedTrigger { return *v }).(RequestsBasedTriggerOutput)
}

// Request Count.
func (o RequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerInvokeResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInvokeResponseInput is an input type that accepts RequestsBasedTriggerInvokeResponseArgs and RequestsBasedTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInvokeResponseInput` via:
//
//          RequestsBasedTriggerInvokeResponseArgs{...}
type RequestsBasedTriggerInvokeResponseInput interface {
	pulumi.Input

	ToRequestsBasedTriggerInvokeResponseOutput() RequestsBasedTriggerInvokeResponseOutput
	ToRequestsBasedTriggerInvokeResponseOutputWithContext(context.Context) RequestsBasedTriggerInvokeResponseOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerInvokeResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i RequestsBasedTriggerInvokeResponseArgs) ToRequestsBasedTriggerInvokeResponseOutput() RequestsBasedTriggerInvokeResponseOutput {
	return i.ToRequestsBasedTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerInvokeResponseArgs) ToRequestsBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerInvokeResponseOutput)
}

func (i RequestsBasedTriggerInvokeResponseArgs) ToRequestsBasedTriggerInvokeResponsePtrOutput() RequestsBasedTriggerInvokeResponsePtrOutput {
	return i.ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerInvokeResponseArgs) ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerInvokeResponseOutput).ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx)
}

// RequestsBasedTriggerInvokeResponsePtrInput is an input type that accepts RequestsBasedTriggerInvokeResponseArgs, RequestsBasedTriggerInvokeResponsePtr and RequestsBasedTriggerInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInvokeResponsePtrInput` via:
//
//          RequestsBasedTriggerInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerInvokeResponsePtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerInvokeResponsePtrOutput() RequestsBasedTriggerInvokeResponsePtrOutput
	ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Context) RequestsBasedTriggerInvokeResponsePtrOutput
}

type requestsBasedTriggerInvokeResponsePtrType RequestsBasedTriggerInvokeResponseArgs

func RequestsBasedTriggerInvokeResponsePtr(v *RequestsBasedTriggerInvokeResponseArgs) RequestsBasedTriggerInvokeResponsePtrInput {
	return (*requestsBasedTriggerInvokeResponsePtrType)(v)
}

func (*requestsBasedTriggerInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i *requestsBasedTriggerInvokeResponsePtrType) ToRequestsBasedTriggerInvokeResponsePtrOutput() RequestsBasedTriggerInvokeResponsePtrOutput {
	return i.ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerInvokeResponsePtrType) ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerInvokeResponsePtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerInvokeResponseOutput) ToRequestsBasedTriggerInvokeResponseOutput() RequestsBasedTriggerInvokeResponseOutput {
	return o
}

func (o RequestsBasedTriggerInvokeResponseOutput) ToRequestsBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponseOutput {
	return o
}

func (o RequestsBasedTriggerInvokeResponseOutput) ToRequestsBasedTriggerInvokeResponsePtrOutput() RequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerInvokeResponseOutput) ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerInvokeResponse) *RequestsBasedTriggerInvokeResponse {
		return &v
	}).(RequestsBasedTriggerInvokeResponsePtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerInvokeResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerInvokeResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerInvokeResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerInvokeResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerInvokeResponsePtrOutput) ToRequestsBasedTriggerInvokeResponsePtrOutput() RequestsBasedTriggerInvokeResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerInvokeResponsePtrOutput) ToRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerInvokeResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerInvokeResponsePtrOutput) Elem() RequestsBasedTriggerInvokeResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerInvokeResponse) RequestsBasedTriggerInvokeResponse { return *v }).(RequestsBasedTriggerInvokeResponseOutput)
}

// Request Count.
func (o RequestsBasedTriggerInvokeResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerInvokeResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerResponseInput is an input type that accepts RequestsBasedTriggerResponseArgs and RequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponseInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
type RequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput
	ToRequestsBasedTriggerResponseOutputWithContext(context.Context) RequestsBasedTriggerResponseOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return i.ToRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput)
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerResponseArgs) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponseOutput).ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// RequestsBasedTriggerResponsePtrInput is an input type that accepts RequestsBasedTriggerResponseArgs, RequestsBasedTriggerResponsePtr and RequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerResponsePtrInput` via:
//
//          RequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type RequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput
	ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) RequestsBasedTriggerResponsePtrOutput
}

type requestsBasedTriggerResponsePtrType RequestsBasedTriggerResponseArgs

func RequestsBasedTriggerResponsePtr(v *RequestsBasedTriggerResponseArgs) RequestsBasedTriggerResponsePtrInput {
	return (*requestsBasedTriggerResponsePtrType)(v)
}

func (*requestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return i.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerResponsePtrType) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o.ToRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *RequestsBasedTriggerResponse {
		return &v
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) Elem() RequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) RequestsBasedTriggerResponse { return *v }).(RequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Configuration of an App Service app.
type SiteConfig struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfig `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *Experiments `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimits `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettings `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestriction `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigInput is an input type that accepts SiteConfigArgs and SiteConfigOutput values.
// You can construct a concrete instance of `SiteConfigInput` via:
//
//          SiteConfigArgs{...}
type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(context.Context) SiteConfigOutput
}

// Configuration of an App Service app.
type SiteConfigArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoPtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigPtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesPtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings ConnStringInfoArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsPtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsPtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing SiteLoadBalancing `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode ManagedPipelineMode `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsPtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (i SiteConfigArgs) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

func (i SiteConfigArgs) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput).ToSiteConfigPtrOutputWithContext(ctx)
}

// SiteConfigPtrInput is an input type that accepts SiteConfigArgs, SiteConfigPtr and SiteConfigPtrOutput values.
// You can construct a concrete instance of `SiteConfigPtrInput` via:
//
//          SiteConfigArgs{...}
//
//  or:
//
//          nil
type SiteConfigPtrInput interface {
	pulumi.Input

	ToSiteConfigPtrOutput() SiteConfigPtrOutput
	ToSiteConfigPtrOutputWithContext(context.Context) SiteConfigPtrOutput
}

type siteConfigPtrType SiteConfigArgs

func SiteConfigPtr(v *SiteConfigArgs) SiteConfigPtrInput {
	return (*siteConfigPtrType)(v)
}

func (*siteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigOutput struct{ *pulumi.OutputState }

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (o SiteConfigOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteConfig {
		return &v
	}).(SiteConfigPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiDefinitionInfo { return v.ApiDefinition }).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiManagementConfig { return v.ApiManagementConfig }).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfig) []NameValuePair { return v.AppSettings }).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v SiteConfig) *AutoHealRules { return v.AutoHealRules }).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v SiteConfig) []ConnStringInfo { return v.ConnectionStrings }).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *CorsSettings { return v.Cors }).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *Experiments { return v.Experiments }).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v SiteConfig) []HandlerMapping { return v.HandlerMappings }).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.IpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteLimits { return v.Limits }).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *PushSettings { return v.Push }).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v SiteConfig) []VirtualApplication { return v.VirtualApplications }).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) Elem() SiteConfigOutput {
	return o.ApplyT(func(v *SiteConfig) SiteConfig { return *v }).(SiteConfigOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigPtrOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiDefinitionInfo {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigPtrOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiManagementConfig {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigPtrOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigPtrOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *AutoHealRules {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigPtrOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []ConnStringInfo {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPtrOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *CorsSettings {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigPtrOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *Experiments {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigPtrOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []HandlerMapping {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigPtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigPtrOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigPtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigPtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigPtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigPtrOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *PushSettings {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigPtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigPtrOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []VirtualApplication {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigPtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigPtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigPtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigInvokeResponse struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoInvokeResponse `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfigInvokeResponse `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairInvokeResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesInvokeResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoInvokeResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsInvokeResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsInvokeResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMappingInvokeResponse `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionInvokeResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimitsInvokeResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyInvokeResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsInvokeResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionInvokeResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationInvokeResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigInvokeResponseInput is an input type that accepts SiteConfigInvokeResponseArgs and SiteConfigInvokeResponseOutput values.
// You can construct a concrete instance of `SiteConfigInvokeResponseInput` via:
//
//          SiteConfigInvokeResponseArgs{...}
type SiteConfigInvokeResponseInput interface {
	pulumi.Input

	ToSiteConfigInvokeResponseOutput() SiteConfigInvokeResponseOutput
	ToSiteConfigInvokeResponseOutputWithContext(context.Context) SiteConfigInvokeResponseOutput
}

// Configuration of an App Service app.
type SiteConfigInvokeResponseArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoInvokeResponsePtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigInvokeResponsePtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairInvokeResponseArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesInvokeResponsePtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings ConnStringInfoInvokeResponseArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsInvokeResponsePtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsInvokeResponsePtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingInvokeResponseArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionInvokeResponseArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsInvokeResponsePtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyInvokeResponseInput `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsInvokeResponsePtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionInvokeResponseArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationInvokeResponseArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigInvokeResponse)(nil)).Elem()
}

func (i SiteConfigInvokeResponseArgs) ToSiteConfigInvokeResponseOutput() SiteConfigInvokeResponseOutput {
	return i.ToSiteConfigInvokeResponseOutputWithContext(context.Background())
}

func (i SiteConfigInvokeResponseArgs) ToSiteConfigInvokeResponseOutputWithContext(ctx context.Context) SiteConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigInvokeResponseOutput)
}

// Configuration of an App Service app.
type SiteConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigInvokeResponse)(nil)).Elem()
}

func (o SiteConfigInvokeResponseOutput) ToSiteConfigInvokeResponseOutput() SiteConfigInvokeResponseOutput {
	return o
}

func (o SiteConfigInvokeResponseOutput) ToSiteConfigInvokeResponseOutputWithContext(ctx context.Context) SiteConfigInvokeResponseOutput {
	return o
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigInvokeResponseOutput) ApiDefinition() ApiDefinitionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *ApiDefinitionInfoInvokeResponse { return v.ApiDefinition }).(ApiDefinitionInfoInvokeResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigInvokeResponseOutput) ApiManagementConfig() ApiManagementConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *ApiManagementConfigInvokeResponse { return v.ApiManagementConfig }).(ApiManagementConfigInvokeResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigInvokeResponseOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigInvokeResponseOutput) AppSettings() NameValuePairInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []NameValuePairInvokeResponse { return v.AppSettings }).(NameValuePairInvokeResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigInvokeResponseOutput) AutoHealRules() AutoHealRulesInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *AutoHealRulesInvokeResponse { return v.AutoHealRules }).(AutoHealRulesInvokeResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigInvokeResponseOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigInvokeResponseOutput) ConnectionStrings() ConnStringInfoInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []ConnStringInfoInvokeResponse { return v.ConnectionStrings }).(ConnStringInfoInvokeResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigInvokeResponseOutput) Cors() CorsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *CorsSettingsInvokeResponse { return v.Cors }).(CorsSettingsInvokeResponsePtrOutput)
}

// Default documents.
func (o SiteConfigInvokeResponseOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigInvokeResponseOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigInvokeResponseOutput) Experiments() ExperimentsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *ExperimentsInvokeResponse { return v.Experiments }).(ExperimentsInvokeResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigInvokeResponseOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigInvokeResponseOutput) HandlerMappings() HandlerMappingInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []HandlerMappingInvokeResponse { return v.HandlerMappings }).(HandlerMappingInvokeResponseArrayOutput)
}

// Health check path
func (o SiteConfigInvokeResponseOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigInvokeResponseOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigInvokeResponseOutput) IpSecurityRestrictions() IpSecurityRestrictionInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []IpSecurityRestrictionInvokeResponse {
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionInvokeResponseArrayOutput)
}

// Java container.
func (o SiteConfigInvokeResponseOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigInvokeResponseOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigInvokeResponseOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigInvokeResponseOutput) Limits() SiteLimitsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *SiteLimitsInvokeResponse { return v.Limits }).(SiteLimitsInvokeResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigInvokeResponseOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigInvokeResponseOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigInvokeResponseOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigInvokeResponseOutput) MachineKey() SiteMachineKeyInvokeResponseOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) SiteMachineKeyInvokeResponse { return v.MachineKey }).(SiteMachineKeyInvokeResponseOutput)
}

// Managed pipeline mode.
func (o SiteConfigInvokeResponseOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigInvokeResponseOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigInvokeResponseOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigInvokeResponseOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigInvokeResponseOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigInvokeResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigInvokeResponseOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigInvokeResponseOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigInvokeResponseOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigInvokeResponseOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigInvokeResponseOutput) Push() PushSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *PushSettingsInvokeResponse { return v.Push }).(PushSettingsInvokeResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigInvokeResponseOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigInvokeResponseOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigInvokeResponseOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigInvokeResponseOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []IpSecurityRestrictionInvokeResponse {
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionInvokeResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigInvokeResponseOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigInvokeResponseOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigInvokeResponseOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigInvokeResponseOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigInvokeResponseOutput) VirtualApplications() VirtualApplicationInvokeResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) []VirtualApplicationInvokeResponse { return v.VirtualApplications }).(VirtualApplicationInvokeResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigInvokeResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigInvokeResponseOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigInvokeResponseOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigInvokeResponseOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigInvokeResponseOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigInvokeResponseOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigInvokeResponse) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponse struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfigResponse `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Site limits.
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// SiteConfigResponseInput is an input type that accepts SiteConfigResponseArgs and SiteConfigResponseOutput values.
// You can construct a concrete instance of `SiteConfigResponseInput` via:
//
//          SiteConfigResponseArgs{...}
type SiteConfigResponseInput interface {
	pulumi.Input

	ToSiteConfigResponseOutput() SiteConfigResponseOutput
	ToSiteConfigResponseOutputWithContext(context.Context) SiteConfigResponseOutput
}

// Configuration of an App Service app.
type SiteConfigResponseArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigResponsePtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairResponseArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesResponsePtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// Connection strings.
	ConnectionStrings ConnStringInfoResponseArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsResponsePtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingResponseArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Site limits.
	Limits SiteLimitsResponsePtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponseInput `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsResponsePtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionResponseArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationResponseArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

func (SiteConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return i.ToSiteConfigResponseOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput)
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i SiteConfigResponseArgs) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponseOutput).ToSiteConfigResponsePtrOutputWithContext(ctx)
}

// SiteConfigResponsePtrInput is an input type that accepts SiteConfigResponseArgs, SiteConfigResponsePtr and SiteConfigResponsePtrOutput values.
// You can construct a concrete instance of `SiteConfigResponsePtrInput` via:
//
//          SiteConfigResponseArgs{...}
//
//  or:
//
//          nil
type SiteConfigResponsePtrInput interface {
	pulumi.Input

	ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput
	ToSiteConfigResponsePtrOutputWithContext(context.Context) SiteConfigResponsePtrOutput
}

type siteConfigResponsePtrType SiteConfigResponseArgs

func SiteConfigResponsePtr(v *SiteConfigResponseArgs) SiteConfigResponsePtrInput {
	return (*siteConfigResponsePtrType)(v)
}

func (*siteConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return i.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (i *siteConfigResponsePtrType) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigResponsePtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o.ToSiteConfigResponsePtrOutputWithContext(context.Background())
}

func (o SiteConfigResponseOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteConfigResponse {
		return &v
	}).(SiteConfigResponsePtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponseOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiDefinitionInfoResponse { return v.ApiDefinition }).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponseOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiManagementConfigResponse { return v.ApiManagementConfig }).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponseOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponseOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []NameValuePairResponse { return v.AppSettings }).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponseOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *AutoHealRulesResponse { return v.AutoHealRules }).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponseOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigResponseOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []ConnStringInfoResponse { return v.ConnectionStrings }).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponseOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *CorsSettingsResponse { return v.Cors }).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponseOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponseOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponseOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ExperimentsResponse { return v.Experiments }).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponseOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponseOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []HandlerMappingResponse { return v.HandlerMappings }).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponseOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponseOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponseOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.IpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponseOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponseOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponseOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponseOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteLimitsResponse { return v.Limits }).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponseOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponseOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponseOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponseOutput) MachineKey() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v SiteConfigResponse) SiteMachineKeyResponse { return v.MachineKey }).(SiteMachineKeyResponseOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponseOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponseOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponseOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponseOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponseOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponseOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponseOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponseOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponseOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponseOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *PushSettingsResponse { return v.Push }).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponseOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponseOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponseOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponseOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponseOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponseOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponseOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []VirtualApplicationResponse { return v.VirtualApplications }).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponseOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponseOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponseOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponseOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) Elem() SiteConfigResponseOutput {
	return o.ApplyT(func(v *SiteConfigResponse) SiteConfigResponse { return *v }).(SiteConfigResponseOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponsePtrOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiDefinitionInfoResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponsePtrOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiManagementConfigResponse {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponsePtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponsePtrOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponsePtrOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *AutoHealRulesResponse {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponsePtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// Connection strings.
func (o SiteConfigResponsePtrOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []ConnStringInfoResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePtrOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *CorsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponsePtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponsePtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponsePtrOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ExperimentsResponse {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponsePtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponsePtrOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []HandlerMappingResponse {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponsePtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponsePtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponsePtrOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponsePtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponsePtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponsePtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponsePtrOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteLimitsResponse {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponsePtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponsePtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponsePtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponsePtrOutput) MachineKey() SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteMachineKeyResponse {
		if v == nil {
			return nil
		}
		return &v.MachineKey
	}).(SiteMachineKeyResponsePtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponsePtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponsePtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponsePtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponsePtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponsePtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponsePtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponsePtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponsePtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponsePtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponsePtrOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *PushSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponsePtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponsePtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponsePtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponsePtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponsePtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponsePtrOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []VirtualApplicationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponsePtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponsePtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponsePtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Metric limits set on an app.
type SiteLimits struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *float64 `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *float64 `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInput is an input type that accepts SiteLimitsArgs and SiteLimitsOutput values.
// You can construct a concrete instance of `SiteLimitsInput` via:
//
//          SiteLimitsArgs{...}
type SiteLimitsInput interface {
	pulumi.Input

	ToSiteLimitsOutput() SiteLimitsOutput
	ToSiteLimitsOutputWithContext(context.Context) SiteLimitsOutput
}

// Metric limits set on an app.
type SiteLimitsArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.Float64PtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.Float64PtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (i SiteLimitsArgs) ToSiteLimitsOutput() SiteLimitsOutput {
	return i.ToSiteLimitsOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput)
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput).ToSiteLimitsPtrOutputWithContext(ctx)
}

// SiteLimitsPtrInput is an input type that accepts SiteLimitsArgs, SiteLimitsPtr and SiteLimitsPtrOutput values.
// You can construct a concrete instance of `SiteLimitsPtrInput` via:
//
//          SiteLimitsArgs{...}
//
//  or:
//
//          nil
type SiteLimitsPtrInput interface {
	pulumi.Input

	ToSiteLimitsPtrOutput() SiteLimitsPtrOutput
	ToSiteLimitsPtrOutputWithContext(context.Context) SiteLimitsPtrOutput
}

type siteLimitsPtrType SiteLimitsArgs

func SiteLimitsPtr(v *SiteLimitsArgs) SiteLimitsPtrInput {
	return (*siteLimitsPtrType)(v)
}

func (*siteLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsPtrOutput)
}

// Metric limits set on an app.
type SiteLimitsOutput struct{ *pulumi.OutputState }

func (SiteLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (o SiteLimitsOutput) ToSiteLimitsOutput() SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteLimits) *SiteLimits {
		return &v
	}).(SiteLimitsPtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxDiskSizeInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxMemoryInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsPtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) Elem() SiteLimitsOutput {
	return o.ApplyT(func(v *SiteLimits) SiteLimits { return *v }).(SiteLimitsOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsPtrOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsPtrOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsPtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Metric limits set on an app.
type SiteLimitsInvokeResponse struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *float64 `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *float64 `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInvokeResponseInput is an input type that accepts SiteLimitsInvokeResponseArgs and SiteLimitsInvokeResponseOutput values.
// You can construct a concrete instance of `SiteLimitsInvokeResponseInput` via:
//
//          SiteLimitsInvokeResponseArgs{...}
type SiteLimitsInvokeResponseInput interface {
	pulumi.Input

	ToSiteLimitsInvokeResponseOutput() SiteLimitsInvokeResponseOutput
	ToSiteLimitsInvokeResponseOutputWithContext(context.Context) SiteLimitsInvokeResponseOutput
}

// Metric limits set on an app.
type SiteLimitsInvokeResponseArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.Float64PtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.Float64PtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsInvokeResponse)(nil)).Elem()
}

func (i SiteLimitsInvokeResponseArgs) ToSiteLimitsInvokeResponseOutput() SiteLimitsInvokeResponseOutput {
	return i.ToSiteLimitsInvokeResponseOutputWithContext(context.Background())
}

func (i SiteLimitsInvokeResponseArgs) ToSiteLimitsInvokeResponseOutputWithContext(ctx context.Context) SiteLimitsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsInvokeResponseOutput)
}

func (i SiteLimitsInvokeResponseArgs) ToSiteLimitsInvokeResponsePtrOutput() SiteLimitsInvokeResponsePtrOutput {
	return i.ToSiteLimitsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SiteLimitsInvokeResponseArgs) ToSiteLimitsInvokeResponsePtrOutputWithContext(ctx context.Context) SiteLimitsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsInvokeResponseOutput).ToSiteLimitsInvokeResponsePtrOutputWithContext(ctx)
}

// SiteLimitsInvokeResponsePtrInput is an input type that accepts SiteLimitsInvokeResponseArgs, SiteLimitsInvokeResponsePtr and SiteLimitsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SiteLimitsInvokeResponsePtrInput` via:
//
//          SiteLimitsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SiteLimitsInvokeResponsePtrInput interface {
	pulumi.Input

	ToSiteLimitsInvokeResponsePtrOutput() SiteLimitsInvokeResponsePtrOutput
	ToSiteLimitsInvokeResponsePtrOutputWithContext(context.Context) SiteLimitsInvokeResponsePtrOutput
}

type siteLimitsInvokeResponsePtrType SiteLimitsInvokeResponseArgs

func SiteLimitsInvokeResponsePtr(v *SiteLimitsInvokeResponseArgs) SiteLimitsInvokeResponsePtrInput {
	return (*siteLimitsInvokeResponsePtrType)(v)
}

func (*siteLimitsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsInvokeResponse)(nil)).Elem()
}

func (i *siteLimitsInvokeResponsePtrType) ToSiteLimitsInvokeResponsePtrOutput() SiteLimitsInvokeResponsePtrOutput {
	return i.ToSiteLimitsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *siteLimitsInvokeResponsePtrType) ToSiteLimitsInvokeResponsePtrOutputWithContext(ctx context.Context) SiteLimitsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsInvokeResponsePtrOutput)
}

// Metric limits set on an app.
type SiteLimitsInvokeResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsInvokeResponse)(nil)).Elem()
}

func (o SiteLimitsInvokeResponseOutput) ToSiteLimitsInvokeResponseOutput() SiteLimitsInvokeResponseOutput {
	return o
}

func (o SiteLimitsInvokeResponseOutput) ToSiteLimitsInvokeResponseOutputWithContext(ctx context.Context) SiteLimitsInvokeResponseOutput {
	return o
}

func (o SiteLimitsInvokeResponseOutput) ToSiteLimitsInvokeResponsePtrOutput() SiteLimitsInvokeResponsePtrOutput {
	return o.ToSiteLimitsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SiteLimitsInvokeResponseOutput) ToSiteLimitsInvokeResponsePtrOutputWithContext(ctx context.Context) SiteLimitsInvokeResponsePtrOutput {
	return o.ApplyT(func(v SiteLimitsInvokeResponse) *SiteLimitsInvokeResponse {
		return &v
	}).(SiteLimitsInvokeResponsePtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsInvokeResponseOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsInvokeResponse) *float64 { return v.MaxDiskSizeInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsInvokeResponseOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsInvokeResponse) *float64 { return v.MaxMemoryInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsInvokeResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsInvokeResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsInvokeResponse)(nil)).Elem()
}

func (o SiteLimitsInvokeResponsePtrOutput) ToSiteLimitsInvokeResponsePtrOutput() SiteLimitsInvokeResponsePtrOutput {
	return o
}

func (o SiteLimitsInvokeResponsePtrOutput) ToSiteLimitsInvokeResponsePtrOutputWithContext(ctx context.Context) SiteLimitsInvokeResponsePtrOutput {
	return o
}

func (o SiteLimitsInvokeResponsePtrOutput) Elem() SiteLimitsInvokeResponseOutput {
	return o.ApplyT(func(v *SiteLimitsInvokeResponse) SiteLimitsInvokeResponse { return *v }).(SiteLimitsInvokeResponseOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsInvokeResponsePtrOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsInvokeResponsePtrOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsInvokeResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponse struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *float64 `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *float64 `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsResponseInput is an input type that accepts SiteLimitsResponseArgs and SiteLimitsResponseOutput values.
// You can construct a concrete instance of `SiteLimitsResponseInput` via:
//
//          SiteLimitsResponseArgs{...}
type SiteLimitsResponseInput interface {
	pulumi.Input

	ToSiteLimitsResponseOutput() SiteLimitsResponseOutput
	ToSiteLimitsResponseOutputWithContext(context.Context) SiteLimitsResponseOutput
}

// Metric limits set on an app.
type SiteLimitsResponseArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.Float64PtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.Float64PtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return i.ToSiteLimitsResponseOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput)
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i SiteLimitsResponseArgs) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponseOutput).ToSiteLimitsResponsePtrOutputWithContext(ctx)
}

// SiteLimitsResponsePtrInput is an input type that accepts SiteLimitsResponseArgs, SiteLimitsResponsePtr and SiteLimitsResponsePtrOutput values.
// You can construct a concrete instance of `SiteLimitsResponsePtrInput` via:
//
//          SiteLimitsResponseArgs{...}
//
//  or:
//
//          nil
type SiteLimitsResponsePtrInput interface {
	pulumi.Input

	ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput
	ToSiteLimitsResponsePtrOutputWithContext(context.Context) SiteLimitsResponsePtrOutput
}

type siteLimitsResponsePtrType SiteLimitsResponseArgs

func SiteLimitsResponsePtr(v *SiteLimitsResponseArgs) SiteLimitsResponsePtrInput {
	return (*siteLimitsResponsePtrType)(v)
}

func (*siteLimitsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return i.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (i *siteLimitsResponsePtrType) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsResponsePtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o.ToSiteLimitsResponsePtrOutputWithContext(context.Background())
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *SiteLimitsResponse {
		return &v
	}).(SiteLimitsResponsePtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponseOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxDiskSizeInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponseOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxMemoryInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) Elem() SiteLimitsResponseOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) SiteLimitsResponse { return *v }).(SiteLimitsResponseOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyInvokeResponse struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// SiteMachineKeyInvokeResponseInput is an input type that accepts SiteMachineKeyInvokeResponseArgs and SiteMachineKeyInvokeResponseOutput values.
// You can construct a concrete instance of `SiteMachineKeyInvokeResponseInput` via:
//
//          SiteMachineKeyInvokeResponseArgs{...}
type SiteMachineKeyInvokeResponseInput interface {
	pulumi.Input

	ToSiteMachineKeyInvokeResponseOutput() SiteMachineKeyInvokeResponseOutput
	ToSiteMachineKeyInvokeResponseOutputWithContext(context.Context) SiteMachineKeyInvokeResponseOutput
}

// MachineKey of an app.
type SiteMachineKeyInvokeResponseArgs struct {
	// Algorithm used for decryption.
	Decryption pulumi.StringPtrInput `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey pulumi.StringPtrInput `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
	// Validation key.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (SiteMachineKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyInvokeResponse)(nil)).Elem()
}

func (i SiteMachineKeyInvokeResponseArgs) ToSiteMachineKeyInvokeResponseOutput() SiteMachineKeyInvokeResponseOutput {
	return i.ToSiteMachineKeyInvokeResponseOutputWithContext(context.Background())
}

func (i SiteMachineKeyInvokeResponseArgs) ToSiteMachineKeyInvokeResponseOutputWithContext(ctx context.Context) SiteMachineKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyInvokeResponseOutput)
}

// MachineKey of an app.
type SiteMachineKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyInvokeResponse)(nil)).Elem()
}

func (o SiteMachineKeyInvokeResponseOutput) ToSiteMachineKeyInvokeResponseOutput() SiteMachineKeyInvokeResponseOutput {
	return o
}

func (o SiteMachineKeyInvokeResponseOutput) ToSiteMachineKeyInvokeResponseOutputWithContext(ctx context.Context) SiteMachineKeyInvokeResponseOutput {
	return o
}

// Algorithm used for decryption.
func (o SiteMachineKeyInvokeResponseOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyInvokeResponse) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyInvokeResponseOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyInvokeResponse) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyInvokeResponseOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyInvokeResponse) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyInvokeResponseOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyInvokeResponse) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponse struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// SiteMachineKeyResponseInput is an input type that accepts SiteMachineKeyResponseArgs and SiteMachineKeyResponseOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponseInput` via:
//
//          SiteMachineKeyResponseArgs{...}
type SiteMachineKeyResponseInput interface {
	pulumi.Input

	ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput
	ToSiteMachineKeyResponseOutputWithContext(context.Context) SiteMachineKeyResponseOutput
}

// MachineKey of an app.
type SiteMachineKeyResponseArgs struct {
	// Algorithm used for decryption.
	Decryption pulumi.StringPtrInput `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey pulumi.StringPtrInput `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation pulumi.StringPtrInput `pulumi:"validation"`
	// Validation key.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (SiteMachineKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return i.ToSiteMachineKeyResponseOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput)
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i SiteMachineKeyResponseArgs) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponseOutput).ToSiteMachineKeyResponsePtrOutputWithContext(ctx)
}

// SiteMachineKeyResponsePtrInput is an input type that accepts SiteMachineKeyResponseArgs, SiteMachineKeyResponsePtr and SiteMachineKeyResponsePtrOutput values.
// You can construct a concrete instance of `SiteMachineKeyResponsePtrInput` via:
//
//          SiteMachineKeyResponseArgs{...}
//
//  or:
//
//          nil
type SiteMachineKeyResponsePtrInput interface {
	pulumi.Input

	ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput
	ToSiteMachineKeyResponsePtrOutputWithContext(context.Context) SiteMachineKeyResponsePtrOutput
}

type siteMachineKeyResponsePtrType SiteMachineKeyResponseArgs

func SiteMachineKeyResponsePtr(v *SiteMachineKeyResponseArgs) SiteMachineKeyResponsePtrInput {
	return (*siteMachineKeyResponsePtrType)(v)
}

func (*siteMachineKeyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return i.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (i *siteMachineKeyResponsePtrType) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMachineKeyResponsePtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponseOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o.ToSiteMachineKeyResponsePtrOutputWithContext(context.Background())
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *SiteMachineKeyResponse {
		return &v
	}).(SiteMachineKeyResponsePtrOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponseOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponseOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponseOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponseOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

type SiteMachineKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) Elem() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) SiteMachineKeyResponse { return *v }).(SiteMachineKeyResponseOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponsePtrOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Decryption
	}).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponsePtrOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.DecryptionKey
	}).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponsePtrOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponsePtrOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationKey
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacity struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInput is an input type that accepts SkuCapacityArgs and SkuCapacityOutput values.
// You can construct a concrete instance of `SkuCapacityInput` via:
//
//          SkuCapacityArgs{...}
type SkuCapacityInput interface {
	pulumi.Input

	ToSkuCapacityOutput() SkuCapacityOutput
	ToSkuCapacityOutputWithContext(context.Context) SkuCapacityOutput
}

// Description of the App Service plan scale options.
type SkuCapacityArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (i SkuCapacityArgs) ToSkuCapacityOutput() SkuCapacityOutput {
	return i.ToSkuCapacityOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput)
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput).ToSkuCapacityPtrOutputWithContext(ctx)
}

// SkuCapacityPtrInput is an input type that accepts SkuCapacityArgs, SkuCapacityPtr and SkuCapacityPtrOutput values.
// You can construct a concrete instance of `SkuCapacityPtrInput` via:
//
//          SkuCapacityArgs{...}
//
//  or:
//
//          nil
type SkuCapacityPtrInput interface {
	pulumi.Input

	ToSkuCapacityPtrOutput() SkuCapacityPtrOutput
	ToSkuCapacityPtrOutputWithContext(context.Context) SkuCapacityPtrOutput
}

type skuCapacityPtrType SkuCapacityArgs

func SkuCapacityPtr(v *SkuCapacityArgs) SkuCapacityPtrInput {
	return (*skuCapacityPtrType)(v)
}

func (*skuCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityOutput struct{ *pulumi.OutputState }

func (SkuCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityOutput) ToSkuCapacityOutput() SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *SkuCapacity {
		return &v
	}).(SkuCapacityPtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityPtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) Elem() SkuCapacityOutput {
	return o.ApplyT(func(v *SkuCapacity) SkuCapacity { return *v }).(SkuCapacityOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityInvokeResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInvokeResponseInput is an input type that accepts SkuCapacityInvokeResponseArgs and SkuCapacityInvokeResponseOutput values.
// You can construct a concrete instance of `SkuCapacityInvokeResponseInput` via:
//
//          SkuCapacityInvokeResponseArgs{...}
type SkuCapacityInvokeResponseInput interface {
	pulumi.Input

	ToSkuCapacityInvokeResponseOutput() SkuCapacityInvokeResponseOutput
	ToSkuCapacityInvokeResponseOutputWithContext(context.Context) SkuCapacityInvokeResponseOutput
}

// Description of the App Service plan scale options.
type SkuCapacityInvokeResponseArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityInvokeResponse)(nil)).Elem()
}

func (i SkuCapacityInvokeResponseArgs) ToSkuCapacityInvokeResponseOutput() SkuCapacityInvokeResponseOutput {
	return i.ToSkuCapacityInvokeResponseOutputWithContext(context.Background())
}

func (i SkuCapacityInvokeResponseArgs) ToSkuCapacityInvokeResponseOutputWithContext(ctx context.Context) SkuCapacityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityInvokeResponseOutput)
}

func (i SkuCapacityInvokeResponseArgs) ToSkuCapacityInvokeResponsePtrOutput() SkuCapacityInvokeResponsePtrOutput {
	return i.ToSkuCapacityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SkuCapacityInvokeResponseArgs) ToSkuCapacityInvokeResponsePtrOutputWithContext(ctx context.Context) SkuCapacityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityInvokeResponseOutput).ToSkuCapacityInvokeResponsePtrOutputWithContext(ctx)
}

// SkuCapacityInvokeResponsePtrInput is an input type that accepts SkuCapacityInvokeResponseArgs, SkuCapacityInvokeResponsePtr and SkuCapacityInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SkuCapacityInvokeResponsePtrInput` via:
//
//          SkuCapacityInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SkuCapacityInvokeResponsePtrInput interface {
	pulumi.Input

	ToSkuCapacityInvokeResponsePtrOutput() SkuCapacityInvokeResponsePtrOutput
	ToSkuCapacityInvokeResponsePtrOutputWithContext(context.Context) SkuCapacityInvokeResponsePtrOutput
}

type skuCapacityInvokeResponsePtrType SkuCapacityInvokeResponseArgs

func SkuCapacityInvokeResponsePtr(v *SkuCapacityInvokeResponseArgs) SkuCapacityInvokeResponsePtrInput {
	return (*skuCapacityInvokeResponsePtrType)(v)
}

func (*skuCapacityInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityInvokeResponse)(nil)).Elem()
}

func (i *skuCapacityInvokeResponsePtrType) ToSkuCapacityInvokeResponsePtrOutput() SkuCapacityInvokeResponsePtrOutput {
	return i.ToSkuCapacityInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *skuCapacityInvokeResponsePtrType) ToSkuCapacityInvokeResponsePtrOutputWithContext(ctx context.Context) SkuCapacityInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityInvokeResponsePtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityInvokeResponse)(nil)).Elem()
}

func (o SkuCapacityInvokeResponseOutput) ToSkuCapacityInvokeResponseOutput() SkuCapacityInvokeResponseOutput {
	return o
}

func (o SkuCapacityInvokeResponseOutput) ToSkuCapacityInvokeResponseOutputWithContext(ctx context.Context) SkuCapacityInvokeResponseOutput {
	return o
}

func (o SkuCapacityInvokeResponseOutput) ToSkuCapacityInvokeResponsePtrOutput() SkuCapacityInvokeResponsePtrOutput {
	return o.ToSkuCapacityInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SkuCapacityInvokeResponseOutput) ToSkuCapacityInvokeResponsePtrOutputWithContext(ctx context.Context) SkuCapacityInvokeResponsePtrOutput {
	return o.ApplyT(func(v SkuCapacityInvokeResponse) *SkuCapacityInvokeResponse {
		return &v
	}).(SkuCapacityInvokeResponsePtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityInvokeResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityInvokeResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityInvokeResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityInvokeResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityInvokeResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityInvokeResponse)(nil)).Elem()
}

func (o SkuCapacityInvokeResponsePtrOutput) ToSkuCapacityInvokeResponsePtrOutput() SkuCapacityInvokeResponsePtrOutput {
	return o
}

func (o SkuCapacityInvokeResponsePtrOutput) ToSkuCapacityInvokeResponsePtrOutputWithContext(ctx context.Context) SkuCapacityInvokeResponsePtrOutput {
	return o
}

func (o SkuCapacityInvokeResponsePtrOutput) Elem() SkuCapacityInvokeResponseOutput {
	return o.ApplyT(func(v *SkuCapacityInvokeResponse) SkuCapacityInvokeResponse { return *v }).(SkuCapacityInvokeResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityInvokeResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityInvokeResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityResponseInput is an input type that accepts SkuCapacityResponseArgs and SkuCapacityResponseOutput values.
// You can construct a concrete instance of `SkuCapacityResponseInput` via:
//
//          SkuCapacityResponseArgs{...}
type SkuCapacityResponseInput interface {
	pulumi.Input

	ToSkuCapacityResponseOutput() SkuCapacityResponseOutput
	ToSkuCapacityResponseOutputWithContext(context.Context) SkuCapacityResponseOutput
}

// Description of the App Service plan scale options.
type SkuCapacityResponseArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return i.ToSkuCapacityResponseOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput)
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i SkuCapacityResponseArgs) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponseOutput).ToSkuCapacityResponsePtrOutputWithContext(ctx)
}

// SkuCapacityResponsePtrInput is an input type that accepts SkuCapacityResponseArgs, SkuCapacityResponsePtr and SkuCapacityResponsePtrOutput values.
// You can construct a concrete instance of `SkuCapacityResponsePtrInput` via:
//
//          SkuCapacityResponseArgs{...}
//
//  or:
//
//          nil
type SkuCapacityResponsePtrInput interface {
	pulumi.Input

	ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput
	ToSkuCapacityResponsePtrOutputWithContext(context.Context) SkuCapacityResponsePtrOutput
}

type skuCapacityResponsePtrType SkuCapacityResponseArgs

func SkuCapacityResponsePtr(v *SkuCapacityResponseArgs) SkuCapacityResponsePtrInput {
	return (*skuCapacityResponsePtrType)(v)
}

func (*skuCapacityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return i.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (i *skuCapacityResponsePtrType) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityResponsePtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o.ToSkuCapacityResponsePtrOutputWithContext(context.Background())
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *SkuCapacityResponse {
		return &v
	}).(SkuCapacityResponsePtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) Elem() SkuCapacityResponseOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) SkuCapacityResponse { return *v }).(SkuCapacityResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescription struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []Capability `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacity `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//          SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityPtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//          SkuDescriptionArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v SkuDescription) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescription) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuCapacity { return v.SkuCapacity }).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription { return *v }).(SkuDescriptionOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionPtrOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *SkuCapacity {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionInvokeResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityInvokeResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityInvokeResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInvokeResponseInput is an input type that accepts SkuDescriptionInvokeResponseArgs and SkuDescriptionInvokeResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionInvokeResponseInput` via:
//
//          SkuDescriptionInvokeResponseArgs{...}
type SkuDescriptionInvokeResponseInput interface {
	pulumi.Input

	ToSkuDescriptionInvokeResponseOutput() SkuDescriptionInvokeResponseOutput
	ToSkuDescriptionInvokeResponseOutputWithContext(context.Context) SkuDescriptionInvokeResponseOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionInvokeResponseArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityInvokeResponseArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityInvokeResponsePtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionInvokeResponse)(nil)).Elem()
}

func (i SkuDescriptionInvokeResponseArgs) ToSkuDescriptionInvokeResponseOutput() SkuDescriptionInvokeResponseOutput {
	return i.ToSkuDescriptionInvokeResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionInvokeResponseArgs) ToSkuDescriptionInvokeResponseOutputWithContext(ctx context.Context) SkuDescriptionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionInvokeResponseOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionInvokeResponse)(nil)).Elem()
}

func (o SkuDescriptionInvokeResponseOutput) ToSkuDescriptionInvokeResponseOutput() SkuDescriptionInvokeResponseOutput {
	return o
}

func (o SkuDescriptionInvokeResponseOutput) ToSkuDescriptionInvokeResponseOutputWithContext(ctx context.Context) SkuDescriptionInvokeResponseOutput {
	return o
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionInvokeResponseOutput) Capabilities() CapabilityInvokeResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) []CapabilityInvokeResponse { return v.Capabilities }).(CapabilityInvokeResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionInvokeResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionInvokeResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionInvokeResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionInvokeResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionInvokeResponseOutput) SkuCapacity() SkuCapacityInvokeResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *SkuCapacityInvokeResponse { return v.SkuCapacity }).(SkuCapacityInvokeResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionResponseInput is an input type that accepts SkuDescriptionResponseArgs and SkuDescriptionResponseOutput values.
// You can construct a concrete instance of `SkuDescriptionResponseInput` via:
//
//          SkuDescriptionResponseArgs{...}
type SkuDescriptionResponseInput interface {
	pulumi.Input

	ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput
	ToSkuDescriptionResponseOutputWithContext(context.Context) SkuDescriptionResponseOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityResponseArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityResponsePtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return i.ToSkuDescriptionResponseOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput)
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i SkuDescriptionResponseArgs) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponseOutput).ToSkuDescriptionResponsePtrOutputWithContext(ctx)
}

// SkuDescriptionResponsePtrInput is an input type that accepts SkuDescriptionResponseArgs, SkuDescriptionResponsePtr and SkuDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `SkuDescriptionResponsePtrInput` via:
//
//          SkuDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type SkuDescriptionResponsePtrInput interface {
	pulumi.Input

	ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput
	ToSkuDescriptionResponsePtrOutputWithContext(context.Context) SkuDescriptionResponsePtrOutput
}

type skuDescriptionResponsePtrType SkuDescriptionResponseArgs

func SkuDescriptionResponsePtr(v *SkuDescriptionResponseArgs) SkuDescriptionResponsePtrInput {
	return (*skuDescriptionResponsePtrType)(v)
}

func (*skuDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return i.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *skuDescriptionResponsePtrType) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionResponsePtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o.ToSkuDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuDescriptionResponse {
		return &v
	}).(SkuDescriptionResponsePtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponseOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuCapacityResponse { return v.SkuCapacity }).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse { return *v }).(SkuDescriptionResponseOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponsePtrOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []CapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponsePtrOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *SkuCapacityResponse {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusInvokeResponse struct {
	// The destination slot of the last swap operation.
	DestinationSlotName string `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName string `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc string `pulumi:"timestampUtc"`
}

// SlotSwapStatusInvokeResponseInput is an input type that accepts SlotSwapStatusInvokeResponseArgs and SlotSwapStatusInvokeResponseOutput values.
// You can construct a concrete instance of `SlotSwapStatusInvokeResponseInput` via:
//
//          SlotSwapStatusInvokeResponseArgs{...}
type SlotSwapStatusInvokeResponseInput interface {
	pulumi.Input

	ToSlotSwapStatusInvokeResponseOutput() SlotSwapStatusInvokeResponseOutput
	ToSlotSwapStatusInvokeResponseOutputWithContext(context.Context) SlotSwapStatusInvokeResponseOutput
}

// The status of the last successful slot swap operation.
type SlotSwapStatusInvokeResponseArgs struct {
	// The destination slot of the last swap operation.
	DestinationSlotName pulumi.StringInput `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName pulumi.StringInput `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc pulumi.StringInput `pulumi:"timestampUtc"`
}

func (SlotSwapStatusInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusInvokeResponse)(nil)).Elem()
}

func (i SlotSwapStatusInvokeResponseArgs) ToSlotSwapStatusInvokeResponseOutput() SlotSwapStatusInvokeResponseOutput {
	return i.ToSlotSwapStatusInvokeResponseOutputWithContext(context.Background())
}

func (i SlotSwapStatusInvokeResponseArgs) ToSlotSwapStatusInvokeResponseOutputWithContext(ctx context.Context) SlotSwapStatusInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusInvokeResponseOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusInvokeResponseOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusInvokeResponse)(nil)).Elem()
}

func (o SlotSwapStatusInvokeResponseOutput) ToSlotSwapStatusInvokeResponseOutput() SlotSwapStatusInvokeResponseOutput {
	return o
}

func (o SlotSwapStatusInvokeResponseOutput) ToSlotSwapStatusInvokeResponseOutputWithContext(ctx context.Context) SlotSwapStatusInvokeResponseOutput {
	return o
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusInvokeResponseOutput) DestinationSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusInvokeResponse) string { return v.DestinationSlotName }).(pulumi.StringOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusInvokeResponseOutput) SourceSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusInvokeResponse) string { return v.SourceSlotName }).(pulumi.StringOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusInvokeResponseOutput) TimestampUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusInvokeResponse) string { return v.TimestampUtc }).(pulumi.StringOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponse struct {
	// The destination slot of the last swap operation.
	DestinationSlotName string `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName string `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc string `pulumi:"timestampUtc"`
}

// SlotSwapStatusResponseInput is an input type that accepts SlotSwapStatusResponseArgs and SlotSwapStatusResponseOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponseInput` via:
//
//          SlotSwapStatusResponseArgs{...}
type SlotSwapStatusResponseInput interface {
	pulumi.Input

	ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput
	ToSlotSwapStatusResponseOutputWithContext(context.Context) SlotSwapStatusResponseOutput
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseArgs struct {
	// The destination slot of the last swap operation.
	DestinationSlotName pulumi.StringInput `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName pulumi.StringInput `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc pulumi.StringInput `pulumi:"timestampUtc"`
}

func (SlotSwapStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return i.ToSlotSwapStatusResponseOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput)
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i SlotSwapStatusResponseArgs) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponseOutput).ToSlotSwapStatusResponsePtrOutputWithContext(ctx)
}

// SlotSwapStatusResponsePtrInput is an input type that accepts SlotSwapStatusResponseArgs, SlotSwapStatusResponsePtr and SlotSwapStatusResponsePtrOutput values.
// You can construct a concrete instance of `SlotSwapStatusResponsePtrInput` via:
//
//          SlotSwapStatusResponseArgs{...}
//
//  or:
//
//          nil
type SlotSwapStatusResponsePtrInput interface {
	pulumi.Input

	ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput
	ToSlotSwapStatusResponsePtrOutputWithContext(context.Context) SlotSwapStatusResponsePtrOutput
}

type slotSwapStatusResponsePtrType SlotSwapStatusResponseArgs

func SlotSwapStatusResponsePtr(v *SlotSwapStatusResponseArgs) SlotSwapStatusResponsePtrInput {
	return (*slotSwapStatusResponsePtrType)(v)
}

func (*slotSwapStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return i.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (i *slotSwapStatusResponsePtrType) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSwapStatusResponsePtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o.ToSlotSwapStatusResponsePtrOutputWithContext(context.Background())
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) *SlotSwapStatusResponse {
		return &v
	}).(SlotSwapStatusResponsePtrOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) DestinationSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.DestinationSlotName }).(pulumi.StringOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) SourceSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.SourceSlotName }).(pulumi.StringOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponseOutput) TimestampUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.TimestampUtc }).(pulumi.StringOutput)
}

type SlotSwapStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutput() SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) ToSlotSwapStatusResponsePtrOutputWithContext(ctx context.Context) SlotSwapStatusResponsePtrOutput {
	return o
}

func (o SlotSwapStatusResponsePtrOutput) Elem() SlotSwapStatusResponseOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) SlotSwapStatusResponse { return *v }).(SlotSwapStatusResponseOutput)
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) DestinationSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationSlotName
	}).(pulumi.StringPtrOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponsePtrOutput) SourceSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceSlotName
	}).(pulumi.StringPtrOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponsePtrOutput) TimestampUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSwapStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TimestampUtc
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInput is an input type that accepts SlowRequestsBasedTriggerArgs and SlowRequestsBasedTriggerOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
type SlowRequestsBasedTriggerInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput
	ToSlowRequestsBasedTriggerOutputWithContext(context.Context) SlowRequestsBasedTriggerOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return i.ToSlowRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput)
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput).ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerPtrInput is an input type that accepts SlowRequestsBasedTriggerArgs, SlowRequestsBasedTriggerPtr and SlowRequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerPtrInput` via:
//
//          SlowRequestsBasedTriggerArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput
	ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Context) SlowRequestsBasedTriggerPtrOutput
}

type slowRequestsBasedTriggerPtrType SlowRequestsBasedTriggerArgs

func SlowRequestsBasedTriggerPtr(v *SlowRequestsBasedTriggerArgs) SlowRequestsBasedTriggerPtrInput {
	return (*slowRequestsBasedTriggerPtrType)(v)
}

func (*slowRequestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *SlowRequestsBasedTrigger {
		return &v
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) Elem() SlowRequestsBasedTriggerOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) SlowRequestsBasedTrigger { return *v }).(SlowRequestsBasedTriggerOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerPtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerInvokeResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInvokeResponseInput is an input type that accepts SlowRequestsBasedTriggerInvokeResponseArgs and SlowRequestsBasedTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInvokeResponseInput` via:
//
//          SlowRequestsBasedTriggerInvokeResponseArgs{...}
type SlowRequestsBasedTriggerInvokeResponseInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerInvokeResponseOutput() SlowRequestsBasedTriggerInvokeResponseOutput
	ToSlowRequestsBasedTriggerInvokeResponseOutputWithContext(context.Context) SlowRequestsBasedTriggerInvokeResponseOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerInvokeResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerInvokeResponseArgs) ToSlowRequestsBasedTriggerInvokeResponseOutput() SlowRequestsBasedTriggerInvokeResponseOutput {
	return i.ToSlowRequestsBasedTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerInvokeResponseArgs) ToSlowRequestsBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerInvokeResponseOutput)
}

func (i SlowRequestsBasedTriggerInvokeResponseArgs) ToSlowRequestsBasedTriggerInvokeResponsePtrOutput() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerInvokeResponseArgs) ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerInvokeResponseOutput).ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerInvokeResponsePtrInput is an input type that accepts SlowRequestsBasedTriggerInvokeResponseArgs, SlowRequestsBasedTriggerInvokeResponsePtr and SlowRequestsBasedTriggerInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInvokeResponsePtrInput` via:
//
//          SlowRequestsBasedTriggerInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerInvokeResponsePtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerInvokeResponsePtrOutput() SlowRequestsBasedTriggerInvokeResponsePtrOutput
	ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Context) SlowRequestsBasedTriggerInvokeResponsePtrOutput
}

type slowRequestsBasedTriggerInvokeResponsePtrType SlowRequestsBasedTriggerInvokeResponseArgs

func SlowRequestsBasedTriggerInvokeResponsePtr(v *SlowRequestsBasedTriggerInvokeResponseArgs) SlowRequestsBasedTriggerInvokeResponsePtrInput {
	return (*slowRequestsBasedTriggerInvokeResponsePtrType)(v)
}

func (*slowRequestsBasedTriggerInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerInvokeResponsePtrType) ToSlowRequestsBasedTriggerInvokeResponsePtrOutput() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerInvokeResponsePtrType) ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerInvokeResponsePtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerInvokeResponseOutput) ToSlowRequestsBasedTriggerInvokeResponseOutput() SlowRequestsBasedTriggerInvokeResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerInvokeResponseOutput) ToSlowRequestsBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerInvokeResponseOutput) ToSlowRequestsBasedTriggerInvokeResponsePtrOutput() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerInvokeResponseOutput) ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerInvokeResponse) *SlowRequestsBasedTriggerInvokeResponse {
		return &v
	}).(SlowRequestsBasedTriggerInvokeResponsePtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerInvokeResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerInvokeResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerInvokeResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerInvokeResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerInvokeResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerInvokeResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) ToSlowRequestsBasedTriggerInvokeResponsePtrOutput() SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) ToSlowRequestsBasedTriggerInvokeResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerInvokeResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) Elem() SlowRequestsBasedTriggerInvokeResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerInvokeResponse) SlowRequestsBasedTriggerInvokeResponse { return *v }).(SlowRequestsBasedTriggerInvokeResponseOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerInvokeResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerResponseInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs and SlowRequestsBasedTriggerResponseOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponseInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
type SlowRequestsBasedTriggerResponseInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput
	ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Context) SlowRequestsBasedTriggerResponseOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return i.ToSlowRequestsBasedTriggerResponseOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput)
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerResponseArgs) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponseOutput).ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerResponsePtrInput is an input type that accepts SlowRequestsBasedTriggerResponseArgs, SlowRequestsBasedTriggerResponsePtr and SlowRequestsBasedTriggerResponsePtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerResponsePtrInput` via:
//
//          SlowRequestsBasedTriggerResponseArgs{...}
//
//  or:
//
//          nil
type SlowRequestsBasedTriggerResponsePtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput
	ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Context) SlowRequestsBasedTriggerResponsePtrOutput
}

type slowRequestsBasedTriggerResponsePtrType SlowRequestsBasedTriggerResponseArgs

func SlowRequestsBasedTriggerResponsePtr(v *SlowRequestsBasedTriggerResponseArgs) SlowRequestsBasedTriggerResponsePtrInput {
	return (*slowRequestsBasedTriggerResponsePtrType)(v)
}

func (*slowRequestsBasedTriggerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return i.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerResponsePtrType) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *SlowRequestsBasedTriggerResponse {
		return &v
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) Elem() SlowRequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) SlowRequestsBasedTriggerResponse { return *v }).(SlowRequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

// Stamp capacity information.
type StampCapacityInvokeResponse struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity *float64 `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode *string `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux *bool `pulumi:"isLinux"`
	// Name of the stamp.
	Name *string `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity *float64 `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit *string `pulumi:"unit"`
	// Size of the machines.
	WorkerSize *string `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityInvokeResponseInput is an input type that accepts StampCapacityInvokeResponseArgs and StampCapacityInvokeResponseOutput values.
// You can construct a concrete instance of `StampCapacityInvokeResponseInput` via:
//
//          StampCapacityInvokeResponseArgs{...}
type StampCapacityInvokeResponseInput interface {
	pulumi.Input

	ToStampCapacityInvokeResponseOutput() StampCapacityInvokeResponseOutput
	ToStampCapacityInvokeResponseOutputWithContext(context.Context) StampCapacityInvokeResponseOutput
}

// Stamp capacity information.
type StampCapacityInvokeResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity pulumi.Float64PtrInput `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux pulumi.BoolPtrInput `pulumi:"isLinux"`
	// Name of the stamp.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity pulumi.Float64PtrInput `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityInvokeResponse)(nil)).Elem()
}

func (i StampCapacityInvokeResponseArgs) ToStampCapacityInvokeResponseOutput() StampCapacityInvokeResponseOutput {
	return i.ToStampCapacityInvokeResponseOutputWithContext(context.Background())
}

func (i StampCapacityInvokeResponseArgs) ToStampCapacityInvokeResponseOutputWithContext(ctx context.Context) StampCapacityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityInvokeResponseOutput)
}

// StampCapacityInvokeResponseArrayInput is an input type that accepts StampCapacityInvokeResponseArray and StampCapacityInvokeResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityInvokeResponseArrayInput` via:
//
//          StampCapacityInvokeResponseArray{ StampCapacityInvokeResponseArgs{...} }
type StampCapacityInvokeResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityInvokeResponseArrayOutput() StampCapacityInvokeResponseArrayOutput
	ToStampCapacityInvokeResponseArrayOutputWithContext(context.Context) StampCapacityInvokeResponseArrayOutput
}

type StampCapacityInvokeResponseArray []StampCapacityInvokeResponseInput

func (StampCapacityInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityInvokeResponse)(nil)).Elem()
}

func (i StampCapacityInvokeResponseArray) ToStampCapacityInvokeResponseArrayOutput() StampCapacityInvokeResponseArrayOutput {
	return i.ToStampCapacityInvokeResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityInvokeResponseArray) ToStampCapacityInvokeResponseArrayOutputWithContext(ctx context.Context) StampCapacityInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityInvokeResponseArrayOutput)
}

// Stamp capacity information.
type StampCapacityInvokeResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityInvokeResponse)(nil)).Elem()
}

func (o StampCapacityInvokeResponseOutput) ToStampCapacityInvokeResponseOutput() StampCapacityInvokeResponseOutput {
	return o
}

func (o StampCapacityInvokeResponseOutput) ToStampCapacityInvokeResponseOutputWithContext(ctx context.Context) StampCapacityInvokeResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...).
func (o StampCapacityInvokeResponseOutput) AvailableCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *float64 { return v.AvailableCapacity }).(pulumi.Float64PtrOutput)
}

// Shared/dedicated workers.
func (o StampCapacityInvokeResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If <code>true</code>, it includes basic apps.
// Basic apps are not used for capacity allocation.
func (o StampCapacityInvokeResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
func (o StampCapacityInvokeResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Is this a linux stamp capacity
func (o StampCapacityInvokeResponseOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

// Name of the stamp.
func (o StampCapacityInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated.
func (o StampCapacityInvokeResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...).
func (o StampCapacityInvokeResponseOutput) TotalCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *float64 { return v.TotalCapacity }).(pulumi.Float64PtrOutput)
}

// Name of the unit.
func (o StampCapacityInvokeResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines.
func (o StampCapacityInvokeResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size ID of machines:
// 0 - Small
// 1 - Medium
// 2 - Large
func (o StampCapacityInvokeResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityInvokeResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityInvokeResponse)(nil)).Elem()
}

func (o StampCapacityInvokeResponseArrayOutput) ToStampCapacityInvokeResponseArrayOutput() StampCapacityInvokeResponseArrayOutput {
	return o
}

func (o StampCapacityInvokeResponseArrayOutput) ToStampCapacityInvokeResponseArrayOutputWithContext(ctx context.Context) StampCapacityInvokeResponseArrayOutput {
	return o
}

func (o StampCapacityInvokeResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityInvokeResponse {
		return vs[0].([]StampCapacityInvokeResponse)[vs[1].(int)]
	}).(StampCapacityInvokeResponseOutput)
}

// Stamp capacity information.
type StampCapacityResponse struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity *float64 `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode *string `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation *bool `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes *bool `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux *bool `pulumi:"isLinux"`
	// Name of the stamp.
	Name *string `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode *string `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity *float64 `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit *string `pulumi:"unit"`
	// Size of the machines.
	WorkerSize *string `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// StampCapacityResponseInput is an input type that accepts StampCapacityResponseArgs and StampCapacityResponseOutput values.
// You can construct a concrete instance of `StampCapacityResponseInput` via:
//
//          StampCapacityResponseArgs{...}
type StampCapacityResponseInput interface {
	pulumi.Input

	ToStampCapacityResponseOutput() StampCapacityResponseOutput
	ToStampCapacityResponseOutputWithContext(context.Context) StampCapacityResponseOutput
}

// Stamp capacity information.
type StampCapacityResponseArgs struct {
	// Available capacity (# of machines, bytes of storage etc...).
	AvailableCapacity pulumi.Float64PtrInput `pulumi:"availableCapacity"`
	// Shared/dedicated workers.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// If <code>true</code>, it includes basic apps.
	// Basic apps are not used for capacity allocation.
	ExcludeFromCapacityAllocation pulumi.BoolPtrInput `pulumi:"excludeFromCapacityAllocation"`
	// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
	IsApplicableForAllComputeModes pulumi.BoolPtrInput `pulumi:"isApplicableForAllComputeModes"`
	// Is this a linux stamp capacity
	IsLinux pulumi.BoolPtrInput `pulumi:"isLinux"`
	// Name of the stamp.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Shared or Dedicated.
	SiteMode pulumi.StringPtrInput `pulumi:"siteMode"`
	// Total capacity (# of machines, bytes of storage etc...).
	TotalCapacity pulumi.Float64PtrInput `pulumi:"totalCapacity"`
	// Name of the unit.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Size of the machines.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Size ID of machines:
	// 0 - Small
	// 1 - Medium
	// 2 - Large
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (StampCapacityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return i.ToStampCapacityResponseOutputWithContext(context.Background())
}

func (i StampCapacityResponseArgs) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseOutput)
}

// StampCapacityResponseArrayInput is an input type that accepts StampCapacityResponseArray and StampCapacityResponseArrayOutput values.
// You can construct a concrete instance of `StampCapacityResponseArrayInput` via:
//
//          StampCapacityResponseArray{ StampCapacityResponseArgs{...} }
type StampCapacityResponseArrayInput interface {
	pulumi.Input

	ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput
	ToStampCapacityResponseArrayOutputWithContext(context.Context) StampCapacityResponseArrayOutput
}

type StampCapacityResponseArray []StampCapacityResponseInput

func (StampCapacityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return i.ToStampCapacityResponseArrayOutputWithContext(context.Background())
}

func (i StampCapacityResponseArray) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StampCapacityResponseArrayOutput)
}

// Stamp capacity information.
type StampCapacityResponseOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutput() StampCapacityResponseOutput {
	return o
}

func (o StampCapacityResponseOutput) ToStampCapacityResponseOutputWithContext(ctx context.Context) StampCapacityResponseOutput {
	return o
}

// Available capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) AvailableCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *float64 { return v.AvailableCapacity }).(pulumi.Float64PtrOutput)
}

// Shared/dedicated workers.
func (o StampCapacityResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// If <code>true</code>, it includes basic apps.
// Basic apps are not used for capacity allocation.
func (o StampCapacityResponseOutput) ExcludeFromCapacityAllocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.ExcludeFromCapacityAllocation }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if capacity is applicable for all apps; otherwise, <code>false</code>.
func (o StampCapacityResponseOutput) IsApplicableForAllComputeModes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsApplicableForAllComputeModes }).(pulumi.BoolPtrOutput)
}

// Is this a linux stamp capacity
func (o StampCapacityResponseOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

// Name of the stamp.
func (o StampCapacityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Shared or Dedicated.
func (o StampCapacityResponseOutput) SiteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.SiteMode }).(pulumi.StringPtrOutput)
}

// Total capacity (# of machines, bytes of storage etc...).
func (o StampCapacityResponseOutput) TotalCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *float64 { return v.TotalCapacity }).(pulumi.Float64PtrOutput)
}

// Name of the unit.
func (o StampCapacityResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Size of the machines.
func (o StampCapacityResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Size ID of machines:
// 0 - Small
// 1 - Medium
// 2 - Large
func (o StampCapacityResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StampCapacityResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type StampCapacityResponseArrayOutput struct{ *pulumi.OutputState }

func (StampCapacityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StampCapacityResponse)(nil)).Elem()
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutput() StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) ToStampCapacityResponseArrayOutputWithContext(ctx context.Context) StampCapacityResponseArrayOutput {
	return o
}

func (o StampCapacityResponseArrayOutput) Index(i pulumi.IntInput) StampCapacityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StampCapacityResponse {
		return vs[0].([]StampCapacityResponse)[vs[1].(int)]
	}).(StampCapacityResponseOutput)
}

// Build properties for the static site.
type StaticSiteBuildProperties struct {
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
}

// StaticSiteBuildPropertiesInput is an input type that accepts StaticSiteBuildPropertiesArgs and StaticSiteBuildPropertiesOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesInput` via:
//
//          StaticSiteBuildPropertiesArgs{...}
type StaticSiteBuildPropertiesInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput
	ToStaticSiteBuildPropertiesOutputWithContext(context.Context) StaticSiteBuildPropertiesOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesArgs struct {
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
}

func (StaticSiteBuildPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return i.ToStaticSiteBuildPropertiesOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput)
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput).ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx)
}

// StaticSiteBuildPropertiesPtrInput is an input type that accepts StaticSiteBuildPropertiesArgs, StaticSiteBuildPropertiesPtr and StaticSiteBuildPropertiesPtrOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesPtrInput` via:
//
//          StaticSiteBuildPropertiesArgs{...}
//
//  or:
//
//          nil
type StaticSiteBuildPropertiesPtrInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput
	ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Context) StaticSiteBuildPropertiesPtrOutput
}

type staticSiteBuildPropertiesPtrType StaticSiteBuildPropertiesArgs

func StaticSiteBuildPropertiesPtr(v *StaticSiteBuildPropertiesArgs) StaticSiteBuildPropertiesPtrInput {
	return (*staticSiteBuildPropertiesPtrType)(v)
}

func (*staticSiteBuildPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *StaticSiteBuildProperties {
		return &v
	}).(StaticSiteBuildPropertiesPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

type StaticSiteBuildPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) Elem() StaticSiteBuildPropertiesOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) StaticSiteBuildProperties { return *v }).(StaticSiteBuildPropertiesOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesPtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesInvokeResponse struct {
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
}

// StaticSiteBuildPropertiesInvokeResponseInput is an input type that accepts StaticSiteBuildPropertiesInvokeResponseArgs and StaticSiteBuildPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesInvokeResponseInput` via:
//
//          StaticSiteBuildPropertiesInvokeResponseArgs{...}
type StaticSiteBuildPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesInvokeResponseOutput() StaticSiteBuildPropertiesInvokeResponseOutput
	ToStaticSiteBuildPropertiesInvokeResponseOutputWithContext(context.Context) StaticSiteBuildPropertiesInvokeResponseOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesInvokeResponseArgs struct {
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
}

func (StaticSiteBuildPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesInvokeResponse)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesInvokeResponseArgs) ToStaticSiteBuildPropertiesInvokeResponseOutput() StaticSiteBuildPropertiesInvokeResponseOutput {
	return i.ToStaticSiteBuildPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesInvokeResponseArgs) ToStaticSiteBuildPropertiesInvokeResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesInvokeResponseOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesInvokeResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesInvokeResponseOutput) ToStaticSiteBuildPropertiesInvokeResponseOutput() StaticSiteBuildPropertiesInvokeResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesInvokeResponseOutput) ToStaticSiteBuildPropertiesInvokeResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesInvokeResponseOutput {
	return o
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesInvokeResponseOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesInvokeResponse) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesInvokeResponseOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesInvokeResponse) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesInvokeResponseOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesInvokeResponse) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponse struct {
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
}

// StaticSiteBuildPropertiesResponseInput is an input type that accepts StaticSiteBuildPropertiesResponseArgs and StaticSiteBuildPropertiesResponseOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesResponseInput` via:
//
//          StaticSiteBuildPropertiesResponseArgs{...}
type StaticSiteBuildPropertiesResponseInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput
	ToStaticSiteBuildPropertiesResponseOutputWithContext(context.Context) StaticSiteBuildPropertiesResponseOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponseArgs struct {
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// The path of the app artifacts after building.
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
}

func (StaticSiteBuildPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput {
	return i.ToStaticSiteBuildPropertiesResponseOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponseOutput)
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return i.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesResponseArgs) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponseOutput).ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx)
}

// StaticSiteBuildPropertiesResponsePtrInput is an input type that accepts StaticSiteBuildPropertiesResponseArgs, StaticSiteBuildPropertiesResponsePtr and StaticSiteBuildPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesResponsePtrInput` via:
//
//          StaticSiteBuildPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type StaticSiteBuildPropertiesResponsePtrInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput
	ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Context) StaticSiteBuildPropertiesResponsePtrOutput
}

type staticSiteBuildPropertiesResponsePtrType StaticSiteBuildPropertiesResponseArgs

func StaticSiteBuildPropertiesResponsePtr(v *StaticSiteBuildPropertiesResponseArgs) StaticSiteBuildPropertiesResponsePtrInput {
	return (*staticSiteBuildPropertiesResponsePtrType)(v)
}

func (*staticSiteBuildPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (i *staticSiteBuildPropertiesResponsePtrType) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return i.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *staticSiteBuildPropertiesResponsePtrType) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesResponsePtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return o.ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *StaticSiteBuildPropertiesResponse {
		return &v
	}).(StaticSiteBuildPropertiesResponsePtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesResponseOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

type StaticSiteBuildPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) Elem() StaticSiteBuildPropertiesResponseOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) StaticSiteBuildPropertiesResponse { return *v }).(StaticSiteBuildPropertiesResponseOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// The path of the app artifacts after building.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceInvokeResponse struct {
	// The display name for the static site user.
	DisplayName string `pulumi:"displayName"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The identity provider for the static site user.
	Provider string `pulumi:"provider"`
	// The roles for the static site user, in free-form string format
	Roles *string `pulumi:"roles"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
	// The user id for the static site user.
	UserId string `pulumi:"userId"`
}

// StaticSiteUserARMResourceInvokeResponseInput is an input type that accepts StaticSiteUserARMResourceInvokeResponseArgs and StaticSiteUserARMResourceInvokeResponseOutput values.
// You can construct a concrete instance of `StaticSiteUserARMResourceInvokeResponseInput` via:
//
//          StaticSiteUserARMResourceInvokeResponseArgs{...}
type StaticSiteUserARMResourceInvokeResponseInput interface {
	pulumi.Input

	ToStaticSiteUserARMResourceInvokeResponseOutput() StaticSiteUserARMResourceInvokeResponseOutput
	ToStaticSiteUserARMResourceInvokeResponseOutputWithContext(context.Context) StaticSiteUserARMResourceInvokeResponseOutput
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceInvokeResponseArgs struct {
	// The display name for the static site user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The identity provider for the static site user.
	Provider pulumi.StringInput `pulumi:"provider"`
	// The roles for the static site user, in free-form string format
	Roles pulumi.StringPtrInput `pulumi:"roles"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The user id for the static site user.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (StaticSiteUserARMResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserARMResourceInvokeResponse)(nil)).Elem()
}

func (i StaticSiteUserARMResourceInvokeResponseArgs) ToStaticSiteUserARMResourceInvokeResponseOutput() StaticSiteUserARMResourceInvokeResponseOutput {
	return i.ToStaticSiteUserARMResourceInvokeResponseOutputWithContext(context.Background())
}

func (i StaticSiteUserARMResourceInvokeResponseArgs) ToStaticSiteUserARMResourceInvokeResponseOutputWithContext(ctx context.Context) StaticSiteUserARMResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteUserARMResourceInvokeResponseOutput)
}

// StaticSiteUserARMResourceInvokeResponseArrayInput is an input type that accepts StaticSiteUserARMResourceInvokeResponseArray and StaticSiteUserARMResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `StaticSiteUserARMResourceInvokeResponseArrayInput` via:
//
//          StaticSiteUserARMResourceInvokeResponseArray{ StaticSiteUserARMResourceInvokeResponseArgs{...} }
type StaticSiteUserARMResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToStaticSiteUserARMResourceInvokeResponseArrayOutput() StaticSiteUserARMResourceInvokeResponseArrayOutput
	ToStaticSiteUserARMResourceInvokeResponseArrayOutputWithContext(context.Context) StaticSiteUserARMResourceInvokeResponseArrayOutput
}

type StaticSiteUserARMResourceInvokeResponseArray []StaticSiteUserARMResourceInvokeResponseInput

func (StaticSiteUserARMResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserARMResourceInvokeResponse)(nil)).Elem()
}

func (i StaticSiteUserARMResourceInvokeResponseArray) ToStaticSiteUserARMResourceInvokeResponseArrayOutput() StaticSiteUserARMResourceInvokeResponseArrayOutput {
	return i.ToStaticSiteUserARMResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i StaticSiteUserARMResourceInvokeResponseArray) ToStaticSiteUserARMResourceInvokeResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserARMResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteUserARMResourceInvokeResponseArrayOutput)
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserARMResourceInvokeResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceInvokeResponseOutput) ToStaticSiteUserARMResourceInvokeResponseOutput() StaticSiteUserARMResourceInvokeResponseOutput {
	return o
}

func (o StaticSiteUserARMResourceInvokeResponseOutput) ToStaticSiteUserARMResourceInvokeResponseOutputWithContext(ctx context.Context) StaticSiteUserARMResourceInvokeResponseOutput {
	return o
}

// The display name for the static site user.
func (o StaticSiteUserARMResourceInvokeResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource Id.
func (o StaticSiteUserARMResourceInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o StaticSiteUserARMResourceInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o StaticSiteUserARMResourceInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The identity provider for the static site user.
func (o StaticSiteUserARMResourceInvokeResponseOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.Provider }).(pulumi.StringOutput)
}

// The roles for the static site user, in free-form string format
func (o StaticSiteUserARMResourceInvokeResponseOutput) Roles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) *string { return v.Roles }).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o StaticSiteUserARMResourceInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// Resource type.
func (o StaticSiteUserARMResourceInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user id for the static site user.
func (o StaticSiteUserARMResourceInvokeResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceInvokeResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type StaticSiteUserARMResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserARMResourceInvokeResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceInvokeResponseArrayOutput) ToStaticSiteUserARMResourceInvokeResponseArrayOutput() StaticSiteUserARMResourceInvokeResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceInvokeResponseArrayOutput) ToStaticSiteUserARMResourceInvokeResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserARMResourceInvokeResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) StaticSiteUserARMResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSiteUserARMResourceInvokeResponse {
		return vs[0].([]StaticSiteUserARMResourceInvokeResponse)[vs[1].(int)]
	}).(StaticSiteUserARMResourceInvokeResponseOutput)
}

// Trigger based on status code.
type StatusCodesBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInput is an input type that accepts StatusCodesBasedTriggerArgs and StatusCodesBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInput` via:
//
//          StatusCodesBasedTriggerArgs{...}
type StatusCodesBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput
	ToStatusCodesBasedTriggerOutputWithContext(context.Context) StatusCodesBasedTriggerOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return i.ToStatusCodesBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerOutput)
}

// StatusCodesBasedTriggerArrayInput is an input type that accepts StatusCodesBasedTriggerArray and StatusCodesBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerArrayInput` via:
//
//          StatusCodesBasedTriggerArray{ StatusCodesBasedTriggerArgs{...} }
type StatusCodesBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput
	ToStatusCodesBasedTriggerArrayOutputWithContext(context.Context) StatusCodesBasedTriggerArrayOutput
}

type StatusCodesBasedTriggerArray []StatusCodesBasedTriggerInput

func (StatusCodesBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return i.ToStatusCodesBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return o
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTrigger {
		return vs[0].([]StatusCodesBasedTrigger)[vs[1].(int)]
	}).(StatusCodesBasedTriggerOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerInvokeResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInvokeResponseInput is an input type that accepts StatusCodesBasedTriggerInvokeResponseArgs and StatusCodesBasedTriggerInvokeResponseOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInvokeResponseInput` via:
//
//          StatusCodesBasedTriggerInvokeResponseArgs{...}
type StatusCodesBasedTriggerInvokeResponseInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerInvokeResponseOutput() StatusCodesBasedTriggerInvokeResponseOutput
	ToStatusCodesBasedTriggerInvokeResponseOutputWithContext(context.Context) StatusCodesBasedTriggerInvokeResponseOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerInvokeResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerInvokeResponseArgs) ToStatusCodesBasedTriggerInvokeResponseOutput() StatusCodesBasedTriggerInvokeResponseOutput {
	return i.ToStatusCodesBasedTriggerInvokeResponseOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerInvokeResponseArgs) ToStatusCodesBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerInvokeResponseOutput)
}

// StatusCodesBasedTriggerInvokeResponseArrayInput is an input type that accepts StatusCodesBasedTriggerInvokeResponseArray and StatusCodesBasedTriggerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInvokeResponseArrayInput` via:
//
//          StatusCodesBasedTriggerInvokeResponseArray{ StatusCodesBasedTriggerInvokeResponseArgs{...} }
type StatusCodesBasedTriggerInvokeResponseArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerInvokeResponseArrayOutput() StatusCodesBasedTriggerInvokeResponseArrayOutput
	ToStatusCodesBasedTriggerInvokeResponseArrayOutputWithContext(context.Context) StatusCodesBasedTriggerInvokeResponseArrayOutput
}

type StatusCodesBasedTriggerInvokeResponseArray []StatusCodesBasedTriggerInvokeResponseInput

func (StatusCodesBasedTriggerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerInvokeResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerInvokeResponseArray) ToStatusCodesBasedTriggerInvokeResponseArrayOutput() StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return i.ToStatusCodesBasedTriggerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerInvokeResponseArray) ToStatusCodesBasedTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerInvokeResponseArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerInvokeResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerInvokeResponseOutput) ToStatusCodesBasedTriggerInvokeResponseOutput() StatusCodesBasedTriggerInvokeResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerInvokeResponseOutput) ToStatusCodesBasedTriggerInvokeResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerInvokeResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerInvokeResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerInvokeResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerInvokeResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerInvokeResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerInvokeResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerInvokeResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerInvokeResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerInvokeResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerInvokeResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerInvokeResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerInvokeResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerInvokeResponseArrayOutput) ToStatusCodesBasedTriggerInvokeResponseArrayOutput() StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerInvokeResponseArrayOutput) ToStatusCodesBasedTriggerInvokeResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerInvokeResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerInvokeResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerInvokeResponse {
		return vs[0].([]StatusCodesBasedTriggerInvokeResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerInvokeResponseOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerResponseInput is an input type that accepts StatusCodesBasedTriggerResponseArgs and StatusCodesBasedTriggerResponseOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseInput` via:
//
//          StatusCodesBasedTriggerResponseArgs{...}
type StatusCodesBasedTriggerResponseInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput
	ToStatusCodesBasedTriggerResponseOutputWithContext(context.Context) StatusCodesBasedTriggerResponseOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return i.ToStatusCodesBasedTriggerResponseOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArgs) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseOutput)
}

// StatusCodesBasedTriggerResponseArrayInput is an input type that accepts StatusCodesBasedTriggerResponseArray and StatusCodesBasedTriggerResponseArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerResponseArrayInput` via:
//
//          StatusCodesBasedTriggerResponseArray{ StatusCodesBasedTriggerResponseArgs{...} }
type StatusCodesBasedTriggerResponseArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput
	ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Context) StatusCodesBasedTriggerResponseArrayOutput
}

type StatusCodesBasedTriggerResponseArray []StatusCodesBasedTriggerResponseInput

func (StatusCodesBasedTriggerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return i.ToStatusCodesBasedTriggerResponseArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerResponseArray) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerResponseArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerResponse {
		return vs[0].([]StatusCodesBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataInvokeResponseInput is an input type that accepts SystemDataInvokeResponseArgs and SystemDataInvokeResponseOutput values.
// You can construct a concrete instance of `SystemDataInvokeResponseInput` via:
//
//          SystemDataInvokeResponseArgs{...}
type SystemDataInvokeResponseInput interface {
	pulumi.Input

	ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput
	ToSystemDataInvokeResponseOutputWithContext(context.Context) SystemDataInvokeResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataInvokeResponse)(nil)).Elem()
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput {
	return i.ToSystemDataInvokeResponseOutputWithContext(context.Background())
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponseOutputWithContext(ctx context.Context) SystemDataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataInvokeResponseOutput)
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponsePtrOutput() SystemDataInvokeResponsePtrOutput {
	return i.ToSystemDataInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataInvokeResponseArgs) ToSystemDataInvokeResponsePtrOutputWithContext(ctx context.Context) SystemDataInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataInvokeResponseOutput).ToSystemDataInvokeResponsePtrOutputWithContext(ctx)
}

// SystemDataInvokeResponsePtrInput is an input type that accepts SystemDataInvokeResponseArgs, SystemDataInvokeResponsePtr and SystemDataInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataInvokeResponsePtrInput` via:
//
//          SystemDataInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataInvokeResponsePtrInput interface {
	pulumi.Input

	ToSystemDataInvokeResponsePtrOutput() SystemDataInvokeResponsePtrOutput
	ToSystemDataInvokeResponsePtrOutputWithContext(context.Context) SystemDataInvokeResponsePtrOutput
}

type systemDataInvokeResponsePtrType SystemDataInvokeResponseArgs

func SystemDataInvokeResponsePtr(v *SystemDataInvokeResponseArgs) SystemDataInvokeResponsePtrInput {
	return (*systemDataInvokeResponsePtrType)(v)
}

func (*systemDataInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataInvokeResponse)(nil)).Elem()
}

func (i *systemDataInvokeResponsePtrType) ToSystemDataInvokeResponsePtrOutput() SystemDataInvokeResponsePtrOutput {
	return i.ToSystemDataInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataInvokeResponsePtrType) ToSystemDataInvokeResponsePtrOutputWithContext(ctx context.Context) SystemDataInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataInvokeResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataInvokeResponseOutput struct{ *pulumi.OutputState }

func (SystemDataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataInvokeResponse)(nil)).Elem()
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponseOutput() SystemDataInvokeResponseOutput {
	return o
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponseOutputWithContext(ctx context.Context) SystemDataInvokeResponseOutput {
	return o
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponsePtrOutput() SystemDataInvokeResponsePtrOutput {
	return o.ToSystemDataInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataInvokeResponseOutput) ToSystemDataInvokeResponsePtrOutputWithContext(ctx context.Context) SystemDataInvokeResponsePtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *SystemDataInvokeResponse {
		return &v
	}).(SystemDataInvokeResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataInvokeResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataInvokeResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataInvokeResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataInvokeResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataInvokeResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataInvokeResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataInvokeResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataInvokeResponse)(nil)).Elem()
}

func (o SystemDataInvokeResponsePtrOutput) ToSystemDataInvokeResponsePtrOutput() SystemDataInvokeResponsePtrOutput {
	return o
}

func (o SystemDataInvokeResponsePtrOutput) ToSystemDataInvokeResponsePtrOutputWithContext(ctx context.Context) SystemDataInvokeResponsePtrOutput {
	return o
}

func (o SystemDataInvokeResponsePtrOutput) Elem() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) SystemDataInvokeResponse { return *v }).(SystemDataInvokeResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataInvokeResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataInvokeResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataInvokeResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataInvokeResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataInvokeResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataInvokeResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// Virtual application in an app.
type VirtualApplication struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectory `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationInput is an input type that accepts VirtualApplicationArgs and VirtualApplicationOutput values.
// You can construct a concrete instance of `VirtualApplicationInput` via:
//
//          VirtualApplicationArgs{...}
type VirtualApplicationInput interface {
	pulumi.Input

	ToVirtualApplicationOutput() VirtualApplicationOutput
	ToVirtualApplicationOutputWithContext(context.Context) VirtualApplicationOutput
}

// Virtual application in an app.
type VirtualApplicationArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return i.ToVirtualApplicationOutputWithContext(context.Background())
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationOutput)
}

// VirtualApplicationArrayInput is an input type that accepts VirtualApplicationArray and VirtualApplicationArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationArrayInput` via:
//
//          VirtualApplicationArray{ VirtualApplicationArgs{...} }
type VirtualApplicationArrayInput interface {
	pulumi.Input

	ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput
	ToVirtualApplicationArrayOutputWithContext(context.Context) VirtualApplicationArrayOutput
}

type VirtualApplicationArray []VirtualApplicationInput

func (VirtualApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return i.ToVirtualApplicationArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationOutput struct{ *pulumi.OutputState }

func (VirtualApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return o
}

// Physical path.
func (o VirtualApplicationOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationOutput) VirtualDirectories() VirtualDirectoryArrayOutput {
	return o.ApplyT(func(v VirtualApplication) []VirtualDirectory { return v.VirtualDirectories }).(VirtualDirectoryArrayOutput)
}

// Virtual path.
func (o VirtualApplicationOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) Index(i pulumi.IntInput) VirtualApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplication {
		return vs[0].([]VirtualApplication)[vs[1].(int)]
	}).(VirtualApplicationOutput)
}

// Virtual application in an app.
type VirtualApplicationInvokeResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectoryInvokeResponse `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationInvokeResponseInput is an input type that accepts VirtualApplicationInvokeResponseArgs and VirtualApplicationInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualApplicationInvokeResponseInput` via:
//
//          VirtualApplicationInvokeResponseArgs{...}
type VirtualApplicationInvokeResponseInput interface {
	pulumi.Input

	ToVirtualApplicationInvokeResponseOutput() VirtualApplicationInvokeResponseOutput
	ToVirtualApplicationInvokeResponseOutputWithContext(context.Context) VirtualApplicationInvokeResponseOutput
}

// Virtual application in an app.
type VirtualApplicationInvokeResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryInvokeResponseArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationInvokeResponse)(nil)).Elem()
}

func (i VirtualApplicationInvokeResponseArgs) ToVirtualApplicationInvokeResponseOutput() VirtualApplicationInvokeResponseOutput {
	return i.ToVirtualApplicationInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualApplicationInvokeResponseArgs) ToVirtualApplicationInvokeResponseOutputWithContext(ctx context.Context) VirtualApplicationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationInvokeResponseOutput)
}

// VirtualApplicationInvokeResponseArrayInput is an input type that accepts VirtualApplicationInvokeResponseArray and VirtualApplicationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationInvokeResponseArrayInput` via:
//
//          VirtualApplicationInvokeResponseArray{ VirtualApplicationInvokeResponseArgs{...} }
type VirtualApplicationInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplicationInvokeResponseArrayOutput() VirtualApplicationInvokeResponseArrayOutput
	ToVirtualApplicationInvokeResponseArrayOutputWithContext(context.Context) VirtualApplicationInvokeResponseArrayOutput
}

type VirtualApplicationInvokeResponseArray []VirtualApplicationInvokeResponseInput

func (VirtualApplicationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationInvokeResponse)(nil)).Elem()
}

func (i VirtualApplicationInvokeResponseArray) ToVirtualApplicationInvokeResponseArrayOutput() VirtualApplicationInvokeResponseArrayOutput {
	return i.ToVirtualApplicationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationInvokeResponseArray) ToVirtualApplicationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationInvokeResponseArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationInvokeResponse)(nil)).Elem()
}

func (o VirtualApplicationInvokeResponseOutput) ToVirtualApplicationInvokeResponseOutput() VirtualApplicationInvokeResponseOutput {
	return o
}

func (o VirtualApplicationInvokeResponseOutput) ToVirtualApplicationInvokeResponseOutputWithContext(ctx context.Context) VirtualApplicationInvokeResponseOutput {
	return o
}

// Physical path.
func (o VirtualApplicationInvokeResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationInvokeResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationInvokeResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationInvokeResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationInvokeResponseOutput) VirtualDirectories() VirtualDirectoryInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationInvokeResponse) []VirtualDirectoryInvokeResponse { return v.VirtualDirectories }).(VirtualDirectoryInvokeResponseArrayOutput)
}

// Virtual path.
func (o VirtualApplicationInvokeResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationInvokeResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationInvokeResponse)(nil)).Elem()
}

func (o VirtualApplicationInvokeResponseArrayOutput) ToVirtualApplicationInvokeResponseArrayOutput() VirtualApplicationInvokeResponseArrayOutput {
	return o
}

func (o VirtualApplicationInvokeResponseArrayOutput) ToVirtualApplicationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationInvokeResponseArrayOutput {
	return o
}

func (o VirtualApplicationInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationInvokeResponse {
		return vs[0].([]VirtualApplicationInvokeResponse)[vs[1].(int)]
	}).(VirtualApplicationInvokeResponseOutput)
}

// Virtual application in an app.
type VirtualApplicationResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectoryResponse `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationResponseInput is an input type that accepts VirtualApplicationResponseArgs and VirtualApplicationResponseOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseInput` via:
//
//          VirtualApplicationResponseArgs{...}
type VirtualApplicationResponseInput interface {
	pulumi.Input

	ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput
	ToVirtualApplicationResponseOutputWithContext(context.Context) VirtualApplicationResponseOutput
}

// Virtual application in an app.
type VirtualApplicationResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryResponseArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return i.ToVirtualApplicationResponseOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArgs) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseOutput)
}

// VirtualApplicationResponseArrayInput is an input type that accepts VirtualApplicationResponseArray and VirtualApplicationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationResponseArrayInput` via:
//
//          VirtualApplicationResponseArray{ VirtualApplicationResponseArgs{...} }
type VirtualApplicationResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput
	ToVirtualApplicationResponseArrayOutputWithContext(context.Context) VirtualApplicationResponseArrayOutput
}

type VirtualApplicationResponseArray []VirtualApplicationResponseInput

func (VirtualApplicationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return i.ToVirtualApplicationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationResponseArray) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationResponseArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return o
}

// Physical path.
func (o VirtualApplicationResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationResponseOutput) VirtualDirectories() VirtualDirectoryResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) []VirtualDirectoryResponse { return v.VirtualDirectories }).(VirtualDirectoryResponseArrayOutput)
}

// Virtual path.
func (o VirtualApplicationResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationResponse {
		return vs[0].([]VirtualApplicationResponse)[vs[1].(int)]
	}).(VirtualApplicationResponseOutput)
}

// Directory for virtual application.
type VirtualDirectory struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInput is an input type that accepts VirtualDirectoryArgs and VirtualDirectoryOutput values.
// You can construct a concrete instance of `VirtualDirectoryInput` via:
//
//          VirtualDirectoryArgs{...}
type VirtualDirectoryInput interface {
	pulumi.Input

	ToVirtualDirectoryOutput() VirtualDirectoryOutput
	ToVirtualDirectoryOutputWithContext(context.Context) VirtualDirectoryOutput
}

// Directory for virtual application.
type VirtualDirectoryArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return i.ToVirtualDirectoryOutputWithContext(context.Background())
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryOutput)
}

// VirtualDirectoryArrayInput is an input type that accepts VirtualDirectoryArray and VirtualDirectoryArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryArrayInput` via:
//
//          VirtualDirectoryArray{ VirtualDirectoryArgs{...} }
type VirtualDirectoryArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput
	ToVirtualDirectoryArrayOutputWithContext(context.Context) VirtualDirectoryArrayOutput
}

type VirtualDirectoryArray []VirtualDirectoryInput

func (VirtualDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return i.ToVirtualDirectoryArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectory {
		return vs[0].([]VirtualDirectory)[vs[1].(int)]
	}).(VirtualDirectoryOutput)
}

// Directory for virtual application.
type VirtualDirectoryInvokeResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInvokeResponseInput is an input type that accepts VirtualDirectoryInvokeResponseArgs and VirtualDirectoryInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualDirectoryInvokeResponseInput` via:
//
//          VirtualDirectoryInvokeResponseArgs{...}
type VirtualDirectoryInvokeResponseInput interface {
	pulumi.Input

	ToVirtualDirectoryInvokeResponseOutput() VirtualDirectoryInvokeResponseOutput
	ToVirtualDirectoryInvokeResponseOutputWithContext(context.Context) VirtualDirectoryInvokeResponseOutput
}

// Directory for virtual application.
type VirtualDirectoryInvokeResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryInvokeResponse)(nil)).Elem()
}

func (i VirtualDirectoryInvokeResponseArgs) ToVirtualDirectoryInvokeResponseOutput() VirtualDirectoryInvokeResponseOutput {
	return i.ToVirtualDirectoryInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualDirectoryInvokeResponseArgs) ToVirtualDirectoryInvokeResponseOutputWithContext(ctx context.Context) VirtualDirectoryInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryInvokeResponseOutput)
}

// VirtualDirectoryInvokeResponseArrayInput is an input type that accepts VirtualDirectoryInvokeResponseArray and VirtualDirectoryInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryInvokeResponseArrayInput` via:
//
//          VirtualDirectoryInvokeResponseArray{ VirtualDirectoryInvokeResponseArgs{...} }
type VirtualDirectoryInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryInvokeResponseArrayOutput() VirtualDirectoryInvokeResponseArrayOutput
	ToVirtualDirectoryInvokeResponseArrayOutputWithContext(context.Context) VirtualDirectoryInvokeResponseArrayOutput
}

type VirtualDirectoryInvokeResponseArray []VirtualDirectoryInvokeResponseInput

func (VirtualDirectoryInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryInvokeResponse)(nil)).Elem()
}

func (i VirtualDirectoryInvokeResponseArray) ToVirtualDirectoryInvokeResponseArrayOutput() VirtualDirectoryInvokeResponseArrayOutput {
	return i.ToVirtualDirectoryInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryInvokeResponseArray) ToVirtualDirectoryInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryInvokeResponseArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryInvokeResponse)(nil)).Elem()
}

func (o VirtualDirectoryInvokeResponseOutput) ToVirtualDirectoryInvokeResponseOutput() VirtualDirectoryInvokeResponseOutput {
	return o
}

func (o VirtualDirectoryInvokeResponseOutput) ToVirtualDirectoryInvokeResponseOutputWithContext(ctx context.Context) VirtualDirectoryInvokeResponseOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryInvokeResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryInvokeResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryInvokeResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryInvokeResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryInvokeResponse)(nil)).Elem()
}

func (o VirtualDirectoryInvokeResponseArrayOutput) ToVirtualDirectoryInvokeResponseArrayOutput() VirtualDirectoryInvokeResponseArrayOutput {
	return o
}

func (o VirtualDirectoryInvokeResponseArrayOutput) ToVirtualDirectoryInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryInvokeResponseArrayOutput {
	return o
}

func (o VirtualDirectoryInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryInvokeResponse {
		return vs[0].([]VirtualDirectoryInvokeResponse)[vs[1].(int)]
	}).(VirtualDirectoryInvokeResponseOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryResponseInput is an input type that accepts VirtualDirectoryResponseArgs and VirtualDirectoryResponseOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseInput` via:
//
//          VirtualDirectoryResponseArgs{...}
type VirtualDirectoryResponseInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput
	ToVirtualDirectoryResponseOutputWithContext(context.Context) VirtualDirectoryResponseOutput
}

// Directory for virtual application.
type VirtualDirectoryResponseArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return i.ToVirtualDirectoryResponseOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArgs) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseOutput)
}

// VirtualDirectoryResponseArrayInput is an input type that accepts VirtualDirectoryResponseArray and VirtualDirectoryResponseArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryResponseArrayInput` via:
//
//          VirtualDirectoryResponseArray{ VirtualDirectoryResponseArgs{...} }
type VirtualDirectoryResponseArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput
	ToVirtualDirectoryResponseArrayOutputWithContext(context.Context) VirtualDirectoryResponseArrayOutput
}

type VirtualDirectoryResponseArray []VirtualDirectoryResponseInput

func (VirtualDirectoryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return i.ToVirtualDirectoryResponseArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryResponseArray) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryResponseArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryResponse {
		return vs[0].([]VirtualDirectoryResponse)[vs[1].(int)]
	}).(VirtualDirectoryResponseOutput)
}

// Virtual IP mapping.
type VirtualIPMappingInvokeResponse struct {
	// Is virtual IP mapping in use.
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// name of the service that virtual IP is assigned to
	ServiceName *string `pulumi:"serviceName"`
	// Virtual IP address.
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingInvokeResponseInput is an input type that accepts VirtualIPMappingInvokeResponseArgs and VirtualIPMappingInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingInvokeResponseInput` via:
//
//          VirtualIPMappingInvokeResponseArgs{...}
type VirtualIPMappingInvokeResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingInvokeResponseOutput() VirtualIPMappingInvokeResponseOutput
	ToVirtualIPMappingInvokeResponseOutputWithContext(context.Context) VirtualIPMappingInvokeResponseOutput
}

// Virtual IP mapping.
type VirtualIPMappingInvokeResponseArgs struct {
	// Is virtual IP mapping in use.
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// name of the service that virtual IP is assigned to
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Virtual IP address.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingInvokeResponse)(nil)).Elem()
}

func (i VirtualIPMappingInvokeResponseArgs) ToVirtualIPMappingInvokeResponseOutput() VirtualIPMappingInvokeResponseOutput {
	return i.ToVirtualIPMappingInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingInvokeResponseArgs) ToVirtualIPMappingInvokeResponseOutputWithContext(ctx context.Context) VirtualIPMappingInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingInvokeResponseOutput)
}

// VirtualIPMappingInvokeResponseArrayInput is an input type that accepts VirtualIPMappingInvokeResponseArray and VirtualIPMappingInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingInvokeResponseArrayInput` via:
//
//          VirtualIPMappingInvokeResponseArray{ VirtualIPMappingInvokeResponseArgs{...} }
type VirtualIPMappingInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingInvokeResponseArrayOutput() VirtualIPMappingInvokeResponseArrayOutput
	ToVirtualIPMappingInvokeResponseArrayOutputWithContext(context.Context) VirtualIPMappingInvokeResponseArrayOutput
}

type VirtualIPMappingInvokeResponseArray []VirtualIPMappingInvokeResponseInput

func (VirtualIPMappingInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingInvokeResponse)(nil)).Elem()
}

func (i VirtualIPMappingInvokeResponseArray) ToVirtualIPMappingInvokeResponseArrayOutput() VirtualIPMappingInvokeResponseArrayOutput {
	return i.ToVirtualIPMappingInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingInvokeResponseArray) ToVirtualIPMappingInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingInvokeResponseArrayOutput)
}

// Virtual IP mapping.
type VirtualIPMappingInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingInvokeResponse)(nil)).Elem()
}

func (o VirtualIPMappingInvokeResponseOutput) ToVirtualIPMappingInvokeResponseOutput() VirtualIPMappingInvokeResponseOutput {
	return o
}

func (o VirtualIPMappingInvokeResponseOutput) ToVirtualIPMappingInvokeResponseOutputWithContext(ctx context.Context) VirtualIPMappingInvokeResponseOutput {
	return o
}

// Is virtual IP mapping in use.
func (o VirtualIPMappingInvokeResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingInvokeResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port.
func (o VirtualIPMappingInvokeResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingInvokeResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port.
func (o VirtualIPMappingInvokeResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingInvokeResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// name of the service that virtual IP is assigned to
func (o VirtualIPMappingInvokeResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingInvokeResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Virtual IP address.
func (o VirtualIPMappingInvokeResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingInvokeResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingInvokeResponse)(nil)).Elem()
}

func (o VirtualIPMappingInvokeResponseArrayOutput) ToVirtualIPMappingInvokeResponseArrayOutput() VirtualIPMappingInvokeResponseArrayOutput {
	return o
}

func (o VirtualIPMappingInvokeResponseArrayOutput) ToVirtualIPMappingInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingInvokeResponseArrayOutput {
	return o
}

func (o VirtualIPMappingInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingInvokeResponse {
		return vs[0].([]VirtualIPMappingInvokeResponse)[vs[1].(int)]
	}).(VirtualIPMappingInvokeResponseOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponse struct {
	// Is virtual IP mapping in use.
	InUse *bool `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort *int `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort *int `pulumi:"internalHttpsPort"`
	// name of the service that virtual IP is assigned to
	ServiceName *string `pulumi:"serviceName"`
	// Virtual IP address.
	VirtualIP *string `pulumi:"virtualIP"`
}

// VirtualIPMappingResponseInput is an input type that accepts VirtualIPMappingResponseArgs and VirtualIPMappingResponseOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseInput` via:
//
//          VirtualIPMappingResponseArgs{...}
type VirtualIPMappingResponseInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput
	ToVirtualIPMappingResponseOutputWithContext(context.Context) VirtualIPMappingResponseOutput
}

// Virtual IP mapping.
type VirtualIPMappingResponseArgs struct {
	// Is virtual IP mapping in use.
	InUse pulumi.BoolPtrInput `pulumi:"inUse"`
	// Internal HTTP port.
	InternalHttpPort pulumi.IntPtrInput `pulumi:"internalHttpPort"`
	// Internal HTTPS port.
	InternalHttpsPort pulumi.IntPtrInput `pulumi:"internalHttpsPort"`
	// name of the service that virtual IP is assigned to
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Virtual IP address.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (VirtualIPMappingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return i.ToVirtualIPMappingResponseOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArgs) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseOutput)
}

// VirtualIPMappingResponseArrayInput is an input type that accepts VirtualIPMappingResponseArray and VirtualIPMappingResponseArrayOutput values.
// You can construct a concrete instance of `VirtualIPMappingResponseArrayInput` via:
//
//          VirtualIPMappingResponseArray{ VirtualIPMappingResponseArgs{...} }
type VirtualIPMappingResponseArrayInput interface {
	pulumi.Input

	ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput
	ToVirtualIPMappingResponseArrayOutputWithContext(context.Context) VirtualIPMappingResponseArrayOutput
}

type VirtualIPMappingResponseArray []VirtualIPMappingResponseInput

func (VirtualIPMappingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return i.ToVirtualIPMappingResponseArrayOutputWithContext(context.Background())
}

func (i VirtualIPMappingResponseArray) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualIPMappingResponseArrayOutput)
}

// Virtual IP mapping.
type VirtualIPMappingResponseOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutput() VirtualIPMappingResponseOutput {
	return o
}

func (o VirtualIPMappingResponseOutput) ToVirtualIPMappingResponseOutputWithContext(ctx context.Context) VirtualIPMappingResponseOutput {
	return o
}

// Is virtual IP mapping in use.
func (o VirtualIPMappingResponseOutput) InUse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *bool { return v.InUse }).(pulumi.BoolPtrOutput)
}

// Internal HTTP port.
func (o VirtualIPMappingResponseOutput) InternalHttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpPort }).(pulumi.IntPtrOutput)
}

// Internal HTTPS port.
func (o VirtualIPMappingResponseOutput) InternalHttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *int { return v.InternalHttpsPort }).(pulumi.IntPtrOutput)
}

// name of the service that virtual IP is assigned to
func (o VirtualIPMappingResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Virtual IP address.
func (o VirtualIPMappingResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualIPMappingResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type VirtualIPMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualIPMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualIPMappingResponse)(nil)).Elem()
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutput() VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) ToVirtualIPMappingResponseArrayOutputWithContext(ctx context.Context) VirtualIPMappingResponseArrayOutput {
	return o
}

func (o VirtualIPMappingResponseArrayOutput) Index(i pulumi.IntInput) VirtualIPMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualIPMappingResponse {
		return vs[0].([]VirtualIPMappingResponse)[vs[1].(int)]
	}).(VirtualIPMappingResponseOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfile struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//          VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput).ToVirtualNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualNetworkProfilePtrInput is an input type that accepts VirtualNetworkProfileArgs, VirtualNetworkProfilePtr and VirtualNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfilePtrInput` via:
//
//          VirtualNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput
	ToVirtualNetworkProfilePtrOutputWithContext(context.Context) VirtualNetworkProfilePtrOutput
}

type virtualNetworkProfilePtrType VirtualNetworkProfileArgs

func VirtualNetworkProfilePtr(v *VirtualNetworkProfileArgs) VirtualNetworkProfilePtrInput {
	return (*virtualNetworkProfilePtrType)(v)
}

func (*virtualNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return i.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfilePtrType) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfilePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o.ToVirtualNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *VirtualNetworkProfile {
		return &v
	}).(VirtualNetworkProfilePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

type VirtualNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutput() VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) ToVirtualNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualNetworkProfilePtrOutput {
	return o
}

func (o VirtualNetworkProfilePtrOutput) Elem() VirtualNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) VirtualNetworkProfile { return *v }).(VirtualNetworkProfileOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfilePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileInvokeResponse struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name string `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type string `pulumi:"type"`
}

// VirtualNetworkProfileInvokeResponseInput is an input type that accepts VirtualNetworkProfileInvokeResponseArgs and VirtualNetworkProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInvokeResponseInput` via:
//
//          VirtualNetworkProfileInvokeResponseArgs{...}
type VirtualNetworkProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileInvokeResponseOutput() VirtualNetworkProfileInvokeResponseOutput
	ToVirtualNetworkProfileInvokeResponseOutputWithContext(context.Context) VirtualNetworkProfileInvokeResponseOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileInvokeResponseArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileInvokeResponseArgs) ToVirtualNetworkProfileInvokeResponseOutput() VirtualNetworkProfileInvokeResponseOutput {
	return i.ToVirtualNetworkProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileInvokeResponseArgs) ToVirtualNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileInvokeResponseOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileInvokeResponseOutput) ToVirtualNetworkProfileInvokeResponseOutput() VirtualNetworkProfileInvokeResponseOutput {
	return o
}

func (o VirtualNetworkProfileInvokeResponseOutput) ToVirtualNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileInvokeResponseOutput {
	return o
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileInvokeResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileInvokeResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponse struct {
	// Resource id of the Virtual Network.
	Id *string `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name string `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type string `pulumi:"type"`
}

// VirtualNetworkProfileResponseInput is an input type that accepts VirtualNetworkProfileResponseArgs and VirtualNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponseInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
type VirtualNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput
	ToVirtualNetworkProfileResponseOutputWithContext(context.Context) VirtualNetworkProfileResponseOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name pulumi.StringInput `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return i.ToVirtualNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput)
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileResponseArgs) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponseOutput).ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkProfileResponsePtrInput is an input type that accepts VirtualNetworkProfileResponseArgs, VirtualNetworkProfileResponsePtr and VirtualNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileResponsePtrInput` via:
//
//          VirtualNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput
	ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualNetworkProfileResponsePtrOutput
}

type virtualNetworkProfileResponsePtrType VirtualNetworkProfileResponseArgs

func VirtualNetworkProfileResponsePtr(v *VirtualNetworkProfileResponseArgs) VirtualNetworkProfileResponsePtrInput {
	return (*virtualNetworkProfileResponsePtrType)(v)
}

func (*virtualNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return i.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkProfileResponsePtrType) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileResponsePtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o.ToVirtualNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *VirtualNetworkProfileResponse {
		return &v
	}).(VirtualNetworkProfileResponsePtrOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutput() VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) ToVirtualNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualNetworkProfileResponsePtrOutput) Elem() VirtualNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) VirtualNetworkProfileResponse { return *v }).(VirtualNetworkProfileResponseOutput)
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponsePtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteInvokeResponse struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VnetRouteInvokeResponseInput is an input type that accepts VnetRouteInvokeResponseArgs and VnetRouteInvokeResponseOutput values.
// You can construct a concrete instance of `VnetRouteInvokeResponseInput` via:
//
//          VnetRouteInvokeResponseArgs{...}
type VnetRouteInvokeResponseInput interface {
	pulumi.Input

	ToVnetRouteInvokeResponseOutput() VnetRouteInvokeResponseOutput
	ToVnetRouteInvokeResponseOutputWithContext(context.Context) VnetRouteInvokeResponseOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteInvokeResponseArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
	// The system metadata relating to this resource.
	SystemData SystemDataInvokeResponseInput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VnetRouteInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteInvokeResponse)(nil)).Elem()
}

func (i VnetRouteInvokeResponseArgs) ToVnetRouteInvokeResponseOutput() VnetRouteInvokeResponseOutput {
	return i.ToVnetRouteInvokeResponseOutputWithContext(context.Background())
}

func (i VnetRouteInvokeResponseArgs) ToVnetRouteInvokeResponseOutputWithContext(ctx context.Context) VnetRouteInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteInvokeResponseOutput)
}

// VnetRouteInvokeResponseArrayInput is an input type that accepts VnetRouteInvokeResponseArray and VnetRouteInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VnetRouteInvokeResponseArrayInput` via:
//
//          VnetRouteInvokeResponseArray{ VnetRouteInvokeResponseArgs{...} }
type VnetRouteInvokeResponseArrayInput interface {
	pulumi.Input

	ToVnetRouteInvokeResponseArrayOutput() VnetRouteInvokeResponseArrayOutput
	ToVnetRouteInvokeResponseArrayOutputWithContext(context.Context) VnetRouteInvokeResponseArrayOutput
}

type VnetRouteInvokeResponseArray []VnetRouteInvokeResponseInput

func (VnetRouteInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteInvokeResponse)(nil)).Elem()
}

func (i VnetRouteInvokeResponseArray) ToVnetRouteInvokeResponseArrayOutput() VnetRouteInvokeResponseArrayOutput {
	return i.ToVnetRouteInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VnetRouteInvokeResponseArray) ToVnetRouteInvokeResponseArrayOutputWithContext(ctx context.Context) VnetRouteInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteInvokeResponseArrayOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteInvokeResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteInvokeResponse)(nil)).Elem()
}

func (o VnetRouteInvokeResponseOutput) ToVnetRouteInvokeResponseOutput() VnetRouteInvokeResponseOutput {
	return o
}

func (o VnetRouteInvokeResponseOutput) ToVnetRouteInvokeResponseOutputWithContext(ctx context.Context) VnetRouteInvokeResponseOutput {
	return o
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteInvokeResponseOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o VnetRouteInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o VnetRouteInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o VnetRouteInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteInvokeResponseOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteInvokeResponseOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o VnetRouteInvokeResponseOutput) SystemData() SystemDataInvokeResponseOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) SystemDataInvokeResponse { return v.SystemData }).(SystemDataInvokeResponseOutput)
}

// Resource type.
func (o VnetRouteInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VnetRouteInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteInvokeResponse)(nil)).Elem()
}

func (o VnetRouteInvokeResponseArrayOutput) ToVnetRouteInvokeResponseArrayOutput() VnetRouteInvokeResponseArrayOutput {
	return o
}

func (o VnetRouteInvokeResponseArrayOutput) ToVnetRouteInvokeResponseArrayOutputWithContext(ctx context.Context) VnetRouteInvokeResponseArrayOutput {
	return o
}

func (o VnetRouteInvokeResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteInvokeResponse {
		return vs[0].([]VnetRouteInvokeResponse)[vs[1].(int)]
	}).(VnetRouteInvokeResponseOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponse struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VnetRouteResponseInput is an input type that accepts VnetRouteResponseArgs and VnetRouteResponseOutput values.
// You can construct a concrete instance of `VnetRouteResponseInput` via:
//
//          VnetRouteResponseArgs{...}
type VnetRouteResponseInput interface {
	pulumi.Input

	ToVnetRouteResponseOutput() VnetRouteResponseOutput
	ToVnetRouteResponseOutputWithContext(context.Context) VnetRouteResponseOutput
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseArgs struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress pulumi.StringPtrInput `pulumi:"endAddress"`
	// Resource Id.
	Id pulumi.StringInput `pulumi:"id"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Resource Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress pulumi.StringPtrInput `pulumi:"startAddress"`
	// The system metadata relating to this resource.
	SystemData SystemDataResponseInput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VnetRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return i.ToVnetRouteResponseOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput)
}

// VnetRouteResponseArrayInput is an input type that accepts VnetRouteResponseArray and VnetRouteResponseArrayOutput values.
// You can construct a concrete instance of `VnetRouteResponseArrayInput` via:
//
//          VnetRouteResponseArray{ VnetRouteResponseArgs{...} }
type VnetRouteResponseArrayInput interface {
	pulumi.Input

	ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput
	ToVnetRouteResponseArrayOutputWithContext(context.Context) VnetRouteResponseArrayOutput
}

type VnetRouteResponseArray []VnetRouteResponseInput

func (VnetRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return i.ToVnetRouteResponseArrayOutputWithContext(context.Background())
}

func (i VnetRouteResponseArray) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseArrayOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponseOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o VnetRouteResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o VnetRouteResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o VnetRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponseOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponseOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

// The system metadata relating to this resource.
func (o VnetRouteResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v VnetRouteResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o VnetRouteResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VnetRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteResponse {
		return vs[0].([]VnetRouteResponse)[vs[1].(int)]
	}).(VnetRouteResponseOutput)
}

// Worker pool of an App Service Environment.
type WorkerPool struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolInput is an input type that accepts WorkerPoolArgs and WorkerPoolOutput values.
// You can construct a concrete instance of `WorkerPoolInput` via:
//
//          WorkerPoolArgs{...}
type WorkerPoolInput interface {
	pulumi.Input

	ToWorkerPoolOutput() WorkerPoolOutput
	ToWorkerPoolOutputWithContext(context.Context) WorkerPoolOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode ComputeModeOptions `pulumi:"computeMode"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArgs) ToWorkerPoolOutput() WorkerPoolOutput {
	return i.ToWorkerPoolOutputWithContext(context.Background())
}

func (i WorkerPoolArgs) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolOutput)
}

// WorkerPoolArrayInput is an input type that accepts WorkerPoolArray and WorkerPoolArrayOutput values.
// You can construct a concrete instance of `WorkerPoolArrayInput` via:
//
//          WorkerPoolArray{ WorkerPoolArgs{...} }
type WorkerPoolArrayInput interface {
	pulumi.Input

	ToWorkerPoolArrayOutput() WorkerPoolArrayOutput
	ToWorkerPoolArrayOutputWithContext(context.Context) WorkerPoolArrayOutput
}

type WorkerPoolArray []WorkerPoolInput

func (WorkerPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return i.ToWorkerPoolArrayOutputWithContext(context.Background())
}

func (i WorkerPoolArray) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolOutput struct{ *pulumi.OutputState }

func (WorkerPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPool)(nil)).Elem()
}

func (o WorkerPoolOutput) ToWorkerPoolOutput() WorkerPoolOutput {
	return o
}

func (o WorkerPoolOutput) ToWorkerPoolOutputWithContext(ctx context.Context) WorkerPoolOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPool) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPool) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPool)(nil)).Elem()
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutput() WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) ToWorkerPoolArrayOutputWithContext(ctx context.Context) WorkerPoolArrayOutput {
	return o
}

func (o WorkerPoolArrayOutput) Index(i pulumi.IntInput) WorkerPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPool {
		return vs[0].([]WorkerPool)[vs[1].(int)]
	}).(WorkerPoolOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolInvokeResponse struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolInvokeResponseInput is an input type that accepts WorkerPoolInvokeResponseArgs and WorkerPoolInvokeResponseOutput values.
// You can construct a concrete instance of `WorkerPoolInvokeResponseInput` via:
//
//          WorkerPoolInvokeResponseArgs{...}
type WorkerPoolInvokeResponseInput interface {
	pulumi.Input

	ToWorkerPoolInvokeResponseOutput() WorkerPoolInvokeResponseOutput
	ToWorkerPoolInvokeResponseOutputWithContext(context.Context) WorkerPoolInvokeResponseOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolInvokeResponseArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolInvokeResponse)(nil)).Elem()
}

func (i WorkerPoolInvokeResponseArgs) ToWorkerPoolInvokeResponseOutput() WorkerPoolInvokeResponseOutput {
	return i.ToWorkerPoolInvokeResponseOutputWithContext(context.Background())
}

func (i WorkerPoolInvokeResponseArgs) ToWorkerPoolInvokeResponseOutputWithContext(ctx context.Context) WorkerPoolInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolInvokeResponseOutput)
}

// WorkerPoolInvokeResponseArrayInput is an input type that accepts WorkerPoolInvokeResponseArray and WorkerPoolInvokeResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolInvokeResponseArrayInput` via:
//
//          WorkerPoolInvokeResponseArray{ WorkerPoolInvokeResponseArgs{...} }
type WorkerPoolInvokeResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolInvokeResponseArrayOutput() WorkerPoolInvokeResponseArrayOutput
	ToWorkerPoolInvokeResponseArrayOutputWithContext(context.Context) WorkerPoolInvokeResponseArrayOutput
}

type WorkerPoolInvokeResponseArray []WorkerPoolInvokeResponseInput

func (WorkerPoolInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolInvokeResponse)(nil)).Elem()
}

func (i WorkerPoolInvokeResponseArray) ToWorkerPoolInvokeResponseArrayOutput() WorkerPoolInvokeResponseArrayOutput {
	return i.ToWorkerPoolInvokeResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolInvokeResponseArray) ToWorkerPoolInvokeResponseArrayOutputWithContext(ctx context.Context) WorkerPoolInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolInvokeResponseArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolInvokeResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolInvokeResponse)(nil)).Elem()
}

func (o WorkerPoolInvokeResponseOutput) ToWorkerPoolInvokeResponseOutput() WorkerPoolInvokeResponseOutput {
	return o
}

func (o WorkerPoolInvokeResponseOutput) ToWorkerPoolInvokeResponseOutputWithContext(ctx context.Context) WorkerPoolInvokeResponseOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolInvokeResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolInvokeResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only).
func (o WorkerPoolInvokeResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolInvokeResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolInvokeResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolInvokeResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolInvokeResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolInvokeResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolInvokeResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolInvokeResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolInvokeResponse)(nil)).Elem()
}

func (o WorkerPoolInvokeResponseArrayOutput) ToWorkerPoolInvokeResponseArrayOutput() WorkerPoolInvokeResponseArrayOutput {
	return o
}

func (o WorkerPoolInvokeResponseArrayOutput) ToWorkerPoolInvokeResponseArrayOutputWithContext(ctx context.Context) WorkerPoolInvokeResponseArrayOutput {
	return o
}

func (o WorkerPoolInvokeResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolInvokeResponse {
		return vs[0].([]WorkerPoolInvokeResponse)[vs[1].(int)]
	}).(WorkerPoolInvokeResponseOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponse struct {
	// Shared or dedicated app hosting.
	ComputeMode *string `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames []string `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount *int `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize *string `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId *int `pulumi:"workerSizeId"`
}

// WorkerPoolResponseInput is an input type that accepts WorkerPoolResponseArgs and WorkerPoolResponseOutput values.
// You can construct a concrete instance of `WorkerPoolResponseInput` via:
//
//          WorkerPoolResponseArgs{...}
type WorkerPoolResponseInput interface {
	pulumi.Input

	ToWorkerPoolResponseOutput() WorkerPoolResponseOutput
	ToWorkerPoolResponseOutputWithContext(context.Context) WorkerPoolResponseOutput
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseArgs struct {
	// Shared or dedicated app hosting.
	ComputeMode pulumi.StringPtrInput `pulumi:"computeMode"`
	// Names of all instances in the worker pool (read only).
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Number of instances in the worker pool.
	WorkerCount pulumi.IntPtrInput `pulumi:"workerCount"`
	// VM size of the worker pool instances.
	WorkerSize pulumi.StringPtrInput `pulumi:"workerSize"`
	// Worker size ID for referencing this worker pool.
	WorkerSizeId pulumi.IntPtrInput `pulumi:"workerSizeId"`
}

func (WorkerPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return i.ToWorkerPoolResponseOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArgs) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseOutput)
}

// WorkerPoolResponseArrayInput is an input type that accepts WorkerPoolResponseArray and WorkerPoolResponseArrayOutput values.
// You can construct a concrete instance of `WorkerPoolResponseArrayInput` via:
//
//          WorkerPoolResponseArray{ WorkerPoolResponseArgs{...} }
type WorkerPoolResponseArrayInput interface {
	pulumi.Input

	ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput
	ToWorkerPoolResponseArrayOutputWithContext(context.Context) WorkerPoolResponseArrayOutput
}

type WorkerPoolResponseArray []WorkerPoolResponseInput

func (WorkerPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return i.ToWorkerPoolResponseArrayOutputWithContext(context.Background())
}

func (i WorkerPoolResponseArray) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolResponseArrayOutput)
}

// Worker pool of an App Service Environment.
type WorkerPoolResponseOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutput() WorkerPoolResponseOutput {
	return o
}

func (o WorkerPoolResponseOutput) ToWorkerPoolResponseOutputWithContext(ctx context.Context) WorkerPoolResponseOutput {
	return o
}

// Shared or dedicated app hosting.
func (o WorkerPoolResponseOutput) ComputeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.ComputeMode }).(pulumi.StringPtrOutput)
}

// Names of all instances in the worker pool (read only).
func (o WorkerPoolResponseOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkerPoolResponse) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Number of instances in the worker pool.
func (o WorkerPoolResponseOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

// VM size of the worker pool instances.
func (o WorkerPoolResponseOutput) WorkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *string { return v.WorkerSize }).(pulumi.StringPtrOutput)
}

// Worker size ID for referencing this worker pool.
func (o WorkerPoolResponseOutput) WorkerSizeId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerPoolResponse) *int { return v.WorkerSizeId }).(pulumi.IntPtrOutput)
}

type WorkerPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolResponse)(nil)).Elem()
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutput() WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) ToWorkerPoolResponseArrayOutputWithContext(ctx context.Context) WorkerPoolResponseArrayOutput {
	return o
}

func (o WorkerPoolResponseArrayOutput) Index(i pulumi.IntInput) WorkerPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolResponse {
		return vs[0].([]WorkerPoolResponse)[vs[1].(int)]
	}).(WorkerPoolResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiDefinitionInfoOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoPtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperInvokeResponseOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponseOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsOutput{})
	pulumi.RegisterOutputType(AutoHealActionsPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsInvokeResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionPtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionInvokeResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesOutput{})
	pulumi.RegisterOutputType(AutoHealRulesPtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesInvokeResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersPtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersInvokeResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueInvokeResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupItemInvokeResponseOutput{})
	pulumi.RegisterOutputType(BackupItemInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupScheduleInvokeOutput{})
	pulumi.RegisterOutputType(BackupScheduleInvokeResponseOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityInvokeResponseOutput{})
	pulumi.RegisterOutputType(CapabilityInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CloningInfoOutput{})
	pulumi.RegisterOutputType(CloningInfoPtrOutput{})
	pulumi.RegisterOutputType(CloningInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(CloningInfoResponseOutput{})
	pulumi.RegisterOutputType(CloningInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnStringInfoOutput{})
	pulumi.RegisterOutputType(ConnStringInfoArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(CorsSettingsOutput{})
	pulumi.RegisterOutputType(CorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingInvokeOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingInvokeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(EnabledConfigOutput{})
	pulumi.RegisterOutputType(EnabledConfigPtrOutput{})
	pulumi.RegisterOutputType(EnabledConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(EnabledConfigResponseOutput{})
	pulumi.RegisterOutputType(EnabledConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(ExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ExperimentsResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(HandlerMappingOutput{})
	pulumi.RegisterOutputType(HandlerMappingArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingInvokeResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateOutput{})
	pulumi.RegisterOutputType(HostNameSslStateArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateInvokeResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentifierInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentifierInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionInvokeResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityInvokeResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairInvokeResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseOutput{})
	pulumi.RegisterOutputType(NetworkAccessControlEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateInvokeResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PushSettingsOutput{})
	pulumi.RegisterOutputType(PushSettingsPtrOutput{})
	pulumi.RegisterOutputType(PushSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(PushSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PushSettingsResponseOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RampUpRuleOutput{})
	pulumi.RegisterOutputType(RampUpRuleArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteConfigOutput{})
	pulumi.RegisterOutputType(SiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsOutput{})
	pulumi.RegisterOutputType(SiteLimitsPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsInvokeResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponseOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityOutput{})
	pulumi.RegisterOutputType(SkuCapacityPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusInvokeResponseOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponseOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(StampCapacityInvokeResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseOutput{})
	pulumi.RegisterOutputType(StampCapacityResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerInvokeResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataInvokeResponseOutput{})
	pulumi.RegisterOutputType(SystemDataInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualApplicationOutput{})
	pulumi.RegisterOutputType(VirtualApplicationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseOutput{})
	pulumi.RegisterOutputType(VirtualIPMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteInvokeResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolOutput{})
	pulumi.RegisterOutputType(WorkerPoolArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolInvokeResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseOutput{})
	pulumi.RegisterOutputType(WorkerPoolResponseArrayOutput{})
}
