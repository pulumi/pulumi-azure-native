// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210115

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Predefined action to be taken.
type AutoHealActionType string

const (
	AutoHealActionTypeRecycle      = AutoHealActionType("Recycle")
	AutoHealActionTypeLogEvent     = AutoHealActionType("LogEvent")
	AutoHealActionTypeCustomAction = AutoHealActionType("CustomAction")
)

func (AutoHealActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionType)(nil)).Elem()
}

func (e AutoHealActionType) ToAutoHealActionTypeOutput() AutoHealActionTypeOutput {
	return pulumi.ToOutput(e).(AutoHealActionTypeOutput)
}

func (e AutoHealActionType) ToAutoHealActionTypeOutputWithContext(ctx context.Context) AutoHealActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoHealActionTypeOutput)
}

func (e AutoHealActionType) ToAutoHealActionTypePtrOutput() AutoHealActionTypePtrOutput {
	return e.ToAutoHealActionTypePtrOutputWithContext(context.Background())
}

func (e AutoHealActionType) ToAutoHealActionTypePtrOutputWithContext(ctx context.Context) AutoHealActionTypePtrOutput {
	return AutoHealActionType(e).ToAutoHealActionTypeOutputWithContext(ctx).ToAutoHealActionTypePtrOutputWithContext(ctx)
}

func (e AutoHealActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoHealActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoHealActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoHealActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoHealActionTypeOutput struct{ *pulumi.OutputState }

func (AutoHealActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionType)(nil)).Elem()
}

func (o AutoHealActionTypeOutput) ToAutoHealActionTypeOutput() AutoHealActionTypeOutput {
	return o
}

func (o AutoHealActionTypeOutput) ToAutoHealActionTypeOutputWithContext(ctx context.Context) AutoHealActionTypeOutput {
	return o
}

func (o AutoHealActionTypeOutput) ToAutoHealActionTypePtrOutput() AutoHealActionTypePtrOutput {
	return o.ToAutoHealActionTypePtrOutputWithContext(context.Background())
}

func (o AutoHealActionTypeOutput) ToAutoHealActionTypePtrOutputWithContext(ctx context.Context) AutoHealActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoHealActionType) *AutoHealActionType {
		return &v
	}).(AutoHealActionTypePtrOutput)
}

func (o AutoHealActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoHealActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoHealActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoHealActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoHealActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoHealActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoHealActionTypePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionType)(nil)).Elem()
}

func (o AutoHealActionTypePtrOutput) ToAutoHealActionTypePtrOutput() AutoHealActionTypePtrOutput {
	return o
}

func (o AutoHealActionTypePtrOutput) ToAutoHealActionTypePtrOutputWithContext(ctx context.Context) AutoHealActionTypePtrOutput {
	return o
}

func (o AutoHealActionTypePtrOutput) Elem() AutoHealActionTypeOutput {
	return o.ApplyT(func(v *AutoHealActionType) AutoHealActionType {
		if v != nil {
			return *v
		}
		var ret AutoHealActionType
		return ret
	}).(AutoHealActionTypeOutput)
}

func (o AutoHealActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoHealActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoHealActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoHealActionTypeInput is an input type that accepts AutoHealActionTypeArgs and AutoHealActionTypeOutput values.
// You can construct a concrete instance of `AutoHealActionTypeInput` via:
//
//	AutoHealActionTypeArgs{...}
type AutoHealActionTypeInput interface {
	pulumi.Input

	ToAutoHealActionTypeOutput() AutoHealActionTypeOutput
	ToAutoHealActionTypeOutputWithContext(context.Context) AutoHealActionTypeOutput
}

var autoHealActionTypePtrType = reflect.TypeOf((**AutoHealActionType)(nil)).Elem()

type AutoHealActionTypePtrInput interface {
	pulumi.Input

	ToAutoHealActionTypePtrOutput() AutoHealActionTypePtrOutput
	ToAutoHealActionTypePtrOutputWithContext(context.Context) AutoHealActionTypePtrOutput
}

type autoHealActionTypePtr string

func AutoHealActionTypePtr(v string) AutoHealActionTypePtrInput {
	return (*autoHealActionTypePtr)(&v)
}

func (*autoHealActionTypePtr) ElementType() reflect.Type {
	return autoHealActionTypePtrType
}

func (in *autoHealActionTypePtr) ToAutoHealActionTypePtrOutput() AutoHealActionTypePtrOutput {
	return pulumi.ToOutput(in).(AutoHealActionTypePtrOutput)
}

func (in *autoHealActionTypePtr) ToAutoHealActionTypePtrOutputWithContext(ctx context.Context) AutoHealActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoHealActionTypePtrOutput)
}

// Azure resource type.
type AzureResourceType string

const (
	AzureResourceTypeWebsite        = AzureResourceType("Website")
	AzureResourceTypeTrafficManager = AzureResourceType("TrafficManager")
)

func (AzureResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceType)(nil)).Elem()
}

func (e AzureResourceType) ToAzureResourceTypeOutput() AzureResourceTypeOutput {
	return pulumi.ToOutput(e).(AzureResourceTypeOutput)
}

func (e AzureResourceType) ToAzureResourceTypeOutputWithContext(ctx context.Context) AzureResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureResourceTypeOutput)
}

func (e AzureResourceType) ToAzureResourceTypePtrOutput() AzureResourceTypePtrOutput {
	return e.ToAzureResourceTypePtrOutputWithContext(context.Background())
}

func (e AzureResourceType) ToAzureResourceTypePtrOutputWithContext(ctx context.Context) AzureResourceTypePtrOutput {
	return AzureResourceType(e).ToAzureResourceTypeOutputWithContext(ctx).ToAzureResourceTypePtrOutputWithContext(ctx)
}

func (e AzureResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureResourceTypeOutput struct{ *pulumi.OutputState }

func (AzureResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceType)(nil)).Elem()
}

func (o AzureResourceTypeOutput) ToAzureResourceTypeOutput() AzureResourceTypeOutput {
	return o
}

func (o AzureResourceTypeOutput) ToAzureResourceTypeOutputWithContext(ctx context.Context) AzureResourceTypeOutput {
	return o
}

func (o AzureResourceTypeOutput) ToAzureResourceTypePtrOutput() AzureResourceTypePtrOutput {
	return o.ToAzureResourceTypePtrOutputWithContext(context.Background())
}

func (o AzureResourceTypeOutput) ToAzureResourceTypePtrOutputWithContext(ctx context.Context) AzureResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureResourceType) *AzureResourceType {
		return &v
	}).(AzureResourceTypePtrOutput)
}

func (o AzureResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureResourceTypePtrOutput struct{ *pulumi.OutputState }

func (AzureResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceType)(nil)).Elem()
}

func (o AzureResourceTypePtrOutput) ToAzureResourceTypePtrOutput() AzureResourceTypePtrOutput {
	return o
}

func (o AzureResourceTypePtrOutput) ToAzureResourceTypePtrOutputWithContext(ctx context.Context) AzureResourceTypePtrOutput {
	return o
}

func (o AzureResourceTypePtrOutput) Elem() AzureResourceTypeOutput {
	return o.ApplyT(func(v *AzureResourceType) AzureResourceType {
		if v != nil {
			return *v
		}
		var ret AzureResourceType
		return ret
	}).(AzureResourceTypeOutput)
}

func (o AzureResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureResourceTypeInput is an input type that accepts AzureResourceTypeArgs and AzureResourceTypeOutput values.
// You can construct a concrete instance of `AzureResourceTypeInput` via:
//
//	AzureResourceTypeArgs{...}
type AzureResourceTypeInput interface {
	pulumi.Input

	ToAzureResourceTypeOutput() AzureResourceTypeOutput
	ToAzureResourceTypeOutputWithContext(context.Context) AzureResourceTypeOutput
}

var azureResourceTypePtrType = reflect.TypeOf((**AzureResourceType)(nil)).Elem()

type AzureResourceTypePtrInput interface {
	pulumi.Input

	ToAzureResourceTypePtrOutput() AzureResourceTypePtrOutput
	ToAzureResourceTypePtrOutputWithContext(context.Context) AzureResourceTypePtrOutput
}

type azureResourceTypePtr string

func AzureResourceTypePtr(v string) AzureResourceTypePtrInput {
	return (*azureResourceTypePtr)(&v)
}

func (*azureResourceTypePtr) ElementType() reflect.Type {
	return azureResourceTypePtrType
}

func (in *azureResourceTypePtr) ToAzureResourceTypePtrOutput() AzureResourceTypePtrOutput {
	return pulumi.ToOutput(in).(AzureResourceTypePtrOutput)
}

func (in *azureResourceTypePtr) ToAzureResourceTypePtrOutputWithContext(ctx context.Context) AzureResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureResourceTypePtrOutput)
}

// Type of storage.
type AzureStorageType string

const (
	AzureStorageTypeAzureFiles = AzureStorageType("AzureFiles")
	AzureStorageTypeAzureBlob  = AzureStorageType("AzureBlob")
)

func (AzureStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageType)(nil)).Elem()
}

func (e AzureStorageType) ToAzureStorageTypeOutput() AzureStorageTypeOutput {
	return pulumi.ToOutput(e).(AzureStorageTypeOutput)
}

func (e AzureStorageType) ToAzureStorageTypeOutputWithContext(ctx context.Context) AzureStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AzureStorageTypeOutput)
}

func (e AzureStorageType) ToAzureStorageTypePtrOutput() AzureStorageTypePtrOutput {
	return e.ToAzureStorageTypePtrOutputWithContext(context.Background())
}

func (e AzureStorageType) ToAzureStorageTypePtrOutputWithContext(ctx context.Context) AzureStorageTypePtrOutput {
	return AzureStorageType(e).ToAzureStorageTypeOutputWithContext(ctx).ToAzureStorageTypePtrOutputWithContext(ctx)
}

func (e AzureStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AzureStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AzureStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AzureStorageTypeOutput struct{ *pulumi.OutputState }

func (AzureStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageType)(nil)).Elem()
}

func (o AzureStorageTypeOutput) ToAzureStorageTypeOutput() AzureStorageTypeOutput {
	return o
}

func (o AzureStorageTypeOutput) ToAzureStorageTypeOutputWithContext(ctx context.Context) AzureStorageTypeOutput {
	return o
}

func (o AzureStorageTypeOutput) ToAzureStorageTypePtrOutput() AzureStorageTypePtrOutput {
	return o.ToAzureStorageTypePtrOutputWithContext(context.Background())
}

func (o AzureStorageTypeOutput) ToAzureStorageTypePtrOutputWithContext(ctx context.Context) AzureStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageType) *AzureStorageType {
		return &v
	}).(AzureStorageTypePtrOutput)
}

func (o AzureStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AzureStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AzureStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AzureStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AzureStorageTypePtrOutput struct{ *pulumi.OutputState }

func (AzureStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageType)(nil)).Elem()
}

func (o AzureStorageTypePtrOutput) ToAzureStorageTypePtrOutput() AzureStorageTypePtrOutput {
	return o
}

func (o AzureStorageTypePtrOutput) ToAzureStorageTypePtrOutputWithContext(ctx context.Context) AzureStorageTypePtrOutput {
	return o
}

func (o AzureStorageTypePtrOutput) Elem() AzureStorageTypeOutput {
	return o.ApplyT(func(v *AzureStorageType) AzureStorageType {
		if v != nil {
			return *v
		}
		var ret AzureStorageType
		return ret
	}).(AzureStorageTypeOutput)
}

func (o AzureStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AzureStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AzureStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AzureStorageTypeInput is an input type that accepts AzureStorageTypeArgs and AzureStorageTypeOutput values.
// You can construct a concrete instance of `AzureStorageTypeInput` via:
//
//	AzureStorageTypeArgs{...}
type AzureStorageTypeInput interface {
	pulumi.Input

	ToAzureStorageTypeOutput() AzureStorageTypeOutput
	ToAzureStorageTypeOutputWithContext(context.Context) AzureStorageTypeOutput
}

var azureStorageTypePtrType = reflect.TypeOf((**AzureStorageType)(nil)).Elem()

type AzureStorageTypePtrInput interface {
	pulumi.Input

	ToAzureStorageTypePtrOutput() AzureStorageTypePtrOutput
	ToAzureStorageTypePtrOutputWithContext(context.Context) AzureStorageTypePtrOutput
}

type azureStorageTypePtr string

func AzureStorageTypePtr(v string) AzureStorageTypePtrInput {
	return (*azureStorageTypePtr)(&v)
}

func (*azureStorageTypePtr) ElementType() reflect.Type {
	return azureStorageTypePtrType
}

func (in *azureStorageTypePtr) ToAzureStorageTypePtrOutput() AzureStorageTypePtrOutput {
	return pulumi.ToOutput(in).(AzureStorageTypePtrOutput)
}

func (in *azureStorageTypePtr) ToAzureStorageTypePtrOutputWithContext(ctx context.Context) AzureStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AzureStorageTypePtrOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
type BuiltInAuthenticationProvider string

const (
	BuiltInAuthenticationProviderAzureActiveDirectory = BuiltInAuthenticationProvider("AzureActiveDirectory")
	BuiltInAuthenticationProviderFacebook             = BuiltInAuthenticationProvider("Facebook")
	BuiltInAuthenticationProviderGoogle               = BuiltInAuthenticationProvider("Google")
	BuiltInAuthenticationProviderMicrosoftAccount     = BuiltInAuthenticationProvider("MicrosoftAccount")
	BuiltInAuthenticationProviderTwitter              = BuiltInAuthenticationProvider("Twitter")
	BuiltInAuthenticationProviderGithub               = BuiltInAuthenticationProvider("Github")
)

func (BuiltInAuthenticationProvider) ElementType() reflect.Type {
	return reflect.TypeOf((*BuiltInAuthenticationProvider)(nil)).Elem()
}

func (e BuiltInAuthenticationProvider) ToBuiltInAuthenticationProviderOutput() BuiltInAuthenticationProviderOutput {
	return pulumi.ToOutput(e).(BuiltInAuthenticationProviderOutput)
}

func (e BuiltInAuthenticationProvider) ToBuiltInAuthenticationProviderOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuiltInAuthenticationProviderOutput)
}

func (e BuiltInAuthenticationProvider) ToBuiltInAuthenticationProviderPtrOutput() BuiltInAuthenticationProviderPtrOutput {
	return e.ToBuiltInAuthenticationProviderPtrOutputWithContext(context.Background())
}

func (e BuiltInAuthenticationProvider) ToBuiltInAuthenticationProviderPtrOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderPtrOutput {
	return BuiltInAuthenticationProvider(e).ToBuiltInAuthenticationProviderOutputWithContext(ctx).ToBuiltInAuthenticationProviderPtrOutputWithContext(ctx)
}

func (e BuiltInAuthenticationProvider) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuiltInAuthenticationProvider) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuiltInAuthenticationProvider) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuiltInAuthenticationProvider) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuiltInAuthenticationProviderOutput struct{ *pulumi.OutputState }

func (BuiltInAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuiltInAuthenticationProvider)(nil)).Elem()
}

func (o BuiltInAuthenticationProviderOutput) ToBuiltInAuthenticationProviderOutput() BuiltInAuthenticationProviderOutput {
	return o
}

func (o BuiltInAuthenticationProviderOutput) ToBuiltInAuthenticationProviderOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderOutput {
	return o
}

func (o BuiltInAuthenticationProviderOutput) ToBuiltInAuthenticationProviderPtrOutput() BuiltInAuthenticationProviderPtrOutput {
	return o.ToBuiltInAuthenticationProviderPtrOutputWithContext(context.Background())
}

func (o BuiltInAuthenticationProviderOutput) ToBuiltInAuthenticationProviderPtrOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuiltInAuthenticationProvider) *BuiltInAuthenticationProvider {
		return &v
	}).(BuiltInAuthenticationProviderPtrOutput)
}

func (o BuiltInAuthenticationProviderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuiltInAuthenticationProviderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuiltInAuthenticationProvider) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuiltInAuthenticationProviderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuiltInAuthenticationProviderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuiltInAuthenticationProvider) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuiltInAuthenticationProviderPtrOutput struct{ *pulumi.OutputState }

func (BuiltInAuthenticationProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuiltInAuthenticationProvider)(nil)).Elem()
}

func (o BuiltInAuthenticationProviderPtrOutput) ToBuiltInAuthenticationProviderPtrOutput() BuiltInAuthenticationProviderPtrOutput {
	return o
}

func (o BuiltInAuthenticationProviderPtrOutput) ToBuiltInAuthenticationProviderPtrOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderPtrOutput {
	return o
}

func (o BuiltInAuthenticationProviderPtrOutput) Elem() BuiltInAuthenticationProviderOutput {
	return o.ApplyT(func(v *BuiltInAuthenticationProvider) BuiltInAuthenticationProvider {
		if v != nil {
			return *v
		}
		var ret BuiltInAuthenticationProvider
		return ret
	}).(BuiltInAuthenticationProviderOutput)
}

func (o BuiltInAuthenticationProviderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuiltInAuthenticationProviderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuiltInAuthenticationProvider) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuiltInAuthenticationProviderInput is an input type that accepts BuiltInAuthenticationProviderArgs and BuiltInAuthenticationProviderOutput values.
// You can construct a concrete instance of `BuiltInAuthenticationProviderInput` via:
//
//	BuiltInAuthenticationProviderArgs{...}
type BuiltInAuthenticationProviderInput interface {
	pulumi.Input

	ToBuiltInAuthenticationProviderOutput() BuiltInAuthenticationProviderOutput
	ToBuiltInAuthenticationProviderOutputWithContext(context.Context) BuiltInAuthenticationProviderOutput
}

var builtInAuthenticationProviderPtrType = reflect.TypeOf((**BuiltInAuthenticationProvider)(nil)).Elem()

type BuiltInAuthenticationProviderPtrInput interface {
	pulumi.Input

	ToBuiltInAuthenticationProviderPtrOutput() BuiltInAuthenticationProviderPtrOutput
	ToBuiltInAuthenticationProviderPtrOutputWithContext(context.Context) BuiltInAuthenticationProviderPtrOutput
}

type builtInAuthenticationProviderPtr string

func BuiltInAuthenticationProviderPtr(v string) BuiltInAuthenticationProviderPtrInput {
	return (*builtInAuthenticationProviderPtr)(&v)
}

func (*builtInAuthenticationProviderPtr) ElementType() reflect.Type {
	return builtInAuthenticationProviderPtrType
}

func (in *builtInAuthenticationProviderPtr) ToBuiltInAuthenticationProviderPtrOutput() BuiltInAuthenticationProviderPtrOutput {
	return pulumi.ToOutput(in).(BuiltInAuthenticationProviderPtrOutput)
}

func (in *builtInAuthenticationProviderPtr) ToBuiltInAuthenticationProviderPtrOutputWithContext(ctx context.Context) BuiltInAuthenticationProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuiltInAuthenticationProviderPtrOutput)
}

// This composes with ClientCertEnabled setting.
// - ClientCertEnabled: false means ClientCert is ignored.
// - ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.
// - ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.
type ClientCertMode string

const (
	ClientCertModeRequired                = ClientCertMode("Required")
	ClientCertModeOptional                = ClientCertMode("Optional")
	ClientCertModeOptionalInteractiveUser = ClientCertMode("OptionalInteractiveUser")
)

func (ClientCertMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCertMode)(nil)).Elem()
}

func (e ClientCertMode) ToClientCertModeOutput() ClientCertModeOutput {
	return pulumi.ToOutput(e).(ClientCertModeOutput)
}

func (e ClientCertMode) ToClientCertModeOutputWithContext(ctx context.Context) ClientCertModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClientCertModeOutput)
}

func (e ClientCertMode) ToClientCertModePtrOutput() ClientCertModePtrOutput {
	return e.ToClientCertModePtrOutputWithContext(context.Background())
}

func (e ClientCertMode) ToClientCertModePtrOutputWithContext(ctx context.Context) ClientCertModePtrOutput {
	return ClientCertMode(e).ToClientCertModeOutputWithContext(ctx).ToClientCertModePtrOutputWithContext(ctx)
}

func (e ClientCertMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCertMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCertMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClientCertMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClientCertModeOutput struct{ *pulumi.OutputState }

func (ClientCertModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCertMode)(nil)).Elem()
}

func (o ClientCertModeOutput) ToClientCertModeOutput() ClientCertModeOutput {
	return o
}

func (o ClientCertModeOutput) ToClientCertModeOutputWithContext(ctx context.Context) ClientCertModeOutput {
	return o
}

func (o ClientCertModeOutput) ToClientCertModePtrOutput() ClientCertModePtrOutput {
	return o.ToClientCertModePtrOutputWithContext(context.Background())
}

func (o ClientCertModeOutput) ToClientCertModePtrOutputWithContext(ctx context.Context) ClientCertModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientCertMode) *ClientCertMode {
		return &v
	}).(ClientCertModePtrOutput)
}

func (o ClientCertModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClientCertModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCertMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClientCertModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCertModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCertMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClientCertModePtrOutput struct{ *pulumi.OutputState }

func (ClientCertModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCertMode)(nil)).Elem()
}

func (o ClientCertModePtrOutput) ToClientCertModePtrOutput() ClientCertModePtrOutput {
	return o
}

func (o ClientCertModePtrOutput) ToClientCertModePtrOutputWithContext(ctx context.Context) ClientCertModePtrOutput {
	return o
}

func (o ClientCertModePtrOutput) Elem() ClientCertModeOutput {
	return o.ApplyT(func(v *ClientCertMode) ClientCertMode {
		if v != nil {
			return *v
		}
		var ret ClientCertMode
		return ret
	}).(ClientCertModeOutput)
}

func (o ClientCertModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCertModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClientCertMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClientCertModeInput is an input type that accepts ClientCertModeArgs and ClientCertModeOutput values.
// You can construct a concrete instance of `ClientCertModeInput` via:
//
//	ClientCertModeArgs{...}
type ClientCertModeInput interface {
	pulumi.Input

	ToClientCertModeOutput() ClientCertModeOutput
	ToClientCertModeOutputWithContext(context.Context) ClientCertModeOutput
}

var clientCertModePtrType = reflect.TypeOf((**ClientCertMode)(nil)).Elem()

type ClientCertModePtrInput interface {
	pulumi.Input

	ToClientCertModePtrOutput() ClientCertModePtrOutput
	ToClientCertModePtrOutputWithContext(context.Context) ClientCertModePtrOutput
}

type clientCertModePtr string

func ClientCertModePtr(v string) ClientCertModePtrInput {
	return (*clientCertModePtr)(&v)
}

func (*clientCertModePtr) ElementType() reflect.Type {
	return clientCertModePtrType
}

func (in *clientCertModePtr) ToClientCertModePtrOutput() ClientCertModePtrOutput {
	return pulumi.ToOutput(in).(ClientCertModePtrOutput)
}

func (in *clientCertModePtr) ToClientCertModePtrOutputWithContext(ctx context.Context) ClientCertModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClientCertModePtrOutput)
}

// The method that should be used to authenticate the user.
type ClientCredentialMethod string

const (
	ClientCredentialMethodClientSecretPost = ClientCredentialMethod("ClientSecretPost")
)

func (ClientCredentialMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialMethod)(nil)).Elem()
}

func (e ClientCredentialMethod) ToClientCredentialMethodOutput() ClientCredentialMethodOutput {
	return pulumi.ToOutput(e).(ClientCredentialMethodOutput)
}

func (e ClientCredentialMethod) ToClientCredentialMethodOutputWithContext(ctx context.Context) ClientCredentialMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClientCredentialMethodOutput)
}

func (e ClientCredentialMethod) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return e.ToClientCredentialMethodPtrOutputWithContext(context.Background())
}

func (e ClientCredentialMethod) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return ClientCredentialMethod(e).ToClientCredentialMethodOutputWithContext(ctx).ToClientCredentialMethodPtrOutputWithContext(ctx)
}

func (e ClientCredentialMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCredentialMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientCredentialMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClientCredentialMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClientCredentialMethodOutput struct{ *pulumi.OutputState }

func (ClientCredentialMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialMethod)(nil)).Elem()
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodOutput() ClientCredentialMethodOutput {
	return o
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodOutputWithContext(ctx context.Context) ClientCredentialMethodOutput {
	return o
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return o.ToClientCredentialMethodPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientCredentialMethod) *ClientCredentialMethod {
		return &v
	}).(ClientCredentialMethodPtrOutput)
}

func (o ClientCredentialMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCredentialMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClientCredentialMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientCredentialMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClientCredentialMethodPtrOutput struct{ *pulumi.OutputState }

func (ClientCredentialMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialMethod)(nil)).Elem()
}

func (o ClientCredentialMethodPtrOutput) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return o
}

func (o ClientCredentialMethodPtrOutput) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return o
}

func (o ClientCredentialMethodPtrOutput) Elem() ClientCredentialMethodOutput {
	return o.ApplyT(func(v *ClientCredentialMethod) ClientCredentialMethod {
		if v != nil {
			return *v
		}
		var ret ClientCredentialMethod
		return ret
	}).(ClientCredentialMethodOutput)
}

func (o ClientCredentialMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientCredentialMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClientCredentialMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClientCredentialMethodInput is an input type that accepts ClientCredentialMethodArgs and ClientCredentialMethodOutput values.
// You can construct a concrete instance of `ClientCredentialMethodInput` via:
//
//	ClientCredentialMethodArgs{...}
type ClientCredentialMethodInput interface {
	pulumi.Input

	ToClientCredentialMethodOutput() ClientCredentialMethodOutput
	ToClientCredentialMethodOutputWithContext(context.Context) ClientCredentialMethodOutput
}

var clientCredentialMethodPtrType = reflect.TypeOf((**ClientCredentialMethod)(nil)).Elem()

type ClientCredentialMethodPtrInput interface {
	pulumi.Input

	ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput
	ToClientCredentialMethodPtrOutputWithContext(context.Context) ClientCredentialMethodPtrOutput
}

type clientCredentialMethodPtr string

func ClientCredentialMethodPtr(v string) ClientCredentialMethodPtrInput {
	return (*clientCredentialMethodPtr)(&v)
}

func (*clientCredentialMethodPtr) ElementType() reflect.Type {
	return clientCredentialMethodPtrType
}

func (in *clientCredentialMethodPtr) ToClientCredentialMethodPtrOutput() ClientCredentialMethodPtrOutput {
	return pulumi.ToOutput(in).(ClientCredentialMethodPtrOutput)
}

func (in *clientCredentialMethodPtr) ToClientCredentialMethodPtrOutputWithContext(ctx context.Context) ClientCredentialMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClientCredentialMethodPtrOutput)
}

// Type of database.
type ConnectionStringType string

const (
	ConnectionStringTypeMySql           = ConnectionStringType("MySql")
	ConnectionStringTypeSQLServer       = ConnectionStringType("SQLServer")
	ConnectionStringTypeSQLAzure        = ConnectionStringType("SQLAzure")
	ConnectionStringTypeCustom          = ConnectionStringType("Custom")
	ConnectionStringTypeNotificationHub = ConnectionStringType("NotificationHub")
	ConnectionStringTypeServiceBus      = ConnectionStringType("ServiceBus")
	ConnectionStringTypeEventHub        = ConnectionStringType("EventHub")
	ConnectionStringTypeApiHub          = ConnectionStringType("ApiHub")
	ConnectionStringTypeDocDb           = ConnectionStringType("DocDb")
	ConnectionStringTypeRedisCache      = ConnectionStringType("RedisCache")
	ConnectionStringTypePostgreSQL      = ConnectionStringType("PostgreSQL")
)

func (ConnectionStringType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStringType)(nil)).Elem()
}

func (e ConnectionStringType) ToConnectionStringTypeOutput() ConnectionStringTypeOutput {
	return pulumi.ToOutput(e).(ConnectionStringTypeOutput)
}

func (e ConnectionStringType) ToConnectionStringTypeOutputWithContext(ctx context.Context) ConnectionStringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionStringTypeOutput)
}

func (e ConnectionStringType) ToConnectionStringTypePtrOutput() ConnectionStringTypePtrOutput {
	return e.ToConnectionStringTypePtrOutputWithContext(context.Background())
}

func (e ConnectionStringType) ToConnectionStringTypePtrOutputWithContext(ctx context.Context) ConnectionStringTypePtrOutput {
	return ConnectionStringType(e).ToConnectionStringTypeOutputWithContext(ctx).ToConnectionStringTypePtrOutputWithContext(ctx)
}

func (e ConnectionStringType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionStringType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionStringType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionStringType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionStringTypeOutput struct{ *pulumi.OutputState }

func (ConnectionStringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStringType)(nil)).Elem()
}

func (o ConnectionStringTypeOutput) ToConnectionStringTypeOutput() ConnectionStringTypeOutput {
	return o
}

func (o ConnectionStringTypeOutput) ToConnectionStringTypeOutputWithContext(ctx context.Context) ConnectionStringTypeOutput {
	return o
}

func (o ConnectionStringTypeOutput) ToConnectionStringTypePtrOutput() ConnectionStringTypePtrOutput {
	return o.ToConnectionStringTypePtrOutputWithContext(context.Background())
}

func (o ConnectionStringTypeOutput) ToConnectionStringTypePtrOutputWithContext(ctx context.Context) ConnectionStringTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionStringType) *ConnectionStringType {
		return &v
	}).(ConnectionStringTypePtrOutput)
}

func (o ConnectionStringTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionStringTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionStringType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionStringTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionStringTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionStringType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionStringTypePtrOutput struct{ *pulumi.OutputState }

func (ConnectionStringTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionStringType)(nil)).Elem()
}

func (o ConnectionStringTypePtrOutput) ToConnectionStringTypePtrOutput() ConnectionStringTypePtrOutput {
	return o
}

func (o ConnectionStringTypePtrOutput) ToConnectionStringTypePtrOutputWithContext(ctx context.Context) ConnectionStringTypePtrOutput {
	return o
}

func (o ConnectionStringTypePtrOutput) Elem() ConnectionStringTypeOutput {
	return o.ApplyT(func(v *ConnectionStringType) ConnectionStringType {
		if v != nil {
			return *v
		}
		var ret ConnectionStringType
		return ret
	}).(ConnectionStringTypeOutput)
}

func (o ConnectionStringTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionStringTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionStringType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionStringTypeInput is an input type that accepts ConnectionStringTypeArgs and ConnectionStringTypeOutput values.
// You can construct a concrete instance of `ConnectionStringTypeInput` via:
//
//	ConnectionStringTypeArgs{...}
type ConnectionStringTypeInput interface {
	pulumi.Input

	ToConnectionStringTypeOutput() ConnectionStringTypeOutput
	ToConnectionStringTypeOutputWithContext(context.Context) ConnectionStringTypeOutput
}

var connectionStringTypePtrType = reflect.TypeOf((**ConnectionStringType)(nil)).Elem()

type ConnectionStringTypePtrInput interface {
	pulumi.Input

	ToConnectionStringTypePtrOutput() ConnectionStringTypePtrOutput
	ToConnectionStringTypePtrOutputWithContext(context.Context) ConnectionStringTypePtrOutput
}

type connectionStringTypePtr string

func ConnectionStringTypePtr(v string) ConnectionStringTypePtrInput {
	return (*connectionStringTypePtr)(&v)
}

func (*connectionStringTypePtr) ElementType() reflect.Type {
	return connectionStringTypePtrType
}

func (in *connectionStringTypePtr) ToConnectionStringTypePtrOutput() ConnectionStringTypePtrOutput {
	return pulumi.ToOutput(in).(ConnectionStringTypePtrOutput)
}

func (in *connectionStringTypePtr) ToConnectionStringTypePtrOutputWithContext(ctx context.Context) ConnectionStringTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionStringTypePtrOutput)
}

// The convention used when determining the session cookie's expiration.
type CookieExpirationConvention string

const (
	CookieExpirationConventionFixedTime               = CookieExpirationConvention("FixedTime")
	CookieExpirationConventionIdentityProviderDerived = CookieExpirationConvention("IdentityProviderDerived")
)

func (CookieExpirationConvention) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpirationConvention)(nil)).Elem()
}

func (e CookieExpirationConvention) ToCookieExpirationConventionOutput() CookieExpirationConventionOutput {
	return pulumi.ToOutput(e).(CookieExpirationConventionOutput)
}

func (e CookieExpirationConvention) ToCookieExpirationConventionOutputWithContext(ctx context.Context) CookieExpirationConventionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CookieExpirationConventionOutput)
}

func (e CookieExpirationConvention) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return e.ToCookieExpirationConventionPtrOutputWithContext(context.Background())
}

func (e CookieExpirationConvention) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return CookieExpirationConvention(e).ToCookieExpirationConventionOutputWithContext(ctx).ToCookieExpirationConventionPtrOutputWithContext(ctx)
}

func (e CookieExpirationConvention) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CookieExpirationConvention) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CookieExpirationConvention) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CookieExpirationConvention) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CookieExpirationConventionOutput struct{ *pulumi.OutputState }

func (CookieExpirationConventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpirationConvention)(nil)).Elem()
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionOutput() CookieExpirationConventionOutput {
	return o
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionOutputWithContext(ctx context.Context) CookieExpirationConventionOutput {
	return o
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return o.ToCookieExpirationConventionPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CookieExpirationConvention) *CookieExpirationConvention {
		return &v
	}).(CookieExpirationConventionPtrOutput)
}

func (o CookieExpirationConventionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CookieExpirationConvention) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CookieExpirationConventionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CookieExpirationConvention) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CookieExpirationConventionPtrOutput struct{ *pulumi.OutputState }

func (CookieExpirationConventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CookieExpirationConvention)(nil)).Elem()
}

func (o CookieExpirationConventionPtrOutput) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return o
}

func (o CookieExpirationConventionPtrOutput) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return o
}

func (o CookieExpirationConventionPtrOutput) Elem() CookieExpirationConventionOutput {
	return o.ApplyT(func(v *CookieExpirationConvention) CookieExpirationConvention {
		if v != nil {
			return *v
		}
		var ret CookieExpirationConvention
		return ret
	}).(CookieExpirationConventionOutput)
}

func (o CookieExpirationConventionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CookieExpirationConventionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CookieExpirationConvention) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CookieExpirationConventionInput is an input type that accepts CookieExpirationConventionArgs and CookieExpirationConventionOutput values.
// You can construct a concrete instance of `CookieExpirationConventionInput` via:
//
//	CookieExpirationConventionArgs{...}
type CookieExpirationConventionInput interface {
	pulumi.Input

	ToCookieExpirationConventionOutput() CookieExpirationConventionOutput
	ToCookieExpirationConventionOutputWithContext(context.Context) CookieExpirationConventionOutput
}

var cookieExpirationConventionPtrType = reflect.TypeOf((**CookieExpirationConvention)(nil)).Elem()

type CookieExpirationConventionPtrInput interface {
	pulumi.Input

	ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput
	ToCookieExpirationConventionPtrOutputWithContext(context.Context) CookieExpirationConventionPtrOutput
}

type cookieExpirationConventionPtr string

func CookieExpirationConventionPtr(v string) CookieExpirationConventionPtrInput {
	return (*cookieExpirationConventionPtr)(&v)
}

func (*cookieExpirationConventionPtr) ElementType() reflect.Type {
	return cookieExpirationConventionPtrType
}

func (in *cookieExpirationConventionPtr) ToCookieExpirationConventionPtrOutput() CookieExpirationConventionPtrOutput {
	return pulumi.ToOutput(in).(CookieExpirationConventionPtrOutput)
}

func (in *cookieExpirationConventionPtr) ToCookieExpirationConventionPtrOutputWithContext(ctx context.Context) CookieExpirationConventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CookieExpirationConventionPtrOutput)
}

// Custom DNS record type.
type CustomHostNameDnsRecordType string

const (
	CustomHostNameDnsRecordTypeCName = CustomHostNameDnsRecordType("CName")
	CustomHostNameDnsRecordTypeA     = CustomHostNameDnsRecordType("A")
)

func (CustomHostNameDnsRecordType) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostNameDnsRecordType)(nil)).Elem()
}

func (e CustomHostNameDnsRecordType) ToCustomHostNameDnsRecordTypeOutput() CustomHostNameDnsRecordTypeOutput {
	return pulumi.ToOutput(e).(CustomHostNameDnsRecordTypeOutput)
}

func (e CustomHostNameDnsRecordType) ToCustomHostNameDnsRecordTypeOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CustomHostNameDnsRecordTypeOutput)
}

func (e CustomHostNameDnsRecordType) ToCustomHostNameDnsRecordTypePtrOutput() CustomHostNameDnsRecordTypePtrOutput {
	return e.ToCustomHostNameDnsRecordTypePtrOutputWithContext(context.Background())
}

func (e CustomHostNameDnsRecordType) ToCustomHostNameDnsRecordTypePtrOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypePtrOutput {
	return CustomHostNameDnsRecordType(e).ToCustomHostNameDnsRecordTypeOutputWithContext(ctx).ToCustomHostNameDnsRecordTypePtrOutputWithContext(ctx)
}

func (e CustomHostNameDnsRecordType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomHostNameDnsRecordType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomHostNameDnsRecordType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CustomHostNameDnsRecordType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CustomHostNameDnsRecordTypeOutput struct{ *pulumi.OutputState }

func (CustomHostNameDnsRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHostNameDnsRecordType)(nil)).Elem()
}

func (o CustomHostNameDnsRecordTypeOutput) ToCustomHostNameDnsRecordTypeOutput() CustomHostNameDnsRecordTypeOutput {
	return o
}

func (o CustomHostNameDnsRecordTypeOutput) ToCustomHostNameDnsRecordTypeOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypeOutput {
	return o
}

func (o CustomHostNameDnsRecordTypeOutput) ToCustomHostNameDnsRecordTypePtrOutput() CustomHostNameDnsRecordTypePtrOutput {
	return o.ToCustomHostNameDnsRecordTypePtrOutputWithContext(context.Background())
}

func (o CustomHostNameDnsRecordTypeOutput) ToCustomHostNameDnsRecordTypePtrOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomHostNameDnsRecordType) *CustomHostNameDnsRecordType {
		return &v
	}).(CustomHostNameDnsRecordTypePtrOutput)
}

func (o CustomHostNameDnsRecordTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CustomHostNameDnsRecordTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomHostNameDnsRecordType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CustomHostNameDnsRecordTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomHostNameDnsRecordTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomHostNameDnsRecordType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CustomHostNameDnsRecordTypePtrOutput struct{ *pulumi.OutputState }

func (CustomHostNameDnsRecordTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomHostNameDnsRecordType)(nil)).Elem()
}

func (o CustomHostNameDnsRecordTypePtrOutput) ToCustomHostNameDnsRecordTypePtrOutput() CustomHostNameDnsRecordTypePtrOutput {
	return o
}

func (o CustomHostNameDnsRecordTypePtrOutput) ToCustomHostNameDnsRecordTypePtrOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypePtrOutput {
	return o
}

func (o CustomHostNameDnsRecordTypePtrOutput) Elem() CustomHostNameDnsRecordTypeOutput {
	return o.ApplyT(func(v *CustomHostNameDnsRecordType) CustomHostNameDnsRecordType {
		if v != nil {
			return *v
		}
		var ret CustomHostNameDnsRecordType
		return ret
	}).(CustomHostNameDnsRecordTypeOutput)
}

func (o CustomHostNameDnsRecordTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomHostNameDnsRecordTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CustomHostNameDnsRecordType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CustomHostNameDnsRecordTypeInput is an input type that accepts CustomHostNameDnsRecordTypeArgs and CustomHostNameDnsRecordTypeOutput values.
// You can construct a concrete instance of `CustomHostNameDnsRecordTypeInput` via:
//
//	CustomHostNameDnsRecordTypeArgs{...}
type CustomHostNameDnsRecordTypeInput interface {
	pulumi.Input

	ToCustomHostNameDnsRecordTypeOutput() CustomHostNameDnsRecordTypeOutput
	ToCustomHostNameDnsRecordTypeOutputWithContext(context.Context) CustomHostNameDnsRecordTypeOutput
}

var customHostNameDnsRecordTypePtrType = reflect.TypeOf((**CustomHostNameDnsRecordType)(nil)).Elem()

type CustomHostNameDnsRecordTypePtrInput interface {
	pulumi.Input

	ToCustomHostNameDnsRecordTypePtrOutput() CustomHostNameDnsRecordTypePtrOutput
	ToCustomHostNameDnsRecordTypePtrOutputWithContext(context.Context) CustomHostNameDnsRecordTypePtrOutput
}

type customHostNameDnsRecordTypePtr string

func CustomHostNameDnsRecordTypePtr(v string) CustomHostNameDnsRecordTypePtrInput {
	return (*customHostNameDnsRecordTypePtr)(&v)
}

func (*customHostNameDnsRecordTypePtr) ElementType() reflect.Type {
	return customHostNameDnsRecordTypePtrType
}

func (in *customHostNameDnsRecordTypePtr) ToCustomHostNameDnsRecordTypePtrOutput() CustomHostNameDnsRecordTypePtrOutput {
	return pulumi.ToOutput(in).(CustomHostNameDnsRecordTypePtrOutput)
}

func (in *customHostNameDnsRecordTypePtr) ToCustomHostNameDnsRecordTypePtrOutputWithContext(ctx context.Context) CustomHostNameDnsRecordTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CustomHostNameDnsRecordTypePtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
type DatabaseType string

const (
	DatabaseTypeSqlAzure   = DatabaseType("SqlAzure")
	DatabaseTypeMySql      = DatabaseType("MySql")
	DatabaseTypeLocalMySql = DatabaseType("LocalMySql")
	DatabaseTypePostgreSql = DatabaseType("PostgreSql")
)

// The convention used to determine the url of the request made.
type ForwardProxyConvention string

const (
	ForwardProxyConventionNoProxy  = ForwardProxyConvention("NoProxy")
	ForwardProxyConventionStandard = ForwardProxyConvention("Standard")
	ForwardProxyConventionCustom   = ForwardProxyConvention("Custom")
)

func (ForwardProxyConvention) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxyConvention)(nil)).Elem()
}

func (e ForwardProxyConvention) ToForwardProxyConventionOutput() ForwardProxyConventionOutput {
	return pulumi.ToOutput(e).(ForwardProxyConventionOutput)
}

func (e ForwardProxyConvention) ToForwardProxyConventionOutputWithContext(ctx context.Context) ForwardProxyConventionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardProxyConventionOutput)
}

func (e ForwardProxyConvention) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return e.ToForwardProxyConventionPtrOutputWithContext(context.Background())
}

func (e ForwardProxyConvention) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return ForwardProxyConvention(e).ToForwardProxyConventionOutputWithContext(ctx).ToForwardProxyConventionPtrOutputWithContext(ctx)
}

func (e ForwardProxyConvention) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardProxyConvention) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardProxyConvention) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardProxyConvention) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardProxyConventionOutput struct{ *pulumi.OutputState }

func (ForwardProxyConventionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxyConvention)(nil)).Elem()
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionOutput() ForwardProxyConventionOutput {
	return o
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionOutputWithContext(ctx context.Context) ForwardProxyConventionOutput {
	return o
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return o.ToForwardProxyConventionPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardProxyConvention) *ForwardProxyConvention {
		return &v
	}).(ForwardProxyConventionPtrOutput)
}

func (o ForwardProxyConventionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardProxyConvention) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardProxyConventionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardProxyConvention) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardProxyConventionPtrOutput struct{ *pulumi.OutputState }

func (ForwardProxyConventionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardProxyConvention)(nil)).Elem()
}

func (o ForwardProxyConventionPtrOutput) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return o
}

func (o ForwardProxyConventionPtrOutput) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return o
}

func (o ForwardProxyConventionPtrOutput) Elem() ForwardProxyConventionOutput {
	return o.ApplyT(func(v *ForwardProxyConvention) ForwardProxyConvention {
		if v != nil {
			return *v
		}
		var ret ForwardProxyConvention
		return ret
	}).(ForwardProxyConventionOutput)
}

func (o ForwardProxyConventionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardProxyConventionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardProxyConvention) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardProxyConventionInput is an input type that accepts ForwardProxyConventionArgs and ForwardProxyConventionOutput values.
// You can construct a concrete instance of `ForwardProxyConventionInput` via:
//
//	ForwardProxyConventionArgs{...}
type ForwardProxyConventionInput interface {
	pulumi.Input

	ToForwardProxyConventionOutput() ForwardProxyConventionOutput
	ToForwardProxyConventionOutputWithContext(context.Context) ForwardProxyConventionOutput
}

var forwardProxyConventionPtrType = reflect.TypeOf((**ForwardProxyConvention)(nil)).Elem()

type ForwardProxyConventionPtrInput interface {
	pulumi.Input

	ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput
	ToForwardProxyConventionPtrOutputWithContext(context.Context) ForwardProxyConventionPtrOutput
}

type forwardProxyConventionPtr string

func ForwardProxyConventionPtr(v string) ForwardProxyConventionPtrInput {
	return (*forwardProxyConventionPtr)(&v)
}

func (*forwardProxyConventionPtr) ElementType() reflect.Type {
	return forwardProxyConventionPtrType
}

func (in *forwardProxyConventionPtr) ToForwardProxyConventionPtrOutput() ForwardProxyConventionPtrOutput {
	return pulumi.ToOutput(in).(ForwardProxyConventionPtrOutput)
}

func (in *forwardProxyConventionPtr) ToForwardProxyConventionPtrOutputWithContext(ctx context.Context) ForwardProxyConventionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardProxyConventionPtrOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
type FrequencyUnit string

const (
	FrequencyUnitDay  = FrequencyUnit("Day")
	FrequencyUnitHour = FrequencyUnit("Hour")
)

func (FrequencyUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*FrequencyUnit)(nil)).Elem()
}

func (e FrequencyUnit) ToFrequencyUnitOutput() FrequencyUnitOutput {
	return pulumi.ToOutput(e).(FrequencyUnitOutput)
}

func (e FrequencyUnit) ToFrequencyUnitOutputWithContext(ctx context.Context) FrequencyUnitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FrequencyUnitOutput)
}

func (e FrequencyUnit) ToFrequencyUnitPtrOutput() FrequencyUnitPtrOutput {
	return e.ToFrequencyUnitPtrOutputWithContext(context.Background())
}

func (e FrequencyUnit) ToFrequencyUnitPtrOutputWithContext(ctx context.Context) FrequencyUnitPtrOutput {
	return FrequencyUnit(e).ToFrequencyUnitOutputWithContext(ctx).ToFrequencyUnitPtrOutputWithContext(ctx)
}

func (e FrequencyUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FrequencyUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FrequencyUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FrequencyUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FrequencyUnitOutput struct{ *pulumi.OutputState }

func (FrequencyUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrequencyUnit)(nil)).Elem()
}

func (o FrequencyUnitOutput) ToFrequencyUnitOutput() FrequencyUnitOutput {
	return o
}

func (o FrequencyUnitOutput) ToFrequencyUnitOutputWithContext(ctx context.Context) FrequencyUnitOutput {
	return o
}

func (o FrequencyUnitOutput) ToFrequencyUnitPtrOutput() FrequencyUnitPtrOutput {
	return o.ToFrequencyUnitPtrOutputWithContext(context.Background())
}

func (o FrequencyUnitOutput) ToFrequencyUnitPtrOutputWithContext(ctx context.Context) FrequencyUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrequencyUnit) *FrequencyUnit {
		return &v
	}).(FrequencyUnitPtrOutput)
}

func (o FrequencyUnitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FrequencyUnitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FrequencyUnit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FrequencyUnitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FrequencyUnitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FrequencyUnit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FrequencyUnitPtrOutput struct{ *pulumi.OutputState }

func (FrequencyUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrequencyUnit)(nil)).Elem()
}

func (o FrequencyUnitPtrOutput) ToFrequencyUnitPtrOutput() FrequencyUnitPtrOutput {
	return o
}

func (o FrequencyUnitPtrOutput) ToFrequencyUnitPtrOutputWithContext(ctx context.Context) FrequencyUnitPtrOutput {
	return o
}

func (o FrequencyUnitPtrOutput) Elem() FrequencyUnitOutput {
	return o.ApplyT(func(v *FrequencyUnit) FrequencyUnit {
		if v != nil {
			return *v
		}
		var ret FrequencyUnit
		return ret
	}).(FrequencyUnitOutput)
}

func (o FrequencyUnitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FrequencyUnitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FrequencyUnit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FrequencyUnitInput is an input type that accepts FrequencyUnitArgs and FrequencyUnitOutput values.
// You can construct a concrete instance of `FrequencyUnitInput` via:
//
//	FrequencyUnitArgs{...}
type FrequencyUnitInput interface {
	pulumi.Input

	ToFrequencyUnitOutput() FrequencyUnitOutput
	ToFrequencyUnitOutputWithContext(context.Context) FrequencyUnitOutput
}

var frequencyUnitPtrType = reflect.TypeOf((**FrequencyUnit)(nil)).Elem()

type FrequencyUnitPtrInput interface {
	pulumi.Input

	ToFrequencyUnitPtrOutput() FrequencyUnitPtrOutput
	ToFrequencyUnitPtrOutputWithContext(context.Context) FrequencyUnitPtrOutput
}

type frequencyUnitPtr string

func FrequencyUnitPtr(v string) FrequencyUnitPtrInput {
	return (*frequencyUnitPtr)(&v)
}

func (*frequencyUnitPtr) ElementType() reflect.Type {
	return frequencyUnitPtrType
}

func (in *frequencyUnitPtr) ToFrequencyUnitPtrOutput() FrequencyUnitPtrOutput {
	return pulumi.ToOutput(in).(FrequencyUnitPtrOutput)
}

func (in *frequencyUnitPtr) ToFrequencyUnitPtrOutputWithContext(ctx context.Context) FrequencyUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FrequencyUnitPtrOutput)
}

type FrontEndServiceType string

const (
	FrontEndServiceTypeNodePort     = FrontEndServiceType("NodePort")
	FrontEndServiceTypeLoadBalancer = FrontEndServiceType("LoadBalancer")
)

func (FrontEndServiceType) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontEndServiceType)(nil)).Elem()
}

func (e FrontEndServiceType) ToFrontEndServiceTypeOutput() FrontEndServiceTypeOutput {
	return pulumi.ToOutput(e).(FrontEndServiceTypeOutput)
}

func (e FrontEndServiceType) ToFrontEndServiceTypeOutputWithContext(ctx context.Context) FrontEndServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FrontEndServiceTypeOutput)
}

func (e FrontEndServiceType) ToFrontEndServiceTypePtrOutput() FrontEndServiceTypePtrOutput {
	return e.ToFrontEndServiceTypePtrOutputWithContext(context.Background())
}

func (e FrontEndServiceType) ToFrontEndServiceTypePtrOutputWithContext(ctx context.Context) FrontEndServiceTypePtrOutput {
	return FrontEndServiceType(e).ToFrontEndServiceTypeOutputWithContext(ctx).ToFrontEndServiceTypePtrOutputWithContext(ctx)
}

func (e FrontEndServiceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FrontEndServiceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FrontEndServiceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FrontEndServiceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FrontEndServiceTypeOutput struct{ *pulumi.OutputState }

func (FrontEndServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontEndServiceType)(nil)).Elem()
}

func (o FrontEndServiceTypeOutput) ToFrontEndServiceTypeOutput() FrontEndServiceTypeOutput {
	return o
}

func (o FrontEndServiceTypeOutput) ToFrontEndServiceTypeOutputWithContext(ctx context.Context) FrontEndServiceTypeOutput {
	return o
}

func (o FrontEndServiceTypeOutput) ToFrontEndServiceTypePtrOutput() FrontEndServiceTypePtrOutput {
	return o.ToFrontEndServiceTypePtrOutputWithContext(context.Background())
}

func (o FrontEndServiceTypeOutput) ToFrontEndServiceTypePtrOutputWithContext(ctx context.Context) FrontEndServiceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrontEndServiceType) *FrontEndServiceType {
		return &v
	}).(FrontEndServiceTypePtrOutput)
}

func (o FrontEndServiceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FrontEndServiceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FrontEndServiceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FrontEndServiceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FrontEndServiceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FrontEndServiceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FrontEndServiceTypePtrOutput struct{ *pulumi.OutputState }

func (FrontEndServiceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontEndServiceType)(nil)).Elem()
}

func (o FrontEndServiceTypePtrOutput) ToFrontEndServiceTypePtrOutput() FrontEndServiceTypePtrOutput {
	return o
}

func (o FrontEndServiceTypePtrOutput) ToFrontEndServiceTypePtrOutputWithContext(ctx context.Context) FrontEndServiceTypePtrOutput {
	return o
}

func (o FrontEndServiceTypePtrOutput) Elem() FrontEndServiceTypeOutput {
	return o.ApplyT(func(v *FrontEndServiceType) FrontEndServiceType {
		if v != nil {
			return *v
		}
		var ret FrontEndServiceType
		return ret
	}).(FrontEndServiceTypeOutput)
}

func (o FrontEndServiceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FrontEndServiceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FrontEndServiceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FrontEndServiceTypeInput is an input type that accepts FrontEndServiceTypeArgs and FrontEndServiceTypeOutput values.
// You can construct a concrete instance of `FrontEndServiceTypeInput` via:
//
//	FrontEndServiceTypeArgs{...}
type FrontEndServiceTypeInput interface {
	pulumi.Input

	ToFrontEndServiceTypeOutput() FrontEndServiceTypeOutput
	ToFrontEndServiceTypeOutputWithContext(context.Context) FrontEndServiceTypeOutput
}

var frontEndServiceTypePtrType = reflect.TypeOf((**FrontEndServiceType)(nil)).Elem()

type FrontEndServiceTypePtrInput interface {
	pulumi.Input

	ToFrontEndServiceTypePtrOutput() FrontEndServiceTypePtrOutput
	ToFrontEndServiceTypePtrOutputWithContext(context.Context) FrontEndServiceTypePtrOutput
}

type frontEndServiceTypePtr string

func FrontEndServiceTypePtr(v string) FrontEndServiceTypePtrInput {
	return (*frontEndServiceTypePtr)(&v)
}

func (*frontEndServiceTypePtr) ElementType() reflect.Type {
	return frontEndServiceTypePtrType
}

func (in *frontEndServiceTypePtr) ToFrontEndServiceTypePtrOutput() FrontEndServiceTypePtrOutput {
	return pulumi.ToOutput(in).(FrontEndServiceTypePtrOutput)
}

func (in *frontEndServiceTypePtr) ToFrontEndServiceTypePtrOutputWithContext(ctx context.Context) FrontEndServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FrontEndServiceTypePtrOutput)
}

// State of FTP / FTPS service
type FtpsState string

const (
	FtpsStateAllAllowed = FtpsState("AllAllowed")
	FtpsStateFtpsOnly   = FtpsState("FtpsOnly")
	FtpsStateDisabled   = FtpsState("Disabled")
)

// Hostname type.
type HostNameType string

const (
	HostNameTypeVerified = HostNameType("Verified")
	HostNameTypeManaged  = HostNameType("Managed")
)

func (HostNameType) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameType)(nil)).Elem()
}

func (e HostNameType) ToHostNameTypeOutput() HostNameTypeOutput {
	return pulumi.ToOutput(e).(HostNameTypeOutput)
}

func (e HostNameType) ToHostNameTypeOutputWithContext(ctx context.Context) HostNameTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HostNameTypeOutput)
}

func (e HostNameType) ToHostNameTypePtrOutput() HostNameTypePtrOutput {
	return e.ToHostNameTypePtrOutputWithContext(context.Background())
}

func (e HostNameType) ToHostNameTypePtrOutputWithContext(ctx context.Context) HostNameTypePtrOutput {
	return HostNameType(e).ToHostNameTypeOutputWithContext(ctx).ToHostNameTypePtrOutputWithContext(ctx)
}

func (e HostNameType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostNameType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostNameType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HostNameType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HostNameTypeOutput struct{ *pulumi.OutputState }

func (HostNameTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameType)(nil)).Elem()
}

func (o HostNameTypeOutput) ToHostNameTypeOutput() HostNameTypeOutput {
	return o
}

func (o HostNameTypeOutput) ToHostNameTypeOutputWithContext(ctx context.Context) HostNameTypeOutput {
	return o
}

func (o HostNameTypeOutput) ToHostNameTypePtrOutput() HostNameTypePtrOutput {
	return o.ToHostNameTypePtrOutputWithContext(context.Background())
}

func (o HostNameTypeOutput) ToHostNameTypePtrOutputWithContext(ctx context.Context) HostNameTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostNameType) *HostNameType {
		return &v
	}).(HostNameTypePtrOutput)
}

func (o HostNameTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HostNameTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostNameType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HostNameTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostNameTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostNameType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HostNameTypePtrOutput struct{ *pulumi.OutputState }

func (HostNameTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNameType)(nil)).Elem()
}

func (o HostNameTypePtrOutput) ToHostNameTypePtrOutput() HostNameTypePtrOutput {
	return o
}

func (o HostNameTypePtrOutput) ToHostNameTypePtrOutputWithContext(ctx context.Context) HostNameTypePtrOutput {
	return o
}

func (o HostNameTypePtrOutput) Elem() HostNameTypeOutput {
	return o.ApplyT(func(v *HostNameType) HostNameType {
		if v != nil {
			return *v
		}
		var ret HostNameType
		return ret
	}).(HostNameTypeOutput)
}

func (o HostNameTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostNameTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HostNameType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HostNameTypeInput is an input type that accepts HostNameTypeArgs and HostNameTypeOutput values.
// You can construct a concrete instance of `HostNameTypeInput` via:
//
//	HostNameTypeArgs{...}
type HostNameTypeInput interface {
	pulumi.Input

	ToHostNameTypeOutput() HostNameTypeOutput
	ToHostNameTypeOutputWithContext(context.Context) HostNameTypeOutput
}

var hostNameTypePtrType = reflect.TypeOf((**HostNameType)(nil)).Elem()

type HostNameTypePtrInput interface {
	pulumi.Input

	ToHostNameTypePtrOutput() HostNameTypePtrOutput
	ToHostNameTypePtrOutputWithContext(context.Context) HostNameTypePtrOutput
}

type hostNameTypePtr string

func HostNameTypePtr(v string) HostNameTypePtrInput {
	return (*hostNameTypePtr)(&v)
}

func (*hostNameTypePtr) ElementType() reflect.Type {
	return hostNameTypePtrType
}

func (in *hostNameTypePtr) ToHostNameTypePtrOutput() HostNameTypePtrOutput {
	return pulumi.ToOutput(in).(HostNameTypePtrOutput)
}

func (in *hostNameTypePtr) ToHostNameTypePtrOutputWithContext(ctx context.Context) HostNameTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HostNameTypePtrOutput)
}

// Indicates whether the hostname is a standard or repository hostname.
type HostType string

const (
	HostTypeStandard   = HostType("Standard")
	HostTypeRepository = HostType("Repository")
)

func (HostType) ElementType() reflect.Type {
	return reflect.TypeOf((*HostType)(nil)).Elem()
}

func (e HostType) ToHostTypeOutput() HostTypeOutput {
	return pulumi.ToOutput(e).(HostTypeOutput)
}

func (e HostType) ToHostTypeOutputWithContext(ctx context.Context) HostTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HostTypeOutput)
}

func (e HostType) ToHostTypePtrOutput() HostTypePtrOutput {
	return e.ToHostTypePtrOutputWithContext(context.Background())
}

func (e HostType) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return HostType(e).ToHostTypeOutputWithContext(ctx).ToHostTypePtrOutputWithContext(ctx)
}

func (e HostType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HostType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HostTypeOutput struct{ *pulumi.OutputState }

func (HostTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostType)(nil)).Elem()
}

func (o HostTypeOutput) ToHostTypeOutput() HostTypeOutput {
	return o
}

func (o HostTypeOutput) ToHostTypeOutputWithContext(ctx context.Context) HostTypeOutput {
	return o
}

func (o HostTypeOutput) ToHostTypePtrOutput() HostTypePtrOutput {
	return o.ToHostTypePtrOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostType) *HostType {
		return &v
	}).(HostTypePtrOutput)
}

func (o HostTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HostTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HostTypePtrOutput struct{ *pulumi.OutputState }

func (HostTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostType)(nil)).Elem()
}

func (o HostTypePtrOutput) ToHostTypePtrOutput() HostTypePtrOutput {
	return o
}

func (o HostTypePtrOutput) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return o
}

func (o HostTypePtrOutput) Elem() HostTypeOutput {
	return o.ApplyT(func(v *HostType) HostType {
		if v != nil {
			return *v
		}
		var ret HostType
		return ret
	}).(HostTypeOutput)
}

func (o HostTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HostType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HostTypeInput is an input type that accepts HostTypeArgs and HostTypeOutput values.
// You can construct a concrete instance of `HostTypeInput` via:
//
//	HostTypeArgs{...}
type HostTypeInput interface {
	pulumi.Input

	ToHostTypeOutput() HostTypeOutput
	ToHostTypeOutputWithContext(context.Context) HostTypeOutput
}

var hostTypePtrType = reflect.TypeOf((**HostType)(nil)).Elem()

type HostTypePtrInput interface {
	pulumi.Input

	ToHostTypePtrOutput() HostTypePtrOutput
	ToHostTypePtrOutputWithContext(context.Context) HostTypePtrOutput
}

type hostTypePtr string

func HostTypePtr(v string) HostTypePtrInput {
	return (*hostTypePtr)(&v)
}

func (*hostTypePtr) ElementType() reflect.Type {
	return hostTypePtrType
}

func (in *hostTypePtr) ToHostTypePtrOutput() HostTypePtrOutput {
	return pulumi.ToOutput(in).(HostTypePtrOutput)
}

func (in *hostTypePtr) ToHostTypePtrOutputWithContext(ctx context.Context) HostTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HostTypePtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
type IpFilterTag string

const (
	IpFilterTagDefault    = IpFilterTag("Default")
	IpFilterTagXffProxy   = IpFilterTag("XffProxy")
	IpFilterTagServiceTag = IpFilterTag("ServiceTag")
)

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
type LoadBalancingMode string

const (
	LoadBalancingModeNone            = LoadBalancingMode("None")
	LoadBalancingModeWeb             = LoadBalancingMode("Web")
	LoadBalancingModePublishing      = LoadBalancingMode("Publishing")
	LoadBalancingMode_Web_Publishing = LoadBalancingMode("Web, Publishing")
)

// Log level.
type LogLevel string

const (
	LogLevelOff         = LogLevel("Off")
	LogLevelVerbose     = LogLevel("Verbose")
	LogLevelInformation = LogLevel("Information")
	LogLevelWarning     = LogLevel("Warning")
	LogLevelError       = LogLevel("Error")
)

func (LogLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*LogLevel)(nil)).Elem()
}

func (e LogLevel) ToLogLevelOutput() LogLevelOutput {
	return pulumi.ToOutput(e).(LogLevelOutput)
}

func (e LogLevel) ToLogLevelOutputWithContext(ctx context.Context) LogLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogLevelOutput)
}

func (e LogLevel) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return e.ToLogLevelPtrOutputWithContext(context.Background())
}

func (e LogLevel) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return LogLevel(e).ToLogLevelOutputWithContext(ctx).ToLogLevelPtrOutputWithContext(ctx)
}

func (e LogLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogLevelOutput struct{ *pulumi.OutputState }

func (LogLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogLevel)(nil)).Elem()
}

func (o LogLevelOutput) ToLogLevelOutput() LogLevelOutput {
	return o
}

func (o LogLevelOutput) ToLogLevelOutputWithContext(ctx context.Context) LogLevelOutput {
	return o
}

func (o LogLevelOutput) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return o.ToLogLevelPtrOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogLevel) *LogLevel {
		return &v
	}).(LogLevelPtrOutput)
}

func (o LogLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogLevelPtrOutput struct{ *pulumi.OutputState }

func (LogLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogLevel)(nil)).Elem()
}

func (o LogLevelPtrOutput) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return o
}

func (o LogLevelPtrOutput) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return o
}

func (o LogLevelPtrOutput) Elem() LogLevelOutput {
	return o.ApplyT(func(v *LogLevel) LogLevel {
		if v != nil {
			return *v
		}
		var ret LogLevel
		return ret
	}).(LogLevelOutput)
}

func (o LogLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogLevelInput is an input type that accepts LogLevelArgs and LogLevelOutput values.
// You can construct a concrete instance of `LogLevelInput` via:
//
//	LogLevelArgs{...}
type LogLevelInput interface {
	pulumi.Input

	ToLogLevelOutput() LogLevelOutput
	ToLogLevelOutputWithContext(context.Context) LogLevelOutput
}

var logLevelPtrType = reflect.TypeOf((**LogLevel)(nil)).Elem()

type LogLevelPtrInput interface {
	pulumi.Input

	ToLogLevelPtrOutput() LogLevelPtrOutput
	ToLogLevelPtrOutputWithContext(context.Context) LogLevelPtrOutput
}

type logLevelPtr string

func LogLevelPtr(v string) LogLevelPtrInput {
	return (*logLevelPtr)(&v)
}

func (*logLevelPtr) ElementType() reflect.Type {
	return logLevelPtrType
}

func (in *logLevelPtr) ToLogLevelPtrOutput() LogLevelPtrOutput {
	return pulumi.ToOutput(in).(LogLevelPtrOutput)
}

func (in *logLevelPtr) ToLogLevelPtrOutputWithContext(ctx context.Context) LogLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogLevelPtrOutput)
}

// Managed pipeline mode.
type ManagedPipelineMode string

const (
	ManagedPipelineModeIntegrated = ManagedPipelineMode("Integrated")
	ManagedPipelineModeClassic    = ManagedPipelineMode("Classic")
)

func (ManagedPipelineMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedPipelineMode)(nil)).Elem()
}

func (e ManagedPipelineMode) ToManagedPipelineModeOutput() ManagedPipelineModeOutput {
	return pulumi.ToOutput(e).(ManagedPipelineModeOutput)
}

func (e ManagedPipelineMode) ToManagedPipelineModeOutputWithContext(ctx context.Context) ManagedPipelineModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedPipelineModeOutput)
}

func (e ManagedPipelineMode) ToManagedPipelineModePtrOutput() ManagedPipelineModePtrOutput {
	return e.ToManagedPipelineModePtrOutputWithContext(context.Background())
}

func (e ManagedPipelineMode) ToManagedPipelineModePtrOutputWithContext(ctx context.Context) ManagedPipelineModePtrOutput {
	return ManagedPipelineMode(e).ToManagedPipelineModeOutputWithContext(ctx).ToManagedPipelineModePtrOutputWithContext(ctx)
}

func (e ManagedPipelineMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedPipelineMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedPipelineMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedPipelineMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedPipelineModeOutput struct{ *pulumi.OutputState }

func (ManagedPipelineModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedPipelineMode)(nil)).Elem()
}

func (o ManagedPipelineModeOutput) ToManagedPipelineModeOutput() ManagedPipelineModeOutput {
	return o
}

func (o ManagedPipelineModeOutput) ToManagedPipelineModeOutputWithContext(ctx context.Context) ManagedPipelineModeOutput {
	return o
}

func (o ManagedPipelineModeOutput) ToManagedPipelineModePtrOutput() ManagedPipelineModePtrOutput {
	return o.ToManagedPipelineModePtrOutputWithContext(context.Background())
}

func (o ManagedPipelineModeOutput) ToManagedPipelineModePtrOutputWithContext(ctx context.Context) ManagedPipelineModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedPipelineMode) *ManagedPipelineMode {
		return &v
	}).(ManagedPipelineModePtrOutput)
}

func (o ManagedPipelineModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedPipelineModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedPipelineMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedPipelineModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedPipelineModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedPipelineMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedPipelineModePtrOutput struct{ *pulumi.OutputState }

func (ManagedPipelineModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedPipelineMode)(nil)).Elem()
}

func (o ManagedPipelineModePtrOutput) ToManagedPipelineModePtrOutput() ManagedPipelineModePtrOutput {
	return o
}

func (o ManagedPipelineModePtrOutput) ToManagedPipelineModePtrOutputWithContext(ctx context.Context) ManagedPipelineModePtrOutput {
	return o
}

func (o ManagedPipelineModePtrOutput) Elem() ManagedPipelineModeOutput {
	return o.ApplyT(func(v *ManagedPipelineMode) ManagedPipelineMode {
		if v != nil {
			return *v
		}
		var ret ManagedPipelineMode
		return ret
	}).(ManagedPipelineModeOutput)
}

func (o ManagedPipelineModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedPipelineModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedPipelineMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedPipelineModeInput is an input type that accepts ManagedPipelineModeArgs and ManagedPipelineModeOutput values.
// You can construct a concrete instance of `ManagedPipelineModeInput` via:
//
//	ManagedPipelineModeArgs{...}
type ManagedPipelineModeInput interface {
	pulumi.Input

	ToManagedPipelineModeOutput() ManagedPipelineModeOutput
	ToManagedPipelineModeOutputWithContext(context.Context) ManagedPipelineModeOutput
}

var managedPipelineModePtrType = reflect.TypeOf((**ManagedPipelineMode)(nil)).Elem()

type ManagedPipelineModePtrInput interface {
	pulumi.Input

	ToManagedPipelineModePtrOutput() ManagedPipelineModePtrOutput
	ToManagedPipelineModePtrOutputWithContext(context.Context) ManagedPipelineModePtrOutput
}

type managedPipelineModePtr string

func ManagedPipelineModePtr(v string) ManagedPipelineModePtrInput {
	return (*managedPipelineModePtr)(&v)
}

func (*managedPipelineModePtr) ElementType() reflect.Type {
	return managedPipelineModePtrType
}

func (in *managedPipelineModePtr) ToManagedPipelineModePtrOutput() ManagedPipelineModePtrOutput {
	return pulumi.ToOutput(in).(ManagedPipelineModePtrOutput)
}

func (in *managedPipelineModePtr) ToManagedPipelineModePtrOutputWithContext(ctx context.Context) ManagedPipelineModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedPipelineModePtrOutput)
}

// Type of managed service identity.
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts ManagedServiceIdentityTypeArgs and ManagedServiceIdentityTypeOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityTypeInput` via:
//
//	ManagedServiceIdentityTypeArgs{...}
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Public Certificate Location
type PublicCertificateLocation string

const (
	PublicCertificateLocationCurrentUserMy  = PublicCertificateLocation("CurrentUserMy")
	PublicCertificateLocationLocalMachineMy = PublicCertificateLocation("LocalMachineMy")
	PublicCertificateLocationUnknown        = PublicCertificateLocation("Unknown")
)

func (PublicCertificateLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicCertificateLocation)(nil)).Elem()
}

func (e PublicCertificateLocation) ToPublicCertificateLocationOutput() PublicCertificateLocationOutput {
	return pulumi.ToOutput(e).(PublicCertificateLocationOutput)
}

func (e PublicCertificateLocation) ToPublicCertificateLocationOutputWithContext(ctx context.Context) PublicCertificateLocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicCertificateLocationOutput)
}

func (e PublicCertificateLocation) ToPublicCertificateLocationPtrOutput() PublicCertificateLocationPtrOutput {
	return e.ToPublicCertificateLocationPtrOutputWithContext(context.Background())
}

func (e PublicCertificateLocation) ToPublicCertificateLocationPtrOutputWithContext(ctx context.Context) PublicCertificateLocationPtrOutput {
	return PublicCertificateLocation(e).ToPublicCertificateLocationOutputWithContext(ctx).ToPublicCertificateLocationPtrOutputWithContext(ctx)
}

func (e PublicCertificateLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicCertificateLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicCertificateLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicCertificateLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicCertificateLocationOutput struct{ *pulumi.OutputState }

func (PublicCertificateLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicCertificateLocation)(nil)).Elem()
}

func (o PublicCertificateLocationOutput) ToPublicCertificateLocationOutput() PublicCertificateLocationOutput {
	return o
}

func (o PublicCertificateLocationOutput) ToPublicCertificateLocationOutputWithContext(ctx context.Context) PublicCertificateLocationOutput {
	return o
}

func (o PublicCertificateLocationOutput) ToPublicCertificateLocationPtrOutput() PublicCertificateLocationPtrOutput {
	return o.ToPublicCertificateLocationPtrOutputWithContext(context.Background())
}

func (o PublicCertificateLocationOutput) ToPublicCertificateLocationPtrOutputWithContext(ctx context.Context) PublicCertificateLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicCertificateLocation) *PublicCertificateLocation {
		return &v
	}).(PublicCertificateLocationPtrOutput)
}

func (o PublicCertificateLocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicCertificateLocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicCertificateLocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicCertificateLocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicCertificateLocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicCertificateLocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicCertificateLocationPtrOutput struct{ *pulumi.OutputState }

func (PublicCertificateLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicCertificateLocation)(nil)).Elem()
}

func (o PublicCertificateLocationPtrOutput) ToPublicCertificateLocationPtrOutput() PublicCertificateLocationPtrOutput {
	return o
}

func (o PublicCertificateLocationPtrOutput) ToPublicCertificateLocationPtrOutputWithContext(ctx context.Context) PublicCertificateLocationPtrOutput {
	return o
}

func (o PublicCertificateLocationPtrOutput) Elem() PublicCertificateLocationOutput {
	return o.ApplyT(func(v *PublicCertificateLocation) PublicCertificateLocation {
		if v != nil {
			return *v
		}
		var ret PublicCertificateLocation
		return ret
	}).(PublicCertificateLocationOutput)
}

func (o PublicCertificateLocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicCertificateLocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicCertificateLocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicCertificateLocationInput is an input type that accepts PublicCertificateLocationArgs and PublicCertificateLocationOutput values.
// You can construct a concrete instance of `PublicCertificateLocationInput` via:
//
//	PublicCertificateLocationArgs{...}
type PublicCertificateLocationInput interface {
	pulumi.Input

	ToPublicCertificateLocationOutput() PublicCertificateLocationOutput
	ToPublicCertificateLocationOutputWithContext(context.Context) PublicCertificateLocationOutput
}

var publicCertificateLocationPtrType = reflect.TypeOf((**PublicCertificateLocation)(nil)).Elem()

type PublicCertificateLocationPtrInput interface {
	pulumi.Input

	ToPublicCertificateLocationPtrOutput() PublicCertificateLocationPtrOutput
	ToPublicCertificateLocationPtrOutputWithContext(context.Context) PublicCertificateLocationPtrOutput
}

type publicCertificateLocationPtr string

func PublicCertificateLocationPtr(v string) PublicCertificateLocationPtrInput {
	return (*publicCertificateLocationPtr)(&v)
}

func (*publicCertificateLocationPtr) ElementType() reflect.Type {
	return publicCertificateLocationPtrType
}

func (in *publicCertificateLocationPtr) ToPublicCertificateLocationPtrOutput() PublicCertificateLocationPtrOutput {
	return pulumi.ToOutput(in).(PublicCertificateLocationPtrOutput)
}

func (in *publicCertificateLocationPtr) ToPublicCertificateLocationPtrOutputWithContext(ctx context.Context) PublicCertificateLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicCertificateLocationPtrOutput)
}

// Site redundancy mode
type RedundancyMode string

const (
	RedundancyModeNone         = RedundancyMode("None")
	RedundancyModeManual       = RedundancyMode("Manual")
	RedundancyModeFailover     = RedundancyMode("Failover")
	RedundancyModeActiveActive = RedundancyMode("ActiveActive")
	RedundancyModeGeoRedundant = RedundancyMode("GeoRedundant")
)

func (RedundancyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RedundancyMode)(nil)).Elem()
}

func (e RedundancyMode) ToRedundancyModeOutput() RedundancyModeOutput {
	return pulumi.ToOutput(e).(RedundancyModeOutput)
}

func (e RedundancyMode) ToRedundancyModeOutputWithContext(ctx context.Context) RedundancyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RedundancyModeOutput)
}

func (e RedundancyMode) ToRedundancyModePtrOutput() RedundancyModePtrOutput {
	return e.ToRedundancyModePtrOutputWithContext(context.Background())
}

func (e RedundancyMode) ToRedundancyModePtrOutputWithContext(ctx context.Context) RedundancyModePtrOutput {
	return RedundancyMode(e).ToRedundancyModeOutputWithContext(ctx).ToRedundancyModePtrOutputWithContext(ctx)
}

func (e RedundancyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedundancyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RedundancyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RedundancyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RedundancyModeOutput struct{ *pulumi.OutputState }

func (RedundancyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedundancyMode)(nil)).Elem()
}

func (o RedundancyModeOutput) ToRedundancyModeOutput() RedundancyModeOutput {
	return o
}

func (o RedundancyModeOutput) ToRedundancyModeOutputWithContext(ctx context.Context) RedundancyModeOutput {
	return o
}

func (o RedundancyModeOutput) ToRedundancyModePtrOutput() RedundancyModePtrOutput {
	return o.ToRedundancyModePtrOutputWithContext(context.Background())
}

func (o RedundancyModeOutput) ToRedundancyModePtrOutputWithContext(ctx context.Context) RedundancyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedundancyMode) *RedundancyMode {
		return &v
	}).(RedundancyModePtrOutput)
}

func (o RedundancyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RedundancyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedundancyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RedundancyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RedundancyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RedundancyModePtrOutput struct{ *pulumi.OutputState }

func (RedundancyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedundancyMode)(nil)).Elem()
}

func (o RedundancyModePtrOutput) ToRedundancyModePtrOutput() RedundancyModePtrOutput {
	return o
}

func (o RedundancyModePtrOutput) ToRedundancyModePtrOutputWithContext(ctx context.Context) RedundancyModePtrOutput {
	return o
}

func (o RedundancyModePtrOutput) Elem() RedundancyModeOutput {
	return o.ApplyT(func(v *RedundancyMode) RedundancyMode {
		if v != nil {
			return *v
		}
		var ret RedundancyMode
		return ret
	}).(RedundancyModeOutput)
}

func (o RedundancyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RedundancyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RedundancyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RedundancyModeInput is an input type that accepts RedundancyModeArgs and RedundancyModeOutput values.
// You can construct a concrete instance of `RedundancyModeInput` via:
//
//	RedundancyModeArgs{...}
type RedundancyModeInput interface {
	pulumi.Input

	ToRedundancyModeOutput() RedundancyModeOutput
	ToRedundancyModeOutputWithContext(context.Context) RedundancyModeOutput
}

var redundancyModePtrType = reflect.TypeOf((**RedundancyMode)(nil)).Elem()

type RedundancyModePtrInput interface {
	pulumi.Input

	ToRedundancyModePtrOutput() RedundancyModePtrOutput
	ToRedundancyModePtrOutputWithContext(context.Context) RedundancyModePtrOutput
}

type redundancyModePtr string

func RedundancyModePtr(v string) RedundancyModePtrInput {
	return (*redundancyModePtr)(&v)
}

func (*redundancyModePtr) ElementType() reflect.Type {
	return redundancyModePtrType
}

func (in *redundancyModePtr) ToRedundancyModePtrOutput() RedundancyModePtrOutput {
	return pulumi.ToOutput(in).(RedundancyModePtrOutput)
}

func (in *redundancyModePtr) ToRedundancyModePtrOutputWithContext(ctx context.Context) RedundancyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RedundancyModePtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
type RouteType string

const (
	RouteTypeDEFAULT   = RouteType("DEFAULT")
	RouteTypeINHERITED = RouteType("INHERITED")
	RouteTypeSTATIC    = RouteType("STATIC")
)

// SCM type.
type ScmType string

const (
	ScmTypeNone         = ScmType("None")
	ScmTypeDropbox      = ScmType("Dropbox")
	ScmTypeTfs          = ScmType("Tfs")
	ScmTypeLocalGit     = ScmType("LocalGit")
	ScmTypeGitHub       = ScmType("GitHub")
	ScmTypeCodePlexGit  = ScmType("CodePlexGit")
	ScmTypeCodePlexHg   = ScmType("CodePlexHg")
	ScmTypeBitbucketGit = ScmType("BitbucketGit")
	ScmTypeBitbucketHg  = ScmType("BitbucketHg")
	ScmTypeExternalGit  = ScmType("ExternalGit")
	ScmTypeExternalHg   = ScmType("ExternalHg")
	ScmTypeOneDrive     = ScmType("OneDrive")
	ScmTypeVSO          = ScmType("VSO")
	ScmTypeVSTSRM       = ScmType("VSTSRM")
)

// Site load balancing.
type SiteLoadBalancing string

const (
	SiteLoadBalancingWeightedRoundRobin   = SiteLoadBalancing("WeightedRoundRobin")
	SiteLoadBalancingLeastRequests        = SiteLoadBalancing("LeastRequests")
	SiteLoadBalancingLeastResponseTime    = SiteLoadBalancing("LeastResponseTime")
	SiteLoadBalancingWeightedTotalTraffic = SiteLoadBalancing("WeightedTotalTraffic")
	SiteLoadBalancingRequestHash          = SiteLoadBalancing("RequestHash")
	SiteLoadBalancingPerSiteRoundRobin    = SiteLoadBalancing("PerSiteRoundRobin")
)

func (SiteLoadBalancing) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLoadBalancing)(nil)).Elem()
}

func (e SiteLoadBalancing) ToSiteLoadBalancingOutput() SiteLoadBalancingOutput {
	return pulumi.ToOutput(e).(SiteLoadBalancingOutput)
}

func (e SiteLoadBalancing) ToSiteLoadBalancingOutputWithContext(ctx context.Context) SiteLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SiteLoadBalancingOutput)
}

func (e SiteLoadBalancing) ToSiteLoadBalancingPtrOutput() SiteLoadBalancingPtrOutput {
	return e.ToSiteLoadBalancingPtrOutputWithContext(context.Background())
}

func (e SiteLoadBalancing) ToSiteLoadBalancingPtrOutputWithContext(ctx context.Context) SiteLoadBalancingPtrOutput {
	return SiteLoadBalancing(e).ToSiteLoadBalancingOutputWithContext(ctx).ToSiteLoadBalancingPtrOutputWithContext(ctx)
}

func (e SiteLoadBalancing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SiteLoadBalancing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SiteLoadBalancing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SiteLoadBalancing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SiteLoadBalancingOutput struct{ *pulumi.OutputState }

func (SiteLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLoadBalancing)(nil)).Elem()
}

func (o SiteLoadBalancingOutput) ToSiteLoadBalancingOutput() SiteLoadBalancingOutput {
	return o
}

func (o SiteLoadBalancingOutput) ToSiteLoadBalancingOutputWithContext(ctx context.Context) SiteLoadBalancingOutput {
	return o
}

func (o SiteLoadBalancingOutput) ToSiteLoadBalancingPtrOutput() SiteLoadBalancingPtrOutput {
	return o.ToSiteLoadBalancingPtrOutputWithContext(context.Background())
}

func (o SiteLoadBalancingOutput) ToSiteLoadBalancingPtrOutputWithContext(ctx context.Context) SiteLoadBalancingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteLoadBalancing) *SiteLoadBalancing {
		return &v
	}).(SiteLoadBalancingPtrOutput)
}

func (o SiteLoadBalancingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SiteLoadBalancingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SiteLoadBalancing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SiteLoadBalancingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SiteLoadBalancingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SiteLoadBalancing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SiteLoadBalancingPtrOutput struct{ *pulumi.OutputState }

func (SiteLoadBalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLoadBalancing)(nil)).Elem()
}

func (o SiteLoadBalancingPtrOutput) ToSiteLoadBalancingPtrOutput() SiteLoadBalancingPtrOutput {
	return o
}

func (o SiteLoadBalancingPtrOutput) ToSiteLoadBalancingPtrOutputWithContext(ctx context.Context) SiteLoadBalancingPtrOutput {
	return o
}

func (o SiteLoadBalancingPtrOutput) Elem() SiteLoadBalancingOutput {
	return o.ApplyT(func(v *SiteLoadBalancing) SiteLoadBalancing {
		if v != nil {
			return *v
		}
		var ret SiteLoadBalancing
		return ret
	}).(SiteLoadBalancingOutput)
}

func (o SiteLoadBalancingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SiteLoadBalancingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SiteLoadBalancing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SiteLoadBalancingInput is an input type that accepts SiteLoadBalancingArgs and SiteLoadBalancingOutput values.
// You can construct a concrete instance of `SiteLoadBalancingInput` via:
//
//	SiteLoadBalancingArgs{...}
type SiteLoadBalancingInput interface {
	pulumi.Input

	ToSiteLoadBalancingOutput() SiteLoadBalancingOutput
	ToSiteLoadBalancingOutputWithContext(context.Context) SiteLoadBalancingOutput
}

var siteLoadBalancingPtrType = reflect.TypeOf((**SiteLoadBalancing)(nil)).Elem()

type SiteLoadBalancingPtrInput interface {
	pulumi.Input

	ToSiteLoadBalancingPtrOutput() SiteLoadBalancingPtrOutput
	ToSiteLoadBalancingPtrOutputWithContext(context.Context) SiteLoadBalancingPtrOutput
}

type siteLoadBalancingPtr string

func SiteLoadBalancingPtr(v string) SiteLoadBalancingPtrInput {
	return (*siteLoadBalancingPtr)(&v)
}

func (*siteLoadBalancingPtr) ElementType() reflect.Type {
	return siteLoadBalancingPtrType
}

func (in *siteLoadBalancingPtr) ToSiteLoadBalancingPtrOutput() SiteLoadBalancingPtrOutput {
	return pulumi.ToOutput(in).(SiteLoadBalancingPtrOutput)
}

func (in *siteLoadBalancingPtr) ToSiteLoadBalancingPtrOutputWithContext(ctx context.Context) SiteLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SiteLoadBalancingPtrOutput)
}

// SSL type.
type SslState string

const (
	SslStateDisabled       = SslState("Disabled")
	SslStateSniEnabled     = SslState("SniEnabled")
	SslStateIpBasedEnabled = SslState("IpBasedEnabled")
)

func (SslState) ElementType() reflect.Type {
	return reflect.TypeOf((*SslState)(nil)).Elem()
}

func (e SslState) ToSslStateOutput() SslStateOutput {
	return pulumi.ToOutput(e).(SslStateOutput)
}

func (e SslState) ToSslStateOutputWithContext(ctx context.Context) SslStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslStateOutput)
}

func (e SslState) ToSslStatePtrOutput() SslStatePtrOutput {
	return e.ToSslStatePtrOutputWithContext(context.Background())
}

func (e SslState) ToSslStatePtrOutputWithContext(ctx context.Context) SslStatePtrOutput {
	return SslState(e).ToSslStateOutputWithContext(ctx).ToSslStatePtrOutputWithContext(ctx)
}

func (e SslState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslStateOutput struct{ *pulumi.OutputState }

func (SslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslState)(nil)).Elem()
}

func (o SslStateOutput) ToSslStateOutput() SslStateOutput {
	return o
}

func (o SslStateOutput) ToSslStateOutputWithContext(ctx context.Context) SslStateOutput {
	return o
}

func (o SslStateOutput) ToSslStatePtrOutput() SslStatePtrOutput {
	return o.ToSslStatePtrOutputWithContext(context.Background())
}

func (o SslStateOutput) ToSslStatePtrOutputWithContext(ctx context.Context) SslStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslState) *SslState {
		return &v
	}).(SslStatePtrOutput)
}

func (o SslStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslStatePtrOutput struct{ *pulumi.OutputState }

func (SslStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslState)(nil)).Elem()
}

func (o SslStatePtrOutput) ToSslStatePtrOutput() SslStatePtrOutput {
	return o
}

func (o SslStatePtrOutput) ToSslStatePtrOutputWithContext(ctx context.Context) SslStatePtrOutput {
	return o
}

func (o SslStatePtrOutput) Elem() SslStateOutput {
	return o.ApplyT(func(v *SslState) SslState {
		if v != nil {
			return *v
		}
		var ret SslState
		return ret
	}).(SslStateOutput)
}

func (o SslStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslStateInput is an input type that accepts SslStateArgs and SslStateOutput values.
// You can construct a concrete instance of `SslStateInput` via:
//
//	SslStateArgs{...}
type SslStateInput interface {
	pulumi.Input

	ToSslStateOutput() SslStateOutput
	ToSslStateOutputWithContext(context.Context) SslStateOutput
}

var sslStatePtrType = reflect.TypeOf((**SslState)(nil)).Elem()

type SslStatePtrInput interface {
	pulumi.Input

	ToSslStatePtrOutput() SslStatePtrOutput
	ToSslStatePtrOutputWithContext(context.Context) SslStatePtrOutput
}

type sslStatePtr string

func SslStatePtr(v string) SslStatePtrInput {
	return (*sslStatePtr)(&v)
}

func (*sslStatePtr) ElementType() reflect.Type {
	return sslStatePtrType
}

func (in *sslStatePtr) ToSslStatePtrOutput() SslStatePtrOutput {
	return pulumi.ToOutput(in).(SslStatePtrOutput)
}

func (in *sslStatePtr) ToSslStatePtrOutputWithContext(ctx context.Context) SslStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslStatePtrOutput)
}

// State indicating whether staging environments are allowed or not allowed for a static web app.
type StagingEnvironmentPolicy string

const (
	StagingEnvironmentPolicyEnabled  = StagingEnvironmentPolicy("Enabled")
	StagingEnvironmentPolicyDisabled = StagingEnvironmentPolicy("Disabled")
)

func (StagingEnvironmentPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingEnvironmentPolicy)(nil)).Elem()
}

func (e StagingEnvironmentPolicy) ToStagingEnvironmentPolicyOutput() StagingEnvironmentPolicyOutput {
	return pulumi.ToOutput(e).(StagingEnvironmentPolicyOutput)
}

func (e StagingEnvironmentPolicy) ToStagingEnvironmentPolicyOutputWithContext(ctx context.Context) StagingEnvironmentPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StagingEnvironmentPolicyOutput)
}

func (e StagingEnvironmentPolicy) ToStagingEnvironmentPolicyPtrOutput() StagingEnvironmentPolicyPtrOutput {
	return e.ToStagingEnvironmentPolicyPtrOutputWithContext(context.Background())
}

func (e StagingEnvironmentPolicy) ToStagingEnvironmentPolicyPtrOutputWithContext(ctx context.Context) StagingEnvironmentPolicyPtrOutput {
	return StagingEnvironmentPolicy(e).ToStagingEnvironmentPolicyOutputWithContext(ctx).ToStagingEnvironmentPolicyPtrOutputWithContext(ctx)
}

func (e StagingEnvironmentPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StagingEnvironmentPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StagingEnvironmentPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StagingEnvironmentPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StagingEnvironmentPolicyOutput struct{ *pulumi.OutputState }

func (StagingEnvironmentPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StagingEnvironmentPolicy)(nil)).Elem()
}

func (o StagingEnvironmentPolicyOutput) ToStagingEnvironmentPolicyOutput() StagingEnvironmentPolicyOutput {
	return o
}

func (o StagingEnvironmentPolicyOutput) ToStagingEnvironmentPolicyOutputWithContext(ctx context.Context) StagingEnvironmentPolicyOutput {
	return o
}

func (o StagingEnvironmentPolicyOutput) ToStagingEnvironmentPolicyPtrOutput() StagingEnvironmentPolicyPtrOutput {
	return o.ToStagingEnvironmentPolicyPtrOutputWithContext(context.Background())
}

func (o StagingEnvironmentPolicyOutput) ToStagingEnvironmentPolicyPtrOutputWithContext(ctx context.Context) StagingEnvironmentPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StagingEnvironmentPolicy) *StagingEnvironmentPolicy {
		return &v
	}).(StagingEnvironmentPolicyPtrOutput)
}

func (o StagingEnvironmentPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StagingEnvironmentPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StagingEnvironmentPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StagingEnvironmentPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StagingEnvironmentPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StagingEnvironmentPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StagingEnvironmentPolicyPtrOutput struct{ *pulumi.OutputState }

func (StagingEnvironmentPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StagingEnvironmentPolicy)(nil)).Elem()
}

func (o StagingEnvironmentPolicyPtrOutput) ToStagingEnvironmentPolicyPtrOutput() StagingEnvironmentPolicyPtrOutput {
	return o
}

func (o StagingEnvironmentPolicyPtrOutput) ToStagingEnvironmentPolicyPtrOutputWithContext(ctx context.Context) StagingEnvironmentPolicyPtrOutput {
	return o
}

func (o StagingEnvironmentPolicyPtrOutput) Elem() StagingEnvironmentPolicyOutput {
	return o.ApplyT(func(v *StagingEnvironmentPolicy) StagingEnvironmentPolicy {
		if v != nil {
			return *v
		}
		var ret StagingEnvironmentPolicy
		return ret
	}).(StagingEnvironmentPolicyOutput)
}

func (o StagingEnvironmentPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StagingEnvironmentPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StagingEnvironmentPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StagingEnvironmentPolicyInput is an input type that accepts StagingEnvironmentPolicyArgs and StagingEnvironmentPolicyOutput values.
// You can construct a concrete instance of `StagingEnvironmentPolicyInput` via:
//
//	StagingEnvironmentPolicyArgs{...}
type StagingEnvironmentPolicyInput interface {
	pulumi.Input

	ToStagingEnvironmentPolicyOutput() StagingEnvironmentPolicyOutput
	ToStagingEnvironmentPolicyOutputWithContext(context.Context) StagingEnvironmentPolicyOutput
}

var stagingEnvironmentPolicyPtrType = reflect.TypeOf((**StagingEnvironmentPolicy)(nil)).Elem()

type StagingEnvironmentPolicyPtrInput interface {
	pulumi.Input

	ToStagingEnvironmentPolicyPtrOutput() StagingEnvironmentPolicyPtrOutput
	ToStagingEnvironmentPolicyPtrOutputWithContext(context.Context) StagingEnvironmentPolicyPtrOutput
}

type stagingEnvironmentPolicyPtr string

func StagingEnvironmentPolicyPtr(v string) StagingEnvironmentPolicyPtrInput {
	return (*stagingEnvironmentPolicyPtr)(&v)
}

func (*stagingEnvironmentPolicyPtr) ElementType() reflect.Type {
	return stagingEnvironmentPolicyPtrType
}

func (in *stagingEnvironmentPolicyPtr) ToStagingEnvironmentPolicyPtrOutput() StagingEnvironmentPolicyPtrOutput {
	return pulumi.ToOutput(in).(StagingEnvironmentPolicyPtrOutput)
}

func (in *stagingEnvironmentPolicyPtr) ToStagingEnvironmentPolicyPtrOutputWithContext(ctx context.Context) StagingEnvironmentPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StagingEnvironmentPolicyPtrOutput)
}

type StorageType string

const (
	StorageTypeLocalNode         = StorageType("LocalNode")
	StorageTypeNetworkFileSystem = StorageType("NetworkFileSystem")
)

func (StorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageType)(nil)).Elem()
}

func (e StorageType) ToStorageTypeOutput() StorageTypeOutput {
	return pulumi.ToOutput(e).(StorageTypeOutput)
}

func (e StorageType) ToStorageTypeOutputWithContext(ctx context.Context) StorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageTypeOutput)
}

func (e StorageType) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return e.ToStorageTypePtrOutputWithContext(context.Background())
}

func (e StorageType) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return StorageType(e).ToStorageTypeOutputWithContext(ctx).ToStorageTypePtrOutputWithContext(ctx)
}

func (e StorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageTypeOutput struct{ *pulumi.OutputState }

func (StorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageType)(nil)).Elem()
}

func (o StorageTypeOutput) ToStorageTypeOutput() StorageTypeOutput {
	return o
}

func (o StorageTypeOutput) ToStorageTypeOutputWithContext(ctx context.Context) StorageTypeOutput {
	return o
}

func (o StorageTypeOutput) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return o.ToStorageTypePtrOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageType) *StorageType {
		return &v
	}).(StorageTypePtrOutput)
}

func (o StorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageTypePtrOutput struct{ *pulumi.OutputState }

func (StorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageType)(nil)).Elem()
}

func (o StorageTypePtrOutput) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return o
}

func (o StorageTypePtrOutput) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return o
}

func (o StorageTypePtrOutput) Elem() StorageTypeOutput {
	return o.ApplyT(func(v *StorageType) StorageType {
		if v != nil {
			return *v
		}
		var ret StorageType
		return ret
	}).(StorageTypeOutput)
}

func (o StorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageTypeInput is an input type that accepts StorageTypeArgs and StorageTypeOutput values.
// You can construct a concrete instance of `StorageTypeInput` via:
//
//	StorageTypeArgs{...}
type StorageTypeInput interface {
	pulumi.Input

	ToStorageTypeOutput() StorageTypeOutput
	ToStorageTypeOutputWithContext(context.Context) StorageTypeOutput
}

var storageTypePtrType = reflect.TypeOf((**StorageType)(nil)).Elem()

type StorageTypePtrInput interface {
	pulumi.Input

	ToStorageTypePtrOutput() StorageTypePtrOutput
	ToStorageTypePtrOutputWithContext(context.Context) StorageTypePtrOutput
}

type storageTypePtr string

func StorageTypePtr(v string) StorageTypePtrInput {
	return (*storageTypePtr)(&v)
}

func (*storageTypePtr) ElementType() reflect.Type {
	return storageTypePtrType
}

func (in *storageTypePtr) ToStorageTypePtrOutput() StorageTypePtrOutput {
	return pulumi.ToOutput(in).(StorageTypePtrOutput)
}

func (in *storageTypePtr) ToStorageTypePtrOutputWithContext(ctx context.Context) StorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageTypePtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
type SupportedTlsVersions string

const (
	SupportedTlsVersions_1_0 = SupportedTlsVersions("1.0")
	SupportedTlsVersions_1_1 = SupportedTlsVersions("1.1")
	SupportedTlsVersions_1_2 = SupportedTlsVersions("1.2")
)

// The action to take when an unauthenticated client attempts to access the app.
type UnauthenticatedClientAction string

const (
	UnauthenticatedClientActionRedirectToLoginPage = UnauthenticatedClientAction("RedirectToLoginPage")
	UnauthenticatedClientActionAllowAnonymous      = UnauthenticatedClientAction("AllowAnonymous")
)

func (UnauthenticatedClientAction) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientAction)(nil)).Elem()
}

func (e UnauthenticatedClientAction) ToUnauthenticatedClientActionOutput() UnauthenticatedClientActionOutput {
	return pulumi.ToOutput(e).(UnauthenticatedClientActionOutput)
}

func (e UnauthenticatedClientAction) ToUnauthenticatedClientActionOutputWithContext(ctx context.Context) UnauthenticatedClientActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UnauthenticatedClientActionOutput)
}

func (e UnauthenticatedClientAction) ToUnauthenticatedClientActionPtrOutput() UnauthenticatedClientActionPtrOutput {
	return e.ToUnauthenticatedClientActionPtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientAction) ToUnauthenticatedClientActionPtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionPtrOutput {
	return UnauthenticatedClientAction(e).ToUnauthenticatedClientActionOutputWithContext(ctx).ToUnauthenticatedClientActionPtrOutputWithContext(ctx)
}

func (e UnauthenticatedClientAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UnauthenticatedClientActionOutput struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientAction)(nil)).Elem()
}

func (o UnauthenticatedClientActionOutput) ToUnauthenticatedClientActionOutput() UnauthenticatedClientActionOutput {
	return o
}

func (o UnauthenticatedClientActionOutput) ToUnauthenticatedClientActionOutputWithContext(ctx context.Context) UnauthenticatedClientActionOutput {
	return o
}

func (o UnauthenticatedClientActionOutput) ToUnauthenticatedClientActionPtrOutput() UnauthenticatedClientActionPtrOutput {
	return o.ToUnauthenticatedClientActionPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionOutput) ToUnauthenticatedClientActionPtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UnauthenticatedClientAction) *UnauthenticatedClientAction {
		return &v
	}).(UnauthenticatedClientActionPtrOutput)
}

func (o UnauthenticatedClientActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UnauthenticatedClientActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UnauthenticatedClientActionPtrOutput struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnauthenticatedClientAction)(nil)).Elem()
}

func (o UnauthenticatedClientActionPtrOutput) ToUnauthenticatedClientActionPtrOutput() UnauthenticatedClientActionPtrOutput {
	return o
}

func (o UnauthenticatedClientActionPtrOutput) ToUnauthenticatedClientActionPtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionPtrOutput {
	return o
}

func (o UnauthenticatedClientActionPtrOutput) Elem() UnauthenticatedClientActionOutput {
	return o.ApplyT(func(v *UnauthenticatedClientAction) UnauthenticatedClientAction {
		if v != nil {
			return *v
		}
		var ret UnauthenticatedClientAction
		return ret
	}).(UnauthenticatedClientActionOutput)
}

func (o UnauthenticatedClientActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UnauthenticatedClientAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UnauthenticatedClientActionInput is an input type that accepts UnauthenticatedClientActionArgs and UnauthenticatedClientActionOutput values.
// You can construct a concrete instance of `UnauthenticatedClientActionInput` via:
//
//	UnauthenticatedClientActionArgs{...}
type UnauthenticatedClientActionInput interface {
	pulumi.Input

	ToUnauthenticatedClientActionOutput() UnauthenticatedClientActionOutput
	ToUnauthenticatedClientActionOutputWithContext(context.Context) UnauthenticatedClientActionOutput
}

var unauthenticatedClientActionPtrType = reflect.TypeOf((**UnauthenticatedClientAction)(nil)).Elem()

type UnauthenticatedClientActionPtrInput interface {
	pulumi.Input

	ToUnauthenticatedClientActionPtrOutput() UnauthenticatedClientActionPtrOutput
	ToUnauthenticatedClientActionPtrOutputWithContext(context.Context) UnauthenticatedClientActionPtrOutput
}

type unauthenticatedClientActionPtr string

func UnauthenticatedClientActionPtr(v string) UnauthenticatedClientActionPtrInput {
	return (*unauthenticatedClientActionPtr)(&v)
}

func (*unauthenticatedClientActionPtr) ElementType() reflect.Type {
	return unauthenticatedClientActionPtrType
}

func (in *unauthenticatedClientActionPtr) ToUnauthenticatedClientActionPtrOutput() UnauthenticatedClientActionPtrOutput {
	return pulumi.ToOutput(in).(UnauthenticatedClientActionPtrOutput)
}

func (in *unauthenticatedClientActionPtr) ToUnauthenticatedClientActionPtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UnauthenticatedClientActionPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
type UnauthenticatedClientActionV2 string

const (
	UnauthenticatedClientActionV2RedirectToLoginPage = UnauthenticatedClientActionV2("RedirectToLoginPage")
	UnauthenticatedClientActionV2AllowAnonymous      = UnauthenticatedClientActionV2("AllowAnonymous")
	UnauthenticatedClientActionV2Return401           = UnauthenticatedClientActionV2("Return401")
	UnauthenticatedClientActionV2Return403           = UnauthenticatedClientActionV2("Return403")
)

func (UnauthenticatedClientActionV2) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientActionV2)(nil)).Elem()
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output {
	return pulumi.ToOutput(e).(UnauthenticatedClientActionV2Output)
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2OutputWithContext(ctx context.Context) UnauthenticatedClientActionV2Output {
	return pulumi.ToOutputWithContext(ctx, e).(UnauthenticatedClientActionV2Output)
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return e.ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientActionV2) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return UnauthenticatedClientActionV2(e).ToUnauthenticatedClientActionV2OutputWithContext(ctx).ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx)
}

func (e UnauthenticatedClientActionV2) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientActionV2) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnauthenticatedClientActionV2) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UnauthenticatedClientActionV2) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UnauthenticatedClientActionV2Output struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*UnauthenticatedClientActionV2)(nil)).Elem()
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output {
	return o
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2OutputWithContext(ctx context.Context) UnauthenticatedClientActionV2Output {
	return o
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return o.ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UnauthenticatedClientActionV2) *UnauthenticatedClientActionV2 {
		return &v
	}).(UnauthenticatedClientActionV2PtrOutput)
}

func (o UnauthenticatedClientActionV2Output) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientActionV2) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UnauthenticatedClientActionV2Output) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2Output) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnauthenticatedClientActionV2) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UnauthenticatedClientActionV2PtrOutput struct{ *pulumi.OutputState }

func (UnauthenticatedClientActionV2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnauthenticatedClientActionV2)(nil)).Elem()
}

func (o UnauthenticatedClientActionV2PtrOutput) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return o
}

func (o UnauthenticatedClientActionV2PtrOutput) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return o
}

func (o UnauthenticatedClientActionV2PtrOutput) Elem() UnauthenticatedClientActionV2Output {
	return o.ApplyT(func(v *UnauthenticatedClientActionV2) UnauthenticatedClientActionV2 {
		if v != nil {
			return *v
		}
		var ret UnauthenticatedClientActionV2
		return ret
	}).(UnauthenticatedClientActionV2Output)
}

func (o UnauthenticatedClientActionV2PtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnauthenticatedClientActionV2PtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UnauthenticatedClientActionV2) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UnauthenticatedClientActionV2Input is an input type that accepts UnauthenticatedClientActionV2Args and UnauthenticatedClientActionV2Output values.
// You can construct a concrete instance of `UnauthenticatedClientActionV2Input` via:
//
//	UnauthenticatedClientActionV2Args{...}
type UnauthenticatedClientActionV2Input interface {
	pulumi.Input

	ToUnauthenticatedClientActionV2Output() UnauthenticatedClientActionV2Output
	ToUnauthenticatedClientActionV2OutputWithContext(context.Context) UnauthenticatedClientActionV2Output
}

var unauthenticatedClientActionV2PtrType = reflect.TypeOf((**UnauthenticatedClientActionV2)(nil)).Elem()

type UnauthenticatedClientActionV2PtrInput interface {
	pulumi.Input

	ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput
	ToUnauthenticatedClientActionV2PtrOutputWithContext(context.Context) UnauthenticatedClientActionV2PtrOutput
}

type unauthenticatedClientActionV2Ptr string

func UnauthenticatedClientActionV2Ptr(v string) UnauthenticatedClientActionV2PtrInput {
	return (*unauthenticatedClientActionV2Ptr)(&v)
}

func (*unauthenticatedClientActionV2Ptr) ElementType() reflect.Type {
	return unauthenticatedClientActionV2PtrType
}

func (in *unauthenticatedClientActionV2Ptr) ToUnauthenticatedClientActionV2PtrOutput() UnauthenticatedClientActionV2PtrOutput {
	return pulumi.ToOutput(in).(UnauthenticatedClientActionV2PtrOutput)
}

func (in *unauthenticatedClientActionV2Ptr) ToUnauthenticatedClientActionV2PtrOutputWithContext(ctx context.Context) UnauthenticatedClientActionV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UnauthenticatedClientActionV2PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoHealActionTypeOutput{})
	pulumi.RegisterOutputType(AutoHealActionTypePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceTypeOutput{})
	pulumi.RegisterOutputType(AzureResourceTypePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageTypeOutput{})
	pulumi.RegisterOutputType(AzureStorageTypePtrOutput{})
	pulumi.RegisterOutputType(BuiltInAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(BuiltInAuthenticationProviderPtrOutput{})
	pulumi.RegisterOutputType(ClientCertModeOutput{})
	pulumi.RegisterOutputType(ClientCertModePtrOutput{})
	pulumi.RegisterOutputType(ClientCredentialMethodOutput{})
	pulumi.RegisterOutputType(ClientCredentialMethodPtrOutput{})
	pulumi.RegisterOutputType(ConnectionStringTypeOutput{})
	pulumi.RegisterOutputType(ConnectionStringTypePtrOutput{})
	pulumi.RegisterOutputType(CookieExpirationConventionOutput{})
	pulumi.RegisterOutputType(CookieExpirationConventionPtrOutput{})
	pulumi.RegisterOutputType(CustomHostNameDnsRecordTypeOutput{})
	pulumi.RegisterOutputType(CustomHostNameDnsRecordTypePtrOutput{})
	pulumi.RegisterOutputType(ForwardProxyConventionOutput{})
	pulumi.RegisterOutputType(ForwardProxyConventionPtrOutput{})
	pulumi.RegisterOutputType(FrequencyUnitOutput{})
	pulumi.RegisterOutputType(FrequencyUnitPtrOutput{})
	pulumi.RegisterOutputType(FrontEndServiceTypeOutput{})
	pulumi.RegisterOutputType(FrontEndServiceTypePtrOutput{})
	pulumi.RegisterOutputType(HostNameTypeOutput{})
	pulumi.RegisterOutputType(HostNameTypePtrOutput{})
	pulumi.RegisterOutputType(HostTypeOutput{})
	pulumi.RegisterOutputType(HostTypePtrOutput{})
	pulumi.RegisterOutputType(LogLevelOutput{})
	pulumi.RegisterOutputType(LogLevelPtrOutput{})
	pulumi.RegisterOutputType(ManagedPipelineModeOutput{})
	pulumi.RegisterOutputType(ManagedPipelineModePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(PublicCertificateLocationOutput{})
	pulumi.RegisterOutputType(PublicCertificateLocationPtrOutput{})
	pulumi.RegisterOutputType(RedundancyModeOutput{})
	pulumi.RegisterOutputType(RedundancyModePtrOutput{})
	pulumi.RegisterOutputType(SiteLoadBalancingOutput{})
	pulumi.RegisterOutputType(SiteLoadBalancingPtrOutput{})
	pulumi.RegisterOutputType(SslStateOutput{})
	pulumi.RegisterOutputType(SslStatePtrOutput{})
	pulumi.RegisterOutputType(StagingEnvironmentPolicyOutput{})
	pulumi.RegisterOutputType(StagingEnvironmentPolicyPtrOutput{})
	pulumi.RegisterOutputType(StorageTypeOutput{})
	pulumi.RegisterOutputType(StorageTypePtrOutput{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionOutput{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionPtrOutput{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionV2Output{})
	pulumi.RegisterOutputType(UnauthenticatedClientActionV2PtrOutput{})
}
