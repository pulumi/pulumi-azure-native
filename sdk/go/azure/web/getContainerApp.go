// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Container App.
// API Version: 2021-03-01.
func LookupContainerApp(ctx *pulumi.Context, args *LookupContainerAppArgs, opts ...pulumi.InvokeOption) (*LookupContainerAppResult, error) {
	var rv LookupContainerAppResult
	err := ctx.Invoke("azure-native:web:getContainerApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupContainerAppArgs struct {
	// Name of the Container App.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Container App.
type LookupContainerAppResult struct {
	// Non versioned Container App configuration properties.
	Configuration *ConfigurationResponse `pulumi:"configuration"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource ID of the Container App's KubeEnvironment.
	KubeEnvironmentId *string `pulumi:"kubeEnvironmentId"`
	// Fully Qualified Domain Name of the latest revision of the Container App.
	LatestRevisionFqdn string `pulumi:"latestRevisionFqdn"`
	// Name of the latest revision of the Container App.
	LatestRevisionName string `pulumi:"latestRevisionName"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Provisioning state of the Container App.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Container App versioned application definition.
	Template *TemplateResponse `pulumi:"template"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupContainerAppResult
func (val *LookupContainerAppResult) Defaults() *LookupContainerAppResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Configuration = tmp.Configuration.Defaults()

	return &tmp
}

func LookupContainerAppOutput(ctx *pulumi.Context, args LookupContainerAppOutputArgs, opts ...pulumi.InvokeOption) LookupContainerAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerAppResult, error) {
			args := v.(LookupContainerAppArgs)
			r, err := LookupContainerApp(ctx, &args, opts...)
			var s LookupContainerAppResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContainerAppResultOutput)
}

type LookupContainerAppOutputArgs struct {
	// Name of the Container App.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupContainerAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerAppArgs)(nil)).Elem()
}

// Container App.
type LookupContainerAppResultOutput struct{ *pulumi.OutputState }

func (LookupContainerAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerAppResult)(nil)).Elem()
}

func (o LookupContainerAppResultOutput) ToLookupContainerAppResultOutput() LookupContainerAppResultOutput {
	return o
}

func (o LookupContainerAppResultOutput) ToLookupContainerAppResultOutputWithContext(ctx context.Context) LookupContainerAppResultOutput {
	return o
}

// Non versioned Container App configuration properties.
func (o LookupContainerAppResultOutput) Configuration() ConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerAppResult) *ConfigurationResponse { return v.Configuration }).(ConfigurationResponsePtrOutput)
}

// Resource Id.
func (o LookupContainerAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupContainerAppResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerAppResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource ID of the Container App's KubeEnvironment.
func (o LookupContainerAppResultOutput) KubeEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerAppResult) *string { return v.KubeEnvironmentId }).(pulumi.StringPtrOutput)
}

// Fully Qualified Domain Name of the latest revision of the Container App.
func (o LookupContainerAppResultOutput) LatestRevisionFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.LatestRevisionFqdn }).(pulumi.StringOutput)
}

// Name of the latest revision of the Container App.
func (o LookupContainerAppResultOutput) LatestRevisionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.LatestRevisionName }).(pulumi.StringOutput)
}

// Resource Location.
func (o LookupContainerAppResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o LookupContainerAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the Container App.
func (o LookupContainerAppResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource tags.
func (o LookupContainerAppResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContainerAppResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Container App versioned application definition.
func (o LookupContainerAppResultOutput) Template() TemplateResponsePtrOutput {
	return o.ApplyT(func(v LookupContainerAppResult) *TemplateResponse { return v.Template }).(TemplateResponsePtrOutput)
}

// Resource type.
func (o LookupContainerAppResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerAppResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerAppResultOutput{})
}
