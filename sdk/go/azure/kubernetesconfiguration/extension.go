// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesconfiguration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Extension Instance object.
// API Version: 2020-07-01-preview.
type Extension struct {
	pulumi.CustomResourceState

	// Flag to note if this instance participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion pulumi.BoolPtrOutput `pulumi:"autoUpgradeMinorVersion"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
	ConfigurationProtectedSettings pulumi.StringMapOutput `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this instance of the extension.
	ConfigurationSettings pulumi.StringMapOutput `pulumi:"configurationSettings"`
	// DateLiteral (per ISO8601) noting the time the resource was created by the client (user).
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// Error information from the Agent - e.g. errors during installation.
	ErrorInfo ErrorDefinitionResponseOutput `pulumi:"errorInfo"`
	// Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType pulumi.StringPtrOutput `pulumi:"extensionType"`
	// The identity of the configuration.
	Identity ConfigurationIdentityResponsePtrOutput `pulumi:"identity"`
	// Status of installation of this instance of the extension.
	InstallState pulumi.StringOutput `pulumi:"installState"`
	// DateLiteral (per ISO8601) noting the time the resource was modified by the client (user).
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// DateLiteral (per ISO8601) noting the time of last status from the agent.
	LastStatusTime pulumi.StringOutput `pulumi:"lastStatusTime"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
	ReleaseTrain pulumi.StringPtrOutput `pulumi:"releaseTrain"`
	// Scope at which the extension instance is installed.
	Scope ScopeResponsePtrOutput `pulumi:"scope"`
	// Status from this instance of the extension.
	Statuses ExtensionStatusResponseArrayOutput `pulumi:"statuses"`
	// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData SystemDataResponsePtrOutput `pulumi:"systemData"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
	// Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewExtension registers a new resource with the given unique name, arguments, and options.
func NewExtension(ctx *pulumi.Context,
	name string, args *ExtensionArgs, opts ...pulumi.ResourceOption) (*Extension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ClusterResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterResourceName'")
	}
	if args.ClusterRp == nil {
		return nil, errors.New("invalid value for required argument 'ClusterRp'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:kubernetesconfiguration:Extension"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesconfiguration/v20200701preview:Extension"),
		},
		{
			Type: pulumi.String("azure-nextgen:kubernetesconfiguration/v20200701preview:Extension"),
		},
	})
	opts = append(opts, aliases)
	var resource Extension
	err := ctx.RegisterResource("azure-native:kubernetesconfiguration:Extension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtension gets an existing Extension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensionState, opts ...pulumi.ResourceOption) (*Extension, error) {
	var resource Extension
	err := ctx.ReadResource("azure-native:kubernetesconfiguration:Extension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Extension resources.
type extensionState struct {
	// Flag to note if this instance participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this instance of the extension.
	ConfigurationSettings map[string]string `pulumi:"configurationSettings"`
	// DateLiteral (per ISO8601) noting the time the resource was created by the client (user).
	CreationTime *string `pulumi:"creationTime"`
	// Error information from the Agent - e.g. errors during installation.
	ErrorInfo *ErrorDefinitionResponse `pulumi:"errorInfo"`
	// Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType *string `pulumi:"extensionType"`
	// The identity of the configuration.
	Identity *ConfigurationIdentityResponse `pulumi:"identity"`
	// Status of installation of this instance of the extension.
	InstallState *string `pulumi:"installState"`
	// DateLiteral (per ISO8601) noting the time the resource was modified by the client (user).
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// DateLiteral (per ISO8601) noting the time of last status from the agent.
	LastStatusTime *string `pulumi:"lastStatusTime"`
	// Resource name
	Name *string `pulumi:"name"`
	// ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
	ReleaseTrain *string `pulumi:"releaseTrain"`
	// Scope at which the extension instance is installed.
	Scope *ScopeResponse `pulumi:"scope"`
	// Status from this instance of the extension.
	Statuses []ExtensionStatusResponse `pulumi:"statuses"`
	// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource type
	Type *string `pulumi:"type"`
	// Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
	Version *string `pulumi:"version"`
}

type ExtensionState struct {
	// Flag to note if this instance participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput
	// Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
	ConfigurationProtectedSettings pulumi.StringMapInput
	// Configuration settings, as name-value pairs for configuring this instance of the extension.
	ConfigurationSettings pulumi.StringMapInput
	// DateLiteral (per ISO8601) noting the time the resource was created by the client (user).
	CreationTime pulumi.StringPtrInput
	// Error information from the Agent - e.g. errors during installation.
	ErrorInfo ErrorDefinitionResponsePtrInput
	// Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType pulumi.StringPtrInput
	// The identity of the configuration.
	Identity ConfigurationIdentityResponsePtrInput
	// Status of installation of this instance of the extension.
	InstallState pulumi.StringPtrInput
	// DateLiteral (per ISO8601) noting the time the resource was modified by the client (user).
	LastModifiedTime pulumi.StringPtrInput
	// DateLiteral (per ISO8601) noting the time of last status from the agent.
	LastStatusTime pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
	ReleaseTrain pulumi.StringPtrInput
	// Scope at which the extension instance is installed.
	Scope ScopeResponsePtrInput
	// Status from this instance of the extension.
	Statuses ExtensionStatusResponseArrayInput
	// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData SystemDataResponsePtrInput
	// Resource type
	Type pulumi.StringPtrInput
	// Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
	Version pulumi.StringPtrInput
}

func (ExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionState)(nil)).Elem()
}

type extensionArgs struct {
	// Flag to note if this instance participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// The name of the kubernetes cluster.
	ClusterName string `pulumi:"clusterName"`
	// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
	ClusterResourceName string `pulumi:"clusterResourceName"`
	// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
	ClusterRp string `pulumi:"clusterRp"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this instance of the extension.
	ConfigurationSettings map[string]string `pulumi:"configurationSettings"`
	// Name of an instance of the Extension.
	ExtensionInstanceName *string `pulumi:"extensionInstanceName"`
	// Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType *string `pulumi:"extensionType"`
	// The identity of the configuration.
	Identity *ConfigurationIdentity `pulumi:"identity"`
	// ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
	ReleaseTrain *string `pulumi:"releaseTrain"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Scope at which the extension instance is installed.
	Scope *Scope `pulumi:"scope"`
	// Status from this instance of the extension.
	Statuses []ExtensionStatus `pulumi:"statuses"`
	// Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Extension resource.
type ExtensionArgs struct {
	// Flag to note if this instance participates in auto upgrade of minor version, or not.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput
	// The name of the kubernetes cluster.
	ClusterName pulumi.StringInput
	// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
	ClusterResourceName pulumi.StringInput
	// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
	ClusterRp pulumi.StringInput
	// Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension.
	ConfigurationProtectedSettings pulumi.StringMapInput
	// Configuration settings, as name-value pairs for configuring this instance of the extension.
	ConfigurationSettings pulumi.StringMapInput
	// Name of an instance of the Extension.
	ExtensionInstanceName pulumi.StringPtrInput
	// Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
	ExtensionType pulumi.StringPtrInput
	// The identity of the configuration.
	Identity ConfigurationIdentityPtrInput
	// ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
	ReleaseTrain pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Scope at which the extension instance is installed.
	Scope ScopePtrInput
	// Status from this instance of the extension.
	Statuses ExtensionStatusArrayInput
	// Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
	Version pulumi.StringPtrInput
}

func (ExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionArgs)(nil)).Elem()
}

type ExtensionInput interface {
	pulumi.Input

	ToExtensionOutput() ExtensionOutput
	ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput
}

func (*Extension) ElementType() reflect.Type {
	return reflect.TypeOf((*Extension)(nil))
}

func (i *Extension) ToExtensionOutput() ExtensionOutput {
	return i.ToExtensionOutputWithContext(context.Background())
}

func (i *Extension) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionOutput)
}

type ExtensionOutput struct {
	*pulumi.OutputState
}

func (ExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Extension)(nil))
}

func (o ExtensionOutput) ToExtensionOutput() ExtensionOutput {
	return o
}

func (o ExtensionOutput) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ExtensionOutput{})
}
