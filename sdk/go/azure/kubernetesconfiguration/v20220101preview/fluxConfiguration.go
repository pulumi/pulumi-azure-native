// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flux Configuration object returned in Get & Put response.
type FluxConfiguration struct {
	pulumi.CustomResourceState

	// Parameters to reconcile to the Bucket source kind type.
	Bucket BucketDefinitionResponsePtrOutput `pulumi:"bucket"`
	// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
	ComplianceState pulumi.StringOutput `pulumi:"complianceState"`
	// Key-value pairs of protected configuration settings for the configuration
	ConfigurationProtectedSettings pulumi.StringMapOutput `pulumi:"configurationProtectedSettings"`
	// Error message returned to the user in the case of provisioning failure.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// Parameters to reconcile to the GitRepository source kind type.
	GitRepository GitRepositoryDefinitionResponsePtrOutput `pulumi:"gitRepository"`
	// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
	Kustomizations KustomizationDefinitionResponseMapOutput `pulumi:"kustomizations"`
	// Datetime the fluxConfiguration last synced its source on the cluster.
	LastSourceUpdatedAt pulumi.StringOutput `pulumi:"lastSourceUpdatedAt"`
	// Branch and SHA of the last source commit synced with the cluster.
	LastSourceUpdatedCommitId pulumi.StringOutput `pulumi:"lastSourceUpdatedCommitId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	// Status of the creation of the fluxConfiguration.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
	RepositoryPublicKey pulumi.StringOutput `pulumi:"repositoryPublicKey"`
	// Scope at which the operator will be installed.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Source Kind to pull the configuration data from.
	SourceKind pulumi.StringPtrOutput `pulumi:"sourceKind"`
	// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
	Statuses ObjectStatusDefinitionResponseArrayOutput `pulumi:"statuses"`
	// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
	Suspend pulumi.BoolPtrOutput `pulumi:"suspend"`
	// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFluxConfiguration registers a new resource with the given unique name, arguments, and options.
func NewFluxConfiguration(ctx *pulumi.Context,
	name string, args *FluxConfigurationArgs, opts ...pulumi.ResourceOption) (*FluxConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ClusterResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterResourceName'")
	}
	if args.ClusterRp == nil {
		return nil, errors.New("invalid value for required argument 'ClusterRp'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Bucket != nil {
		args.Bucket = args.Bucket.ToBucketDefinitionPtrOutput().ApplyT(func(v *BucketDefinition) *BucketDefinition { return v.Defaults() }).(BucketDefinitionPtrOutput)
	}
	if args.GitRepository != nil {
		args.GitRepository = args.GitRepository.ToGitRepositoryDefinitionPtrOutput().ApplyT(func(v *GitRepositoryDefinition) *GitRepositoryDefinition { return v.Defaults() }).(GitRepositoryDefinitionPtrOutput)
	}
	if isZero(args.Namespace) {
		args.Namespace = pulumi.StringPtr("default")
	}
	if isZero(args.SourceKind) {
		args.SourceKind = pulumi.StringPtr("GitRepository")
	}
	if isZero(args.Suspend) {
		args.Suspend = pulumi.BoolPtr(false)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:kubernetesconfiguration:FluxConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesconfiguration/v20211101preview:FluxConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesconfiguration/v20220301:FluxConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:kubernetesconfiguration/v20220701:FluxConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource FluxConfiguration
	err := ctx.RegisterResource("azure-native:kubernetesconfiguration/v20220101preview:FluxConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFluxConfiguration gets an existing FluxConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFluxConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FluxConfigurationState, opts ...pulumi.ResourceOption) (*FluxConfiguration, error) {
	var resource FluxConfiguration
	err := ctx.ReadResource("azure-native:kubernetesconfiguration/v20220101preview:FluxConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FluxConfiguration resources.
type fluxConfigurationState struct {
}

type FluxConfigurationState struct {
}

func (FluxConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*fluxConfigurationState)(nil)).Elem()
}

type fluxConfigurationArgs struct {
	// Parameters to reconcile to the Bucket source kind type.
	Bucket *BucketDefinition `pulumi:"bucket"`
	// The name of the kubernetes cluster.
	ClusterName string `pulumi:"clusterName"`
	// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
	ClusterResourceName string `pulumi:"clusterResourceName"`
	// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
	ClusterRp string `pulumi:"clusterRp"`
	// Key-value pairs of protected configuration settings for the configuration
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Name of the Flux Configuration.
	FluxConfigurationName *string `pulumi:"fluxConfigurationName"`
	// Parameters to reconcile to the GitRepository source kind type.
	GitRepository *GitRepositoryDefinition `pulumi:"gitRepository"`
	// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
	Kustomizations map[string]KustomizationDefinition `pulumi:"kustomizations"`
	// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
	Namespace *string `pulumi:"namespace"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Scope at which the operator will be installed.
	Scope *string `pulumi:"scope"`
	// Source Kind to pull the configuration data from.
	SourceKind *string `pulumi:"sourceKind"`
	// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
	Suspend *bool `pulumi:"suspend"`
}

// The set of arguments for constructing a FluxConfiguration resource.
type FluxConfigurationArgs struct {
	// Parameters to reconcile to the Bucket source kind type.
	Bucket BucketDefinitionPtrInput
	// The name of the kubernetes cluster.
	ClusterName pulumi.StringInput
	// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
	ClusterResourceName pulumi.StringInput
	// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
	ClusterRp pulumi.StringInput
	// Key-value pairs of protected configuration settings for the configuration
	ConfigurationProtectedSettings pulumi.StringMapInput
	// Name of the Flux Configuration.
	FluxConfigurationName pulumi.StringPtrInput
	// Parameters to reconcile to the GitRepository source kind type.
	GitRepository GitRepositoryDefinitionPtrInput
	// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
	Kustomizations KustomizationDefinitionMapInput
	// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
	Namespace pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Scope at which the operator will be installed.
	Scope pulumi.StringPtrInput
	// Source Kind to pull the configuration data from.
	SourceKind pulumi.StringPtrInput
	// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
	Suspend pulumi.BoolPtrInput
}

func (FluxConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fluxConfigurationArgs)(nil)).Elem()
}

type FluxConfigurationInput interface {
	pulumi.Input

	ToFluxConfigurationOutput() FluxConfigurationOutput
	ToFluxConfigurationOutputWithContext(ctx context.Context) FluxConfigurationOutput
}

func (*FluxConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfiguration)(nil)).Elem()
}

func (i *FluxConfiguration) ToFluxConfigurationOutput() FluxConfigurationOutput {
	return i.ToFluxConfigurationOutputWithContext(context.Background())
}

func (i *FluxConfiguration) ToFluxConfigurationOutputWithContext(ctx context.Context) FluxConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationOutput)
}

type FluxConfigurationOutput struct{ *pulumi.OutputState }

func (FluxConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfiguration)(nil)).Elem()
}

func (o FluxConfigurationOutput) ToFluxConfigurationOutput() FluxConfigurationOutput {
	return o
}

func (o FluxConfigurationOutput) ToFluxConfigurationOutputWithContext(ctx context.Context) FluxConfigurationOutput {
	return o
}

// Parameters to reconcile to the Bucket source kind type.
func (o FluxConfigurationOutput) Bucket() BucketDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) BucketDefinitionResponsePtrOutput { return v.Bucket }).(BucketDefinitionResponsePtrOutput)
}

// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
func (o FluxConfigurationOutput) ComplianceState() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.ComplianceState }).(pulumi.StringOutput)
}

// Key-value pairs of protected configuration settings for the configuration
func (o FluxConfigurationOutput) ConfigurationProtectedSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringMapOutput { return v.ConfigurationProtectedSettings }).(pulumi.StringMapOutput)
}

// Error message returned to the user in the case of provisioning failure.
func (o FluxConfigurationOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Parameters to reconcile to the GitRepository source kind type.
func (o FluxConfigurationOutput) GitRepository() GitRepositoryDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) GitRepositoryDefinitionResponsePtrOutput { return v.GitRepository }).(GitRepositoryDefinitionResponsePtrOutput)
}

// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
func (o FluxConfigurationOutput) Kustomizations() KustomizationDefinitionResponseMapOutput {
	return o.ApplyT(func(v *FluxConfiguration) KustomizationDefinitionResponseMapOutput { return v.Kustomizations }).(KustomizationDefinitionResponseMapOutput)
}

// Datetime the fluxConfiguration last synced its source on the cluster.
func (o FluxConfigurationOutput) LastSourceUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.LastSourceUpdatedAt }).(pulumi.StringOutput)
}

// Branch and SHA of the last source commit synced with the cluster.
func (o FluxConfigurationOutput) LastSourceUpdatedCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.LastSourceUpdatedCommitId }).(pulumi.StringOutput)
}

// The name of the resource
func (o FluxConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
func (o FluxConfigurationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Status of the creation of the fluxConfiguration.
func (o FluxConfigurationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
func (o FluxConfigurationOutput) RepositoryPublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.RepositoryPublicKey }).(pulumi.StringOutput)
}

// Scope at which the operator will be installed.
func (o FluxConfigurationOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// Source Kind to pull the configuration data from.
func (o FluxConfigurationOutput) SourceKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringPtrOutput { return v.SourceKind }).(pulumi.StringPtrOutput)
}

// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
func (o FluxConfigurationOutput) Statuses() ObjectStatusDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *FluxConfiguration) ObjectStatusDefinitionResponseArrayOutput { return v.Statuses }).(ObjectStatusDefinitionResponseArrayOutput)
}

// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
func (o FluxConfigurationOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.BoolPtrOutput { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
func (o FluxConfigurationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *FluxConfiguration) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o FluxConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FluxConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FluxConfigurationOutput{})
}
