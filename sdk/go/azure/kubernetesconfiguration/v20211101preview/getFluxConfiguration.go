// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20211101preview

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Flux Configuration object returned in Get & Put response.
func LookupFluxConfiguration(ctx *pulumi.Context, args *LookupFluxConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupFluxConfigurationResult, error) {
	var rv LookupFluxConfigurationResult
	err := ctx.Invoke("azure-native:kubernetesconfiguration/v20211101preview:getFluxConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupFluxConfigurationArgs struct {
	// The name of the kubernetes cluster.
	ClusterName string `pulumi:"clusterName"`
	// The Kubernetes cluster resource name - either managedClusters (for AKS clusters) or connectedClusters (for OnPrem K8S clusters).
	ClusterResourceName string `pulumi:"clusterResourceName"`
	// The Kubernetes cluster RP - either Microsoft.ContainerService (for AKS clusters) or Microsoft.Kubernetes (for OnPrem K8S clusters).
	ClusterRp string `pulumi:"clusterRp"`
	// Name of the Flux Configuration.
	FluxConfigurationName string `pulumi:"fluxConfigurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The Flux Configuration object returned in Get & Put response.
type LookupFluxConfigurationResult struct {
	// Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
	ComplianceState string `pulumi:"complianceState"`
	// Key-value pairs of protected configuration settings for the configuration
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Error message returned to the user in the case of provisioning failure.
	ErrorMessage string `pulumi:"errorMessage"`
	// Parameters to reconcile to the GitRepository source kind type.
	GitRepository *GitRepositoryDefinitionResponse `pulumi:"gitRepository"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
	Kustomizations map[string]KustomizationDefinitionResponse `pulumi:"kustomizations"`
	// Datetime the fluxConfiguration last synced its source on the cluster.
	LastSourceSyncedAt string `pulumi:"lastSourceSyncedAt"`
	// Branch and SHA of the last source commit synced with the cluster.
	LastSourceSyncedCommitId string `pulumi:"lastSourceSyncedCommitId"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
	Namespace *string `pulumi:"namespace"`
	// Status of the creation of the fluxConfiguration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
	RepositoryPublicKey string `pulumi:"repositoryPublicKey"`
	// Scope at which the operator will be installed.
	Scope *string `pulumi:"scope"`
	// Source Kind to pull the configuration data from.
	SourceKind *string `pulumi:"sourceKind"`
	// Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
	Statuses []ObjectStatusDefinitionResponse `pulumi:"statuses"`
	// Whether this configuration should suspend its reconciliation of its kustomizations and sources.
	Suspend *bool `pulumi:"suspend"`
	// Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupFluxConfigurationResult
func (val *LookupFluxConfigurationResult) Defaults() *LookupFluxConfigurationResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.GitRepository = tmp.GitRepository.Defaults()

	if isZero(tmp.Namespace) {
		namespace_ := "default"
		tmp.Namespace = &namespace_
	}
	if isZero(tmp.Suspend) {
		suspend_ := false
		tmp.Suspend = &suspend_
	}
	return &tmp
}
