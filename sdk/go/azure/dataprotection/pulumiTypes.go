// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dataprotection

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Delete option with duration
type AbsoluteDeleteOption struct {
	// Duration of deletion after given timespan
	Duration string `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AbsoluteDeleteOption'.
	ObjectType string `pulumi:"objectType"`
}

// AbsoluteDeleteOptionInput is an input type that accepts AbsoluteDeleteOptionArgs and AbsoluteDeleteOptionOutput values.
// You can construct a concrete instance of `AbsoluteDeleteOptionInput` via:
//
//          AbsoluteDeleteOptionArgs{...}
type AbsoluteDeleteOptionInput interface {
	pulumi.Input

	ToAbsoluteDeleteOptionOutput() AbsoluteDeleteOptionOutput
	ToAbsoluteDeleteOptionOutputWithContext(context.Context) AbsoluteDeleteOptionOutput
}

// Delete option with duration
type AbsoluteDeleteOptionArgs struct {
	// Duration of deletion after given timespan
	Duration pulumi.StringInput `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AbsoluteDeleteOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AbsoluteDeleteOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteDeleteOption)(nil)).Elem()
}

func (i AbsoluteDeleteOptionArgs) ToAbsoluteDeleteOptionOutput() AbsoluteDeleteOptionOutput {
	return i.ToAbsoluteDeleteOptionOutputWithContext(context.Background())
}

func (i AbsoluteDeleteOptionArgs) ToAbsoluteDeleteOptionOutputWithContext(ctx context.Context) AbsoluteDeleteOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AbsoluteDeleteOptionOutput)
}

// Delete option with duration
type AbsoluteDeleteOptionOutput struct{ *pulumi.OutputState }

func (AbsoluteDeleteOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteDeleteOption)(nil)).Elem()
}

func (o AbsoluteDeleteOptionOutput) ToAbsoluteDeleteOptionOutput() AbsoluteDeleteOptionOutput {
	return o
}

func (o AbsoluteDeleteOptionOutput) ToAbsoluteDeleteOptionOutputWithContext(ctx context.Context) AbsoluteDeleteOptionOutput {
	return o
}

// Duration of deletion after given timespan
func (o AbsoluteDeleteOptionOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v AbsoluteDeleteOption) string { return v.Duration }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AbsoluteDeleteOption'.
func (o AbsoluteDeleteOptionOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AbsoluteDeleteOption) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Delete option with duration
type AbsoluteDeleteOptionResponse struct {
	// Duration of deletion after given timespan
	Duration string `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AbsoluteDeleteOption'.
	ObjectType string `pulumi:"objectType"`
}

// AbsoluteDeleteOptionResponseInput is an input type that accepts AbsoluteDeleteOptionResponseArgs and AbsoluteDeleteOptionResponseOutput values.
// You can construct a concrete instance of `AbsoluteDeleteOptionResponseInput` via:
//
//          AbsoluteDeleteOptionResponseArgs{...}
type AbsoluteDeleteOptionResponseInput interface {
	pulumi.Input

	ToAbsoluteDeleteOptionResponseOutput() AbsoluteDeleteOptionResponseOutput
	ToAbsoluteDeleteOptionResponseOutputWithContext(context.Context) AbsoluteDeleteOptionResponseOutput
}

// Delete option with duration
type AbsoluteDeleteOptionResponseArgs struct {
	// Duration of deletion after given timespan
	Duration pulumi.StringInput `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AbsoluteDeleteOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AbsoluteDeleteOptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteDeleteOptionResponse)(nil)).Elem()
}

func (i AbsoluteDeleteOptionResponseArgs) ToAbsoluteDeleteOptionResponseOutput() AbsoluteDeleteOptionResponseOutput {
	return i.ToAbsoluteDeleteOptionResponseOutputWithContext(context.Background())
}

func (i AbsoluteDeleteOptionResponseArgs) ToAbsoluteDeleteOptionResponseOutputWithContext(ctx context.Context) AbsoluteDeleteOptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AbsoluteDeleteOptionResponseOutput)
}

// Delete option with duration
type AbsoluteDeleteOptionResponseOutput struct{ *pulumi.OutputState }

func (AbsoluteDeleteOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteDeleteOptionResponse)(nil)).Elem()
}

func (o AbsoluteDeleteOptionResponseOutput) ToAbsoluteDeleteOptionResponseOutput() AbsoluteDeleteOptionResponseOutput {
	return o
}

func (o AbsoluteDeleteOptionResponseOutput) ToAbsoluteDeleteOptionResponseOutputWithContext(ctx context.Context) AbsoluteDeleteOptionResponseOutput {
	return o
}

// Duration of deletion after given timespan
func (o AbsoluteDeleteOptionResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v AbsoluteDeleteOptionResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AbsoluteDeleteOption'.
func (o AbsoluteDeleteOptionResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AbsoluteDeleteOptionResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteria struct {
	// Retention tag information
	TagInfo *RetentionTag `pulumi:"tagInfo"`
}

// AdhocBasedTaggingCriteriaInput is an input type that accepts AdhocBasedTaggingCriteriaArgs and AdhocBasedTaggingCriteriaOutput values.
// You can construct a concrete instance of `AdhocBasedTaggingCriteriaInput` via:
//
//          AdhocBasedTaggingCriteriaArgs{...}
type AdhocBasedTaggingCriteriaInput interface {
	pulumi.Input

	ToAdhocBasedTaggingCriteriaOutput() AdhocBasedTaggingCriteriaOutput
	ToAdhocBasedTaggingCriteriaOutputWithContext(context.Context) AdhocBasedTaggingCriteriaOutput
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteriaArgs struct {
	// Retention tag information
	TagInfo RetentionTagPtrInput `pulumi:"tagInfo"`
}

func (AdhocBasedTaggingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTaggingCriteria)(nil)).Elem()
}

func (i AdhocBasedTaggingCriteriaArgs) ToAdhocBasedTaggingCriteriaOutput() AdhocBasedTaggingCriteriaOutput {
	return i.ToAdhocBasedTaggingCriteriaOutputWithContext(context.Background())
}

func (i AdhocBasedTaggingCriteriaArgs) ToAdhocBasedTaggingCriteriaOutputWithContext(ctx context.Context) AdhocBasedTaggingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdhocBasedTaggingCriteriaOutput)
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteriaOutput struct{ *pulumi.OutputState }

func (AdhocBasedTaggingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTaggingCriteria)(nil)).Elem()
}

func (o AdhocBasedTaggingCriteriaOutput) ToAdhocBasedTaggingCriteriaOutput() AdhocBasedTaggingCriteriaOutput {
	return o
}

func (o AdhocBasedTaggingCriteriaOutput) ToAdhocBasedTaggingCriteriaOutputWithContext(ctx context.Context) AdhocBasedTaggingCriteriaOutput {
	return o
}

// Retention tag information
func (o AdhocBasedTaggingCriteriaOutput) TagInfo() RetentionTagPtrOutput {
	return o.ApplyT(func(v AdhocBasedTaggingCriteria) *RetentionTag { return v.TagInfo }).(RetentionTagPtrOutput)
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteriaResponse struct {
	// Retention tag information
	TagInfo *RetentionTagResponse `pulumi:"tagInfo"`
}

// AdhocBasedTaggingCriteriaResponseInput is an input type that accepts AdhocBasedTaggingCriteriaResponseArgs and AdhocBasedTaggingCriteriaResponseOutput values.
// You can construct a concrete instance of `AdhocBasedTaggingCriteriaResponseInput` via:
//
//          AdhocBasedTaggingCriteriaResponseArgs{...}
type AdhocBasedTaggingCriteriaResponseInput interface {
	pulumi.Input

	ToAdhocBasedTaggingCriteriaResponseOutput() AdhocBasedTaggingCriteriaResponseOutput
	ToAdhocBasedTaggingCriteriaResponseOutputWithContext(context.Context) AdhocBasedTaggingCriteriaResponseOutput
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteriaResponseArgs struct {
	// Retention tag information
	TagInfo RetentionTagResponsePtrInput `pulumi:"tagInfo"`
}

func (AdhocBasedTaggingCriteriaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTaggingCriteriaResponse)(nil)).Elem()
}

func (i AdhocBasedTaggingCriteriaResponseArgs) ToAdhocBasedTaggingCriteriaResponseOutput() AdhocBasedTaggingCriteriaResponseOutput {
	return i.ToAdhocBasedTaggingCriteriaResponseOutputWithContext(context.Background())
}

func (i AdhocBasedTaggingCriteriaResponseArgs) ToAdhocBasedTaggingCriteriaResponseOutputWithContext(ctx context.Context) AdhocBasedTaggingCriteriaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdhocBasedTaggingCriteriaResponseOutput)
}

// Adhoc backup tagging criteria
type AdhocBasedTaggingCriteriaResponseOutput struct{ *pulumi.OutputState }

func (AdhocBasedTaggingCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTaggingCriteriaResponse)(nil)).Elem()
}

func (o AdhocBasedTaggingCriteriaResponseOutput) ToAdhocBasedTaggingCriteriaResponseOutput() AdhocBasedTaggingCriteriaResponseOutput {
	return o
}

func (o AdhocBasedTaggingCriteriaResponseOutput) ToAdhocBasedTaggingCriteriaResponseOutputWithContext(ctx context.Context) AdhocBasedTaggingCriteriaResponseOutput {
	return o
}

// Retention tag information
func (o AdhocBasedTaggingCriteriaResponseOutput) TagInfo() RetentionTagResponsePtrOutput {
	return o.ApplyT(func(v AdhocBasedTaggingCriteriaResponse) *RetentionTagResponse { return v.TagInfo }).(RetentionTagResponsePtrOutput)
}

// Adhoc trigger context
type AdhocBasedTriggerContext struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'AdhocBasedTriggerContext'.
	ObjectType string `pulumi:"objectType"`
	// Tagging Criteria containing retention tag for adhoc backup.
	TaggingCriteria AdhocBasedTaggingCriteria `pulumi:"taggingCriteria"`
}

// AdhocBasedTriggerContextInput is an input type that accepts AdhocBasedTriggerContextArgs and AdhocBasedTriggerContextOutput values.
// You can construct a concrete instance of `AdhocBasedTriggerContextInput` via:
//
//          AdhocBasedTriggerContextArgs{...}
type AdhocBasedTriggerContextInput interface {
	pulumi.Input

	ToAdhocBasedTriggerContextOutput() AdhocBasedTriggerContextOutput
	ToAdhocBasedTriggerContextOutputWithContext(context.Context) AdhocBasedTriggerContextOutput
}

// Adhoc trigger context
type AdhocBasedTriggerContextArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'AdhocBasedTriggerContext'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Tagging Criteria containing retention tag for adhoc backup.
	TaggingCriteria AdhocBasedTaggingCriteriaInput `pulumi:"taggingCriteria"`
}

func (AdhocBasedTriggerContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTriggerContext)(nil)).Elem()
}

func (i AdhocBasedTriggerContextArgs) ToAdhocBasedTriggerContextOutput() AdhocBasedTriggerContextOutput {
	return i.ToAdhocBasedTriggerContextOutputWithContext(context.Background())
}

func (i AdhocBasedTriggerContextArgs) ToAdhocBasedTriggerContextOutputWithContext(ctx context.Context) AdhocBasedTriggerContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdhocBasedTriggerContextOutput)
}

// Adhoc trigger context
type AdhocBasedTriggerContextOutput struct{ *pulumi.OutputState }

func (AdhocBasedTriggerContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTriggerContext)(nil)).Elem()
}

func (o AdhocBasedTriggerContextOutput) ToAdhocBasedTriggerContextOutput() AdhocBasedTriggerContextOutput {
	return o
}

func (o AdhocBasedTriggerContextOutput) ToAdhocBasedTriggerContextOutputWithContext(ctx context.Context) AdhocBasedTriggerContextOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'AdhocBasedTriggerContext'.
func (o AdhocBasedTriggerContextOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AdhocBasedTriggerContext) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Tagging Criteria containing retention tag for adhoc backup.
func (o AdhocBasedTriggerContextOutput) TaggingCriteria() AdhocBasedTaggingCriteriaOutput {
	return o.ApplyT(func(v AdhocBasedTriggerContext) AdhocBasedTaggingCriteria { return v.TaggingCriteria }).(AdhocBasedTaggingCriteriaOutput)
}

// Adhoc trigger context
type AdhocBasedTriggerContextResponse struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'AdhocBasedTriggerContext'.
	ObjectType string `pulumi:"objectType"`
	// Tagging Criteria containing retention tag for adhoc backup.
	TaggingCriteria AdhocBasedTaggingCriteriaResponse `pulumi:"taggingCriteria"`
}

// AdhocBasedTriggerContextResponseInput is an input type that accepts AdhocBasedTriggerContextResponseArgs and AdhocBasedTriggerContextResponseOutput values.
// You can construct a concrete instance of `AdhocBasedTriggerContextResponseInput` via:
//
//          AdhocBasedTriggerContextResponseArgs{...}
type AdhocBasedTriggerContextResponseInput interface {
	pulumi.Input

	ToAdhocBasedTriggerContextResponseOutput() AdhocBasedTriggerContextResponseOutput
	ToAdhocBasedTriggerContextResponseOutputWithContext(context.Context) AdhocBasedTriggerContextResponseOutput
}

// Adhoc trigger context
type AdhocBasedTriggerContextResponseArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'AdhocBasedTriggerContext'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Tagging Criteria containing retention tag for adhoc backup.
	TaggingCriteria AdhocBasedTaggingCriteriaResponseInput `pulumi:"taggingCriteria"`
}

func (AdhocBasedTriggerContextResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTriggerContextResponse)(nil)).Elem()
}

func (i AdhocBasedTriggerContextResponseArgs) ToAdhocBasedTriggerContextResponseOutput() AdhocBasedTriggerContextResponseOutput {
	return i.ToAdhocBasedTriggerContextResponseOutputWithContext(context.Background())
}

func (i AdhocBasedTriggerContextResponseArgs) ToAdhocBasedTriggerContextResponseOutputWithContext(ctx context.Context) AdhocBasedTriggerContextResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdhocBasedTriggerContextResponseOutput)
}

// Adhoc trigger context
type AdhocBasedTriggerContextResponseOutput struct{ *pulumi.OutputState }

func (AdhocBasedTriggerContextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdhocBasedTriggerContextResponse)(nil)).Elem()
}

func (o AdhocBasedTriggerContextResponseOutput) ToAdhocBasedTriggerContextResponseOutput() AdhocBasedTriggerContextResponseOutput {
	return o
}

func (o AdhocBasedTriggerContextResponseOutput) ToAdhocBasedTriggerContextResponseOutputWithContext(ctx context.Context) AdhocBasedTriggerContextResponseOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'AdhocBasedTriggerContext'.
func (o AdhocBasedTriggerContextResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AdhocBasedTriggerContextResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Tagging Criteria containing retention tag for adhoc backup.
func (o AdhocBasedTriggerContextResponseOutput) TaggingCriteria() AdhocBasedTaggingCriteriaResponseOutput {
	return o.ApplyT(func(v AdhocBasedTriggerContextResponse) AdhocBasedTaggingCriteriaResponse { return v.TaggingCriteria }).(AdhocBasedTaggingCriteriaResponseOutput)
}

// Azure backup parameters
type AzureBackupParams struct {
	// BackupType ; Full/Incremental etc
	BackupType string `pulumi:"backupType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureBackupParams'.
	ObjectType string `pulumi:"objectType"`
}

// AzureBackupParamsInput is an input type that accepts AzureBackupParamsArgs and AzureBackupParamsOutput values.
// You can construct a concrete instance of `AzureBackupParamsInput` via:
//
//          AzureBackupParamsArgs{...}
type AzureBackupParamsInput interface {
	pulumi.Input

	ToAzureBackupParamsOutput() AzureBackupParamsOutput
	ToAzureBackupParamsOutputWithContext(context.Context) AzureBackupParamsOutput
}

// Azure backup parameters
type AzureBackupParamsArgs struct {
	// BackupType ; Full/Incremental etc
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureBackupParams'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AzureBackupParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupParams)(nil)).Elem()
}

func (i AzureBackupParamsArgs) ToAzureBackupParamsOutput() AzureBackupParamsOutput {
	return i.ToAzureBackupParamsOutputWithContext(context.Background())
}

func (i AzureBackupParamsArgs) ToAzureBackupParamsOutputWithContext(ctx context.Context) AzureBackupParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsOutput)
}

func (i AzureBackupParamsArgs) ToAzureBackupParamsPtrOutput() AzureBackupParamsPtrOutput {
	return i.ToAzureBackupParamsPtrOutputWithContext(context.Background())
}

func (i AzureBackupParamsArgs) ToAzureBackupParamsPtrOutputWithContext(ctx context.Context) AzureBackupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsOutput).ToAzureBackupParamsPtrOutputWithContext(ctx)
}

// AzureBackupParamsPtrInput is an input type that accepts AzureBackupParamsArgs, AzureBackupParamsPtr and AzureBackupParamsPtrOutput values.
// You can construct a concrete instance of `AzureBackupParamsPtrInput` via:
//
//          AzureBackupParamsArgs{...}
//
//  or:
//
//          nil
type AzureBackupParamsPtrInput interface {
	pulumi.Input

	ToAzureBackupParamsPtrOutput() AzureBackupParamsPtrOutput
	ToAzureBackupParamsPtrOutputWithContext(context.Context) AzureBackupParamsPtrOutput
}

type azureBackupParamsPtrType AzureBackupParamsArgs

func AzureBackupParamsPtr(v *AzureBackupParamsArgs) AzureBackupParamsPtrInput {
	return (*azureBackupParamsPtrType)(v)
}

func (*azureBackupParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupParams)(nil)).Elem()
}

func (i *azureBackupParamsPtrType) ToAzureBackupParamsPtrOutput() AzureBackupParamsPtrOutput {
	return i.ToAzureBackupParamsPtrOutputWithContext(context.Background())
}

func (i *azureBackupParamsPtrType) ToAzureBackupParamsPtrOutputWithContext(ctx context.Context) AzureBackupParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsPtrOutput)
}

// Azure backup parameters
type AzureBackupParamsOutput struct{ *pulumi.OutputState }

func (AzureBackupParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupParams)(nil)).Elem()
}

func (o AzureBackupParamsOutput) ToAzureBackupParamsOutput() AzureBackupParamsOutput {
	return o
}

func (o AzureBackupParamsOutput) ToAzureBackupParamsOutputWithContext(ctx context.Context) AzureBackupParamsOutput {
	return o
}

func (o AzureBackupParamsOutput) ToAzureBackupParamsPtrOutput() AzureBackupParamsPtrOutput {
	return o.ToAzureBackupParamsPtrOutputWithContext(context.Background())
}

func (o AzureBackupParamsOutput) ToAzureBackupParamsPtrOutputWithContext(ctx context.Context) AzureBackupParamsPtrOutput {
	return o.ApplyT(func(v AzureBackupParams) *AzureBackupParams {
		return &v
	}).(AzureBackupParamsPtrOutput)
}

// BackupType ; Full/Incremental etc
func (o AzureBackupParamsOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupParams) string { return v.BackupType }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureBackupParams'.
func (o AzureBackupParamsOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupParams) string { return v.ObjectType }).(pulumi.StringOutput)
}

type AzureBackupParamsPtrOutput struct{ *pulumi.OutputState }

func (AzureBackupParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupParams)(nil)).Elem()
}

func (o AzureBackupParamsPtrOutput) ToAzureBackupParamsPtrOutput() AzureBackupParamsPtrOutput {
	return o
}

func (o AzureBackupParamsPtrOutput) ToAzureBackupParamsPtrOutputWithContext(ctx context.Context) AzureBackupParamsPtrOutput {
	return o
}

func (o AzureBackupParamsPtrOutput) Elem() AzureBackupParamsOutput {
	return o.ApplyT(func(v *AzureBackupParams) AzureBackupParams { return *v }).(AzureBackupParamsOutput)
}

// BackupType ; Full/Incremental etc
func (o AzureBackupParamsPtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupParams) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureBackupParams'.
func (o AzureBackupParamsPtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupParams) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Azure backup parameters
type AzureBackupParamsResponse struct {
	// BackupType ; Full/Incremental etc
	BackupType string `pulumi:"backupType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureBackupParams'.
	ObjectType string `pulumi:"objectType"`
}

// AzureBackupParamsResponseInput is an input type that accepts AzureBackupParamsResponseArgs and AzureBackupParamsResponseOutput values.
// You can construct a concrete instance of `AzureBackupParamsResponseInput` via:
//
//          AzureBackupParamsResponseArgs{...}
type AzureBackupParamsResponseInput interface {
	pulumi.Input

	ToAzureBackupParamsResponseOutput() AzureBackupParamsResponseOutput
	ToAzureBackupParamsResponseOutputWithContext(context.Context) AzureBackupParamsResponseOutput
}

// Azure backup parameters
type AzureBackupParamsResponseArgs struct {
	// BackupType ; Full/Incremental etc
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureBackupParams'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AzureBackupParamsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupParamsResponse)(nil)).Elem()
}

func (i AzureBackupParamsResponseArgs) ToAzureBackupParamsResponseOutput() AzureBackupParamsResponseOutput {
	return i.ToAzureBackupParamsResponseOutputWithContext(context.Background())
}

func (i AzureBackupParamsResponseArgs) ToAzureBackupParamsResponseOutputWithContext(ctx context.Context) AzureBackupParamsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsResponseOutput)
}

func (i AzureBackupParamsResponseArgs) ToAzureBackupParamsResponsePtrOutput() AzureBackupParamsResponsePtrOutput {
	return i.ToAzureBackupParamsResponsePtrOutputWithContext(context.Background())
}

func (i AzureBackupParamsResponseArgs) ToAzureBackupParamsResponsePtrOutputWithContext(ctx context.Context) AzureBackupParamsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsResponseOutput).ToAzureBackupParamsResponsePtrOutputWithContext(ctx)
}

// AzureBackupParamsResponsePtrInput is an input type that accepts AzureBackupParamsResponseArgs, AzureBackupParamsResponsePtr and AzureBackupParamsResponsePtrOutput values.
// You can construct a concrete instance of `AzureBackupParamsResponsePtrInput` via:
//
//          AzureBackupParamsResponseArgs{...}
//
//  or:
//
//          nil
type AzureBackupParamsResponsePtrInput interface {
	pulumi.Input

	ToAzureBackupParamsResponsePtrOutput() AzureBackupParamsResponsePtrOutput
	ToAzureBackupParamsResponsePtrOutputWithContext(context.Context) AzureBackupParamsResponsePtrOutput
}

type azureBackupParamsResponsePtrType AzureBackupParamsResponseArgs

func AzureBackupParamsResponsePtr(v *AzureBackupParamsResponseArgs) AzureBackupParamsResponsePtrInput {
	return (*azureBackupParamsResponsePtrType)(v)
}

func (*azureBackupParamsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupParamsResponse)(nil)).Elem()
}

func (i *azureBackupParamsResponsePtrType) ToAzureBackupParamsResponsePtrOutput() AzureBackupParamsResponsePtrOutput {
	return i.ToAzureBackupParamsResponsePtrOutputWithContext(context.Background())
}

func (i *azureBackupParamsResponsePtrType) ToAzureBackupParamsResponsePtrOutputWithContext(ctx context.Context) AzureBackupParamsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupParamsResponsePtrOutput)
}

// Azure backup parameters
type AzureBackupParamsResponseOutput struct{ *pulumi.OutputState }

func (AzureBackupParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupParamsResponse)(nil)).Elem()
}

func (o AzureBackupParamsResponseOutput) ToAzureBackupParamsResponseOutput() AzureBackupParamsResponseOutput {
	return o
}

func (o AzureBackupParamsResponseOutput) ToAzureBackupParamsResponseOutputWithContext(ctx context.Context) AzureBackupParamsResponseOutput {
	return o
}

func (o AzureBackupParamsResponseOutput) ToAzureBackupParamsResponsePtrOutput() AzureBackupParamsResponsePtrOutput {
	return o.ToAzureBackupParamsResponsePtrOutputWithContext(context.Background())
}

func (o AzureBackupParamsResponseOutput) ToAzureBackupParamsResponsePtrOutputWithContext(ctx context.Context) AzureBackupParamsResponsePtrOutput {
	return o.ApplyT(func(v AzureBackupParamsResponse) *AzureBackupParamsResponse {
		return &v
	}).(AzureBackupParamsResponsePtrOutput)
}

// BackupType ; Full/Incremental etc
func (o AzureBackupParamsResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupParamsResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureBackupParams'.
func (o AzureBackupParamsResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupParamsResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

type AzureBackupParamsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBackupParamsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupParamsResponse)(nil)).Elem()
}

func (o AzureBackupParamsResponsePtrOutput) ToAzureBackupParamsResponsePtrOutput() AzureBackupParamsResponsePtrOutput {
	return o
}

func (o AzureBackupParamsResponsePtrOutput) ToAzureBackupParamsResponsePtrOutputWithContext(ctx context.Context) AzureBackupParamsResponsePtrOutput {
	return o
}

func (o AzureBackupParamsResponsePtrOutput) Elem() AzureBackupParamsResponseOutput {
	return o.ApplyT(func(v *AzureBackupParamsResponse) AzureBackupParamsResponse { return *v }).(AzureBackupParamsResponseOutput)
}

// BackupType ; Full/Incremental etc
func (o AzureBackupParamsResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupParamsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureBackupParams'.
func (o AzureBackupParamsResponsePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupParamsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Azure backup rule
type AzureBackupRule struct {
	// BackupParameters base
	BackupParameters *AzureBackupParams `pulumi:"backupParameters"`
	// DataStoreInfo base
	DataStore DataStoreInfoBase `pulumi:"dataStore"`
	Name      string            `pulumi:"name"`
	// Expected value is 'AzureBackupRule'.
	ObjectType string `pulumi:"objectType"`
	// Trigger context
	Trigger interface{} `pulumi:"trigger"`
}

// AzureBackupRuleInput is an input type that accepts AzureBackupRuleArgs and AzureBackupRuleOutput values.
// You can construct a concrete instance of `AzureBackupRuleInput` via:
//
//          AzureBackupRuleArgs{...}
type AzureBackupRuleInput interface {
	pulumi.Input

	ToAzureBackupRuleOutput() AzureBackupRuleOutput
	ToAzureBackupRuleOutputWithContext(context.Context) AzureBackupRuleOutput
}

// Azure backup rule
type AzureBackupRuleArgs struct {
	// BackupParameters base
	BackupParameters AzureBackupParamsPtrInput `pulumi:"backupParameters"`
	// DataStoreInfo base
	DataStore DataStoreInfoBaseInput `pulumi:"dataStore"`
	Name      pulumi.StringInput     `pulumi:"name"`
	// Expected value is 'AzureBackupRule'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Trigger context
	Trigger pulumi.Input `pulumi:"trigger"`
}

func (AzureBackupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupRule)(nil)).Elem()
}

func (i AzureBackupRuleArgs) ToAzureBackupRuleOutput() AzureBackupRuleOutput {
	return i.ToAzureBackupRuleOutputWithContext(context.Background())
}

func (i AzureBackupRuleArgs) ToAzureBackupRuleOutputWithContext(ctx context.Context) AzureBackupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupRuleOutput)
}

// Azure backup rule
type AzureBackupRuleOutput struct{ *pulumi.OutputState }

func (AzureBackupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupRule)(nil)).Elem()
}

func (o AzureBackupRuleOutput) ToAzureBackupRuleOutput() AzureBackupRuleOutput {
	return o
}

func (o AzureBackupRuleOutput) ToAzureBackupRuleOutputWithContext(ctx context.Context) AzureBackupRuleOutput {
	return o
}

// BackupParameters base
func (o AzureBackupRuleOutput) BackupParameters() AzureBackupParamsPtrOutput {
	return o.ApplyT(func(v AzureBackupRule) *AzureBackupParams { return v.BackupParameters }).(AzureBackupParamsPtrOutput)
}

// DataStoreInfo base
func (o AzureBackupRuleOutput) DataStore() DataStoreInfoBaseOutput {
	return o.ApplyT(func(v AzureBackupRule) DataStoreInfoBase { return v.DataStore }).(DataStoreInfoBaseOutput)
}

func (o AzureBackupRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupRule) string { return v.Name }).(pulumi.StringOutput)
}

// Expected value is 'AzureBackupRule'.
func (o AzureBackupRuleOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupRule) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Trigger context
func (o AzureBackupRuleOutput) Trigger() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBackupRule) interface{} { return v.Trigger }).(pulumi.AnyOutput)
}

// Azure backup rule
type AzureBackupRuleResponse struct {
	// BackupParameters base
	BackupParameters *AzureBackupParamsResponse `pulumi:"backupParameters"`
	// DataStoreInfo base
	DataStore DataStoreInfoBaseResponse `pulumi:"dataStore"`
	Name      string                    `pulumi:"name"`
	// Expected value is 'AzureBackupRule'.
	ObjectType string `pulumi:"objectType"`
	// Trigger context
	Trigger interface{} `pulumi:"trigger"`
}

// AzureBackupRuleResponseInput is an input type that accepts AzureBackupRuleResponseArgs and AzureBackupRuleResponseOutput values.
// You can construct a concrete instance of `AzureBackupRuleResponseInput` via:
//
//          AzureBackupRuleResponseArgs{...}
type AzureBackupRuleResponseInput interface {
	pulumi.Input

	ToAzureBackupRuleResponseOutput() AzureBackupRuleResponseOutput
	ToAzureBackupRuleResponseOutputWithContext(context.Context) AzureBackupRuleResponseOutput
}

// Azure backup rule
type AzureBackupRuleResponseArgs struct {
	// BackupParameters base
	BackupParameters AzureBackupParamsResponsePtrInput `pulumi:"backupParameters"`
	// DataStoreInfo base
	DataStore DataStoreInfoBaseResponseInput `pulumi:"dataStore"`
	Name      pulumi.StringInput             `pulumi:"name"`
	// Expected value is 'AzureBackupRule'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Trigger context
	Trigger pulumi.Input `pulumi:"trigger"`
}

func (AzureBackupRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupRuleResponse)(nil)).Elem()
}

func (i AzureBackupRuleResponseArgs) ToAzureBackupRuleResponseOutput() AzureBackupRuleResponseOutput {
	return i.ToAzureBackupRuleResponseOutputWithContext(context.Background())
}

func (i AzureBackupRuleResponseArgs) ToAzureBackupRuleResponseOutputWithContext(ctx context.Context) AzureBackupRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupRuleResponseOutput)
}

// Azure backup rule
type AzureBackupRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureBackupRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupRuleResponse)(nil)).Elem()
}

func (o AzureBackupRuleResponseOutput) ToAzureBackupRuleResponseOutput() AzureBackupRuleResponseOutput {
	return o
}

func (o AzureBackupRuleResponseOutput) ToAzureBackupRuleResponseOutputWithContext(ctx context.Context) AzureBackupRuleResponseOutput {
	return o
}

// BackupParameters base
func (o AzureBackupRuleResponseOutput) BackupParameters() AzureBackupParamsResponsePtrOutput {
	return o.ApplyT(func(v AzureBackupRuleResponse) *AzureBackupParamsResponse { return v.BackupParameters }).(AzureBackupParamsResponsePtrOutput)
}

// DataStoreInfo base
func (o AzureBackupRuleResponseOutput) DataStore() DataStoreInfoBaseResponseOutput {
	return o.ApplyT(func(v AzureBackupRuleResponse) DataStoreInfoBaseResponse { return v.DataStore }).(DataStoreInfoBaseResponseOutput)
}

func (o AzureBackupRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Expected value is 'AzureBackupRule'.
func (o AzureBackupRuleResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupRuleResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Trigger context
func (o AzureBackupRuleResponseOutput) Trigger() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureBackupRuleResponse) interface{} { return v.Trigger }).(pulumi.AnyOutput)
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParameters struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType string `pulumi:"dataStoreType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureOperationalStoreParameters'.
	ObjectType string `pulumi:"objectType"`
	// Gets or sets the Snapshot Resource Group Uri.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
}

// AzureOperationalStoreParametersInput is an input type that accepts AzureOperationalStoreParametersArgs and AzureOperationalStoreParametersOutput values.
// You can construct a concrete instance of `AzureOperationalStoreParametersInput` via:
//
//          AzureOperationalStoreParametersArgs{...}
type AzureOperationalStoreParametersInput interface {
	pulumi.Input

	ToAzureOperationalStoreParametersOutput() AzureOperationalStoreParametersOutput
	ToAzureOperationalStoreParametersOutputWithContext(context.Context) AzureOperationalStoreParametersOutput
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParametersArgs struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType pulumi.StringInput `pulumi:"dataStoreType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureOperationalStoreParameters'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Gets or sets the Snapshot Resource Group Uri.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
}

func (AzureOperationalStoreParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOperationalStoreParameters)(nil)).Elem()
}

func (i AzureOperationalStoreParametersArgs) ToAzureOperationalStoreParametersOutput() AzureOperationalStoreParametersOutput {
	return i.ToAzureOperationalStoreParametersOutputWithContext(context.Background())
}

func (i AzureOperationalStoreParametersArgs) ToAzureOperationalStoreParametersOutputWithContext(ctx context.Context) AzureOperationalStoreParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOperationalStoreParametersOutput)
}

// AzureOperationalStoreParametersArrayInput is an input type that accepts AzureOperationalStoreParametersArray and AzureOperationalStoreParametersArrayOutput values.
// You can construct a concrete instance of `AzureOperationalStoreParametersArrayInput` via:
//
//          AzureOperationalStoreParametersArray{ AzureOperationalStoreParametersArgs{...} }
type AzureOperationalStoreParametersArrayInput interface {
	pulumi.Input

	ToAzureOperationalStoreParametersArrayOutput() AzureOperationalStoreParametersArrayOutput
	ToAzureOperationalStoreParametersArrayOutputWithContext(context.Context) AzureOperationalStoreParametersArrayOutput
}

type AzureOperationalStoreParametersArray []AzureOperationalStoreParametersInput

func (AzureOperationalStoreParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureOperationalStoreParameters)(nil)).Elem()
}

func (i AzureOperationalStoreParametersArray) ToAzureOperationalStoreParametersArrayOutput() AzureOperationalStoreParametersArrayOutput {
	return i.ToAzureOperationalStoreParametersArrayOutputWithContext(context.Background())
}

func (i AzureOperationalStoreParametersArray) ToAzureOperationalStoreParametersArrayOutputWithContext(ctx context.Context) AzureOperationalStoreParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOperationalStoreParametersArrayOutput)
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParametersOutput struct{ *pulumi.OutputState }

func (AzureOperationalStoreParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOperationalStoreParameters)(nil)).Elem()
}

func (o AzureOperationalStoreParametersOutput) ToAzureOperationalStoreParametersOutput() AzureOperationalStoreParametersOutput {
	return o
}

func (o AzureOperationalStoreParametersOutput) ToAzureOperationalStoreParametersOutputWithContext(ctx context.Context) AzureOperationalStoreParametersOutput {
	return o
}

// type of datastore; Operational/Vault/Archive
func (o AzureOperationalStoreParametersOutput) DataStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOperationalStoreParameters) string { return v.DataStoreType }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureOperationalStoreParameters'.
func (o AzureOperationalStoreParametersOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOperationalStoreParameters) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Gets or sets the Snapshot Resource Group Uri.
func (o AzureOperationalStoreParametersOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureOperationalStoreParameters) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

type AzureOperationalStoreParametersArrayOutput struct{ *pulumi.OutputState }

func (AzureOperationalStoreParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureOperationalStoreParameters)(nil)).Elem()
}

func (o AzureOperationalStoreParametersArrayOutput) ToAzureOperationalStoreParametersArrayOutput() AzureOperationalStoreParametersArrayOutput {
	return o
}

func (o AzureOperationalStoreParametersArrayOutput) ToAzureOperationalStoreParametersArrayOutputWithContext(ctx context.Context) AzureOperationalStoreParametersArrayOutput {
	return o
}

func (o AzureOperationalStoreParametersArrayOutput) Index(i pulumi.IntInput) AzureOperationalStoreParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureOperationalStoreParameters {
		return vs[0].([]AzureOperationalStoreParameters)[vs[1].(int)]
	}).(AzureOperationalStoreParametersOutput)
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParametersResponse struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType string `pulumi:"dataStoreType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureOperationalStoreParameters'.
	ObjectType string `pulumi:"objectType"`
	// Gets or sets the Snapshot Resource Group Uri.
	ResourceGroupId *string `pulumi:"resourceGroupId"`
}

// AzureOperationalStoreParametersResponseInput is an input type that accepts AzureOperationalStoreParametersResponseArgs and AzureOperationalStoreParametersResponseOutput values.
// You can construct a concrete instance of `AzureOperationalStoreParametersResponseInput` via:
//
//          AzureOperationalStoreParametersResponseArgs{...}
type AzureOperationalStoreParametersResponseInput interface {
	pulumi.Input

	ToAzureOperationalStoreParametersResponseOutput() AzureOperationalStoreParametersResponseOutput
	ToAzureOperationalStoreParametersResponseOutputWithContext(context.Context) AzureOperationalStoreParametersResponseOutput
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParametersResponseArgs struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType pulumi.StringInput `pulumi:"dataStoreType"`
	// Type of the specific object - used for deserializing
	// Expected value is 'AzureOperationalStoreParameters'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Gets or sets the Snapshot Resource Group Uri.
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
}

func (AzureOperationalStoreParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOperationalStoreParametersResponse)(nil)).Elem()
}

func (i AzureOperationalStoreParametersResponseArgs) ToAzureOperationalStoreParametersResponseOutput() AzureOperationalStoreParametersResponseOutput {
	return i.ToAzureOperationalStoreParametersResponseOutputWithContext(context.Background())
}

func (i AzureOperationalStoreParametersResponseArgs) ToAzureOperationalStoreParametersResponseOutputWithContext(ctx context.Context) AzureOperationalStoreParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOperationalStoreParametersResponseOutput)
}

// AzureOperationalStoreParametersResponseArrayInput is an input type that accepts AzureOperationalStoreParametersResponseArray and AzureOperationalStoreParametersResponseArrayOutput values.
// You can construct a concrete instance of `AzureOperationalStoreParametersResponseArrayInput` via:
//
//          AzureOperationalStoreParametersResponseArray{ AzureOperationalStoreParametersResponseArgs{...} }
type AzureOperationalStoreParametersResponseArrayInput interface {
	pulumi.Input

	ToAzureOperationalStoreParametersResponseArrayOutput() AzureOperationalStoreParametersResponseArrayOutput
	ToAzureOperationalStoreParametersResponseArrayOutputWithContext(context.Context) AzureOperationalStoreParametersResponseArrayOutput
}

type AzureOperationalStoreParametersResponseArray []AzureOperationalStoreParametersResponseInput

func (AzureOperationalStoreParametersResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureOperationalStoreParametersResponse)(nil)).Elem()
}

func (i AzureOperationalStoreParametersResponseArray) ToAzureOperationalStoreParametersResponseArrayOutput() AzureOperationalStoreParametersResponseArrayOutput {
	return i.ToAzureOperationalStoreParametersResponseArrayOutputWithContext(context.Background())
}

func (i AzureOperationalStoreParametersResponseArray) ToAzureOperationalStoreParametersResponseArrayOutputWithContext(ctx context.Context) AzureOperationalStoreParametersResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureOperationalStoreParametersResponseArrayOutput)
}

// Parameters for Operational-Tier DataStore
type AzureOperationalStoreParametersResponseOutput struct{ *pulumi.OutputState }

func (AzureOperationalStoreParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureOperationalStoreParametersResponse)(nil)).Elem()
}

func (o AzureOperationalStoreParametersResponseOutput) ToAzureOperationalStoreParametersResponseOutput() AzureOperationalStoreParametersResponseOutput {
	return o
}

func (o AzureOperationalStoreParametersResponseOutput) ToAzureOperationalStoreParametersResponseOutputWithContext(ctx context.Context) AzureOperationalStoreParametersResponseOutput {
	return o
}

// type of datastore; Operational/Vault/Archive
func (o AzureOperationalStoreParametersResponseOutput) DataStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOperationalStoreParametersResponse) string { return v.DataStoreType }).(pulumi.StringOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'AzureOperationalStoreParameters'.
func (o AzureOperationalStoreParametersResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureOperationalStoreParametersResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Gets or sets the Snapshot Resource Group Uri.
func (o AzureOperationalStoreParametersResponseOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureOperationalStoreParametersResponse) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

type AzureOperationalStoreParametersResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureOperationalStoreParametersResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureOperationalStoreParametersResponse)(nil)).Elem()
}

func (o AzureOperationalStoreParametersResponseArrayOutput) ToAzureOperationalStoreParametersResponseArrayOutput() AzureOperationalStoreParametersResponseArrayOutput {
	return o
}

func (o AzureOperationalStoreParametersResponseArrayOutput) ToAzureOperationalStoreParametersResponseArrayOutputWithContext(ctx context.Context) AzureOperationalStoreParametersResponseArrayOutput {
	return o
}

func (o AzureOperationalStoreParametersResponseArrayOutput) Index(i pulumi.IntInput) AzureOperationalStoreParametersResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureOperationalStoreParametersResponse {
		return vs[0].([]AzureOperationalStoreParametersResponse)[vs[1].(int)]
	}).(AzureOperationalStoreParametersResponseOutput)
}

// Azure retention rule
type AzureRetentionRule struct {
	IsDefault  *bool             `pulumi:"isDefault"`
	Lifecycles []SourceLifeCycle `pulumi:"lifecycles"`
	Name       string            `pulumi:"name"`
	// Expected value is 'AzureRetentionRule'.
	ObjectType string `pulumi:"objectType"`
}

// AzureRetentionRuleInput is an input type that accepts AzureRetentionRuleArgs and AzureRetentionRuleOutput values.
// You can construct a concrete instance of `AzureRetentionRuleInput` via:
//
//          AzureRetentionRuleArgs{...}
type AzureRetentionRuleInput interface {
	pulumi.Input

	ToAzureRetentionRuleOutput() AzureRetentionRuleOutput
	ToAzureRetentionRuleOutputWithContext(context.Context) AzureRetentionRuleOutput
}

// Azure retention rule
type AzureRetentionRuleArgs struct {
	IsDefault  pulumi.BoolPtrInput       `pulumi:"isDefault"`
	Lifecycles SourceLifeCycleArrayInput `pulumi:"lifecycles"`
	Name       pulumi.StringInput        `pulumi:"name"`
	// Expected value is 'AzureRetentionRule'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AzureRetentionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRetentionRule)(nil)).Elem()
}

func (i AzureRetentionRuleArgs) ToAzureRetentionRuleOutput() AzureRetentionRuleOutput {
	return i.ToAzureRetentionRuleOutputWithContext(context.Background())
}

func (i AzureRetentionRuleArgs) ToAzureRetentionRuleOutputWithContext(ctx context.Context) AzureRetentionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRetentionRuleOutput)
}

// Azure retention rule
type AzureRetentionRuleOutput struct{ *pulumi.OutputState }

func (AzureRetentionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRetentionRule)(nil)).Elem()
}

func (o AzureRetentionRuleOutput) ToAzureRetentionRuleOutput() AzureRetentionRuleOutput {
	return o
}

func (o AzureRetentionRuleOutput) ToAzureRetentionRuleOutputWithContext(ctx context.Context) AzureRetentionRuleOutput {
	return o
}

func (o AzureRetentionRuleOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureRetentionRule) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

func (o AzureRetentionRuleOutput) Lifecycles() SourceLifeCycleArrayOutput {
	return o.ApplyT(func(v AzureRetentionRule) []SourceLifeCycle { return v.Lifecycles }).(SourceLifeCycleArrayOutput)
}

func (o AzureRetentionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRetentionRule) string { return v.Name }).(pulumi.StringOutput)
}

// Expected value is 'AzureRetentionRule'.
func (o AzureRetentionRuleOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRetentionRule) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Azure retention rule
type AzureRetentionRuleResponse struct {
	IsDefault  *bool                     `pulumi:"isDefault"`
	Lifecycles []SourceLifeCycleResponse `pulumi:"lifecycles"`
	Name       string                    `pulumi:"name"`
	// Expected value is 'AzureRetentionRule'.
	ObjectType string `pulumi:"objectType"`
}

// AzureRetentionRuleResponseInput is an input type that accepts AzureRetentionRuleResponseArgs and AzureRetentionRuleResponseOutput values.
// You can construct a concrete instance of `AzureRetentionRuleResponseInput` via:
//
//          AzureRetentionRuleResponseArgs{...}
type AzureRetentionRuleResponseInput interface {
	pulumi.Input

	ToAzureRetentionRuleResponseOutput() AzureRetentionRuleResponseOutput
	ToAzureRetentionRuleResponseOutputWithContext(context.Context) AzureRetentionRuleResponseOutput
}

// Azure retention rule
type AzureRetentionRuleResponseArgs struct {
	IsDefault  pulumi.BoolPtrInput               `pulumi:"isDefault"`
	Lifecycles SourceLifeCycleResponseArrayInput `pulumi:"lifecycles"`
	Name       pulumi.StringInput                `pulumi:"name"`
	// Expected value is 'AzureRetentionRule'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (AzureRetentionRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRetentionRuleResponse)(nil)).Elem()
}

func (i AzureRetentionRuleResponseArgs) ToAzureRetentionRuleResponseOutput() AzureRetentionRuleResponseOutput {
	return i.ToAzureRetentionRuleResponseOutputWithContext(context.Background())
}

func (i AzureRetentionRuleResponseArgs) ToAzureRetentionRuleResponseOutputWithContext(ctx context.Context) AzureRetentionRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRetentionRuleResponseOutput)
}

// Azure retention rule
type AzureRetentionRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureRetentionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRetentionRuleResponse)(nil)).Elem()
}

func (o AzureRetentionRuleResponseOutput) ToAzureRetentionRuleResponseOutput() AzureRetentionRuleResponseOutput {
	return o
}

func (o AzureRetentionRuleResponseOutput) ToAzureRetentionRuleResponseOutputWithContext(ctx context.Context) AzureRetentionRuleResponseOutput {
	return o
}

func (o AzureRetentionRuleResponseOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureRetentionRuleResponse) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

func (o AzureRetentionRuleResponseOutput) Lifecycles() SourceLifeCycleResponseArrayOutput {
	return o.ApplyT(func(v AzureRetentionRuleResponse) []SourceLifeCycleResponse { return v.Lifecycles }).(SourceLifeCycleResponseArrayOutput)
}

func (o AzureRetentionRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRetentionRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Expected value is 'AzureRetentionRule'.
func (o AzureRetentionRuleResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRetentionRuleResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Backup Instance
type BackupInstanceType struct {
	// Gets or sets the data source information.
	DataSourceInfo Datasource `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo *DatasourceSet `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	ObjectType   string  `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfo `pulumi:"policyInfo"`
}

// BackupInstanceTypeInput is an input type that accepts BackupInstanceTypeArgs and BackupInstanceTypeOutput values.
// You can construct a concrete instance of `BackupInstanceTypeInput` via:
//
//          BackupInstanceTypeArgs{...}
type BackupInstanceTypeInput interface {
	pulumi.Input

	ToBackupInstanceTypeOutput() BackupInstanceTypeOutput
	ToBackupInstanceTypeOutputWithContext(context.Context) BackupInstanceTypeOutput
}

// Backup Instance
type BackupInstanceTypeArgs struct {
	// Gets or sets the data source information.
	DataSourceInfo DatasourceInput `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo DatasourceSetPtrInput `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	ObjectType   pulumi.StringInput    `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoInput `pulumi:"policyInfo"`
}

func (BackupInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceType)(nil)).Elem()
}

func (i BackupInstanceTypeArgs) ToBackupInstanceTypeOutput() BackupInstanceTypeOutput {
	return i.ToBackupInstanceTypeOutputWithContext(context.Background())
}

func (i BackupInstanceTypeArgs) ToBackupInstanceTypeOutputWithContext(ctx context.Context) BackupInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceTypeOutput)
}

func (i BackupInstanceTypeArgs) ToBackupInstanceTypePtrOutput() BackupInstanceTypePtrOutput {
	return i.ToBackupInstanceTypePtrOutputWithContext(context.Background())
}

func (i BackupInstanceTypeArgs) ToBackupInstanceTypePtrOutputWithContext(ctx context.Context) BackupInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceTypeOutput).ToBackupInstanceTypePtrOutputWithContext(ctx)
}

// BackupInstanceTypePtrInput is an input type that accepts BackupInstanceTypeArgs, BackupInstanceTypePtr and BackupInstanceTypePtrOutput values.
// You can construct a concrete instance of `BackupInstanceTypePtrInput` via:
//
//          BackupInstanceTypeArgs{...}
//
//  or:
//
//          nil
type BackupInstanceTypePtrInput interface {
	pulumi.Input

	ToBackupInstanceTypePtrOutput() BackupInstanceTypePtrOutput
	ToBackupInstanceTypePtrOutputWithContext(context.Context) BackupInstanceTypePtrOutput
}

type backupInstanceTypePtrType BackupInstanceTypeArgs

func BackupInstanceTypePtr(v *BackupInstanceTypeArgs) BackupInstanceTypePtrInput {
	return (*backupInstanceTypePtrType)(v)
}

func (*backupInstanceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstanceType)(nil)).Elem()
}

func (i *backupInstanceTypePtrType) ToBackupInstanceTypePtrOutput() BackupInstanceTypePtrOutput {
	return i.ToBackupInstanceTypePtrOutputWithContext(context.Background())
}

func (i *backupInstanceTypePtrType) ToBackupInstanceTypePtrOutputWithContext(ctx context.Context) BackupInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceTypePtrOutput)
}

// Backup Instance
type BackupInstanceTypeOutput struct{ *pulumi.OutputState }

func (BackupInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceType)(nil)).Elem()
}

func (o BackupInstanceTypeOutput) ToBackupInstanceTypeOutput() BackupInstanceTypeOutput {
	return o
}

func (o BackupInstanceTypeOutput) ToBackupInstanceTypeOutputWithContext(ctx context.Context) BackupInstanceTypeOutput {
	return o
}

func (o BackupInstanceTypeOutput) ToBackupInstanceTypePtrOutput() BackupInstanceTypePtrOutput {
	return o.ToBackupInstanceTypePtrOutputWithContext(context.Background())
}

func (o BackupInstanceTypeOutput) ToBackupInstanceTypePtrOutputWithContext(ctx context.Context) BackupInstanceTypePtrOutput {
	return o.ApplyT(func(v BackupInstanceType) *BackupInstanceType {
		return &v
	}).(BackupInstanceTypePtrOutput)
}

// Gets or sets the data source information.
func (o BackupInstanceTypeOutput) DataSourceInfo() DatasourceOutput {
	return o.ApplyT(func(v BackupInstanceType) Datasource { return v.DataSourceInfo }).(DatasourceOutput)
}

// Gets or sets the data source set information.
func (o BackupInstanceTypeOutput) DataSourceSetInfo() DatasourceSetPtrOutput {
	return o.ApplyT(func(v BackupInstanceType) *DatasourceSet { return v.DataSourceSetInfo }).(DatasourceSetPtrOutput)
}

// Gets or sets the Backup Instance friendly name.
func (o BackupInstanceTypeOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceType) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

func (o BackupInstanceTypeOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInstanceType) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Gets or sets the policy information.
func (o BackupInstanceTypeOutput) PolicyInfo() PolicyInfoOutput {
	return o.ApplyT(func(v BackupInstanceType) PolicyInfo { return v.PolicyInfo }).(PolicyInfoOutput)
}

type BackupInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (BackupInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstanceType)(nil)).Elem()
}

func (o BackupInstanceTypePtrOutput) ToBackupInstanceTypePtrOutput() BackupInstanceTypePtrOutput {
	return o
}

func (o BackupInstanceTypePtrOutput) ToBackupInstanceTypePtrOutputWithContext(ctx context.Context) BackupInstanceTypePtrOutput {
	return o
}

func (o BackupInstanceTypePtrOutput) Elem() BackupInstanceTypeOutput {
	return o.ApplyT(func(v *BackupInstanceType) BackupInstanceType { return *v }).(BackupInstanceTypeOutput)
}

// Gets or sets the data source information.
func (o BackupInstanceTypePtrOutput) DataSourceInfo() DatasourcePtrOutput {
	return o.ApplyT(func(v *BackupInstanceType) *Datasource {
		if v == nil {
			return nil
		}
		return &v.DataSourceInfo
	}).(DatasourcePtrOutput)
}

// Gets or sets the data source set information.
func (o BackupInstanceTypePtrOutput) DataSourceSetInfo() DatasourceSetPtrOutput {
	return o.ApplyT(func(v *BackupInstanceType) *DatasourceSet {
		if v == nil {
			return nil
		}
		return v.DataSourceSetInfo
	}).(DatasourceSetPtrOutput)
}

// Gets or sets the Backup Instance friendly name.
func (o BackupInstanceTypePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceType) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

func (o BackupInstanceTypePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceType) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the policy information.
func (o BackupInstanceTypePtrOutput) PolicyInfo() PolicyInfoPtrOutput {
	return o.ApplyT(func(v *BackupInstanceType) *PolicyInfo {
		if v == nil {
			return nil
		}
		return &v.PolicyInfo
	}).(PolicyInfoPtrOutput)
}

// Backup Instance
type BackupInstanceResponse struct {
	// Specifies the current protection state of the resource
	CurrentProtectionState string `pulumi:"currentProtectionState"`
	// Gets or sets the data source information.
	DataSourceInfo DatasourceResponse `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo *DatasourceSetResponse `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	ObjectType   string  `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoResponse `pulumi:"policyInfo"`
	// Specifies the protection error of the resource
	ProtectionErrorDetails UserFacingErrorResponse `pulumi:"protectionErrorDetails"`
	// Specifies the protection status of the resource
	ProtectionStatus ProtectionStatusDetailsResponse `pulumi:"protectionStatus"`
	// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
	ProvisioningState string `pulumi:"provisioningState"`
}

// BackupInstanceResponseInput is an input type that accepts BackupInstanceResponseArgs and BackupInstanceResponseOutput values.
// You can construct a concrete instance of `BackupInstanceResponseInput` via:
//
//          BackupInstanceResponseArgs{...}
type BackupInstanceResponseInput interface {
	pulumi.Input

	ToBackupInstanceResponseOutput() BackupInstanceResponseOutput
	ToBackupInstanceResponseOutputWithContext(context.Context) BackupInstanceResponseOutput
}

// Backup Instance
type BackupInstanceResponseArgs struct {
	// Specifies the current protection state of the resource
	CurrentProtectionState pulumi.StringInput `pulumi:"currentProtectionState"`
	// Gets or sets the data source information.
	DataSourceInfo DatasourceResponseInput `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo DatasourceSetResponsePtrInput `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	ObjectType   pulumi.StringInput    `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoResponseInput `pulumi:"policyInfo"`
	// Specifies the protection error of the resource
	ProtectionErrorDetails UserFacingErrorResponseInput `pulumi:"protectionErrorDetails"`
	// Specifies the protection status of the resource
	ProtectionStatus ProtectionStatusDetailsResponseInput `pulumi:"protectionStatus"`
	// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (BackupInstanceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceResponse)(nil)).Elem()
}

func (i BackupInstanceResponseArgs) ToBackupInstanceResponseOutput() BackupInstanceResponseOutput {
	return i.ToBackupInstanceResponseOutputWithContext(context.Background())
}

func (i BackupInstanceResponseArgs) ToBackupInstanceResponseOutputWithContext(ctx context.Context) BackupInstanceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceResponseOutput)
}

func (i BackupInstanceResponseArgs) ToBackupInstanceResponsePtrOutput() BackupInstanceResponsePtrOutput {
	return i.ToBackupInstanceResponsePtrOutputWithContext(context.Background())
}

func (i BackupInstanceResponseArgs) ToBackupInstanceResponsePtrOutputWithContext(ctx context.Context) BackupInstanceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceResponseOutput).ToBackupInstanceResponsePtrOutputWithContext(ctx)
}

// BackupInstanceResponsePtrInput is an input type that accepts BackupInstanceResponseArgs, BackupInstanceResponsePtr and BackupInstanceResponsePtrOutput values.
// You can construct a concrete instance of `BackupInstanceResponsePtrInput` via:
//
//          BackupInstanceResponseArgs{...}
//
//  or:
//
//          nil
type BackupInstanceResponsePtrInput interface {
	pulumi.Input

	ToBackupInstanceResponsePtrOutput() BackupInstanceResponsePtrOutput
	ToBackupInstanceResponsePtrOutputWithContext(context.Context) BackupInstanceResponsePtrOutput
}

type backupInstanceResponsePtrType BackupInstanceResponseArgs

func BackupInstanceResponsePtr(v *BackupInstanceResponseArgs) BackupInstanceResponsePtrInput {
	return (*backupInstanceResponsePtrType)(v)
}

func (*backupInstanceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstanceResponse)(nil)).Elem()
}

func (i *backupInstanceResponsePtrType) ToBackupInstanceResponsePtrOutput() BackupInstanceResponsePtrOutput {
	return i.ToBackupInstanceResponsePtrOutputWithContext(context.Background())
}

func (i *backupInstanceResponsePtrType) ToBackupInstanceResponsePtrOutputWithContext(ctx context.Context) BackupInstanceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceResponsePtrOutput)
}

// Backup Instance
type BackupInstanceResponseOutput struct{ *pulumi.OutputState }

func (BackupInstanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceResponse)(nil)).Elem()
}

func (o BackupInstanceResponseOutput) ToBackupInstanceResponseOutput() BackupInstanceResponseOutput {
	return o
}

func (o BackupInstanceResponseOutput) ToBackupInstanceResponseOutputWithContext(ctx context.Context) BackupInstanceResponseOutput {
	return o
}

func (o BackupInstanceResponseOutput) ToBackupInstanceResponsePtrOutput() BackupInstanceResponsePtrOutput {
	return o.ToBackupInstanceResponsePtrOutputWithContext(context.Background())
}

func (o BackupInstanceResponseOutput) ToBackupInstanceResponsePtrOutputWithContext(ctx context.Context) BackupInstanceResponsePtrOutput {
	return o.ApplyT(func(v BackupInstanceResponse) *BackupInstanceResponse {
		return &v
	}).(BackupInstanceResponsePtrOutput)
}

// Specifies the current protection state of the resource
func (o BackupInstanceResponseOutput) CurrentProtectionState() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInstanceResponse) string { return v.CurrentProtectionState }).(pulumi.StringOutput)
}

// Gets or sets the data source information.
func (o BackupInstanceResponseOutput) DataSourceInfo() DatasourceResponseOutput {
	return o.ApplyT(func(v BackupInstanceResponse) DatasourceResponse { return v.DataSourceInfo }).(DatasourceResponseOutput)
}

// Gets or sets the data source set information.
func (o BackupInstanceResponseOutput) DataSourceSetInfo() DatasourceSetResponsePtrOutput {
	return o.ApplyT(func(v BackupInstanceResponse) *DatasourceSetResponse { return v.DataSourceSetInfo }).(DatasourceSetResponsePtrOutput)
}

// Gets or sets the Backup Instance friendly name.
func (o BackupInstanceResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

func (o BackupInstanceResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInstanceResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Gets or sets the policy information.
func (o BackupInstanceResponseOutput) PolicyInfo() PolicyInfoResponseOutput {
	return o.ApplyT(func(v BackupInstanceResponse) PolicyInfoResponse { return v.PolicyInfo }).(PolicyInfoResponseOutput)
}

// Specifies the protection error of the resource
func (o BackupInstanceResponseOutput) ProtectionErrorDetails() UserFacingErrorResponseOutput {
	return o.ApplyT(func(v BackupInstanceResponse) UserFacingErrorResponse { return v.ProtectionErrorDetails }).(UserFacingErrorResponseOutput)
}

// Specifies the protection status of the resource
func (o BackupInstanceResponseOutput) ProtectionStatus() ProtectionStatusDetailsResponseOutput {
	return o.ApplyT(func(v BackupInstanceResponse) ProtectionStatusDetailsResponse { return v.ProtectionStatus }).(ProtectionStatusDetailsResponseOutput)
}

// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
func (o BackupInstanceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInstanceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type BackupInstanceResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupInstanceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupInstanceResponse)(nil)).Elem()
}

func (o BackupInstanceResponsePtrOutput) ToBackupInstanceResponsePtrOutput() BackupInstanceResponsePtrOutput {
	return o
}

func (o BackupInstanceResponsePtrOutput) ToBackupInstanceResponsePtrOutputWithContext(ctx context.Context) BackupInstanceResponsePtrOutput {
	return o
}

func (o BackupInstanceResponsePtrOutput) Elem() BackupInstanceResponseOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) BackupInstanceResponse { return *v }).(BackupInstanceResponseOutput)
}

// Specifies the current protection state of the resource
func (o BackupInstanceResponsePtrOutput) CurrentProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CurrentProtectionState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the data source information.
func (o BackupInstanceResponsePtrOutput) DataSourceInfo() DatasourceResponsePtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *DatasourceResponse {
		if v == nil {
			return nil
		}
		return &v.DataSourceInfo
	}).(DatasourceResponsePtrOutput)
}

// Gets or sets the data source set information.
func (o BackupInstanceResponsePtrOutput) DataSourceSetInfo() DatasourceSetResponsePtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *DatasourceSetResponse {
		if v == nil {
			return nil
		}
		return v.DataSourceSetInfo
	}).(DatasourceSetResponsePtrOutput)
}

// Gets or sets the Backup Instance friendly name.
func (o BackupInstanceResponsePtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

func (o BackupInstanceResponsePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the policy information.
func (o BackupInstanceResponsePtrOutput) PolicyInfo() PolicyInfoResponsePtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *PolicyInfoResponse {
		if v == nil {
			return nil
		}
		return &v.PolicyInfo
	}).(PolicyInfoResponsePtrOutput)
}

// Specifies the protection error of the resource
func (o BackupInstanceResponsePtrOutput) ProtectionErrorDetails() UserFacingErrorResponsePtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *UserFacingErrorResponse {
		if v == nil {
			return nil
		}
		return &v.ProtectionErrorDetails
	}).(UserFacingErrorResponsePtrOutput)
}

// Specifies the protection status of the resource
func (o BackupInstanceResponsePtrOutput) ProtectionStatus() ProtectionStatusDetailsResponsePtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *ProtectionStatusDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ProtectionStatus
	}).(ProtectionStatusDetailsResponsePtrOutput)
}

// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
func (o BackupInstanceResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupInstanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Rule based backup policy
type BackupPolicyType struct {
	// Type of datasource for the backup management
	DatasourceTypes []string `pulumi:"datasourceTypes"`
	// Expected value is 'BackupPolicy'.
	ObjectType string `pulumi:"objectType"`
	// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
	PolicyRules []interface{} `pulumi:"policyRules"`
}

// BackupPolicyTypeInput is an input type that accepts BackupPolicyTypeArgs and BackupPolicyTypeOutput values.
// You can construct a concrete instance of `BackupPolicyTypeInput` via:
//
//          BackupPolicyTypeArgs{...}
type BackupPolicyTypeInput interface {
	pulumi.Input

	ToBackupPolicyTypeOutput() BackupPolicyTypeOutput
	ToBackupPolicyTypeOutputWithContext(context.Context) BackupPolicyTypeOutput
}

// Rule based backup policy
type BackupPolicyTypeArgs struct {
	// Type of datasource for the backup management
	DatasourceTypes pulumi.StringArrayInput `pulumi:"datasourceTypes"`
	// Expected value is 'BackupPolicy'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
	PolicyRules pulumi.ArrayInput `pulumi:"policyRules"`
}

func (BackupPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyType)(nil)).Elem()
}

func (i BackupPolicyTypeArgs) ToBackupPolicyTypeOutput() BackupPolicyTypeOutput {
	return i.ToBackupPolicyTypeOutputWithContext(context.Background())
}

func (i BackupPolicyTypeArgs) ToBackupPolicyTypeOutputWithContext(ctx context.Context) BackupPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyTypeOutput)
}

func (i BackupPolicyTypeArgs) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return i.ToBackupPolicyTypePtrOutputWithContext(context.Background())
}

func (i BackupPolicyTypeArgs) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyTypeOutput).ToBackupPolicyTypePtrOutputWithContext(ctx)
}

// BackupPolicyTypePtrInput is an input type that accepts BackupPolicyTypeArgs, BackupPolicyTypePtr and BackupPolicyTypePtrOutput values.
// You can construct a concrete instance of `BackupPolicyTypePtrInput` via:
//
//          BackupPolicyTypeArgs{...}
//
//  or:
//
//          nil
type BackupPolicyTypePtrInput interface {
	pulumi.Input

	ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput
	ToBackupPolicyTypePtrOutputWithContext(context.Context) BackupPolicyTypePtrOutput
}

type backupPolicyTypePtrType BackupPolicyTypeArgs

func BackupPolicyTypePtr(v *BackupPolicyTypeArgs) BackupPolicyTypePtrInput {
	return (*backupPolicyTypePtrType)(v)
}

func (*backupPolicyTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyType)(nil)).Elem()
}

func (i *backupPolicyTypePtrType) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return i.ToBackupPolicyTypePtrOutputWithContext(context.Background())
}

func (i *backupPolicyTypePtrType) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyTypePtrOutput)
}

// Rule based backup policy
type BackupPolicyTypeOutput struct{ *pulumi.OutputState }

func (BackupPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyType)(nil)).Elem()
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypeOutput() BackupPolicyTypeOutput {
	return o
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypeOutputWithContext(ctx context.Context) BackupPolicyTypeOutput {
	return o
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return o.ToBackupPolicyTypePtrOutputWithContext(context.Background())
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return o.ApplyT(func(v BackupPolicyType) *BackupPolicyType {
		return &v
	}).(BackupPolicyTypePtrOutput)
}

// Type of datasource for the backup management
func (o BackupPolicyTypeOutput) DatasourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupPolicyType) []string { return v.DatasourceTypes }).(pulumi.StringArrayOutput)
}

// Expected value is 'BackupPolicy'.
func (o BackupPolicyTypeOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyType) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
func (o BackupPolicyTypeOutput) PolicyRules() pulumi.ArrayOutput {
	return o.ApplyT(func(v BackupPolicyType) []interface{} { return v.PolicyRules }).(pulumi.ArrayOutput)
}

type BackupPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyType)(nil)).Elem()
}

func (o BackupPolicyTypePtrOutput) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return o
}

func (o BackupPolicyTypePtrOutput) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return o
}

func (o BackupPolicyTypePtrOutput) Elem() BackupPolicyTypeOutput {
	return o.ApplyT(func(v *BackupPolicyType) BackupPolicyType { return *v }).(BackupPolicyTypeOutput)
}

// Type of datasource for the backup management
func (o BackupPolicyTypePtrOutput) DatasourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyType) []string {
		if v == nil {
			return nil
		}
		return v.DatasourceTypes
	}).(pulumi.StringArrayOutput)
}

// Expected value is 'BackupPolicy'.
func (o BackupPolicyTypePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyType) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
func (o BackupPolicyTypePtrOutput) PolicyRules() pulumi.ArrayOutput {
	return o.ApplyT(func(v *BackupPolicyType) []interface{} {
		if v == nil {
			return nil
		}
		return v.PolicyRules
	}).(pulumi.ArrayOutput)
}

// Rule based backup policy
type BackupPolicyResponse struct {
	// Type of datasource for the backup management
	DatasourceTypes []string `pulumi:"datasourceTypes"`
	// Expected value is 'BackupPolicy'.
	ObjectType string `pulumi:"objectType"`
	// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
	PolicyRules []interface{} `pulumi:"policyRules"`
}

// BackupPolicyResponseInput is an input type that accepts BackupPolicyResponseArgs and BackupPolicyResponseOutput values.
// You can construct a concrete instance of `BackupPolicyResponseInput` via:
//
//          BackupPolicyResponseArgs{...}
type BackupPolicyResponseInput interface {
	pulumi.Input

	ToBackupPolicyResponseOutput() BackupPolicyResponseOutput
	ToBackupPolicyResponseOutputWithContext(context.Context) BackupPolicyResponseOutput
}

// Rule based backup policy
type BackupPolicyResponseArgs struct {
	// Type of datasource for the backup management
	DatasourceTypes pulumi.StringArrayInput `pulumi:"datasourceTypes"`
	// Expected value is 'BackupPolicy'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
	PolicyRules pulumi.ArrayInput `pulumi:"policyRules"`
}

func (BackupPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyResponse)(nil)).Elem()
}

func (i BackupPolicyResponseArgs) ToBackupPolicyResponseOutput() BackupPolicyResponseOutput {
	return i.ToBackupPolicyResponseOutputWithContext(context.Background())
}

func (i BackupPolicyResponseArgs) ToBackupPolicyResponseOutputWithContext(ctx context.Context) BackupPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyResponseOutput)
}

func (i BackupPolicyResponseArgs) ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput {
	return i.ToBackupPolicyResponsePtrOutputWithContext(context.Background())
}

func (i BackupPolicyResponseArgs) ToBackupPolicyResponsePtrOutputWithContext(ctx context.Context) BackupPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyResponseOutput).ToBackupPolicyResponsePtrOutputWithContext(ctx)
}

// BackupPolicyResponsePtrInput is an input type that accepts BackupPolicyResponseArgs, BackupPolicyResponsePtr and BackupPolicyResponsePtrOutput values.
// You can construct a concrete instance of `BackupPolicyResponsePtrInput` via:
//
//          BackupPolicyResponseArgs{...}
//
//  or:
//
//          nil
type BackupPolicyResponsePtrInput interface {
	pulumi.Input

	ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput
	ToBackupPolicyResponsePtrOutputWithContext(context.Context) BackupPolicyResponsePtrOutput
}

type backupPolicyResponsePtrType BackupPolicyResponseArgs

func BackupPolicyResponsePtr(v *BackupPolicyResponseArgs) BackupPolicyResponsePtrInput {
	return (*backupPolicyResponsePtrType)(v)
}

func (*backupPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyResponse)(nil)).Elem()
}

func (i *backupPolicyResponsePtrType) ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput {
	return i.ToBackupPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *backupPolicyResponsePtrType) ToBackupPolicyResponsePtrOutputWithContext(ctx context.Context) BackupPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyResponsePtrOutput)
}

// Rule based backup policy
type BackupPolicyResponseOutput struct{ *pulumi.OutputState }

func (BackupPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyResponse)(nil)).Elem()
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponseOutput() BackupPolicyResponseOutput {
	return o
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponseOutputWithContext(ctx context.Context) BackupPolicyResponseOutput {
	return o
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput {
	return o.ToBackupPolicyResponsePtrOutputWithContext(context.Background())
}

func (o BackupPolicyResponseOutput) ToBackupPolicyResponsePtrOutputWithContext(ctx context.Context) BackupPolicyResponsePtrOutput {
	return o.ApplyT(func(v BackupPolicyResponse) *BackupPolicyResponse {
		return &v
	}).(BackupPolicyResponsePtrOutput)
}

// Type of datasource for the backup management
func (o BackupPolicyResponseOutput) DatasourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupPolicyResponse) []string { return v.DatasourceTypes }).(pulumi.StringArrayOutput)
}

// Expected value is 'BackupPolicy'.
func (o BackupPolicyResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
func (o BackupPolicyResponseOutput) PolicyRules() pulumi.ArrayOutput {
	return o.ApplyT(func(v BackupPolicyResponse) []interface{} { return v.PolicyRules }).(pulumi.ArrayOutput)
}

type BackupPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyResponse)(nil)).Elem()
}

func (o BackupPolicyResponsePtrOutput) ToBackupPolicyResponsePtrOutput() BackupPolicyResponsePtrOutput {
	return o
}

func (o BackupPolicyResponsePtrOutput) ToBackupPolicyResponsePtrOutputWithContext(ctx context.Context) BackupPolicyResponsePtrOutput {
	return o
}

func (o BackupPolicyResponsePtrOutput) Elem() BackupPolicyResponseOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) BackupPolicyResponse { return *v }).(BackupPolicyResponseOutput)
}

// Type of datasource for the backup management
func (o BackupPolicyResponsePtrOutput) DatasourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.DatasourceTypes
	}).(pulumi.StringArrayOutput)
}

// Expected value is 'BackupPolicy'.
func (o BackupPolicyResponsePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc
func (o BackupPolicyResponsePtrOutput) PolicyRules() pulumi.ArrayOutput {
	return o.ApplyT(func(v *BackupPolicyResponse) []interface{} {
		if v == nil {
			return nil
		}
		return v.PolicyRules
	}).(pulumi.ArrayOutput)
}

// Schedule for backup
type BackupSchedule struct {
	// ISO 8601 repeating time interval format
	RepeatingTimeIntervals []string `pulumi:"repeatingTimeIntervals"`
}

// BackupScheduleInput is an input type that accepts BackupScheduleArgs and BackupScheduleOutput values.
// You can construct a concrete instance of `BackupScheduleInput` via:
//
//          BackupScheduleArgs{...}
type BackupScheduleInput interface {
	pulumi.Input

	ToBackupScheduleOutput() BackupScheduleOutput
	ToBackupScheduleOutputWithContext(context.Context) BackupScheduleOutput
}

// Schedule for backup
type BackupScheduleArgs struct {
	// ISO 8601 repeating time interval format
	RepeatingTimeIntervals pulumi.StringArrayInput `pulumi:"repeatingTimeIntervals"`
}

func (BackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (i BackupScheduleArgs) ToBackupScheduleOutput() BackupScheduleOutput {
	return i.ToBackupScheduleOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput)
}

// Schedule for backup
type BackupScheduleOutput struct{ *pulumi.OutputState }

func (BackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (o BackupScheduleOutput) ToBackupScheduleOutput() BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return o
}

// ISO 8601 repeating time interval format
func (o BackupScheduleOutput) RepeatingTimeIntervals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSchedule) []string { return v.RepeatingTimeIntervals }).(pulumi.StringArrayOutput)
}

// Schedule for backup
type BackupScheduleResponse struct {
	// ISO 8601 repeating time interval format
	RepeatingTimeIntervals []string `pulumi:"repeatingTimeIntervals"`
}

// BackupScheduleResponseInput is an input type that accepts BackupScheduleResponseArgs and BackupScheduleResponseOutput values.
// You can construct a concrete instance of `BackupScheduleResponseInput` via:
//
//          BackupScheduleResponseArgs{...}
type BackupScheduleResponseInput interface {
	pulumi.Input

	ToBackupScheduleResponseOutput() BackupScheduleResponseOutput
	ToBackupScheduleResponseOutputWithContext(context.Context) BackupScheduleResponseOutput
}

// Schedule for backup
type BackupScheduleResponseArgs struct {
	// ISO 8601 repeating time interval format
	RepeatingTimeIntervals pulumi.StringArrayInput `pulumi:"repeatingTimeIntervals"`
}

func (BackupScheduleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return i.ToBackupScheduleResponseOutputWithContext(context.Background())
}

func (i BackupScheduleResponseArgs) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleResponseOutput)
}

// Schedule for backup
type BackupScheduleResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return o
}

// ISO 8601 repeating time interval format
func (o BackupScheduleResponseOutput) RepeatingTimeIntervals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupScheduleResponse) []string { return v.RepeatingTimeIntervals }).(pulumi.StringArrayOutput)
}

// Backup Vault
type BackupVaultType struct {
	// Storage Settings
	StorageSettings []StorageSetting `pulumi:"storageSettings"`
}

// BackupVaultTypeInput is an input type that accepts BackupVaultTypeArgs and BackupVaultTypeOutput values.
// You can construct a concrete instance of `BackupVaultTypeInput` via:
//
//          BackupVaultTypeArgs{...}
type BackupVaultTypeInput interface {
	pulumi.Input

	ToBackupVaultTypeOutput() BackupVaultTypeOutput
	ToBackupVaultTypeOutputWithContext(context.Context) BackupVaultTypeOutput
}

// Backup Vault
type BackupVaultTypeArgs struct {
	// Storage Settings
	StorageSettings StorageSettingArrayInput `pulumi:"storageSettings"`
}

func (BackupVaultTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultType)(nil)).Elem()
}

func (i BackupVaultTypeArgs) ToBackupVaultTypeOutput() BackupVaultTypeOutput {
	return i.ToBackupVaultTypeOutputWithContext(context.Background())
}

func (i BackupVaultTypeArgs) ToBackupVaultTypeOutputWithContext(ctx context.Context) BackupVaultTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultTypeOutput)
}

func (i BackupVaultTypeArgs) ToBackupVaultTypePtrOutput() BackupVaultTypePtrOutput {
	return i.ToBackupVaultTypePtrOutputWithContext(context.Background())
}

func (i BackupVaultTypeArgs) ToBackupVaultTypePtrOutputWithContext(ctx context.Context) BackupVaultTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultTypeOutput).ToBackupVaultTypePtrOutputWithContext(ctx)
}

// BackupVaultTypePtrInput is an input type that accepts BackupVaultTypeArgs, BackupVaultTypePtr and BackupVaultTypePtrOutput values.
// You can construct a concrete instance of `BackupVaultTypePtrInput` via:
//
//          BackupVaultTypeArgs{...}
//
//  or:
//
//          nil
type BackupVaultTypePtrInput interface {
	pulumi.Input

	ToBackupVaultTypePtrOutput() BackupVaultTypePtrOutput
	ToBackupVaultTypePtrOutputWithContext(context.Context) BackupVaultTypePtrOutput
}

type backupVaultTypePtrType BackupVaultTypeArgs

func BackupVaultTypePtr(v *BackupVaultTypeArgs) BackupVaultTypePtrInput {
	return (*backupVaultTypePtrType)(v)
}

func (*backupVaultTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultType)(nil)).Elem()
}

func (i *backupVaultTypePtrType) ToBackupVaultTypePtrOutput() BackupVaultTypePtrOutput {
	return i.ToBackupVaultTypePtrOutputWithContext(context.Background())
}

func (i *backupVaultTypePtrType) ToBackupVaultTypePtrOutputWithContext(ctx context.Context) BackupVaultTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultTypePtrOutput)
}

// Backup Vault
type BackupVaultTypeOutput struct{ *pulumi.OutputState }

func (BackupVaultTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultType)(nil)).Elem()
}

func (o BackupVaultTypeOutput) ToBackupVaultTypeOutput() BackupVaultTypeOutput {
	return o
}

func (o BackupVaultTypeOutput) ToBackupVaultTypeOutputWithContext(ctx context.Context) BackupVaultTypeOutput {
	return o
}

func (o BackupVaultTypeOutput) ToBackupVaultTypePtrOutput() BackupVaultTypePtrOutput {
	return o.ToBackupVaultTypePtrOutputWithContext(context.Background())
}

func (o BackupVaultTypeOutput) ToBackupVaultTypePtrOutputWithContext(ctx context.Context) BackupVaultTypePtrOutput {
	return o.ApplyT(func(v BackupVaultType) *BackupVaultType {
		return &v
	}).(BackupVaultTypePtrOutput)
}

// Storage Settings
func (o BackupVaultTypeOutput) StorageSettings() StorageSettingArrayOutput {
	return o.ApplyT(func(v BackupVaultType) []StorageSetting { return v.StorageSettings }).(StorageSettingArrayOutput)
}

type BackupVaultTypePtrOutput struct{ *pulumi.OutputState }

func (BackupVaultTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultType)(nil)).Elem()
}

func (o BackupVaultTypePtrOutput) ToBackupVaultTypePtrOutput() BackupVaultTypePtrOutput {
	return o
}

func (o BackupVaultTypePtrOutput) ToBackupVaultTypePtrOutputWithContext(ctx context.Context) BackupVaultTypePtrOutput {
	return o
}

func (o BackupVaultTypePtrOutput) Elem() BackupVaultTypeOutput {
	return o.ApplyT(func(v *BackupVaultType) BackupVaultType { return *v }).(BackupVaultTypeOutput)
}

// Storage Settings
func (o BackupVaultTypePtrOutput) StorageSettings() StorageSettingArrayOutput {
	return o.ApplyT(func(v *BackupVaultType) []StorageSetting {
		if v == nil {
			return nil
		}
		return v.StorageSettings
	}).(StorageSettingArrayOutput)
}

// Backup Vault
type BackupVaultResponse struct {
	// Provisioning state of the BackupVault resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Storage Settings
	StorageSettings []StorageSettingResponse `pulumi:"storageSettings"`
}

// BackupVaultResponseInput is an input type that accepts BackupVaultResponseArgs and BackupVaultResponseOutput values.
// You can construct a concrete instance of `BackupVaultResponseInput` via:
//
//          BackupVaultResponseArgs{...}
type BackupVaultResponseInput interface {
	pulumi.Input

	ToBackupVaultResponseOutput() BackupVaultResponseOutput
	ToBackupVaultResponseOutputWithContext(context.Context) BackupVaultResponseOutput
}

// Backup Vault
type BackupVaultResponseArgs struct {
	// Provisioning state of the BackupVault resource
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Storage Settings
	StorageSettings StorageSettingResponseArrayInput `pulumi:"storageSettings"`
}

func (BackupVaultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultResponse)(nil)).Elem()
}

func (i BackupVaultResponseArgs) ToBackupVaultResponseOutput() BackupVaultResponseOutput {
	return i.ToBackupVaultResponseOutputWithContext(context.Background())
}

func (i BackupVaultResponseArgs) ToBackupVaultResponseOutputWithContext(ctx context.Context) BackupVaultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultResponseOutput)
}

func (i BackupVaultResponseArgs) ToBackupVaultResponsePtrOutput() BackupVaultResponsePtrOutput {
	return i.ToBackupVaultResponsePtrOutputWithContext(context.Background())
}

func (i BackupVaultResponseArgs) ToBackupVaultResponsePtrOutputWithContext(ctx context.Context) BackupVaultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultResponseOutput).ToBackupVaultResponsePtrOutputWithContext(ctx)
}

// BackupVaultResponsePtrInput is an input type that accepts BackupVaultResponseArgs, BackupVaultResponsePtr and BackupVaultResponsePtrOutput values.
// You can construct a concrete instance of `BackupVaultResponsePtrInput` via:
//
//          BackupVaultResponseArgs{...}
//
//  or:
//
//          nil
type BackupVaultResponsePtrInput interface {
	pulumi.Input

	ToBackupVaultResponsePtrOutput() BackupVaultResponsePtrOutput
	ToBackupVaultResponsePtrOutputWithContext(context.Context) BackupVaultResponsePtrOutput
}

type backupVaultResponsePtrType BackupVaultResponseArgs

func BackupVaultResponsePtr(v *BackupVaultResponseArgs) BackupVaultResponsePtrInput {
	return (*backupVaultResponsePtrType)(v)
}

func (*backupVaultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultResponse)(nil)).Elem()
}

func (i *backupVaultResponsePtrType) ToBackupVaultResponsePtrOutput() BackupVaultResponsePtrOutput {
	return i.ToBackupVaultResponsePtrOutputWithContext(context.Background())
}

func (i *backupVaultResponsePtrType) ToBackupVaultResponsePtrOutputWithContext(ctx context.Context) BackupVaultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultResponsePtrOutput)
}

// Backup Vault
type BackupVaultResponseOutput struct{ *pulumi.OutputState }

func (BackupVaultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultResponse)(nil)).Elem()
}

func (o BackupVaultResponseOutput) ToBackupVaultResponseOutput() BackupVaultResponseOutput {
	return o
}

func (o BackupVaultResponseOutput) ToBackupVaultResponseOutputWithContext(ctx context.Context) BackupVaultResponseOutput {
	return o
}

func (o BackupVaultResponseOutput) ToBackupVaultResponsePtrOutput() BackupVaultResponsePtrOutput {
	return o.ToBackupVaultResponsePtrOutputWithContext(context.Background())
}

func (o BackupVaultResponseOutput) ToBackupVaultResponsePtrOutputWithContext(ctx context.Context) BackupVaultResponsePtrOutput {
	return o.ApplyT(func(v BackupVaultResponse) *BackupVaultResponse {
		return &v
	}).(BackupVaultResponsePtrOutput)
}

// Provisioning state of the BackupVault resource
func (o BackupVaultResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackupVaultResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Storage Settings
func (o BackupVaultResponseOutput) StorageSettings() StorageSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupVaultResponse) []StorageSettingResponse { return v.StorageSettings }).(StorageSettingResponseArrayOutput)
}

type BackupVaultResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupVaultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultResponse)(nil)).Elem()
}

func (o BackupVaultResponsePtrOutput) ToBackupVaultResponsePtrOutput() BackupVaultResponsePtrOutput {
	return o
}

func (o BackupVaultResponsePtrOutput) ToBackupVaultResponsePtrOutputWithContext(ctx context.Context) BackupVaultResponsePtrOutput {
	return o
}

func (o BackupVaultResponsePtrOutput) Elem() BackupVaultResponseOutput {
	return o.ApplyT(func(v *BackupVaultResponse) BackupVaultResponse { return *v }).(BackupVaultResponseOutput)
}

// Provisioning state of the BackupVault resource
func (o BackupVaultResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupVaultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Storage Settings
func (o BackupVaultResponsePtrOutput) StorageSettings() StorageSettingResponseArrayOutput {
	return o.ApplyT(func(v *BackupVaultResponse) []StorageSettingResponse {
		if v == nil {
			return nil
		}
		return v.StorageSettings
	}).(StorageSettingResponseArrayOutput)
}

// Copy on Expiry Option
type CopyOnExpiryOption struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'CopyOnExpiryOption'.
	ObjectType string `pulumi:"objectType"`
}

// CopyOnExpiryOptionInput is an input type that accepts CopyOnExpiryOptionArgs and CopyOnExpiryOptionOutput values.
// You can construct a concrete instance of `CopyOnExpiryOptionInput` via:
//
//          CopyOnExpiryOptionArgs{...}
type CopyOnExpiryOptionInput interface {
	pulumi.Input

	ToCopyOnExpiryOptionOutput() CopyOnExpiryOptionOutput
	ToCopyOnExpiryOptionOutputWithContext(context.Context) CopyOnExpiryOptionOutput
}

// Copy on Expiry Option
type CopyOnExpiryOptionArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'CopyOnExpiryOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CopyOnExpiryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyOnExpiryOption)(nil)).Elem()
}

func (i CopyOnExpiryOptionArgs) ToCopyOnExpiryOptionOutput() CopyOnExpiryOptionOutput {
	return i.ToCopyOnExpiryOptionOutputWithContext(context.Background())
}

func (i CopyOnExpiryOptionArgs) ToCopyOnExpiryOptionOutputWithContext(ctx context.Context) CopyOnExpiryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyOnExpiryOptionOutput)
}

// Copy on Expiry Option
type CopyOnExpiryOptionOutput struct{ *pulumi.OutputState }

func (CopyOnExpiryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyOnExpiryOption)(nil)).Elem()
}

func (o CopyOnExpiryOptionOutput) ToCopyOnExpiryOptionOutput() CopyOnExpiryOptionOutput {
	return o
}

func (o CopyOnExpiryOptionOutput) ToCopyOnExpiryOptionOutputWithContext(ctx context.Context) CopyOnExpiryOptionOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'CopyOnExpiryOption'.
func (o CopyOnExpiryOptionOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyOnExpiryOption) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Copy on Expiry Option
type CopyOnExpiryOptionResponse struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'CopyOnExpiryOption'.
	ObjectType string `pulumi:"objectType"`
}

// CopyOnExpiryOptionResponseInput is an input type that accepts CopyOnExpiryOptionResponseArgs and CopyOnExpiryOptionResponseOutput values.
// You can construct a concrete instance of `CopyOnExpiryOptionResponseInput` via:
//
//          CopyOnExpiryOptionResponseArgs{...}
type CopyOnExpiryOptionResponseInput interface {
	pulumi.Input

	ToCopyOnExpiryOptionResponseOutput() CopyOnExpiryOptionResponseOutput
	ToCopyOnExpiryOptionResponseOutputWithContext(context.Context) CopyOnExpiryOptionResponseOutput
}

// Copy on Expiry Option
type CopyOnExpiryOptionResponseArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'CopyOnExpiryOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CopyOnExpiryOptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyOnExpiryOptionResponse)(nil)).Elem()
}

func (i CopyOnExpiryOptionResponseArgs) ToCopyOnExpiryOptionResponseOutput() CopyOnExpiryOptionResponseOutput {
	return i.ToCopyOnExpiryOptionResponseOutputWithContext(context.Background())
}

func (i CopyOnExpiryOptionResponseArgs) ToCopyOnExpiryOptionResponseOutputWithContext(ctx context.Context) CopyOnExpiryOptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyOnExpiryOptionResponseOutput)
}

// Copy on Expiry Option
type CopyOnExpiryOptionResponseOutput struct{ *pulumi.OutputState }

func (CopyOnExpiryOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyOnExpiryOptionResponse)(nil)).Elem()
}

func (o CopyOnExpiryOptionResponseOutput) ToCopyOnExpiryOptionResponseOutput() CopyOnExpiryOptionResponseOutput {
	return o
}

func (o CopyOnExpiryOptionResponseOutput) ToCopyOnExpiryOptionResponseOutputWithContext(ctx context.Context) CopyOnExpiryOptionResponseOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'CopyOnExpiryOption'.
func (o CopyOnExpiryOptionResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyOnExpiryOptionResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Duration based custom options to copy
type CustomCopyOption struct {
	// Data copied after given timespan
	Duration *string `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'CustomCopyOption'.
	ObjectType string `pulumi:"objectType"`
}

// CustomCopyOptionInput is an input type that accepts CustomCopyOptionArgs and CustomCopyOptionOutput values.
// You can construct a concrete instance of `CustomCopyOptionInput` via:
//
//          CustomCopyOptionArgs{...}
type CustomCopyOptionInput interface {
	pulumi.Input

	ToCustomCopyOptionOutput() CustomCopyOptionOutput
	ToCustomCopyOptionOutputWithContext(context.Context) CustomCopyOptionOutput
}

// Duration based custom options to copy
type CustomCopyOptionArgs struct {
	// Data copied after given timespan
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'CustomCopyOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CustomCopyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomCopyOption)(nil)).Elem()
}

func (i CustomCopyOptionArgs) ToCustomCopyOptionOutput() CustomCopyOptionOutput {
	return i.ToCustomCopyOptionOutputWithContext(context.Background())
}

func (i CustomCopyOptionArgs) ToCustomCopyOptionOutputWithContext(ctx context.Context) CustomCopyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomCopyOptionOutput)
}

// Duration based custom options to copy
type CustomCopyOptionOutput struct{ *pulumi.OutputState }

func (CustomCopyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomCopyOption)(nil)).Elem()
}

func (o CustomCopyOptionOutput) ToCustomCopyOptionOutput() CustomCopyOptionOutput {
	return o
}

func (o CustomCopyOptionOutput) ToCustomCopyOptionOutputWithContext(ctx context.Context) CustomCopyOptionOutput {
	return o
}

// Data copied after given timespan
func (o CustomCopyOptionOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomCopyOption) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'CustomCopyOption'.
func (o CustomCopyOptionOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomCopyOption) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Duration based custom options to copy
type CustomCopyOptionResponse struct {
	// Data copied after given timespan
	Duration *string `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'CustomCopyOption'.
	ObjectType string `pulumi:"objectType"`
}

// CustomCopyOptionResponseInput is an input type that accepts CustomCopyOptionResponseArgs and CustomCopyOptionResponseOutput values.
// You can construct a concrete instance of `CustomCopyOptionResponseInput` via:
//
//          CustomCopyOptionResponseArgs{...}
type CustomCopyOptionResponseInput interface {
	pulumi.Input

	ToCustomCopyOptionResponseOutput() CustomCopyOptionResponseOutput
	ToCustomCopyOptionResponseOutputWithContext(context.Context) CustomCopyOptionResponseOutput
}

// Duration based custom options to copy
type CustomCopyOptionResponseArgs struct {
	// Data copied after given timespan
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// Type of the specific object - used for deserializing
	// Expected value is 'CustomCopyOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CustomCopyOptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomCopyOptionResponse)(nil)).Elem()
}

func (i CustomCopyOptionResponseArgs) ToCustomCopyOptionResponseOutput() CustomCopyOptionResponseOutput {
	return i.ToCustomCopyOptionResponseOutputWithContext(context.Background())
}

func (i CustomCopyOptionResponseArgs) ToCustomCopyOptionResponseOutputWithContext(ctx context.Context) CustomCopyOptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomCopyOptionResponseOutput)
}

// Duration based custom options to copy
type CustomCopyOptionResponseOutput struct{ *pulumi.OutputState }

func (CustomCopyOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomCopyOptionResponse)(nil)).Elem()
}

func (o CustomCopyOptionResponseOutput) ToCustomCopyOptionResponseOutput() CustomCopyOptionResponseOutput {
	return o
}

func (o CustomCopyOptionResponseOutput) ToCustomCopyOptionResponseOutputWithContext(ctx context.Context) CustomCopyOptionResponseOutput {
	return o
}

// Data copied after given timespan
func (o CustomCopyOptionResponseOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomCopyOptionResponse) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'CustomCopyOption'.
func (o CustomCopyOptionResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomCopyOptionResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// DataStoreInfo base
type DataStoreInfoBase struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType string `pulumi:"dataStoreType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType string `pulumi:"objectType"`
}

// DataStoreInfoBaseInput is an input type that accepts DataStoreInfoBaseArgs and DataStoreInfoBaseOutput values.
// You can construct a concrete instance of `DataStoreInfoBaseInput` via:
//
//          DataStoreInfoBaseArgs{...}
type DataStoreInfoBaseInput interface {
	pulumi.Input

	ToDataStoreInfoBaseOutput() DataStoreInfoBaseOutput
	ToDataStoreInfoBaseOutputWithContext(context.Context) DataStoreInfoBaseOutput
}

// DataStoreInfo base
type DataStoreInfoBaseArgs struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType pulumi.StringInput `pulumi:"dataStoreType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (DataStoreInfoBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreInfoBase)(nil)).Elem()
}

func (i DataStoreInfoBaseArgs) ToDataStoreInfoBaseOutput() DataStoreInfoBaseOutput {
	return i.ToDataStoreInfoBaseOutputWithContext(context.Background())
}

func (i DataStoreInfoBaseArgs) ToDataStoreInfoBaseOutputWithContext(ctx context.Context) DataStoreInfoBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataStoreInfoBaseOutput)
}

// DataStoreInfo base
type DataStoreInfoBaseOutput struct{ *pulumi.OutputState }

func (DataStoreInfoBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreInfoBase)(nil)).Elem()
}

func (o DataStoreInfoBaseOutput) ToDataStoreInfoBaseOutput() DataStoreInfoBaseOutput {
	return o
}

func (o DataStoreInfoBaseOutput) ToDataStoreInfoBaseOutputWithContext(ctx context.Context) DataStoreInfoBaseOutput {
	return o
}

// type of datastore; Operational/Vault/Archive
func (o DataStoreInfoBaseOutput) DataStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v DataStoreInfoBase) string { return v.DataStoreType }).(pulumi.StringOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DataStoreInfoBaseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v DataStoreInfoBase) string { return v.ObjectType }).(pulumi.StringOutput)
}

// DataStoreInfo base
type DataStoreInfoBaseResponse struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType string `pulumi:"dataStoreType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType string `pulumi:"objectType"`
}

// DataStoreInfoBaseResponseInput is an input type that accepts DataStoreInfoBaseResponseArgs and DataStoreInfoBaseResponseOutput values.
// You can construct a concrete instance of `DataStoreInfoBaseResponseInput` via:
//
//          DataStoreInfoBaseResponseArgs{...}
type DataStoreInfoBaseResponseInput interface {
	pulumi.Input

	ToDataStoreInfoBaseResponseOutput() DataStoreInfoBaseResponseOutput
	ToDataStoreInfoBaseResponseOutputWithContext(context.Context) DataStoreInfoBaseResponseOutput
}

// DataStoreInfo base
type DataStoreInfoBaseResponseArgs struct {
	// type of datastore; Operational/Vault/Archive
	DataStoreType pulumi.StringInput `pulumi:"dataStoreType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (DataStoreInfoBaseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreInfoBaseResponse)(nil)).Elem()
}

func (i DataStoreInfoBaseResponseArgs) ToDataStoreInfoBaseResponseOutput() DataStoreInfoBaseResponseOutput {
	return i.ToDataStoreInfoBaseResponseOutputWithContext(context.Background())
}

func (i DataStoreInfoBaseResponseArgs) ToDataStoreInfoBaseResponseOutputWithContext(ctx context.Context) DataStoreInfoBaseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataStoreInfoBaseResponseOutput)
}

// DataStoreInfo base
type DataStoreInfoBaseResponseOutput struct{ *pulumi.OutputState }

func (DataStoreInfoBaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreInfoBaseResponse)(nil)).Elem()
}

func (o DataStoreInfoBaseResponseOutput) ToDataStoreInfoBaseResponseOutput() DataStoreInfoBaseResponseOutput {
	return o
}

func (o DataStoreInfoBaseResponseOutput) ToDataStoreInfoBaseResponseOutputWithContext(ctx context.Context) DataStoreInfoBaseResponseOutput {
	return o
}

// type of datastore; Operational/Vault/Archive
func (o DataStoreInfoBaseResponseOutput) DataStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v DataStoreInfoBaseResponse) string { return v.DataStoreType }).(pulumi.StringOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DataStoreInfoBaseResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v DataStoreInfoBaseResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Datasource to be backed up
type Datasource struct {
	// DatasourceType of the resource.
	DatasourceType *string `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType *string `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID string `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation *string `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName *string `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType *string `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri *string `pulumi:"resourceUri"`
}

// DatasourceInput is an input type that accepts DatasourceArgs and DatasourceOutput values.
// You can construct a concrete instance of `DatasourceInput` via:
//
//          DatasourceArgs{...}
type DatasourceInput interface {
	pulumi.Input

	ToDatasourceOutput() DatasourceOutput
	ToDatasourceOutputWithContext(context.Context) DatasourceOutput
}

// Datasource to be backed up
type DatasourceArgs struct {
	// DatasourceType of the resource.
	DatasourceType pulumi.StringPtrInput `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringPtrInput `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID pulumi.StringInput `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation pulumi.StringPtrInput `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
}

func (DatasourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Datasource)(nil)).Elem()
}

func (i DatasourceArgs) ToDatasourceOutput() DatasourceOutput {
	return i.ToDatasourceOutputWithContext(context.Background())
}

func (i DatasourceArgs) ToDatasourceOutputWithContext(ctx context.Context) DatasourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceOutput)
}

func (i DatasourceArgs) ToDatasourcePtrOutput() DatasourcePtrOutput {
	return i.ToDatasourcePtrOutputWithContext(context.Background())
}

func (i DatasourceArgs) ToDatasourcePtrOutputWithContext(ctx context.Context) DatasourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceOutput).ToDatasourcePtrOutputWithContext(ctx)
}

// DatasourcePtrInput is an input type that accepts DatasourceArgs, DatasourcePtr and DatasourcePtrOutput values.
// You can construct a concrete instance of `DatasourcePtrInput` via:
//
//          DatasourceArgs{...}
//
//  or:
//
//          nil
type DatasourcePtrInput interface {
	pulumi.Input

	ToDatasourcePtrOutput() DatasourcePtrOutput
	ToDatasourcePtrOutputWithContext(context.Context) DatasourcePtrOutput
}

type datasourcePtrType DatasourceArgs

func DatasourcePtr(v *DatasourceArgs) DatasourcePtrInput {
	return (*datasourcePtrType)(v)
}

func (*datasourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Datasource)(nil)).Elem()
}

func (i *datasourcePtrType) ToDatasourcePtrOutput() DatasourcePtrOutput {
	return i.ToDatasourcePtrOutputWithContext(context.Background())
}

func (i *datasourcePtrType) ToDatasourcePtrOutputWithContext(ctx context.Context) DatasourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourcePtrOutput)
}

// Datasource to be backed up
type DatasourceOutput struct{ *pulumi.OutputState }

func (DatasourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Datasource)(nil)).Elem()
}

func (o DatasourceOutput) ToDatasourceOutput() DatasourceOutput {
	return o
}

func (o DatasourceOutput) ToDatasourceOutputWithContext(ctx context.Context) DatasourceOutput {
	return o
}

func (o DatasourceOutput) ToDatasourcePtrOutput() DatasourcePtrOutput {
	return o.ToDatasourcePtrOutputWithContext(context.Background())
}

func (o DatasourceOutput) ToDatasourcePtrOutputWithContext(ctx context.Context) DatasourcePtrOutput {
	return o.ApplyT(func(v Datasource) *Datasource {
		return &v
	}).(DatasourcePtrOutput)
}

// DatasourceType of the resource.
func (o DatasourceOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.DatasourceType }).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.ObjectType }).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceOutput) ResourceID() pulumi.StringOutput {
	return o.ApplyT(func(v Datasource) string { return v.ResourceID }).(pulumi.StringOutput)
}

// Location of datasource.
func (o DatasourceOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.ResourceLocation }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Datasource) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

type DatasourcePtrOutput struct{ *pulumi.OutputState }

func (DatasourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Datasource)(nil)).Elem()
}

func (o DatasourcePtrOutput) ToDatasourcePtrOutput() DatasourcePtrOutput {
	return o
}

func (o DatasourcePtrOutput) ToDatasourcePtrOutputWithContext(ctx context.Context) DatasourcePtrOutput {
	return o
}

func (o DatasourcePtrOutput) Elem() DatasourceOutput {
	return o.ApplyT(func(v *Datasource) Datasource { return *v }).(DatasourceOutput)
}

// DatasourceType of the resource.
func (o DatasourcePtrOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.DatasourceType
	}).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourcePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourcePtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceID
	}).(pulumi.StringPtrOutput)
}

// Location of datasource.
func (o DatasourcePtrOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLocation
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourcePtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourcePtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourcePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Datasource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// Datasource to be backed up
type DatasourceResponse struct {
	// DatasourceType of the resource.
	DatasourceType *string `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType *string `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID string `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation *string `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName *string `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType *string `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri *string `pulumi:"resourceUri"`
}

// DatasourceResponseInput is an input type that accepts DatasourceResponseArgs and DatasourceResponseOutput values.
// You can construct a concrete instance of `DatasourceResponseInput` via:
//
//          DatasourceResponseArgs{...}
type DatasourceResponseInput interface {
	pulumi.Input

	ToDatasourceResponseOutput() DatasourceResponseOutput
	ToDatasourceResponseOutputWithContext(context.Context) DatasourceResponseOutput
}

// Datasource to be backed up
type DatasourceResponseArgs struct {
	// DatasourceType of the resource.
	DatasourceType pulumi.StringPtrInput `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringPtrInput `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID pulumi.StringInput `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation pulumi.StringPtrInput `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
}

func (DatasourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceResponse)(nil)).Elem()
}

func (i DatasourceResponseArgs) ToDatasourceResponseOutput() DatasourceResponseOutput {
	return i.ToDatasourceResponseOutputWithContext(context.Background())
}

func (i DatasourceResponseArgs) ToDatasourceResponseOutputWithContext(ctx context.Context) DatasourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceResponseOutput)
}

func (i DatasourceResponseArgs) ToDatasourceResponsePtrOutput() DatasourceResponsePtrOutput {
	return i.ToDatasourceResponsePtrOutputWithContext(context.Background())
}

func (i DatasourceResponseArgs) ToDatasourceResponsePtrOutputWithContext(ctx context.Context) DatasourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceResponseOutput).ToDatasourceResponsePtrOutputWithContext(ctx)
}

// DatasourceResponsePtrInput is an input type that accepts DatasourceResponseArgs, DatasourceResponsePtr and DatasourceResponsePtrOutput values.
// You can construct a concrete instance of `DatasourceResponsePtrInput` via:
//
//          DatasourceResponseArgs{...}
//
//  or:
//
//          nil
type DatasourceResponsePtrInput interface {
	pulumi.Input

	ToDatasourceResponsePtrOutput() DatasourceResponsePtrOutput
	ToDatasourceResponsePtrOutputWithContext(context.Context) DatasourceResponsePtrOutput
}

type datasourceResponsePtrType DatasourceResponseArgs

func DatasourceResponsePtr(v *DatasourceResponseArgs) DatasourceResponsePtrInput {
	return (*datasourceResponsePtrType)(v)
}

func (*datasourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceResponse)(nil)).Elem()
}

func (i *datasourceResponsePtrType) ToDatasourceResponsePtrOutput() DatasourceResponsePtrOutput {
	return i.ToDatasourceResponsePtrOutputWithContext(context.Background())
}

func (i *datasourceResponsePtrType) ToDatasourceResponsePtrOutputWithContext(ctx context.Context) DatasourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceResponsePtrOutput)
}

// Datasource to be backed up
type DatasourceResponseOutput struct{ *pulumi.OutputState }

func (DatasourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceResponse)(nil)).Elem()
}

func (o DatasourceResponseOutput) ToDatasourceResponseOutput() DatasourceResponseOutput {
	return o
}

func (o DatasourceResponseOutput) ToDatasourceResponseOutputWithContext(ctx context.Context) DatasourceResponseOutput {
	return o
}

func (o DatasourceResponseOutput) ToDatasourceResponsePtrOutput() DatasourceResponsePtrOutput {
	return o.ToDatasourceResponsePtrOutputWithContext(context.Background())
}

func (o DatasourceResponseOutput) ToDatasourceResponsePtrOutputWithContext(ctx context.Context) DatasourceResponsePtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *DatasourceResponse {
		return &v
	}).(DatasourceResponsePtrOutput)
}

// DatasourceType of the resource.
func (o DatasourceResponseOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.DatasourceType }).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceResponseOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.ObjectType }).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceResponseOutput) ResourceID() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceResponse) string { return v.ResourceID }).(pulumi.StringOutput)
}

// Location of datasource.
func (o DatasourceResponseOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.ResourceLocation }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

type DatasourceResponsePtrOutput struct{ *pulumi.OutputState }

func (DatasourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceResponse)(nil)).Elem()
}

func (o DatasourceResponsePtrOutput) ToDatasourceResponsePtrOutput() DatasourceResponsePtrOutput {
	return o
}

func (o DatasourceResponsePtrOutput) ToDatasourceResponsePtrOutputWithContext(ctx context.Context) DatasourceResponsePtrOutput {
	return o
}

func (o DatasourceResponsePtrOutput) Elem() DatasourceResponseOutput {
	return o.ApplyT(func(v *DatasourceResponse) DatasourceResponse { return *v }).(DatasourceResponseOutput)
}

// DatasourceType of the resource.
func (o DatasourceResponsePtrOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatasourceType
	}).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceResponsePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceResponsePtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceID
	}).(pulumi.StringPtrOutput)
}

// Location of datasource.
func (o DatasourceResponsePtrOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLocation
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceResponsePtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceResponsePtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// DatasourceSet details of datasource to be backed up
type DatasourceSet struct {
	// DatasourceType of the resource.
	DatasourceType *string `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType *string `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID string `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation *string `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName *string `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType *string `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri *string `pulumi:"resourceUri"`
}

// DatasourceSetInput is an input type that accepts DatasourceSetArgs and DatasourceSetOutput values.
// You can construct a concrete instance of `DatasourceSetInput` via:
//
//          DatasourceSetArgs{...}
type DatasourceSetInput interface {
	pulumi.Input

	ToDatasourceSetOutput() DatasourceSetOutput
	ToDatasourceSetOutputWithContext(context.Context) DatasourceSetOutput
}

// DatasourceSet details of datasource to be backed up
type DatasourceSetArgs struct {
	// DatasourceType of the resource.
	DatasourceType pulumi.StringPtrInput `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringPtrInput `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID pulumi.StringInput `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation pulumi.StringPtrInput `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
}

func (DatasourceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceSet)(nil)).Elem()
}

func (i DatasourceSetArgs) ToDatasourceSetOutput() DatasourceSetOutput {
	return i.ToDatasourceSetOutputWithContext(context.Background())
}

func (i DatasourceSetArgs) ToDatasourceSetOutputWithContext(ctx context.Context) DatasourceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetOutput)
}

func (i DatasourceSetArgs) ToDatasourceSetPtrOutput() DatasourceSetPtrOutput {
	return i.ToDatasourceSetPtrOutputWithContext(context.Background())
}

func (i DatasourceSetArgs) ToDatasourceSetPtrOutputWithContext(ctx context.Context) DatasourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetOutput).ToDatasourceSetPtrOutputWithContext(ctx)
}

// DatasourceSetPtrInput is an input type that accepts DatasourceSetArgs, DatasourceSetPtr and DatasourceSetPtrOutput values.
// You can construct a concrete instance of `DatasourceSetPtrInput` via:
//
//          DatasourceSetArgs{...}
//
//  or:
//
//          nil
type DatasourceSetPtrInput interface {
	pulumi.Input

	ToDatasourceSetPtrOutput() DatasourceSetPtrOutput
	ToDatasourceSetPtrOutputWithContext(context.Context) DatasourceSetPtrOutput
}

type datasourceSetPtrType DatasourceSetArgs

func DatasourceSetPtr(v *DatasourceSetArgs) DatasourceSetPtrInput {
	return (*datasourceSetPtrType)(v)
}

func (*datasourceSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceSet)(nil)).Elem()
}

func (i *datasourceSetPtrType) ToDatasourceSetPtrOutput() DatasourceSetPtrOutput {
	return i.ToDatasourceSetPtrOutputWithContext(context.Background())
}

func (i *datasourceSetPtrType) ToDatasourceSetPtrOutputWithContext(ctx context.Context) DatasourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetPtrOutput)
}

// DatasourceSet details of datasource to be backed up
type DatasourceSetOutput struct{ *pulumi.OutputState }

func (DatasourceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceSet)(nil)).Elem()
}

func (o DatasourceSetOutput) ToDatasourceSetOutput() DatasourceSetOutput {
	return o
}

func (o DatasourceSetOutput) ToDatasourceSetOutputWithContext(ctx context.Context) DatasourceSetOutput {
	return o
}

func (o DatasourceSetOutput) ToDatasourceSetPtrOutput() DatasourceSetPtrOutput {
	return o.ToDatasourceSetPtrOutputWithContext(context.Background())
}

func (o DatasourceSetOutput) ToDatasourceSetPtrOutputWithContext(ctx context.Context) DatasourceSetPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *DatasourceSet {
		return &v
	}).(DatasourceSetPtrOutput)
}

// DatasourceType of the resource.
func (o DatasourceSetOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.DatasourceType }).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceSetOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.ObjectType }).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceSetOutput) ResourceID() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceSet) string { return v.ResourceID }).(pulumi.StringOutput)
}

// Location of datasource.
func (o DatasourceSetOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.ResourceLocation }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceSetOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceSetOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceSetOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSet) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

type DatasourceSetPtrOutput struct{ *pulumi.OutputState }

func (DatasourceSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceSet)(nil)).Elem()
}

func (o DatasourceSetPtrOutput) ToDatasourceSetPtrOutput() DatasourceSetPtrOutput {
	return o
}

func (o DatasourceSetPtrOutput) ToDatasourceSetPtrOutputWithContext(ctx context.Context) DatasourceSetPtrOutput {
	return o
}

func (o DatasourceSetPtrOutput) Elem() DatasourceSetOutput {
	return o.ApplyT(func(v *DatasourceSet) DatasourceSet { return *v }).(DatasourceSetOutput)
}

// DatasourceType of the resource.
func (o DatasourceSetPtrOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.DatasourceType
	}).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceSetPtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceSetPtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceID
	}).(pulumi.StringPtrOutput)
}

// Location of datasource.
func (o DatasourceSetPtrOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLocation
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceSetPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceSetPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceSetPtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// DatasourceSet details of datasource to be backed up
type DatasourceSetResponse struct {
	// DatasourceType of the resource.
	DatasourceType *string `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType *string `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID string `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation *string `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName *string `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType *string `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri *string `pulumi:"resourceUri"`
}

// DatasourceSetResponseInput is an input type that accepts DatasourceSetResponseArgs and DatasourceSetResponseOutput values.
// You can construct a concrete instance of `DatasourceSetResponseInput` via:
//
//          DatasourceSetResponseArgs{...}
type DatasourceSetResponseInput interface {
	pulumi.Input

	ToDatasourceSetResponseOutput() DatasourceSetResponseOutput
	ToDatasourceSetResponseOutputWithContext(context.Context) DatasourceSetResponseOutput
}

// DatasourceSet details of datasource to be backed up
type DatasourceSetResponseArgs struct {
	// DatasourceType of the resource.
	DatasourceType pulumi.StringPtrInput `pulumi:"datasourceType"`
	// Type of Datasource object, used to initialize the right inherited type
	ObjectType pulumi.StringPtrInput `pulumi:"objectType"`
	// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
	ResourceID pulumi.StringInput `pulumi:"resourceID"`
	// Location of datasource.
	ResourceLocation pulumi.StringPtrInput `pulumi:"resourceLocation"`
	// Unique identifier of the resource in the context of parent.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Resource Type of Datasource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Uri of the resource.
	ResourceUri pulumi.StringPtrInput `pulumi:"resourceUri"`
}

func (DatasourceSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceSetResponse)(nil)).Elem()
}

func (i DatasourceSetResponseArgs) ToDatasourceSetResponseOutput() DatasourceSetResponseOutput {
	return i.ToDatasourceSetResponseOutputWithContext(context.Background())
}

func (i DatasourceSetResponseArgs) ToDatasourceSetResponseOutputWithContext(ctx context.Context) DatasourceSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetResponseOutput)
}

func (i DatasourceSetResponseArgs) ToDatasourceSetResponsePtrOutput() DatasourceSetResponsePtrOutput {
	return i.ToDatasourceSetResponsePtrOutputWithContext(context.Background())
}

func (i DatasourceSetResponseArgs) ToDatasourceSetResponsePtrOutputWithContext(ctx context.Context) DatasourceSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetResponseOutput).ToDatasourceSetResponsePtrOutputWithContext(ctx)
}

// DatasourceSetResponsePtrInput is an input type that accepts DatasourceSetResponseArgs, DatasourceSetResponsePtr and DatasourceSetResponsePtrOutput values.
// You can construct a concrete instance of `DatasourceSetResponsePtrInput` via:
//
//          DatasourceSetResponseArgs{...}
//
//  or:
//
//          nil
type DatasourceSetResponsePtrInput interface {
	pulumi.Input

	ToDatasourceSetResponsePtrOutput() DatasourceSetResponsePtrOutput
	ToDatasourceSetResponsePtrOutputWithContext(context.Context) DatasourceSetResponsePtrOutput
}

type datasourceSetResponsePtrType DatasourceSetResponseArgs

func DatasourceSetResponsePtr(v *DatasourceSetResponseArgs) DatasourceSetResponsePtrInput {
	return (*datasourceSetResponsePtrType)(v)
}

func (*datasourceSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceSetResponse)(nil)).Elem()
}

func (i *datasourceSetResponsePtrType) ToDatasourceSetResponsePtrOutput() DatasourceSetResponsePtrOutput {
	return i.ToDatasourceSetResponsePtrOutputWithContext(context.Background())
}

func (i *datasourceSetResponsePtrType) ToDatasourceSetResponsePtrOutputWithContext(ctx context.Context) DatasourceSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasourceSetResponsePtrOutput)
}

// DatasourceSet details of datasource to be backed up
type DatasourceSetResponseOutput struct{ *pulumi.OutputState }

func (DatasourceSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasourceSetResponse)(nil)).Elem()
}

func (o DatasourceSetResponseOutput) ToDatasourceSetResponseOutput() DatasourceSetResponseOutput {
	return o
}

func (o DatasourceSetResponseOutput) ToDatasourceSetResponseOutputWithContext(ctx context.Context) DatasourceSetResponseOutput {
	return o
}

func (o DatasourceSetResponseOutput) ToDatasourceSetResponsePtrOutput() DatasourceSetResponsePtrOutput {
	return o.ToDatasourceSetResponsePtrOutputWithContext(context.Background())
}

func (o DatasourceSetResponseOutput) ToDatasourceSetResponsePtrOutputWithContext(ctx context.Context) DatasourceSetResponsePtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *DatasourceSetResponse {
		return &v
	}).(DatasourceSetResponsePtrOutput)
}

// DatasourceType of the resource.
func (o DatasourceSetResponseOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.DatasourceType }).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceSetResponseOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.ObjectType }).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceSetResponseOutput) ResourceID() pulumi.StringOutput {
	return o.ApplyT(func(v DatasourceSetResponse) string { return v.ResourceID }).(pulumi.StringOutput)
}

// Location of datasource.
func (o DatasourceSetResponseOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.ResourceLocation }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceSetResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceSetResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceSetResponseOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasourceSetResponse) *string { return v.ResourceUri }).(pulumi.StringPtrOutput)
}

type DatasourceSetResponsePtrOutput struct{ *pulumi.OutputState }

func (DatasourceSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasourceSetResponse)(nil)).Elem()
}

func (o DatasourceSetResponsePtrOutput) ToDatasourceSetResponsePtrOutput() DatasourceSetResponsePtrOutput {
	return o
}

func (o DatasourceSetResponsePtrOutput) ToDatasourceSetResponsePtrOutputWithContext(ctx context.Context) DatasourceSetResponsePtrOutput {
	return o
}

func (o DatasourceSetResponsePtrOutput) Elem() DatasourceSetResponseOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) DatasourceSetResponse { return *v }).(DatasourceSetResponseOutput)
}

// DatasourceType of the resource.
func (o DatasourceSetResponsePtrOutput) DatasourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatasourceType
	}).(pulumi.StringPtrOutput)
}

// Type of Datasource object, used to initialize the right inherited type
func (o DatasourceSetResponsePtrOutput) ObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectType
	}).(pulumi.StringPtrOutput)
}

// Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault.
func (o DatasourceSetResponsePtrOutput) ResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceID
	}).(pulumi.StringPtrOutput)
}

// Location of datasource.
func (o DatasourceSetResponsePtrOutput) ResourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLocation
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the context of parent.
func (o DatasourceSetResponsePtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// Resource Type of Datasource.
func (o DatasourceSetResponsePtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// Uri of the resource.
func (o DatasourceSetResponsePtrOutput) ResourceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceUri
	}).(pulumi.StringPtrOutput)
}

// Day of the week
type Day struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// DayInput is an input type that accepts DayArgs and DayOutput values.
// You can construct a concrete instance of `DayInput` via:
//
//          DayArgs{...}
type DayInput interface {
	pulumi.Input

	ToDayOutput() DayOutput
	ToDayOutputWithContext(context.Context) DayOutput
}

// Day of the week
type DayArgs struct {
	// Date of the month
	Date pulumi.IntPtrInput `pulumi:"date"`
	// Whether Date is last date of month
	IsLast pulumi.BoolPtrInput `pulumi:"isLast"`
}

func (DayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (i DayArgs) ToDayOutput() DayOutput {
	return i.ToDayOutputWithContext(context.Background())
}

func (i DayArgs) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOutput)
}

// DayArrayInput is an input type that accepts DayArray and DayArrayOutput values.
// You can construct a concrete instance of `DayArrayInput` via:
//
//          DayArray{ DayArgs{...} }
type DayArrayInput interface {
	pulumi.Input

	ToDayArrayOutput() DayArrayOutput
	ToDayArrayOutputWithContext(context.Context) DayArrayOutput
}

type DayArray []DayInput

func (DayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (i DayArray) ToDayArrayOutput() DayArrayOutput {
	return i.ToDayArrayOutputWithContext(context.Background())
}

func (i DayArray) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayArrayOutput)
}

// Day of the week
type DayOutput struct{ *pulumi.OutputState }

func (DayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (o DayOutput) ToDayOutput() DayOutput {
	return o
}

func (o DayOutput) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return o
}

// Date of the month
func (o DayOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Day) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Day) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayArrayOutput struct{ *pulumi.OutputState }

func (DayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (o DayArrayOutput) ToDayArrayOutput() DayArrayOutput {
	return o
}

func (o DayArrayOutput) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return o
}

func (o DayArrayOutput) Index(i pulumi.IntInput) DayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Day {
		return vs[0].([]Day)[vs[1].(int)]
	}).(DayOutput)
}

// Day of the week
type DayResponse struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// DayResponseInput is an input type that accepts DayResponseArgs and DayResponseOutput values.
// You can construct a concrete instance of `DayResponseInput` via:
//
//          DayResponseArgs{...}
type DayResponseInput interface {
	pulumi.Input

	ToDayResponseOutput() DayResponseOutput
	ToDayResponseOutputWithContext(context.Context) DayResponseOutput
}

// Day of the week
type DayResponseArgs struct {
	// Date of the month
	Date pulumi.IntPtrInput `pulumi:"date"`
	// Whether Date is last date of month
	IsLast pulumi.BoolPtrInput `pulumi:"isLast"`
}

func (DayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DayResponse)(nil)).Elem()
}

func (i DayResponseArgs) ToDayResponseOutput() DayResponseOutput {
	return i.ToDayResponseOutputWithContext(context.Background())
}

func (i DayResponseArgs) ToDayResponseOutputWithContext(ctx context.Context) DayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayResponseOutput)
}

// DayResponseArrayInput is an input type that accepts DayResponseArray and DayResponseArrayOutput values.
// You can construct a concrete instance of `DayResponseArrayInput` via:
//
//          DayResponseArray{ DayResponseArgs{...} }
type DayResponseArrayInput interface {
	pulumi.Input

	ToDayResponseArrayOutput() DayResponseArrayOutput
	ToDayResponseArrayOutputWithContext(context.Context) DayResponseArrayOutput
}

type DayResponseArray []DayResponseInput

func (DayResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayResponse)(nil)).Elem()
}

func (i DayResponseArray) ToDayResponseArrayOutput() DayResponseArrayOutput {
	return i.ToDayResponseArrayOutputWithContext(context.Background())
}

func (i DayResponseArray) ToDayResponseArrayOutputWithContext(ctx context.Context) DayResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayResponseArrayOutput)
}

// Day of the week
type DayResponseOutput struct{ *pulumi.OutputState }

func (DayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayResponse)(nil)).Elem()
}

func (o DayResponseOutput) ToDayResponseOutput() DayResponseOutput {
	return o
}

func (o DayResponseOutput) ToDayResponseOutputWithContext(ctx context.Context) DayResponseOutput {
	return o
}

// Date of the month
func (o DayResponseOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DayResponse) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayResponseOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DayResponse) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayResponseArrayOutput struct{ *pulumi.OutputState }

func (DayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayResponse)(nil)).Elem()
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutput() DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutputWithContext(ctx context.Context) DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) Index(i pulumi.IntInput) DayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayResponse {
		return vs[0].([]DayResponse)[vs[1].(int)]
	}).(DayResponseOutput)
}

// Identity details
type DppIdentityDetails struct {
	// The identityType which can be either SystemAssigned or None
	Type *string `pulumi:"type"`
}

// DppIdentityDetailsInput is an input type that accepts DppIdentityDetailsArgs and DppIdentityDetailsOutput values.
// You can construct a concrete instance of `DppIdentityDetailsInput` via:
//
//          DppIdentityDetailsArgs{...}
type DppIdentityDetailsInput interface {
	pulumi.Input

	ToDppIdentityDetailsOutput() DppIdentityDetailsOutput
	ToDppIdentityDetailsOutputWithContext(context.Context) DppIdentityDetailsOutput
}

// Identity details
type DppIdentityDetailsArgs struct {
	// The identityType which can be either SystemAssigned or None
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DppIdentityDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DppIdentityDetails)(nil)).Elem()
}

func (i DppIdentityDetailsArgs) ToDppIdentityDetailsOutput() DppIdentityDetailsOutput {
	return i.ToDppIdentityDetailsOutputWithContext(context.Background())
}

func (i DppIdentityDetailsArgs) ToDppIdentityDetailsOutputWithContext(ctx context.Context) DppIdentityDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsOutput)
}

func (i DppIdentityDetailsArgs) ToDppIdentityDetailsPtrOutput() DppIdentityDetailsPtrOutput {
	return i.ToDppIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i DppIdentityDetailsArgs) ToDppIdentityDetailsPtrOutputWithContext(ctx context.Context) DppIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsOutput).ToDppIdentityDetailsPtrOutputWithContext(ctx)
}

// DppIdentityDetailsPtrInput is an input type that accepts DppIdentityDetailsArgs, DppIdentityDetailsPtr and DppIdentityDetailsPtrOutput values.
// You can construct a concrete instance of `DppIdentityDetailsPtrInput` via:
//
//          DppIdentityDetailsArgs{...}
//
//  or:
//
//          nil
type DppIdentityDetailsPtrInput interface {
	pulumi.Input

	ToDppIdentityDetailsPtrOutput() DppIdentityDetailsPtrOutput
	ToDppIdentityDetailsPtrOutputWithContext(context.Context) DppIdentityDetailsPtrOutput
}

type dppIdentityDetailsPtrType DppIdentityDetailsArgs

func DppIdentityDetailsPtr(v *DppIdentityDetailsArgs) DppIdentityDetailsPtrInput {
	return (*dppIdentityDetailsPtrType)(v)
}

func (*dppIdentityDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DppIdentityDetails)(nil)).Elem()
}

func (i *dppIdentityDetailsPtrType) ToDppIdentityDetailsPtrOutput() DppIdentityDetailsPtrOutput {
	return i.ToDppIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i *dppIdentityDetailsPtrType) ToDppIdentityDetailsPtrOutputWithContext(ctx context.Context) DppIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsPtrOutput)
}

// Identity details
type DppIdentityDetailsOutput struct{ *pulumi.OutputState }

func (DppIdentityDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DppIdentityDetails)(nil)).Elem()
}

func (o DppIdentityDetailsOutput) ToDppIdentityDetailsOutput() DppIdentityDetailsOutput {
	return o
}

func (o DppIdentityDetailsOutput) ToDppIdentityDetailsOutputWithContext(ctx context.Context) DppIdentityDetailsOutput {
	return o
}

func (o DppIdentityDetailsOutput) ToDppIdentityDetailsPtrOutput() DppIdentityDetailsPtrOutput {
	return o.ToDppIdentityDetailsPtrOutputWithContext(context.Background())
}

func (o DppIdentityDetailsOutput) ToDppIdentityDetailsPtrOutputWithContext(ctx context.Context) DppIdentityDetailsPtrOutput {
	return o.ApplyT(func(v DppIdentityDetails) *DppIdentityDetails {
		return &v
	}).(DppIdentityDetailsPtrOutput)
}

// The identityType which can be either SystemAssigned or None
func (o DppIdentityDetailsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DppIdentityDetails) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DppIdentityDetailsPtrOutput struct{ *pulumi.OutputState }

func (DppIdentityDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DppIdentityDetails)(nil)).Elem()
}

func (o DppIdentityDetailsPtrOutput) ToDppIdentityDetailsPtrOutput() DppIdentityDetailsPtrOutput {
	return o
}

func (o DppIdentityDetailsPtrOutput) ToDppIdentityDetailsPtrOutputWithContext(ctx context.Context) DppIdentityDetailsPtrOutput {
	return o
}

func (o DppIdentityDetailsPtrOutput) Elem() DppIdentityDetailsOutput {
	return o.ApplyT(func(v *DppIdentityDetails) DppIdentityDetails { return *v }).(DppIdentityDetailsOutput)
}

// The identityType which can be either SystemAssigned or None
func (o DppIdentityDetailsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DppIdentityDetails) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity details
type DppIdentityDetailsResponse struct {
	// The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId string `pulumi:"principalId"`
	// A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
	TenantId string `pulumi:"tenantId"`
	// The identityType which can be either SystemAssigned or None
	Type *string `pulumi:"type"`
}

// DppIdentityDetailsResponseInput is an input type that accepts DppIdentityDetailsResponseArgs and DppIdentityDetailsResponseOutput values.
// You can construct a concrete instance of `DppIdentityDetailsResponseInput` via:
//
//          DppIdentityDetailsResponseArgs{...}
type DppIdentityDetailsResponseInput interface {
	pulumi.Input

	ToDppIdentityDetailsResponseOutput() DppIdentityDetailsResponseOutput
	ToDppIdentityDetailsResponseOutputWithContext(context.Context) DppIdentityDetailsResponseOutput
}

// Identity details
type DppIdentityDetailsResponseArgs struct {
	// The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identityType which can be either SystemAssigned or None
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DppIdentityDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DppIdentityDetailsResponse)(nil)).Elem()
}

func (i DppIdentityDetailsResponseArgs) ToDppIdentityDetailsResponseOutput() DppIdentityDetailsResponseOutput {
	return i.ToDppIdentityDetailsResponseOutputWithContext(context.Background())
}

func (i DppIdentityDetailsResponseArgs) ToDppIdentityDetailsResponseOutputWithContext(ctx context.Context) DppIdentityDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsResponseOutput)
}

func (i DppIdentityDetailsResponseArgs) ToDppIdentityDetailsResponsePtrOutput() DppIdentityDetailsResponsePtrOutput {
	return i.ToDppIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (i DppIdentityDetailsResponseArgs) ToDppIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) DppIdentityDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsResponseOutput).ToDppIdentityDetailsResponsePtrOutputWithContext(ctx)
}

// DppIdentityDetailsResponsePtrInput is an input type that accepts DppIdentityDetailsResponseArgs, DppIdentityDetailsResponsePtr and DppIdentityDetailsResponsePtrOutput values.
// You can construct a concrete instance of `DppIdentityDetailsResponsePtrInput` via:
//
//          DppIdentityDetailsResponseArgs{...}
//
//  or:
//
//          nil
type DppIdentityDetailsResponsePtrInput interface {
	pulumi.Input

	ToDppIdentityDetailsResponsePtrOutput() DppIdentityDetailsResponsePtrOutput
	ToDppIdentityDetailsResponsePtrOutputWithContext(context.Context) DppIdentityDetailsResponsePtrOutput
}

type dppIdentityDetailsResponsePtrType DppIdentityDetailsResponseArgs

func DppIdentityDetailsResponsePtr(v *DppIdentityDetailsResponseArgs) DppIdentityDetailsResponsePtrInput {
	return (*dppIdentityDetailsResponsePtrType)(v)
}

func (*dppIdentityDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DppIdentityDetailsResponse)(nil)).Elem()
}

func (i *dppIdentityDetailsResponsePtrType) ToDppIdentityDetailsResponsePtrOutput() DppIdentityDetailsResponsePtrOutput {
	return i.ToDppIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *dppIdentityDetailsResponsePtrType) ToDppIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) DppIdentityDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DppIdentityDetailsResponsePtrOutput)
}

// Identity details
type DppIdentityDetailsResponseOutput struct{ *pulumi.OutputState }

func (DppIdentityDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DppIdentityDetailsResponse)(nil)).Elem()
}

func (o DppIdentityDetailsResponseOutput) ToDppIdentityDetailsResponseOutput() DppIdentityDetailsResponseOutput {
	return o
}

func (o DppIdentityDetailsResponseOutput) ToDppIdentityDetailsResponseOutputWithContext(ctx context.Context) DppIdentityDetailsResponseOutput {
	return o
}

func (o DppIdentityDetailsResponseOutput) ToDppIdentityDetailsResponsePtrOutput() DppIdentityDetailsResponsePtrOutput {
	return o.ToDppIdentityDetailsResponsePtrOutputWithContext(context.Background())
}

func (o DppIdentityDetailsResponseOutput) ToDppIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) DppIdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v DppIdentityDetailsResponse) *DppIdentityDetailsResponse {
		return &v
	}).(DppIdentityDetailsResponsePtrOutput)
}

// The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
func (o DppIdentityDetailsResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v DppIdentityDetailsResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
func (o DppIdentityDetailsResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v DppIdentityDetailsResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identityType which can be either SystemAssigned or None
func (o DppIdentityDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DppIdentityDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DppIdentityDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (DppIdentityDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DppIdentityDetailsResponse)(nil)).Elem()
}

func (o DppIdentityDetailsResponsePtrOutput) ToDppIdentityDetailsResponsePtrOutput() DppIdentityDetailsResponsePtrOutput {
	return o
}

func (o DppIdentityDetailsResponsePtrOutput) ToDppIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) DppIdentityDetailsResponsePtrOutput {
	return o
}

func (o DppIdentityDetailsResponsePtrOutput) Elem() DppIdentityDetailsResponseOutput {
	return o.ApplyT(func(v *DppIdentityDetailsResponse) DppIdentityDetailsResponse { return *v }).(DppIdentityDetailsResponseOutput)
}

// The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.
func (o DppIdentityDetailsResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DppIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.
func (o DppIdentityDetailsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DppIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identityType which can be either SystemAssigned or None
func (o DppIdentityDetailsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DppIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Immediate copy Option
type ImmediateCopyOption struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ImmediateCopyOption'.
	ObjectType string `pulumi:"objectType"`
}

// ImmediateCopyOptionInput is an input type that accepts ImmediateCopyOptionArgs and ImmediateCopyOptionOutput values.
// You can construct a concrete instance of `ImmediateCopyOptionInput` via:
//
//          ImmediateCopyOptionArgs{...}
type ImmediateCopyOptionInput interface {
	pulumi.Input

	ToImmediateCopyOptionOutput() ImmediateCopyOptionOutput
	ToImmediateCopyOptionOutputWithContext(context.Context) ImmediateCopyOptionOutput
}

// Immediate copy Option
type ImmediateCopyOptionArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ImmediateCopyOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (ImmediateCopyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmediateCopyOption)(nil)).Elem()
}

func (i ImmediateCopyOptionArgs) ToImmediateCopyOptionOutput() ImmediateCopyOptionOutput {
	return i.ToImmediateCopyOptionOutputWithContext(context.Background())
}

func (i ImmediateCopyOptionArgs) ToImmediateCopyOptionOutputWithContext(ctx context.Context) ImmediateCopyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmediateCopyOptionOutput)
}

// Immediate copy Option
type ImmediateCopyOptionOutput struct{ *pulumi.OutputState }

func (ImmediateCopyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmediateCopyOption)(nil)).Elem()
}

func (o ImmediateCopyOptionOutput) ToImmediateCopyOptionOutput() ImmediateCopyOptionOutput {
	return o
}

func (o ImmediateCopyOptionOutput) ToImmediateCopyOptionOutputWithContext(ctx context.Context) ImmediateCopyOptionOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'ImmediateCopyOption'.
func (o ImmediateCopyOptionOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ImmediateCopyOption) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Immediate copy Option
type ImmediateCopyOptionResponse struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ImmediateCopyOption'.
	ObjectType string `pulumi:"objectType"`
}

// ImmediateCopyOptionResponseInput is an input type that accepts ImmediateCopyOptionResponseArgs and ImmediateCopyOptionResponseOutput values.
// You can construct a concrete instance of `ImmediateCopyOptionResponseInput` via:
//
//          ImmediateCopyOptionResponseArgs{...}
type ImmediateCopyOptionResponseInput interface {
	pulumi.Input

	ToImmediateCopyOptionResponseOutput() ImmediateCopyOptionResponseOutput
	ToImmediateCopyOptionResponseOutputWithContext(context.Context) ImmediateCopyOptionResponseOutput
}

// Immediate copy Option
type ImmediateCopyOptionResponseArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ImmediateCopyOption'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (ImmediateCopyOptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmediateCopyOptionResponse)(nil)).Elem()
}

func (i ImmediateCopyOptionResponseArgs) ToImmediateCopyOptionResponseOutput() ImmediateCopyOptionResponseOutput {
	return i.ToImmediateCopyOptionResponseOutputWithContext(context.Background())
}

func (i ImmediateCopyOptionResponseArgs) ToImmediateCopyOptionResponseOutputWithContext(ctx context.Context) ImmediateCopyOptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmediateCopyOptionResponseOutput)
}

// Immediate copy Option
type ImmediateCopyOptionResponseOutput struct{ *pulumi.OutputState }

func (ImmediateCopyOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmediateCopyOptionResponse)(nil)).Elem()
}

func (o ImmediateCopyOptionResponseOutput) ToImmediateCopyOptionResponseOutput() ImmediateCopyOptionResponseOutput {
	return o
}

func (o ImmediateCopyOptionResponseOutput) ToImmediateCopyOptionResponseOutputWithContext(ctx context.Context) ImmediateCopyOptionResponseOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'ImmediateCopyOption'.
func (o ImmediateCopyOptionResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ImmediateCopyOptionResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Inner Error
type InnerErrorResponse struct {
	// Any Key value pairs that can be provided to the client for additional  verbose information.
	AdditionalInfo map[string]string `pulumi:"additionalInfo"`
	// Unique code for this error
	Code *string `pulumi:"code"`
	// Child Inner Error, to allow Nesting.
	EmbeddedInnerError *InnerErrorResponse `pulumi:"embeddedInnerError"`
}

// InnerErrorResponseInput is an input type that accepts InnerErrorResponseArgs and InnerErrorResponseOutput values.
// You can construct a concrete instance of `InnerErrorResponseInput` via:
//
//          InnerErrorResponseArgs{...}
type InnerErrorResponseInput interface {
	pulumi.Input

	ToInnerErrorResponseOutput() InnerErrorResponseOutput
	ToInnerErrorResponseOutputWithContext(context.Context) InnerErrorResponseOutput
}

// Inner Error
type InnerErrorResponseArgs struct {
	// Any Key value pairs that can be provided to the client for additional  verbose information.
	AdditionalInfo pulumi.StringMapInput `pulumi:"additionalInfo"`
	// Unique code for this error
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Child Inner Error, to allow Nesting.
	EmbeddedInnerError InnerErrorResponsePtrInput `pulumi:"embeddedInnerError"`
}

func (InnerErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InnerErrorResponse)(nil)).Elem()
}

func (i InnerErrorResponseArgs) ToInnerErrorResponseOutput() InnerErrorResponseOutput {
	return i.ToInnerErrorResponseOutputWithContext(context.Background())
}

func (i InnerErrorResponseArgs) ToInnerErrorResponseOutputWithContext(ctx context.Context) InnerErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InnerErrorResponseOutput)
}

func (i InnerErrorResponseArgs) ToInnerErrorResponsePtrOutput() InnerErrorResponsePtrOutput {
	return i.ToInnerErrorResponsePtrOutputWithContext(context.Background())
}

func (i InnerErrorResponseArgs) ToInnerErrorResponsePtrOutputWithContext(ctx context.Context) InnerErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InnerErrorResponseOutput).ToInnerErrorResponsePtrOutputWithContext(ctx)
}

// InnerErrorResponsePtrInput is an input type that accepts InnerErrorResponseArgs, InnerErrorResponsePtr and InnerErrorResponsePtrOutput values.
// You can construct a concrete instance of `InnerErrorResponsePtrInput` via:
//
//          InnerErrorResponseArgs{...}
//
//  or:
//
//          nil
type InnerErrorResponsePtrInput interface {
	pulumi.Input

	ToInnerErrorResponsePtrOutput() InnerErrorResponsePtrOutput
	ToInnerErrorResponsePtrOutputWithContext(context.Context) InnerErrorResponsePtrOutput
}

type innerErrorResponsePtrType InnerErrorResponseArgs

func InnerErrorResponsePtr(v *InnerErrorResponseArgs) InnerErrorResponsePtrInput {
	return (*innerErrorResponsePtrType)(v)
}

func (*innerErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InnerErrorResponse)(nil)).Elem()
}

func (i *innerErrorResponsePtrType) ToInnerErrorResponsePtrOutput() InnerErrorResponsePtrOutput {
	return i.ToInnerErrorResponsePtrOutputWithContext(context.Background())
}

func (i *innerErrorResponsePtrType) ToInnerErrorResponsePtrOutputWithContext(ctx context.Context) InnerErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InnerErrorResponsePtrOutput)
}

// Inner Error
type InnerErrorResponseOutput struct{ *pulumi.OutputState }

func (InnerErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InnerErrorResponse)(nil)).Elem()
}

func (o InnerErrorResponseOutput) ToInnerErrorResponseOutput() InnerErrorResponseOutput {
	return o
}

func (o InnerErrorResponseOutput) ToInnerErrorResponseOutputWithContext(ctx context.Context) InnerErrorResponseOutput {
	return o
}

func (o InnerErrorResponseOutput) ToInnerErrorResponsePtrOutput() InnerErrorResponsePtrOutput {
	return o.ToInnerErrorResponsePtrOutputWithContext(context.Background())
}

func (o InnerErrorResponseOutput) ToInnerErrorResponsePtrOutputWithContext(ctx context.Context) InnerErrorResponsePtrOutput {
	return o.ApplyT(func(v InnerErrorResponse) *InnerErrorResponse {
		return &v
	}).(InnerErrorResponsePtrOutput)
}

// Any Key value pairs that can be provided to the client for additional  verbose information.
func (o InnerErrorResponseOutput) AdditionalInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v InnerErrorResponse) map[string]string { return v.AdditionalInfo }).(pulumi.StringMapOutput)
}

// Unique code for this error
func (o InnerErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Child Inner Error, to allow Nesting.
func (o InnerErrorResponseOutput) EmbeddedInnerError() InnerErrorResponsePtrOutput {
	return o.ApplyT(func(v InnerErrorResponse) *InnerErrorResponse { return v.EmbeddedInnerError }).(InnerErrorResponsePtrOutput)
}

type InnerErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (InnerErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InnerErrorResponse)(nil)).Elem()
}

func (o InnerErrorResponsePtrOutput) ToInnerErrorResponsePtrOutput() InnerErrorResponsePtrOutput {
	return o
}

func (o InnerErrorResponsePtrOutput) ToInnerErrorResponsePtrOutputWithContext(ctx context.Context) InnerErrorResponsePtrOutput {
	return o
}

func (o InnerErrorResponsePtrOutput) Elem() InnerErrorResponseOutput {
	return o.ApplyT(func(v *InnerErrorResponse) InnerErrorResponse { return *v }).(InnerErrorResponseOutput)
}

// Any Key value pairs that can be provided to the client for additional  verbose information.
func (o InnerErrorResponsePtrOutput) AdditionalInfo() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InnerErrorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(pulumi.StringMapOutput)
}

// Unique code for this error
func (o InnerErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InnerErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Child Inner Error, to allow Nesting.
func (o InnerErrorResponsePtrOutput) EmbeddedInnerError() InnerErrorResponsePtrOutput {
	return o.ApplyT(func(v *InnerErrorResponse) *InnerErrorResponse {
		if v == nil {
			return nil
		}
		return v.EmbeddedInnerError
	}).(InnerErrorResponsePtrOutput)
}

// Policy Info in backupInstance
type PolicyInfo struct {
	PolicyId string `pulumi:"policyId"`
	// Policy parameters for the backup instance
	PolicyParameters *PolicyParameters `pulumi:"policyParameters"`
}

// PolicyInfoInput is an input type that accepts PolicyInfoArgs and PolicyInfoOutput values.
// You can construct a concrete instance of `PolicyInfoInput` via:
//
//          PolicyInfoArgs{...}
type PolicyInfoInput interface {
	pulumi.Input

	ToPolicyInfoOutput() PolicyInfoOutput
	ToPolicyInfoOutputWithContext(context.Context) PolicyInfoOutput
}

// Policy Info in backupInstance
type PolicyInfoArgs struct {
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Policy parameters for the backup instance
	PolicyParameters PolicyParametersPtrInput `pulumi:"policyParameters"`
}

func (PolicyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInfo)(nil)).Elem()
}

func (i PolicyInfoArgs) ToPolicyInfoOutput() PolicyInfoOutput {
	return i.ToPolicyInfoOutputWithContext(context.Background())
}

func (i PolicyInfoArgs) ToPolicyInfoOutputWithContext(ctx context.Context) PolicyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoOutput)
}

func (i PolicyInfoArgs) ToPolicyInfoPtrOutput() PolicyInfoPtrOutput {
	return i.ToPolicyInfoPtrOutputWithContext(context.Background())
}

func (i PolicyInfoArgs) ToPolicyInfoPtrOutputWithContext(ctx context.Context) PolicyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoOutput).ToPolicyInfoPtrOutputWithContext(ctx)
}

// PolicyInfoPtrInput is an input type that accepts PolicyInfoArgs, PolicyInfoPtr and PolicyInfoPtrOutput values.
// You can construct a concrete instance of `PolicyInfoPtrInput` via:
//
//          PolicyInfoArgs{...}
//
//  or:
//
//          nil
type PolicyInfoPtrInput interface {
	pulumi.Input

	ToPolicyInfoPtrOutput() PolicyInfoPtrOutput
	ToPolicyInfoPtrOutputWithContext(context.Context) PolicyInfoPtrOutput
}

type policyInfoPtrType PolicyInfoArgs

func PolicyInfoPtr(v *PolicyInfoArgs) PolicyInfoPtrInput {
	return (*policyInfoPtrType)(v)
}

func (*policyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInfo)(nil)).Elem()
}

func (i *policyInfoPtrType) ToPolicyInfoPtrOutput() PolicyInfoPtrOutput {
	return i.ToPolicyInfoPtrOutputWithContext(context.Background())
}

func (i *policyInfoPtrType) ToPolicyInfoPtrOutputWithContext(ctx context.Context) PolicyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoPtrOutput)
}

// Policy Info in backupInstance
type PolicyInfoOutput struct{ *pulumi.OutputState }

func (PolicyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInfo)(nil)).Elem()
}

func (o PolicyInfoOutput) ToPolicyInfoOutput() PolicyInfoOutput {
	return o
}

func (o PolicyInfoOutput) ToPolicyInfoOutputWithContext(ctx context.Context) PolicyInfoOutput {
	return o
}

func (o PolicyInfoOutput) ToPolicyInfoPtrOutput() PolicyInfoPtrOutput {
	return o.ToPolicyInfoPtrOutputWithContext(context.Background())
}

func (o PolicyInfoOutput) ToPolicyInfoPtrOutputWithContext(ctx context.Context) PolicyInfoPtrOutput {
	return o.ApplyT(func(v PolicyInfo) *PolicyInfo {
		return &v
	}).(PolicyInfoPtrOutput)
}
func (o PolicyInfoOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyInfo) string { return v.PolicyId }).(pulumi.StringOutput)
}

// Policy parameters for the backup instance
func (o PolicyInfoOutput) PolicyParameters() PolicyParametersPtrOutput {
	return o.ApplyT(func(v PolicyInfo) *PolicyParameters { return v.PolicyParameters }).(PolicyParametersPtrOutput)
}

type PolicyInfoPtrOutput struct{ *pulumi.OutputState }

func (PolicyInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInfo)(nil)).Elem()
}

func (o PolicyInfoPtrOutput) ToPolicyInfoPtrOutput() PolicyInfoPtrOutput {
	return o
}

func (o PolicyInfoPtrOutput) ToPolicyInfoPtrOutputWithContext(ctx context.Context) PolicyInfoPtrOutput {
	return o
}

func (o PolicyInfoPtrOutput) Elem() PolicyInfoOutput {
	return o.ApplyT(func(v *PolicyInfo) PolicyInfo { return *v }).(PolicyInfoOutput)
}

func (o PolicyInfoPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyInfo) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Policy parameters for the backup instance
func (o PolicyInfoPtrOutput) PolicyParameters() PolicyParametersPtrOutput {
	return o.ApplyT(func(v *PolicyInfo) *PolicyParameters {
		if v == nil {
			return nil
		}
		return v.PolicyParameters
	}).(PolicyParametersPtrOutput)
}

// Policy Info in backupInstance
type PolicyInfoResponse struct {
	PolicyId string `pulumi:"policyId"`
	// Policy parameters for the backup instance
	PolicyParameters *PolicyParametersResponse `pulumi:"policyParameters"`
	PolicyVersion    string                    `pulumi:"policyVersion"`
}

// PolicyInfoResponseInput is an input type that accepts PolicyInfoResponseArgs and PolicyInfoResponseOutput values.
// You can construct a concrete instance of `PolicyInfoResponseInput` via:
//
//          PolicyInfoResponseArgs{...}
type PolicyInfoResponseInput interface {
	pulumi.Input

	ToPolicyInfoResponseOutput() PolicyInfoResponseOutput
	ToPolicyInfoResponseOutputWithContext(context.Context) PolicyInfoResponseOutput
}

// Policy Info in backupInstance
type PolicyInfoResponseArgs struct {
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Policy parameters for the backup instance
	PolicyParameters PolicyParametersResponsePtrInput `pulumi:"policyParameters"`
	PolicyVersion    pulumi.StringInput               `pulumi:"policyVersion"`
}

func (PolicyInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInfoResponse)(nil)).Elem()
}

func (i PolicyInfoResponseArgs) ToPolicyInfoResponseOutput() PolicyInfoResponseOutput {
	return i.ToPolicyInfoResponseOutputWithContext(context.Background())
}

func (i PolicyInfoResponseArgs) ToPolicyInfoResponseOutputWithContext(ctx context.Context) PolicyInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoResponseOutput)
}

func (i PolicyInfoResponseArgs) ToPolicyInfoResponsePtrOutput() PolicyInfoResponsePtrOutput {
	return i.ToPolicyInfoResponsePtrOutputWithContext(context.Background())
}

func (i PolicyInfoResponseArgs) ToPolicyInfoResponsePtrOutputWithContext(ctx context.Context) PolicyInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoResponseOutput).ToPolicyInfoResponsePtrOutputWithContext(ctx)
}

// PolicyInfoResponsePtrInput is an input type that accepts PolicyInfoResponseArgs, PolicyInfoResponsePtr and PolicyInfoResponsePtrOutput values.
// You can construct a concrete instance of `PolicyInfoResponsePtrInput` via:
//
//          PolicyInfoResponseArgs{...}
//
//  or:
//
//          nil
type PolicyInfoResponsePtrInput interface {
	pulumi.Input

	ToPolicyInfoResponsePtrOutput() PolicyInfoResponsePtrOutput
	ToPolicyInfoResponsePtrOutputWithContext(context.Context) PolicyInfoResponsePtrOutput
}

type policyInfoResponsePtrType PolicyInfoResponseArgs

func PolicyInfoResponsePtr(v *PolicyInfoResponseArgs) PolicyInfoResponsePtrInput {
	return (*policyInfoResponsePtrType)(v)
}

func (*policyInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInfoResponse)(nil)).Elem()
}

func (i *policyInfoResponsePtrType) ToPolicyInfoResponsePtrOutput() PolicyInfoResponsePtrOutput {
	return i.ToPolicyInfoResponsePtrOutputWithContext(context.Background())
}

func (i *policyInfoResponsePtrType) ToPolicyInfoResponsePtrOutputWithContext(ctx context.Context) PolicyInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyInfoResponsePtrOutput)
}

// Policy Info in backupInstance
type PolicyInfoResponseOutput struct{ *pulumi.OutputState }

func (PolicyInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyInfoResponse)(nil)).Elem()
}

func (o PolicyInfoResponseOutput) ToPolicyInfoResponseOutput() PolicyInfoResponseOutput {
	return o
}

func (o PolicyInfoResponseOutput) ToPolicyInfoResponseOutputWithContext(ctx context.Context) PolicyInfoResponseOutput {
	return o
}

func (o PolicyInfoResponseOutput) ToPolicyInfoResponsePtrOutput() PolicyInfoResponsePtrOutput {
	return o.ToPolicyInfoResponsePtrOutputWithContext(context.Background())
}

func (o PolicyInfoResponseOutput) ToPolicyInfoResponsePtrOutputWithContext(ctx context.Context) PolicyInfoResponsePtrOutput {
	return o.ApplyT(func(v PolicyInfoResponse) *PolicyInfoResponse {
		return &v
	}).(PolicyInfoResponsePtrOutput)
}
func (o PolicyInfoResponseOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyInfoResponse) string { return v.PolicyId }).(pulumi.StringOutput)
}

// Policy parameters for the backup instance
func (o PolicyInfoResponseOutput) PolicyParameters() PolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v PolicyInfoResponse) *PolicyParametersResponse { return v.PolicyParameters }).(PolicyParametersResponsePtrOutput)
}

func (o PolicyInfoResponseOutput) PolicyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyInfoResponse) string { return v.PolicyVersion }).(pulumi.StringOutput)
}

type PolicyInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyInfoResponse)(nil)).Elem()
}

func (o PolicyInfoResponsePtrOutput) ToPolicyInfoResponsePtrOutput() PolicyInfoResponsePtrOutput {
	return o
}

func (o PolicyInfoResponsePtrOutput) ToPolicyInfoResponsePtrOutputWithContext(ctx context.Context) PolicyInfoResponsePtrOutput {
	return o
}

func (o PolicyInfoResponsePtrOutput) Elem() PolicyInfoResponseOutput {
	return o.ApplyT(func(v *PolicyInfoResponse) PolicyInfoResponse { return *v }).(PolicyInfoResponseOutput)
}

func (o PolicyInfoResponsePtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Policy parameters for the backup instance
func (o PolicyInfoResponsePtrOutput) PolicyParameters() PolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v *PolicyInfoResponse) *PolicyParametersResponse {
		if v == nil {
			return nil
		}
		return v.PolicyParameters
	}).(PolicyParametersResponsePtrOutput)
}

func (o PolicyInfoResponsePtrOutput) PolicyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyVersion
	}).(pulumi.StringPtrOutput)
}

// Parameters in Policy
type PolicyParameters struct {
	// Gets or sets the DataStore Parameters
	DataStoreParametersList []AzureOperationalStoreParameters `pulumi:"dataStoreParametersList"`
}

// PolicyParametersInput is an input type that accepts PolicyParametersArgs and PolicyParametersOutput values.
// You can construct a concrete instance of `PolicyParametersInput` via:
//
//          PolicyParametersArgs{...}
type PolicyParametersInput interface {
	pulumi.Input

	ToPolicyParametersOutput() PolicyParametersOutput
	ToPolicyParametersOutputWithContext(context.Context) PolicyParametersOutput
}

// Parameters in Policy
type PolicyParametersArgs struct {
	// Gets or sets the DataStore Parameters
	DataStoreParametersList AzureOperationalStoreParametersArrayInput `pulumi:"dataStoreParametersList"`
}

func (PolicyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyParameters)(nil)).Elem()
}

func (i PolicyParametersArgs) ToPolicyParametersOutput() PolicyParametersOutput {
	return i.ToPolicyParametersOutputWithContext(context.Background())
}

func (i PolicyParametersArgs) ToPolicyParametersOutputWithContext(ctx context.Context) PolicyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersOutput)
}

func (i PolicyParametersArgs) ToPolicyParametersPtrOutput() PolicyParametersPtrOutput {
	return i.ToPolicyParametersPtrOutputWithContext(context.Background())
}

func (i PolicyParametersArgs) ToPolicyParametersPtrOutputWithContext(ctx context.Context) PolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersOutput).ToPolicyParametersPtrOutputWithContext(ctx)
}

// PolicyParametersPtrInput is an input type that accepts PolicyParametersArgs, PolicyParametersPtr and PolicyParametersPtrOutput values.
// You can construct a concrete instance of `PolicyParametersPtrInput` via:
//
//          PolicyParametersArgs{...}
//
//  or:
//
//          nil
type PolicyParametersPtrInput interface {
	pulumi.Input

	ToPolicyParametersPtrOutput() PolicyParametersPtrOutput
	ToPolicyParametersPtrOutputWithContext(context.Context) PolicyParametersPtrOutput
}

type policyParametersPtrType PolicyParametersArgs

func PolicyParametersPtr(v *PolicyParametersArgs) PolicyParametersPtrInput {
	return (*policyParametersPtrType)(v)
}

func (*policyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyParameters)(nil)).Elem()
}

func (i *policyParametersPtrType) ToPolicyParametersPtrOutput() PolicyParametersPtrOutput {
	return i.ToPolicyParametersPtrOutputWithContext(context.Background())
}

func (i *policyParametersPtrType) ToPolicyParametersPtrOutputWithContext(ctx context.Context) PolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersPtrOutput)
}

// Parameters in Policy
type PolicyParametersOutput struct{ *pulumi.OutputState }

func (PolicyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyParameters)(nil)).Elem()
}

func (o PolicyParametersOutput) ToPolicyParametersOutput() PolicyParametersOutput {
	return o
}

func (o PolicyParametersOutput) ToPolicyParametersOutputWithContext(ctx context.Context) PolicyParametersOutput {
	return o
}

func (o PolicyParametersOutput) ToPolicyParametersPtrOutput() PolicyParametersPtrOutput {
	return o.ToPolicyParametersPtrOutputWithContext(context.Background())
}

func (o PolicyParametersOutput) ToPolicyParametersPtrOutputWithContext(ctx context.Context) PolicyParametersPtrOutput {
	return o.ApplyT(func(v PolicyParameters) *PolicyParameters {
		return &v
	}).(PolicyParametersPtrOutput)
}

// Gets or sets the DataStore Parameters
func (o PolicyParametersOutput) DataStoreParametersList() AzureOperationalStoreParametersArrayOutput {
	return o.ApplyT(func(v PolicyParameters) []AzureOperationalStoreParameters { return v.DataStoreParametersList }).(AzureOperationalStoreParametersArrayOutput)
}

type PolicyParametersPtrOutput struct{ *pulumi.OutputState }

func (PolicyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyParameters)(nil)).Elem()
}

func (o PolicyParametersPtrOutput) ToPolicyParametersPtrOutput() PolicyParametersPtrOutput {
	return o
}

func (o PolicyParametersPtrOutput) ToPolicyParametersPtrOutputWithContext(ctx context.Context) PolicyParametersPtrOutput {
	return o
}

func (o PolicyParametersPtrOutput) Elem() PolicyParametersOutput {
	return o.ApplyT(func(v *PolicyParameters) PolicyParameters { return *v }).(PolicyParametersOutput)
}

// Gets or sets the DataStore Parameters
func (o PolicyParametersPtrOutput) DataStoreParametersList() AzureOperationalStoreParametersArrayOutput {
	return o.ApplyT(func(v *PolicyParameters) []AzureOperationalStoreParameters {
		if v == nil {
			return nil
		}
		return v.DataStoreParametersList
	}).(AzureOperationalStoreParametersArrayOutput)
}

// Parameters in Policy
type PolicyParametersResponse struct {
	// Gets or sets the DataStore Parameters
	DataStoreParametersList []AzureOperationalStoreParametersResponse `pulumi:"dataStoreParametersList"`
}

// PolicyParametersResponseInput is an input type that accepts PolicyParametersResponseArgs and PolicyParametersResponseOutput values.
// You can construct a concrete instance of `PolicyParametersResponseInput` via:
//
//          PolicyParametersResponseArgs{...}
type PolicyParametersResponseInput interface {
	pulumi.Input

	ToPolicyParametersResponseOutput() PolicyParametersResponseOutput
	ToPolicyParametersResponseOutputWithContext(context.Context) PolicyParametersResponseOutput
}

// Parameters in Policy
type PolicyParametersResponseArgs struct {
	// Gets or sets the DataStore Parameters
	DataStoreParametersList AzureOperationalStoreParametersResponseArrayInput `pulumi:"dataStoreParametersList"`
}

func (PolicyParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyParametersResponse)(nil)).Elem()
}

func (i PolicyParametersResponseArgs) ToPolicyParametersResponseOutput() PolicyParametersResponseOutput {
	return i.ToPolicyParametersResponseOutputWithContext(context.Background())
}

func (i PolicyParametersResponseArgs) ToPolicyParametersResponseOutputWithContext(ctx context.Context) PolicyParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersResponseOutput)
}

func (i PolicyParametersResponseArgs) ToPolicyParametersResponsePtrOutput() PolicyParametersResponsePtrOutput {
	return i.ToPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (i PolicyParametersResponseArgs) ToPolicyParametersResponsePtrOutputWithContext(ctx context.Context) PolicyParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersResponseOutput).ToPolicyParametersResponsePtrOutputWithContext(ctx)
}

// PolicyParametersResponsePtrInput is an input type that accepts PolicyParametersResponseArgs, PolicyParametersResponsePtr and PolicyParametersResponsePtrOutput values.
// You can construct a concrete instance of `PolicyParametersResponsePtrInput` via:
//
//          PolicyParametersResponseArgs{...}
//
//  or:
//
//          nil
type PolicyParametersResponsePtrInput interface {
	pulumi.Input

	ToPolicyParametersResponsePtrOutput() PolicyParametersResponsePtrOutput
	ToPolicyParametersResponsePtrOutputWithContext(context.Context) PolicyParametersResponsePtrOutput
}

type policyParametersResponsePtrType PolicyParametersResponseArgs

func PolicyParametersResponsePtr(v *PolicyParametersResponseArgs) PolicyParametersResponsePtrInput {
	return (*policyParametersResponsePtrType)(v)
}

func (*policyParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyParametersResponse)(nil)).Elem()
}

func (i *policyParametersResponsePtrType) ToPolicyParametersResponsePtrOutput() PolicyParametersResponsePtrOutput {
	return i.ToPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (i *policyParametersResponsePtrType) ToPolicyParametersResponsePtrOutputWithContext(ctx context.Context) PolicyParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyParametersResponsePtrOutput)
}

// Parameters in Policy
type PolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (PolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyParametersResponse)(nil)).Elem()
}

func (o PolicyParametersResponseOutput) ToPolicyParametersResponseOutput() PolicyParametersResponseOutput {
	return o
}

func (o PolicyParametersResponseOutput) ToPolicyParametersResponseOutputWithContext(ctx context.Context) PolicyParametersResponseOutput {
	return o
}

func (o PolicyParametersResponseOutput) ToPolicyParametersResponsePtrOutput() PolicyParametersResponsePtrOutput {
	return o.ToPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (o PolicyParametersResponseOutput) ToPolicyParametersResponsePtrOutputWithContext(ctx context.Context) PolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v PolicyParametersResponse) *PolicyParametersResponse {
		return &v
	}).(PolicyParametersResponsePtrOutput)
}

// Gets or sets the DataStore Parameters
func (o PolicyParametersResponseOutput) DataStoreParametersList() AzureOperationalStoreParametersResponseArrayOutput {
	return o.ApplyT(func(v PolicyParametersResponse) []AzureOperationalStoreParametersResponse {
		return v.DataStoreParametersList
	}).(AzureOperationalStoreParametersResponseArrayOutput)
}

type PolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyParametersResponse)(nil)).Elem()
}

func (o PolicyParametersResponsePtrOutput) ToPolicyParametersResponsePtrOutput() PolicyParametersResponsePtrOutput {
	return o
}

func (o PolicyParametersResponsePtrOutput) ToPolicyParametersResponsePtrOutputWithContext(ctx context.Context) PolicyParametersResponsePtrOutput {
	return o
}

func (o PolicyParametersResponsePtrOutput) Elem() PolicyParametersResponseOutput {
	return o.ApplyT(func(v *PolicyParametersResponse) PolicyParametersResponse { return *v }).(PolicyParametersResponseOutput)
}

// Gets or sets the DataStore Parameters
func (o PolicyParametersResponsePtrOutput) DataStoreParametersList() AzureOperationalStoreParametersResponseArrayOutput {
	return o.ApplyT(func(v *PolicyParametersResponse) []AzureOperationalStoreParametersResponse {
		if v == nil {
			return nil
		}
		return v.DataStoreParametersList
	}).(AzureOperationalStoreParametersResponseArrayOutput)
}

// Protection status details
type ProtectionStatusDetailsResponse struct {
	// Specifies the protection status error of the resource
	ErrorDetails *UserFacingErrorResponse `pulumi:"errorDetails"`
	// Specifies the protection status of the resource
	Status *string `pulumi:"status"`
}

// ProtectionStatusDetailsResponseInput is an input type that accepts ProtectionStatusDetailsResponseArgs and ProtectionStatusDetailsResponseOutput values.
// You can construct a concrete instance of `ProtectionStatusDetailsResponseInput` via:
//
//          ProtectionStatusDetailsResponseArgs{...}
type ProtectionStatusDetailsResponseInput interface {
	pulumi.Input

	ToProtectionStatusDetailsResponseOutput() ProtectionStatusDetailsResponseOutput
	ToProtectionStatusDetailsResponseOutputWithContext(context.Context) ProtectionStatusDetailsResponseOutput
}

// Protection status details
type ProtectionStatusDetailsResponseArgs struct {
	// Specifies the protection status error of the resource
	ErrorDetails UserFacingErrorResponsePtrInput `pulumi:"errorDetails"`
	// Specifies the protection status of the resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProtectionStatusDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionStatusDetailsResponse)(nil)).Elem()
}

func (i ProtectionStatusDetailsResponseArgs) ToProtectionStatusDetailsResponseOutput() ProtectionStatusDetailsResponseOutput {
	return i.ToProtectionStatusDetailsResponseOutputWithContext(context.Background())
}

func (i ProtectionStatusDetailsResponseArgs) ToProtectionStatusDetailsResponseOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionStatusDetailsResponseOutput)
}

func (i ProtectionStatusDetailsResponseArgs) ToProtectionStatusDetailsResponsePtrOutput() ProtectionStatusDetailsResponsePtrOutput {
	return i.ToProtectionStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ProtectionStatusDetailsResponseArgs) ToProtectionStatusDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionStatusDetailsResponseOutput).ToProtectionStatusDetailsResponsePtrOutputWithContext(ctx)
}

// ProtectionStatusDetailsResponsePtrInput is an input type that accepts ProtectionStatusDetailsResponseArgs, ProtectionStatusDetailsResponsePtr and ProtectionStatusDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ProtectionStatusDetailsResponsePtrInput` via:
//
//          ProtectionStatusDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ProtectionStatusDetailsResponsePtrInput interface {
	pulumi.Input

	ToProtectionStatusDetailsResponsePtrOutput() ProtectionStatusDetailsResponsePtrOutput
	ToProtectionStatusDetailsResponsePtrOutputWithContext(context.Context) ProtectionStatusDetailsResponsePtrOutput
}

type protectionStatusDetailsResponsePtrType ProtectionStatusDetailsResponseArgs

func ProtectionStatusDetailsResponsePtr(v *ProtectionStatusDetailsResponseArgs) ProtectionStatusDetailsResponsePtrInput {
	return (*protectionStatusDetailsResponsePtrType)(v)
}

func (*protectionStatusDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionStatusDetailsResponse)(nil)).Elem()
}

func (i *protectionStatusDetailsResponsePtrType) ToProtectionStatusDetailsResponsePtrOutput() ProtectionStatusDetailsResponsePtrOutput {
	return i.ToProtectionStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *protectionStatusDetailsResponsePtrType) ToProtectionStatusDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionStatusDetailsResponsePtrOutput)
}

// Protection status details
type ProtectionStatusDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProtectionStatusDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionStatusDetailsResponse)(nil)).Elem()
}

func (o ProtectionStatusDetailsResponseOutput) ToProtectionStatusDetailsResponseOutput() ProtectionStatusDetailsResponseOutput {
	return o
}

func (o ProtectionStatusDetailsResponseOutput) ToProtectionStatusDetailsResponseOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponseOutput {
	return o
}

func (o ProtectionStatusDetailsResponseOutput) ToProtectionStatusDetailsResponsePtrOutput() ProtectionStatusDetailsResponsePtrOutput {
	return o.ToProtectionStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ProtectionStatusDetailsResponseOutput) ToProtectionStatusDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProtectionStatusDetailsResponse) *ProtectionStatusDetailsResponse {
		return &v
	}).(ProtectionStatusDetailsResponsePtrOutput)
}

// Specifies the protection status error of the resource
func (o ProtectionStatusDetailsResponseOutput) ErrorDetails() UserFacingErrorResponsePtrOutput {
	return o.ApplyT(func(v ProtectionStatusDetailsResponse) *UserFacingErrorResponse { return v.ErrorDetails }).(UserFacingErrorResponsePtrOutput)
}

// Specifies the protection status of the resource
func (o ProtectionStatusDetailsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionStatusDetailsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProtectionStatusDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProtectionStatusDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionStatusDetailsResponse)(nil)).Elem()
}

func (o ProtectionStatusDetailsResponsePtrOutput) ToProtectionStatusDetailsResponsePtrOutput() ProtectionStatusDetailsResponsePtrOutput {
	return o
}

func (o ProtectionStatusDetailsResponsePtrOutput) ToProtectionStatusDetailsResponsePtrOutputWithContext(ctx context.Context) ProtectionStatusDetailsResponsePtrOutput {
	return o
}

func (o ProtectionStatusDetailsResponsePtrOutput) Elem() ProtectionStatusDetailsResponseOutput {
	return o.ApplyT(func(v *ProtectionStatusDetailsResponse) ProtectionStatusDetailsResponse { return *v }).(ProtectionStatusDetailsResponseOutput)
}

// Specifies the protection status error of the resource
func (o ProtectionStatusDetailsResponsePtrOutput) ErrorDetails() UserFacingErrorResponsePtrOutput {
	return o.ApplyT(func(v *ProtectionStatusDetailsResponse) *UserFacingErrorResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetails
	}).(UserFacingErrorResponsePtrOutput)
}

// Specifies the protection status of the resource
func (o ProtectionStatusDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionStatusDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Retention tag
type RetentionTag struct {
	// Retention Tag Name to relate it to retention rule.
	TagName string `pulumi:"tagName"`
}

// RetentionTagInput is an input type that accepts RetentionTagArgs and RetentionTagOutput values.
// You can construct a concrete instance of `RetentionTagInput` via:
//
//          RetentionTagArgs{...}
type RetentionTagInput interface {
	pulumi.Input

	ToRetentionTagOutput() RetentionTagOutput
	ToRetentionTagOutputWithContext(context.Context) RetentionTagOutput
}

// Retention tag
type RetentionTagArgs struct {
	// Retention Tag Name to relate it to retention rule.
	TagName pulumi.StringInput `pulumi:"tagName"`
}

func (RetentionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionTag)(nil)).Elem()
}

func (i RetentionTagArgs) ToRetentionTagOutput() RetentionTagOutput {
	return i.ToRetentionTagOutputWithContext(context.Background())
}

func (i RetentionTagArgs) ToRetentionTagOutputWithContext(ctx context.Context) RetentionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagOutput)
}

func (i RetentionTagArgs) ToRetentionTagPtrOutput() RetentionTagPtrOutput {
	return i.ToRetentionTagPtrOutputWithContext(context.Background())
}

func (i RetentionTagArgs) ToRetentionTagPtrOutputWithContext(ctx context.Context) RetentionTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagOutput).ToRetentionTagPtrOutputWithContext(ctx)
}

// RetentionTagPtrInput is an input type that accepts RetentionTagArgs, RetentionTagPtr and RetentionTagPtrOutput values.
// You can construct a concrete instance of `RetentionTagPtrInput` via:
//
//          RetentionTagArgs{...}
//
//  or:
//
//          nil
type RetentionTagPtrInput interface {
	pulumi.Input

	ToRetentionTagPtrOutput() RetentionTagPtrOutput
	ToRetentionTagPtrOutputWithContext(context.Context) RetentionTagPtrOutput
}

type retentionTagPtrType RetentionTagArgs

func RetentionTagPtr(v *RetentionTagArgs) RetentionTagPtrInput {
	return (*retentionTagPtrType)(v)
}

func (*retentionTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionTag)(nil)).Elem()
}

func (i *retentionTagPtrType) ToRetentionTagPtrOutput() RetentionTagPtrOutput {
	return i.ToRetentionTagPtrOutputWithContext(context.Background())
}

func (i *retentionTagPtrType) ToRetentionTagPtrOutputWithContext(ctx context.Context) RetentionTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagPtrOutput)
}

// Retention tag
type RetentionTagOutput struct{ *pulumi.OutputState }

func (RetentionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionTag)(nil)).Elem()
}

func (o RetentionTagOutput) ToRetentionTagOutput() RetentionTagOutput {
	return o
}

func (o RetentionTagOutput) ToRetentionTagOutputWithContext(ctx context.Context) RetentionTagOutput {
	return o
}

func (o RetentionTagOutput) ToRetentionTagPtrOutput() RetentionTagPtrOutput {
	return o.ToRetentionTagPtrOutputWithContext(context.Background())
}

func (o RetentionTagOutput) ToRetentionTagPtrOutputWithContext(ctx context.Context) RetentionTagPtrOutput {
	return o.ApplyT(func(v RetentionTag) *RetentionTag {
		return &v
	}).(RetentionTagPtrOutput)
}

// Retention Tag Name to relate it to retention rule.
func (o RetentionTagOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionTag) string { return v.TagName }).(pulumi.StringOutput)
}

type RetentionTagPtrOutput struct{ *pulumi.OutputState }

func (RetentionTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionTag)(nil)).Elem()
}

func (o RetentionTagPtrOutput) ToRetentionTagPtrOutput() RetentionTagPtrOutput {
	return o
}

func (o RetentionTagPtrOutput) ToRetentionTagPtrOutputWithContext(ctx context.Context) RetentionTagPtrOutput {
	return o
}

func (o RetentionTagPtrOutput) Elem() RetentionTagOutput {
	return o.ApplyT(func(v *RetentionTag) RetentionTag { return *v }).(RetentionTagOutput)
}

// Retention Tag Name to relate it to retention rule.
func (o RetentionTagPtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionTag) *string {
		if v == nil {
			return nil
		}
		return &v.TagName
	}).(pulumi.StringPtrOutput)
}

// Retention tag
type RetentionTagResponse struct {
	// Retention Tag version.
	ETag string `pulumi:"eTag"`
	// Retention Tag version.
	Id string `pulumi:"id"`
	// Retention Tag Name to relate it to retention rule.
	TagName string `pulumi:"tagName"`
}

// RetentionTagResponseInput is an input type that accepts RetentionTagResponseArgs and RetentionTagResponseOutput values.
// You can construct a concrete instance of `RetentionTagResponseInput` via:
//
//          RetentionTagResponseArgs{...}
type RetentionTagResponseInput interface {
	pulumi.Input

	ToRetentionTagResponseOutput() RetentionTagResponseOutput
	ToRetentionTagResponseOutputWithContext(context.Context) RetentionTagResponseOutput
}

// Retention tag
type RetentionTagResponseArgs struct {
	// Retention Tag version.
	ETag pulumi.StringInput `pulumi:"eTag"`
	// Retention Tag version.
	Id pulumi.StringInput `pulumi:"id"`
	// Retention Tag Name to relate it to retention rule.
	TagName pulumi.StringInput `pulumi:"tagName"`
}

func (RetentionTagResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionTagResponse)(nil)).Elem()
}

func (i RetentionTagResponseArgs) ToRetentionTagResponseOutput() RetentionTagResponseOutput {
	return i.ToRetentionTagResponseOutputWithContext(context.Background())
}

func (i RetentionTagResponseArgs) ToRetentionTagResponseOutputWithContext(ctx context.Context) RetentionTagResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagResponseOutput)
}

func (i RetentionTagResponseArgs) ToRetentionTagResponsePtrOutput() RetentionTagResponsePtrOutput {
	return i.ToRetentionTagResponsePtrOutputWithContext(context.Background())
}

func (i RetentionTagResponseArgs) ToRetentionTagResponsePtrOutputWithContext(ctx context.Context) RetentionTagResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagResponseOutput).ToRetentionTagResponsePtrOutputWithContext(ctx)
}

// RetentionTagResponsePtrInput is an input type that accepts RetentionTagResponseArgs, RetentionTagResponsePtr and RetentionTagResponsePtrOutput values.
// You can construct a concrete instance of `RetentionTagResponsePtrInput` via:
//
//          RetentionTagResponseArgs{...}
//
//  or:
//
//          nil
type RetentionTagResponsePtrInput interface {
	pulumi.Input

	ToRetentionTagResponsePtrOutput() RetentionTagResponsePtrOutput
	ToRetentionTagResponsePtrOutputWithContext(context.Context) RetentionTagResponsePtrOutput
}

type retentionTagResponsePtrType RetentionTagResponseArgs

func RetentionTagResponsePtr(v *RetentionTagResponseArgs) RetentionTagResponsePtrInput {
	return (*retentionTagResponsePtrType)(v)
}

func (*retentionTagResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionTagResponse)(nil)).Elem()
}

func (i *retentionTagResponsePtrType) ToRetentionTagResponsePtrOutput() RetentionTagResponsePtrOutput {
	return i.ToRetentionTagResponsePtrOutputWithContext(context.Background())
}

func (i *retentionTagResponsePtrType) ToRetentionTagResponsePtrOutputWithContext(ctx context.Context) RetentionTagResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionTagResponsePtrOutput)
}

// Retention tag
type RetentionTagResponseOutput struct{ *pulumi.OutputState }

func (RetentionTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionTagResponse)(nil)).Elem()
}

func (o RetentionTagResponseOutput) ToRetentionTagResponseOutput() RetentionTagResponseOutput {
	return o
}

func (o RetentionTagResponseOutput) ToRetentionTagResponseOutputWithContext(ctx context.Context) RetentionTagResponseOutput {
	return o
}

func (o RetentionTagResponseOutput) ToRetentionTagResponsePtrOutput() RetentionTagResponsePtrOutput {
	return o.ToRetentionTagResponsePtrOutputWithContext(context.Background())
}

func (o RetentionTagResponseOutput) ToRetentionTagResponsePtrOutputWithContext(ctx context.Context) RetentionTagResponsePtrOutput {
	return o.ApplyT(func(v RetentionTagResponse) *RetentionTagResponse {
		return &v
	}).(RetentionTagResponsePtrOutput)
}

// Retention Tag version.
func (o RetentionTagResponseOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionTagResponse) string { return v.ETag }).(pulumi.StringOutput)
}

// Retention Tag version.
func (o RetentionTagResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionTagResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Retention Tag Name to relate it to retention rule.
func (o RetentionTagResponseOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v RetentionTagResponse) string { return v.TagName }).(pulumi.StringOutput)
}

type RetentionTagResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionTagResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionTagResponse)(nil)).Elem()
}

func (o RetentionTagResponsePtrOutput) ToRetentionTagResponsePtrOutput() RetentionTagResponsePtrOutput {
	return o
}

func (o RetentionTagResponsePtrOutput) ToRetentionTagResponsePtrOutputWithContext(ctx context.Context) RetentionTagResponsePtrOutput {
	return o
}

func (o RetentionTagResponsePtrOutput) Elem() RetentionTagResponseOutput {
	return o.ApplyT(func(v *RetentionTagResponse) RetentionTagResponse { return *v }).(RetentionTagResponseOutput)
}

// Retention Tag version.
func (o RetentionTagResponsePtrOutput) ETag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionTagResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ETag
	}).(pulumi.StringPtrOutput)
}

// Retention Tag version.
func (o RetentionTagResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionTagResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Retention Tag Name to relate it to retention rule.
func (o RetentionTagResponsePtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionTagResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TagName
	}).(pulumi.StringPtrOutput)
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteria struct {
	// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
	// and should be part of AbsoluteMarker enum
	AbsoluteCriteria []string `pulumi:"absoluteCriteria"`
	// This is day of the month from 1 to 28 other wise last of month
	DaysOfMonth []Day `pulumi:"daysOfMonth"`
	// It should be Sunday/Monday/T..../Saturday
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// It should be January/February/....../December
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedBackupCriteria'.
	ObjectType string `pulumi:"objectType"`
	// List of schedule times for backup
	ScheduleTimes []string `pulumi:"scheduleTimes"`
	// It should be First/Second/Third/Fourth/Last
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// ScheduleBasedBackupCriteriaInput is an input type that accepts ScheduleBasedBackupCriteriaArgs and ScheduleBasedBackupCriteriaOutput values.
// You can construct a concrete instance of `ScheduleBasedBackupCriteriaInput` via:
//
//          ScheduleBasedBackupCriteriaArgs{...}
type ScheduleBasedBackupCriteriaInput interface {
	pulumi.Input

	ToScheduleBasedBackupCriteriaOutput() ScheduleBasedBackupCriteriaOutput
	ToScheduleBasedBackupCriteriaOutputWithContext(context.Context) ScheduleBasedBackupCriteriaOutput
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteriaArgs struct {
	// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
	// and should be part of AbsoluteMarker enum
	AbsoluteCriteria pulumi.StringArrayInput `pulumi:"absoluteCriteria"`
	// This is day of the month from 1 to 28 other wise last of month
	DaysOfMonth DayArrayInput `pulumi:"daysOfMonth"`
	// It should be Sunday/Monday/T..../Saturday
	DaysOfTheWeek pulumi.StringArrayInput `pulumi:"daysOfTheWeek"`
	// It should be January/February/....../December
	MonthsOfYear pulumi.StringArrayInput `pulumi:"monthsOfYear"`
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedBackupCriteria'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// List of schedule times for backup
	ScheduleTimes pulumi.StringArrayInput `pulumi:"scheduleTimes"`
	// It should be First/Second/Third/Fourth/Last
	WeeksOfTheMonth pulumi.StringArrayInput `pulumi:"weeksOfTheMonth"`
}

func (ScheduleBasedBackupCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedBackupCriteria)(nil)).Elem()
}

func (i ScheduleBasedBackupCriteriaArgs) ToScheduleBasedBackupCriteriaOutput() ScheduleBasedBackupCriteriaOutput {
	return i.ToScheduleBasedBackupCriteriaOutputWithContext(context.Background())
}

func (i ScheduleBasedBackupCriteriaArgs) ToScheduleBasedBackupCriteriaOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedBackupCriteriaOutput)
}

// ScheduleBasedBackupCriteriaArrayInput is an input type that accepts ScheduleBasedBackupCriteriaArray and ScheduleBasedBackupCriteriaArrayOutput values.
// You can construct a concrete instance of `ScheduleBasedBackupCriteriaArrayInput` via:
//
//          ScheduleBasedBackupCriteriaArray{ ScheduleBasedBackupCriteriaArgs{...} }
type ScheduleBasedBackupCriteriaArrayInput interface {
	pulumi.Input

	ToScheduleBasedBackupCriteriaArrayOutput() ScheduleBasedBackupCriteriaArrayOutput
	ToScheduleBasedBackupCriteriaArrayOutputWithContext(context.Context) ScheduleBasedBackupCriteriaArrayOutput
}

type ScheduleBasedBackupCriteriaArray []ScheduleBasedBackupCriteriaInput

func (ScheduleBasedBackupCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleBasedBackupCriteria)(nil)).Elem()
}

func (i ScheduleBasedBackupCriteriaArray) ToScheduleBasedBackupCriteriaArrayOutput() ScheduleBasedBackupCriteriaArrayOutput {
	return i.ToScheduleBasedBackupCriteriaArrayOutputWithContext(context.Background())
}

func (i ScheduleBasedBackupCriteriaArray) ToScheduleBasedBackupCriteriaArrayOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedBackupCriteriaArrayOutput)
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteriaOutput struct{ *pulumi.OutputState }

func (ScheduleBasedBackupCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedBackupCriteria)(nil)).Elem()
}

func (o ScheduleBasedBackupCriteriaOutput) ToScheduleBasedBackupCriteriaOutput() ScheduleBasedBackupCriteriaOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaOutput) ToScheduleBasedBackupCriteriaOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaOutput {
	return o
}

// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
// and should be part of AbsoluteMarker enum
func (o ScheduleBasedBackupCriteriaOutput) AbsoluteCriteria() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []string { return v.AbsoluteCriteria }).(pulumi.StringArrayOutput)
}

// This is day of the month from 1 to 28 other wise last of month
func (o ScheduleBasedBackupCriteriaOutput) DaysOfMonth() DayArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []Day { return v.DaysOfMonth }).(DayArrayOutput)
}

// It should be Sunday/Monday/T..../Saturday
func (o ScheduleBasedBackupCriteriaOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// It should be January/February/....../December
func (o ScheduleBasedBackupCriteriaOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []string { return v.MonthsOfYear }).(pulumi.StringArrayOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'ScheduleBasedBackupCriteria'.
func (o ScheduleBasedBackupCriteriaOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) string { return v.ObjectType }).(pulumi.StringOutput)
}

// List of schedule times for backup
func (o ScheduleBasedBackupCriteriaOutput) ScheduleTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []string { return v.ScheduleTimes }).(pulumi.StringArrayOutput)
}

// It should be First/Second/Third/Fourth/Last
func (o ScheduleBasedBackupCriteriaOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteria) []string { return v.WeeksOfTheMonth }).(pulumi.StringArrayOutput)
}

type ScheduleBasedBackupCriteriaArrayOutput struct{ *pulumi.OutputState }

func (ScheduleBasedBackupCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleBasedBackupCriteria)(nil)).Elem()
}

func (o ScheduleBasedBackupCriteriaArrayOutput) ToScheduleBasedBackupCriteriaArrayOutput() ScheduleBasedBackupCriteriaArrayOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaArrayOutput) ToScheduleBasedBackupCriteriaArrayOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaArrayOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaArrayOutput) Index(i pulumi.IntInput) ScheduleBasedBackupCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleBasedBackupCriteria {
		return vs[0].([]ScheduleBasedBackupCriteria)[vs[1].(int)]
	}).(ScheduleBasedBackupCriteriaOutput)
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteriaResponse struct {
	// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
	// and should be part of AbsoluteMarker enum
	AbsoluteCriteria []string `pulumi:"absoluteCriteria"`
	// This is day of the month from 1 to 28 other wise last of month
	DaysOfMonth []DayResponse `pulumi:"daysOfMonth"`
	// It should be Sunday/Monday/T..../Saturday
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// It should be January/February/....../December
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedBackupCriteria'.
	ObjectType string `pulumi:"objectType"`
	// List of schedule times for backup
	ScheduleTimes []string `pulumi:"scheduleTimes"`
	// It should be First/Second/Third/Fourth/Last
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// ScheduleBasedBackupCriteriaResponseInput is an input type that accepts ScheduleBasedBackupCriteriaResponseArgs and ScheduleBasedBackupCriteriaResponseOutput values.
// You can construct a concrete instance of `ScheduleBasedBackupCriteriaResponseInput` via:
//
//          ScheduleBasedBackupCriteriaResponseArgs{...}
type ScheduleBasedBackupCriteriaResponseInput interface {
	pulumi.Input

	ToScheduleBasedBackupCriteriaResponseOutput() ScheduleBasedBackupCriteriaResponseOutput
	ToScheduleBasedBackupCriteriaResponseOutputWithContext(context.Context) ScheduleBasedBackupCriteriaResponseOutput
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteriaResponseArgs struct {
	// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
	// and should be part of AbsoluteMarker enum
	AbsoluteCriteria pulumi.StringArrayInput `pulumi:"absoluteCriteria"`
	// This is day of the month from 1 to 28 other wise last of month
	DaysOfMonth DayResponseArrayInput `pulumi:"daysOfMonth"`
	// It should be Sunday/Monday/T..../Saturday
	DaysOfTheWeek pulumi.StringArrayInput `pulumi:"daysOfTheWeek"`
	// It should be January/February/....../December
	MonthsOfYear pulumi.StringArrayInput `pulumi:"monthsOfYear"`
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedBackupCriteria'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// List of schedule times for backup
	ScheduleTimes pulumi.StringArrayInput `pulumi:"scheduleTimes"`
	// It should be First/Second/Third/Fourth/Last
	WeeksOfTheMonth pulumi.StringArrayInput `pulumi:"weeksOfTheMonth"`
}

func (ScheduleBasedBackupCriteriaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedBackupCriteriaResponse)(nil)).Elem()
}

func (i ScheduleBasedBackupCriteriaResponseArgs) ToScheduleBasedBackupCriteriaResponseOutput() ScheduleBasedBackupCriteriaResponseOutput {
	return i.ToScheduleBasedBackupCriteriaResponseOutputWithContext(context.Background())
}

func (i ScheduleBasedBackupCriteriaResponseArgs) ToScheduleBasedBackupCriteriaResponseOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedBackupCriteriaResponseOutput)
}

// ScheduleBasedBackupCriteriaResponseArrayInput is an input type that accepts ScheduleBasedBackupCriteriaResponseArray and ScheduleBasedBackupCriteriaResponseArrayOutput values.
// You can construct a concrete instance of `ScheduleBasedBackupCriteriaResponseArrayInput` via:
//
//          ScheduleBasedBackupCriteriaResponseArray{ ScheduleBasedBackupCriteriaResponseArgs{...} }
type ScheduleBasedBackupCriteriaResponseArrayInput interface {
	pulumi.Input

	ToScheduleBasedBackupCriteriaResponseArrayOutput() ScheduleBasedBackupCriteriaResponseArrayOutput
	ToScheduleBasedBackupCriteriaResponseArrayOutputWithContext(context.Context) ScheduleBasedBackupCriteriaResponseArrayOutput
}

type ScheduleBasedBackupCriteriaResponseArray []ScheduleBasedBackupCriteriaResponseInput

func (ScheduleBasedBackupCriteriaResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleBasedBackupCriteriaResponse)(nil)).Elem()
}

func (i ScheduleBasedBackupCriteriaResponseArray) ToScheduleBasedBackupCriteriaResponseArrayOutput() ScheduleBasedBackupCriteriaResponseArrayOutput {
	return i.ToScheduleBasedBackupCriteriaResponseArrayOutputWithContext(context.Background())
}

func (i ScheduleBasedBackupCriteriaResponseArray) ToScheduleBasedBackupCriteriaResponseArrayOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedBackupCriteriaResponseArrayOutput)
}

// Schedule based backup criteria
type ScheduleBasedBackupCriteriaResponseOutput struct{ *pulumi.OutputState }

func (ScheduleBasedBackupCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedBackupCriteriaResponse)(nil)).Elem()
}

func (o ScheduleBasedBackupCriteriaResponseOutput) ToScheduleBasedBackupCriteriaResponseOutput() ScheduleBasedBackupCriteriaResponseOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaResponseOutput) ToScheduleBasedBackupCriteriaResponseOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaResponseOutput {
	return o
}

// it contains absolute values like "AllBackup" / "FirstOfDay" / "FirstOfWeek" / "FirstOfMonth"
// and should be part of AbsoluteMarker enum
func (o ScheduleBasedBackupCriteriaResponseOutput) AbsoluteCriteria() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []string { return v.AbsoluteCriteria }).(pulumi.StringArrayOutput)
}

// This is day of the month from 1 to 28 other wise last of month
func (o ScheduleBasedBackupCriteriaResponseOutput) DaysOfMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []DayResponse { return v.DaysOfMonth }).(DayResponseArrayOutput)
}

// It should be Sunday/Monday/T..../Saturday
func (o ScheduleBasedBackupCriteriaResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// It should be January/February/....../December
func (o ScheduleBasedBackupCriteriaResponseOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []string { return v.MonthsOfYear }).(pulumi.StringArrayOutput)
}

// Type of the specific object - used for deserializing
// Expected value is 'ScheduleBasedBackupCriteria'.
func (o ScheduleBasedBackupCriteriaResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// List of schedule times for backup
func (o ScheduleBasedBackupCriteriaResponseOutput) ScheduleTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []string { return v.ScheduleTimes }).(pulumi.StringArrayOutput)
}

// It should be First/Second/Third/Fourth/Last
func (o ScheduleBasedBackupCriteriaResponseOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleBasedBackupCriteriaResponse) []string { return v.WeeksOfTheMonth }).(pulumi.StringArrayOutput)
}

type ScheduleBasedBackupCriteriaResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduleBasedBackupCriteriaResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleBasedBackupCriteriaResponse)(nil)).Elem()
}

func (o ScheduleBasedBackupCriteriaResponseArrayOutput) ToScheduleBasedBackupCriteriaResponseArrayOutput() ScheduleBasedBackupCriteriaResponseArrayOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaResponseArrayOutput) ToScheduleBasedBackupCriteriaResponseArrayOutputWithContext(ctx context.Context) ScheduleBasedBackupCriteriaResponseArrayOutput {
	return o
}

func (o ScheduleBasedBackupCriteriaResponseArrayOutput) Index(i pulumi.IntInput) ScheduleBasedBackupCriteriaResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleBasedBackupCriteriaResponse {
		return vs[0].([]ScheduleBasedBackupCriteriaResponse)[vs[1].(int)]
	}).(ScheduleBasedBackupCriteriaResponseOutput)
}

// Schedule based trigger context
type ScheduleBasedTriggerContext struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedTriggerContext'.
	ObjectType string `pulumi:"objectType"`
	// Schedule for this backup
	Schedule BackupSchedule `pulumi:"schedule"`
	// List of tags that can be applicable for given schedule.
	TaggingCriteria []TaggingCriteria `pulumi:"taggingCriteria"`
}

// ScheduleBasedTriggerContextInput is an input type that accepts ScheduleBasedTriggerContextArgs and ScheduleBasedTriggerContextOutput values.
// You can construct a concrete instance of `ScheduleBasedTriggerContextInput` via:
//
//          ScheduleBasedTriggerContextArgs{...}
type ScheduleBasedTriggerContextInput interface {
	pulumi.Input

	ToScheduleBasedTriggerContextOutput() ScheduleBasedTriggerContextOutput
	ToScheduleBasedTriggerContextOutputWithContext(context.Context) ScheduleBasedTriggerContextOutput
}

// Schedule based trigger context
type ScheduleBasedTriggerContextArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedTriggerContext'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Schedule for this backup
	Schedule BackupScheduleInput `pulumi:"schedule"`
	// List of tags that can be applicable for given schedule.
	TaggingCriteria TaggingCriteriaArrayInput `pulumi:"taggingCriteria"`
}

func (ScheduleBasedTriggerContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedTriggerContext)(nil)).Elem()
}

func (i ScheduleBasedTriggerContextArgs) ToScheduleBasedTriggerContextOutput() ScheduleBasedTriggerContextOutput {
	return i.ToScheduleBasedTriggerContextOutputWithContext(context.Background())
}

func (i ScheduleBasedTriggerContextArgs) ToScheduleBasedTriggerContextOutputWithContext(ctx context.Context) ScheduleBasedTriggerContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedTriggerContextOutput)
}

// Schedule based trigger context
type ScheduleBasedTriggerContextOutput struct{ *pulumi.OutputState }

func (ScheduleBasedTriggerContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedTriggerContext)(nil)).Elem()
}

func (o ScheduleBasedTriggerContextOutput) ToScheduleBasedTriggerContextOutput() ScheduleBasedTriggerContextOutput {
	return o
}

func (o ScheduleBasedTriggerContextOutput) ToScheduleBasedTriggerContextOutputWithContext(ctx context.Context) ScheduleBasedTriggerContextOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'ScheduleBasedTriggerContext'.
func (o ScheduleBasedTriggerContextOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContext) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Schedule for this backup
func (o ScheduleBasedTriggerContextOutput) Schedule() BackupScheduleOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContext) BackupSchedule { return v.Schedule }).(BackupScheduleOutput)
}

// List of tags that can be applicable for given schedule.
func (o ScheduleBasedTriggerContextOutput) TaggingCriteria() TaggingCriteriaArrayOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContext) []TaggingCriteria { return v.TaggingCriteria }).(TaggingCriteriaArrayOutput)
}

// Schedule based trigger context
type ScheduleBasedTriggerContextResponse struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedTriggerContext'.
	ObjectType string `pulumi:"objectType"`
	// Schedule for this backup
	Schedule BackupScheduleResponse `pulumi:"schedule"`
	// List of tags that can be applicable for given schedule.
	TaggingCriteria []TaggingCriteriaResponse `pulumi:"taggingCriteria"`
}

// ScheduleBasedTriggerContextResponseInput is an input type that accepts ScheduleBasedTriggerContextResponseArgs and ScheduleBasedTriggerContextResponseOutput values.
// You can construct a concrete instance of `ScheduleBasedTriggerContextResponseInput` via:
//
//          ScheduleBasedTriggerContextResponseArgs{...}
type ScheduleBasedTriggerContextResponseInput interface {
	pulumi.Input

	ToScheduleBasedTriggerContextResponseOutput() ScheduleBasedTriggerContextResponseOutput
	ToScheduleBasedTriggerContextResponseOutputWithContext(context.Context) ScheduleBasedTriggerContextResponseOutput
}

// Schedule based trigger context
type ScheduleBasedTriggerContextResponseArgs struct {
	// Type of the specific object - used for deserializing
	// Expected value is 'ScheduleBasedTriggerContext'.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Schedule for this backup
	Schedule BackupScheduleResponseInput `pulumi:"schedule"`
	// List of tags that can be applicable for given schedule.
	TaggingCriteria TaggingCriteriaResponseArrayInput `pulumi:"taggingCriteria"`
}

func (ScheduleBasedTriggerContextResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedTriggerContextResponse)(nil)).Elem()
}

func (i ScheduleBasedTriggerContextResponseArgs) ToScheduleBasedTriggerContextResponseOutput() ScheduleBasedTriggerContextResponseOutput {
	return i.ToScheduleBasedTriggerContextResponseOutputWithContext(context.Background())
}

func (i ScheduleBasedTriggerContextResponseArgs) ToScheduleBasedTriggerContextResponseOutputWithContext(ctx context.Context) ScheduleBasedTriggerContextResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleBasedTriggerContextResponseOutput)
}

// Schedule based trigger context
type ScheduleBasedTriggerContextResponseOutput struct{ *pulumi.OutputState }

func (ScheduleBasedTriggerContextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleBasedTriggerContextResponse)(nil)).Elem()
}

func (o ScheduleBasedTriggerContextResponseOutput) ToScheduleBasedTriggerContextResponseOutput() ScheduleBasedTriggerContextResponseOutput {
	return o
}

func (o ScheduleBasedTriggerContextResponseOutput) ToScheduleBasedTriggerContextResponseOutputWithContext(ctx context.Context) ScheduleBasedTriggerContextResponseOutput {
	return o
}

// Type of the specific object - used for deserializing
// Expected value is 'ScheduleBasedTriggerContext'.
func (o ScheduleBasedTriggerContextResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContextResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Schedule for this backup
func (o ScheduleBasedTriggerContextResponseOutput) Schedule() BackupScheduleResponseOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContextResponse) BackupScheduleResponse { return v.Schedule }).(BackupScheduleResponseOutput)
}

// List of tags that can be applicable for given schedule.
func (o ScheduleBasedTriggerContextResponseOutput) TaggingCriteria() TaggingCriteriaResponseArrayOutput {
	return o.ApplyT(func(v ScheduleBasedTriggerContextResponse) []TaggingCriteriaResponse { return v.TaggingCriteria }).(TaggingCriteriaResponseArrayOutput)
}

// Source LifeCycle
type SourceLifeCycle struct {
	// Delete Option
	DeleteAfter AbsoluteDeleteOption `pulumi:"deleteAfter"`
	// DataStoreInfo base
	SourceDataStore             DataStoreInfoBase   `pulumi:"sourceDataStore"`
	TargetDataStoreCopySettings []TargetCopySetting `pulumi:"targetDataStoreCopySettings"`
}

// SourceLifeCycleInput is an input type that accepts SourceLifeCycleArgs and SourceLifeCycleOutput values.
// You can construct a concrete instance of `SourceLifeCycleInput` via:
//
//          SourceLifeCycleArgs{...}
type SourceLifeCycleInput interface {
	pulumi.Input

	ToSourceLifeCycleOutput() SourceLifeCycleOutput
	ToSourceLifeCycleOutputWithContext(context.Context) SourceLifeCycleOutput
}

// Source LifeCycle
type SourceLifeCycleArgs struct {
	// Delete Option
	DeleteAfter AbsoluteDeleteOptionInput `pulumi:"deleteAfter"`
	// DataStoreInfo base
	SourceDataStore             DataStoreInfoBaseInput      `pulumi:"sourceDataStore"`
	TargetDataStoreCopySettings TargetCopySettingArrayInput `pulumi:"targetDataStoreCopySettings"`
}

func (SourceLifeCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceLifeCycle)(nil)).Elem()
}

func (i SourceLifeCycleArgs) ToSourceLifeCycleOutput() SourceLifeCycleOutput {
	return i.ToSourceLifeCycleOutputWithContext(context.Background())
}

func (i SourceLifeCycleArgs) ToSourceLifeCycleOutputWithContext(ctx context.Context) SourceLifeCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceLifeCycleOutput)
}

// SourceLifeCycleArrayInput is an input type that accepts SourceLifeCycleArray and SourceLifeCycleArrayOutput values.
// You can construct a concrete instance of `SourceLifeCycleArrayInput` via:
//
//          SourceLifeCycleArray{ SourceLifeCycleArgs{...} }
type SourceLifeCycleArrayInput interface {
	pulumi.Input

	ToSourceLifeCycleArrayOutput() SourceLifeCycleArrayOutput
	ToSourceLifeCycleArrayOutputWithContext(context.Context) SourceLifeCycleArrayOutput
}

type SourceLifeCycleArray []SourceLifeCycleInput

func (SourceLifeCycleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceLifeCycle)(nil)).Elem()
}

func (i SourceLifeCycleArray) ToSourceLifeCycleArrayOutput() SourceLifeCycleArrayOutput {
	return i.ToSourceLifeCycleArrayOutputWithContext(context.Background())
}

func (i SourceLifeCycleArray) ToSourceLifeCycleArrayOutputWithContext(ctx context.Context) SourceLifeCycleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceLifeCycleArrayOutput)
}

// Source LifeCycle
type SourceLifeCycleOutput struct{ *pulumi.OutputState }

func (SourceLifeCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceLifeCycle)(nil)).Elem()
}

func (o SourceLifeCycleOutput) ToSourceLifeCycleOutput() SourceLifeCycleOutput {
	return o
}

func (o SourceLifeCycleOutput) ToSourceLifeCycleOutputWithContext(ctx context.Context) SourceLifeCycleOutput {
	return o
}

// Delete Option
func (o SourceLifeCycleOutput) DeleteAfter() AbsoluteDeleteOptionOutput {
	return o.ApplyT(func(v SourceLifeCycle) AbsoluteDeleteOption { return v.DeleteAfter }).(AbsoluteDeleteOptionOutput)
}

// DataStoreInfo base
func (o SourceLifeCycleOutput) SourceDataStore() DataStoreInfoBaseOutput {
	return o.ApplyT(func(v SourceLifeCycle) DataStoreInfoBase { return v.SourceDataStore }).(DataStoreInfoBaseOutput)
}

func (o SourceLifeCycleOutput) TargetDataStoreCopySettings() TargetCopySettingArrayOutput {
	return o.ApplyT(func(v SourceLifeCycle) []TargetCopySetting { return v.TargetDataStoreCopySettings }).(TargetCopySettingArrayOutput)
}

type SourceLifeCycleArrayOutput struct{ *pulumi.OutputState }

func (SourceLifeCycleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceLifeCycle)(nil)).Elem()
}

func (o SourceLifeCycleArrayOutput) ToSourceLifeCycleArrayOutput() SourceLifeCycleArrayOutput {
	return o
}

func (o SourceLifeCycleArrayOutput) ToSourceLifeCycleArrayOutputWithContext(ctx context.Context) SourceLifeCycleArrayOutput {
	return o
}

func (o SourceLifeCycleArrayOutput) Index(i pulumi.IntInput) SourceLifeCycleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceLifeCycle {
		return vs[0].([]SourceLifeCycle)[vs[1].(int)]
	}).(SourceLifeCycleOutput)
}

// Source LifeCycle
type SourceLifeCycleResponse struct {
	// Delete Option
	DeleteAfter AbsoluteDeleteOptionResponse `pulumi:"deleteAfter"`
	// DataStoreInfo base
	SourceDataStore             DataStoreInfoBaseResponse   `pulumi:"sourceDataStore"`
	TargetDataStoreCopySettings []TargetCopySettingResponse `pulumi:"targetDataStoreCopySettings"`
}

// SourceLifeCycleResponseInput is an input type that accepts SourceLifeCycleResponseArgs and SourceLifeCycleResponseOutput values.
// You can construct a concrete instance of `SourceLifeCycleResponseInput` via:
//
//          SourceLifeCycleResponseArgs{...}
type SourceLifeCycleResponseInput interface {
	pulumi.Input

	ToSourceLifeCycleResponseOutput() SourceLifeCycleResponseOutput
	ToSourceLifeCycleResponseOutputWithContext(context.Context) SourceLifeCycleResponseOutput
}

// Source LifeCycle
type SourceLifeCycleResponseArgs struct {
	// Delete Option
	DeleteAfter AbsoluteDeleteOptionResponseInput `pulumi:"deleteAfter"`
	// DataStoreInfo base
	SourceDataStore             DataStoreInfoBaseResponseInput      `pulumi:"sourceDataStore"`
	TargetDataStoreCopySettings TargetCopySettingResponseArrayInput `pulumi:"targetDataStoreCopySettings"`
}

func (SourceLifeCycleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceLifeCycleResponse)(nil)).Elem()
}

func (i SourceLifeCycleResponseArgs) ToSourceLifeCycleResponseOutput() SourceLifeCycleResponseOutput {
	return i.ToSourceLifeCycleResponseOutputWithContext(context.Background())
}

func (i SourceLifeCycleResponseArgs) ToSourceLifeCycleResponseOutputWithContext(ctx context.Context) SourceLifeCycleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceLifeCycleResponseOutput)
}

// SourceLifeCycleResponseArrayInput is an input type that accepts SourceLifeCycleResponseArray and SourceLifeCycleResponseArrayOutput values.
// You can construct a concrete instance of `SourceLifeCycleResponseArrayInput` via:
//
//          SourceLifeCycleResponseArray{ SourceLifeCycleResponseArgs{...} }
type SourceLifeCycleResponseArrayInput interface {
	pulumi.Input

	ToSourceLifeCycleResponseArrayOutput() SourceLifeCycleResponseArrayOutput
	ToSourceLifeCycleResponseArrayOutputWithContext(context.Context) SourceLifeCycleResponseArrayOutput
}

type SourceLifeCycleResponseArray []SourceLifeCycleResponseInput

func (SourceLifeCycleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceLifeCycleResponse)(nil)).Elem()
}

func (i SourceLifeCycleResponseArray) ToSourceLifeCycleResponseArrayOutput() SourceLifeCycleResponseArrayOutput {
	return i.ToSourceLifeCycleResponseArrayOutputWithContext(context.Background())
}

func (i SourceLifeCycleResponseArray) ToSourceLifeCycleResponseArrayOutputWithContext(ctx context.Context) SourceLifeCycleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceLifeCycleResponseArrayOutput)
}

// Source LifeCycle
type SourceLifeCycleResponseOutput struct{ *pulumi.OutputState }

func (SourceLifeCycleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceLifeCycleResponse)(nil)).Elem()
}

func (o SourceLifeCycleResponseOutput) ToSourceLifeCycleResponseOutput() SourceLifeCycleResponseOutput {
	return o
}

func (o SourceLifeCycleResponseOutput) ToSourceLifeCycleResponseOutputWithContext(ctx context.Context) SourceLifeCycleResponseOutput {
	return o
}

// Delete Option
func (o SourceLifeCycleResponseOutput) DeleteAfter() AbsoluteDeleteOptionResponseOutput {
	return o.ApplyT(func(v SourceLifeCycleResponse) AbsoluteDeleteOptionResponse { return v.DeleteAfter }).(AbsoluteDeleteOptionResponseOutput)
}

// DataStoreInfo base
func (o SourceLifeCycleResponseOutput) SourceDataStore() DataStoreInfoBaseResponseOutput {
	return o.ApplyT(func(v SourceLifeCycleResponse) DataStoreInfoBaseResponse { return v.SourceDataStore }).(DataStoreInfoBaseResponseOutput)
}

func (o SourceLifeCycleResponseOutput) TargetDataStoreCopySettings() TargetCopySettingResponseArrayOutput {
	return o.ApplyT(func(v SourceLifeCycleResponse) []TargetCopySettingResponse { return v.TargetDataStoreCopySettings }).(TargetCopySettingResponseArrayOutput)
}

type SourceLifeCycleResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceLifeCycleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceLifeCycleResponse)(nil)).Elem()
}

func (o SourceLifeCycleResponseArrayOutput) ToSourceLifeCycleResponseArrayOutput() SourceLifeCycleResponseArrayOutput {
	return o
}

func (o SourceLifeCycleResponseArrayOutput) ToSourceLifeCycleResponseArrayOutputWithContext(ctx context.Context) SourceLifeCycleResponseArrayOutput {
	return o
}

func (o SourceLifeCycleResponseArrayOutput) Index(i pulumi.IntInput) SourceLifeCycleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceLifeCycleResponse {
		return vs[0].([]SourceLifeCycleResponse)[vs[1].(int)]
	}).(SourceLifeCycleResponseOutput)
}

// Storage setting
type StorageSetting struct {
	// Gets or sets the type of the datastore.
	DatastoreType *string `pulumi:"datastoreType"`
	// Gets or sets the type.
	Type *string `pulumi:"type"`
}

// StorageSettingInput is an input type that accepts StorageSettingArgs and StorageSettingOutput values.
// You can construct a concrete instance of `StorageSettingInput` via:
//
//          StorageSettingArgs{...}
type StorageSettingInput interface {
	pulumi.Input

	ToStorageSettingOutput() StorageSettingOutput
	ToStorageSettingOutputWithContext(context.Context) StorageSettingOutput
}

// Storage setting
type StorageSettingArgs struct {
	// Gets or sets the type of the datastore.
	DatastoreType pulumi.StringPtrInput `pulumi:"datastoreType"`
	// Gets or sets the type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSetting)(nil)).Elem()
}

func (i StorageSettingArgs) ToStorageSettingOutput() StorageSettingOutput {
	return i.ToStorageSettingOutputWithContext(context.Background())
}

func (i StorageSettingArgs) ToStorageSettingOutputWithContext(ctx context.Context) StorageSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageSettingOutput)
}

// StorageSettingArrayInput is an input type that accepts StorageSettingArray and StorageSettingArrayOutput values.
// You can construct a concrete instance of `StorageSettingArrayInput` via:
//
//          StorageSettingArray{ StorageSettingArgs{...} }
type StorageSettingArrayInput interface {
	pulumi.Input

	ToStorageSettingArrayOutput() StorageSettingArrayOutput
	ToStorageSettingArrayOutputWithContext(context.Context) StorageSettingArrayOutput
}

type StorageSettingArray []StorageSettingInput

func (StorageSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageSetting)(nil)).Elem()
}

func (i StorageSettingArray) ToStorageSettingArrayOutput() StorageSettingArrayOutput {
	return i.ToStorageSettingArrayOutputWithContext(context.Background())
}

func (i StorageSettingArray) ToStorageSettingArrayOutputWithContext(ctx context.Context) StorageSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageSettingArrayOutput)
}

// Storage setting
type StorageSettingOutput struct{ *pulumi.OutputState }

func (StorageSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSetting)(nil)).Elem()
}

func (o StorageSettingOutput) ToStorageSettingOutput() StorageSettingOutput {
	return o
}

func (o StorageSettingOutput) ToStorageSettingOutputWithContext(ctx context.Context) StorageSettingOutput {
	return o
}

// Gets or sets the type of the datastore.
func (o StorageSettingOutput) DatastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageSetting) *string { return v.DatastoreType }).(pulumi.StringPtrOutput)
}

// Gets or sets the type.
func (o StorageSettingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageSetting) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageSettingArrayOutput struct{ *pulumi.OutputState }

func (StorageSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageSetting)(nil)).Elem()
}

func (o StorageSettingArrayOutput) ToStorageSettingArrayOutput() StorageSettingArrayOutput {
	return o
}

func (o StorageSettingArrayOutput) ToStorageSettingArrayOutputWithContext(ctx context.Context) StorageSettingArrayOutput {
	return o
}

func (o StorageSettingArrayOutput) Index(i pulumi.IntInput) StorageSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageSetting {
		return vs[0].([]StorageSetting)[vs[1].(int)]
	}).(StorageSettingOutput)
}

// Storage setting
type StorageSettingResponse struct {
	// Gets or sets the type of the datastore.
	DatastoreType *string `pulumi:"datastoreType"`
	// Gets or sets the type.
	Type *string `pulumi:"type"`
}

// StorageSettingResponseInput is an input type that accepts StorageSettingResponseArgs and StorageSettingResponseOutput values.
// You can construct a concrete instance of `StorageSettingResponseInput` via:
//
//          StorageSettingResponseArgs{...}
type StorageSettingResponseInput interface {
	pulumi.Input

	ToStorageSettingResponseOutput() StorageSettingResponseOutput
	ToStorageSettingResponseOutputWithContext(context.Context) StorageSettingResponseOutput
}

// Storage setting
type StorageSettingResponseArgs struct {
	// Gets or sets the type of the datastore.
	DatastoreType pulumi.StringPtrInput `pulumi:"datastoreType"`
	// Gets or sets the type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageSettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingResponse)(nil)).Elem()
}

func (i StorageSettingResponseArgs) ToStorageSettingResponseOutput() StorageSettingResponseOutput {
	return i.ToStorageSettingResponseOutputWithContext(context.Background())
}

func (i StorageSettingResponseArgs) ToStorageSettingResponseOutputWithContext(ctx context.Context) StorageSettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageSettingResponseOutput)
}

// StorageSettingResponseArrayInput is an input type that accepts StorageSettingResponseArray and StorageSettingResponseArrayOutput values.
// You can construct a concrete instance of `StorageSettingResponseArrayInput` via:
//
//          StorageSettingResponseArray{ StorageSettingResponseArgs{...} }
type StorageSettingResponseArrayInput interface {
	pulumi.Input

	ToStorageSettingResponseArrayOutput() StorageSettingResponseArrayOutput
	ToStorageSettingResponseArrayOutputWithContext(context.Context) StorageSettingResponseArrayOutput
}

type StorageSettingResponseArray []StorageSettingResponseInput

func (StorageSettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageSettingResponse)(nil)).Elem()
}

func (i StorageSettingResponseArray) ToStorageSettingResponseArrayOutput() StorageSettingResponseArrayOutput {
	return i.ToStorageSettingResponseArrayOutputWithContext(context.Background())
}

func (i StorageSettingResponseArray) ToStorageSettingResponseArrayOutputWithContext(ctx context.Context) StorageSettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageSettingResponseArrayOutput)
}

// Storage setting
type StorageSettingResponseOutput struct{ *pulumi.OutputState }

func (StorageSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingResponse)(nil)).Elem()
}

func (o StorageSettingResponseOutput) ToStorageSettingResponseOutput() StorageSettingResponseOutput {
	return o
}

func (o StorageSettingResponseOutput) ToStorageSettingResponseOutputWithContext(ctx context.Context) StorageSettingResponseOutput {
	return o
}

// Gets or sets the type of the datastore.
func (o StorageSettingResponseOutput) DatastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageSettingResponse) *string { return v.DatastoreType }).(pulumi.StringPtrOutput)
}

// Gets or sets the type.
func (o StorageSettingResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageSettingResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageSettingResponse)(nil)).Elem()
}

func (o StorageSettingResponseArrayOutput) ToStorageSettingResponseArrayOutput() StorageSettingResponseArrayOutput {
	return o
}

func (o StorageSettingResponseArrayOutput) ToStorageSettingResponseArrayOutputWithContext(ctx context.Context) StorageSettingResponseArrayOutput {
	return o
}

func (o StorageSettingResponseArrayOutput) Index(i pulumi.IntInput) StorageSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageSettingResponse {
		return vs[0].([]StorageSettingResponse)[vs[1].(int)]
	}).(StorageSettingResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// Tagging criteria
type TaggingCriteria struct {
	// Criteria which decides whether the tag can be applied to a triggered backup.
	Criteria []ScheduleBasedBackupCriteria `pulumi:"criteria"`
	// Specifies if tag is default.
	IsDefault bool `pulumi:"isDefault"`
	// Retention tag information
	TagInfo RetentionTag `pulumi:"tagInfo"`
	// Retention Tag priority.
	TaggingPriority float64 `pulumi:"taggingPriority"`
}

// TaggingCriteriaInput is an input type that accepts TaggingCriteriaArgs and TaggingCriteriaOutput values.
// You can construct a concrete instance of `TaggingCriteriaInput` via:
//
//          TaggingCriteriaArgs{...}
type TaggingCriteriaInput interface {
	pulumi.Input

	ToTaggingCriteriaOutput() TaggingCriteriaOutput
	ToTaggingCriteriaOutputWithContext(context.Context) TaggingCriteriaOutput
}

// Tagging criteria
type TaggingCriteriaArgs struct {
	// Criteria which decides whether the tag can be applied to a triggered backup.
	Criteria ScheduleBasedBackupCriteriaArrayInput `pulumi:"criteria"`
	// Specifies if tag is default.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Retention tag information
	TagInfo RetentionTagInput `pulumi:"tagInfo"`
	// Retention Tag priority.
	TaggingPriority pulumi.Float64Input `pulumi:"taggingPriority"`
}

func (TaggingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaggingCriteria)(nil)).Elem()
}

func (i TaggingCriteriaArgs) ToTaggingCriteriaOutput() TaggingCriteriaOutput {
	return i.ToTaggingCriteriaOutputWithContext(context.Background())
}

func (i TaggingCriteriaArgs) ToTaggingCriteriaOutputWithContext(ctx context.Context) TaggingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaggingCriteriaOutput)
}

// TaggingCriteriaArrayInput is an input type that accepts TaggingCriteriaArray and TaggingCriteriaArrayOutput values.
// You can construct a concrete instance of `TaggingCriteriaArrayInput` via:
//
//          TaggingCriteriaArray{ TaggingCriteriaArgs{...} }
type TaggingCriteriaArrayInput interface {
	pulumi.Input

	ToTaggingCriteriaArrayOutput() TaggingCriteriaArrayOutput
	ToTaggingCriteriaArrayOutputWithContext(context.Context) TaggingCriteriaArrayOutput
}

type TaggingCriteriaArray []TaggingCriteriaInput

func (TaggingCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaggingCriteria)(nil)).Elem()
}

func (i TaggingCriteriaArray) ToTaggingCriteriaArrayOutput() TaggingCriteriaArrayOutput {
	return i.ToTaggingCriteriaArrayOutputWithContext(context.Background())
}

func (i TaggingCriteriaArray) ToTaggingCriteriaArrayOutputWithContext(ctx context.Context) TaggingCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaggingCriteriaArrayOutput)
}

// Tagging criteria
type TaggingCriteriaOutput struct{ *pulumi.OutputState }

func (TaggingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaggingCriteria)(nil)).Elem()
}

func (o TaggingCriteriaOutput) ToTaggingCriteriaOutput() TaggingCriteriaOutput {
	return o
}

func (o TaggingCriteriaOutput) ToTaggingCriteriaOutputWithContext(ctx context.Context) TaggingCriteriaOutput {
	return o
}

// Criteria which decides whether the tag can be applied to a triggered backup.
func (o TaggingCriteriaOutput) Criteria() ScheduleBasedBackupCriteriaArrayOutput {
	return o.ApplyT(func(v TaggingCriteria) []ScheduleBasedBackupCriteria { return v.Criteria }).(ScheduleBasedBackupCriteriaArrayOutput)
}

// Specifies if tag is default.
func (o TaggingCriteriaOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v TaggingCriteria) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Retention tag information
func (o TaggingCriteriaOutput) TagInfo() RetentionTagOutput {
	return o.ApplyT(func(v TaggingCriteria) RetentionTag { return v.TagInfo }).(RetentionTagOutput)
}

// Retention Tag priority.
func (o TaggingCriteriaOutput) TaggingPriority() pulumi.Float64Output {
	return o.ApplyT(func(v TaggingCriteria) float64 { return v.TaggingPriority }).(pulumi.Float64Output)
}

type TaggingCriteriaArrayOutput struct{ *pulumi.OutputState }

func (TaggingCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaggingCriteria)(nil)).Elem()
}

func (o TaggingCriteriaArrayOutput) ToTaggingCriteriaArrayOutput() TaggingCriteriaArrayOutput {
	return o
}

func (o TaggingCriteriaArrayOutput) ToTaggingCriteriaArrayOutputWithContext(ctx context.Context) TaggingCriteriaArrayOutput {
	return o
}

func (o TaggingCriteriaArrayOutput) Index(i pulumi.IntInput) TaggingCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaggingCriteria {
		return vs[0].([]TaggingCriteria)[vs[1].(int)]
	}).(TaggingCriteriaOutput)
}

// Tagging criteria
type TaggingCriteriaResponse struct {
	// Criteria which decides whether the tag can be applied to a triggered backup.
	Criteria []ScheduleBasedBackupCriteriaResponse `pulumi:"criteria"`
	// Specifies if tag is default.
	IsDefault bool `pulumi:"isDefault"`
	// Retention tag information
	TagInfo RetentionTagResponse `pulumi:"tagInfo"`
	// Retention Tag priority.
	TaggingPriority float64 `pulumi:"taggingPriority"`
}

// TaggingCriteriaResponseInput is an input type that accepts TaggingCriteriaResponseArgs and TaggingCriteriaResponseOutput values.
// You can construct a concrete instance of `TaggingCriteriaResponseInput` via:
//
//          TaggingCriteriaResponseArgs{...}
type TaggingCriteriaResponseInput interface {
	pulumi.Input

	ToTaggingCriteriaResponseOutput() TaggingCriteriaResponseOutput
	ToTaggingCriteriaResponseOutputWithContext(context.Context) TaggingCriteriaResponseOutput
}

// Tagging criteria
type TaggingCriteriaResponseArgs struct {
	// Criteria which decides whether the tag can be applied to a triggered backup.
	Criteria ScheduleBasedBackupCriteriaResponseArrayInput `pulumi:"criteria"`
	// Specifies if tag is default.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Retention tag information
	TagInfo RetentionTagResponseInput `pulumi:"tagInfo"`
	// Retention Tag priority.
	TaggingPriority pulumi.Float64Input `pulumi:"taggingPriority"`
}

func (TaggingCriteriaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaggingCriteriaResponse)(nil)).Elem()
}

func (i TaggingCriteriaResponseArgs) ToTaggingCriteriaResponseOutput() TaggingCriteriaResponseOutput {
	return i.ToTaggingCriteriaResponseOutputWithContext(context.Background())
}

func (i TaggingCriteriaResponseArgs) ToTaggingCriteriaResponseOutputWithContext(ctx context.Context) TaggingCriteriaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaggingCriteriaResponseOutput)
}

// TaggingCriteriaResponseArrayInput is an input type that accepts TaggingCriteriaResponseArray and TaggingCriteriaResponseArrayOutput values.
// You can construct a concrete instance of `TaggingCriteriaResponseArrayInput` via:
//
//          TaggingCriteriaResponseArray{ TaggingCriteriaResponseArgs{...} }
type TaggingCriteriaResponseArrayInput interface {
	pulumi.Input

	ToTaggingCriteriaResponseArrayOutput() TaggingCriteriaResponseArrayOutput
	ToTaggingCriteriaResponseArrayOutputWithContext(context.Context) TaggingCriteriaResponseArrayOutput
}

type TaggingCriteriaResponseArray []TaggingCriteriaResponseInput

func (TaggingCriteriaResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaggingCriteriaResponse)(nil)).Elem()
}

func (i TaggingCriteriaResponseArray) ToTaggingCriteriaResponseArrayOutput() TaggingCriteriaResponseArrayOutput {
	return i.ToTaggingCriteriaResponseArrayOutputWithContext(context.Background())
}

func (i TaggingCriteriaResponseArray) ToTaggingCriteriaResponseArrayOutputWithContext(ctx context.Context) TaggingCriteriaResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaggingCriteriaResponseArrayOutput)
}

// Tagging criteria
type TaggingCriteriaResponseOutput struct{ *pulumi.OutputState }

func (TaggingCriteriaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaggingCriteriaResponse)(nil)).Elem()
}

func (o TaggingCriteriaResponseOutput) ToTaggingCriteriaResponseOutput() TaggingCriteriaResponseOutput {
	return o
}

func (o TaggingCriteriaResponseOutput) ToTaggingCriteriaResponseOutputWithContext(ctx context.Context) TaggingCriteriaResponseOutput {
	return o
}

// Criteria which decides whether the tag can be applied to a triggered backup.
func (o TaggingCriteriaResponseOutput) Criteria() ScheduleBasedBackupCriteriaResponseArrayOutput {
	return o.ApplyT(func(v TaggingCriteriaResponse) []ScheduleBasedBackupCriteriaResponse { return v.Criteria }).(ScheduleBasedBackupCriteriaResponseArrayOutput)
}

// Specifies if tag is default.
func (o TaggingCriteriaResponseOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v TaggingCriteriaResponse) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Retention tag information
func (o TaggingCriteriaResponseOutput) TagInfo() RetentionTagResponseOutput {
	return o.ApplyT(func(v TaggingCriteriaResponse) RetentionTagResponse { return v.TagInfo }).(RetentionTagResponseOutput)
}

// Retention Tag priority.
func (o TaggingCriteriaResponseOutput) TaggingPriority() pulumi.Float64Output {
	return o.ApplyT(func(v TaggingCriteriaResponse) float64 { return v.TaggingPriority }).(pulumi.Float64Output)
}

type TaggingCriteriaResponseArrayOutput struct{ *pulumi.OutputState }

func (TaggingCriteriaResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaggingCriteriaResponse)(nil)).Elem()
}

func (o TaggingCriteriaResponseArrayOutput) ToTaggingCriteriaResponseArrayOutput() TaggingCriteriaResponseArrayOutput {
	return o
}

func (o TaggingCriteriaResponseArrayOutput) ToTaggingCriteriaResponseArrayOutputWithContext(ctx context.Context) TaggingCriteriaResponseArrayOutput {
	return o
}

func (o TaggingCriteriaResponseArrayOutput) Index(i pulumi.IntInput) TaggingCriteriaResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaggingCriteriaResponse {
		return vs[0].([]TaggingCriteriaResponse)[vs[1].(int)]
	}).(TaggingCriteriaResponseOutput)
}

// Target copy settings
type TargetCopySetting struct {
	// It can be CustomCopyOption or ImmediateCopyOption.
	CopyAfter interface{} `pulumi:"copyAfter"`
	// Info of target datastore
	DataStore DataStoreInfoBase `pulumi:"dataStore"`
}

// TargetCopySettingInput is an input type that accepts TargetCopySettingArgs and TargetCopySettingOutput values.
// You can construct a concrete instance of `TargetCopySettingInput` via:
//
//          TargetCopySettingArgs{...}
type TargetCopySettingInput interface {
	pulumi.Input

	ToTargetCopySettingOutput() TargetCopySettingOutput
	ToTargetCopySettingOutputWithContext(context.Context) TargetCopySettingOutput
}

// Target copy settings
type TargetCopySettingArgs struct {
	// It can be CustomCopyOption or ImmediateCopyOption.
	CopyAfter pulumi.Input `pulumi:"copyAfter"`
	// Info of target datastore
	DataStore DataStoreInfoBaseInput `pulumi:"dataStore"`
}

func (TargetCopySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCopySetting)(nil)).Elem()
}

func (i TargetCopySettingArgs) ToTargetCopySettingOutput() TargetCopySettingOutput {
	return i.ToTargetCopySettingOutputWithContext(context.Background())
}

func (i TargetCopySettingArgs) ToTargetCopySettingOutputWithContext(ctx context.Context) TargetCopySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCopySettingOutput)
}

// TargetCopySettingArrayInput is an input type that accepts TargetCopySettingArray and TargetCopySettingArrayOutput values.
// You can construct a concrete instance of `TargetCopySettingArrayInput` via:
//
//          TargetCopySettingArray{ TargetCopySettingArgs{...} }
type TargetCopySettingArrayInput interface {
	pulumi.Input

	ToTargetCopySettingArrayOutput() TargetCopySettingArrayOutput
	ToTargetCopySettingArrayOutputWithContext(context.Context) TargetCopySettingArrayOutput
}

type TargetCopySettingArray []TargetCopySettingInput

func (TargetCopySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCopySetting)(nil)).Elem()
}

func (i TargetCopySettingArray) ToTargetCopySettingArrayOutput() TargetCopySettingArrayOutput {
	return i.ToTargetCopySettingArrayOutputWithContext(context.Background())
}

func (i TargetCopySettingArray) ToTargetCopySettingArrayOutputWithContext(ctx context.Context) TargetCopySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCopySettingArrayOutput)
}

// Target copy settings
type TargetCopySettingOutput struct{ *pulumi.OutputState }

func (TargetCopySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCopySetting)(nil)).Elem()
}

func (o TargetCopySettingOutput) ToTargetCopySettingOutput() TargetCopySettingOutput {
	return o
}

func (o TargetCopySettingOutput) ToTargetCopySettingOutputWithContext(ctx context.Context) TargetCopySettingOutput {
	return o
}

// It can be CustomCopyOption or ImmediateCopyOption.
func (o TargetCopySettingOutput) CopyAfter() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetCopySetting) interface{} { return v.CopyAfter }).(pulumi.AnyOutput)
}

// Info of target datastore
func (o TargetCopySettingOutput) DataStore() DataStoreInfoBaseOutput {
	return o.ApplyT(func(v TargetCopySetting) DataStoreInfoBase { return v.DataStore }).(DataStoreInfoBaseOutput)
}

type TargetCopySettingArrayOutput struct{ *pulumi.OutputState }

func (TargetCopySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCopySetting)(nil)).Elem()
}

func (o TargetCopySettingArrayOutput) ToTargetCopySettingArrayOutput() TargetCopySettingArrayOutput {
	return o
}

func (o TargetCopySettingArrayOutput) ToTargetCopySettingArrayOutputWithContext(ctx context.Context) TargetCopySettingArrayOutput {
	return o
}

func (o TargetCopySettingArrayOutput) Index(i pulumi.IntInput) TargetCopySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetCopySetting {
		return vs[0].([]TargetCopySetting)[vs[1].(int)]
	}).(TargetCopySettingOutput)
}

// Target copy settings
type TargetCopySettingResponse struct {
	// It can be CustomCopyOption or ImmediateCopyOption.
	CopyAfter interface{} `pulumi:"copyAfter"`
	// Info of target datastore
	DataStore DataStoreInfoBaseResponse `pulumi:"dataStore"`
}

// TargetCopySettingResponseInput is an input type that accepts TargetCopySettingResponseArgs and TargetCopySettingResponseOutput values.
// You can construct a concrete instance of `TargetCopySettingResponseInput` via:
//
//          TargetCopySettingResponseArgs{...}
type TargetCopySettingResponseInput interface {
	pulumi.Input

	ToTargetCopySettingResponseOutput() TargetCopySettingResponseOutput
	ToTargetCopySettingResponseOutputWithContext(context.Context) TargetCopySettingResponseOutput
}

// Target copy settings
type TargetCopySettingResponseArgs struct {
	// It can be CustomCopyOption or ImmediateCopyOption.
	CopyAfter pulumi.Input `pulumi:"copyAfter"`
	// Info of target datastore
	DataStore DataStoreInfoBaseResponseInput `pulumi:"dataStore"`
}

func (TargetCopySettingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCopySettingResponse)(nil)).Elem()
}

func (i TargetCopySettingResponseArgs) ToTargetCopySettingResponseOutput() TargetCopySettingResponseOutput {
	return i.ToTargetCopySettingResponseOutputWithContext(context.Background())
}

func (i TargetCopySettingResponseArgs) ToTargetCopySettingResponseOutputWithContext(ctx context.Context) TargetCopySettingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCopySettingResponseOutput)
}

// TargetCopySettingResponseArrayInput is an input type that accepts TargetCopySettingResponseArray and TargetCopySettingResponseArrayOutput values.
// You can construct a concrete instance of `TargetCopySettingResponseArrayInput` via:
//
//          TargetCopySettingResponseArray{ TargetCopySettingResponseArgs{...} }
type TargetCopySettingResponseArrayInput interface {
	pulumi.Input

	ToTargetCopySettingResponseArrayOutput() TargetCopySettingResponseArrayOutput
	ToTargetCopySettingResponseArrayOutputWithContext(context.Context) TargetCopySettingResponseArrayOutput
}

type TargetCopySettingResponseArray []TargetCopySettingResponseInput

func (TargetCopySettingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCopySettingResponse)(nil)).Elem()
}

func (i TargetCopySettingResponseArray) ToTargetCopySettingResponseArrayOutput() TargetCopySettingResponseArrayOutput {
	return i.ToTargetCopySettingResponseArrayOutputWithContext(context.Background())
}

func (i TargetCopySettingResponseArray) ToTargetCopySettingResponseArrayOutputWithContext(ctx context.Context) TargetCopySettingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetCopySettingResponseArrayOutput)
}

// Target copy settings
type TargetCopySettingResponseOutput struct{ *pulumi.OutputState }

func (TargetCopySettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetCopySettingResponse)(nil)).Elem()
}

func (o TargetCopySettingResponseOutput) ToTargetCopySettingResponseOutput() TargetCopySettingResponseOutput {
	return o
}

func (o TargetCopySettingResponseOutput) ToTargetCopySettingResponseOutputWithContext(ctx context.Context) TargetCopySettingResponseOutput {
	return o
}

// It can be CustomCopyOption or ImmediateCopyOption.
func (o TargetCopySettingResponseOutput) CopyAfter() pulumi.AnyOutput {
	return o.ApplyT(func(v TargetCopySettingResponse) interface{} { return v.CopyAfter }).(pulumi.AnyOutput)
}

// Info of target datastore
func (o TargetCopySettingResponseOutput) DataStore() DataStoreInfoBaseResponseOutput {
	return o.ApplyT(func(v TargetCopySettingResponse) DataStoreInfoBaseResponse { return v.DataStore }).(DataStoreInfoBaseResponseOutput)
}

type TargetCopySettingResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetCopySettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetCopySettingResponse)(nil)).Elem()
}

func (o TargetCopySettingResponseArrayOutput) ToTargetCopySettingResponseArrayOutput() TargetCopySettingResponseArrayOutput {
	return o
}

func (o TargetCopySettingResponseArrayOutput) ToTargetCopySettingResponseArrayOutputWithContext(ctx context.Context) TargetCopySettingResponseArrayOutput {
	return o
}

func (o TargetCopySettingResponseArrayOutput) Index(i pulumi.IntInput) TargetCopySettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetCopySettingResponse {
		return vs[0].([]TargetCopySettingResponse)[vs[1].(int)]
	}).(TargetCopySettingResponseOutput)
}

// Error object used by layers that have access to localized content, and propagate that to user
type UserFacingErrorResponse struct {
	// Unique code for this error
	Code *string `pulumi:"code"`
	// Additional related Errors
	Details []UserFacingErrorResponse `pulumi:"details"`
	// Inner Error
	InnerError *InnerErrorResponse `pulumi:"innerError"`
	// Whether the operation will be retryable or not
	IsRetryable *bool `pulumi:"isRetryable"`
	// Whether the operation is due to a user error or service error
	IsUserError *bool   `pulumi:"isUserError"`
	Message     *string `pulumi:"message"`
	// Any key value pairs that can be injected inside error object
	Properties map[string]string `pulumi:"properties"`
	// RecommendedAction � localized.
	RecommendedAction []string `pulumi:"recommendedAction"`
	// Target of the error.
	Target *string `pulumi:"target"`
}

// UserFacingErrorResponseInput is an input type that accepts UserFacingErrorResponseArgs and UserFacingErrorResponseOutput values.
// You can construct a concrete instance of `UserFacingErrorResponseInput` via:
//
//          UserFacingErrorResponseArgs{...}
type UserFacingErrorResponseInput interface {
	pulumi.Input

	ToUserFacingErrorResponseOutput() UserFacingErrorResponseOutput
	ToUserFacingErrorResponseOutputWithContext(context.Context) UserFacingErrorResponseOutput
}

// Error object used by layers that have access to localized content, and propagate that to user
type UserFacingErrorResponseArgs struct {
	// Unique code for this error
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Additional related Errors
	Details UserFacingErrorResponseArrayInput `pulumi:"details"`
	// Inner Error
	InnerError InnerErrorResponsePtrInput `pulumi:"innerError"`
	// Whether the operation will be retryable or not
	IsRetryable pulumi.BoolPtrInput `pulumi:"isRetryable"`
	// Whether the operation is due to a user error or service error
	IsUserError pulumi.BoolPtrInput   `pulumi:"isUserError"`
	Message     pulumi.StringPtrInput `pulumi:"message"`
	// Any key value pairs that can be injected inside error object
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// RecommendedAction � localized.
	RecommendedAction pulumi.StringArrayInput `pulumi:"recommendedAction"`
	// Target of the error.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (UserFacingErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFacingErrorResponse)(nil)).Elem()
}

func (i UserFacingErrorResponseArgs) ToUserFacingErrorResponseOutput() UserFacingErrorResponseOutput {
	return i.ToUserFacingErrorResponseOutputWithContext(context.Background())
}

func (i UserFacingErrorResponseArgs) ToUserFacingErrorResponseOutputWithContext(ctx context.Context) UserFacingErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFacingErrorResponseOutput)
}

func (i UserFacingErrorResponseArgs) ToUserFacingErrorResponsePtrOutput() UserFacingErrorResponsePtrOutput {
	return i.ToUserFacingErrorResponsePtrOutputWithContext(context.Background())
}

func (i UserFacingErrorResponseArgs) ToUserFacingErrorResponsePtrOutputWithContext(ctx context.Context) UserFacingErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFacingErrorResponseOutput).ToUserFacingErrorResponsePtrOutputWithContext(ctx)
}

// UserFacingErrorResponsePtrInput is an input type that accepts UserFacingErrorResponseArgs, UserFacingErrorResponsePtr and UserFacingErrorResponsePtrOutput values.
// You can construct a concrete instance of `UserFacingErrorResponsePtrInput` via:
//
//          UserFacingErrorResponseArgs{...}
//
//  or:
//
//          nil
type UserFacingErrorResponsePtrInput interface {
	pulumi.Input

	ToUserFacingErrorResponsePtrOutput() UserFacingErrorResponsePtrOutput
	ToUserFacingErrorResponsePtrOutputWithContext(context.Context) UserFacingErrorResponsePtrOutput
}

type userFacingErrorResponsePtrType UserFacingErrorResponseArgs

func UserFacingErrorResponsePtr(v *UserFacingErrorResponseArgs) UserFacingErrorResponsePtrInput {
	return (*userFacingErrorResponsePtrType)(v)
}

func (*userFacingErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserFacingErrorResponse)(nil)).Elem()
}

func (i *userFacingErrorResponsePtrType) ToUserFacingErrorResponsePtrOutput() UserFacingErrorResponsePtrOutput {
	return i.ToUserFacingErrorResponsePtrOutputWithContext(context.Background())
}

func (i *userFacingErrorResponsePtrType) ToUserFacingErrorResponsePtrOutputWithContext(ctx context.Context) UserFacingErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFacingErrorResponsePtrOutput)
}

// UserFacingErrorResponseArrayInput is an input type that accepts UserFacingErrorResponseArray and UserFacingErrorResponseArrayOutput values.
// You can construct a concrete instance of `UserFacingErrorResponseArrayInput` via:
//
//          UserFacingErrorResponseArray{ UserFacingErrorResponseArgs{...} }
type UserFacingErrorResponseArrayInput interface {
	pulumi.Input

	ToUserFacingErrorResponseArrayOutput() UserFacingErrorResponseArrayOutput
	ToUserFacingErrorResponseArrayOutputWithContext(context.Context) UserFacingErrorResponseArrayOutput
}

type UserFacingErrorResponseArray []UserFacingErrorResponseInput

func (UserFacingErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFacingErrorResponse)(nil)).Elem()
}

func (i UserFacingErrorResponseArray) ToUserFacingErrorResponseArrayOutput() UserFacingErrorResponseArrayOutput {
	return i.ToUserFacingErrorResponseArrayOutputWithContext(context.Background())
}

func (i UserFacingErrorResponseArray) ToUserFacingErrorResponseArrayOutputWithContext(ctx context.Context) UserFacingErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserFacingErrorResponseArrayOutput)
}

// Error object used by layers that have access to localized content, and propagate that to user
type UserFacingErrorResponseOutput struct{ *pulumi.OutputState }

func (UserFacingErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserFacingErrorResponse)(nil)).Elem()
}

func (o UserFacingErrorResponseOutput) ToUserFacingErrorResponseOutput() UserFacingErrorResponseOutput {
	return o
}

func (o UserFacingErrorResponseOutput) ToUserFacingErrorResponseOutputWithContext(ctx context.Context) UserFacingErrorResponseOutput {
	return o
}

func (o UserFacingErrorResponseOutput) ToUserFacingErrorResponsePtrOutput() UserFacingErrorResponsePtrOutput {
	return o.ToUserFacingErrorResponsePtrOutputWithContext(context.Background())
}

func (o UserFacingErrorResponseOutput) ToUserFacingErrorResponsePtrOutputWithContext(ctx context.Context) UserFacingErrorResponsePtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *UserFacingErrorResponse {
		return &v
	}).(UserFacingErrorResponsePtrOutput)
}

// Unique code for this error
func (o UserFacingErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Additional related Errors
func (o UserFacingErrorResponseOutput) Details() UserFacingErrorResponseArrayOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) []UserFacingErrorResponse { return v.Details }).(UserFacingErrorResponseArrayOutput)
}

// Inner Error
func (o UserFacingErrorResponseOutput) InnerError() InnerErrorResponsePtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *InnerErrorResponse { return v.InnerError }).(InnerErrorResponsePtrOutput)
}

// Whether the operation will be retryable or not
func (o UserFacingErrorResponseOutput) IsRetryable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *bool { return v.IsRetryable }).(pulumi.BoolPtrOutput)
}

// Whether the operation is due to a user error or service error
func (o UserFacingErrorResponseOutput) IsUserError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *bool { return v.IsUserError }).(pulumi.BoolPtrOutput)
}

func (o UserFacingErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Any key value pairs that can be injected inside error object
func (o UserFacingErrorResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// RecommendedAction � localized.
func (o UserFacingErrorResponseOutput) RecommendedAction() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) []string { return v.RecommendedAction }).(pulumi.StringArrayOutput)
}

// Target of the error.
func (o UserFacingErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserFacingErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type UserFacingErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (UserFacingErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserFacingErrorResponse)(nil)).Elem()
}

func (o UserFacingErrorResponsePtrOutput) ToUserFacingErrorResponsePtrOutput() UserFacingErrorResponsePtrOutput {
	return o
}

func (o UserFacingErrorResponsePtrOutput) ToUserFacingErrorResponsePtrOutputWithContext(ctx context.Context) UserFacingErrorResponsePtrOutput {
	return o
}

func (o UserFacingErrorResponsePtrOutput) Elem() UserFacingErrorResponseOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) UserFacingErrorResponse { return *v }).(UserFacingErrorResponseOutput)
}

// Unique code for this error
func (o UserFacingErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Additional related Errors
func (o UserFacingErrorResponsePtrOutput) Details() UserFacingErrorResponseArrayOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) []UserFacingErrorResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(UserFacingErrorResponseArrayOutput)
}

// Inner Error
func (o UserFacingErrorResponsePtrOutput) InnerError() InnerErrorResponsePtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *InnerErrorResponse {
		if v == nil {
			return nil
		}
		return v.InnerError
	}).(InnerErrorResponsePtrOutput)
}

// Whether the operation will be retryable or not
func (o UserFacingErrorResponsePtrOutput) IsRetryable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsRetryable
	}).(pulumi.BoolPtrOutput)
}

// Whether the operation is due to a user error or service error
func (o UserFacingErrorResponsePtrOutput) IsUserError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsUserError
	}).(pulumi.BoolPtrOutput)
}

func (o UserFacingErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Any key value pairs that can be injected inside error object
func (o UserFacingErrorResponsePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// RecommendedAction � localized.
func (o UserFacingErrorResponsePtrOutput) RecommendedAction() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) []string {
		if v == nil {
			return nil
		}
		return v.RecommendedAction
	}).(pulumi.StringArrayOutput)
}

// Target of the error.
func (o UserFacingErrorResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserFacingErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type UserFacingErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (UserFacingErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserFacingErrorResponse)(nil)).Elem()
}

func (o UserFacingErrorResponseArrayOutput) ToUserFacingErrorResponseArrayOutput() UserFacingErrorResponseArrayOutput {
	return o
}

func (o UserFacingErrorResponseArrayOutput) ToUserFacingErrorResponseArrayOutputWithContext(ctx context.Context) UserFacingErrorResponseArrayOutput {
	return o
}

func (o UserFacingErrorResponseArrayOutput) Index(i pulumi.IntInput) UserFacingErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserFacingErrorResponse {
		return vs[0].([]UserFacingErrorResponse)[vs[1].(int)]
	}).(UserFacingErrorResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AbsoluteDeleteOptionOutput{})
	pulumi.RegisterOutputType(AbsoluteDeleteOptionResponseOutput{})
	pulumi.RegisterOutputType(AdhocBasedTaggingCriteriaOutput{})
	pulumi.RegisterOutputType(AdhocBasedTaggingCriteriaResponseOutput{})
	pulumi.RegisterOutputType(AdhocBasedTriggerContextOutput{})
	pulumi.RegisterOutputType(AdhocBasedTriggerContextResponseOutput{})
	pulumi.RegisterOutputType(AzureBackupParamsOutput{})
	pulumi.RegisterOutputType(AzureBackupParamsPtrOutput{})
	pulumi.RegisterOutputType(AzureBackupParamsResponseOutput{})
	pulumi.RegisterOutputType(AzureBackupParamsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBackupRuleOutput{})
	pulumi.RegisterOutputType(AzureBackupRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureOperationalStoreParametersOutput{})
	pulumi.RegisterOutputType(AzureOperationalStoreParametersArrayOutput{})
	pulumi.RegisterOutputType(AzureOperationalStoreParametersResponseOutput{})
	pulumi.RegisterOutputType(AzureOperationalStoreParametersResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureRetentionRuleOutput{})
	pulumi.RegisterOutputType(AzureRetentionRuleResponseOutput{})
	pulumi.RegisterOutputType(BackupInstanceTypeOutput{})
	pulumi.RegisterOutputType(BackupInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(BackupInstanceResponseOutput{})
	pulumi.RegisterOutputType(BackupInstanceResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyTypeOutput{})
	pulumi.RegisterOutputType(BackupPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyResponseOutput{})
	pulumi.RegisterOutputType(BackupPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupScheduleOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponseOutput{})
	pulumi.RegisterOutputType(BackupVaultTypeOutput{})
	pulumi.RegisterOutputType(BackupVaultTypePtrOutput{})
	pulumi.RegisterOutputType(BackupVaultResponseOutput{})
	pulumi.RegisterOutputType(BackupVaultResponsePtrOutput{})
	pulumi.RegisterOutputType(CopyOnExpiryOptionOutput{})
	pulumi.RegisterOutputType(CopyOnExpiryOptionResponseOutput{})
	pulumi.RegisterOutputType(CustomCopyOptionOutput{})
	pulumi.RegisterOutputType(CustomCopyOptionResponseOutput{})
	pulumi.RegisterOutputType(DataStoreInfoBaseOutput{})
	pulumi.RegisterOutputType(DataStoreInfoBaseResponseOutput{})
	pulumi.RegisterOutputType(DatasourceOutput{})
	pulumi.RegisterOutputType(DatasourcePtrOutput{})
	pulumi.RegisterOutputType(DatasourceResponseOutput{})
	pulumi.RegisterOutputType(DatasourceResponsePtrOutput{})
	pulumi.RegisterOutputType(DatasourceSetOutput{})
	pulumi.RegisterOutputType(DatasourceSetPtrOutput{})
	pulumi.RegisterOutputType(DatasourceSetResponseOutput{})
	pulumi.RegisterOutputType(DatasourceSetResponsePtrOutput{})
	pulumi.RegisterOutputType(DayOutput{})
	pulumi.RegisterOutputType(DayArrayOutput{})
	pulumi.RegisterOutputType(DayResponseOutput{})
	pulumi.RegisterOutputType(DayResponseArrayOutput{})
	pulumi.RegisterOutputType(DppIdentityDetailsOutput{})
	pulumi.RegisterOutputType(DppIdentityDetailsPtrOutput{})
	pulumi.RegisterOutputType(DppIdentityDetailsResponseOutput{})
	pulumi.RegisterOutputType(DppIdentityDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmediateCopyOptionOutput{})
	pulumi.RegisterOutputType(ImmediateCopyOptionResponseOutput{})
	pulumi.RegisterOutputType(InnerErrorResponseOutput{})
	pulumi.RegisterOutputType(InnerErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyInfoOutput{})
	pulumi.RegisterOutputType(PolicyInfoPtrOutput{})
	pulumi.RegisterOutputType(PolicyInfoResponseOutput{})
	pulumi.RegisterOutputType(PolicyInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(PolicyParametersOutput{})
	pulumi.RegisterOutputType(PolicyParametersPtrOutput{})
	pulumi.RegisterOutputType(PolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(PolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(ProtectionStatusDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProtectionStatusDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionTagOutput{})
	pulumi.RegisterOutputType(RetentionTagPtrOutput{})
	pulumi.RegisterOutputType(RetentionTagResponseOutput{})
	pulumi.RegisterOutputType(RetentionTagResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduleBasedBackupCriteriaOutput{})
	pulumi.RegisterOutputType(ScheduleBasedBackupCriteriaArrayOutput{})
	pulumi.RegisterOutputType(ScheduleBasedBackupCriteriaResponseOutput{})
	pulumi.RegisterOutputType(ScheduleBasedBackupCriteriaResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduleBasedTriggerContextOutput{})
	pulumi.RegisterOutputType(ScheduleBasedTriggerContextResponseOutput{})
	pulumi.RegisterOutputType(SourceLifeCycleOutput{})
	pulumi.RegisterOutputType(SourceLifeCycleArrayOutput{})
	pulumi.RegisterOutputType(SourceLifeCycleResponseOutput{})
	pulumi.RegisterOutputType(SourceLifeCycleResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageSettingOutput{})
	pulumi.RegisterOutputType(StorageSettingArrayOutput{})
	pulumi.RegisterOutputType(StorageSettingResponseOutput{})
	pulumi.RegisterOutputType(StorageSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(TaggingCriteriaOutput{})
	pulumi.RegisterOutputType(TaggingCriteriaArrayOutput{})
	pulumi.RegisterOutputType(TaggingCriteriaResponseOutput{})
	pulumi.RegisterOutputType(TaggingCriteriaResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetCopySettingOutput{})
	pulumi.RegisterOutputType(TargetCopySettingArrayOutput{})
	pulumi.RegisterOutputType(TargetCopySettingResponseOutput{})
	pulumi.RegisterOutputType(TargetCopySettingResponseArrayOutput{})
	pulumi.RegisterOutputType(UserFacingErrorResponseOutput{})
	pulumi.RegisterOutputType(UserFacingErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(UserFacingErrorResponseArrayOutput{})
}
