// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AbsoluteMarker string

const (
	AbsoluteMarkerAllBackup    = AbsoluteMarker("AllBackup")
	AbsoluteMarkerFirstOfDay   = AbsoluteMarker("FirstOfDay")
	AbsoluteMarkerFirstOfMonth = AbsoluteMarker("FirstOfMonth")
	AbsoluteMarkerFirstOfWeek  = AbsoluteMarker("FirstOfWeek")
	AbsoluteMarkerFirstOfYear  = AbsoluteMarker("FirstOfYear")
)

func (AbsoluteMarker) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteMarker)(nil)).Elem()
}

func (e AbsoluteMarker) ToAbsoluteMarkerOutput() AbsoluteMarkerOutput {
	return pulumi.ToOutput(e).(AbsoluteMarkerOutput)
}

func (e AbsoluteMarker) ToAbsoluteMarkerOutputWithContext(ctx context.Context) AbsoluteMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AbsoluteMarkerOutput)
}

func (e AbsoluteMarker) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return e.ToAbsoluteMarkerPtrOutputWithContext(context.Background())
}

func (e AbsoluteMarker) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return AbsoluteMarker(e).ToAbsoluteMarkerOutputWithContext(ctx).ToAbsoluteMarkerPtrOutputWithContext(ctx)
}

func (e AbsoluteMarker) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AbsoluteMarker) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AbsoluteMarker) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AbsoluteMarker) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AbsoluteMarkerOutput struct{ *pulumi.OutputState }

func (AbsoluteMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbsoluteMarker)(nil)).Elem()
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerOutput() AbsoluteMarkerOutput {
	return o
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerOutputWithContext(ctx context.Context) AbsoluteMarkerOutput {
	return o
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return o.ToAbsoluteMarkerPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AbsoluteMarker) *AbsoluteMarker {
		return &v
	}).(AbsoluteMarkerPtrOutput)
}

func (o AbsoluteMarkerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AbsoluteMarker) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AbsoluteMarkerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AbsoluteMarker) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AbsoluteMarkerPtrOutput struct{ *pulumi.OutputState }

func (AbsoluteMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AbsoluteMarker)(nil)).Elem()
}

func (o AbsoluteMarkerPtrOutput) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return o
}

func (o AbsoluteMarkerPtrOutput) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return o
}

func (o AbsoluteMarkerPtrOutput) Elem() AbsoluteMarkerOutput {
	return o.ApplyT(func(v *AbsoluteMarker) AbsoluteMarker {
		if v != nil {
			return *v
		}
		var ret AbsoluteMarker
		return ret
	}).(AbsoluteMarkerOutput)
}

func (o AbsoluteMarkerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AbsoluteMarkerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AbsoluteMarker) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AbsoluteMarkerInput is an input type that accepts AbsoluteMarkerArgs and AbsoluteMarkerOutput values.
// You can construct a concrete instance of `AbsoluteMarkerInput` via:
//
//          AbsoluteMarkerArgs{...}
type AbsoluteMarkerInput interface {
	pulumi.Input

	ToAbsoluteMarkerOutput() AbsoluteMarkerOutput
	ToAbsoluteMarkerOutputWithContext(context.Context) AbsoluteMarkerOutput
}

var absoluteMarkerPtrType = reflect.TypeOf((**AbsoluteMarker)(nil)).Elem()

type AbsoluteMarkerPtrInput interface {
	pulumi.Input

	ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput
	ToAbsoluteMarkerPtrOutputWithContext(context.Context) AbsoluteMarkerPtrOutput
}

type absoluteMarkerPtr string

func AbsoluteMarkerPtr(v string) AbsoluteMarkerPtrInput {
	return (*absoluteMarkerPtr)(&v)
}

func (*absoluteMarkerPtr) ElementType() reflect.Type {
	return absoluteMarkerPtrType
}

func (in *absoluteMarkerPtr) ToAbsoluteMarkerPtrOutput() AbsoluteMarkerPtrOutput {
	return pulumi.ToOutput(in).(AbsoluteMarkerPtrOutput)
}

func (in *absoluteMarkerPtr) ToAbsoluteMarkerPtrOutputWithContext(ctx context.Context) AbsoluteMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AbsoluteMarkerPtrOutput)
}

type DataStoreTypes string

const (
	DataStoreTypesOperationalStore = DataStoreTypes("OperationalStore")
	DataStoreTypesVaultStore       = DataStoreTypes("VaultStore")
	DataStoreTypesArchiveStore     = DataStoreTypes("ArchiveStore")
)

func (DataStoreTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreTypes)(nil)).Elem()
}

func (e DataStoreTypes) ToDataStoreTypesOutput() DataStoreTypesOutput {
	return pulumi.ToOutput(e).(DataStoreTypesOutput)
}

func (e DataStoreTypes) ToDataStoreTypesOutputWithContext(ctx context.Context) DataStoreTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataStoreTypesOutput)
}

func (e DataStoreTypes) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return e.ToDataStoreTypesPtrOutputWithContext(context.Background())
}

func (e DataStoreTypes) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return DataStoreTypes(e).ToDataStoreTypesOutputWithContext(ctx).ToDataStoreTypesPtrOutputWithContext(ctx)
}

func (e DataStoreTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataStoreTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataStoreTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataStoreTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataStoreTypesOutput struct{ *pulumi.OutputState }

func (DataStoreTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreTypes)(nil)).Elem()
}

func (o DataStoreTypesOutput) ToDataStoreTypesOutput() DataStoreTypesOutput {
	return o
}

func (o DataStoreTypesOutput) ToDataStoreTypesOutputWithContext(ctx context.Context) DataStoreTypesOutput {
	return o
}

func (o DataStoreTypesOutput) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return o.ToDataStoreTypesPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataStoreTypes) *DataStoreTypes {
		return &v
	}).(DataStoreTypesPtrOutput)
}

func (o DataStoreTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataStoreTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataStoreTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataStoreTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataStoreTypesPtrOutput struct{ *pulumi.OutputState }

func (DataStoreTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataStoreTypes)(nil)).Elem()
}

func (o DataStoreTypesPtrOutput) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return o
}

func (o DataStoreTypesPtrOutput) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return o
}

func (o DataStoreTypesPtrOutput) Elem() DataStoreTypesOutput {
	return o.ApplyT(func(v *DataStoreTypes) DataStoreTypes {
		if v != nil {
			return *v
		}
		var ret DataStoreTypes
		return ret
	}).(DataStoreTypesOutput)
}

func (o DataStoreTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataStoreTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataStoreTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataStoreTypesInput is an input type that accepts DataStoreTypesArgs and DataStoreTypesOutput values.
// You can construct a concrete instance of `DataStoreTypesInput` via:
//
//          DataStoreTypesArgs{...}
type DataStoreTypesInput interface {
	pulumi.Input

	ToDataStoreTypesOutput() DataStoreTypesOutput
	ToDataStoreTypesOutputWithContext(context.Context) DataStoreTypesOutput
}

var dataStoreTypesPtrType = reflect.TypeOf((**DataStoreTypes)(nil)).Elem()

type DataStoreTypesPtrInput interface {
	pulumi.Input

	ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput
	ToDataStoreTypesPtrOutputWithContext(context.Context) DataStoreTypesPtrOutput
}

type dataStoreTypesPtr string

func DataStoreTypesPtr(v string) DataStoreTypesPtrInput {
	return (*dataStoreTypesPtr)(&v)
}

func (*dataStoreTypesPtr) ElementType() reflect.Type {
	return dataStoreTypesPtrType
}

func (in *dataStoreTypesPtr) ToDataStoreTypesPtrOutput() DataStoreTypesPtrOutput {
	return pulumi.ToOutput(in).(DataStoreTypesPtrOutput)
}

func (in *dataStoreTypesPtr) ToDataStoreTypesPtrOutputWithContext(ctx context.Context) DataStoreTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataStoreTypesPtrOutput)
}

type DayOfWeek string

const (
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
)

func (DayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (e DayOfWeek) ToDayOfWeekOutput() DayOfWeekOutput {
	return pulumi.ToOutput(e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DayOfWeekOutput)
}

func (e DayOfWeek) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return e.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return DayOfWeek(e).ToDayOfWeekOutputWithContext(ctx).ToDayOfWeekPtrOutputWithContext(ctx)
}

func (e DayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DayOfWeekOutput struct{ *pulumi.OutputState }

func (DayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekOutput) ToDayOfWeekOutput() DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekOutputWithContext(ctx context.Context) DayOfWeekOutput {
	return o
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o.ToDayOfWeekPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DayOfWeek) *DayOfWeek {
		return &v
	}).(DayOfWeekPtrOutput)
}

func (o DayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (DayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DayOfWeek)(nil)).Elem()
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return o
}

func (o DayOfWeekPtrOutput) Elem() DayOfWeekOutput {
	return o.ApplyT(func(v *DayOfWeek) DayOfWeek {
		if v != nil {
			return *v
		}
		var ret DayOfWeek
		return ret
	}).(DayOfWeekOutput)
}

func (o DayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DayOfWeekInput is an input type that accepts DayOfWeekArgs and DayOfWeekOutput values.
// You can construct a concrete instance of `DayOfWeekInput` via:
//
//          DayOfWeekArgs{...}
type DayOfWeekInput interface {
	pulumi.Input

	ToDayOfWeekOutput() DayOfWeekOutput
	ToDayOfWeekOutputWithContext(context.Context) DayOfWeekOutput
}

var dayOfWeekPtrType = reflect.TypeOf((**DayOfWeek)(nil)).Elem()

type DayOfWeekPtrInput interface {
	pulumi.Input

	ToDayOfWeekPtrOutput() DayOfWeekPtrOutput
	ToDayOfWeekPtrOutputWithContext(context.Context) DayOfWeekPtrOutput
}

type dayOfWeekPtr string

func DayOfWeekPtr(v string) DayOfWeekPtrInput {
	return (*dayOfWeekPtr)(&v)
}

func (*dayOfWeekPtr) ElementType() reflect.Type {
	return dayOfWeekPtrType
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutput() DayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(DayOfWeekPtrOutput)
}

func (in *dayOfWeekPtr) ToDayOfWeekPtrOutputWithContext(ctx context.Context) DayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DayOfWeekPtrOutput)
}

type Month string

const (
	MonthApril     = Month("April")
	MonthAugust    = Month("August")
	MonthDecember  = Month("December")
	MonthFebruary  = Month("February")
	MonthJanuary   = Month("January")
	MonthJuly      = Month("July")
	MonthJune      = Month("June")
	MonthMarch     = Month("March")
	MonthMay       = Month("May")
	MonthNovember  = Month("November")
	MonthOctober   = Month("October")
	MonthSeptember = Month("September")
)

func (Month) ElementType() reflect.Type {
	return reflect.TypeOf((*Month)(nil)).Elem()
}

func (e Month) ToMonthOutput() MonthOutput {
	return pulumi.ToOutput(e).(MonthOutput)
}

func (e Month) ToMonthOutputWithContext(ctx context.Context) MonthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonthOutput)
}

func (e Month) ToMonthPtrOutput() MonthPtrOutput {
	return e.ToMonthPtrOutputWithContext(context.Background())
}

func (e Month) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return Month(e).ToMonthOutputWithContext(ctx).ToMonthPtrOutputWithContext(ctx)
}

func (e Month) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Month) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Month) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Month) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonthOutput struct{ *pulumi.OutputState }

func (MonthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Month)(nil)).Elem()
}

func (o MonthOutput) ToMonthOutput() MonthOutput {
	return o
}

func (o MonthOutput) ToMonthOutputWithContext(ctx context.Context) MonthOutput {
	return o
}

func (o MonthOutput) ToMonthPtrOutput() MonthPtrOutput {
	return o.ToMonthPtrOutputWithContext(context.Background())
}

func (o MonthOutput) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Month) *Month {
		return &v
	}).(MonthPtrOutput)
}

func (o MonthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Month) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Month) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonthPtrOutput struct{ *pulumi.OutputState }

func (MonthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Month)(nil)).Elem()
}

func (o MonthPtrOutput) ToMonthPtrOutput() MonthPtrOutput {
	return o
}

func (o MonthPtrOutput) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return o
}

func (o MonthPtrOutput) Elem() MonthOutput {
	return o.ApplyT(func(v *Month) Month {
		if v != nil {
			return *v
		}
		var ret Month
		return ret
	}).(MonthOutput)
}

func (o MonthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Month) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonthInput is an input type that accepts MonthArgs and MonthOutput values.
// You can construct a concrete instance of `MonthInput` via:
//
//          MonthArgs{...}
type MonthInput interface {
	pulumi.Input

	ToMonthOutput() MonthOutput
	ToMonthOutputWithContext(context.Context) MonthOutput
}

var monthPtrType = reflect.TypeOf((**Month)(nil)).Elem()

type MonthPtrInput interface {
	pulumi.Input

	ToMonthPtrOutput() MonthPtrOutput
	ToMonthPtrOutputWithContext(context.Context) MonthPtrOutput
}

type monthPtr string

func MonthPtr(v string) MonthPtrInput {
	return (*monthPtr)(&v)
}

func (*monthPtr) ElementType() reflect.Type {
	return monthPtrType
}

func (in *monthPtr) ToMonthPtrOutput() MonthPtrOutput {
	return pulumi.ToOutput(in).(MonthPtrOutput)
}

func (in *monthPtr) ToMonthPtrOutputWithContext(ctx context.Context) MonthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonthPtrOutput)
}

type SecretStoreType string

const (
	SecretStoreTypeInvalid       = SecretStoreType("Invalid")
	SecretStoreTypeAzureKeyVault = SecretStoreType("AzureKeyVault")
)

func (SecretStoreType) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (e SecretStoreType) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return pulumi.ToOutput(e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecretStoreTypeOutput)
}

func (e SecretStoreType) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return e.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return SecretStoreType(e).ToSecretStoreTypeOutputWithContext(ctx).ToSecretStoreTypePtrOutputWithContext(ctx)
}

func (e SecretStoreType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretStoreType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecretStoreType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecretStoreTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o.ToSecretStoreTypePtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreType) *SecretStoreType {
		return &v
	}).(SecretStoreTypePtrOutput)
}

func (o SecretStoreTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecretStoreTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecretStoreType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecretStoreTypePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return o
}

func (o SecretStoreTypePtrOutput) Elem() SecretStoreTypeOutput {
	return o.ApplyT(func(v *SecretStoreType) SecretStoreType {
		if v != nil {
			return *v
		}
		var ret SecretStoreType
		return ret
	}).(SecretStoreTypeOutput)
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecretStoreTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecretStoreType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecretStoreTypeInput is an input type that accepts SecretStoreTypeArgs and SecretStoreTypeOutput values.
// You can construct a concrete instance of `SecretStoreTypeInput` via:
//
//          SecretStoreTypeArgs{...}
type SecretStoreTypeInput interface {
	pulumi.Input

	ToSecretStoreTypeOutput() SecretStoreTypeOutput
	ToSecretStoreTypeOutputWithContext(context.Context) SecretStoreTypeOutput
}

var secretStoreTypePtrType = reflect.TypeOf((**SecretStoreType)(nil)).Elem()

type SecretStoreTypePtrInput interface {
	pulumi.Input

	ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput
	ToSecretStoreTypePtrOutputWithContext(context.Context) SecretStoreTypePtrOutput
}

type secretStoreTypePtr string

func SecretStoreTypePtr(v string) SecretStoreTypePtrInput {
	return (*secretStoreTypePtr)(&v)
}

func (*secretStoreTypePtr) ElementType() reflect.Type {
	return secretStoreTypePtrType
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutput() SecretStoreTypePtrOutput {
	return pulumi.ToOutput(in).(SecretStoreTypePtrOutput)
}

func (in *secretStoreTypePtr) ToSecretStoreTypePtrOutputWithContext(ctx context.Context) SecretStoreTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecretStoreTypePtrOutput)
}

type StorageSettingStoreTypes string

const (
	StorageSettingStoreTypesArchiveStore  = StorageSettingStoreTypes("ArchiveStore")
	StorageSettingStoreTypesSnapshotStore = StorageSettingStoreTypes("SnapshotStore")
	StorageSettingStoreTypesVaultStore    = StorageSettingStoreTypes("VaultStore")
)

func (StorageSettingStoreTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingStoreTypes)(nil)).Elem()
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput {
	return pulumi.ToOutput(e).(StorageSettingStoreTypesOutput)
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesOutputWithContext(ctx context.Context) StorageSettingStoreTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSettingStoreTypesOutput)
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return e.ToStorageSettingStoreTypesPtrOutputWithContext(context.Background())
}

func (e StorageSettingStoreTypes) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return StorageSettingStoreTypes(e).ToStorageSettingStoreTypesOutputWithContext(ctx).ToStorageSettingStoreTypesPtrOutputWithContext(ctx)
}

func (e StorageSettingStoreTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingStoreTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingStoreTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSettingStoreTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSettingStoreTypesOutput struct{ *pulumi.OutputState }

func (StorageSettingStoreTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingStoreTypes)(nil)).Elem()
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput {
	return o
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesOutputWithContext(ctx context.Context) StorageSettingStoreTypesOutput {
	return o
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return o.ToStorageSettingStoreTypesPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSettingStoreTypes) *StorageSettingStoreTypes {
		return &v
	}).(StorageSettingStoreTypesPtrOutput)
}

func (o StorageSettingStoreTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingStoreTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSettingStoreTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingStoreTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSettingStoreTypesPtrOutput struct{ *pulumi.OutputState }

func (StorageSettingStoreTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSettingStoreTypes)(nil)).Elem()
}

func (o StorageSettingStoreTypesPtrOutput) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return o
}

func (o StorageSettingStoreTypesPtrOutput) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return o
}

func (o StorageSettingStoreTypesPtrOutput) Elem() StorageSettingStoreTypesOutput {
	return o.ApplyT(func(v *StorageSettingStoreTypes) StorageSettingStoreTypes {
		if v != nil {
			return *v
		}
		var ret StorageSettingStoreTypes
		return ret
	}).(StorageSettingStoreTypesOutput)
}

func (o StorageSettingStoreTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingStoreTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSettingStoreTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSettingStoreTypesInput is an input type that accepts StorageSettingStoreTypesArgs and StorageSettingStoreTypesOutput values.
// You can construct a concrete instance of `StorageSettingStoreTypesInput` via:
//
//          StorageSettingStoreTypesArgs{...}
type StorageSettingStoreTypesInput interface {
	pulumi.Input

	ToStorageSettingStoreTypesOutput() StorageSettingStoreTypesOutput
	ToStorageSettingStoreTypesOutputWithContext(context.Context) StorageSettingStoreTypesOutput
}

var storageSettingStoreTypesPtrType = reflect.TypeOf((**StorageSettingStoreTypes)(nil)).Elem()

type StorageSettingStoreTypesPtrInput interface {
	pulumi.Input

	ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput
	ToStorageSettingStoreTypesPtrOutputWithContext(context.Context) StorageSettingStoreTypesPtrOutput
}

type storageSettingStoreTypesPtr string

func StorageSettingStoreTypesPtr(v string) StorageSettingStoreTypesPtrInput {
	return (*storageSettingStoreTypesPtr)(&v)
}

func (*storageSettingStoreTypesPtr) ElementType() reflect.Type {
	return storageSettingStoreTypesPtrType
}

func (in *storageSettingStoreTypesPtr) ToStorageSettingStoreTypesPtrOutput() StorageSettingStoreTypesPtrOutput {
	return pulumi.ToOutput(in).(StorageSettingStoreTypesPtrOutput)
}

func (in *storageSettingStoreTypesPtr) ToStorageSettingStoreTypesPtrOutputWithContext(ctx context.Context) StorageSettingStoreTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSettingStoreTypesPtrOutput)
}

type StorageSettingTypes string

const (
	StorageSettingTypesGeoRedundant     = StorageSettingTypes("GeoRedundant")
	StorageSettingTypesLocallyRedundant = StorageSettingTypes("LocallyRedundant")
)

func (StorageSettingTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingTypes)(nil)).Elem()
}

func (e StorageSettingTypes) ToStorageSettingTypesOutput() StorageSettingTypesOutput {
	return pulumi.ToOutput(e).(StorageSettingTypesOutput)
}

func (e StorageSettingTypes) ToStorageSettingTypesOutputWithContext(ctx context.Context) StorageSettingTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StorageSettingTypesOutput)
}

func (e StorageSettingTypes) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return e.ToStorageSettingTypesPtrOutputWithContext(context.Background())
}

func (e StorageSettingTypes) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return StorageSettingTypes(e).ToStorageSettingTypesOutputWithContext(ctx).ToStorageSettingTypesPtrOutputWithContext(ctx)
}

func (e StorageSettingTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StorageSettingTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StorageSettingTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StorageSettingTypesOutput struct{ *pulumi.OutputState }

func (StorageSettingTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageSettingTypes)(nil)).Elem()
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesOutput() StorageSettingTypesOutput {
	return o
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesOutputWithContext(ctx context.Context) StorageSettingTypesOutput {
	return o
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return o.ToStorageSettingTypesPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageSettingTypes) *StorageSettingTypes {
		return &v
	}).(StorageSettingTypesPtrOutput)
}

func (o StorageSettingTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StorageSettingTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StorageSettingTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StorageSettingTypesPtrOutput struct{ *pulumi.OutputState }

func (StorageSettingTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageSettingTypes)(nil)).Elem()
}

func (o StorageSettingTypesPtrOutput) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return o
}

func (o StorageSettingTypesPtrOutput) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return o
}

func (o StorageSettingTypesPtrOutput) Elem() StorageSettingTypesOutput {
	return o.ApplyT(func(v *StorageSettingTypes) StorageSettingTypes {
		if v != nil {
			return *v
		}
		var ret StorageSettingTypes
		return ret
	}).(StorageSettingTypesOutput)
}

func (o StorageSettingTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StorageSettingTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StorageSettingTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StorageSettingTypesInput is an input type that accepts StorageSettingTypesArgs and StorageSettingTypesOutput values.
// You can construct a concrete instance of `StorageSettingTypesInput` via:
//
//          StorageSettingTypesArgs{...}
type StorageSettingTypesInput interface {
	pulumi.Input

	ToStorageSettingTypesOutput() StorageSettingTypesOutput
	ToStorageSettingTypesOutputWithContext(context.Context) StorageSettingTypesOutput
}

var storageSettingTypesPtrType = reflect.TypeOf((**StorageSettingTypes)(nil)).Elem()

type StorageSettingTypesPtrInput interface {
	pulumi.Input

	ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput
	ToStorageSettingTypesPtrOutputWithContext(context.Context) StorageSettingTypesPtrOutput
}

type storageSettingTypesPtr string

func StorageSettingTypesPtr(v string) StorageSettingTypesPtrInput {
	return (*storageSettingTypesPtr)(&v)
}

func (*storageSettingTypesPtr) ElementType() reflect.Type {
	return storageSettingTypesPtrType
}

func (in *storageSettingTypesPtr) ToStorageSettingTypesPtrOutput() StorageSettingTypesPtrOutput {
	return pulumi.ToOutput(in).(StorageSettingTypesPtrOutput)
}

func (in *storageSettingTypesPtr) ToStorageSettingTypesPtrOutputWithContext(ctx context.Context) StorageSettingTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StorageSettingTypesPtrOutput)
}

type WeekNumber string

const (
	WeekNumberFirst  = WeekNumber("First")
	WeekNumberFourth = WeekNumber("Fourth")
	WeekNumberLast   = WeekNumber("Last")
	WeekNumberSecond = WeekNumber("Second")
	WeekNumberThird  = WeekNumber("Third")
)

func (WeekNumber) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekNumber)(nil)).Elem()
}

func (e WeekNumber) ToWeekNumberOutput() WeekNumberOutput {
	return pulumi.ToOutput(e).(WeekNumberOutput)
}

func (e WeekNumber) ToWeekNumberOutputWithContext(ctx context.Context) WeekNumberOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeekNumberOutput)
}

func (e WeekNumber) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return e.ToWeekNumberPtrOutputWithContext(context.Background())
}

func (e WeekNumber) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return WeekNumber(e).ToWeekNumberOutputWithContext(ctx).ToWeekNumberPtrOutputWithContext(ctx)
}

func (e WeekNumber) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekNumber) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeekNumber) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeekNumber) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeekNumberOutput struct{ *pulumi.OutputState }

func (WeekNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeekNumber)(nil)).Elem()
}

func (o WeekNumberOutput) ToWeekNumberOutput() WeekNumberOutput {
	return o
}

func (o WeekNumberOutput) ToWeekNumberOutputWithContext(ctx context.Context) WeekNumberOutput {
	return o
}

func (o WeekNumberOutput) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return o.ToWeekNumberPtrOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeekNumber) *WeekNumber {
		return &v
	}).(WeekNumberPtrOutput)
}

func (o WeekNumberOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekNumber) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeekNumberOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekNumberOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeekNumber) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeekNumberPtrOutput struct{ *pulumi.OutputState }

func (WeekNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeekNumber)(nil)).Elem()
}

func (o WeekNumberPtrOutput) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return o
}

func (o WeekNumberPtrOutput) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return o
}

func (o WeekNumberPtrOutput) Elem() WeekNumberOutput {
	return o.ApplyT(func(v *WeekNumber) WeekNumber {
		if v != nil {
			return *v
		}
		var ret WeekNumber
		return ret
	}).(WeekNumberOutput)
}

func (o WeekNumberPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeekNumberPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeekNumber) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WeekNumberInput is an input type that accepts WeekNumberArgs and WeekNumberOutput values.
// You can construct a concrete instance of `WeekNumberInput` via:
//
//          WeekNumberArgs{...}
type WeekNumberInput interface {
	pulumi.Input

	ToWeekNumberOutput() WeekNumberOutput
	ToWeekNumberOutputWithContext(context.Context) WeekNumberOutput
}

var weekNumberPtrType = reflect.TypeOf((**WeekNumber)(nil)).Elem()

type WeekNumberPtrInput interface {
	pulumi.Input

	ToWeekNumberPtrOutput() WeekNumberPtrOutput
	ToWeekNumberPtrOutputWithContext(context.Context) WeekNumberPtrOutput
}

type weekNumberPtr string

func WeekNumberPtr(v string) WeekNumberPtrInput {
	return (*weekNumberPtr)(&v)
}

func (*weekNumberPtr) ElementType() reflect.Type {
	return weekNumberPtrType
}

func (in *weekNumberPtr) ToWeekNumberPtrOutput() WeekNumberPtrOutput {
	return pulumi.ToOutput(in).(WeekNumberPtrOutput)
}

func (in *weekNumberPtr) ToWeekNumberPtrOutputWithContext(ctx context.Context) WeekNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeekNumberPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AbsoluteMarkerOutput{})
	pulumi.RegisterOutputType(AbsoluteMarkerPtrOutput{})
	pulumi.RegisterOutputType(DataStoreTypesOutput{})
	pulumi.RegisterOutputType(DataStoreTypesPtrOutput{})
	pulumi.RegisterOutputType(DayOfWeekOutput{})
	pulumi.RegisterOutputType(DayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(MonthOutput{})
	pulumi.RegisterOutputType(MonthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreTypePtrOutput{})
	pulumi.RegisterOutputType(StorageSettingStoreTypesOutput{})
	pulumi.RegisterOutputType(StorageSettingStoreTypesPtrOutput{})
	pulumi.RegisterOutputType(StorageSettingTypesOutput{})
	pulumi.RegisterOutputType(StorageSettingTypesPtrOutput{})
	pulumi.RegisterOutputType(WeekNumberOutput{})
	pulumi.RegisterOutputType(WeekNumberPtrOutput{})
}
