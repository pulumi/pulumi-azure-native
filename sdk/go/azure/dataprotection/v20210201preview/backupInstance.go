// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// BackupInstance Resource
type BackupInstance struct {
	pulumi.CustomResourceState

	// Specifies the current protection state of the resource
	CurrentProtectionState pulumi.StringOutput `pulumi:"currentProtectionState"`
	// Gets or sets the data source information.
	DataSourceInfo DatasourceResponseOutput `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo DatasourceSetResponsePtrOutput `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// Resource name associated with the resource.
	Name       pulumi.StringOutput `pulumi:"name"`
	ObjectType pulumi.StringOutput `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoResponseOutput `pulumi:"policyInfo"`
	// Specifies the protection error of the resource
	ProtectionErrorDetails UserFacingErrorResponseOutput `pulumi:"protectionErrorDetails"`
	// Specifies the protection status of the resource
	ProtectionStatus ProtectionStatusDetailsResponseOutput `pulumi:"protectionStatus"`
	// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBackupInstance registers a new resource with the given unique name, arguments, and options.
func NewBackupInstance(ctx *pulumi.Context,
	name string, args *BackupInstanceArgs, opts ...pulumi.ResourceOption) (*BackupInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataSourceInfo == nil {
		return nil, errors.New("invalid value for required argument 'DataSourceInfo'")
	}
	if args.FriendlyName == nil {
		return nil, errors.New("invalid value for required argument 'FriendlyName'")
	}
	if args.ObjectType == nil {
		return nil, errors.New("invalid value for required argument 'ObjectType'")
	}
	if args.PolicyInfo == nil {
		return nil, errors.New("invalid value for required argument 'PolicyInfo'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VaultName == nil {
		return nil, errors.New("invalid value for required argument 'VaultName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:dataprotection/v20210201preview:BackupInstance"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection:BackupInstance"),
		},
		{
			Type: pulumi.String("azure-nextgen:dataprotection:BackupInstance"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20210101:BackupInstance"),
		},
		{
			Type: pulumi.String("azure-nextgen:dataprotection/v20210101:BackupInstance"),
		},
	})
	opts = append(opts, aliases)
	var resource BackupInstance
	err := ctx.RegisterResource("azure-native:dataprotection/v20210201preview:BackupInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupInstance gets an existing BackupInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupInstanceState, opts ...pulumi.ResourceOption) (*BackupInstance, error) {
	var resource BackupInstance
	err := ctx.ReadResource("azure-native:dataprotection/v20210201preview:BackupInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupInstance resources.
type backupInstanceState struct {
	// Specifies the current protection state of the resource
	CurrentProtectionState *string `pulumi:"currentProtectionState"`
	// Gets or sets the data source information.
	DataSourceInfo *DatasourceResponse `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo *DatasourceSetResponse `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// Resource name associated with the resource.
	Name       *string `pulumi:"name"`
	ObjectType *string `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo *PolicyInfoResponse `pulumi:"policyInfo"`
	// Specifies the protection error of the resource
	ProtectionErrorDetails *UserFacingErrorResponse `pulumi:"protectionErrorDetails"`
	// Specifies the protection status of the resource
	ProtectionStatus *ProtectionStatusDetailsResponse `pulumi:"protectionStatus"`
	// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `pulumi:"type"`
}

type BackupInstanceState struct {
	// Specifies the current protection state of the resource
	CurrentProtectionState pulumi.StringPtrInput
	// Gets or sets the data source information.
	DataSourceInfo DatasourceResponsePtrInput
	// Gets or sets the data source set information.
	DataSourceSetInfo DatasourceSetResponsePtrInput
	// Gets or sets the Backup Instance friendly name.
	FriendlyName pulumi.StringPtrInput
	// Resource name associated with the resource.
	Name       pulumi.StringPtrInput
	ObjectType pulumi.StringPtrInput
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoResponsePtrInput
	// Specifies the protection error of the resource
	ProtectionErrorDetails UserFacingErrorResponsePtrInput
	// Specifies the protection status of the resource
	ProtectionStatus ProtectionStatusDetailsResponsePtrInput
	// Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
	ProvisioningState pulumi.StringPtrInput
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponsePtrInput
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type pulumi.StringPtrInput
}

func (BackupInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupInstanceState)(nil)).Elem()
}

type backupInstanceArgs struct {
	// The name of the backup instance
	BackupInstanceName *string `pulumi:"backupInstanceName"`
	// Gets or sets the data source information.
	DataSourceInfo Datasource `pulumi:"dataSourceInfo"`
	// Gets or sets the data source set information.
	DataSourceSetInfo *DatasourceSet `pulumi:"dataSourceSetInfo"`
	// Gets or sets the Backup Instance friendly name.
	FriendlyName string `pulumi:"friendlyName"`
	ObjectType   string `pulumi:"objectType"`
	// Gets or sets the policy information.
	PolicyInfo PolicyInfo `pulumi:"policyInfo"`
	// The name of the resource group where the backup vault is present.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the backup vault.
	VaultName string `pulumi:"vaultName"`
}

// The set of arguments for constructing a BackupInstance resource.
type BackupInstanceArgs struct {
	// The name of the backup instance
	BackupInstanceName pulumi.StringPtrInput
	// Gets or sets the data source information.
	DataSourceInfo DatasourceInput
	// Gets or sets the data source set information.
	DataSourceSetInfo DatasourceSetPtrInput
	// Gets or sets the Backup Instance friendly name.
	FriendlyName pulumi.StringInput
	ObjectType   pulumi.StringInput
	// Gets or sets the policy information.
	PolicyInfo PolicyInfoInput
	// The name of the resource group where the backup vault is present.
	ResourceGroupName pulumi.StringInput
	// The name of the backup vault.
	VaultName pulumi.StringInput
}

func (BackupInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupInstanceArgs)(nil)).Elem()
}

type BackupInstanceInput interface {
	pulumi.Input

	ToBackupInstanceOutput() BackupInstanceOutput
	ToBackupInstanceOutputWithContext(ctx context.Context) BackupInstanceOutput
}

func (*BackupInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstance)(nil))
}

func (i *BackupInstance) ToBackupInstanceOutput() BackupInstanceOutput {
	return i.ToBackupInstanceOutputWithContext(context.Background())
}

func (i *BackupInstance) ToBackupInstanceOutputWithContext(ctx context.Context) BackupInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceOutput)
}

type BackupInstanceOutput struct {
	*pulumi.OutputState
}

func (BackupInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstance)(nil))
}

func (o BackupInstanceOutput) ToBackupInstanceOutput() BackupInstanceOutput {
	return o
}

func (o BackupInstanceOutput) ToBackupInstanceOutputWithContext(ctx context.Context) BackupInstanceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BackupInstanceOutput{})
}
