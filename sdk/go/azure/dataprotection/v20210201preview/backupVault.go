// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Backup Vault Resource
type BackupVault struct {
	pulumi.CustomResourceState

	// Optional ETag.
	ETag pulumi.StringPtrOutput `pulumi:"eTag"`
	// Input Managed Identity Details
	Identity DppIdentityDetailsResponsePtrOutput `pulumi:"identity"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name associated with the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the BackupVault resource
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Storage Settings
	StorageSettings StorageSettingResponseArrayOutput `pulumi:"storageSettings"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBackupVault registers a new resource with the given unique name, arguments, and options.
func NewBackupVault(ctx *pulumi.Context,
	name string, args *BackupVaultArgs, opts ...pulumi.ResourceOption) (*BackupVault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageSettings == nil {
		return nil, errors.New("invalid value for required argument 'StorageSettings'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:dataprotection/v20210201preview:BackupVault"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection:BackupVault"),
		},
		{
			Type: pulumi.String("azure-nextgen:dataprotection:BackupVault"),
		},
		{
			Type: pulumi.String("azure-native:dataprotection/v20210101:BackupVault"),
		},
		{
			Type: pulumi.String("azure-nextgen:dataprotection/v20210101:BackupVault"),
		},
	})
	opts = append(opts, aliases)
	var resource BackupVault
	err := ctx.RegisterResource("azure-native:dataprotection/v20210201preview:BackupVault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupVault gets an existing BackupVault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupVaultState, opts ...pulumi.ResourceOption) (*BackupVault, error) {
	var resource BackupVault
	err := ctx.ReadResource("azure-native:dataprotection/v20210201preview:BackupVault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupVault resources.
type backupVaultState struct {
	// Optional ETag.
	ETag *string `pulumi:"eTag"`
	// Input Managed Identity Details
	Identity *DppIdentityDetailsResponse `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name associated with the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the BackupVault resource
	ProvisioningState *string `pulumi:"provisioningState"`
	// Storage Settings
	StorageSettings []StorageSettingResponse `pulumi:"storageSettings"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type *string `pulumi:"type"`
}

type BackupVaultState struct {
	// Optional ETag.
	ETag pulumi.StringPtrInput
	// Input Managed Identity Details
	Identity DppIdentityDetailsResponsePtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name associated with the resource.
	Name pulumi.StringPtrInput
	// Provisioning state of the BackupVault resource
	ProvisioningState pulumi.StringPtrInput
	// Storage Settings
	StorageSettings StorageSettingResponseArrayInput
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
	Type pulumi.StringPtrInput
}

func (BackupVaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupVaultState)(nil)).Elem()
}

type backupVaultArgs struct {
	// Optional ETag.
	ETag *string `pulumi:"eTag"`
	// Input Managed Identity Details
	Identity *DppIdentityDetails `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource group where the backup vault is present.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Storage Settings
	StorageSettings []StorageSetting `pulumi:"storageSettings"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The name of the backup vault.
	VaultName *string `pulumi:"vaultName"`
}

// The set of arguments for constructing a BackupVault resource.
type BackupVaultArgs struct {
	// Optional ETag.
	ETag pulumi.StringPtrInput
	// Input Managed Identity Details
	Identity DppIdentityDetailsPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the resource group where the backup vault is present.
	ResourceGroupName pulumi.StringInput
	// Storage Settings
	StorageSettings StorageSettingArrayInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The name of the backup vault.
	VaultName pulumi.StringPtrInput
}

func (BackupVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupVaultArgs)(nil)).Elem()
}

type BackupVaultInput interface {
	pulumi.Input

	ToBackupVaultOutput() BackupVaultOutput
	ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput
}

func (*BackupVault) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVault)(nil))
}

func (i *BackupVault) ToBackupVaultOutput() BackupVaultOutput {
	return i.ToBackupVaultOutputWithContext(context.Background())
}

func (i *BackupVault) ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultOutput)
}

type BackupVaultOutput struct {
	*pulumi.OutputState
}

func (BackupVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVault)(nil))
}

func (o BackupVaultOutput) ToBackupVaultOutput() BackupVaultOutput {
	return o
}

func (o BackupVaultOutput) ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BackupVaultOutput{})
}
