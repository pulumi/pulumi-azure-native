// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190701

// Type of storage accessed on the storage account.
type AccountType string

const (
	AccountTypeGeneralPurposeStorage = AccountType("GeneralPurposeStorage")
	AccountTypeBlobStorage           = AccountType("BlobStorage")
)

// Storage format used for the file represented by the share.
type AzureContainerDataFormat string

const (
	AzureContainerDataFormatBlockBlob = AzureContainerDataFormat("BlockBlob")
	AzureContainerDataFormatPageBlob  = AzureContainerDataFormat("PageBlob")
	AzureContainerDataFormatAzureFile = AzureContainerDataFormat("AzureFile")
)

// Type of access to be allowed for the client.
type ClientPermissionType string

const (
	ClientPermissionTypeNoAccess  = ClientPermissionType("NoAccess")
	ClientPermissionTypeReadOnly  = ClientPermissionType("ReadOnly")
	ClientPermissionTypeReadWrite = ClientPermissionType("ReadWrite")
)

// The status of the Data Box Edge/Gateway device.
type DataBoxEdgeDeviceStatus string

const (
	DataBoxEdgeDeviceStatusReadyToSetup          = DataBoxEdgeDeviceStatus("ReadyToSetup")
	DataBoxEdgeDeviceStatusOnline                = DataBoxEdgeDeviceStatus("Online")
	DataBoxEdgeDeviceStatusOffline               = DataBoxEdgeDeviceStatus("Offline")
	DataBoxEdgeDeviceStatusNeedsAttention        = DataBoxEdgeDeviceStatus("NeedsAttention")
	DataBoxEdgeDeviceStatusDisconnected          = DataBoxEdgeDeviceStatus("Disconnected")
	DataBoxEdgeDeviceStatusPartiallyDisconnected = DataBoxEdgeDeviceStatus("PartiallyDisconnected")
	DataBoxEdgeDeviceStatusMaintenance           = DataBoxEdgeDeviceStatus("Maintenance")
)

// Data policy of the share.
type DataPolicy string

const (
	DataPolicyCloud = DataPolicy("Cloud")
	DataPolicyLocal = DataPolicy("Local")
)

type DayOfWeek string

const (
	DayOfWeekSunday    = DayOfWeek("Sunday")
	DayOfWeekMonday    = DayOfWeek("Monday")
	DayOfWeekTuesday   = DayOfWeek("Tuesday")
	DayOfWeekWednesday = DayOfWeek("Wednesday")
	DayOfWeekThursday  = DayOfWeek("Thursday")
	DayOfWeekFriday    = DayOfWeek("Friday")
	DayOfWeekSaturday  = DayOfWeek("Saturday")
)

// The algorithm used to encrypt "Value".
type EncryptionAlgorithm string

const (
	EncryptionAlgorithmNone               = EncryptionAlgorithm("None")
	EncryptionAlgorithmAES256             = EncryptionAlgorithm("AES256")
	EncryptionAlgorithm_RSAES_PKCS1_v_1_5 = EncryptionAlgorithm("RSAES_PKCS1_v_1_5")
)

// Current monitoring status of the share.
type MonitoringStatus string

const (
	MonitoringStatusEnabled  = MonitoringStatus("Enabled")
	MonitoringStatusDisabled = MonitoringStatus("Disabled")
)

// Status of the order as per the allowed status types.
type OrderStateEnum string

const (
	OrderStateEnumUntracked              = OrderStateEnum("Untracked")
	OrderStateEnumAwaitingFulfilment     = OrderStateEnum("AwaitingFulfilment")
	OrderStateEnumAwaitingPreparation    = OrderStateEnum("AwaitingPreparation")
	OrderStateEnumAwaitingShipment       = OrderStateEnum("AwaitingShipment")
	OrderStateEnumShipped                = OrderStateEnum("Shipped")
	OrderStateEnumArriving               = OrderStateEnum("Arriving")
	OrderStateEnumDelivered              = OrderStateEnum("Delivered")
	OrderStateEnumReplacementRequested   = OrderStateEnum("ReplacementRequested")
	OrderStateEnumLostDevice             = OrderStateEnum("LostDevice")
	OrderStateEnumDeclined               = OrderStateEnum("Declined")
	OrderStateEnumReturnInitiated        = OrderStateEnum("ReturnInitiated")
	OrderStateEnumAwaitingReturnShipment = OrderStateEnum("AwaitingReturnShipment")
	OrderStateEnumShippedBack            = OrderStateEnum("ShippedBack")
	OrderStateEnumCollectedAtMicrosoft   = OrderStateEnum("CollectedAtMicrosoft")
)

// Host OS supported by the IoT role.
type PlatformType string

const (
	PlatformTypeWindows = PlatformType("Windows")
	PlatformTypeLinux   = PlatformType("Linux")
)

// Role status.
type RoleStatus string

const (
	RoleStatusEnabled  = RoleStatus("Enabled")
	RoleStatusDisabled = RoleStatus("Disabled")
)

// Role type.
type RoleTypes string

const (
	RoleTypesIOT       = RoleTypes("IOT")
	RoleTypesASA       = RoleTypes("ASA")
	RoleTypesFunctions = RoleTypes("Functions")
	RoleTypesCognitive = RoleTypes("Cognitive")
)

// Signifies whether SSL needs to be enabled or not.
type SSLStatus string

const (
	SSLStatusEnabled  = SSLStatus("Enabled")
	SSLStatusDisabled = SSLStatus("Disabled")
)

// Access protocol to be used by the share.
type ShareAccessProtocol string

const (
	ShareAccessProtocolSMB = ShareAccessProtocol("SMB")
	ShareAccessProtocolNFS = ShareAccessProtocol("NFS")
)

// Type of access to be allowed on the share for this user.
type ShareAccessType string

const (
	ShareAccessTypeChange = ShareAccessType("Change")
	ShareAccessTypeRead   = ShareAccessType("Read")
	ShareAccessTypeCustom = ShareAccessType("Custom")
)

// Current status of the share.
type ShareStatus string

const (
	ShareStatusOffline        = ShareStatus("Offline")
	ShareStatusUnknown        = ShareStatus("Unknown")
	ShareStatusOK             = ShareStatus("OK")
	ShareStatusUpdating       = ShareStatus("Updating")
	ShareStatusNeedsAttention = ShareStatus("NeedsAttention")
)

// SKU name.
type SkuName string

const (
	SkuNameGateway = SkuName("Gateway")
	SkuNameEdge    = SkuName("Edge")
)

// The SKU tier. This is based on the SKU name.
type SkuTier string

const (
	SkuTierStandard = SkuTier("Standard")
)

// Trigger Kind.
type TriggerEventType string

const (
	TriggerEventTypeFileEvent          = TriggerEventType("FileEvent")
	TriggerEventTypePeriodicTimerEvent = TriggerEventType("PeriodicTimerEvent")
)

func init() {
}
