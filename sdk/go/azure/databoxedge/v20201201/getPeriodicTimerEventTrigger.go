// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Trigger details.
func LookupPeriodicTimerEventTrigger(ctx *pulumi.Context, args *LookupPeriodicTimerEventTriggerArgs, opts ...pulumi.InvokeOption) (*LookupPeriodicTimerEventTriggerResult, error) {
	var rv LookupPeriodicTimerEventTriggerResult
	err := ctx.Invoke("azure-native:databoxedge/v20201201:getPeriodicTimerEventTrigger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPeriodicTimerEventTriggerArgs struct {
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// The trigger name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Trigger details.
type LookupPeriodicTimerEventTriggerResult struct {
	// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
	CustomContextTag *string `pulumi:"customContextTag"`
	// The path ID that uniquely identifies the object.
	Id string `pulumi:"id"`
	// Trigger Kind.
	// Expected value is 'PeriodicTimerEvent'.
	Kind string `pulumi:"kind"`
	// The object name.
	Name string `pulumi:"name"`
	// Role Sink information.
	SinkInfo RoleSinkInfoResponse `pulumi:"sinkInfo"`
	// Periodic timer details.
	SourceInfo PeriodicTimerSourceInfoResponse `pulumi:"sourceInfo"`
	// Trigger in DataBoxEdge Resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

func LookupPeriodicTimerEventTriggerOutput(ctx *pulumi.Context, args LookupPeriodicTimerEventTriggerOutputArgs, opts ...pulumi.InvokeOption) LookupPeriodicTimerEventTriggerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPeriodicTimerEventTriggerResult, error) {
			args := v.(LookupPeriodicTimerEventTriggerArgs)
			r, err := LookupPeriodicTimerEventTrigger(ctx, &args, opts...)
			var s LookupPeriodicTimerEventTriggerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPeriodicTimerEventTriggerResultOutput)
}

type LookupPeriodicTimerEventTriggerOutputArgs struct {
	// The device name.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The trigger name.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupPeriodicTimerEventTriggerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeriodicTimerEventTriggerArgs)(nil)).Elem()
}

// Trigger details.
type LookupPeriodicTimerEventTriggerResultOutput struct{ *pulumi.OutputState }

func (LookupPeriodicTimerEventTriggerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeriodicTimerEventTriggerResult)(nil)).Elem()
}

func (o LookupPeriodicTimerEventTriggerResultOutput) ToLookupPeriodicTimerEventTriggerResultOutput() LookupPeriodicTimerEventTriggerResultOutput {
	return o
}

func (o LookupPeriodicTimerEventTriggerResultOutput) ToLookupPeriodicTimerEventTriggerResultOutputWithContext(ctx context.Context) LookupPeriodicTimerEventTriggerResultOutput {
	return o
}

// A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.
func (o LookupPeriodicTimerEventTriggerResultOutput) CustomContextTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) *string { return v.CustomContextTag }).(pulumi.StringPtrOutput)
}

// The path ID that uniquely identifies the object.
func (o LookupPeriodicTimerEventTriggerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Trigger Kind.
// Expected value is 'PeriodicTimerEvent'.
func (o LookupPeriodicTimerEventTriggerResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The object name.
func (o LookupPeriodicTimerEventTriggerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Role Sink information.
func (o LookupPeriodicTimerEventTriggerResultOutput) SinkInfo() RoleSinkInfoResponseOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) RoleSinkInfoResponse { return v.SinkInfo }).(RoleSinkInfoResponseOutput)
}

// Periodic timer details.
func (o LookupPeriodicTimerEventTriggerResultOutput) SourceInfo() PeriodicTimerSourceInfoResponseOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) PeriodicTimerSourceInfoResponse { return v.SourceInfo }).(PeriodicTimerSourceInfoResponseOutput)
}

// Trigger in DataBoxEdge Resource
func (o LookupPeriodicTimerEventTriggerResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The hierarchical type of the object.
func (o LookupPeriodicTimerEventTriggerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeriodicTimerEventTriggerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeriodicTimerEventTriggerResultOutput{})
}
