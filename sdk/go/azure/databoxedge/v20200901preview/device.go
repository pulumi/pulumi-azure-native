// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The Data Box Edge/Gateway device.
type Device struct {
	pulumi.CustomResourceState

	// Type of compute roles configured.
	ConfiguredRoleTypes pulumi.StringArrayOutput `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture pulumi.StringOutput `pulumi:"culture"`
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrOutput `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description pulumi.StringOutput `pulumi:"description"`
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion pulumi.StringOutput `pulumi:"deviceHcsVersion"`
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity pulumi.Float64Output `pulumi:"deviceLocalCapacity"`
	// The Data Box Edge/Gateway device model.
	DeviceModel pulumi.StringOutput `pulumi:"deviceModel"`
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion pulumi.StringOutput `pulumi:"deviceSoftwareVersion"`
	// The type of the Data Box Edge/Gateway device.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// The details of Edge Profile for this resource
	EdgeProfile EdgeProfileResponseOutput `pulumi:"edgeProfile"`
	// The etag for the devices.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The Data Box Edge/Gateway device name.
	FriendlyName pulumi.StringOutput `pulumi:"friendlyName"`
	// Msi identity of the resource
	Identity ResourceIdentityResponsePtrOutput `pulumi:"identity"`
	// The etag for the devices.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringOutput `pulumi:"location"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription pulumi.StringOutput `pulumi:"modelDescription"`
	// The object name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of nodes in the cluster.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The details of the move operation on this resource.
	ResourceMoveDetails ResourceMoveDetailsResponseOutput `pulumi:"resourceMoveDetails"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// The SKU type.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// DataBoxEdge Resource
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The hierarchical type of the object.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDevice registers a new resource with the given unique name, arguments, and options.
func NewDevice(ctx *pulumi.Context,
	name string, args *DeviceArgs, opts ...pulumi.ResourceOption) (*Device, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeviceName == nil {
		return nil, errors.New("invalid value for required argument 'DeviceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:databoxedge/latest:Device"),
		},
		{
			Type: pulumi.String("azure-nextgen:databoxedge/v20190301:Device"),
		},
		{
			Type: pulumi.String("azure-nextgen:databoxedge/v20190701:Device"),
		},
		{
			Type: pulumi.String("azure-nextgen:databoxedge/v20190801:Device"),
		},
		{
			Type: pulumi.String("azure-nextgen:databoxedge/v20200501preview:Device"),
		},
		{
			Type: pulumi.String("azure-nextgen:databoxedge/v20200901:Device"),
		},
	})
	opts = append(opts, aliases)
	var resource Device
	err := ctx.RegisterResource("azure-nextgen:databoxedge/v20200901preview:Device", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevice gets an existing Device resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceState, opts ...pulumi.ResourceOption) (*Device, error) {
	var resource Device
	err := ctx.ReadResource("azure-nextgen:databoxedge/v20200901preview:Device", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Device resources.
type deviceState struct {
	// Type of compute roles configured.
	ConfiguredRoleTypes []string `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture *string `pulumi:"culture"`
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus *string `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description *string `pulumi:"description"`
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion *string `pulumi:"deviceHcsVersion"`
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity *float64 `pulumi:"deviceLocalCapacity"`
	// The Data Box Edge/Gateway device model.
	DeviceModel *string `pulumi:"deviceModel"`
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion *string `pulumi:"deviceSoftwareVersion"`
	// The type of the Data Box Edge/Gateway device.
	DeviceType *string `pulumi:"deviceType"`
	// The details of Edge Profile for this resource
	EdgeProfile *EdgeProfileResponse `pulumi:"edgeProfile"`
	// The etag for the devices.
	Etag *string `pulumi:"etag"`
	// The Data Box Edge/Gateway device name.
	FriendlyName *string `pulumi:"friendlyName"`
	// Msi identity of the resource
	Identity *ResourceIdentityResponse `pulumi:"identity"`
	// The etag for the devices.
	Kind *string `pulumi:"kind"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location *string `pulumi:"location"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription *string `pulumi:"modelDescription"`
	// The object name.
	Name *string `pulumi:"name"`
	// The number of nodes in the cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// The details of the move operation on this resource.
	ResourceMoveDetails *ResourceMoveDetailsResponse `pulumi:"resourceMoveDetails"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber *string `pulumi:"serialNumber"`
	// The SKU type.
	Sku *SkuResponse `pulumi:"sku"`
	// DataBoxEdge Resource
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags map[string]string `pulumi:"tags"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone *string `pulumi:"timeZone"`
	// The hierarchical type of the object.
	Type *string `pulumi:"type"`
}

type DeviceState struct {
	// Type of compute roles configured.
	ConfiguredRoleTypes pulumi.StringArrayInput
	// The Data Box Edge/Gateway device culture.
	Culture pulumi.StringPtrInput
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrInput
	// The Description of the Data Box Edge/Gateway device.
	Description pulumi.StringPtrInput
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion pulumi.StringPtrInput
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity pulumi.Float64PtrInput
	// The Data Box Edge/Gateway device model.
	DeviceModel pulumi.StringPtrInput
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion pulumi.StringPtrInput
	// The type of the Data Box Edge/Gateway device.
	DeviceType pulumi.StringPtrInput
	// The details of Edge Profile for this resource
	EdgeProfile EdgeProfileResponsePtrInput
	// The etag for the devices.
	Etag pulumi.StringPtrInput
	// The Data Box Edge/Gateway device name.
	FriendlyName pulumi.StringPtrInput
	// Msi identity of the resource
	Identity ResourceIdentityResponsePtrInput
	// The etag for the devices.
	Kind pulumi.StringPtrInput
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringPtrInput
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription pulumi.StringPtrInput
	// The object name.
	Name pulumi.StringPtrInput
	// The number of nodes in the cluster.
	NodeCount pulumi.IntPtrInput
	// The details of the move operation on this resource.
	ResourceMoveDetails ResourceMoveDetailsResponsePtrInput
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber pulumi.StringPtrInput
	// The SKU type.
	Sku SkuResponsePtrInput
	// DataBoxEdge Resource
	SystemData SystemDataResponsePtrInput
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapInput
	// The Data Box Edge/Gateway device timezone.
	TimeZone pulumi.StringPtrInput
	// The hierarchical type of the object.
	Type pulumi.StringPtrInput
}

func (DeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceState)(nil)).Elem()
}

type deviceArgs struct {
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus *string `pulumi:"dataBoxEdgeDeviceStatus"`
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// The etag for the devices.
	Etag *string `pulumi:"etag"`
	// Msi identity of the resource
	Identity *ResourceIdentity `pulumi:"identity"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location *string `pulumi:"location"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU type.
	Sku *Sku `pulumi:"sku"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Device resource.
type DeviceArgs struct {
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrInput
	// The device name.
	DeviceName pulumi.StringInput
	// The etag for the devices.
	Etag pulumi.StringPtrInput
	// Msi identity of the resource
	Identity ResourceIdentityPtrInput
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The SKU type.
	Sku SkuPtrInput
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapInput
}

func (DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceArgs)(nil)).Elem()
}

type DeviceInput interface {
	pulumi.Input

	ToDeviceOutput() DeviceOutput
	ToDeviceOutputWithContext(ctx context.Context) DeviceOutput
}

func (*Device) ElementType() reflect.Type {
	return reflect.TypeOf((*Device)(nil))
}

func (i *Device) ToDeviceOutput() DeviceOutput {
	return i.ToDeviceOutputWithContext(context.Background())
}

func (i *Device) ToDeviceOutputWithContext(ctx context.Context) DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceOutput)
}

type DeviceOutput struct {
	*pulumi.OutputState
}

func (DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Device)(nil))
}

func (o DeviceOutput) ToDeviceOutput() DeviceOutput {
	return o
}

func (o DeviceOutput) ToDeviceOutputWithContext(ctx context.Context) DeviceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DeviceOutput{})
}
