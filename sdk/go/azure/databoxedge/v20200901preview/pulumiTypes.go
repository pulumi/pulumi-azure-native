// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The shipping address of the customer.
type Address struct {
	// The address line1.
	AddressLine1 *string `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city name.
	City *string `pulumi:"city"`
	// The country name.
	Country string `pulumi:"country"`
	// The postal code.
	PostalCode *string `pulumi:"postalCode"`
	// The state name.
	State *string `pulumi:"state"`
}

// AddressInput is an input type that accepts AddressArgs and AddressOutput values.
// You can construct a concrete instance of `AddressInput` via:
//
//          AddressArgs{...}
type AddressInput interface {
	pulumi.Input

	ToAddressOutput() AddressOutput
	ToAddressOutputWithContext(context.Context) AddressOutput
}

// The shipping address of the customer.
type AddressArgs struct {
	// The address line1.
	AddressLine1 pulumi.StringPtrInput `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 pulumi.StringPtrInput `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 pulumi.StringPtrInput `pulumi:"addressLine3"`
	// The city name.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country name.
	Country pulumi.StringInput `pulumi:"country"`
	// The postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The state name.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Address)(nil)).Elem()
}

func (i AddressArgs) ToAddressOutput() AddressOutput {
	return i.ToAddressOutputWithContext(context.Background())
}

func (i AddressArgs) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressOutput)
}

func (i AddressArgs) ToAddressPtrOutput() AddressPtrOutput {
	return i.ToAddressPtrOutputWithContext(context.Background())
}

func (i AddressArgs) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressOutput).ToAddressPtrOutputWithContext(ctx)
}

// AddressPtrInput is an input type that accepts AddressArgs, AddressPtr and AddressPtrOutput values.
// You can construct a concrete instance of `AddressPtrInput` via:
//
//          AddressArgs{...}
//
//  or:
//
//          nil
type AddressPtrInput interface {
	pulumi.Input

	ToAddressPtrOutput() AddressPtrOutput
	ToAddressPtrOutputWithContext(context.Context) AddressPtrOutput
}

type addressPtrType AddressArgs

func AddressPtr(v *AddressArgs) AddressPtrInput {
	return (*addressPtrType)(v)
}

func (*addressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (i *addressPtrType) ToAddressPtrOutput() AddressPtrOutput {
	return i.ToAddressPtrOutputWithContext(context.Background())
}

func (i *addressPtrType) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPtrOutput)
}

// The shipping address of the customer.
type AddressOutput struct{ *pulumi.OutputState }

func (AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Address)(nil)).Elem()
}

func (o AddressOutput) ToAddressOutput() AddressOutput {
	return o
}

func (o AddressOutput) ToAddressOutputWithContext(ctx context.Context) AddressOutput {
	return o
}

func (o AddressOutput) ToAddressPtrOutput() AddressPtrOutput {
	return o.ToAddressPtrOutputWithContext(context.Background())
}

func (o AddressOutput) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return o.ApplyT(func(v Address) *Address {
		return &v
	}).(AddressPtrOutput)
}

// The address line1.
func (o AddressOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.AddressLine1 }).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.AddressLine3 }).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v Address) string { return v.Country }).(pulumi.StringOutput)
}

// The postal code.
func (o AddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Address) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AddressPtrOutput struct{ *pulumi.OutputState }

func (AddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Address)(nil)).Elem()
}

func (o AddressPtrOutput) ToAddressPtrOutput() AddressPtrOutput {
	return o
}

func (o AddressPtrOutput) ToAddressPtrOutputWithContext(ctx context.Context) AddressPtrOutput {
	return o
}

func (o AddressPtrOutput) Elem() AddressOutput {
	return o.ApplyT(func(v *Address) Address { return *v }).(AddressOutput)
}

// The address line1.
func (o AddressPtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressPtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressPtrOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine3
	}).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// The postal code.
func (o AddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Address) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The shipping address of the customer.
type AddressResponse struct {
	// The address line1.
	AddressLine1 *string `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city name.
	City *string `pulumi:"city"`
	// The country name.
	Country string `pulumi:"country"`
	// The postal code.
	PostalCode *string `pulumi:"postalCode"`
	// The state name.
	State *string `pulumi:"state"`
}

// AddressResponseInput is an input type that accepts AddressResponseArgs and AddressResponseOutput values.
// You can construct a concrete instance of `AddressResponseInput` via:
//
//          AddressResponseArgs{...}
type AddressResponseInput interface {
	pulumi.Input

	ToAddressResponseOutput() AddressResponseOutput
	ToAddressResponseOutputWithContext(context.Context) AddressResponseOutput
}

// The shipping address of the customer.
type AddressResponseArgs struct {
	// The address line1.
	AddressLine1 pulumi.StringPtrInput `pulumi:"addressLine1"`
	// The address line2.
	AddressLine2 pulumi.StringPtrInput `pulumi:"addressLine2"`
	// The address line3.
	AddressLine3 pulumi.StringPtrInput `pulumi:"addressLine3"`
	// The city name.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country name.
	Country pulumi.StringInput `pulumi:"country"`
	// The postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The state name.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (AddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressResponse)(nil)).Elem()
}

func (i AddressResponseArgs) ToAddressResponseOutput() AddressResponseOutput {
	return i.ToAddressResponseOutputWithContext(context.Background())
}

func (i AddressResponseArgs) ToAddressResponseOutputWithContext(ctx context.Context) AddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponseOutput)
}

func (i AddressResponseArgs) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return i.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (i AddressResponseArgs) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponseOutput).ToAddressResponsePtrOutputWithContext(ctx)
}

// AddressResponsePtrInput is an input type that accepts AddressResponseArgs, AddressResponsePtr and AddressResponsePtrOutput values.
// You can construct a concrete instance of `AddressResponsePtrInput` via:
//
//          AddressResponseArgs{...}
//
//  or:
//
//          nil
type AddressResponsePtrInput interface {
	pulumi.Input

	ToAddressResponsePtrOutput() AddressResponsePtrOutput
	ToAddressResponsePtrOutputWithContext(context.Context) AddressResponsePtrOutput
}

type addressResponsePtrType AddressResponseArgs

func AddressResponsePtr(v *AddressResponseArgs) AddressResponsePtrInput {
	return (*addressResponsePtrType)(v)
}

func (*addressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressResponse)(nil)).Elem()
}

func (i *addressResponsePtrType) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return i.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (i *addressResponsePtrType) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressResponsePtrOutput)
}

// The shipping address of the customer.
type AddressResponseOutput struct{ *pulumi.OutputState }

func (AddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressResponse)(nil)).Elem()
}

func (o AddressResponseOutput) ToAddressResponseOutput() AddressResponseOutput {
	return o
}

func (o AddressResponseOutput) ToAddressResponseOutputWithContext(ctx context.Context) AddressResponseOutput {
	return o
}

func (o AddressResponseOutput) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return o.ToAddressResponsePtrOutputWithContext(context.Background())
}

func (o AddressResponseOutput) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return o.ApplyT(func(v AddressResponse) *AddressResponse {
		return &v
	}).(AddressResponsePtrOutput)
}

// The address line1.
func (o AddressResponseOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.AddressLine1 }).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressResponseOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressResponseOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.AddressLine3 }).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v AddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// The postal code.
func (o AddressResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type AddressResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressResponse)(nil)).Elem()
}

func (o AddressResponsePtrOutput) ToAddressResponsePtrOutput() AddressResponsePtrOutput {
	return o
}

func (o AddressResponsePtrOutput) ToAddressResponsePtrOutputWithContext(ctx context.Context) AddressResponsePtrOutput {
	return o
}

func (o AddressResponsePtrOutput) Elem() AddressResponseOutput {
	return o.ApplyT(func(v *AddressResponse) AddressResponse { return *v }).(AddressResponseOutput)
}

// The address line1.
func (o AddressResponsePtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

// The address line2.
func (o AddressResponsePtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

// The address line3.
func (o AddressResponsePtrOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine3
	}).(pulumi.StringPtrOutput)
}

// The city name.
func (o AddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country name.
func (o AddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// The postal code.
func (o AddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The state name.
func (o AddressResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//          AsymmetricEncryptedSecretArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret { return *v }).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretResponseInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs and AsymmetricEncryptedSecretResponseOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponseInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
type AsymmetricEncryptedSecretResponseInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput
	ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Context) AsymmetricEncryptedSecretResponseOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return i.ToAsymmetricEncryptedSecretResponseOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput)
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretResponseArgs) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponseOutput).ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretResponsePtrInput is an input type that accepts AsymmetricEncryptedSecretResponseArgs, AsymmetricEncryptedSecretResponsePtr and AsymmetricEncryptedSecretResponsePtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretResponsePtrInput` via:
//
//          AsymmetricEncryptedSecretResponseArgs{...}
//
//  or:
//
//          nil
type AsymmetricEncryptedSecretResponsePtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput
	ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Context) AsymmetricEncryptedSecretResponsePtrOutput
}

type asymmetricEncryptedSecretResponsePtrType AsymmetricEncryptedSecretResponseArgs

func AsymmetricEncryptedSecretResponsePtr(v *AsymmetricEncryptedSecretResponseArgs) AsymmetricEncryptedSecretResponsePtrInput {
	return (*asymmetricEncryptedSecretResponsePtrType)(v)
}

func (*asymmetricEncryptedSecretResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return i.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretResponsePtrType) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *AsymmetricEncryptedSecretResponse {
		return &v
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse { return *v }).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfo struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName string `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat string `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
}

// AzureContainerInfoInput is an input type that accepts AzureContainerInfoArgs and AzureContainerInfoOutput values.
// You can construct a concrete instance of `AzureContainerInfoInput` via:
//
//          AzureContainerInfoArgs{...}
type AzureContainerInfoInput interface {
	pulumi.Input

	ToAzureContainerInfoOutput() AzureContainerInfoOutput
	ToAzureContainerInfoOutputWithContext(context.Context) AzureContainerInfoOutput
}

// Azure container mapping of the endpoint.
type AzureContainerInfoArgs struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
}

func (AzureContainerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfo)(nil)).Elem()
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoOutput() AzureContainerInfoOutput {
	return i.ToAzureContainerInfoOutputWithContext(context.Background())
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoOutputWithContext(ctx context.Context) AzureContainerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoOutput)
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return i.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (i AzureContainerInfoArgs) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoOutput).ToAzureContainerInfoPtrOutputWithContext(ctx)
}

// AzureContainerInfoPtrInput is an input type that accepts AzureContainerInfoArgs, AzureContainerInfoPtr and AzureContainerInfoPtrOutput values.
// You can construct a concrete instance of `AzureContainerInfoPtrInput` via:
//
//          AzureContainerInfoArgs{...}
//
//  or:
//
//          nil
type AzureContainerInfoPtrInput interface {
	pulumi.Input

	ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput
	ToAzureContainerInfoPtrOutputWithContext(context.Context) AzureContainerInfoPtrOutput
}

type azureContainerInfoPtrType AzureContainerInfoArgs

func AzureContainerInfoPtr(v *AzureContainerInfoArgs) AzureContainerInfoPtrInput {
	return (*azureContainerInfoPtrType)(v)
}

func (*azureContainerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfo)(nil)).Elem()
}

func (i *azureContainerInfoPtrType) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return i.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (i *azureContainerInfoPtrType) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfo)(nil)).Elem()
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoOutput() AzureContainerInfoOutput {
	return o
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoOutputWithContext(ctx context.Context) AzureContainerInfoOutput {
	return o
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return o.ToAzureContainerInfoPtrOutputWithContext(context.Background())
}

func (o AzureContainerInfoOutput) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return o.ApplyT(func(v AzureContainerInfo) *AzureContainerInfo {
		return &v
	}).(AzureContainerInfoPtrOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.DataFormat }).(pulumi.StringOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfo) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

type AzureContainerInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfo)(nil)).Elem()
}

func (o AzureContainerInfoPtrOutput) ToAzureContainerInfoPtrOutput() AzureContainerInfoPtrOutput {
	return o
}

func (o AzureContainerInfoPtrOutput) ToAzureContainerInfoPtrOutputWithContext(ctx context.Context) AzureContainerInfoPtrOutput {
	return o
}

func (o AzureContainerInfoPtrOutput) Elem() AzureContainerInfoOutput {
	return o.ApplyT(func(v *AzureContainerInfo) AzureContainerInfo { return *v }).(AzureContainerInfoOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoPtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfo) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponse struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName string `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat string `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId string `pulumi:"storageAccountCredentialId"`
}

// AzureContainerInfoResponseInput is an input type that accepts AzureContainerInfoResponseArgs and AzureContainerInfoResponseOutput values.
// You can construct a concrete instance of `AzureContainerInfoResponseInput` via:
//
//          AzureContainerInfoResponseArgs{...}
type AzureContainerInfoResponseInput interface {
	pulumi.Input

	ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput
	ToAzureContainerInfoResponseOutputWithContext(context.Context) AzureContainerInfoResponseOutput
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponseArgs struct {
	// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Storage format used for the file represented by the share.
	DataFormat pulumi.StringInput `pulumi:"dataFormat"`
	// ID of the storage account credential used to access storage.
	StorageAccountCredentialId pulumi.StringInput `pulumi:"storageAccountCredentialId"`
}

func (AzureContainerInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfoResponse)(nil)).Elem()
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput {
	return i.ToAzureContainerInfoResponseOutputWithContext(context.Background())
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponseOutputWithContext(ctx context.Context) AzureContainerInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponseOutput)
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return i.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (i AzureContainerInfoResponseArgs) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponseOutput).ToAzureContainerInfoResponsePtrOutputWithContext(ctx)
}

// AzureContainerInfoResponsePtrInput is an input type that accepts AzureContainerInfoResponseArgs, AzureContainerInfoResponsePtr and AzureContainerInfoResponsePtrOutput values.
// You can construct a concrete instance of `AzureContainerInfoResponsePtrInput` via:
//
//          AzureContainerInfoResponseArgs{...}
//
//  or:
//
//          nil
type AzureContainerInfoResponsePtrInput interface {
	pulumi.Input

	ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput
	ToAzureContainerInfoResponsePtrOutputWithContext(context.Context) AzureContainerInfoResponsePtrOutput
}

type azureContainerInfoResponsePtrType AzureContainerInfoResponseArgs

func AzureContainerInfoResponsePtr(v *AzureContainerInfoResponseArgs) AzureContainerInfoResponsePtrInput {
	return (*azureContainerInfoResponsePtrType)(v)
}

func (*azureContainerInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfoResponse)(nil)).Elem()
}

func (i *azureContainerInfoResponsePtrType) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return i.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (i *azureContainerInfoResponsePtrType) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureContainerInfoResponsePtrOutput)
}

// Azure container mapping of the endpoint.
type AzureContainerInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureContainerInfoResponse)(nil)).Elem()
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponseOutput() AzureContainerInfoResponseOutput {
	return o
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponseOutputWithContext(ctx context.Context) AzureContainerInfoResponseOutput {
	return o
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return o.ToAzureContainerInfoResponsePtrOutputWithContext(context.Background())
}

func (o AzureContainerInfoResponseOutput) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) *AzureContainerInfoResponse {
		return &v
	}).(AzureContainerInfoResponsePtrOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoResponseOutput) DataFormat() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.DataFormat }).(pulumi.StringOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoResponseOutput) StorageAccountCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureContainerInfoResponse) string { return v.StorageAccountCredentialId }).(pulumi.StringOutput)
}

type AzureContainerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureContainerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureContainerInfoResponse)(nil)).Elem()
}

func (o AzureContainerInfoResponsePtrOutput) ToAzureContainerInfoResponsePtrOutput() AzureContainerInfoResponsePtrOutput {
	return o
}

func (o AzureContainerInfoResponsePtrOutput) ToAzureContainerInfoResponsePtrOutputWithContext(ctx context.Context) AzureContainerInfoResponsePtrOutput {
	return o
}

func (o AzureContainerInfoResponsePtrOutput) Elem() AzureContainerInfoResponseOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) AzureContainerInfoResponse { return *v }).(AzureContainerInfoResponseOutput)
}

// Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).
func (o AzureContainerInfoResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Storage format used for the file represented by the share.
func (o AzureContainerInfoResponsePtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// ID of the storage account credential used to access storage.
func (o AzureContainerInfoResponsePtrOutput) StorageAccountCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureContainerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountCredentialId
	}).(pulumi.StringPtrOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRight struct {
	// Type of access to be allowed for the client.
	AccessPermission string `pulumi:"accessPermission"`
	// IP of the client.
	Client string `pulumi:"client"`
}

// ClientAccessRightInput is an input type that accepts ClientAccessRightArgs and ClientAccessRightOutput values.
// You can construct a concrete instance of `ClientAccessRightInput` via:
//
//          ClientAccessRightArgs{...}
type ClientAccessRightInput interface {
	pulumi.Input

	ToClientAccessRightOutput() ClientAccessRightOutput
	ToClientAccessRightOutputWithContext(context.Context) ClientAccessRightOutput
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightArgs struct {
	// Type of access to be allowed for the client.
	AccessPermission pulumi.StringInput `pulumi:"accessPermission"`
	// IP of the client.
	Client pulumi.StringInput `pulumi:"client"`
}

func (ClientAccessRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRight)(nil)).Elem()
}

func (i ClientAccessRightArgs) ToClientAccessRightOutput() ClientAccessRightOutput {
	return i.ToClientAccessRightOutputWithContext(context.Background())
}

func (i ClientAccessRightArgs) ToClientAccessRightOutputWithContext(ctx context.Context) ClientAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightOutput)
}

// ClientAccessRightArrayInput is an input type that accepts ClientAccessRightArray and ClientAccessRightArrayOutput values.
// You can construct a concrete instance of `ClientAccessRightArrayInput` via:
//
//          ClientAccessRightArray{ ClientAccessRightArgs{...} }
type ClientAccessRightArrayInput interface {
	pulumi.Input

	ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput
	ToClientAccessRightArrayOutputWithContext(context.Context) ClientAccessRightArrayOutput
}

type ClientAccessRightArray []ClientAccessRightInput

func (ClientAccessRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRight)(nil)).Elem()
}

func (i ClientAccessRightArray) ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput {
	return i.ToClientAccessRightArrayOutputWithContext(context.Background())
}

func (i ClientAccessRightArray) ToClientAccessRightArrayOutputWithContext(ctx context.Context) ClientAccessRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightArrayOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightOutput struct{ *pulumi.OutputState }

func (ClientAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRight)(nil)).Elem()
}

func (o ClientAccessRightOutput) ToClientAccessRightOutput() ClientAccessRightOutput {
	return o
}

func (o ClientAccessRightOutput) ToClientAccessRightOutputWithContext(ctx context.Context) ClientAccessRightOutput {
	return o
}

// Type of access to be allowed for the client.
func (o ClientAccessRightOutput) AccessPermission() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRight) string { return v.AccessPermission }).(pulumi.StringOutput)
}

// IP of the client.
func (o ClientAccessRightOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRight) string { return v.Client }).(pulumi.StringOutput)
}

type ClientAccessRightArrayOutput struct{ *pulumi.OutputState }

func (ClientAccessRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRight)(nil)).Elem()
}

func (o ClientAccessRightArrayOutput) ToClientAccessRightArrayOutput() ClientAccessRightArrayOutput {
	return o
}

func (o ClientAccessRightArrayOutput) ToClientAccessRightArrayOutputWithContext(ctx context.Context) ClientAccessRightArrayOutput {
	return o
}

func (o ClientAccessRightArrayOutput) Index(i pulumi.IntInput) ClientAccessRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientAccessRight {
		return vs[0].([]ClientAccessRight)[vs[1].(int)]
	}).(ClientAccessRightOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponse struct {
	// Type of access to be allowed for the client.
	AccessPermission string `pulumi:"accessPermission"`
	// IP of the client.
	Client string `pulumi:"client"`
}

// ClientAccessRightResponseInput is an input type that accepts ClientAccessRightResponseArgs and ClientAccessRightResponseOutput values.
// You can construct a concrete instance of `ClientAccessRightResponseInput` via:
//
//          ClientAccessRightResponseArgs{...}
type ClientAccessRightResponseInput interface {
	pulumi.Input

	ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput
	ToClientAccessRightResponseOutputWithContext(context.Context) ClientAccessRightResponseOutput
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponseArgs struct {
	// Type of access to be allowed for the client.
	AccessPermission pulumi.StringInput `pulumi:"accessPermission"`
	// IP of the client.
	Client pulumi.StringInput `pulumi:"client"`
}

func (ClientAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRightResponse)(nil)).Elem()
}

func (i ClientAccessRightResponseArgs) ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput {
	return i.ToClientAccessRightResponseOutputWithContext(context.Background())
}

func (i ClientAccessRightResponseArgs) ToClientAccessRightResponseOutputWithContext(ctx context.Context) ClientAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightResponseOutput)
}

// ClientAccessRightResponseArrayInput is an input type that accepts ClientAccessRightResponseArray and ClientAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `ClientAccessRightResponseArrayInput` via:
//
//          ClientAccessRightResponseArray{ ClientAccessRightResponseArgs{...} }
type ClientAccessRightResponseArrayInput interface {
	pulumi.Input

	ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput
	ToClientAccessRightResponseArrayOutputWithContext(context.Context) ClientAccessRightResponseArrayOutput
}

type ClientAccessRightResponseArray []ClientAccessRightResponseInput

func (ClientAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRightResponse)(nil)).Elem()
}

func (i ClientAccessRightResponseArray) ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput {
	return i.ToClientAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i ClientAccessRightResponseArray) ToClientAccessRightResponseArrayOutputWithContext(ctx context.Context) ClientAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAccessRightResponseArrayOutput)
}

// The mapping between a particular client IP and the type of access client has on the NFS share.
type ClientAccessRightResponseOutput struct{ *pulumi.OutputState }

func (ClientAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAccessRightResponse)(nil)).Elem()
}

func (o ClientAccessRightResponseOutput) ToClientAccessRightResponseOutput() ClientAccessRightResponseOutput {
	return o
}

func (o ClientAccessRightResponseOutput) ToClientAccessRightResponseOutputWithContext(ctx context.Context) ClientAccessRightResponseOutput {
	return o
}

// Type of access to be allowed for the client.
func (o ClientAccessRightResponseOutput) AccessPermission() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRightResponse) string { return v.AccessPermission }).(pulumi.StringOutput)
}

// IP of the client.
func (o ClientAccessRightResponseOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAccessRightResponse) string { return v.Client }).(pulumi.StringOutput)
}

type ClientAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (ClientAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientAccessRightResponse)(nil)).Elem()
}

func (o ClientAccessRightResponseArrayOutput) ToClientAccessRightResponseArrayOutput() ClientAccessRightResponseArrayOutput {
	return o
}

func (o ClientAccessRightResponseArrayOutput) ToClientAccessRightResponseArrayOutputWithContext(ctx context.Context) ClientAccessRightResponseArrayOutput {
	return o
}

func (o ClientAccessRightResponseArrayOutput) Index(i pulumi.IntInput) ClientAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientAccessRightResponse {
		return vs[0].([]ClientAccessRightResponse)[vs[1].(int)]
	}).(ClientAccessRightResponseOutput)
}

// Contains all the contact details of the customer.
type ContactDetails struct {
	// The name of the company.
	CompanyName string `pulumi:"companyName"`
	// The contact person name.
	ContactPerson string `pulumi:"contactPerson"`
	// The email list.
	EmailList []string `pulumi:"emailList"`
	// The phone number.
	Phone string `pulumi:"phone"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//          ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contains all the contact details of the customer.
type ContactDetailsArgs struct {
	// The name of the company.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// The contact person name.
	ContactPerson pulumi.StringInput `pulumi:"contactPerson"`
	// The email list.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// The phone number.
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput).ToContactDetailsPtrOutputWithContext(ctx)
}

// ContactDetailsPtrInput is an input type that accepts ContactDetailsArgs, ContactDetailsPtr and ContactDetailsPtrOutput values.
// You can construct a concrete instance of `ContactDetailsPtrInput` via:
//
//          ContactDetailsArgs{...}
//
//  or:
//
//          nil
type ContactDetailsPtrInput interface {
	pulumi.Input

	ToContactDetailsPtrOutput() ContactDetailsPtrOutput
	ToContactDetailsPtrOutputWithContext(context.Context) ContactDetailsPtrOutput
}

type contactDetailsPtrType ContactDetailsArgs

func ContactDetailsPtr(v *ContactDetailsArgs) ContactDetailsPtrInput {
	return (*contactDetailsPtrType)(v)
}

func (*contactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsPtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o.ApplyT(func(v ContactDetails) *ContactDetails {
		return &v
	}).(ContactDetailsPtrOutput)
}

// The name of the company.
func (o ContactDetailsOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.CompanyName }).(pulumi.StringOutput)
}

// The contact person name.
func (o ContactDetailsOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// The email list.
func (o ContactDetailsOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetails) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.Phone }).(pulumi.StringOutput)
}

type ContactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) Elem() ContactDetailsOutput {
	return o.ApplyT(func(v *ContactDetails) ContactDetails { return *v }).(ContactDetailsOutput)
}

// The name of the company.
func (o ContactDetailsPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// The contact person name.
func (o ContactDetailsPtrOutput) ContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ContactPerson
	}).(pulumi.StringPtrOutput)
}

// The email list.
func (o ContactDetailsPtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetails) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsResponse struct {
	// The name of the company.
	CompanyName string `pulumi:"companyName"`
	// The contact person name.
	ContactPerson string `pulumi:"contactPerson"`
	// The email list.
	EmailList []string `pulumi:"emailList"`
	// The phone number.
	Phone string `pulumi:"phone"`
}

// ContactDetailsResponseInput is an input type that accepts ContactDetailsResponseArgs and ContactDetailsResponseOutput values.
// You can construct a concrete instance of `ContactDetailsResponseInput` via:
//
//          ContactDetailsResponseArgs{...}
type ContactDetailsResponseInput interface {
	pulumi.Input

	ToContactDetailsResponseOutput() ContactDetailsResponseOutput
	ToContactDetailsResponseOutputWithContext(context.Context) ContactDetailsResponseOutput
}

// Contains all the contact details of the customer.
type ContactDetailsResponseArgs struct {
	// The name of the company.
	CompanyName pulumi.StringInput `pulumi:"companyName"`
	// The contact person name.
	ContactPerson pulumi.StringInput `pulumi:"contactPerson"`
	// The email list.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// The phone number.
	Phone pulumi.StringInput `pulumi:"phone"`
}

func (ContactDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return i.ToContactDetailsResponseOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput)
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput).ToContactDetailsResponsePtrOutputWithContext(ctx)
}

// ContactDetailsResponsePtrInput is an input type that accepts ContactDetailsResponseArgs, ContactDetailsResponsePtr and ContactDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ContactDetailsResponsePtrInput` via:
//
//          ContactDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ContactDetailsResponsePtrInput interface {
	pulumi.Input

	ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput
	ToContactDetailsResponsePtrOutputWithContext(context.Context) ContactDetailsResponsePtrOutput
}

type contactDetailsResponsePtrType ContactDetailsResponseArgs

func ContactDetailsResponsePtr(v *ContactDetailsResponseArgs) ContactDetailsResponsePtrInput {
	return (*contactDetailsResponsePtrType)(v)
}

func (*contactDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponsePtrOutput)
}

// Contains all the contact details of the customer.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *ContactDetailsResponse {
		return &v
	}).(ContactDetailsResponsePtrOutput)
}

// The name of the company.
func (o ContactDetailsResponseOutput) CompanyName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.CompanyName }).(pulumi.StringOutput)
}

// The contact person name.
func (o ContactDetailsResponseOutput) ContactPerson() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactPerson }).(pulumi.StringOutput)
}

// The email list.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

type ContactDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) Elem() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) ContactDetailsResponse { return *v }).(ContactDetailsResponseOutput)
}

// The name of the company.
func (o ContactDetailsResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// The contact person name.
func (o ContactDetailsResponsePtrOutput) ContactPerson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactPerson
	}).(pulumi.StringPtrOutput)
}

// The email list.
func (o ContactDetailsResponsePtrOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.EmailList
	}).(pulumi.StringArrayOutput)
}

// The phone number.
func (o ContactDetailsResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Details about Edge Profile for the resource
type EdgeProfile struct {
	// Edge Profile Subscription
	Subscription *EdgeProfileSubscription `pulumi:"subscription"`
}

// EdgeProfileInput is an input type that accepts EdgeProfileArgs and EdgeProfileOutput values.
// You can construct a concrete instance of `EdgeProfileInput` via:
//
//          EdgeProfileArgs{...}
type EdgeProfileInput interface {
	pulumi.Input

	ToEdgeProfileOutput() EdgeProfileOutput
	ToEdgeProfileOutputWithContext(context.Context) EdgeProfileOutput
}

// Details about Edge Profile for the resource
type EdgeProfileArgs struct {
	// Edge Profile Subscription
	Subscription EdgeProfileSubscriptionPtrInput `pulumi:"subscription"`
}

func (EdgeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfile)(nil)).Elem()
}

func (i EdgeProfileArgs) ToEdgeProfileOutput() EdgeProfileOutput {
	return i.ToEdgeProfileOutputWithContext(context.Background())
}

func (i EdgeProfileArgs) ToEdgeProfileOutputWithContext(ctx context.Context) EdgeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileOutput)
}

func (i EdgeProfileArgs) ToEdgeProfilePtrOutput() EdgeProfilePtrOutput {
	return i.ToEdgeProfilePtrOutputWithContext(context.Background())
}

func (i EdgeProfileArgs) ToEdgeProfilePtrOutputWithContext(ctx context.Context) EdgeProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileOutput).ToEdgeProfilePtrOutputWithContext(ctx)
}

// EdgeProfilePtrInput is an input type that accepts EdgeProfileArgs, EdgeProfilePtr and EdgeProfilePtrOutput values.
// You can construct a concrete instance of `EdgeProfilePtrInput` via:
//
//          EdgeProfileArgs{...}
//
//  or:
//
//          nil
type EdgeProfilePtrInput interface {
	pulumi.Input

	ToEdgeProfilePtrOutput() EdgeProfilePtrOutput
	ToEdgeProfilePtrOutputWithContext(context.Context) EdgeProfilePtrOutput
}

type edgeProfilePtrType EdgeProfileArgs

func EdgeProfilePtr(v *EdgeProfileArgs) EdgeProfilePtrInput {
	return (*edgeProfilePtrType)(v)
}

func (*edgeProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfile)(nil)).Elem()
}

func (i *edgeProfilePtrType) ToEdgeProfilePtrOutput() EdgeProfilePtrOutput {
	return i.ToEdgeProfilePtrOutputWithContext(context.Background())
}

func (i *edgeProfilePtrType) ToEdgeProfilePtrOutputWithContext(ctx context.Context) EdgeProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfilePtrOutput)
}

// Details about Edge Profile for the resource
type EdgeProfileOutput struct{ *pulumi.OutputState }

func (EdgeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfile)(nil)).Elem()
}

func (o EdgeProfileOutput) ToEdgeProfileOutput() EdgeProfileOutput {
	return o
}

func (o EdgeProfileOutput) ToEdgeProfileOutputWithContext(ctx context.Context) EdgeProfileOutput {
	return o
}

func (o EdgeProfileOutput) ToEdgeProfilePtrOutput() EdgeProfilePtrOutput {
	return o.ToEdgeProfilePtrOutputWithContext(context.Background())
}

func (o EdgeProfileOutput) ToEdgeProfilePtrOutputWithContext(ctx context.Context) EdgeProfilePtrOutput {
	return o.ApplyT(func(v EdgeProfile) *EdgeProfile {
		return &v
	}).(EdgeProfilePtrOutput)
}

// Edge Profile Subscription
func (o EdgeProfileOutput) Subscription() EdgeProfileSubscriptionPtrOutput {
	return o.ApplyT(func(v EdgeProfile) *EdgeProfileSubscription { return v.Subscription }).(EdgeProfileSubscriptionPtrOutput)
}

type EdgeProfilePtrOutput struct{ *pulumi.OutputState }

func (EdgeProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfile)(nil)).Elem()
}

func (o EdgeProfilePtrOutput) ToEdgeProfilePtrOutput() EdgeProfilePtrOutput {
	return o
}

func (o EdgeProfilePtrOutput) ToEdgeProfilePtrOutputWithContext(ctx context.Context) EdgeProfilePtrOutput {
	return o
}

func (o EdgeProfilePtrOutput) Elem() EdgeProfileOutput {
	return o.ApplyT(func(v *EdgeProfile) EdgeProfile { return *v }).(EdgeProfileOutput)
}

// Edge Profile Subscription
func (o EdgeProfilePtrOutput) Subscription() EdgeProfileSubscriptionPtrOutput {
	return o.ApplyT(func(v *EdgeProfile) *EdgeProfileSubscription {
		if v == nil {
			return nil
		}
		return v.Subscription
	}).(EdgeProfileSubscriptionPtrOutput)
}

// Details about Edge Profile for the resource
type EdgeProfileResponse struct {
	// Edge Profile Subscription
	Subscription *EdgeProfileSubscriptionResponse `pulumi:"subscription"`
}

// EdgeProfileResponseInput is an input type that accepts EdgeProfileResponseArgs and EdgeProfileResponseOutput values.
// You can construct a concrete instance of `EdgeProfileResponseInput` via:
//
//          EdgeProfileResponseArgs{...}
type EdgeProfileResponseInput interface {
	pulumi.Input

	ToEdgeProfileResponseOutput() EdgeProfileResponseOutput
	ToEdgeProfileResponseOutputWithContext(context.Context) EdgeProfileResponseOutput
}

// Details about Edge Profile for the resource
type EdgeProfileResponseArgs struct {
	// Edge Profile Subscription
	Subscription EdgeProfileSubscriptionResponsePtrInput `pulumi:"subscription"`
}

func (EdgeProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileResponse)(nil)).Elem()
}

func (i EdgeProfileResponseArgs) ToEdgeProfileResponseOutput() EdgeProfileResponseOutput {
	return i.ToEdgeProfileResponseOutputWithContext(context.Background())
}

func (i EdgeProfileResponseArgs) ToEdgeProfileResponseOutputWithContext(ctx context.Context) EdgeProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileResponseOutput)
}

func (i EdgeProfileResponseArgs) ToEdgeProfileResponsePtrOutput() EdgeProfileResponsePtrOutput {
	return i.ToEdgeProfileResponsePtrOutputWithContext(context.Background())
}

func (i EdgeProfileResponseArgs) ToEdgeProfileResponsePtrOutputWithContext(ctx context.Context) EdgeProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileResponseOutput).ToEdgeProfileResponsePtrOutputWithContext(ctx)
}

// EdgeProfileResponsePtrInput is an input type that accepts EdgeProfileResponseArgs, EdgeProfileResponsePtr and EdgeProfileResponsePtrOutput values.
// You can construct a concrete instance of `EdgeProfileResponsePtrInput` via:
//
//          EdgeProfileResponseArgs{...}
//
//  or:
//
//          nil
type EdgeProfileResponsePtrInput interface {
	pulumi.Input

	ToEdgeProfileResponsePtrOutput() EdgeProfileResponsePtrOutput
	ToEdgeProfileResponsePtrOutputWithContext(context.Context) EdgeProfileResponsePtrOutput
}

type edgeProfileResponsePtrType EdgeProfileResponseArgs

func EdgeProfileResponsePtr(v *EdgeProfileResponseArgs) EdgeProfileResponsePtrInput {
	return (*edgeProfileResponsePtrType)(v)
}

func (*edgeProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileResponse)(nil)).Elem()
}

func (i *edgeProfileResponsePtrType) ToEdgeProfileResponsePtrOutput() EdgeProfileResponsePtrOutput {
	return i.ToEdgeProfileResponsePtrOutputWithContext(context.Background())
}

func (i *edgeProfileResponsePtrType) ToEdgeProfileResponsePtrOutputWithContext(ctx context.Context) EdgeProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileResponsePtrOutput)
}

// Details about Edge Profile for the resource
type EdgeProfileResponseOutput struct{ *pulumi.OutputState }

func (EdgeProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileResponse)(nil)).Elem()
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponseOutput() EdgeProfileResponseOutput {
	return o
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponseOutputWithContext(ctx context.Context) EdgeProfileResponseOutput {
	return o
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponsePtrOutput() EdgeProfileResponsePtrOutput {
	return o.ToEdgeProfileResponsePtrOutputWithContext(context.Background())
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponsePtrOutputWithContext(ctx context.Context) EdgeProfileResponsePtrOutput {
	return o.ApplyT(func(v EdgeProfileResponse) *EdgeProfileResponse {
		return &v
	}).(EdgeProfileResponsePtrOutput)
}

// Edge Profile Subscription
func (o EdgeProfileResponseOutput) Subscription() EdgeProfileSubscriptionResponsePtrOutput {
	return o.ApplyT(func(v EdgeProfileResponse) *EdgeProfileSubscriptionResponse { return v.Subscription }).(EdgeProfileSubscriptionResponsePtrOutput)
}

type EdgeProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (EdgeProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileResponse)(nil)).Elem()
}

func (o EdgeProfileResponsePtrOutput) ToEdgeProfileResponsePtrOutput() EdgeProfileResponsePtrOutput {
	return o
}

func (o EdgeProfileResponsePtrOutput) ToEdgeProfileResponsePtrOutputWithContext(ctx context.Context) EdgeProfileResponsePtrOutput {
	return o
}

func (o EdgeProfileResponsePtrOutput) Elem() EdgeProfileResponseOutput {
	return o.ApplyT(func(v *EdgeProfileResponse) EdgeProfileResponse { return *v }).(EdgeProfileResponseOutput)
}

// Edge Profile Subscription
func (o EdgeProfileResponsePtrOutput) Subscription() EdgeProfileSubscriptionResponsePtrOutput {
	return o.ApplyT(func(v *EdgeProfileResponse) *EdgeProfileSubscriptionResponse {
		if v == nil {
			return nil
		}
		return v.Subscription
	}).(EdgeProfileSubscriptionResponsePtrOutput)
}

// Subscription details for the Edge Profile
type EdgeProfileSubscription struct {
	// ARM ID of the subscription
	Id                  *string                          `pulumi:"id"`
	LocationPlacementId *string                          `pulumi:"locationPlacementId"`
	QuotaId             *string                          `pulumi:"quotaId"`
	RegisteredFeatures  []SubscriptionRegisteredFeatures `pulumi:"registeredFeatures"`
	RegistrationDate    *string                          `pulumi:"registrationDate"`
	// Edge Subscription Registration ID
	RegistrationId    *string `pulumi:"registrationId"`
	SerializedDetails *string `pulumi:"serializedDetails"`
	State             *string `pulumi:"state"`
	SubscriptionId    *string `pulumi:"subscriptionId"`
	TenantId          *string `pulumi:"tenantId"`
}

// EdgeProfileSubscriptionInput is an input type that accepts EdgeProfileSubscriptionArgs and EdgeProfileSubscriptionOutput values.
// You can construct a concrete instance of `EdgeProfileSubscriptionInput` via:
//
//          EdgeProfileSubscriptionArgs{...}
type EdgeProfileSubscriptionInput interface {
	pulumi.Input

	ToEdgeProfileSubscriptionOutput() EdgeProfileSubscriptionOutput
	ToEdgeProfileSubscriptionOutputWithContext(context.Context) EdgeProfileSubscriptionOutput
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionArgs struct {
	// ARM ID of the subscription
	Id                  pulumi.StringPtrInput                    `pulumi:"id"`
	LocationPlacementId pulumi.StringPtrInput                    `pulumi:"locationPlacementId"`
	QuotaId             pulumi.StringPtrInput                    `pulumi:"quotaId"`
	RegisteredFeatures  SubscriptionRegisteredFeaturesArrayInput `pulumi:"registeredFeatures"`
	RegistrationDate    pulumi.StringPtrInput                    `pulumi:"registrationDate"`
	// Edge Subscription Registration ID
	RegistrationId    pulumi.StringPtrInput `pulumi:"registrationId"`
	SerializedDetails pulumi.StringPtrInput `pulumi:"serializedDetails"`
	State             pulumi.StringPtrInput `pulumi:"state"`
	SubscriptionId    pulumi.StringPtrInput `pulumi:"subscriptionId"`
	TenantId          pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (EdgeProfileSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileSubscription)(nil)).Elem()
}

func (i EdgeProfileSubscriptionArgs) ToEdgeProfileSubscriptionOutput() EdgeProfileSubscriptionOutput {
	return i.ToEdgeProfileSubscriptionOutputWithContext(context.Background())
}

func (i EdgeProfileSubscriptionArgs) ToEdgeProfileSubscriptionOutputWithContext(ctx context.Context) EdgeProfileSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionOutput)
}

func (i EdgeProfileSubscriptionArgs) ToEdgeProfileSubscriptionPtrOutput() EdgeProfileSubscriptionPtrOutput {
	return i.ToEdgeProfileSubscriptionPtrOutputWithContext(context.Background())
}

func (i EdgeProfileSubscriptionArgs) ToEdgeProfileSubscriptionPtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionOutput).ToEdgeProfileSubscriptionPtrOutputWithContext(ctx)
}

// EdgeProfileSubscriptionPtrInput is an input type that accepts EdgeProfileSubscriptionArgs, EdgeProfileSubscriptionPtr and EdgeProfileSubscriptionPtrOutput values.
// You can construct a concrete instance of `EdgeProfileSubscriptionPtrInput` via:
//
//          EdgeProfileSubscriptionArgs{...}
//
//  or:
//
//          nil
type EdgeProfileSubscriptionPtrInput interface {
	pulumi.Input

	ToEdgeProfileSubscriptionPtrOutput() EdgeProfileSubscriptionPtrOutput
	ToEdgeProfileSubscriptionPtrOutputWithContext(context.Context) EdgeProfileSubscriptionPtrOutput
}

type edgeProfileSubscriptionPtrType EdgeProfileSubscriptionArgs

func EdgeProfileSubscriptionPtr(v *EdgeProfileSubscriptionArgs) EdgeProfileSubscriptionPtrInput {
	return (*edgeProfileSubscriptionPtrType)(v)
}

func (*edgeProfileSubscriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileSubscription)(nil)).Elem()
}

func (i *edgeProfileSubscriptionPtrType) ToEdgeProfileSubscriptionPtrOutput() EdgeProfileSubscriptionPtrOutput {
	return i.ToEdgeProfileSubscriptionPtrOutputWithContext(context.Background())
}

func (i *edgeProfileSubscriptionPtrType) ToEdgeProfileSubscriptionPtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionPtrOutput)
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileSubscription)(nil)).Elem()
}

func (o EdgeProfileSubscriptionOutput) ToEdgeProfileSubscriptionOutput() EdgeProfileSubscriptionOutput {
	return o
}

func (o EdgeProfileSubscriptionOutput) ToEdgeProfileSubscriptionOutputWithContext(ctx context.Context) EdgeProfileSubscriptionOutput {
	return o
}

func (o EdgeProfileSubscriptionOutput) ToEdgeProfileSubscriptionPtrOutput() EdgeProfileSubscriptionPtrOutput {
	return o.ToEdgeProfileSubscriptionPtrOutputWithContext(context.Background())
}

func (o EdgeProfileSubscriptionOutput) ToEdgeProfileSubscriptionPtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *EdgeProfileSubscription {
		return &v
	}).(EdgeProfileSubscriptionPtrOutput)
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.LocationPlacementId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.QuotaId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesArrayOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) []SubscriptionRegisteredFeatures { return v.RegisteredFeatures }).(SubscriptionRegisteredFeaturesArrayOutput)
}

func (o EdgeProfileSubscriptionOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.RegistrationDate }).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.RegistrationId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.SerializedDetails }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscription) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EdgeProfileSubscriptionPtrOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileSubscription)(nil)).Elem()
}

func (o EdgeProfileSubscriptionPtrOutput) ToEdgeProfileSubscriptionPtrOutput() EdgeProfileSubscriptionPtrOutput {
	return o
}

func (o EdgeProfileSubscriptionPtrOutput) ToEdgeProfileSubscriptionPtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionPtrOutput {
	return o
}

func (o EdgeProfileSubscriptionPtrOutput) Elem() EdgeProfileSubscriptionOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) EdgeProfileSubscription { return *v }).(EdgeProfileSubscriptionOutput)
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.LocationPlacementId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.QuotaId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesArrayOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) []SubscriptionRegisteredFeatures {
		if v == nil {
			return nil
		}
		return v.RegisteredFeatures
	}).(SubscriptionRegisteredFeaturesArrayOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDate
	}).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionPtrOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.SerializedDetails
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscription) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionResponse struct {
	// ARM ID of the subscription
	Id                  *string                                  `pulumi:"id"`
	LocationPlacementId *string                                  `pulumi:"locationPlacementId"`
	QuotaId             *string                                  `pulumi:"quotaId"`
	RegisteredFeatures  []SubscriptionRegisteredFeaturesResponse `pulumi:"registeredFeatures"`
	RegistrationDate    *string                                  `pulumi:"registrationDate"`
	// Edge Subscription Registration ID
	RegistrationId    *string `pulumi:"registrationId"`
	SerializedDetails *string `pulumi:"serializedDetails"`
	State             *string `pulumi:"state"`
	SubscriptionId    *string `pulumi:"subscriptionId"`
	TenantId          *string `pulumi:"tenantId"`
}

// EdgeProfileSubscriptionResponseInput is an input type that accepts EdgeProfileSubscriptionResponseArgs and EdgeProfileSubscriptionResponseOutput values.
// You can construct a concrete instance of `EdgeProfileSubscriptionResponseInput` via:
//
//          EdgeProfileSubscriptionResponseArgs{...}
type EdgeProfileSubscriptionResponseInput interface {
	pulumi.Input

	ToEdgeProfileSubscriptionResponseOutput() EdgeProfileSubscriptionResponseOutput
	ToEdgeProfileSubscriptionResponseOutputWithContext(context.Context) EdgeProfileSubscriptionResponseOutput
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionResponseArgs struct {
	// ARM ID of the subscription
	Id                  pulumi.StringPtrInput                            `pulumi:"id"`
	LocationPlacementId pulumi.StringPtrInput                            `pulumi:"locationPlacementId"`
	QuotaId             pulumi.StringPtrInput                            `pulumi:"quotaId"`
	RegisteredFeatures  SubscriptionRegisteredFeaturesResponseArrayInput `pulumi:"registeredFeatures"`
	RegistrationDate    pulumi.StringPtrInput                            `pulumi:"registrationDate"`
	// Edge Subscription Registration ID
	RegistrationId    pulumi.StringPtrInput `pulumi:"registrationId"`
	SerializedDetails pulumi.StringPtrInput `pulumi:"serializedDetails"`
	State             pulumi.StringPtrInput `pulumi:"state"`
	SubscriptionId    pulumi.StringPtrInput `pulumi:"subscriptionId"`
	TenantId          pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (EdgeProfileSubscriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (i EdgeProfileSubscriptionResponseArgs) ToEdgeProfileSubscriptionResponseOutput() EdgeProfileSubscriptionResponseOutput {
	return i.ToEdgeProfileSubscriptionResponseOutputWithContext(context.Background())
}

func (i EdgeProfileSubscriptionResponseArgs) ToEdgeProfileSubscriptionResponseOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionResponseOutput)
}

func (i EdgeProfileSubscriptionResponseArgs) ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput {
	return i.ToEdgeProfileSubscriptionResponsePtrOutputWithContext(context.Background())
}

func (i EdgeProfileSubscriptionResponseArgs) ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionResponseOutput).ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx)
}

// EdgeProfileSubscriptionResponsePtrInput is an input type that accepts EdgeProfileSubscriptionResponseArgs, EdgeProfileSubscriptionResponsePtr and EdgeProfileSubscriptionResponsePtrOutput values.
// You can construct a concrete instance of `EdgeProfileSubscriptionResponsePtrInput` via:
//
//          EdgeProfileSubscriptionResponseArgs{...}
//
//  or:
//
//          nil
type EdgeProfileSubscriptionResponsePtrInput interface {
	pulumi.Input

	ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput
	ToEdgeProfileSubscriptionResponsePtrOutputWithContext(context.Context) EdgeProfileSubscriptionResponsePtrOutput
}

type edgeProfileSubscriptionResponsePtrType EdgeProfileSubscriptionResponseArgs

func EdgeProfileSubscriptionResponsePtr(v *EdgeProfileSubscriptionResponseArgs) EdgeProfileSubscriptionResponsePtrInput {
	return (*edgeProfileSubscriptionResponsePtrType)(v)
}

func (*edgeProfileSubscriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (i *edgeProfileSubscriptionResponsePtrType) ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput {
	return i.ToEdgeProfileSubscriptionResponsePtrOutputWithContext(context.Background())
}

func (i *edgeProfileSubscriptionResponsePtrType) ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeProfileSubscriptionResponsePtrOutput)
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionResponseOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponseOutput() EdgeProfileSubscriptionResponseOutput {
	return o
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponseOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponseOutput {
	return o
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput {
	return o.ToEdgeProfileSubscriptionResponsePtrOutputWithContext(context.Background())
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponsePtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *EdgeProfileSubscriptionResponse {
		return &v
	}).(EdgeProfileSubscriptionResponsePtrOutput)
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.LocationPlacementId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.QuotaId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) []SubscriptionRegisteredFeaturesResponse {
		return v.RegisteredFeatures
	}).(SubscriptionRegisteredFeaturesResponseArrayOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.RegistrationDate }).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionResponseOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.RegistrationId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.SerializedDetails }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EdgeProfileSubscriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (o EdgeProfileSubscriptionResponsePtrOutput) ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput {
	return o
}

func (o EdgeProfileSubscriptionResponsePtrOutput) ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponsePtrOutput {
	return o
}

func (o EdgeProfileSubscriptionResponsePtrOutput) Elem() EdgeProfileSubscriptionResponseOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) EdgeProfileSubscriptionResponse { return *v }).(EdgeProfileSubscriptionResponseOutput)
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocationPlacementId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.QuotaId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) []SubscriptionRegisteredFeaturesResponse {
		if v == nil {
			return nil
		}
		return v.RegisteredFeatures
	}).(SubscriptionRegisteredFeaturesResponseArrayOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDate
	}).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionResponsePtrOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerializedDetails
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Metric configuration.
type MetricConfiguration struct {
	// Host name for the IoT hub associated to the device.
	CounterSets []MetricCounterSet `pulumi:"counterSets"`
	// The MDM account to which the counters should be pushed.
	MdmAccount *string `pulumi:"mdmAccount"`
	// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
	MetricNameSpace *string `pulumi:"metricNameSpace"`
	// The Resource ID on which the metrics should be pushed.
	ResourceId string `pulumi:"resourceId"`
}

// MetricConfigurationInput is an input type that accepts MetricConfigurationArgs and MetricConfigurationOutput values.
// You can construct a concrete instance of `MetricConfigurationInput` via:
//
//          MetricConfigurationArgs{...}
type MetricConfigurationInput interface {
	pulumi.Input

	ToMetricConfigurationOutput() MetricConfigurationOutput
	ToMetricConfigurationOutputWithContext(context.Context) MetricConfigurationOutput
}

// Metric configuration.
type MetricConfigurationArgs struct {
	// Host name for the IoT hub associated to the device.
	CounterSets MetricCounterSetArrayInput `pulumi:"counterSets"`
	// The MDM account to which the counters should be pushed.
	MdmAccount pulumi.StringPtrInput `pulumi:"mdmAccount"`
	// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
	MetricNameSpace pulumi.StringPtrInput `pulumi:"metricNameSpace"`
	// The Resource ID on which the metrics should be pushed.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (MetricConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricConfiguration)(nil)).Elem()
}

func (i MetricConfigurationArgs) ToMetricConfigurationOutput() MetricConfigurationOutput {
	return i.ToMetricConfigurationOutputWithContext(context.Background())
}

func (i MetricConfigurationArgs) ToMetricConfigurationOutputWithContext(ctx context.Context) MetricConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricConfigurationOutput)
}

// MetricConfigurationArrayInput is an input type that accepts MetricConfigurationArray and MetricConfigurationArrayOutput values.
// You can construct a concrete instance of `MetricConfigurationArrayInput` via:
//
//          MetricConfigurationArray{ MetricConfigurationArgs{...} }
type MetricConfigurationArrayInput interface {
	pulumi.Input

	ToMetricConfigurationArrayOutput() MetricConfigurationArrayOutput
	ToMetricConfigurationArrayOutputWithContext(context.Context) MetricConfigurationArrayOutput
}

type MetricConfigurationArray []MetricConfigurationInput

func (MetricConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricConfiguration)(nil)).Elem()
}

func (i MetricConfigurationArray) ToMetricConfigurationArrayOutput() MetricConfigurationArrayOutput {
	return i.ToMetricConfigurationArrayOutputWithContext(context.Background())
}

func (i MetricConfigurationArray) ToMetricConfigurationArrayOutputWithContext(ctx context.Context) MetricConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricConfigurationArrayOutput)
}

// Metric configuration.
type MetricConfigurationOutput struct{ *pulumi.OutputState }

func (MetricConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricConfiguration)(nil)).Elem()
}

func (o MetricConfigurationOutput) ToMetricConfigurationOutput() MetricConfigurationOutput {
	return o
}

func (o MetricConfigurationOutput) ToMetricConfigurationOutputWithContext(ctx context.Context) MetricConfigurationOutput {
	return o
}

// Host name for the IoT hub associated to the device.
func (o MetricConfigurationOutput) CounterSets() MetricCounterSetArrayOutput {
	return o.ApplyT(func(v MetricConfiguration) []MetricCounterSet { return v.CounterSets }).(MetricCounterSetArrayOutput)
}

// The MDM account to which the counters should be pushed.
func (o MetricConfigurationOutput) MdmAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricConfiguration) *string { return v.MdmAccount }).(pulumi.StringPtrOutput)
}

// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
func (o MetricConfigurationOutput) MetricNameSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricConfiguration) *string { return v.MetricNameSpace }).(pulumi.StringPtrOutput)
}

// The Resource ID on which the metrics should be pushed.
func (o MetricConfigurationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MetricConfiguration) string { return v.ResourceId }).(pulumi.StringOutput)
}

type MetricConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MetricConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricConfiguration)(nil)).Elem()
}

func (o MetricConfigurationArrayOutput) ToMetricConfigurationArrayOutput() MetricConfigurationArrayOutput {
	return o
}

func (o MetricConfigurationArrayOutput) ToMetricConfigurationArrayOutputWithContext(ctx context.Context) MetricConfigurationArrayOutput {
	return o
}

func (o MetricConfigurationArrayOutput) Index(i pulumi.IntInput) MetricConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricConfiguration {
		return vs[0].([]MetricConfiguration)[vs[1].(int)]
	}).(MetricConfigurationOutput)
}

// Metric configuration.
type MetricConfigurationResponse struct {
	// Host name for the IoT hub associated to the device.
	CounterSets []MetricCounterSetResponse `pulumi:"counterSets"`
	// The MDM account to which the counters should be pushed.
	MdmAccount *string `pulumi:"mdmAccount"`
	// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
	MetricNameSpace *string `pulumi:"metricNameSpace"`
	// The Resource ID on which the metrics should be pushed.
	ResourceId string `pulumi:"resourceId"`
}

// MetricConfigurationResponseInput is an input type that accepts MetricConfigurationResponseArgs and MetricConfigurationResponseOutput values.
// You can construct a concrete instance of `MetricConfigurationResponseInput` via:
//
//          MetricConfigurationResponseArgs{...}
type MetricConfigurationResponseInput interface {
	pulumi.Input

	ToMetricConfigurationResponseOutput() MetricConfigurationResponseOutput
	ToMetricConfigurationResponseOutputWithContext(context.Context) MetricConfigurationResponseOutput
}

// Metric configuration.
type MetricConfigurationResponseArgs struct {
	// Host name for the IoT hub associated to the device.
	CounterSets MetricCounterSetResponseArrayInput `pulumi:"counterSets"`
	// The MDM account to which the counters should be pushed.
	MdmAccount pulumi.StringPtrInput `pulumi:"mdmAccount"`
	// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
	MetricNameSpace pulumi.StringPtrInput `pulumi:"metricNameSpace"`
	// The Resource ID on which the metrics should be pushed.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (MetricConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricConfigurationResponse)(nil)).Elem()
}

func (i MetricConfigurationResponseArgs) ToMetricConfigurationResponseOutput() MetricConfigurationResponseOutput {
	return i.ToMetricConfigurationResponseOutputWithContext(context.Background())
}

func (i MetricConfigurationResponseArgs) ToMetricConfigurationResponseOutputWithContext(ctx context.Context) MetricConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricConfigurationResponseOutput)
}

// MetricConfigurationResponseArrayInput is an input type that accepts MetricConfigurationResponseArray and MetricConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `MetricConfigurationResponseArrayInput` via:
//
//          MetricConfigurationResponseArray{ MetricConfigurationResponseArgs{...} }
type MetricConfigurationResponseArrayInput interface {
	pulumi.Input

	ToMetricConfigurationResponseArrayOutput() MetricConfigurationResponseArrayOutput
	ToMetricConfigurationResponseArrayOutputWithContext(context.Context) MetricConfigurationResponseArrayOutput
}

type MetricConfigurationResponseArray []MetricConfigurationResponseInput

func (MetricConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricConfigurationResponse)(nil)).Elem()
}

func (i MetricConfigurationResponseArray) ToMetricConfigurationResponseArrayOutput() MetricConfigurationResponseArrayOutput {
	return i.ToMetricConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i MetricConfigurationResponseArray) ToMetricConfigurationResponseArrayOutputWithContext(ctx context.Context) MetricConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricConfigurationResponseArrayOutput)
}

// Metric configuration.
type MetricConfigurationResponseOutput struct{ *pulumi.OutputState }

func (MetricConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricConfigurationResponse)(nil)).Elem()
}

func (o MetricConfigurationResponseOutput) ToMetricConfigurationResponseOutput() MetricConfigurationResponseOutput {
	return o
}

func (o MetricConfigurationResponseOutput) ToMetricConfigurationResponseOutputWithContext(ctx context.Context) MetricConfigurationResponseOutput {
	return o
}

// Host name for the IoT hub associated to the device.
func (o MetricConfigurationResponseOutput) CounterSets() MetricCounterSetResponseArrayOutput {
	return o.ApplyT(func(v MetricConfigurationResponse) []MetricCounterSetResponse { return v.CounterSets }).(MetricCounterSetResponseArrayOutput)
}

// The MDM account to which the counters should be pushed.
func (o MetricConfigurationResponseOutput) MdmAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricConfigurationResponse) *string { return v.MdmAccount }).(pulumi.StringPtrOutput)
}

// The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified
func (o MetricConfigurationResponseOutput) MetricNameSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricConfigurationResponse) *string { return v.MetricNameSpace }).(pulumi.StringPtrOutput)
}

// The Resource ID on which the metrics should be pushed.
func (o MetricConfigurationResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MetricConfigurationResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type MetricConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricConfigurationResponse)(nil)).Elem()
}

func (o MetricConfigurationResponseArrayOutput) ToMetricConfigurationResponseArrayOutput() MetricConfigurationResponseArrayOutput {
	return o
}

func (o MetricConfigurationResponseArrayOutput) ToMetricConfigurationResponseArrayOutputWithContext(ctx context.Context) MetricConfigurationResponseArrayOutput {
	return o
}

func (o MetricConfigurationResponseArrayOutput) Index(i pulumi.IntInput) MetricConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricConfigurationResponse {
		return vs[0].([]MetricConfigurationResponse)[vs[1].(int)]
	}).(MetricConfigurationResponseOutput)
}

// The metric counter
type MetricCounter struct {
	// The additional dimensions to be added to metric.
	AdditionalDimensions []MetricDimension `pulumi:"additionalDimensions"`
	// The dimension filter.
	DimensionFilter []MetricDimension `pulumi:"dimensionFilter"`
	// The instance from which counter should be collected.
	Instance *string `pulumi:"instance"`
	// The counter name.
	Name string `pulumi:"name"`
}

// MetricCounterInput is an input type that accepts MetricCounterArgs and MetricCounterOutput values.
// You can construct a concrete instance of `MetricCounterInput` via:
//
//          MetricCounterArgs{...}
type MetricCounterInput interface {
	pulumi.Input

	ToMetricCounterOutput() MetricCounterOutput
	ToMetricCounterOutputWithContext(context.Context) MetricCounterOutput
}

// The metric counter
type MetricCounterArgs struct {
	// The additional dimensions to be added to metric.
	AdditionalDimensions MetricDimensionArrayInput `pulumi:"additionalDimensions"`
	// The dimension filter.
	DimensionFilter MetricDimensionArrayInput `pulumi:"dimensionFilter"`
	// The instance from which counter should be collected.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// The counter name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MetricCounterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounter)(nil)).Elem()
}

func (i MetricCounterArgs) ToMetricCounterOutput() MetricCounterOutput {
	return i.ToMetricCounterOutputWithContext(context.Background())
}

func (i MetricCounterArgs) ToMetricCounterOutputWithContext(ctx context.Context) MetricCounterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterOutput)
}

// MetricCounterArrayInput is an input type that accepts MetricCounterArray and MetricCounterArrayOutput values.
// You can construct a concrete instance of `MetricCounterArrayInput` via:
//
//          MetricCounterArray{ MetricCounterArgs{...} }
type MetricCounterArrayInput interface {
	pulumi.Input

	ToMetricCounterArrayOutput() MetricCounterArrayOutput
	ToMetricCounterArrayOutputWithContext(context.Context) MetricCounterArrayOutput
}

type MetricCounterArray []MetricCounterInput

func (MetricCounterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounter)(nil)).Elem()
}

func (i MetricCounterArray) ToMetricCounterArrayOutput() MetricCounterArrayOutput {
	return i.ToMetricCounterArrayOutputWithContext(context.Background())
}

func (i MetricCounterArray) ToMetricCounterArrayOutputWithContext(ctx context.Context) MetricCounterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterArrayOutput)
}

// The metric counter
type MetricCounterOutput struct{ *pulumi.OutputState }

func (MetricCounterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounter)(nil)).Elem()
}

func (o MetricCounterOutput) ToMetricCounterOutput() MetricCounterOutput {
	return o
}

func (o MetricCounterOutput) ToMetricCounterOutputWithContext(ctx context.Context) MetricCounterOutput {
	return o
}

// The additional dimensions to be added to metric.
func (o MetricCounterOutput) AdditionalDimensions() MetricDimensionArrayOutput {
	return o.ApplyT(func(v MetricCounter) []MetricDimension { return v.AdditionalDimensions }).(MetricDimensionArrayOutput)
}

// The dimension filter.
func (o MetricCounterOutput) DimensionFilter() MetricDimensionArrayOutput {
	return o.ApplyT(func(v MetricCounter) []MetricDimension { return v.DimensionFilter }).(MetricDimensionArrayOutput)
}

// The instance from which counter should be collected.
func (o MetricCounterOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricCounter) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// The counter name.
func (o MetricCounterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MetricCounter) string { return v.Name }).(pulumi.StringOutput)
}

type MetricCounterArrayOutput struct{ *pulumi.OutputState }

func (MetricCounterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounter)(nil)).Elem()
}

func (o MetricCounterArrayOutput) ToMetricCounterArrayOutput() MetricCounterArrayOutput {
	return o
}

func (o MetricCounterArrayOutput) ToMetricCounterArrayOutputWithContext(ctx context.Context) MetricCounterArrayOutput {
	return o
}

func (o MetricCounterArrayOutput) Index(i pulumi.IntInput) MetricCounterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricCounter {
		return vs[0].([]MetricCounter)[vs[1].(int)]
	}).(MetricCounterOutput)
}

// The metric counter
type MetricCounterResponse struct {
	// The additional dimensions to be added to metric.
	AdditionalDimensions []MetricDimensionResponse `pulumi:"additionalDimensions"`
	// The dimension filter.
	DimensionFilter []MetricDimensionResponse `pulumi:"dimensionFilter"`
	// The instance from which counter should be collected.
	Instance *string `pulumi:"instance"`
	// The counter name.
	Name string `pulumi:"name"`
}

// MetricCounterResponseInput is an input type that accepts MetricCounterResponseArgs and MetricCounterResponseOutput values.
// You can construct a concrete instance of `MetricCounterResponseInput` via:
//
//          MetricCounterResponseArgs{...}
type MetricCounterResponseInput interface {
	pulumi.Input

	ToMetricCounterResponseOutput() MetricCounterResponseOutput
	ToMetricCounterResponseOutputWithContext(context.Context) MetricCounterResponseOutput
}

// The metric counter
type MetricCounterResponseArgs struct {
	// The additional dimensions to be added to metric.
	AdditionalDimensions MetricDimensionResponseArrayInput `pulumi:"additionalDimensions"`
	// The dimension filter.
	DimensionFilter MetricDimensionResponseArrayInput `pulumi:"dimensionFilter"`
	// The instance from which counter should be collected.
	Instance pulumi.StringPtrInput `pulumi:"instance"`
	// The counter name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (MetricCounterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterResponse)(nil)).Elem()
}

func (i MetricCounterResponseArgs) ToMetricCounterResponseOutput() MetricCounterResponseOutput {
	return i.ToMetricCounterResponseOutputWithContext(context.Background())
}

func (i MetricCounterResponseArgs) ToMetricCounterResponseOutputWithContext(ctx context.Context) MetricCounterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterResponseOutput)
}

// MetricCounterResponseArrayInput is an input type that accepts MetricCounterResponseArray and MetricCounterResponseArrayOutput values.
// You can construct a concrete instance of `MetricCounterResponseArrayInput` via:
//
//          MetricCounterResponseArray{ MetricCounterResponseArgs{...} }
type MetricCounterResponseArrayInput interface {
	pulumi.Input

	ToMetricCounterResponseArrayOutput() MetricCounterResponseArrayOutput
	ToMetricCounterResponseArrayOutputWithContext(context.Context) MetricCounterResponseArrayOutput
}

type MetricCounterResponseArray []MetricCounterResponseInput

func (MetricCounterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterResponse)(nil)).Elem()
}

func (i MetricCounterResponseArray) ToMetricCounterResponseArrayOutput() MetricCounterResponseArrayOutput {
	return i.ToMetricCounterResponseArrayOutputWithContext(context.Background())
}

func (i MetricCounterResponseArray) ToMetricCounterResponseArrayOutputWithContext(ctx context.Context) MetricCounterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterResponseArrayOutput)
}

// The metric counter
type MetricCounterResponseOutput struct{ *pulumi.OutputState }

func (MetricCounterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterResponse)(nil)).Elem()
}

func (o MetricCounterResponseOutput) ToMetricCounterResponseOutput() MetricCounterResponseOutput {
	return o
}

func (o MetricCounterResponseOutput) ToMetricCounterResponseOutputWithContext(ctx context.Context) MetricCounterResponseOutput {
	return o
}

// The additional dimensions to be added to metric.
func (o MetricCounterResponseOutput) AdditionalDimensions() MetricDimensionResponseArrayOutput {
	return o.ApplyT(func(v MetricCounterResponse) []MetricDimensionResponse { return v.AdditionalDimensions }).(MetricDimensionResponseArrayOutput)
}

// The dimension filter.
func (o MetricCounterResponseOutput) DimensionFilter() MetricDimensionResponseArrayOutput {
	return o.ApplyT(func(v MetricCounterResponse) []MetricDimensionResponse { return v.DimensionFilter }).(MetricDimensionResponseArrayOutput)
}

// The instance from which counter should be collected.
func (o MetricCounterResponseOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricCounterResponse) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

// The counter name.
func (o MetricCounterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MetricCounterResponse) string { return v.Name }).(pulumi.StringOutput)
}

type MetricCounterResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricCounterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterResponse)(nil)).Elem()
}

func (o MetricCounterResponseArrayOutput) ToMetricCounterResponseArrayOutput() MetricCounterResponseArrayOutput {
	return o
}

func (o MetricCounterResponseArrayOutput) ToMetricCounterResponseArrayOutputWithContext(ctx context.Context) MetricCounterResponseArrayOutput {
	return o
}

func (o MetricCounterResponseArrayOutput) Index(i pulumi.IntInput) MetricCounterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricCounterResponse {
		return vs[0].([]MetricCounterResponse)[vs[1].(int)]
	}).(MetricCounterResponseOutput)
}

// The metric counter set
type MetricCounterSet struct {
	// The counters that should be collected in this set.
	Counters []MetricCounter `pulumi:"counters"`
}

// MetricCounterSetInput is an input type that accepts MetricCounterSetArgs and MetricCounterSetOutput values.
// You can construct a concrete instance of `MetricCounterSetInput` via:
//
//          MetricCounterSetArgs{...}
type MetricCounterSetInput interface {
	pulumi.Input

	ToMetricCounterSetOutput() MetricCounterSetOutput
	ToMetricCounterSetOutputWithContext(context.Context) MetricCounterSetOutput
}

// The metric counter set
type MetricCounterSetArgs struct {
	// The counters that should be collected in this set.
	Counters MetricCounterArrayInput `pulumi:"counters"`
}

func (MetricCounterSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterSet)(nil)).Elem()
}

func (i MetricCounterSetArgs) ToMetricCounterSetOutput() MetricCounterSetOutput {
	return i.ToMetricCounterSetOutputWithContext(context.Background())
}

func (i MetricCounterSetArgs) ToMetricCounterSetOutputWithContext(ctx context.Context) MetricCounterSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterSetOutput)
}

// MetricCounterSetArrayInput is an input type that accepts MetricCounterSetArray and MetricCounterSetArrayOutput values.
// You can construct a concrete instance of `MetricCounterSetArrayInput` via:
//
//          MetricCounterSetArray{ MetricCounterSetArgs{...} }
type MetricCounterSetArrayInput interface {
	pulumi.Input

	ToMetricCounterSetArrayOutput() MetricCounterSetArrayOutput
	ToMetricCounterSetArrayOutputWithContext(context.Context) MetricCounterSetArrayOutput
}

type MetricCounterSetArray []MetricCounterSetInput

func (MetricCounterSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterSet)(nil)).Elem()
}

func (i MetricCounterSetArray) ToMetricCounterSetArrayOutput() MetricCounterSetArrayOutput {
	return i.ToMetricCounterSetArrayOutputWithContext(context.Background())
}

func (i MetricCounterSetArray) ToMetricCounterSetArrayOutputWithContext(ctx context.Context) MetricCounterSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterSetArrayOutput)
}

// The metric counter set
type MetricCounterSetOutput struct{ *pulumi.OutputState }

func (MetricCounterSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterSet)(nil)).Elem()
}

func (o MetricCounterSetOutput) ToMetricCounterSetOutput() MetricCounterSetOutput {
	return o
}

func (o MetricCounterSetOutput) ToMetricCounterSetOutputWithContext(ctx context.Context) MetricCounterSetOutput {
	return o
}

// The counters that should be collected in this set.
func (o MetricCounterSetOutput) Counters() MetricCounterArrayOutput {
	return o.ApplyT(func(v MetricCounterSet) []MetricCounter { return v.Counters }).(MetricCounterArrayOutput)
}

type MetricCounterSetArrayOutput struct{ *pulumi.OutputState }

func (MetricCounterSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterSet)(nil)).Elem()
}

func (o MetricCounterSetArrayOutput) ToMetricCounterSetArrayOutput() MetricCounterSetArrayOutput {
	return o
}

func (o MetricCounterSetArrayOutput) ToMetricCounterSetArrayOutputWithContext(ctx context.Context) MetricCounterSetArrayOutput {
	return o
}

func (o MetricCounterSetArrayOutput) Index(i pulumi.IntInput) MetricCounterSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricCounterSet {
		return vs[0].([]MetricCounterSet)[vs[1].(int)]
	}).(MetricCounterSetOutput)
}

// The metric counter set
type MetricCounterSetResponse struct {
	// The counters that should be collected in this set.
	Counters []MetricCounterResponse `pulumi:"counters"`
}

// MetricCounterSetResponseInput is an input type that accepts MetricCounterSetResponseArgs and MetricCounterSetResponseOutput values.
// You can construct a concrete instance of `MetricCounterSetResponseInput` via:
//
//          MetricCounterSetResponseArgs{...}
type MetricCounterSetResponseInput interface {
	pulumi.Input

	ToMetricCounterSetResponseOutput() MetricCounterSetResponseOutput
	ToMetricCounterSetResponseOutputWithContext(context.Context) MetricCounterSetResponseOutput
}

// The metric counter set
type MetricCounterSetResponseArgs struct {
	// The counters that should be collected in this set.
	Counters MetricCounterResponseArrayInput `pulumi:"counters"`
}

func (MetricCounterSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterSetResponse)(nil)).Elem()
}

func (i MetricCounterSetResponseArgs) ToMetricCounterSetResponseOutput() MetricCounterSetResponseOutput {
	return i.ToMetricCounterSetResponseOutputWithContext(context.Background())
}

func (i MetricCounterSetResponseArgs) ToMetricCounterSetResponseOutputWithContext(ctx context.Context) MetricCounterSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterSetResponseOutput)
}

// MetricCounterSetResponseArrayInput is an input type that accepts MetricCounterSetResponseArray and MetricCounterSetResponseArrayOutput values.
// You can construct a concrete instance of `MetricCounterSetResponseArrayInput` via:
//
//          MetricCounterSetResponseArray{ MetricCounterSetResponseArgs{...} }
type MetricCounterSetResponseArrayInput interface {
	pulumi.Input

	ToMetricCounterSetResponseArrayOutput() MetricCounterSetResponseArrayOutput
	ToMetricCounterSetResponseArrayOutputWithContext(context.Context) MetricCounterSetResponseArrayOutput
}

type MetricCounterSetResponseArray []MetricCounterSetResponseInput

func (MetricCounterSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterSetResponse)(nil)).Elem()
}

func (i MetricCounterSetResponseArray) ToMetricCounterSetResponseArrayOutput() MetricCounterSetResponseArrayOutput {
	return i.ToMetricCounterSetResponseArrayOutputWithContext(context.Background())
}

func (i MetricCounterSetResponseArray) ToMetricCounterSetResponseArrayOutputWithContext(ctx context.Context) MetricCounterSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricCounterSetResponseArrayOutput)
}

// The metric counter set
type MetricCounterSetResponseOutput struct{ *pulumi.OutputState }

func (MetricCounterSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricCounterSetResponse)(nil)).Elem()
}

func (o MetricCounterSetResponseOutput) ToMetricCounterSetResponseOutput() MetricCounterSetResponseOutput {
	return o
}

func (o MetricCounterSetResponseOutput) ToMetricCounterSetResponseOutputWithContext(ctx context.Context) MetricCounterSetResponseOutput {
	return o
}

// The counters that should be collected in this set.
func (o MetricCounterSetResponseOutput) Counters() MetricCounterResponseArrayOutput {
	return o.ApplyT(func(v MetricCounterSetResponse) []MetricCounterResponse { return v.Counters }).(MetricCounterResponseArrayOutput)
}

type MetricCounterSetResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricCounterSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricCounterSetResponse)(nil)).Elem()
}

func (o MetricCounterSetResponseArrayOutput) ToMetricCounterSetResponseArrayOutput() MetricCounterSetResponseArrayOutput {
	return o
}

func (o MetricCounterSetResponseArrayOutput) ToMetricCounterSetResponseArrayOutputWithContext(ctx context.Context) MetricCounterSetResponseArrayOutput {
	return o
}

func (o MetricCounterSetResponseArrayOutput) Index(i pulumi.IntInput) MetricCounterSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricCounterSetResponse {
		return vs[0].([]MetricCounterSetResponse)[vs[1].(int)]
	}).(MetricCounterSetResponseOutput)
}

// The metric dimension
type MetricDimension struct {
	// The dimension value.
	SourceName string `pulumi:"sourceName"`
	// The dimension type.
	SourceType string `pulumi:"sourceType"`
}

// MetricDimensionInput is an input type that accepts MetricDimensionArgs and MetricDimensionOutput values.
// You can construct a concrete instance of `MetricDimensionInput` via:
//
//          MetricDimensionArgs{...}
type MetricDimensionInput interface {
	pulumi.Input

	ToMetricDimensionOutput() MetricDimensionOutput
	ToMetricDimensionOutputWithContext(context.Context) MetricDimensionOutput
}

// The metric dimension
type MetricDimensionArgs struct {
	// The dimension value.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// The dimension type.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (MetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDimension)(nil)).Elem()
}

func (i MetricDimensionArgs) ToMetricDimensionOutput() MetricDimensionOutput {
	return i.ToMetricDimensionOutputWithContext(context.Background())
}

func (i MetricDimensionArgs) ToMetricDimensionOutputWithContext(ctx context.Context) MetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDimensionOutput)
}

// MetricDimensionArrayInput is an input type that accepts MetricDimensionArray and MetricDimensionArrayOutput values.
// You can construct a concrete instance of `MetricDimensionArrayInput` via:
//
//          MetricDimensionArray{ MetricDimensionArgs{...} }
type MetricDimensionArrayInput interface {
	pulumi.Input

	ToMetricDimensionArrayOutput() MetricDimensionArrayOutput
	ToMetricDimensionArrayOutputWithContext(context.Context) MetricDimensionArrayOutput
}

type MetricDimensionArray []MetricDimensionInput

func (MetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDimension)(nil)).Elem()
}

func (i MetricDimensionArray) ToMetricDimensionArrayOutput() MetricDimensionArrayOutput {
	return i.ToMetricDimensionArrayOutputWithContext(context.Background())
}

func (i MetricDimensionArray) ToMetricDimensionArrayOutputWithContext(ctx context.Context) MetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDimensionArrayOutput)
}

// The metric dimension
type MetricDimensionOutput struct{ *pulumi.OutputState }

func (MetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDimension)(nil)).Elem()
}

func (o MetricDimensionOutput) ToMetricDimensionOutput() MetricDimensionOutput {
	return o
}

func (o MetricDimensionOutput) ToMetricDimensionOutputWithContext(ctx context.Context) MetricDimensionOutput {
	return o
}

// The dimension value.
func (o MetricDimensionOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricDimension) string { return v.SourceName }).(pulumi.StringOutput)
}

// The dimension type.
func (o MetricDimensionOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MetricDimension) string { return v.SourceType }).(pulumi.StringOutput)
}

type MetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (MetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDimension)(nil)).Elem()
}

func (o MetricDimensionArrayOutput) ToMetricDimensionArrayOutput() MetricDimensionArrayOutput {
	return o
}

func (o MetricDimensionArrayOutput) ToMetricDimensionArrayOutputWithContext(ctx context.Context) MetricDimensionArrayOutput {
	return o
}

func (o MetricDimensionArrayOutput) Index(i pulumi.IntInput) MetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricDimension {
		return vs[0].([]MetricDimension)[vs[1].(int)]
	}).(MetricDimensionOutput)
}

// The metric dimension
type MetricDimensionResponse struct {
	// The dimension value.
	SourceName string `pulumi:"sourceName"`
	// The dimension type.
	SourceType string `pulumi:"sourceType"`
}

// MetricDimensionResponseInput is an input type that accepts MetricDimensionResponseArgs and MetricDimensionResponseOutput values.
// You can construct a concrete instance of `MetricDimensionResponseInput` via:
//
//          MetricDimensionResponseArgs{...}
type MetricDimensionResponseInput interface {
	pulumi.Input

	ToMetricDimensionResponseOutput() MetricDimensionResponseOutput
	ToMetricDimensionResponseOutputWithContext(context.Context) MetricDimensionResponseOutput
}

// The metric dimension
type MetricDimensionResponseArgs struct {
	// The dimension value.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// The dimension type.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (MetricDimensionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDimensionResponse)(nil)).Elem()
}

func (i MetricDimensionResponseArgs) ToMetricDimensionResponseOutput() MetricDimensionResponseOutput {
	return i.ToMetricDimensionResponseOutputWithContext(context.Background())
}

func (i MetricDimensionResponseArgs) ToMetricDimensionResponseOutputWithContext(ctx context.Context) MetricDimensionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDimensionResponseOutput)
}

// MetricDimensionResponseArrayInput is an input type that accepts MetricDimensionResponseArray and MetricDimensionResponseArrayOutput values.
// You can construct a concrete instance of `MetricDimensionResponseArrayInput` via:
//
//          MetricDimensionResponseArray{ MetricDimensionResponseArgs{...} }
type MetricDimensionResponseArrayInput interface {
	pulumi.Input

	ToMetricDimensionResponseArrayOutput() MetricDimensionResponseArrayOutput
	ToMetricDimensionResponseArrayOutputWithContext(context.Context) MetricDimensionResponseArrayOutput
}

type MetricDimensionResponseArray []MetricDimensionResponseInput

func (MetricDimensionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDimensionResponse)(nil)).Elem()
}

func (i MetricDimensionResponseArray) ToMetricDimensionResponseArrayOutput() MetricDimensionResponseArrayOutput {
	return i.ToMetricDimensionResponseArrayOutputWithContext(context.Background())
}

func (i MetricDimensionResponseArray) ToMetricDimensionResponseArrayOutputWithContext(ctx context.Context) MetricDimensionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricDimensionResponseArrayOutput)
}

// The metric dimension
type MetricDimensionResponseOutput struct{ *pulumi.OutputState }

func (MetricDimensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricDimensionResponse)(nil)).Elem()
}

func (o MetricDimensionResponseOutput) ToMetricDimensionResponseOutput() MetricDimensionResponseOutput {
	return o
}

func (o MetricDimensionResponseOutput) ToMetricDimensionResponseOutputWithContext(ctx context.Context) MetricDimensionResponseOutput {
	return o
}

// The dimension value.
func (o MetricDimensionResponseOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricDimensionResponse) string { return v.SourceName }).(pulumi.StringOutput)
}

// The dimension type.
func (o MetricDimensionResponseOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v MetricDimensionResponse) string { return v.SourceType }).(pulumi.StringOutput)
}

type MetricDimensionResponseArrayOutput struct{ *pulumi.OutputState }

func (MetricDimensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricDimensionResponse)(nil)).Elem()
}

func (o MetricDimensionResponseArrayOutput) ToMetricDimensionResponseArrayOutput() MetricDimensionResponseArrayOutput {
	return o
}

func (o MetricDimensionResponseArrayOutput) ToMetricDimensionResponseArrayOutputWithContext(ctx context.Context) MetricDimensionResponseArrayOutput {
	return o
}

func (o MetricDimensionResponseArrayOutput) Index(i pulumi.IntInput) MetricDimensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricDimensionResponse {
		return vs[0].([]MetricDimensionResponse)[vs[1].(int)]
	}).(MetricDimensionResponseOutput)
}

// The share mount point.
type MountPointMapResponse struct {
	// Mount point for the share.
	MountPoint string `pulumi:"mountPoint"`
	// Mounting type.
	MountType string `pulumi:"mountType"`
	// ID of the role to which share is mounted.
	RoleId string `pulumi:"roleId"`
	// Role type.
	RoleType string `pulumi:"roleType"`
	// ID of the share mounted to the role VM.
	ShareId string `pulumi:"shareId"`
}

// MountPointMapResponseInput is an input type that accepts MountPointMapResponseArgs and MountPointMapResponseOutput values.
// You can construct a concrete instance of `MountPointMapResponseInput` via:
//
//          MountPointMapResponseArgs{...}
type MountPointMapResponseInput interface {
	pulumi.Input

	ToMountPointMapResponseOutput() MountPointMapResponseOutput
	ToMountPointMapResponseOutputWithContext(context.Context) MountPointMapResponseOutput
}

// The share mount point.
type MountPointMapResponseArgs struct {
	// Mount point for the share.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Mounting type.
	MountType pulumi.StringInput `pulumi:"mountType"`
	// ID of the role to which share is mounted.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Role type.
	RoleType pulumi.StringInput `pulumi:"roleType"`
	// ID of the share mounted to the role VM.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (MountPointMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMapResponse)(nil)).Elem()
}

func (i MountPointMapResponseArgs) ToMountPointMapResponseOutput() MountPointMapResponseOutput {
	return i.ToMountPointMapResponseOutputWithContext(context.Background())
}

func (i MountPointMapResponseArgs) ToMountPointMapResponseOutputWithContext(ctx context.Context) MountPointMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapResponseOutput)
}

// MountPointMapResponseArrayInput is an input type that accepts MountPointMapResponseArray and MountPointMapResponseArrayOutput values.
// You can construct a concrete instance of `MountPointMapResponseArrayInput` via:
//
//          MountPointMapResponseArray{ MountPointMapResponseArgs{...} }
type MountPointMapResponseArrayInput interface {
	pulumi.Input

	ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput
	ToMountPointMapResponseArrayOutputWithContext(context.Context) MountPointMapResponseArrayOutput
}

type MountPointMapResponseArray []MountPointMapResponseInput

func (MountPointMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMapResponse)(nil)).Elem()
}

func (i MountPointMapResponseArray) ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput {
	return i.ToMountPointMapResponseArrayOutputWithContext(context.Background())
}

func (i MountPointMapResponseArray) ToMountPointMapResponseArrayOutputWithContext(ctx context.Context) MountPointMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapResponseArrayOutput)
}

// The share mount point.
type MountPointMapResponseOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutput() MountPointMapResponseOutput {
	return o
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutputWithContext(ctx context.Context) MountPointMapResponseOutput {
	return o
}

// Mount point for the share.
func (o MountPointMapResponseOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Mounting type.
func (o MountPointMapResponseOutput) MountType() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.MountType }).(pulumi.StringOutput)
}

// ID of the role to which share is mounted.
func (o MountPointMapResponseOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleId }).(pulumi.StringOutput)
}

// Role type.
func (o MountPointMapResponseOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleType }).(pulumi.StringOutput)
}

// ID of the share mounted to the role VM.
func (o MountPointMapResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

type MountPointMapResponseArrayOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutputWithContext(ctx context.Context) MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) Index(i pulumi.IntInput) MountPointMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPointMapResponse {
		return vs[0].([]MountPointMapResponse)[vs[1].(int)]
	}).(MountPointMapResponseOutput)
}

// Represents a single status change.
type OrderStatus struct {
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status string `pulumi:"status"`
}

// OrderStatusInput is an input type that accepts OrderStatusArgs and OrderStatusOutput values.
// You can construct a concrete instance of `OrderStatusInput` via:
//
//          OrderStatusArgs{...}
type OrderStatusInput interface {
	pulumi.Input

	ToOrderStatusOutput() OrderStatusOutput
	ToOrderStatusOutputWithContext(context.Context) OrderStatusOutput
}

// Represents a single status change.
type OrderStatusArgs struct {
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status pulumi.StringInput `pulumi:"status"`
}

func (OrderStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (i OrderStatusArgs) ToOrderStatusOutput() OrderStatusOutput {
	return i.ToOrderStatusOutputWithContext(context.Background())
}

func (i OrderStatusArgs) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusOutput)
}

func (i OrderStatusArgs) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return i.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (i OrderStatusArgs) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusOutput).ToOrderStatusPtrOutputWithContext(ctx)
}

// OrderStatusPtrInput is an input type that accepts OrderStatusArgs, OrderStatusPtr and OrderStatusPtrOutput values.
// You can construct a concrete instance of `OrderStatusPtrInput` via:
//
//          OrderStatusArgs{...}
//
//  or:
//
//          nil
type OrderStatusPtrInput interface {
	pulumi.Input

	ToOrderStatusPtrOutput() OrderStatusPtrOutput
	ToOrderStatusPtrOutputWithContext(context.Context) OrderStatusPtrOutput
}

type orderStatusPtrType OrderStatusArgs

func OrderStatusPtr(v *OrderStatusArgs) OrderStatusPtrInput {
	return (*orderStatusPtrType)(v)
}

func (*orderStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatus)(nil)).Elem()
}

func (i *orderStatusPtrType) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return i.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (i *orderStatusPtrType) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusPtrOutput)
}

// Represents a single status change.
type OrderStatusOutput struct{ *pulumi.OutputState }

func (OrderStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatus)(nil)).Elem()
}

func (o OrderStatusOutput) ToOrderStatusOutput() OrderStatusOutput {
	return o
}

func (o OrderStatusOutput) ToOrderStatusOutputWithContext(ctx context.Context) OrderStatusOutput {
	return o
}

func (o OrderStatusOutput) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return o.ToOrderStatusPtrOutputWithContext(context.Background())
}

func (o OrderStatusOutput) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return o.ApplyT(func(v OrderStatus) *OrderStatus {
		return &v
	}).(OrderStatusPtrOutput)
}

// Comments related to this status change.
func (o OrderStatusOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatus) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatus) string { return v.Status }).(pulumi.StringOutput)
}

type OrderStatusPtrOutput struct{ *pulumi.OutputState }

func (OrderStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatus)(nil)).Elem()
}

func (o OrderStatusPtrOutput) ToOrderStatusPtrOutput() OrderStatusPtrOutput {
	return o
}

func (o OrderStatusPtrOutput) ToOrderStatusPtrOutputWithContext(ctx context.Context) OrderStatusPtrOutput {
	return o
}

func (o OrderStatusPtrOutput) Elem() OrderStatusOutput {
	return o.ApplyT(func(v *OrderStatus) OrderStatus { return *v }).(OrderStatusOutput)
}

// Comments related to this status change.
func (o OrderStatusPtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatus) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatus) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Represents a single status change.
type OrderStatusResponse struct {
	// Dictionary to hold generic information which is not stored
	// by the already existing properties
	AdditionalOrderDetails map[string]string `pulumi:"additionalOrderDetails"`
	// Comments related to this status change.
	Comments *string `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status string `pulumi:"status"`
	// Tracking information related to the state in the ordering flow
	TrackingInformation TrackingInfoResponse `pulumi:"trackingInformation"`
	// Time of status update.
	UpdateDateTime string `pulumi:"updateDateTime"`
}

// OrderStatusResponseInput is an input type that accepts OrderStatusResponseArgs and OrderStatusResponseOutput values.
// You can construct a concrete instance of `OrderStatusResponseInput` via:
//
//          OrderStatusResponseArgs{...}
type OrderStatusResponseInput interface {
	pulumi.Input

	ToOrderStatusResponseOutput() OrderStatusResponseOutput
	ToOrderStatusResponseOutputWithContext(context.Context) OrderStatusResponseOutput
}

// Represents a single status change.
type OrderStatusResponseArgs struct {
	// Dictionary to hold generic information which is not stored
	// by the already existing properties
	AdditionalOrderDetails pulumi.StringMapInput `pulumi:"additionalOrderDetails"`
	// Comments related to this status change.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// Status of the order as per the allowed status types.
	Status pulumi.StringInput `pulumi:"status"`
	// Tracking information related to the state in the ordering flow
	TrackingInformation TrackingInfoResponseInput `pulumi:"trackingInformation"`
	// Time of status update.
	UpdateDateTime pulumi.StringInput `pulumi:"updateDateTime"`
}

func (OrderStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusResponse)(nil)).Elem()
}

func (i OrderStatusResponseArgs) ToOrderStatusResponseOutput() OrderStatusResponseOutput {
	return i.ToOrderStatusResponseOutputWithContext(context.Background())
}

func (i OrderStatusResponseArgs) ToOrderStatusResponseOutputWithContext(ctx context.Context) OrderStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseOutput)
}

func (i OrderStatusResponseArgs) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return i.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (i OrderStatusResponseArgs) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseOutput).ToOrderStatusResponsePtrOutputWithContext(ctx)
}

// OrderStatusResponsePtrInput is an input type that accepts OrderStatusResponseArgs, OrderStatusResponsePtr and OrderStatusResponsePtrOutput values.
// You can construct a concrete instance of `OrderStatusResponsePtrInput` via:
//
//          OrderStatusResponseArgs{...}
//
//  or:
//
//          nil
type OrderStatusResponsePtrInput interface {
	pulumi.Input

	ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput
	ToOrderStatusResponsePtrOutputWithContext(context.Context) OrderStatusResponsePtrOutput
}

type orderStatusResponsePtrType OrderStatusResponseArgs

func OrderStatusResponsePtr(v *OrderStatusResponseArgs) OrderStatusResponsePtrInput {
	return (*orderStatusResponsePtrType)(v)
}

func (*orderStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusResponse)(nil)).Elem()
}

func (i *orderStatusResponsePtrType) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return i.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (i *orderStatusResponsePtrType) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponsePtrOutput)
}

// OrderStatusResponseArrayInput is an input type that accepts OrderStatusResponseArray and OrderStatusResponseArrayOutput values.
// You can construct a concrete instance of `OrderStatusResponseArrayInput` via:
//
//          OrderStatusResponseArray{ OrderStatusResponseArgs{...} }
type OrderStatusResponseArrayInput interface {
	pulumi.Input

	ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput
	ToOrderStatusResponseArrayOutputWithContext(context.Context) OrderStatusResponseArrayOutput
}

type OrderStatusResponseArray []OrderStatusResponseInput

func (OrderStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusResponse)(nil)).Elem()
}

func (i OrderStatusResponseArray) ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput {
	return i.ToOrderStatusResponseArrayOutputWithContext(context.Background())
}

func (i OrderStatusResponseArray) ToOrderStatusResponseArrayOutputWithContext(ctx context.Context) OrderStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusResponseArrayOutput)
}

// Represents a single status change.
type OrderStatusResponseOutput struct{ *pulumi.OutputState }

func (OrderStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponseOutput) ToOrderStatusResponseOutput() OrderStatusResponseOutput {
	return o
}

func (o OrderStatusResponseOutput) ToOrderStatusResponseOutputWithContext(ctx context.Context) OrderStatusResponseOutput {
	return o
}

func (o OrderStatusResponseOutput) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return o.ToOrderStatusResponsePtrOutputWithContext(context.Background())
}

func (o OrderStatusResponseOutput) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return o.ApplyT(func(v OrderStatusResponse) *OrderStatusResponse {
		return &v
	}).(OrderStatusResponsePtrOutput)
}

// Dictionary to hold generic information which is not stored
// by the already existing properties
func (o OrderStatusResponseOutput) AdditionalOrderDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrderStatusResponse) map[string]string { return v.AdditionalOrderDetails }).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderStatusResponseOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatusResponse) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Tracking information related to the state in the ordering flow
func (o OrderStatusResponseOutput) TrackingInformation() TrackingInfoResponseOutput {
	return o.ApplyT(func(v OrderStatusResponse) TrackingInfoResponse { return v.TrackingInformation }).(TrackingInfoResponseOutput)
}

// Time of status update.
func (o OrderStatusResponseOutput) UpdateDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatusResponse) string { return v.UpdateDateTime }).(pulumi.StringOutput)
}

type OrderStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (OrderStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponsePtrOutput) ToOrderStatusResponsePtrOutput() OrderStatusResponsePtrOutput {
	return o
}

func (o OrderStatusResponsePtrOutput) ToOrderStatusResponsePtrOutputWithContext(ctx context.Context) OrderStatusResponsePtrOutput {
	return o
}

func (o OrderStatusResponsePtrOutput) Elem() OrderStatusResponseOutput {
	return o.ApplyT(func(v *OrderStatusResponse) OrderStatusResponse { return *v }).(OrderStatusResponseOutput)
}

// Dictionary to hold generic information which is not stored
// by the already existing properties
func (o OrderStatusResponsePtrOutput) AdditionalOrderDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrderStatusResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalOrderDetails
	}).(pulumi.StringMapOutput)
}

// Comments related to this status change.
func (o OrderStatusResponsePtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// Status of the order as per the allowed status types.
func (o OrderStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Tracking information related to the state in the ordering flow
func (o OrderStatusResponsePtrOutput) TrackingInformation() TrackingInfoResponsePtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *TrackingInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TrackingInformation
	}).(TrackingInfoResponsePtrOutput)
}

// Time of status update.
func (o OrderStatusResponsePtrOutput) UpdateDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateDateTime
	}).(pulumi.StringPtrOutput)
}

type OrderStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (OrderStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusResponse)(nil)).Elem()
}

func (o OrderStatusResponseArrayOutput) ToOrderStatusResponseArrayOutput() OrderStatusResponseArrayOutput {
	return o
}

func (o OrderStatusResponseArrayOutput) ToOrderStatusResponseArrayOutputWithContext(ctx context.Context) OrderStatusResponseArrayOutput {
	return o
}

func (o OrderStatusResponseArrayOutput) Index(i pulumi.IntInput) OrderStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderStatusResponse {
		return vs[0].([]OrderStatusResponse)[vs[1].(int)]
	}).(OrderStatusResponseOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetails struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile *string `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId *string `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC *string `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob *string `pulumi:"lastJob"`
}

// RefreshDetailsInput is an input type that accepts RefreshDetailsArgs and RefreshDetailsOutput values.
// You can construct a concrete instance of `RefreshDetailsInput` via:
//
//          RefreshDetailsArgs{...}
type RefreshDetailsInput interface {
	pulumi.Input

	ToRefreshDetailsOutput() RefreshDetailsOutput
	ToRefreshDetailsOutputWithContext(context.Context) RefreshDetailsOutput
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsArgs struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile pulumi.StringPtrInput `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId pulumi.StringPtrInput `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC pulumi.StringPtrInput `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob pulumi.StringPtrInput `pulumi:"lastJob"`
}

func (RefreshDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetails)(nil)).Elem()
}

func (i RefreshDetailsArgs) ToRefreshDetailsOutput() RefreshDetailsOutput {
	return i.ToRefreshDetailsOutputWithContext(context.Background())
}

func (i RefreshDetailsArgs) ToRefreshDetailsOutputWithContext(ctx context.Context) RefreshDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsOutput)
}

func (i RefreshDetailsArgs) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return i.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (i RefreshDetailsArgs) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsOutput).ToRefreshDetailsPtrOutputWithContext(ctx)
}

// RefreshDetailsPtrInput is an input type that accepts RefreshDetailsArgs, RefreshDetailsPtr and RefreshDetailsPtrOutput values.
// You can construct a concrete instance of `RefreshDetailsPtrInput` via:
//
//          RefreshDetailsArgs{...}
//
//  or:
//
//          nil
type RefreshDetailsPtrInput interface {
	pulumi.Input

	ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput
	ToRefreshDetailsPtrOutputWithContext(context.Context) RefreshDetailsPtrOutput
}

type refreshDetailsPtrType RefreshDetailsArgs

func RefreshDetailsPtr(v *RefreshDetailsArgs) RefreshDetailsPtrInput {
	return (*refreshDetailsPtrType)(v)
}

func (*refreshDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetails)(nil)).Elem()
}

func (i *refreshDetailsPtrType) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return i.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (i *refreshDetailsPtrType) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsPtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsOutput struct{ *pulumi.OutputState }

func (RefreshDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetails)(nil)).Elem()
}

func (o RefreshDetailsOutput) ToRefreshDetailsOutput() RefreshDetailsOutput {
	return o
}

func (o RefreshDetailsOutput) ToRefreshDetailsOutputWithContext(ctx context.Context) RefreshDetailsOutput {
	return o
}

func (o RefreshDetailsOutput) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return o.ToRefreshDetailsPtrOutputWithContext(context.Background())
}

func (o RefreshDetailsOutput) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *RefreshDetails {
		return &v
	}).(RefreshDetailsPtrOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.ErrorManifestFile }).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.InProgressRefreshJobId }).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.LastCompletedRefreshJobTimeInUTC }).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetails) *string { return v.LastJob }).(pulumi.StringPtrOutput)
}

type RefreshDetailsPtrOutput struct{ *pulumi.OutputState }

func (RefreshDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetails)(nil)).Elem()
}

func (o RefreshDetailsPtrOutput) ToRefreshDetailsPtrOutput() RefreshDetailsPtrOutput {
	return o
}

func (o RefreshDetailsPtrOutput) ToRefreshDetailsPtrOutputWithContext(ctx context.Context) RefreshDetailsPtrOutput {
	return o
}

func (o RefreshDetailsPtrOutput) Elem() RefreshDetailsOutput {
	return o.ApplyT(func(v *RefreshDetails) RefreshDetails { return *v }).(RefreshDetailsOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.ErrorManifestFile
	}).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsPtrOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.InProgressRefreshJobId
	}).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCompletedRefreshJobTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsPtrOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastJob
	}).(pulumi.StringPtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponse struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile *string `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId *string `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC *string `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob *string `pulumi:"lastJob"`
}

// RefreshDetailsResponseInput is an input type that accepts RefreshDetailsResponseArgs and RefreshDetailsResponseOutput values.
// You can construct a concrete instance of `RefreshDetailsResponseInput` via:
//
//          RefreshDetailsResponseArgs{...}
type RefreshDetailsResponseInput interface {
	pulumi.Input

	ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput
	ToRefreshDetailsResponseOutputWithContext(context.Context) RefreshDetailsResponseOutput
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponseArgs struct {
	// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
	ErrorManifestFile pulumi.StringPtrInput `pulumi:"errorManifestFile"`
	// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
	InProgressRefreshJobId pulumi.StringPtrInput `pulumi:"inProgressRefreshJobId"`
	// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
	LastCompletedRefreshJobTimeInUTC pulumi.StringPtrInput `pulumi:"lastCompletedRefreshJobTimeInUTC"`
	// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
	LastJob pulumi.StringPtrInput `pulumi:"lastJob"`
}

func (RefreshDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetailsResponse)(nil)).Elem()
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput {
	return i.ToRefreshDetailsResponseOutputWithContext(context.Background())
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponseOutputWithContext(ctx context.Context) RefreshDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponseOutput)
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return i.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (i RefreshDetailsResponseArgs) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponseOutput).ToRefreshDetailsResponsePtrOutputWithContext(ctx)
}

// RefreshDetailsResponsePtrInput is an input type that accepts RefreshDetailsResponseArgs, RefreshDetailsResponsePtr and RefreshDetailsResponsePtrOutput values.
// You can construct a concrete instance of `RefreshDetailsResponsePtrInput` via:
//
//          RefreshDetailsResponseArgs{...}
//
//  or:
//
//          nil
type RefreshDetailsResponsePtrInput interface {
	pulumi.Input

	ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput
	ToRefreshDetailsResponsePtrOutputWithContext(context.Context) RefreshDetailsResponsePtrOutput
}

type refreshDetailsResponsePtrType RefreshDetailsResponseArgs

func RefreshDetailsResponsePtr(v *RefreshDetailsResponseArgs) RefreshDetailsResponsePtrInput {
	return (*refreshDetailsResponsePtrType)(v)
}

func (*refreshDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetailsResponse)(nil)).Elem()
}

func (i *refreshDetailsResponsePtrType) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return i.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *refreshDetailsResponsePtrType) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshDetailsResponsePtrOutput)
}

// Fields for tracking refresh job on the share or container.
type RefreshDetailsResponseOutput struct{ *pulumi.OutputState }

func (RefreshDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshDetailsResponse)(nil)).Elem()
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponseOutput() RefreshDetailsResponseOutput {
	return o
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponseOutputWithContext(ctx context.Context) RefreshDetailsResponseOutput {
	return o
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return o.ToRefreshDetailsResponsePtrOutputWithContext(context.Background())
}

func (o RefreshDetailsResponseOutput) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *RefreshDetailsResponse {
		return &v
	}).(RefreshDetailsResponsePtrOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.ErrorManifestFile }).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsResponseOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.InProgressRefreshJobId }).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.LastCompletedRefreshJobTimeInUTC }).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponseOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshDetailsResponse) *string { return v.LastJob }).(pulumi.StringPtrOutput)
}

type RefreshDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (RefreshDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshDetailsResponse)(nil)).Elem()
}

func (o RefreshDetailsResponsePtrOutput) ToRefreshDetailsResponsePtrOutput() RefreshDetailsResponsePtrOutput {
	return o
}

func (o RefreshDetailsResponsePtrOutput) ToRefreshDetailsResponsePtrOutputWithContext(ctx context.Context) RefreshDetailsResponsePtrOutput {
	return o
}

func (o RefreshDetailsResponsePtrOutput) Elem() RefreshDetailsResponseOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) RefreshDetailsResponse { return *v }).(RefreshDetailsResponseOutput)
}

// Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) ErrorManifestFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorManifestFile
	}).(pulumi.StringPtrOutput)
}

// If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.
func (o RefreshDetailsResponsePtrOutput) InProgressRefreshJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InProgressRefreshJobId
	}).(pulumi.StringPtrOutput)
}

// Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) LastCompletedRefreshJobTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastCompletedRefreshJobTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.
func (o RefreshDetailsResponsePtrOutput) LastJob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastJob
	}).(pulumi.StringPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Identity type
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity { return *v }).(ResourceIdentityOutput)
}

// Identity type
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

// Msi identity details of the resource
type ResourceIdentityResponseArgs struct {
	// Service Principal Id backing the Msi
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Home Tenant Id
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse { return *v }).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Fields for tracking resource move
type ResourceMoveDetails struct {
	// Denotes whether move operation is in progress
	OperationInProgress *string `pulumi:"operationInProgress"`
	// Denotes the timeout of the operation to finish
	OperationInProgressLockTimeoutInUTC *string `pulumi:"operationInProgressLockTimeoutInUTC"`
}

// ResourceMoveDetailsInput is an input type that accepts ResourceMoveDetailsArgs and ResourceMoveDetailsOutput values.
// You can construct a concrete instance of `ResourceMoveDetailsInput` via:
//
//          ResourceMoveDetailsArgs{...}
type ResourceMoveDetailsInput interface {
	pulumi.Input

	ToResourceMoveDetailsOutput() ResourceMoveDetailsOutput
	ToResourceMoveDetailsOutputWithContext(context.Context) ResourceMoveDetailsOutput
}

// Fields for tracking resource move
type ResourceMoveDetailsArgs struct {
	// Denotes whether move operation is in progress
	OperationInProgress pulumi.StringPtrInput `pulumi:"operationInProgress"`
	// Denotes the timeout of the operation to finish
	OperationInProgressLockTimeoutInUTC pulumi.StringPtrInput `pulumi:"operationInProgressLockTimeoutInUTC"`
}

func (ResourceMoveDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMoveDetails)(nil)).Elem()
}

func (i ResourceMoveDetailsArgs) ToResourceMoveDetailsOutput() ResourceMoveDetailsOutput {
	return i.ToResourceMoveDetailsOutputWithContext(context.Background())
}

func (i ResourceMoveDetailsArgs) ToResourceMoveDetailsOutputWithContext(ctx context.Context) ResourceMoveDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsOutput)
}

func (i ResourceMoveDetailsArgs) ToResourceMoveDetailsPtrOutput() ResourceMoveDetailsPtrOutput {
	return i.ToResourceMoveDetailsPtrOutputWithContext(context.Background())
}

func (i ResourceMoveDetailsArgs) ToResourceMoveDetailsPtrOutputWithContext(ctx context.Context) ResourceMoveDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsOutput).ToResourceMoveDetailsPtrOutputWithContext(ctx)
}

// ResourceMoveDetailsPtrInput is an input type that accepts ResourceMoveDetailsArgs, ResourceMoveDetailsPtr and ResourceMoveDetailsPtrOutput values.
// You can construct a concrete instance of `ResourceMoveDetailsPtrInput` via:
//
//          ResourceMoveDetailsArgs{...}
//
//  or:
//
//          nil
type ResourceMoveDetailsPtrInput interface {
	pulumi.Input

	ToResourceMoveDetailsPtrOutput() ResourceMoveDetailsPtrOutput
	ToResourceMoveDetailsPtrOutputWithContext(context.Context) ResourceMoveDetailsPtrOutput
}

type resourceMoveDetailsPtrType ResourceMoveDetailsArgs

func ResourceMoveDetailsPtr(v *ResourceMoveDetailsArgs) ResourceMoveDetailsPtrInput {
	return (*resourceMoveDetailsPtrType)(v)
}

func (*resourceMoveDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMoveDetails)(nil)).Elem()
}

func (i *resourceMoveDetailsPtrType) ToResourceMoveDetailsPtrOutput() ResourceMoveDetailsPtrOutput {
	return i.ToResourceMoveDetailsPtrOutputWithContext(context.Background())
}

func (i *resourceMoveDetailsPtrType) ToResourceMoveDetailsPtrOutputWithContext(ctx context.Context) ResourceMoveDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsPtrOutput)
}

// Fields for tracking resource move
type ResourceMoveDetailsOutput struct{ *pulumi.OutputState }

func (ResourceMoveDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMoveDetails)(nil)).Elem()
}

func (o ResourceMoveDetailsOutput) ToResourceMoveDetailsOutput() ResourceMoveDetailsOutput {
	return o
}

func (o ResourceMoveDetailsOutput) ToResourceMoveDetailsOutputWithContext(ctx context.Context) ResourceMoveDetailsOutput {
	return o
}

func (o ResourceMoveDetailsOutput) ToResourceMoveDetailsPtrOutput() ResourceMoveDetailsPtrOutput {
	return o.ToResourceMoveDetailsPtrOutputWithContext(context.Background())
}

func (o ResourceMoveDetailsOutput) ToResourceMoveDetailsPtrOutputWithContext(ctx context.Context) ResourceMoveDetailsPtrOutput {
	return o.ApplyT(func(v ResourceMoveDetails) *ResourceMoveDetails {
		return &v
	}).(ResourceMoveDetailsPtrOutput)
}

// Denotes whether move operation is in progress
func (o ResourceMoveDetailsOutput) OperationInProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMoveDetails) *string { return v.OperationInProgress }).(pulumi.StringPtrOutput)
}

// Denotes the timeout of the operation to finish
func (o ResourceMoveDetailsOutput) OperationInProgressLockTimeoutInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMoveDetails) *string { return v.OperationInProgressLockTimeoutInUTC }).(pulumi.StringPtrOutput)
}

type ResourceMoveDetailsPtrOutput struct{ *pulumi.OutputState }

func (ResourceMoveDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMoveDetails)(nil)).Elem()
}

func (o ResourceMoveDetailsPtrOutput) ToResourceMoveDetailsPtrOutput() ResourceMoveDetailsPtrOutput {
	return o
}

func (o ResourceMoveDetailsPtrOutput) ToResourceMoveDetailsPtrOutputWithContext(ctx context.Context) ResourceMoveDetailsPtrOutput {
	return o
}

func (o ResourceMoveDetailsPtrOutput) Elem() ResourceMoveDetailsOutput {
	return o.ApplyT(func(v *ResourceMoveDetails) ResourceMoveDetails { return *v }).(ResourceMoveDetailsOutput)
}

// Denotes whether move operation is in progress
func (o ResourceMoveDetailsPtrOutput) OperationInProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMoveDetails) *string {
		if v == nil {
			return nil
		}
		return v.OperationInProgress
	}).(pulumi.StringPtrOutput)
}

// Denotes the timeout of the operation to finish
func (o ResourceMoveDetailsPtrOutput) OperationInProgressLockTimeoutInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMoveDetails) *string {
		if v == nil {
			return nil
		}
		return v.OperationInProgressLockTimeoutInUTC
	}).(pulumi.StringPtrOutput)
}

// Fields for tracking resource move
type ResourceMoveDetailsResponse struct {
	// Denotes whether move operation is in progress
	OperationInProgress *string `pulumi:"operationInProgress"`
	// Denotes the timeout of the operation to finish
	OperationInProgressLockTimeoutInUTC *string `pulumi:"operationInProgressLockTimeoutInUTC"`
}

// ResourceMoveDetailsResponseInput is an input type that accepts ResourceMoveDetailsResponseArgs and ResourceMoveDetailsResponseOutput values.
// You can construct a concrete instance of `ResourceMoveDetailsResponseInput` via:
//
//          ResourceMoveDetailsResponseArgs{...}
type ResourceMoveDetailsResponseInput interface {
	pulumi.Input

	ToResourceMoveDetailsResponseOutput() ResourceMoveDetailsResponseOutput
	ToResourceMoveDetailsResponseOutputWithContext(context.Context) ResourceMoveDetailsResponseOutput
}

// Fields for tracking resource move
type ResourceMoveDetailsResponseArgs struct {
	// Denotes whether move operation is in progress
	OperationInProgress pulumi.StringPtrInput `pulumi:"operationInProgress"`
	// Denotes the timeout of the operation to finish
	OperationInProgressLockTimeoutInUTC pulumi.StringPtrInput `pulumi:"operationInProgressLockTimeoutInUTC"`
}

func (ResourceMoveDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMoveDetailsResponse)(nil)).Elem()
}

func (i ResourceMoveDetailsResponseArgs) ToResourceMoveDetailsResponseOutput() ResourceMoveDetailsResponseOutput {
	return i.ToResourceMoveDetailsResponseOutputWithContext(context.Background())
}

func (i ResourceMoveDetailsResponseArgs) ToResourceMoveDetailsResponseOutputWithContext(ctx context.Context) ResourceMoveDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsResponseOutput)
}

func (i ResourceMoveDetailsResponseArgs) ToResourceMoveDetailsResponsePtrOutput() ResourceMoveDetailsResponsePtrOutput {
	return i.ToResourceMoveDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ResourceMoveDetailsResponseArgs) ToResourceMoveDetailsResponsePtrOutputWithContext(ctx context.Context) ResourceMoveDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsResponseOutput).ToResourceMoveDetailsResponsePtrOutputWithContext(ctx)
}

// ResourceMoveDetailsResponsePtrInput is an input type that accepts ResourceMoveDetailsResponseArgs, ResourceMoveDetailsResponsePtr and ResourceMoveDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ResourceMoveDetailsResponsePtrInput` via:
//
//          ResourceMoveDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ResourceMoveDetailsResponsePtrInput interface {
	pulumi.Input

	ToResourceMoveDetailsResponsePtrOutput() ResourceMoveDetailsResponsePtrOutput
	ToResourceMoveDetailsResponsePtrOutputWithContext(context.Context) ResourceMoveDetailsResponsePtrOutput
}

type resourceMoveDetailsResponsePtrType ResourceMoveDetailsResponseArgs

func ResourceMoveDetailsResponsePtr(v *ResourceMoveDetailsResponseArgs) ResourceMoveDetailsResponsePtrInput {
	return (*resourceMoveDetailsResponsePtrType)(v)
}

func (*resourceMoveDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMoveDetailsResponse)(nil)).Elem()
}

func (i *resourceMoveDetailsResponsePtrType) ToResourceMoveDetailsResponsePtrOutput() ResourceMoveDetailsResponsePtrOutput {
	return i.ToResourceMoveDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *resourceMoveDetailsResponsePtrType) ToResourceMoveDetailsResponsePtrOutputWithContext(ctx context.Context) ResourceMoveDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMoveDetailsResponsePtrOutput)
}

// Fields for tracking resource move
type ResourceMoveDetailsResponseOutput struct{ *pulumi.OutputState }

func (ResourceMoveDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceMoveDetailsResponse)(nil)).Elem()
}

func (o ResourceMoveDetailsResponseOutput) ToResourceMoveDetailsResponseOutput() ResourceMoveDetailsResponseOutput {
	return o
}

func (o ResourceMoveDetailsResponseOutput) ToResourceMoveDetailsResponseOutputWithContext(ctx context.Context) ResourceMoveDetailsResponseOutput {
	return o
}

func (o ResourceMoveDetailsResponseOutput) ToResourceMoveDetailsResponsePtrOutput() ResourceMoveDetailsResponsePtrOutput {
	return o.ToResourceMoveDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceMoveDetailsResponseOutput) ToResourceMoveDetailsResponsePtrOutputWithContext(ctx context.Context) ResourceMoveDetailsResponsePtrOutput {
	return o.ApplyT(func(v ResourceMoveDetailsResponse) *ResourceMoveDetailsResponse {
		return &v
	}).(ResourceMoveDetailsResponsePtrOutput)
}

// Denotes whether move operation is in progress
func (o ResourceMoveDetailsResponseOutput) OperationInProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMoveDetailsResponse) *string { return v.OperationInProgress }).(pulumi.StringPtrOutput)
}

// Denotes the timeout of the operation to finish
func (o ResourceMoveDetailsResponseOutput) OperationInProgressLockTimeoutInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceMoveDetailsResponse) *string { return v.OperationInProgressLockTimeoutInUTC }).(pulumi.StringPtrOutput)
}

type ResourceMoveDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceMoveDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMoveDetailsResponse)(nil)).Elem()
}

func (o ResourceMoveDetailsResponsePtrOutput) ToResourceMoveDetailsResponsePtrOutput() ResourceMoveDetailsResponsePtrOutput {
	return o
}

func (o ResourceMoveDetailsResponsePtrOutput) ToResourceMoveDetailsResponsePtrOutputWithContext(ctx context.Context) ResourceMoveDetailsResponsePtrOutput {
	return o
}

func (o ResourceMoveDetailsResponsePtrOutput) Elem() ResourceMoveDetailsResponseOutput {
	return o.ApplyT(func(v *ResourceMoveDetailsResponse) ResourceMoveDetailsResponse { return *v }).(ResourceMoveDetailsResponseOutput)
}

// Denotes whether move operation is in progress
func (o ResourceMoveDetailsResponsePtrOutput) OperationInProgress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMoveDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationInProgress
	}).(pulumi.StringPtrOutput)
}

// Denotes the timeout of the operation to finish
func (o ResourceMoveDetailsResponsePtrOutput) OperationInProgressLockTimeoutInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceMoveDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationInProgressLockTimeoutInUTC
	}).(pulumi.StringPtrOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponse struct {
	// Type of access to be allowed on the share for this user.
	AccessType string `pulumi:"accessType"`
	// The share ID.
	ShareId string `pulumi:"shareId"`
}

// ShareAccessRightResponseInput is an input type that accepts ShareAccessRightResponseArgs and ShareAccessRightResponseOutput values.
// You can construct a concrete instance of `ShareAccessRightResponseInput` via:
//
//          ShareAccessRightResponseArgs{...}
type ShareAccessRightResponseInput interface {
	pulumi.Input

	ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput
	ToShareAccessRightResponseOutputWithContext(context.Context) ShareAccessRightResponseOutput
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponseArgs struct {
	// Type of access to be allowed on the share for this user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// The share ID.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (ShareAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRightResponse)(nil)).Elem()
}

func (i ShareAccessRightResponseArgs) ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput {
	return i.ToShareAccessRightResponseOutputWithContext(context.Background())
}

func (i ShareAccessRightResponseArgs) ToShareAccessRightResponseOutputWithContext(ctx context.Context) ShareAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightResponseOutput)
}

// ShareAccessRightResponseArrayInput is an input type that accepts ShareAccessRightResponseArray and ShareAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `ShareAccessRightResponseArrayInput` via:
//
//          ShareAccessRightResponseArray{ ShareAccessRightResponseArgs{...} }
type ShareAccessRightResponseArrayInput interface {
	pulumi.Input

	ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput
	ToShareAccessRightResponseArrayOutputWithContext(context.Context) ShareAccessRightResponseArrayOutput
}

type ShareAccessRightResponseArray []ShareAccessRightResponseInput

func (ShareAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRightResponse)(nil)).Elem()
}

func (i ShareAccessRightResponseArray) ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput {
	return i.ToShareAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i ShareAccessRightResponseArray) ToShareAccessRightResponseArrayOutputWithContext(ctx context.Context) ShareAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareAccessRightResponseArrayOutput)
}

// Specifies the mapping between this particular user and the type of access he has on shares on this device.
type ShareAccessRightResponseOutput struct{ *pulumi.OutputState }

func (ShareAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareAccessRightResponse)(nil)).Elem()
}

func (o ShareAccessRightResponseOutput) ToShareAccessRightResponseOutput() ShareAccessRightResponseOutput {
	return o
}

func (o ShareAccessRightResponseOutput) ToShareAccessRightResponseOutputWithContext(ctx context.Context) ShareAccessRightResponseOutput {
	return o
}

// Type of access to be allowed on the share for this user.
func (o ShareAccessRightResponseOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRightResponse) string { return v.AccessType }).(pulumi.StringOutput)
}

// The share ID.
func (o ShareAccessRightResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareAccessRightResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

type ShareAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareAccessRightResponse)(nil)).Elem()
}

func (o ShareAccessRightResponseArrayOutput) ToShareAccessRightResponseArrayOutput() ShareAccessRightResponseArrayOutput {
	return o
}

func (o ShareAccessRightResponseArrayOutput) ToShareAccessRightResponseArrayOutputWithContext(ctx context.Context) ShareAccessRightResponseArrayOutput {
	return o
}

func (o ShareAccessRightResponseArrayOutput) Index(i pulumi.IntInput) ShareAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareAccessRightResponse {
		return vs[0].([]ShareAccessRightResponse)[vs[1].(int)]
	}).(ShareAccessRightResponseOutput)
}

// The SKU type.
type Sku struct {
	// SKU name.
	Name *string `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The SKU type.
type SkuArgs struct {
	// SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The SKU type.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// SKU name.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// SKU name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The SKU type.
type SkuResponse struct {
	// SKU name.
	Name *string `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The SKU type.
type SkuResponseArgs struct {
	// SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The SKU tier. This is based on the SKU name.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The SKU type.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// SKU name.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// SKU name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU tier. This is based on the SKU name.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type SubscriptionRegisteredFeatures struct {
	Name  *string `pulumi:"name"`
	State *string `pulumi:"state"`
}

// SubscriptionRegisteredFeaturesInput is an input type that accepts SubscriptionRegisteredFeaturesArgs and SubscriptionRegisteredFeaturesOutput values.
// You can construct a concrete instance of `SubscriptionRegisteredFeaturesInput` via:
//
//          SubscriptionRegisteredFeaturesArgs{...}
type SubscriptionRegisteredFeaturesInput interface {
	pulumi.Input

	ToSubscriptionRegisteredFeaturesOutput() SubscriptionRegisteredFeaturesOutput
	ToSubscriptionRegisteredFeaturesOutputWithContext(context.Context) SubscriptionRegisteredFeaturesOutput
}

type SubscriptionRegisteredFeaturesArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SubscriptionRegisteredFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i SubscriptionRegisteredFeaturesArgs) ToSubscriptionRegisteredFeaturesOutput() SubscriptionRegisteredFeaturesOutput {
	return i.ToSubscriptionRegisteredFeaturesOutputWithContext(context.Background())
}

func (i SubscriptionRegisteredFeaturesArgs) ToSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionRegisteredFeaturesOutput)
}

// SubscriptionRegisteredFeaturesArrayInput is an input type that accepts SubscriptionRegisteredFeaturesArray and SubscriptionRegisteredFeaturesArrayOutput values.
// You can construct a concrete instance of `SubscriptionRegisteredFeaturesArrayInput` via:
//
//          SubscriptionRegisteredFeaturesArray{ SubscriptionRegisteredFeaturesArgs{...} }
type SubscriptionRegisteredFeaturesArrayInput interface {
	pulumi.Input

	ToSubscriptionRegisteredFeaturesArrayOutput() SubscriptionRegisteredFeaturesArrayOutput
	ToSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Context) SubscriptionRegisteredFeaturesArrayOutput
}

type SubscriptionRegisteredFeaturesArray []SubscriptionRegisteredFeaturesInput

func (SubscriptionRegisteredFeaturesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i SubscriptionRegisteredFeaturesArray) ToSubscriptionRegisteredFeaturesArrayOutput() SubscriptionRegisteredFeaturesArrayOutput {
	return i.ToSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Background())
}

func (i SubscriptionRegisteredFeaturesArray) ToSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionRegisteredFeaturesArrayOutput)
}

type SubscriptionRegisteredFeaturesOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesOutput) ToSubscriptionRegisteredFeaturesOutput() SubscriptionRegisteredFeaturesOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesOutput) ToSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeatures) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SubscriptionRegisteredFeaturesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeatures) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SubscriptionRegisteredFeaturesArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesArrayOutput) ToSubscriptionRegisteredFeaturesArrayOutput() SubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesArrayOutput) ToSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesArrayOutput) Index(i pulumi.IntInput) SubscriptionRegisteredFeaturesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionRegisteredFeatures {
		return vs[0].([]SubscriptionRegisteredFeatures)[vs[1].(int)]
	}).(SubscriptionRegisteredFeaturesOutput)
}

type SubscriptionRegisteredFeaturesResponse struct {
	Name  *string `pulumi:"name"`
	State *string `pulumi:"state"`
}

// SubscriptionRegisteredFeaturesResponseInput is an input type that accepts SubscriptionRegisteredFeaturesResponseArgs and SubscriptionRegisteredFeaturesResponseOutput values.
// You can construct a concrete instance of `SubscriptionRegisteredFeaturesResponseInput` via:
//
//          SubscriptionRegisteredFeaturesResponseArgs{...}
type SubscriptionRegisteredFeaturesResponseInput interface {
	pulumi.Input

	ToSubscriptionRegisteredFeaturesResponseOutput() SubscriptionRegisteredFeaturesResponseOutput
	ToSubscriptionRegisteredFeaturesResponseOutputWithContext(context.Context) SubscriptionRegisteredFeaturesResponseOutput
}

type SubscriptionRegisteredFeaturesResponseArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SubscriptionRegisteredFeaturesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (i SubscriptionRegisteredFeaturesResponseArgs) ToSubscriptionRegisteredFeaturesResponseOutput() SubscriptionRegisteredFeaturesResponseOutput {
	return i.ToSubscriptionRegisteredFeaturesResponseOutputWithContext(context.Background())
}

func (i SubscriptionRegisteredFeaturesResponseArgs) ToSubscriptionRegisteredFeaturesResponseOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionRegisteredFeaturesResponseOutput)
}

// SubscriptionRegisteredFeaturesResponseArrayInput is an input type that accepts SubscriptionRegisteredFeaturesResponseArray and SubscriptionRegisteredFeaturesResponseArrayOutput values.
// You can construct a concrete instance of `SubscriptionRegisteredFeaturesResponseArrayInput` via:
//
//          SubscriptionRegisteredFeaturesResponseArray{ SubscriptionRegisteredFeaturesResponseArgs{...} }
type SubscriptionRegisteredFeaturesResponseArrayInput interface {
	pulumi.Input

	ToSubscriptionRegisteredFeaturesResponseArrayOutput() SubscriptionRegisteredFeaturesResponseArrayOutput
	ToSubscriptionRegisteredFeaturesResponseArrayOutputWithContext(context.Context) SubscriptionRegisteredFeaturesResponseArrayOutput
}

type SubscriptionRegisteredFeaturesResponseArray []SubscriptionRegisteredFeaturesResponseInput

func (SubscriptionRegisteredFeaturesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (i SubscriptionRegisteredFeaturesResponseArray) ToSubscriptionRegisteredFeaturesResponseArrayOutput() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return i.ToSubscriptionRegisteredFeaturesResponseArrayOutputWithContext(context.Background())
}

func (i SubscriptionRegisteredFeaturesResponseArray) ToSubscriptionRegisteredFeaturesResponseArrayOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionRegisteredFeaturesResponseArrayOutput)
}

type SubscriptionRegisteredFeaturesResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesResponseOutput) ToSubscriptionRegisteredFeaturesResponseOutput() SubscriptionRegisteredFeaturesResponseOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseOutput) ToSubscriptionRegisteredFeaturesResponseOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeaturesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SubscriptionRegisteredFeaturesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeaturesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SubscriptionRegisteredFeaturesResponseArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) ToSubscriptionRegisteredFeaturesResponseArrayOutput() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) ToSubscriptionRegisteredFeaturesResponseArrayOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) Index(i pulumi.IntInput) SubscriptionRegisteredFeaturesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionRegisteredFeaturesResponse {
		return vs[0].([]SubscriptionRegisteredFeaturesResponse)[vs[1].(int)]
	}).(SubscriptionRegisteredFeaturesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// Tracking courier information.
type TrackingInfoResponse struct {
	// Name of the carrier used in the delivery.
	CarrierName *string `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber *string `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId *string `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl *string `pulumi:"trackingUrl"`
}

// TrackingInfoResponseInput is an input type that accepts TrackingInfoResponseArgs and TrackingInfoResponseOutput values.
// You can construct a concrete instance of `TrackingInfoResponseInput` via:
//
//          TrackingInfoResponseArgs{...}
type TrackingInfoResponseInput interface {
	pulumi.Input

	ToTrackingInfoResponseOutput() TrackingInfoResponseOutput
	ToTrackingInfoResponseOutputWithContext(context.Context) TrackingInfoResponseOutput
}

// Tracking courier information.
type TrackingInfoResponseArgs struct {
	// Name of the carrier used in the delivery.
	CarrierName pulumi.StringPtrInput `pulumi:"carrierName"`
	// Serial number of the device being tracked.
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// Tracking ID of the shipment.
	TrackingId pulumi.StringPtrInput `pulumi:"trackingId"`
	// Tracking URL of the shipment.
	TrackingUrl pulumi.StringPtrInput `pulumi:"trackingUrl"`
}

func (TrackingInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfoResponse)(nil)).Elem()
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponseOutput() TrackingInfoResponseOutput {
	return i.ToTrackingInfoResponseOutputWithContext(context.Background())
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponseOutputWithContext(ctx context.Context) TrackingInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponseOutput)
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponsePtrOutput() TrackingInfoResponsePtrOutput {
	return i.ToTrackingInfoResponsePtrOutputWithContext(context.Background())
}

func (i TrackingInfoResponseArgs) ToTrackingInfoResponsePtrOutputWithContext(ctx context.Context) TrackingInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponseOutput).ToTrackingInfoResponsePtrOutputWithContext(ctx)
}

// TrackingInfoResponsePtrInput is an input type that accepts TrackingInfoResponseArgs, TrackingInfoResponsePtr and TrackingInfoResponsePtrOutput values.
// You can construct a concrete instance of `TrackingInfoResponsePtrInput` via:
//
//          TrackingInfoResponseArgs{...}
//
//  or:
//
//          nil
type TrackingInfoResponsePtrInput interface {
	pulumi.Input

	ToTrackingInfoResponsePtrOutput() TrackingInfoResponsePtrOutput
	ToTrackingInfoResponsePtrOutputWithContext(context.Context) TrackingInfoResponsePtrOutput
}

type trackingInfoResponsePtrType TrackingInfoResponseArgs

func TrackingInfoResponsePtr(v *TrackingInfoResponseArgs) TrackingInfoResponsePtrInput {
	return (*trackingInfoResponsePtrType)(v)
}

func (*trackingInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrackingInfoResponse)(nil)).Elem()
}

func (i *trackingInfoResponsePtrType) ToTrackingInfoResponsePtrOutput() TrackingInfoResponsePtrOutput {
	return i.ToTrackingInfoResponsePtrOutputWithContext(context.Background())
}

func (i *trackingInfoResponsePtrType) ToTrackingInfoResponsePtrOutputWithContext(ctx context.Context) TrackingInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponsePtrOutput)
}

// TrackingInfoResponseArrayInput is an input type that accepts TrackingInfoResponseArray and TrackingInfoResponseArrayOutput values.
// You can construct a concrete instance of `TrackingInfoResponseArrayInput` via:
//
//          TrackingInfoResponseArray{ TrackingInfoResponseArgs{...} }
type TrackingInfoResponseArrayInput interface {
	pulumi.Input

	ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput
	ToTrackingInfoResponseArrayOutputWithContext(context.Context) TrackingInfoResponseArrayOutput
}

type TrackingInfoResponseArray []TrackingInfoResponseInput

func (TrackingInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrackingInfoResponse)(nil)).Elem()
}

func (i TrackingInfoResponseArray) ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput {
	return i.ToTrackingInfoResponseArrayOutputWithContext(context.Background())
}

func (i TrackingInfoResponseArray) ToTrackingInfoResponseArrayOutputWithContext(ctx context.Context) TrackingInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrackingInfoResponseArrayOutput)
}

// Tracking courier information.
type TrackingInfoResponseOutput struct{ *pulumi.OutputState }

func (TrackingInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackingInfoResponse)(nil)).Elem()
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponseOutput() TrackingInfoResponseOutput {
	return o
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponseOutputWithContext(ctx context.Context) TrackingInfoResponseOutput {
	return o
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponsePtrOutput() TrackingInfoResponsePtrOutput {
	return o.ToTrackingInfoResponsePtrOutputWithContext(context.Background())
}

func (o TrackingInfoResponseOutput) ToTrackingInfoResponsePtrOutputWithContext(ctx context.Context) TrackingInfoResponsePtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *TrackingInfoResponse {
		return &v
	}).(TrackingInfoResponsePtrOutput)
}

// Name of the carrier used in the delivery.
func (o TrackingInfoResponseOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.CarrierName }).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o TrackingInfoResponseOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// Tracking ID of the shipment.
func (o TrackingInfoResponseOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.TrackingId }).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o TrackingInfoResponseOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrackingInfoResponse) *string { return v.TrackingUrl }).(pulumi.StringPtrOutput)
}

type TrackingInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (TrackingInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrackingInfoResponse)(nil)).Elem()
}

func (o TrackingInfoResponsePtrOutput) ToTrackingInfoResponsePtrOutput() TrackingInfoResponsePtrOutput {
	return o
}

func (o TrackingInfoResponsePtrOutput) ToTrackingInfoResponsePtrOutputWithContext(ctx context.Context) TrackingInfoResponsePtrOutput {
	return o
}

func (o TrackingInfoResponsePtrOutput) Elem() TrackingInfoResponseOutput {
	return o.ApplyT(func(v *TrackingInfoResponse) TrackingInfoResponse { return *v }).(TrackingInfoResponseOutput)
}

// Name of the carrier used in the delivery.
func (o TrackingInfoResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrackingInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// Serial number of the device being tracked.
func (o TrackingInfoResponsePtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrackingInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// Tracking ID of the shipment.
func (o TrackingInfoResponsePtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrackingInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// Tracking URL of the shipment.
func (o TrackingInfoResponsePtrOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrackingInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrackingUrl
	}).(pulumi.StringPtrOutput)
}

type TrackingInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (TrackingInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrackingInfoResponse)(nil)).Elem()
}

func (o TrackingInfoResponseArrayOutput) ToTrackingInfoResponseArrayOutput() TrackingInfoResponseArrayOutput {
	return o
}

func (o TrackingInfoResponseArrayOutput) ToTrackingInfoResponseArrayOutputWithContext(ctx context.Context) TrackingInfoResponseArrayOutput {
	return o
}

func (o TrackingInfoResponseArrayOutput) Index(i pulumi.IntInput) TrackingInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrackingInfoResponse {
		return vs[0].([]TrackingInfoResponse)[vs[1].(int)]
	}).(TrackingInfoResponseOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRight struct {
	// Type of access to be allowed for the user.
	AccessType string `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId string `pulumi:"userId"`
}

// UserAccessRightInput is an input type that accepts UserAccessRightArgs and UserAccessRightOutput values.
// You can construct a concrete instance of `UserAccessRightInput` via:
//
//          UserAccessRightArgs{...}
type UserAccessRightInput interface {
	pulumi.Input

	ToUserAccessRightOutput() UserAccessRightOutput
	ToUserAccessRightOutputWithContext(context.Context) UserAccessRightOutput
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightArgs struct {
	// Type of access to be allowed for the user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (UserAccessRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRight)(nil)).Elem()
}

func (i UserAccessRightArgs) ToUserAccessRightOutput() UserAccessRightOutput {
	return i.ToUserAccessRightOutputWithContext(context.Background())
}

func (i UserAccessRightArgs) ToUserAccessRightOutputWithContext(ctx context.Context) UserAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightOutput)
}

// UserAccessRightArrayInput is an input type that accepts UserAccessRightArray and UserAccessRightArrayOutput values.
// You can construct a concrete instance of `UserAccessRightArrayInput` via:
//
//          UserAccessRightArray{ UserAccessRightArgs{...} }
type UserAccessRightArrayInput interface {
	pulumi.Input

	ToUserAccessRightArrayOutput() UserAccessRightArrayOutput
	ToUserAccessRightArrayOutputWithContext(context.Context) UserAccessRightArrayOutput
}

type UserAccessRightArray []UserAccessRightInput

func (UserAccessRightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRight)(nil)).Elem()
}

func (i UserAccessRightArray) ToUserAccessRightArrayOutput() UserAccessRightArrayOutput {
	return i.ToUserAccessRightArrayOutputWithContext(context.Background())
}

func (i UserAccessRightArray) ToUserAccessRightArrayOutputWithContext(ctx context.Context) UserAccessRightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightArrayOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightOutput struct{ *pulumi.OutputState }

func (UserAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRight)(nil)).Elem()
}

func (o UserAccessRightOutput) ToUserAccessRightOutput() UserAccessRightOutput {
	return o
}

func (o UserAccessRightOutput) ToUserAccessRightOutputWithContext(ctx context.Context) UserAccessRightOutput {
	return o
}

// Type of access to be allowed for the user.
func (o UserAccessRightOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRight) string { return v.AccessType }).(pulumi.StringOutput)
}

// User ID (already existing in the device).
func (o UserAccessRightOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRight) string { return v.UserId }).(pulumi.StringOutput)
}

type UserAccessRightArrayOutput struct{ *pulumi.OutputState }

func (UserAccessRightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRight)(nil)).Elem()
}

func (o UserAccessRightArrayOutput) ToUserAccessRightArrayOutput() UserAccessRightArrayOutput {
	return o
}

func (o UserAccessRightArrayOutput) ToUserAccessRightArrayOutputWithContext(ctx context.Context) UserAccessRightArrayOutput {
	return o
}

func (o UserAccessRightArrayOutput) Index(i pulumi.IntInput) UserAccessRightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserAccessRight {
		return vs[0].([]UserAccessRight)[vs[1].(int)]
	}).(UserAccessRightOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponse struct {
	// Type of access to be allowed for the user.
	AccessType string `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId string `pulumi:"userId"`
}

// UserAccessRightResponseInput is an input type that accepts UserAccessRightResponseArgs and UserAccessRightResponseOutput values.
// You can construct a concrete instance of `UserAccessRightResponseInput` via:
//
//          UserAccessRightResponseArgs{...}
type UserAccessRightResponseInput interface {
	pulumi.Input

	ToUserAccessRightResponseOutput() UserAccessRightResponseOutput
	ToUserAccessRightResponseOutputWithContext(context.Context) UserAccessRightResponseOutput
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponseArgs struct {
	// Type of access to be allowed for the user.
	AccessType pulumi.StringInput `pulumi:"accessType"`
	// User ID (already existing in the device).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (UserAccessRightResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRightResponse)(nil)).Elem()
}

func (i UserAccessRightResponseArgs) ToUserAccessRightResponseOutput() UserAccessRightResponseOutput {
	return i.ToUserAccessRightResponseOutputWithContext(context.Background())
}

func (i UserAccessRightResponseArgs) ToUserAccessRightResponseOutputWithContext(ctx context.Context) UserAccessRightResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightResponseOutput)
}

// UserAccessRightResponseArrayInput is an input type that accepts UserAccessRightResponseArray and UserAccessRightResponseArrayOutput values.
// You can construct a concrete instance of `UserAccessRightResponseArrayInput` via:
//
//          UserAccessRightResponseArray{ UserAccessRightResponseArgs{...} }
type UserAccessRightResponseArrayInput interface {
	pulumi.Input

	ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput
	ToUserAccessRightResponseArrayOutputWithContext(context.Context) UserAccessRightResponseArrayOutput
}

type UserAccessRightResponseArray []UserAccessRightResponseInput

func (UserAccessRightResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRightResponse)(nil)).Elem()
}

func (i UserAccessRightResponseArray) ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput {
	return i.ToUserAccessRightResponseArrayOutputWithContext(context.Background())
}

func (i UserAccessRightResponseArray) ToUserAccessRightResponseArrayOutputWithContext(ctx context.Context) UserAccessRightResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessRightResponseArrayOutput)
}

// The mapping between a particular user and the access type on the SMB share.
type UserAccessRightResponseOutput struct{ *pulumi.OutputState }

func (UserAccessRightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAccessRightResponse)(nil)).Elem()
}

func (o UserAccessRightResponseOutput) ToUserAccessRightResponseOutput() UserAccessRightResponseOutput {
	return o
}

func (o UserAccessRightResponseOutput) ToUserAccessRightResponseOutputWithContext(ctx context.Context) UserAccessRightResponseOutput {
	return o
}

// Type of access to be allowed for the user.
func (o UserAccessRightResponseOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRightResponse) string { return v.AccessType }).(pulumi.StringOutput)
}

// User ID (already existing in the device).
func (o UserAccessRightResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAccessRightResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type UserAccessRightResponseArrayOutput struct{ *pulumi.OutputState }

func (UserAccessRightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAccessRightResponse)(nil)).Elem()
}

func (o UserAccessRightResponseArrayOutput) ToUserAccessRightResponseArrayOutput() UserAccessRightResponseArrayOutput {
	return o
}

func (o UserAccessRightResponseArrayOutput) ToUserAccessRightResponseArrayOutputWithContext(ctx context.Context) UserAccessRightResponseArrayOutput {
	return o
}

func (o UserAccessRightResponseArrayOutput) Index(i pulumi.IntInput) UserAccessRightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserAccessRightResponse {
		return vs[0].([]UserAccessRightResponse)[vs[1].(int)]
	}).(UserAccessRightResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressOutput{})
	pulumi.RegisterOutputType(AddressPtrOutput{})
	pulumi.RegisterOutputType(AddressResponseOutput{})
	pulumi.RegisterOutputType(AddressResponsePtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureContainerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ClientAccessRightOutput{})
	pulumi.RegisterOutputType(ClientAccessRightArrayOutput{})
	pulumi.RegisterOutputType(ClientAccessRightResponseOutput{})
	pulumi.RegisterOutputType(ClientAccessRightResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(EdgeProfileOutput{})
	pulumi.RegisterOutputType(EdgeProfilePtrOutput{})
	pulumi.RegisterOutputType(EdgeProfileResponseOutput{})
	pulumi.RegisterOutputType(EdgeProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionPtrOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionResponseOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(MetricConfigurationOutput{})
	pulumi.RegisterOutputType(MetricConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MetricConfigurationResponseOutput{})
	pulumi.RegisterOutputType(MetricConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricCounterOutput{})
	pulumi.RegisterOutputType(MetricCounterArrayOutput{})
	pulumi.RegisterOutputType(MetricCounterResponseOutput{})
	pulumi.RegisterOutputType(MetricCounterResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricCounterSetOutput{})
	pulumi.RegisterOutputType(MetricCounterSetArrayOutput{})
	pulumi.RegisterOutputType(MetricCounterSetResponseOutput{})
	pulumi.RegisterOutputType(MetricCounterSetResponseArrayOutput{})
	pulumi.RegisterOutputType(MetricDimensionOutput{})
	pulumi.RegisterOutputType(MetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(MetricDimensionResponseOutput{})
	pulumi.RegisterOutputType(MetricDimensionResponseArrayOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseArrayOutput{})
	pulumi.RegisterOutputType(OrderStatusOutput{})
	pulumi.RegisterOutputType(OrderStatusPtrOutput{})
	pulumi.RegisterOutputType(OrderStatusResponseOutput{})
	pulumi.RegisterOutputType(OrderStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(RefreshDetailsOutput{})
	pulumi.RegisterOutputType(RefreshDetailsPtrOutput{})
	pulumi.RegisterOutputType(RefreshDetailsResponseOutput{})
	pulumi.RegisterOutputType(RefreshDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceMoveDetailsOutput{})
	pulumi.RegisterOutputType(ResourceMoveDetailsPtrOutput{})
	pulumi.RegisterOutputType(ResourceMoveDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceMoveDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ShareAccessRightResponseOutput{})
	pulumi.RegisterOutputType(ShareAccessRightResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesArrayOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(TrackingInfoResponseOutput{})
	pulumi.RegisterOutputType(TrackingInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(TrackingInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAccessRightOutput{})
	pulumi.RegisterOutputType(UserAccessRightArrayOutput{})
	pulumi.RegisterOutputType(UserAccessRightResponseOutput{})
	pulumi.RegisterOutputType(UserAccessRightResponseArrayOutput{})
}
