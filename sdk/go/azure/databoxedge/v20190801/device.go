// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Data Box Edge/Gateway device.
//
// Deprecated: Version 2019-08-01 will be removed in v2 of the provider.
type Device struct {
	pulumi.CustomResourceState

	// Type of compute roles configured.
	ConfiguredRoleTypes pulumi.StringArrayOutput `pulumi:"configuredRoleTypes"`
	// The Data Box Edge/Gateway device culture.
	Culture pulumi.StringOutput `pulumi:"culture"`
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrOutput `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The device software version number of the device (eg: 1.2.18105.6).
	DeviceHcsVersion pulumi.StringOutput `pulumi:"deviceHcsVersion"`
	// The Data Box Edge/Gateway device local capacity in MB.
	DeviceLocalCapacity pulumi.Float64Output `pulumi:"deviceLocalCapacity"`
	// The Data Box Edge/Gateway device model.
	DeviceModel pulumi.StringOutput `pulumi:"deviceModel"`
	// The Data Box Edge/Gateway device software version.
	DeviceSoftwareVersion pulumi.StringOutput `pulumi:"deviceSoftwareVersion"`
	// The type of the Data Box Edge/Gateway device.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// The etag for the devices.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The Data Box Edge/Gateway device name.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringOutput `pulumi:"location"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription pulumi.StringPtrOutput `pulumi:"modelDescription"`
	// The object name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of nodes in the cluster.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The Serial Number of Data Box Edge/Gateway device.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// The SKU type.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Data Box Edge/Gateway device timezone.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The hierarchical type of the object.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDevice registers a new resource with the given unique name, arguments, and options.
func NewDevice(ctx *pulumi.Context,
	name string, args *DeviceArgs, opts ...pulumi.ResourceOption) (*Device, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:databoxedge:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20190301:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20190701:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20200501preview:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20200901:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20200901preview:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20201201:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20210201:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20210201preview:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20210601:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20210601preview:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20220301:Device"),
		},
		{
			Type: pulumi.String("azure-native:databoxedge/v20220401preview:Device"),
		},
	})
	opts = append(opts, aliases)
	var resource Device
	err := ctx.RegisterResource("azure-native:databoxedge/v20190801:Device", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevice gets an existing Device resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceState, opts ...pulumi.ResourceOption) (*Device, error) {
	var resource Device
	err := ctx.ReadResource("azure-native:databoxedge/v20190801:Device", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Device resources.
type deviceState struct {
}

type DeviceState struct {
}

func (DeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceState)(nil)).Elem()
}

type deviceArgs struct {
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus *string `pulumi:"dataBoxEdgeDeviceStatus"`
	// The Description of the Data Box Edge/Gateway device.
	Description *string `pulumi:"description"`
	// The device name.
	DeviceName *string `pulumi:"deviceName"`
	// The Data Box Edge/Gateway device name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location *string `pulumi:"location"`
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription *string `pulumi:"modelDescription"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU type.
	Sku *Sku `pulumi:"sku"`
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Device resource.
type DeviceArgs struct {
	// The status of the Data Box Edge/Gateway device.
	DataBoxEdgeDeviceStatus pulumi.StringPtrInput
	// The Description of the Data Box Edge/Gateway device.
	Description pulumi.StringPtrInput
	// The device name.
	DeviceName pulumi.StringPtrInput
	// The Data Box Edge/Gateway device name.
	FriendlyName pulumi.StringPtrInput
	// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
	Location pulumi.StringPtrInput
	// The description of the Data Box Edge/Gateway device model.
	ModelDescription pulumi.StringPtrInput
	// The resource group name.
	ResourceGroupName pulumi.StringInput
	// The SKU type.
	Sku SkuPtrInput
	// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
	Tags pulumi.StringMapInput
}

func (DeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceArgs)(nil)).Elem()
}

type DeviceInput interface {
	pulumi.Input

	ToDeviceOutput() DeviceOutput
	ToDeviceOutputWithContext(ctx context.Context) DeviceOutput
}

func (*Device) ElementType() reflect.Type {
	return reflect.TypeOf((**Device)(nil)).Elem()
}

func (i *Device) ToDeviceOutput() DeviceOutput {
	return i.ToDeviceOutputWithContext(context.Background())
}

func (i *Device) ToDeviceOutputWithContext(ctx context.Context) DeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceOutput)
}

type DeviceOutput struct{ *pulumi.OutputState }

func (DeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Device)(nil)).Elem()
}

func (o DeviceOutput) ToDeviceOutput() DeviceOutput {
	return o
}

func (o DeviceOutput) ToDeviceOutputWithContext(ctx context.Context) DeviceOutput {
	return o
}

// Type of compute roles configured.
func (o DeviceOutput) ConfiguredRoleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Device) pulumi.StringArrayOutput { return v.ConfiguredRoleTypes }).(pulumi.StringArrayOutput)
}

// The Data Box Edge/Gateway device culture.
func (o DeviceOutput) Culture() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.Culture }).(pulumi.StringOutput)
}

// The status of the Data Box Edge/Gateway device.
func (o DeviceOutput) DataBoxEdgeDeviceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Device) pulumi.StringPtrOutput { return v.DataBoxEdgeDeviceStatus }).(pulumi.StringPtrOutput)
}

// The Description of the Data Box Edge/Gateway device.
func (o DeviceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Device) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The device software version number of the device (eg: 1.2.18105.6).
func (o DeviceOutput) DeviceHcsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.DeviceHcsVersion }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device local capacity in MB.
func (o DeviceOutput) DeviceLocalCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v *Device) pulumi.Float64Output { return v.DeviceLocalCapacity }).(pulumi.Float64Output)
}

// The Data Box Edge/Gateway device model.
func (o DeviceOutput) DeviceModel() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.DeviceModel }).(pulumi.StringOutput)
}

// The Data Box Edge/Gateway device software version.
func (o DeviceOutput) DeviceSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.DeviceSoftwareVersion }).(pulumi.StringOutput)
}

// The type of the Data Box Edge/Gateway device.
func (o DeviceOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.DeviceType }).(pulumi.StringOutput)
}

// The etag for the devices.
func (o DeviceOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Device) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Data Box Edge/Gateway device name.
func (o DeviceOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Device) pulumi.StringPtrOutput { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.
func (o DeviceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The description of the Data Box Edge/Gateway device model.
func (o DeviceOutput) ModelDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Device) pulumi.StringPtrOutput { return v.ModelDescription }).(pulumi.StringPtrOutput)
}

// The object name.
func (o DeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes in the cluster.
func (o DeviceOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Device) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// The Serial Number of Data Box Edge/Gateway device.
func (o DeviceOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// The SKU type.
func (o DeviceOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *Device) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).
func (o DeviceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Device) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Data Box Edge/Gateway device timezone.
func (o DeviceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// The hierarchical type of the object.
func (o DeviceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Device) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DeviceOutput{})
}
