// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupShare(ctx *pulumi.Context, args *LookupShareArgs, opts ...pulumi.InvokeOption) (*LookupShareResult, error) {
	var rv LookupShareResult
	err := ctx.Invoke("azure-nextgen:databoxedge/v20190801:getShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupShareArgs struct {
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// The share name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Represents a share on the  Data Box Edge/Gateway device.
type LookupShareResult struct {
	// Access protocol to be used by the share.
	AccessProtocol string `pulumi:"accessProtocol"`
	// Azure container mapping for the share.
	AzureContainerInfo *AzureContainerInfoResponse `pulumi:"azureContainerInfo"`
	// List of IP addresses and corresponding access rights on the share(required for NFS protocol).
	ClientAccessRights []ClientAccessRightResponse `pulumi:"clientAccessRights"`
	// Data policy of the share.
	DataPolicy *string `pulumi:"dataPolicy"`
	// Description for the share.
	Description *string `pulumi:"description"`
	// Current monitoring status of the share.
	MonitoringStatus string `pulumi:"monitoringStatus"`
	// The object name.
	Name string `pulumi:"name"`
	// Details of the refresh job on this share.
	RefreshDetails *RefreshDetailsResponse `pulumi:"refreshDetails"`
	// Share mount point to the role.
	ShareMappings []MountPointMapResponse `pulumi:"shareMappings"`
	// Current status of the share.
	ShareStatus string `pulumi:"shareStatus"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
	// Mapping of users and corresponding access rights on the share (required for SMB protocol).
	UserAccessRights []UserAccessRightResponse `pulumi:"userAccessRights"`
}
