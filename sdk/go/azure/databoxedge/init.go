// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databoxedge

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:databoxedge:Addon":
		r = &Addon{}
	case "azure-native:databoxedge:BandwidthSchedule":
		r = &BandwidthSchedule{}
	case "azure-native:databoxedge:Container":
		r = &Container{}
	case "azure-native:databoxedge:Device":
		r = &Device{}
	case "azure-native:databoxedge:MonitoringConfig":
		r = &MonitoringConfig{}
	case "azure-native:databoxedge:Order":
		r = &Order{}
	case "azure-native:databoxedge:Role":
		r = &Role{}
	case "azure-native:databoxedge:Share":
		r = &Share{}
	case "azure-native:databoxedge:StorageAccount":
		r = &StorageAccount{}
	case "azure-native:databoxedge:StorageAccountCredential":
		r = &StorageAccountCredential{}
	case "azure-native:databoxedge:Trigger":
		r = &Trigger{}
	case "azure-native:databoxedge:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"databoxedge",
		&module{version},
	)
}
