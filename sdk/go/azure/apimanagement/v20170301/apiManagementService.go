// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A single API Management service resource in List or Get response.
type ApiManagementService struct {
	pulumi.CustomResourceState

	// Additional datacenter locations of the API Management service.
	AdditionalLocations AdditionalLocationResponseArrayOutput `pulumi:"additionalLocations"`
	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
	Certificates CertificateConfigurationResponseArrayOutput `pulumi:"certificates"`
	// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedAtUtc pulumi.StringOutput `pulumi:"createdAtUtc"`
	// Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.
	CustomProperties pulumi.StringMapOutput `pulumi:"customProperties"`
	// ETag of the resource.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Gateway URL of the API Management service in the Default Region.
	GatewayRegionalUrl pulumi.StringOutput `pulumi:"gatewayRegionalUrl"`
	// Gateway URL of the API Management service.
	GatewayUrl pulumi.StringOutput `pulumi:"gatewayUrl"`
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations HostnameConfigurationResponseArrayOutput `pulumi:"hostnameConfigurations"`
	// Managed service identity of the Api Management service.
	Identity ApiManagementServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Management API endpoint URL of the API Management service.
	ManagementApiUrl pulumi.StringOutput `pulumi:"managementApiUrl"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringPtrOutput `pulumi:"notificationSenderEmail"`
	// Publisher portal endpoint Url of the API Management service.
	PortalUrl pulumi.StringOutput `pulumi:"portalUrl"`
	// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Publisher email.
	PublisherEmail pulumi.StringOutput `pulumi:"publisherEmail"`
	// Publisher name.
	PublisherName pulumi.StringOutput `pulumi:"publisherName"`
	// SCM endpoint URL of the API Management service.
	ScmUrl pulumi.StringOutput `pulumi:"scmUrl"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponseOutput `pulumi:"sku"`
	// Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium SKU.
	StaticIps pulumi.StringArrayOutput `pulumi:"staticIps"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
	TargetProvisioningState pulumi.StringOutput `pulumi:"targetProvisioningState"`
	// Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type pulumi.StringOutput `pulumi:"type"`
	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration VirtualNetworkConfigurationResponsePtrOutput `pulumi:"virtualNetworkConfiguration"`
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VirtualNetworkType pulumi.StringPtrOutput `pulumi:"virtualNetworkType"`
}

// NewApiManagementService registers a new resource with the given unique name, arguments, and options.
func NewApiManagementService(ctx *pulumi.Context,
	name string, args *ApiManagementServiceArgs, opts ...pulumi.ResourceOption) (*ApiManagementService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PublisherEmail == nil {
		return nil, errors.New("invalid value for required argument 'PublisherEmail'")
	}
	if args.PublisherName == nil {
		return nil, errors.New("invalid value for required argument 'PublisherName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	args.Sku = args.Sku.ToApiManagementServiceSkuPropertiesOutput().ApplyT(func(v ApiManagementServiceSkuProperties) ApiManagementServiceSkuProperties { return *v.Defaults() }).(ApiManagementServiceSkuPropertiesOutput)
	if isZero(args.VirtualNetworkType) {
		args.VirtualNetworkType = pulumi.StringPtr("None")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20160707:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20161010:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20180101:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20180601preview:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20190101:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201preview:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20200601preview:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20201201:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210101preview:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210401preview:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210801:ApiManagementService"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20211201preview:ApiManagementService"),
		},
	})
	opts = append(opts, aliases)
	var resource ApiManagementService
	err := ctx.RegisterResource("azure-native:apimanagement/v20170301:ApiManagementService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiManagementService gets an existing ApiManagementService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiManagementService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiManagementServiceState, opts ...pulumi.ResourceOption) (*ApiManagementService, error) {
	var resource ApiManagementService
	err := ctx.ReadResource("azure-native:apimanagement/v20170301:ApiManagementService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiManagementService resources.
type apiManagementServiceState struct {
}

type ApiManagementServiceState struct {
}

func (ApiManagementServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiManagementServiceState)(nil)).Elem()
}

type apiManagementServiceArgs struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations []AdditionalLocation `pulumi:"additionalLocations"`
	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
	Certificates []CertificateConfiguration `pulumi:"certificates"`
	// Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.
	CustomProperties map[string]string `pulumi:"customProperties"`
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations []HostnameConfiguration `pulumi:"hostnameConfigurations"`
	// Managed service identity of the Api Management service.
	Identity *ApiManagementServiceIdentity `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `pulumi:"notificationSenderEmail"`
	// Publisher email.
	PublisherEmail string `pulumi:"publisherEmail"`
	// Publisher name.
	PublisherName string `pulumi:"publisherName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName *string `pulumi:"serviceName"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuProperties `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VirtualNetworkType *string `pulumi:"virtualNetworkType"`
}

// The set of arguments for constructing a ApiManagementService resource.
type ApiManagementServiceArgs struct {
	// Additional datacenter locations of the API Management service.
	AdditionalLocations AdditionalLocationArrayInput
	// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
	Certificates CertificateConfigurationArrayInput
	// Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.
	CustomProperties pulumi.StringMapInput
	// Custom hostname configuration of the API Management service.
	HostnameConfigurations HostnameConfigurationArrayInput
	// Managed service identity of the Api Management service.
	Identity ApiManagementServiceIdentityPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringPtrInput
	// Publisher email.
	PublisherEmail pulumi.StringInput
	// Publisher name.
	PublisherName pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringPtrInput
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Virtual network configuration of the API Management service.
	VirtualNetworkConfiguration VirtualNetworkConfigurationPtrInput
	// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
	VirtualNetworkType pulumi.StringPtrInput
}

func (ApiManagementServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiManagementServiceArgs)(nil)).Elem()
}

type ApiManagementServiceInput interface {
	pulumi.Input

	ToApiManagementServiceOutput() ApiManagementServiceOutput
	ToApiManagementServiceOutputWithContext(ctx context.Context) ApiManagementServiceOutput
}

func (*ApiManagementService) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementService)(nil)).Elem()
}

func (i *ApiManagementService) ToApiManagementServiceOutput() ApiManagementServiceOutput {
	return i.ToApiManagementServiceOutputWithContext(context.Background())
}

func (i *ApiManagementService) ToApiManagementServiceOutputWithContext(ctx context.Context) ApiManagementServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceOutput)
}

type ApiManagementServiceOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementService)(nil)).Elem()
}

func (o ApiManagementServiceOutput) ToApiManagementServiceOutput() ApiManagementServiceOutput {
	return o
}

func (o ApiManagementServiceOutput) ToApiManagementServiceOutputWithContext(ctx context.Context) ApiManagementServiceOutput {
	return o
}

// Additional datacenter locations of the API Management service.
func (o ApiManagementServiceOutput) AdditionalLocations() AdditionalLocationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementService) AdditionalLocationResponseArrayOutput { return v.AdditionalLocations }).(AdditionalLocationResponseArrayOutput)
}

// List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.
func (o ApiManagementServiceOutput) Certificates() CertificateConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementService) CertificateConfigurationResponseArrayOutput { return v.Certificates }).(CertificateConfigurationResponseArrayOutput)
}

// Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o ApiManagementServiceOutput) CreatedAtUtc() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.CreatedAtUtc }).(pulumi.StringOutput)
}

// Custom properties of the API Management service. Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2). Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1 and setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.
func (o ApiManagementServiceOutput) CustomProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringMapOutput { return v.CustomProperties }).(pulumi.StringMapOutput)
}

// ETag of the resource.
func (o ApiManagementServiceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Gateway URL of the API Management service in the Default Region.
func (o ApiManagementServiceOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// Gateway URL of the API Management service.
func (o ApiManagementServiceOutput) GatewayUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.GatewayUrl }).(pulumi.StringOutput)
}

// Custom hostname configuration of the API Management service.
func (o ApiManagementServiceOutput) HostnameConfigurations() HostnameConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApiManagementService) HostnameConfigurationResponseArrayOutput {
		return v.HostnameConfigurations
	}).(HostnameConfigurationResponseArrayOutput)
}

// Managed service identity of the Api Management service.
func (o ApiManagementServiceOutput) Identity() ApiManagementServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ApiManagementService) ApiManagementServiceIdentityResponsePtrOutput { return v.Identity }).(ApiManagementServiceIdentityResponsePtrOutput)
}

// Resource location.
func (o ApiManagementServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Management API endpoint URL of the API Management service.
func (o ApiManagementServiceOutput) ManagementApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.ManagementApiUrl }).(pulumi.StringOutput)
}

// Resource name.
func (o ApiManagementServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email address from which the notification will be sent.
func (o ApiManagementServiceOutput) NotificationSenderEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringPtrOutput { return v.NotificationSenderEmail }).(pulumi.StringPtrOutput)
}

// Publisher portal endpoint Url of the API Management service.
func (o ApiManagementServiceOutput) PortalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.PortalUrl }).(pulumi.StringOutput)
}

// The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
func (o ApiManagementServiceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Publisher email.
func (o ApiManagementServiceOutput) PublisherEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.PublisherEmail }).(pulumi.StringOutput)
}

// Publisher name.
func (o ApiManagementServiceOutput) PublisherName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.PublisherName }).(pulumi.StringOutput)
}

// SCM endpoint URL of the API Management service.
func (o ApiManagementServiceOutput) ScmUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.ScmUrl }).(pulumi.StringOutput)
}

// SKU properties of the API Management service.
func (o ApiManagementServiceOutput) Sku() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiManagementService) ApiManagementServiceSkuPropertiesResponseOutput { return v.Sku }).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium SKU.
func (o ApiManagementServiceOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringArrayOutput { return v.StaticIps }).(pulumi.StringArrayOutput)
}

// Resource tags.
func (o ApiManagementServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The provisioning state of the API Management service, which is targeted by the long running operation started on the service.
func (o ApiManagementServiceOutput) TargetProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.TargetProvisioningState }).(pulumi.StringOutput)
}

// Resource type for API Management resource is set to Microsoft.ApiManagement.
func (o ApiManagementServiceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Virtual network configuration of the API Management service.
func (o ApiManagementServiceOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApiManagementService) VirtualNetworkConfigurationResponsePtrOutput {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

// The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.
func (o ApiManagementServiceOutput) VirtualNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementService) pulumi.StringPtrOutput { return v.VirtualNetworkType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiManagementServiceOutput{})
}
