// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Api Release details.
type ApiRelease struct {
	pulumi.CustomResourceState

	// Identifier of the API the release belongs to.
	ApiId pulumi.StringPtrOutput `pulumi:"apiId"`
	// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	CreatedDateTime pulumi.StringOutput `pulumi:"createdDateTime"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Release Notes
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The time the API release was updated.
	UpdatedDateTime pulumi.StringOutput `pulumi:"updatedDateTime"`
}

// NewApiRelease registers a new resource with the given unique name, arguments, and options.
func NewApiRelease(ctx *pulumi.Context,
	name string, args *ApiReleaseArgs, opts ...pulumi.ResourceOption) (*ApiRelease, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20180101:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20180601preview:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20190101:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201preview:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20200601preview:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20201201:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210101preview:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210401preview:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210801:ApiRelease"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20211201preview:ApiRelease"),
		},
	})
	opts = append(opts, aliases)
	var resource ApiRelease
	err := ctx.RegisterResource("azure-native:apimanagement/v20170301:ApiRelease", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiRelease gets an existing ApiRelease resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiRelease(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiReleaseState, opts ...pulumi.ResourceOption) (*ApiRelease, error) {
	var resource ApiRelease
	err := ctx.ReadResource("azure-native:apimanagement/v20170301:ApiRelease", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiRelease resources.
type apiReleaseState struct {
}

type ApiReleaseState struct {
}

func (ApiReleaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiReleaseState)(nil)).Elem()
}

type apiReleaseArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId string `pulumi:"apiId"`
	// Release Notes
	Notes *string `pulumi:"notes"`
	// Release identifier within an API. Must be unique in the current API Management service instance.
	ReleaseId *string `pulumi:"releaseId"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ApiRelease resource.
type ApiReleaseArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId pulumi.StringInput
	// Release Notes
	Notes pulumi.StringPtrInput
	// Release identifier within an API. Must be unique in the current API Management service instance.
	ReleaseId pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ApiReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiReleaseArgs)(nil)).Elem()
}

type ApiReleaseInput interface {
	pulumi.Input

	ToApiReleaseOutput() ApiReleaseOutput
	ToApiReleaseOutputWithContext(ctx context.Context) ApiReleaseOutput
}

func (*ApiRelease) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRelease)(nil)).Elem()
}

func (i *ApiRelease) ToApiReleaseOutput() ApiReleaseOutput {
	return i.ToApiReleaseOutputWithContext(context.Background())
}

func (i *ApiRelease) ToApiReleaseOutputWithContext(ctx context.Context) ApiReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReleaseOutput)
}

type ApiReleaseOutput struct{ *pulumi.OutputState }

func (ApiReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRelease)(nil)).Elem()
}

func (o ApiReleaseOutput) ToApiReleaseOutput() ApiReleaseOutput {
	return o
}

func (o ApiReleaseOutput) ToApiReleaseOutputWithContext(ctx context.Context) ApiReleaseOutput {
	return o
}

// Identifier of the API the release belongs to.
func (o ApiReleaseOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringPtrOutput { return v.ApiId }).(pulumi.StringPtrOutput)
}

// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
func (o ApiReleaseOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringOutput { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// Resource name.
func (o ApiReleaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Release Notes
func (o ApiReleaseOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// Resource type for API Management resource.
func (o ApiReleaseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The time the API release was updated.
func (o ApiReleaseOutput) UpdatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRelease) pulumi.StringOutput { return v.UpdatedDateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiReleaseOutput{})
}
