// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Tag Contract details.
func LookupTagByOperation(ctx *pulumi.Context, args *LookupTagByOperationArgs, opts ...pulumi.InvokeOption) (*LookupTagByOperationResult, error) {
	var rv LookupTagByOperationResult
	err := ctx.Invoke("azure-native:apimanagement/v20180601preview:getTagByOperation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTagByOperationArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId string `pulumi:"apiId"`
	// Operation identifier within an API. Must be unique in the current API Management service instance.
	OperationId string `pulumi:"operationId"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId string `pulumi:"tagId"`
}

// Tag Contract details.
type LookupTagByOperationResult struct {
	// Tag name.
	DisplayName string `pulumi:"displayName"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

func LookupTagByOperationOutput(ctx *pulumi.Context, args LookupTagByOperationOutputArgs, opts ...pulumi.InvokeOption) LookupTagByOperationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagByOperationResult, error) {
			args := v.(LookupTagByOperationArgs)
			r, err := LookupTagByOperation(ctx, &args, opts...)
			var s LookupTagByOperationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagByOperationResultOutput)
}

type LookupTagByOperationOutputArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// Operation identifier within an API. Must be unique in the current API Management service instance.
	OperationId pulumi.StringInput `pulumi:"operationId"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId pulumi.StringInput `pulumi:"tagId"`
}

func (LookupTagByOperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagByOperationArgs)(nil)).Elem()
}

// Tag Contract details.
type LookupTagByOperationResultOutput struct{ *pulumi.OutputState }

func (LookupTagByOperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagByOperationResult)(nil)).Elem()
}

func (o LookupTagByOperationResultOutput) ToLookupTagByOperationResultOutput() LookupTagByOperationResultOutput {
	return o
}

func (o LookupTagByOperationResultOutput) ToLookupTagByOperationResultOutputWithContext(ctx context.Context) LookupTagByOperationResultOutput {
	return o
}

// Tag name.
func (o LookupTagByOperationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagByOperationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupTagByOperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagByOperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupTagByOperationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagByOperationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type for API Management resource.
func (o LookupTagByOperationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagByOperationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagByOperationResultOutput{})
}
