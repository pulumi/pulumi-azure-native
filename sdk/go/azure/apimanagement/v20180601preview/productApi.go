// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// API details.
type ProductApi struct {
	pulumi.CustomResourceState

	// Describes the Revision of the Api. If no value is provided, default revision 1 is created
	ApiRevision pulumi.StringPtrOutput `pulumi:"apiRevision"`
	// Description of the Api Revision.
	ApiRevisionDescription pulumi.StringPtrOutput `pulumi:"apiRevisionDescription"`
	// Type of API.
	ApiType pulumi.StringPtrOutput `pulumi:"apiType"`
	// Indicates the Version identifier of the API if the API is versioned
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Description of the Api Version.
	ApiVersionDescription pulumi.StringPtrOutput `pulumi:"apiVersionDescription"`
	// An API Version Set contains the common configuration for a set of API Versions relating
	ApiVersionSet ApiVersionSetContractDetailsResponsePtrOutput `pulumi:"apiVersionSet"`
	// A resource identifier for the related ApiVersionSet.
	ApiVersionSetId pulumi.StringPtrOutput `pulumi:"apiVersionSetId"`
	// Collection of authentication settings included into this API.
	AuthenticationSettings AuthenticationSettingsContractResponsePtrOutput `pulumi:"authenticationSettings"`
	// Description of the API. May include HTML formatting tags.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// API name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Indicates if API revision is current api revision.
	IsCurrent pulumi.BoolOutput `pulumi:"isCurrent"`
	// Indicates if API revision is accessible via the gateway.
	IsOnline pulumi.BoolOutput `pulumi:"isOnline"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
	Path pulumi.StringOutput `pulumi:"path"`
	// Describes on which protocols the operations in this API can be invoked.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// Absolute URL of the backend service implementing this API.
	ServiceUrl pulumi.StringPtrOutput `pulumi:"serviceUrl"`
	// Protocols over which API is made available.
	SubscriptionKeyParameterNames SubscriptionKeyParameterNamesContractResponsePtrOutput `pulumi:"subscriptionKeyParameterNames"`
	// Specifies whether an API or Product subscription is required for accessing the API.
	SubscriptionRequired pulumi.BoolPtrOutput `pulumi:"subscriptionRequired"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProductApi registers a new resource with the given unique name, arguments, and options.
func NewProductApi(ctx *pulumi.Context,
	name string, args *ProductApiArgs, opts ...pulumi.ResourceOption) (*ProductApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20170301:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20180101:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20190101:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201preview:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20200601preview:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20201201:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210101preview:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210401preview:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210801:ProductApi"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20211201preview:ProductApi"),
		},
	})
	opts = append(opts, aliases)
	var resource ProductApi
	err := ctx.RegisterResource("azure-native:apimanagement/v20180601preview:ProductApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProductApi gets an existing ProductApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProductApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProductApiState, opts ...pulumi.ResourceOption) (*ProductApi, error) {
	var resource ProductApi
	err := ctx.ReadResource("azure-native:apimanagement/v20180601preview:ProductApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProductApi resources.
type productApiState struct {
}

type ProductApiState struct {
}

func (ProductApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*productApiState)(nil)).Elem()
}

type productApiArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId *string `pulumi:"apiId"`
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId string `pulumi:"productId"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ProductApi resource.
type ProductApiArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId pulumi.StringPtrInput
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ProductApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*productApiArgs)(nil)).Elem()
}

type ProductApiInput interface {
	pulumi.Input

	ToProductApiOutput() ProductApiOutput
	ToProductApiOutputWithContext(ctx context.Context) ProductApiOutput
}

func (*ProductApi) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductApi)(nil)).Elem()
}

func (i *ProductApi) ToProductApiOutput() ProductApiOutput {
	return i.ToProductApiOutputWithContext(context.Background())
}

func (i *ProductApi) ToProductApiOutputWithContext(ctx context.Context) ProductApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductApiOutput)
}

type ProductApiOutput struct{ *pulumi.OutputState }

func (ProductApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductApi)(nil)).Elem()
}

func (o ProductApiOutput) ToProductApiOutput() ProductApiOutput {
	return o
}

func (o ProductApiOutput) ToProductApiOutputWithContext(ctx context.Context) ProductApiOutput {
	return o
}

// Describes the Revision of the Api. If no value is provided, default revision 1 is created
func (o ProductApiOutput) ApiRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiRevision }).(pulumi.StringPtrOutput)
}

// Description of the Api Revision.
func (o ProductApiOutput) ApiRevisionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiRevisionDescription }).(pulumi.StringPtrOutput)
}

// Type of API.
func (o ProductApiOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiType }).(pulumi.StringPtrOutput)
}

// Indicates the Version identifier of the API if the API is versioned
func (o ProductApiOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Description of the Api Version.
func (o ProductApiOutput) ApiVersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiVersionDescription }).(pulumi.StringPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
func (o ProductApiOutput) ApiVersionSet() ApiVersionSetContractDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ProductApi) ApiVersionSetContractDetailsResponsePtrOutput { return v.ApiVersionSet }).(ApiVersionSetContractDetailsResponsePtrOutput)
}

// A resource identifier for the related ApiVersionSet.
func (o ProductApiOutput) ApiVersionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ApiVersionSetId }).(pulumi.StringPtrOutput)
}

// Collection of authentication settings included into this API.
func (o ProductApiOutput) AuthenticationSettings() AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *ProductApi) AuthenticationSettingsContractResponsePtrOutput { return v.AuthenticationSettings }).(AuthenticationSettingsContractResponsePtrOutput)
}

// Description of the API. May include HTML formatting tags.
func (o ProductApiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// API name.
func (o ProductApiOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Indicates if API revision is current api revision.
func (o ProductApiOutput) IsCurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.BoolOutput { return v.IsCurrent }).(pulumi.BoolOutput)
}

// Indicates if API revision is accessible via the gateway.
func (o ProductApiOutput) IsOnline() pulumi.BoolOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.BoolOutput { return v.IsOnline }).(pulumi.BoolOutput)
}

// Resource name.
func (o ProductApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
func (o ProductApiOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

// Describes on which protocols the operations in this API can be invoked.
func (o ProductApiOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Absolute URL of the backend service implementing this API.
func (o ProductApiOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringPtrOutput { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

// Protocols over which API is made available.
func (o ProductApiOutput) SubscriptionKeyParameterNames() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o.ApplyT(func(v *ProductApi) SubscriptionKeyParameterNamesContractResponsePtrOutput {
		return v.SubscriptionKeyParameterNames
	}).(SubscriptionKeyParameterNamesContractResponsePtrOutput)
}

// Specifies whether an API or Product subscription is required for accessing the API.
func (o ProductApiOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.BoolPtrOutput { return v.SubscriptionRequired }).(pulumi.BoolPtrOutput)
}

// Resource type for API Management resource.
func (o ProductApiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProductApi) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProductApiOutput{})
}
