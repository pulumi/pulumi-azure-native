// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ApiRelease details.
func LookupApiRelease(ctx *pulumi.Context, args *LookupApiReleaseArgs, opts ...pulumi.InvokeOption) (*LookupApiReleaseResult, error) {
	var rv LookupApiReleaseResult
	err := ctx.Invoke("azure-native:apimanagement/v20200601preview:getApiRelease", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApiReleaseArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId string `pulumi:"apiId"`
	// Release identifier within an API. Must be unique in the current API Management service instance.
	ReleaseId string `pulumi:"releaseId"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// ApiRelease details.
type LookupApiReleaseResult struct {
	// Identifier of the API the release belongs to.
	ApiId *string `pulumi:"apiId"`
	// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
	CreatedDateTime string `pulumi:"createdDateTime"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Release Notes
	Notes *string `pulumi:"notes"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
	// The time the API release was updated.
	UpdatedDateTime string `pulumi:"updatedDateTime"`
}

func LookupApiReleaseOutput(ctx *pulumi.Context, args LookupApiReleaseOutputArgs, opts ...pulumi.InvokeOption) LookupApiReleaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiReleaseResult, error) {
			args := v.(LookupApiReleaseArgs)
			r, err := LookupApiRelease(ctx, &args, opts...)
			var s LookupApiReleaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiReleaseResultOutput)
}

type LookupApiReleaseOutputArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// Release identifier within an API. Must be unique in the current API Management service instance.
	ReleaseId pulumi.StringInput `pulumi:"releaseId"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupApiReleaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiReleaseArgs)(nil)).Elem()
}

// ApiRelease details.
type LookupApiReleaseResultOutput struct{ *pulumi.OutputState }

func (LookupApiReleaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiReleaseResult)(nil)).Elem()
}

func (o LookupApiReleaseResultOutput) ToLookupApiReleaseResultOutput() LookupApiReleaseResultOutput {
	return o
}

func (o LookupApiReleaseResultOutput) ToLookupApiReleaseResultOutputWithContext(ctx context.Context) LookupApiReleaseResultOutput {
	return o
}

// Identifier of the API the release belongs to.
func (o LookupApiReleaseResultOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) *string { return v.ApiId }).(pulumi.StringPtrOutput)
}

// The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.
func (o LookupApiReleaseResultOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupApiReleaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o LookupApiReleaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// Release Notes
func (o LookupApiReleaseResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

// Resource type for API Management resource.
func (o LookupApiReleaseResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) string { return v.Type }).(pulumi.StringOutput)
}

// The time the API release was updated.
func (o LookupApiReleaseResultOutput) UpdatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiReleaseResult) string { return v.UpdatedDateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiReleaseResultOutput{})
}
