// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// NamedValue details.
type NamedValue struct {
	pulumi.CustomResourceState

	// Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// KeyVault location details of the namedValue.
	KeyVault KeyVaultContractPropertiesResponsePtrOutput `pulumi:"keyVault"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret pulumi.BoolPtrOutput `pulumi:"secret"`
	// Optional tags that when provided can be used to filter the NamedValue list.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Resource type for API Management resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
	Value pulumi.StringPtrOutput `pulumi:"value"`
}

// NewNamedValue registers a new resource with the given unique name, arguments, and options.
func NewNamedValue(ctx *pulumi.Context,
	name string, args *NamedValueArgs, opts ...pulumi.ResourceOption) (*NamedValue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20191201preview:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20200601preview:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210101preview:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210401preview:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20210801:NamedValue"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20211201preview:NamedValue"),
		},
	})
	opts = append(opts, aliases)
	var resource NamedValue
	err := ctx.RegisterResource("azure-native:apimanagement/v20201201:NamedValue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamedValue gets an existing NamedValue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamedValue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamedValueState, opts ...pulumi.ResourceOption) (*NamedValue, error) {
	var resource NamedValue
	err := ctx.ReadResource("azure-native:apimanagement/v20201201:NamedValue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamedValue resources.
type namedValueState struct {
}

type NamedValueState struct {
}

func (NamedValueState) ElementType() reflect.Type {
	return reflect.TypeOf((*namedValueState)(nil)).Elem()
}

type namedValueArgs struct {
	// Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName string `pulumi:"displayName"`
	// KeyVault location details of the namedValue.
	KeyVault *KeyVaultContractCreateProperties `pulumi:"keyVault"`
	// Identifier of the NamedValue.
	NamedValueId *string `pulumi:"namedValueId"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret *bool `pulumi:"secret"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Optional tags that when provided can be used to filter the NamedValue list.
	Tags []string `pulumi:"tags"`
	// Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a NamedValue resource.
type NamedValueArgs struct {
	// Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
	DisplayName pulumi.StringInput
	// KeyVault location details of the namedValue.
	KeyVault KeyVaultContractCreatePropertiesPtrInput
	// Identifier of the NamedValue.
	NamedValueId pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Determines whether the value is a secret and should be encrypted or not. Default value is false.
	Secret pulumi.BoolPtrInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Optional tags that when provided can be used to filter the NamedValue list.
	Tags pulumi.StringArrayInput
	// Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
	Value pulumi.StringPtrInput
}

func (NamedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namedValueArgs)(nil)).Elem()
}

type NamedValueInput interface {
	pulumi.Input

	ToNamedValueOutput() NamedValueOutput
	ToNamedValueOutputWithContext(ctx context.Context) NamedValueOutput
}

func (*NamedValue) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedValue)(nil)).Elem()
}

func (i *NamedValue) ToNamedValueOutput() NamedValueOutput {
	return i.ToNamedValueOutputWithContext(context.Background())
}

func (i *NamedValue) ToNamedValueOutputWithContext(ctx context.Context) NamedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedValueOutput)
}

type NamedValueOutput struct{ *pulumi.OutputState }

func (NamedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedValue)(nil)).Elem()
}

func (o NamedValueOutput) ToNamedValueOutput() NamedValueOutput {
	return o
}

func (o NamedValueOutput) ToNamedValueOutputWithContext(ctx context.Context) NamedValueOutput {
	return o
}

// Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.
func (o NamedValueOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// KeyVault location details of the namedValue.
func (o NamedValueOutput) KeyVault() KeyVaultContractPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *NamedValue) KeyVaultContractPropertiesResponsePtrOutput { return v.KeyVault }).(KeyVaultContractPropertiesResponsePtrOutput)
}

// Resource name.
func (o NamedValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Determines whether the value is a secret and should be encrypted or not. Default value is false.
func (o NamedValueOutput) Secret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.BoolPtrOutput { return v.Secret }).(pulumi.BoolPtrOutput)
}

// Optional tags that when provided can be used to filter the NamedValue list.
func (o NamedValueOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Resource type for API Management resource.
func (o NamedValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.
func (o NamedValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamedValue) pulumi.StringPtrOutput { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NamedValueOutput{})
}
