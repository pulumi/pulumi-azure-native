// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActionType string

const (
	ActionTypeLogicApp  = ActionType("LogicApp")
	ActionTypeEventHub  = ActionType("EventHub")
	ActionTypeWorkspace = ActionType("Workspace")
)

func (ActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionType)(nil)).Elem()
}

func (e ActionType) ToActionTypeOutput() ActionTypeOutput {
	return pulumi.ToOutput(e).(ActionTypeOutput)
}

func (e ActionType) ToActionTypeOutputWithContext(ctx context.Context) ActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ActionTypeOutput)
}

func (e ActionType) ToActionTypePtrOutput() ActionTypePtrOutput {
	return e.ToActionTypePtrOutputWithContext(context.Background())
}

func (e ActionType) ToActionTypePtrOutputWithContext(ctx context.Context) ActionTypePtrOutput {
	return ActionType(e).ToActionTypeOutputWithContext(ctx).ToActionTypePtrOutputWithContext(ctx)
}

func (e ActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ActionTypeOutput struct{ *pulumi.OutputState }

func (ActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionType)(nil)).Elem()
}

func (o ActionTypeOutput) ToActionTypeOutput() ActionTypeOutput {
	return o
}

func (o ActionTypeOutput) ToActionTypeOutputWithContext(ctx context.Context) ActionTypeOutput {
	return o
}

func (o ActionTypeOutput) ToActionTypePtrOutput() ActionTypePtrOutput {
	return o.ToActionTypePtrOutputWithContext(context.Background())
}

func (o ActionTypeOutput) ToActionTypePtrOutputWithContext(ctx context.Context) ActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionType) *ActionType {
		return &v
	}).(ActionTypePtrOutput)
}

func (o ActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionTypePtrOutput struct{ *pulumi.OutputState }

func (ActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionType)(nil)).Elem()
}

func (o ActionTypePtrOutput) ToActionTypePtrOutput() ActionTypePtrOutput {
	return o
}

func (o ActionTypePtrOutput) ToActionTypePtrOutputWithContext(ctx context.Context) ActionTypePtrOutput {
	return o
}

func (o ActionTypePtrOutput) Elem() ActionTypeOutput {
	return o.ApplyT(func(v *ActionType) ActionType {
		if v != nil {
			return *v
		}
		var ret ActionType
		return ret
	}).(ActionTypeOutput)
}

func (o ActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ActionTypeInput is an input type that accepts ActionTypeArgs and ActionTypeOutput values.
// You can construct a concrete instance of `ActionTypeInput` via:
//
//          ActionTypeArgs{...}
type ActionTypeInput interface {
	pulumi.Input

	ToActionTypeOutput() ActionTypeOutput
	ToActionTypeOutputWithContext(context.Context) ActionTypeOutput
}

var actionTypePtrType = reflect.TypeOf((**ActionType)(nil)).Elem()

type ActionTypePtrInput interface {
	pulumi.Input

	ToActionTypePtrOutput() ActionTypePtrOutput
	ToActionTypePtrOutputWithContext(context.Context) ActionTypePtrOutput
}

type actionTypePtr string

func ActionTypePtr(v string) ActionTypePtrInput {
	return (*actionTypePtr)(&v)
}

func (*actionTypePtr) ElementType() reflect.Type {
	return actionTypePtrType
}

func (in *actionTypePtr) ToActionTypePtrOutput() ActionTypePtrOutput {
	return pulumi.ToOutput(in).(ActionTypePtrOutput)
}

func (in *actionTypePtr) ToActionTypePtrOutputWithContext(ctx context.Context) ActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ActionTypePtrOutput)
}

type AdditionalWorkspaceDataType string

const (
	AdditionalWorkspaceDataTypeAlerts    = AdditionalWorkspaceDataType("Alerts")
	AdditionalWorkspaceDataTypeRawEvents = AdditionalWorkspaceDataType("RawEvents")
)

func (AdditionalWorkspaceDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalWorkspaceDataType)(nil)).Elem()
}

func (e AdditionalWorkspaceDataType) ToAdditionalWorkspaceDataTypeOutput() AdditionalWorkspaceDataTypeOutput {
	return pulumi.ToOutput(e).(AdditionalWorkspaceDataTypeOutput)
}

func (e AdditionalWorkspaceDataType) ToAdditionalWorkspaceDataTypeOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AdditionalWorkspaceDataTypeOutput)
}

func (e AdditionalWorkspaceDataType) ToAdditionalWorkspaceDataTypePtrOutput() AdditionalWorkspaceDataTypePtrOutput {
	return e.ToAdditionalWorkspaceDataTypePtrOutputWithContext(context.Background())
}

func (e AdditionalWorkspaceDataType) ToAdditionalWorkspaceDataTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypePtrOutput {
	return AdditionalWorkspaceDataType(e).ToAdditionalWorkspaceDataTypeOutputWithContext(ctx).ToAdditionalWorkspaceDataTypePtrOutputWithContext(ctx)
}

func (e AdditionalWorkspaceDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdditionalWorkspaceDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdditionalWorkspaceDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AdditionalWorkspaceDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AdditionalWorkspaceDataTypeOutput struct{ *pulumi.OutputState }

func (AdditionalWorkspaceDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalWorkspaceDataType)(nil)).Elem()
}

func (o AdditionalWorkspaceDataTypeOutput) ToAdditionalWorkspaceDataTypeOutput() AdditionalWorkspaceDataTypeOutput {
	return o
}

func (o AdditionalWorkspaceDataTypeOutput) ToAdditionalWorkspaceDataTypeOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypeOutput {
	return o
}

func (o AdditionalWorkspaceDataTypeOutput) ToAdditionalWorkspaceDataTypePtrOutput() AdditionalWorkspaceDataTypePtrOutput {
	return o.ToAdditionalWorkspaceDataTypePtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceDataTypeOutput) ToAdditionalWorkspaceDataTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdditionalWorkspaceDataType) *AdditionalWorkspaceDataType {
		return &v
	}).(AdditionalWorkspaceDataTypePtrOutput)
}

func (o AdditionalWorkspaceDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdditionalWorkspaceDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AdditionalWorkspaceDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdditionalWorkspaceDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AdditionalWorkspaceDataTypePtrOutput struct{ *pulumi.OutputState }

func (AdditionalWorkspaceDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalWorkspaceDataType)(nil)).Elem()
}

func (o AdditionalWorkspaceDataTypePtrOutput) ToAdditionalWorkspaceDataTypePtrOutput() AdditionalWorkspaceDataTypePtrOutput {
	return o
}

func (o AdditionalWorkspaceDataTypePtrOutput) ToAdditionalWorkspaceDataTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypePtrOutput {
	return o
}

func (o AdditionalWorkspaceDataTypePtrOutput) Elem() AdditionalWorkspaceDataTypeOutput {
	return o.ApplyT(func(v *AdditionalWorkspaceDataType) AdditionalWorkspaceDataType {
		if v != nil {
			return *v
		}
		var ret AdditionalWorkspaceDataType
		return ret
	}).(AdditionalWorkspaceDataTypeOutput)
}

func (o AdditionalWorkspaceDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AdditionalWorkspaceDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AdditionalWorkspaceDataTypeInput is an input type that accepts AdditionalWorkspaceDataTypeArgs and AdditionalWorkspaceDataTypeOutput values.
// You can construct a concrete instance of `AdditionalWorkspaceDataTypeInput` via:
//
//          AdditionalWorkspaceDataTypeArgs{...}
type AdditionalWorkspaceDataTypeInput interface {
	pulumi.Input

	ToAdditionalWorkspaceDataTypeOutput() AdditionalWorkspaceDataTypeOutput
	ToAdditionalWorkspaceDataTypeOutputWithContext(context.Context) AdditionalWorkspaceDataTypeOutput
}

var additionalWorkspaceDataTypePtrType = reflect.TypeOf((**AdditionalWorkspaceDataType)(nil)).Elem()

type AdditionalWorkspaceDataTypePtrInput interface {
	pulumi.Input

	ToAdditionalWorkspaceDataTypePtrOutput() AdditionalWorkspaceDataTypePtrOutput
	ToAdditionalWorkspaceDataTypePtrOutputWithContext(context.Context) AdditionalWorkspaceDataTypePtrOutput
}

type additionalWorkspaceDataTypePtr string

func AdditionalWorkspaceDataTypePtr(v string) AdditionalWorkspaceDataTypePtrInput {
	return (*additionalWorkspaceDataTypePtr)(&v)
}

func (*additionalWorkspaceDataTypePtr) ElementType() reflect.Type {
	return additionalWorkspaceDataTypePtrType
}

func (in *additionalWorkspaceDataTypePtr) ToAdditionalWorkspaceDataTypePtrOutput() AdditionalWorkspaceDataTypePtrOutput {
	return pulumi.ToOutput(in).(AdditionalWorkspaceDataTypePtrOutput)
}

func (in *additionalWorkspaceDataTypePtr) ToAdditionalWorkspaceDataTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AdditionalWorkspaceDataTypePtrOutput)
}

type AdditionalWorkspaceType string

const (
	AdditionalWorkspaceTypeSentinel = AdditionalWorkspaceType("Sentinel")
)

func (AdditionalWorkspaceType) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalWorkspaceType)(nil)).Elem()
}

func (e AdditionalWorkspaceType) ToAdditionalWorkspaceTypeOutput() AdditionalWorkspaceTypeOutput {
	return pulumi.ToOutput(e).(AdditionalWorkspaceTypeOutput)
}

func (e AdditionalWorkspaceType) ToAdditionalWorkspaceTypeOutputWithContext(ctx context.Context) AdditionalWorkspaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AdditionalWorkspaceTypeOutput)
}

func (e AdditionalWorkspaceType) ToAdditionalWorkspaceTypePtrOutput() AdditionalWorkspaceTypePtrOutput {
	return e.ToAdditionalWorkspaceTypePtrOutputWithContext(context.Background())
}

func (e AdditionalWorkspaceType) ToAdditionalWorkspaceTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceTypePtrOutput {
	return AdditionalWorkspaceType(e).ToAdditionalWorkspaceTypeOutputWithContext(ctx).ToAdditionalWorkspaceTypePtrOutputWithContext(ctx)
}

func (e AdditionalWorkspaceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdditionalWorkspaceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AdditionalWorkspaceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AdditionalWorkspaceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AdditionalWorkspaceTypeOutput struct{ *pulumi.OutputState }

func (AdditionalWorkspaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalWorkspaceType)(nil)).Elem()
}

func (o AdditionalWorkspaceTypeOutput) ToAdditionalWorkspaceTypeOutput() AdditionalWorkspaceTypeOutput {
	return o
}

func (o AdditionalWorkspaceTypeOutput) ToAdditionalWorkspaceTypeOutputWithContext(ctx context.Context) AdditionalWorkspaceTypeOutput {
	return o
}

func (o AdditionalWorkspaceTypeOutput) ToAdditionalWorkspaceTypePtrOutput() AdditionalWorkspaceTypePtrOutput {
	return o.ToAdditionalWorkspaceTypePtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceTypeOutput) ToAdditionalWorkspaceTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdditionalWorkspaceType) *AdditionalWorkspaceType {
		return &v
	}).(AdditionalWorkspaceTypePtrOutput)
}

func (o AdditionalWorkspaceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdditionalWorkspaceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AdditionalWorkspaceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AdditionalWorkspaceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AdditionalWorkspaceTypePtrOutput struct{ *pulumi.OutputState }

func (AdditionalWorkspaceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalWorkspaceType)(nil)).Elem()
}

func (o AdditionalWorkspaceTypePtrOutput) ToAdditionalWorkspaceTypePtrOutput() AdditionalWorkspaceTypePtrOutput {
	return o
}

func (o AdditionalWorkspaceTypePtrOutput) ToAdditionalWorkspaceTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceTypePtrOutput {
	return o
}

func (o AdditionalWorkspaceTypePtrOutput) Elem() AdditionalWorkspaceTypeOutput {
	return o.ApplyT(func(v *AdditionalWorkspaceType) AdditionalWorkspaceType {
		if v != nil {
			return *v
		}
		var ret AdditionalWorkspaceType
		return ret
	}).(AdditionalWorkspaceTypeOutput)
}

func (o AdditionalWorkspaceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AdditionalWorkspaceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AdditionalWorkspaceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AdditionalWorkspaceTypeInput is an input type that accepts AdditionalWorkspaceTypeArgs and AdditionalWorkspaceTypeOutput values.
// You can construct a concrete instance of `AdditionalWorkspaceTypeInput` via:
//
//          AdditionalWorkspaceTypeArgs{...}
type AdditionalWorkspaceTypeInput interface {
	pulumi.Input

	ToAdditionalWorkspaceTypeOutput() AdditionalWorkspaceTypeOutput
	ToAdditionalWorkspaceTypeOutputWithContext(context.Context) AdditionalWorkspaceTypeOutput
}

var additionalWorkspaceTypePtrType = reflect.TypeOf((**AdditionalWorkspaceType)(nil)).Elem()

type AdditionalWorkspaceTypePtrInput interface {
	pulumi.Input

	ToAdditionalWorkspaceTypePtrOutput() AdditionalWorkspaceTypePtrOutput
	ToAdditionalWorkspaceTypePtrOutputWithContext(context.Context) AdditionalWorkspaceTypePtrOutput
}

type additionalWorkspaceTypePtr string

func AdditionalWorkspaceTypePtr(v string) AdditionalWorkspaceTypePtrInput {
	return (*additionalWorkspaceTypePtr)(&v)
}

func (*additionalWorkspaceTypePtr) ElementType() reflect.Type {
	return additionalWorkspaceTypePtrType
}

func (in *additionalWorkspaceTypePtr) ToAdditionalWorkspaceTypePtrOutput() AdditionalWorkspaceTypePtrOutput {
	return pulumi.ToOutput(in).(AdditionalWorkspaceTypePtrOutput)
}

func (in *additionalWorkspaceTypePtr) ToAdditionalWorkspaceTypePtrOutputWithContext(ctx context.Context) AdditionalWorkspaceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AdditionalWorkspaceTypePtrOutput)
}

type AssessmentStatusCode string

const (
	// The resource is healthy
	AssessmentStatusCodeHealthy = AssessmentStatusCode("Healthy")
	// The resource has a security issue that needs to be addressed
	AssessmentStatusCodeUnhealthy = AssessmentStatusCode("Unhealthy")
	// Assessment for this resource did not happen
	AssessmentStatusCodeNotApplicable = AssessmentStatusCode("NotApplicable")
)

func (AssessmentStatusCode) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentStatusCode)(nil)).Elem()
}

func (e AssessmentStatusCode) ToAssessmentStatusCodeOutput() AssessmentStatusCodeOutput {
	return pulumi.ToOutput(e).(AssessmentStatusCodeOutput)
}

func (e AssessmentStatusCode) ToAssessmentStatusCodeOutputWithContext(ctx context.Context) AssessmentStatusCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentStatusCodeOutput)
}

func (e AssessmentStatusCode) ToAssessmentStatusCodePtrOutput() AssessmentStatusCodePtrOutput {
	return e.ToAssessmentStatusCodePtrOutputWithContext(context.Background())
}

func (e AssessmentStatusCode) ToAssessmentStatusCodePtrOutputWithContext(ctx context.Context) AssessmentStatusCodePtrOutput {
	return AssessmentStatusCode(e).ToAssessmentStatusCodeOutputWithContext(ctx).ToAssessmentStatusCodePtrOutputWithContext(ctx)
}

func (e AssessmentStatusCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStatusCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentStatusCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentStatusCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentStatusCodeOutput struct{ *pulumi.OutputState }

func (AssessmentStatusCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentStatusCode)(nil)).Elem()
}

func (o AssessmentStatusCodeOutput) ToAssessmentStatusCodeOutput() AssessmentStatusCodeOutput {
	return o
}

func (o AssessmentStatusCodeOutput) ToAssessmentStatusCodeOutputWithContext(ctx context.Context) AssessmentStatusCodeOutput {
	return o
}

func (o AssessmentStatusCodeOutput) ToAssessmentStatusCodePtrOutput() AssessmentStatusCodePtrOutput {
	return o.ToAssessmentStatusCodePtrOutputWithContext(context.Background())
}

func (o AssessmentStatusCodeOutput) ToAssessmentStatusCodePtrOutputWithContext(ctx context.Context) AssessmentStatusCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentStatusCode) *AssessmentStatusCode {
		return &v
	}).(AssessmentStatusCodePtrOutput)
}

func (o AssessmentStatusCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentStatusCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentStatusCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentStatusCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStatusCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentStatusCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentStatusCodePtrOutput struct{ *pulumi.OutputState }

func (AssessmentStatusCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentStatusCode)(nil)).Elem()
}

func (o AssessmentStatusCodePtrOutput) ToAssessmentStatusCodePtrOutput() AssessmentStatusCodePtrOutput {
	return o
}

func (o AssessmentStatusCodePtrOutput) ToAssessmentStatusCodePtrOutputWithContext(ctx context.Context) AssessmentStatusCodePtrOutput {
	return o
}

func (o AssessmentStatusCodePtrOutput) Elem() AssessmentStatusCodeOutput {
	return o.ApplyT(func(v *AssessmentStatusCode) AssessmentStatusCode {
		if v != nil {
			return *v
		}
		var ret AssessmentStatusCode
		return ret
	}).(AssessmentStatusCodeOutput)
}

func (o AssessmentStatusCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentStatusCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentStatusCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentStatusCodeInput is an input type that accepts AssessmentStatusCodeArgs and AssessmentStatusCodeOutput values.
// You can construct a concrete instance of `AssessmentStatusCodeInput` via:
//
//          AssessmentStatusCodeArgs{...}
type AssessmentStatusCodeInput interface {
	pulumi.Input

	ToAssessmentStatusCodeOutput() AssessmentStatusCodeOutput
	ToAssessmentStatusCodeOutputWithContext(context.Context) AssessmentStatusCodeOutput
}

var assessmentStatusCodePtrType = reflect.TypeOf((**AssessmentStatusCode)(nil)).Elem()

type AssessmentStatusCodePtrInput interface {
	pulumi.Input

	ToAssessmentStatusCodePtrOutput() AssessmentStatusCodePtrOutput
	ToAssessmentStatusCodePtrOutputWithContext(context.Context) AssessmentStatusCodePtrOutput
}

type assessmentStatusCodePtr string

func AssessmentStatusCodePtr(v string) AssessmentStatusCodePtrInput {
	return (*assessmentStatusCodePtr)(&v)
}

func (*assessmentStatusCodePtr) ElementType() reflect.Type {
	return assessmentStatusCodePtrType
}

func (in *assessmentStatusCodePtr) ToAssessmentStatusCodePtrOutput() AssessmentStatusCodePtrOutput {
	return pulumi.ToOutput(in).(AssessmentStatusCodePtrOutput)
}

func (in *assessmentStatusCodePtr) ToAssessmentStatusCodePtrOutputWithContext(ctx context.Context) AssessmentStatusCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentStatusCodePtrOutput)
}

type AssessmentType string

const (
	// Azure Security Center managed assessments
	AssessmentTypeBuiltIn = AssessmentType("BuiltIn")
	// User defined policies that are automatically ingested from Azure Policy to Azure Security Center
	AssessmentTypeCustomPolicy = AssessmentType("CustomPolicy")
	// User assessments pushed directly by the user or other third party to Azure Security Center
	AssessmentTypeCustomerManaged = AssessmentType("CustomerManaged")
	// An assessment that was created by a verified 3rd party if the user connected it to ASC
	AssessmentTypeVerifiedPartner = AssessmentType("VerifiedPartner")
)

func (AssessmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentType)(nil)).Elem()
}

func (e AssessmentType) ToAssessmentTypeOutput() AssessmentTypeOutput {
	return pulumi.ToOutput(e).(AssessmentTypeOutput)
}

func (e AssessmentType) ToAssessmentTypeOutputWithContext(ctx context.Context) AssessmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssessmentTypeOutput)
}

func (e AssessmentType) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return e.ToAssessmentTypePtrOutputWithContext(context.Background())
}

func (e AssessmentType) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return AssessmentType(e).ToAssessmentTypeOutputWithContext(ctx).ToAssessmentTypePtrOutputWithContext(ctx)
}

func (e AssessmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssessmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssessmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssessmentTypeOutput struct{ *pulumi.OutputState }

func (AssessmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentType)(nil)).Elem()
}

func (o AssessmentTypeOutput) ToAssessmentTypeOutput() AssessmentTypeOutput {
	return o
}

func (o AssessmentTypeOutput) ToAssessmentTypeOutputWithContext(ctx context.Context) AssessmentTypeOutput {
	return o
}

func (o AssessmentTypeOutput) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return o.ToAssessmentTypePtrOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssessmentType) *AssessmentType {
		return &v
	}).(AssessmentTypePtrOutput)
}

func (o AssessmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssessmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssessmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssessmentTypePtrOutput struct{ *pulumi.OutputState }

func (AssessmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssessmentType)(nil)).Elem()
}

func (o AssessmentTypePtrOutput) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return o
}

func (o AssessmentTypePtrOutput) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return o
}

func (o AssessmentTypePtrOutput) Elem() AssessmentTypeOutput {
	return o.ApplyT(func(v *AssessmentType) AssessmentType {
		if v != nil {
			return *v
		}
		var ret AssessmentType
		return ret
	}).(AssessmentTypeOutput)
}

func (o AssessmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssessmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssessmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssessmentTypeInput is an input type that accepts AssessmentTypeArgs and AssessmentTypeOutput values.
// You can construct a concrete instance of `AssessmentTypeInput` via:
//
//          AssessmentTypeArgs{...}
type AssessmentTypeInput interface {
	pulumi.Input

	ToAssessmentTypeOutput() AssessmentTypeOutput
	ToAssessmentTypeOutputWithContext(context.Context) AssessmentTypeOutput
}

var assessmentTypePtrType = reflect.TypeOf((**AssessmentType)(nil)).Elem()

type AssessmentTypePtrInput interface {
	pulumi.Input

	ToAssessmentTypePtrOutput() AssessmentTypePtrOutput
	ToAssessmentTypePtrOutputWithContext(context.Context) AssessmentTypePtrOutput
}

type assessmentTypePtr string

func AssessmentTypePtr(v string) AssessmentTypePtrInput {
	return (*assessmentTypePtr)(&v)
}

func (*assessmentTypePtr) ElementType() reflect.Type {
	return assessmentTypePtrType
}

func (in *assessmentTypePtr) ToAssessmentTypePtrOutput() AssessmentTypePtrOutput {
	return pulumi.ToOutput(in).(AssessmentTypePtrOutput)
}

func (in *assessmentTypePtr) ToAssessmentTypePtrOutputWithContext(ctx context.Context) AssessmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssessmentTypePtrOutput)
}

type AuthenticationType string

const (
	// AWS cloud account connector user credentials authentication
	AuthenticationTypeAwsCreds = AuthenticationType("awsCreds")
	// AWS account connector assume role authentication
	AuthenticationTypeAwsAssumeRole = AuthenticationType("awsAssumeRole")
	// GCP account connector service to service authentication
	AuthenticationTypeGcpCredentials = AuthenticationType("gcpCredentials")
)

func (AuthenticationType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationType)(nil)).Elem()
}

func (e AuthenticationType) ToAuthenticationTypeOutput() AuthenticationTypeOutput {
	return pulumi.ToOutput(e).(AuthenticationTypeOutput)
}

func (e AuthenticationType) ToAuthenticationTypeOutputWithContext(ctx context.Context) AuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationTypeOutput)
}

func (e AuthenticationType) ToAuthenticationTypePtrOutput() AuthenticationTypePtrOutput {
	return e.ToAuthenticationTypePtrOutputWithContext(context.Background())
}

func (e AuthenticationType) ToAuthenticationTypePtrOutputWithContext(ctx context.Context) AuthenticationTypePtrOutput {
	return AuthenticationType(e).ToAuthenticationTypeOutputWithContext(ctx).ToAuthenticationTypePtrOutputWithContext(ctx)
}

func (e AuthenticationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationTypeOutput struct{ *pulumi.OutputState }

func (AuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationType)(nil)).Elem()
}

func (o AuthenticationTypeOutput) ToAuthenticationTypeOutput() AuthenticationTypeOutput {
	return o
}

func (o AuthenticationTypeOutput) ToAuthenticationTypeOutputWithContext(ctx context.Context) AuthenticationTypeOutput {
	return o
}

func (o AuthenticationTypeOutput) ToAuthenticationTypePtrOutput() AuthenticationTypePtrOutput {
	return o.ToAuthenticationTypePtrOutputWithContext(context.Background())
}

func (o AuthenticationTypeOutput) ToAuthenticationTypePtrOutputWithContext(ctx context.Context) AuthenticationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationType) *AuthenticationType {
		return &v
	}).(AuthenticationTypePtrOutput)
}

func (o AuthenticationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationTypePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationType)(nil)).Elem()
}

func (o AuthenticationTypePtrOutput) ToAuthenticationTypePtrOutput() AuthenticationTypePtrOutput {
	return o
}

func (o AuthenticationTypePtrOutput) ToAuthenticationTypePtrOutputWithContext(ctx context.Context) AuthenticationTypePtrOutput {
	return o
}

func (o AuthenticationTypePtrOutput) Elem() AuthenticationTypeOutput {
	return o.ApplyT(func(v *AuthenticationType) AuthenticationType {
		if v != nil {
			return *v
		}
		var ret AuthenticationType
		return ret
	}).(AuthenticationTypeOutput)
}

func (o AuthenticationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthenticationTypeInput is an input type that accepts AuthenticationTypeArgs and AuthenticationTypeOutput values.
// You can construct a concrete instance of `AuthenticationTypeInput` via:
//
//          AuthenticationTypeArgs{...}
type AuthenticationTypeInput interface {
	pulumi.Input

	ToAuthenticationTypeOutput() AuthenticationTypeOutput
	ToAuthenticationTypeOutputWithContext(context.Context) AuthenticationTypeOutput
}

var authenticationTypePtrType = reflect.TypeOf((**AuthenticationType)(nil)).Elem()

type AuthenticationTypePtrInput interface {
	pulumi.Input

	ToAuthenticationTypePtrOutput() AuthenticationTypePtrOutput
	ToAuthenticationTypePtrOutputWithContext(context.Context) AuthenticationTypePtrOutput
}

type authenticationTypePtr string

func AuthenticationTypePtr(v string) AuthenticationTypePtrInput {
	return (*authenticationTypePtr)(&v)
}

func (*authenticationTypePtr) ElementType() reflect.Type {
	return authenticationTypePtrType
}

func (in *authenticationTypePtr) ToAuthenticationTypePtrOutput() AuthenticationTypePtrOutput {
	return pulumi.ToOutput(in).(AuthenticationTypePtrOutput)
}

func (in *authenticationTypePtr) ToAuthenticationTypePtrOutputWithContext(ctx context.Context) AuthenticationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationTypePtrOutput)
}

type AutoProvision string

const (
	// Install missing Azure Arc agents on machines automatically
	AutoProvisionOn = AutoProvision("On")
	// Do not install Azure Arc agent on the machines automatically
	AutoProvisionOff = AutoProvision("Off")
)

func (AutoProvision) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvision)(nil)).Elem()
}

func (e AutoProvision) ToAutoProvisionOutput() AutoProvisionOutput {
	return pulumi.ToOutput(e).(AutoProvisionOutput)
}

func (e AutoProvision) ToAutoProvisionOutputWithContext(ctx context.Context) AutoProvisionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoProvisionOutput)
}

func (e AutoProvision) ToAutoProvisionPtrOutput() AutoProvisionPtrOutput {
	return e.ToAutoProvisionPtrOutputWithContext(context.Background())
}

func (e AutoProvision) ToAutoProvisionPtrOutputWithContext(ctx context.Context) AutoProvisionPtrOutput {
	return AutoProvision(e).ToAutoProvisionOutputWithContext(ctx).ToAutoProvisionPtrOutputWithContext(ctx)
}

func (e AutoProvision) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoProvision) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoProvision) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoProvision) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoProvisionOutput struct{ *pulumi.OutputState }

func (AutoProvisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoProvision)(nil)).Elem()
}

func (o AutoProvisionOutput) ToAutoProvisionOutput() AutoProvisionOutput {
	return o
}

func (o AutoProvisionOutput) ToAutoProvisionOutputWithContext(ctx context.Context) AutoProvisionOutput {
	return o
}

func (o AutoProvisionOutput) ToAutoProvisionPtrOutput() AutoProvisionPtrOutput {
	return o.ToAutoProvisionPtrOutputWithContext(context.Background())
}

func (o AutoProvisionOutput) ToAutoProvisionPtrOutputWithContext(ctx context.Context) AutoProvisionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoProvision) *AutoProvision {
		return &v
	}).(AutoProvisionPtrOutput)
}

func (o AutoProvisionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoProvisionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoProvision) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoProvisionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoProvisionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoProvision) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoProvisionPtrOutput struct{ *pulumi.OutputState }

func (AutoProvisionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoProvision)(nil)).Elem()
}

func (o AutoProvisionPtrOutput) ToAutoProvisionPtrOutput() AutoProvisionPtrOutput {
	return o
}

func (o AutoProvisionPtrOutput) ToAutoProvisionPtrOutputWithContext(ctx context.Context) AutoProvisionPtrOutput {
	return o
}

func (o AutoProvisionPtrOutput) Elem() AutoProvisionOutput {
	return o.ApplyT(func(v *AutoProvision) AutoProvision {
		if v != nil {
			return *v
		}
		var ret AutoProvision
		return ret
	}).(AutoProvisionOutput)
}

func (o AutoProvisionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoProvisionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoProvision) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoProvisionInput is an input type that accepts AutoProvisionArgs and AutoProvisionOutput values.
// You can construct a concrete instance of `AutoProvisionInput` via:
//
//          AutoProvisionArgs{...}
type AutoProvisionInput interface {
	pulumi.Input

	ToAutoProvisionOutput() AutoProvisionOutput
	ToAutoProvisionOutputWithContext(context.Context) AutoProvisionOutput
}

var autoProvisionPtrType = reflect.TypeOf((**AutoProvision)(nil)).Elem()

type AutoProvisionPtrInput interface {
	pulumi.Input

	ToAutoProvisionPtrOutput() AutoProvisionPtrOutput
	ToAutoProvisionPtrOutputWithContext(context.Context) AutoProvisionPtrOutput
}

type autoProvisionPtr string

func AutoProvisionPtr(v string) AutoProvisionPtrInput {
	return (*autoProvisionPtr)(&v)
}

func (*autoProvisionPtr) ElementType() reflect.Type {
	return autoProvisionPtrType
}

func (in *autoProvisionPtr) ToAutoProvisionPtrOutput() AutoProvisionPtrOutput {
	return pulumi.ToOutput(in).(AutoProvisionPtrOutput)
}

func (in *autoProvisionPtr) ToAutoProvisionPtrOutputWithContext(ctx context.Context) AutoProvisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoProvisionPtrOutput)
}

type Categories string

const (
	CategoriesCompute           = Categories("Compute")
	CategoriesNetworking        = Categories("Networking")
	CategoriesData              = Categories("Data")
	CategoriesIdentityAndAccess = Categories("IdentityAndAccess")
	CategoriesIoT               = Categories("IoT")
)

func (Categories) ElementType() reflect.Type {
	return reflect.TypeOf((*Categories)(nil)).Elem()
}

func (e Categories) ToCategoriesOutput() CategoriesOutput {
	return pulumi.ToOutput(e).(CategoriesOutput)
}

func (e Categories) ToCategoriesOutputWithContext(ctx context.Context) CategoriesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CategoriesOutput)
}

func (e Categories) ToCategoriesPtrOutput() CategoriesPtrOutput {
	return e.ToCategoriesPtrOutputWithContext(context.Background())
}

func (e Categories) ToCategoriesPtrOutputWithContext(ctx context.Context) CategoriesPtrOutput {
	return Categories(e).ToCategoriesOutputWithContext(ctx).ToCategoriesPtrOutputWithContext(ctx)
}

func (e Categories) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Categories) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Categories) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Categories) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CategoriesOutput struct{ *pulumi.OutputState }

func (CategoriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Categories)(nil)).Elem()
}

func (o CategoriesOutput) ToCategoriesOutput() CategoriesOutput {
	return o
}

func (o CategoriesOutput) ToCategoriesOutputWithContext(ctx context.Context) CategoriesOutput {
	return o
}

func (o CategoriesOutput) ToCategoriesPtrOutput() CategoriesPtrOutput {
	return o.ToCategoriesPtrOutputWithContext(context.Background())
}

func (o CategoriesOutput) ToCategoriesPtrOutputWithContext(ctx context.Context) CategoriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Categories) *Categories {
		return &v
	}).(CategoriesPtrOutput)
}

func (o CategoriesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CategoriesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Categories) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CategoriesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CategoriesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Categories) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CategoriesPtrOutput struct{ *pulumi.OutputState }

func (CategoriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Categories)(nil)).Elem()
}

func (o CategoriesPtrOutput) ToCategoriesPtrOutput() CategoriesPtrOutput {
	return o
}

func (o CategoriesPtrOutput) ToCategoriesPtrOutputWithContext(ctx context.Context) CategoriesPtrOutput {
	return o
}

func (o CategoriesPtrOutput) Elem() CategoriesOutput {
	return o.ApplyT(func(v *Categories) Categories {
		if v != nil {
			return *v
		}
		var ret Categories
		return ret
	}).(CategoriesOutput)
}

func (o CategoriesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CategoriesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Categories) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CategoriesInput is an input type that accepts CategoriesArgs and CategoriesOutput values.
// You can construct a concrete instance of `CategoriesInput` via:
//
//          CategoriesArgs{...}
type CategoriesInput interface {
	pulumi.Input

	ToCategoriesOutput() CategoriesOutput
	ToCategoriesOutputWithContext(context.Context) CategoriesOutput
}

var categoriesPtrType = reflect.TypeOf((**Categories)(nil)).Elem()

type CategoriesPtrInput interface {
	pulumi.Input

	ToCategoriesPtrOutput() CategoriesPtrOutput
	ToCategoriesPtrOutputWithContext(context.Context) CategoriesPtrOutput
}

type categoriesPtr string

func CategoriesPtr(v string) CategoriesPtrInput {
	return (*categoriesPtr)(&v)
}

func (*categoriesPtr) ElementType() reflect.Type {
	return categoriesPtrType
}

func (in *categoriesPtr) ToCategoriesPtrOutput() CategoriesPtrOutput {
	return pulumi.ToOutput(in).(CategoriesPtrOutput)
}

func (in *categoriesPtr) ToCategoriesPtrOutputWithContext(ctx context.Context) CategoriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CategoriesPtrOutput)
}

type DataSource string

const (
	// Devices twin data
	DataSourceTwinData = DataSource("TwinData")
)

func (DataSource) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSource)(nil)).Elem()
}

func (e DataSource) ToDataSourceOutput() DataSourceOutput {
	return pulumi.ToOutput(e).(DataSourceOutput)
}

func (e DataSource) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceOutput)
}

func (e DataSource) ToDataSourcePtrOutput() DataSourcePtrOutput {
	return e.ToDataSourcePtrOutputWithContext(context.Background())
}

func (e DataSource) ToDataSourcePtrOutputWithContext(ctx context.Context) DataSourcePtrOutput {
	return DataSource(e).ToDataSourceOutputWithContext(ctx).ToDataSourcePtrOutputWithContext(ctx)
}

func (e DataSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceOutput struct{ *pulumi.OutputState }

func (DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSource)(nil)).Elem()
}

func (o DataSourceOutput) ToDataSourceOutput() DataSourceOutput {
	return o
}

func (o DataSourceOutput) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return o
}

func (o DataSourceOutput) ToDataSourcePtrOutput() DataSourcePtrOutput {
	return o.ToDataSourcePtrOutputWithContext(context.Background())
}

func (o DataSourceOutput) ToDataSourcePtrOutputWithContext(ctx context.Context) DataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSource) *DataSource {
		return &v
	}).(DataSourcePtrOutput)
}

func (o DataSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourcePtrOutput struct{ *pulumi.OutputState }

func (DataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSource)(nil)).Elem()
}

func (o DataSourcePtrOutput) ToDataSourcePtrOutput() DataSourcePtrOutput {
	return o
}

func (o DataSourcePtrOutput) ToDataSourcePtrOutputWithContext(ctx context.Context) DataSourcePtrOutput {
	return o
}

func (o DataSourcePtrOutput) Elem() DataSourceOutput {
	return o.ApplyT(func(v *DataSource) DataSource {
		if v != nil {
			return *v
		}
		var ret DataSource
		return ret
	}).(DataSourceOutput)
}

func (o DataSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceInput is an input type that accepts DataSourceArgs and DataSourceOutput values.
// You can construct a concrete instance of `DataSourceInput` via:
//
//          DataSourceArgs{...}
type DataSourceInput interface {
	pulumi.Input

	ToDataSourceOutput() DataSourceOutput
	ToDataSourceOutputWithContext(context.Context) DataSourceOutput
}

var dataSourcePtrType = reflect.TypeOf((**DataSource)(nil)).Elem()

type DataSourcePtrInput interface {
	pulumi.Input

	ToDataSourcePtrOutput() DataSourcePtrOutput
	ToDataSourcePtrOutputWithContext(context.Context) DataSourcePtrOutput
}

type dataSourcePtr string

func DataSourcePtr(v string) DataSourcePtrInput {
	return (*dataSourcePtr)(&v)
}

func (*dataSourcePtr) ElementType() reflect.Type {
	return dataSourcePtrType
}

func (in *dataSourcePtr) ToDataSourcePtrOutput() DataSourcePtrOutput {
	return pulumi.ToOutput(in).(DataSourcePtrOutput)
}

func (in *dataSourcePtr) ToDataSourcePtrOutputWithContext(ctx context.Context) DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourcePtrOutput)
}

type EventSource string

const (
	EventSourceAssessments                            = EventSource("Assessments")
	EventSourceSubAssessments                         = EventSource("SubAssessments")
	EventSourceAlerts                                 = EventSource("Alerts")
	EventSourceSecureScores                           = EventSource("SecureScores")
	EventSourceSecureScoresSnapshot                   = EventSource("SecureScoresSnapshot")
	EventSourceSecureScoreControls                    = EventSource("SecureScoreControls")
	EventSourceSecureScoreControlsSnapshot            = EventSource("SecureScoreControlsSnapshot")
	EventSourceRegulatoryComplianceAssessment         = EventSource("RegulatoryComplianceAssessment")
	EventSourceRegulatoryComplianceAssessmentSnapshot = EventSource("RegulatoryComplianceAssessmentSnapshot")
)

func (EventSource) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSource)(nil)).Elem()
}

func (e EventSource) ToEventSourceOutput() EventSourceOutput {
	return pulumi.ToOutput(e).(EventSourceOutput)
}

func (e EventSource) ToEventSourceOutputWithContext(ctx context.Context) EventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventSourceOutput)
}

func (e EventSource) ToEventSourcePtrOutput() EventSourcePtrOutput {
	return e.ToEventSourcePtrOutputWithContext(context.Background())
}

func (e EventSource) ToEventSourcePtrOutputWithContext(ctx context.Context) EventSourcePtrOutput {
	return EventSource(e).ToEventSourceOutputWithContext(ctx).ToEventSourcePtrOutputWithContext(ctx)
}

func (e EventSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventSourceOutput struct{ *pulumi.OutputState }

func (EventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSource)(nil)).Elem()
}

func (o EventSourceOutput) ToEventSourceOutput() EventSourceOutput {
	return o
}

func (o EventSourceOutput) ToEventSourceOutputWithContext(ctx context.Context) EventSourceOutput {
	return o
}

func (o EventSourceOutput) ToEventSourcePtrOutput() EventSourcePtrOutput {
	return o.ToEventSourcePtrOutputWithContext(context.Background())
}

func (o EventSourceOutput) ToEventSourcePtrOutputWithContext(ctx context.Context) EventSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSource) *EventSource {
		return &v
	}).(EventSourcePtrOutput)
}

func (o EventSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventSourcePtrOutput struct{ *pulumi.OutputState }

func (EventSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSource)(nil)).Elem()
}

func (o EventSourcePtrOutput) ToEventSourcePtrOutput() EventSourcePtrOutput {
	return o
}

func (o EventSourcePtrOutput) ToEventSourcePtrOutputWithContext(ctx context.Context) EventSourcePtrOutput {
	return o
}

func (o EventSourcePtrOutput) Elem() EventSourceOutput {
	return o.ApplyT(func(v *EventSource) EventSource {
		if v != nil {
			return *v
		}
		var ret EventSource
		return ret
	}).(EventSourceOutput)
}

func (o EventSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventSourceInput is an input type that accepts EventSourceArgs and EventSourceOutput values.
// You can construct a concrete instance of `EventSourceInput` via:
//
//          EventSourceArgs{...}
type EventSourceInput interface {
	pulumi.Input

	ToEventSourceOutput() EventSourceOutput
	ToEventSourceOutputWithContext(context.Context) EventSourceOutput
}

var eventSourcePtrType = reflect.TypeOf((**EventSource)(nil)).Elem()

type EventSourcePtrInput interface {
	pulumi.Input

	ToEventSourcePtrOutput() EventSourcePtrOutput
	ToEventSourcePtrOutputWithContext(context.Context) EventSourcePtrOutput
}

type eventSourcePtr string

func EventSourcePtr(v string) EventSourcePtrInput {
	return (*eventSourcePtr)(&v)
}

func (*eventSourcePtr) ElementType() reflect.Type {
	return eventSourcePtrType
}

func (in *eventSourcePtr) ToEventSourcePtrOutput() EventSourcePtrOutput {
	return pulumi.ToOutput(in).(EventSourcePtrOutput)
}

func (in *eventSourcePtr) ToEventSourcePtrOutputWithContext(ctx context.Context) EventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventSourcePtrOutput)
}

type ExportData string

const (
	// Agent raw events
	ExportDataRawEvents = ExportData("RawEvents")
)

func (ExportData) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportData)(nil)).Elem()
}

func (e ExportData) ToExportDataOutput() ExportDataOutput {
	return pulumi.ToOutput(e).(ExportDataOutput)
}

func (e ExportData) ToExportDataOutputWithContext(ctx context.Context) ExportDataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExportDataOutput)
}

func (e ExportData) ToExportDataPtrOutput() ExportDataPtrOutput {
	return e.ToExportDataPtrOutputWithContext(context.Background())
}

func (e ExportData) ToExportDataPtrOutputWithContext(ctx context.Context) ExportDataPtrOutput {
	return ExportData(e).ToExportDataOutputWithContext(ctx).ToExportDataPtrOutputWithContext(ctx)
}

func (e ExportData) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExportData) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExportData) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExportData) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExportDataOutput struct{ *pulumi.OutputState }

func (ExportDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportData)(nil)).Elem()
}

func (o ExportDataOutput) ToExportDataOutput() ExportDataOutput {
	return o
}

func (o ExportDataOutput) ToExportDataOutputWithContext(ctx context.Context) ExportDataOutput {
	return o
}

func (o ExportDataOutput) ToExportDataPtrOutput() ExportDataPtrOutput {
	return o.ToExportDataPtrOutputWithContext(context.Background())
}

func (o ExportDataOutput) ToExportDataPtrOutputWithContext(ctx context.Context) ExportDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExportData) *ExportData {
		return &v
	}).(ExportDataPtrOutput)
}

func (o ExportDataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExportDataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExportData) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExportDataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExportDataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExportData) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExportDataPtrOutput struct{ *pulumi.OutputState }

func (ExportDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportData)(nil)).Elem()
}

func (o ExportDataPtrOutput) ToExportDataPtrOutput() ExportDataPtrOutput {
	return o
}

func (o ExportDataPtrOutput) ToExportDataPtrOutputWithContext(ctx context.Context) ExportDataPtrOutput {
	return o
}

func (o ExportDataPtrOutput) Elem() ExportDataOutput {
	return o.ApplyT(func(v *ExportData) ExportData {
		if v != nil {
			return *v
		}
		var ret ExportData
		return ret
	}).(ExportDataOutput)
}

func (o ExportDataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExportDataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExportData) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExportDataInput is an input type that accepts ExportDataArgs and ExportDataOutput values.
// You can construct a concrete instance of `ExportDataInput` via:
//
//          ExportDataArgs{...}
type ExportDataInput interface {
	pulumi.Input

	ToExportDataOutput() ExportDataOutput
	ToExportDataOutputWithContext(context.Context) ExportDataOutput
}

var exportDataPtrType = reflect.TypeOf((**ExportData)(nil)).Elem()

type ExportDataPtrInput interface {
	pulumi.Input

	ToExportDataPtrOutput() ExportDataPtrOutput
	ToExportDataPtrOutputWithContext(context.Context) ExportDataPtrOutput
}

type exportDataPtr string

func ExportDataPtr(v string) ExportDataPtrInput {
	return (*exportDataPtr)(&v)
}

func (*exportDataPtr) ElementType() reflect.Type {
	return exportDataPtrType
}

func (in *exportDataPtr) ToExportDataPtrOutput() ExportDataPtrOutput {
	return pulumi.ToOutput(in).(ExportDataPtrOutput)
}

func (in *exportDataPtr) ToExportDataPtrOutputWithContext(ctx context.Context) ExportDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExportDataPtrOutput)
}

type ImplementationEffort string

const (
	ImplementationEffortLow      = ImplementationEffort("Low")
	ImplementationEffortModerate = ImplementationEffort("Moderate")
	ImplementationEffortHigh     = ImplementationEffort("High")
)

func (ImplementationEffort) ElementType() reflect.Type {
	return reflect.TypeOf((*ImplementationEffort)(nil)).Elem()
}

func (e ImplementationEffort) ToImplementationEffortOutput() ImplementationEffortOutput {
	return pulumi.ToOutput(e).(ImplementationEffortOutput)
}

func (e ImplementationEffort) ToImplementationEffortOutputWithContext(ctx context.Context) ImplementationEffortOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImplementationEffortOutput)
}

func (e ImplementationEffort) ToImplementationEffortPtrOutput() ImplementationEffortPtrOutput {
	return e.ToImplementationEffortPtrOutputWithContext(context.Background())
}

func (e ImplementationEffort) ToImplementationEffortPtrOutputWithContext(ctx context.Context) ImplementationEffortPtrOutput {
	return ImplementationEffort(e).ToImplementationEffortOutputWithContext(ctx).ToImplementationEffortPtrOutputWithContext(ctx)
}

func (e ImplementationEffort) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImplementationEffort) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImplementationEffort) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImplementationEffort) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImplementationEffortOutput struct{ *pulumi.OutputState }

func (ImplementationEffortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImplementationEffort)(nil)).Elem()
}

func (o ImplementationEffortOutput) ToImplementationEffortOutput() ImplementationEffortOutput {
	return o
}

func (o ImplementationEffortOutput) ToImplementationEffortOutputWithContext(ctx context.Context) ImplementationEffortOutput {
	return o
}

func (o ImplementationEffortOutput) ToImplementationEffortPtrOutput() ImplementationEffortPtrOutput {
	return o.ToImplementationEffortPtrOutputWithContext(context.Background())
}

func (o ImplementationEffortOutput) ToImplementationEffortPtrOutputWithContext(ctx context.Context) ImplementationEffortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImplementationEffort) *ImplementationEffort {
		return &v
	}).(ImplementationEffortPtrOutput)
}

func (o ImplementationEffortOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImplementationEffortOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImplementationEffort) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImplementationEffortOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImplementationEffortOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImplementationEffort) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImplementationEffortPtrOutput struct{ *pulumi.OutputState }

func (ImplementationEffortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImplementationEffort)(nil)).Elem()
}

func (o ImplementationEffortPtrOutput) ToImplementationEffortPtrOutput() ImplementationEffortPtrOutput {
	return o
}

func (o ImplementationEffortPtrOutput) ToImplementationEffortPtrOutputWithContext(ctx context.Context) ImplementationEffortPtrOutput {
	return o
}

func (o ImplementationEffortPtrOutput) Elem() ImplementationEffortOutput {
	return o.ApplyT(func(v *ImplementationEffort) ImplementationEffort {
		if v != nil {
			return *v
		}
		var ret ImplementationEffort
		return ret
	}).(ImplementationEffortOutput)
}

func (o ImplementationEffortPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImplementationEffortPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImplementationEffort) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImplementationEffortInput is an input type that accepts ImplementationEffortArgs and ImplementationEffortOutput values.
// You can construct a concrete instance of `ImplementationEffortInput` via:
//
//          ImplementationEffortArgs{...}
type ImplementationEffortInput interface {
	pulumi.Input

	ToImplementationEffortOutput() ImplementationEffortOutput
	ToImplementationEffortOutputWithContext(context.Context) ImplementationEffortOutput
}

var implementationEffortPtrType = reflect.TypeOf((**ImplementationEffort)(nil)).Elem()

type ImplementationEffortPtrInput interface {
	pulumi.Input

	ToImplementationEffortPtrOutput() ImplementationEffortPtrOutput
	ToImplementationEffortPtrOutputWithContext(context.Context) ImplementationEffortPtrOutput
}

type implementationEffortPtr string

func ImplementationEffortPtr(v string) ImplementationEffortPtrInput {
	return (*implementationEffortPtr)(&v)
}

func (*implementationEffortPtr) ElementType() reflect.Type {
	return implementationEffortPtrType
}

func (in *implementationEffortPtr) ToImplementationEffortPtrOutput() ImplementationEffortPtrOutput {
	return pulumi.ToOutput(in).(ImplementationEffortPtrOutput)
}

func (in *implementationEffortPtr) ToImplementationEffortPtrOutputWithContext(ctx context.Context) ImplementationEffortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImplementationEffortPtrOutput)
}

type MinimalSeverity string

const (
	// Get notifications on new alerts with High severity
	MinimalSeverityHigh = MinimalSeverity("High")
	// Get notifications on new alerts with medium or high severity
	MinimalSeverityMedium = MinimalSeverity("Medium")
	// Don't get notifications on new alerts with low, medium or high severity
	MinimalSeverityLow = MinimalSeverity("Low")
)

func (MinimalSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*MinimalSeverity)(nil)).Elem()
}

func (e MinimalSeverity) ToMinimalSeverityOutput() MinimalSeverityOutput {
	return pulumi.ToOutput(e).(MinimalSeverityOutput)
}

func (e MinimalSeverity) ToMinimalSeverityOutputWithContext(ctx context.Context) MinimalSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MinimalSeverityOutput)
}

func (e MinimalSeverity) ToMinimalSeverityPtrOutput() MinimalSeverityPtrOutput {
	return e.ToMinimalSeverityPtrOutputWithContext(context.Background())
}

func (e MinimalSeverity) ToMinimalSeverityPtrOutputWithContext(ctx context.Context) MinimalSeverityPtrOutput {
	return MinimalSeverity(e).ToMinimalSeverityOutputWithContext(ctx).ToMinimalSeverityPtrOutputWithContext(ctx)
}

func (e MinimalSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MinimalSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MinimalSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MinimalSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MinimalSeverityOutput struct{ *pulumi.OutputState }

func (MinimalSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MinimalSeverity)(nil)).Elem()
}

func (o MinimalSeverityOutput) ToMinimalSeverityOutput() MinimalSeverityOutput {
	return o
}

func (o MinimalSeverityOutput) ToMinimalSeverityOutputWithContext(ctx context.Context) MinimalSeverityOutput {
	return o
}

func (o MinimalSeverityOutput) ToMinimalSeverityPtrOutput() MinimalSeverityPtrOutput {
	return o.ToMinimalSeverityPtrOutputWithContext(context.Background())
}

func (o MinimalSeverityOutput) ToMinimalSeverityPtrOutputWithContext(ctx context.Context) MinimalSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MinimalSeverity) *MinimalSeverity {
		return &v
	}).(MinimalSeverityPtrOutput)
}

func (o MinimalSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MinimalSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MinimalSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MinimalSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MinimalSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MinimalSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MinimalSeverityPtrOutput struct{ *pulumi.OutputState }

func (MinimalSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MinimalSeverity)(nil)).Elem()
}

func (o MinimalSeverityPtrOutput) ToMinimalSeverityPtrOutput() MinimalSeverityPtrOutput {
	return o
}

func (o MinimalSeverityPtrOutput) ToMinimalSeverityPtrOutputWithContext(ctx context.Context) MinimalSeverityPtrOutput {
	return o
}

func (o MinimalSeverityPtrOutput) Elem() MinimalSeverityOutput {
	return o.ApplyT(func(v *MinimalSeverity) MinimalSeverity {
		if v != nil {
			return *v
		}
		var ret MinimalSeverity
		return ret
	}).(MinimalSeverityOutput)
}

func (o MinimalSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MinimalSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MinimalSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MinimalSeverityInput is an input type that accepts MinimalSeverityArgs and MinimalSeverityOutput values.
// You can construct a concrete instance of `MinimalSeverityInput` via:
//
//          MinimalSeverityArgs{...}
type MinimalSeverityInput interface {
	pulumi.Input

	ToMinimalSeverityOutput() MinimalSeverityOutput
	ToMinimalSeverityOutputWithContext(context.Context) MinimalSeverityOutput
}

var minimalSeverityPtrType = reflect.TypeOf((**MinimalSeverity)(nil)).Elem()

type MinimalSeverityPtrInput interface {
	pulumi.Input

	ToMinimalSeverityPtrOutput() MinimalSeverityPtrOutput
	ToMinimalSeverityPtrOutputWithContext(context.Context) MinimalSeverityPtrOutput
}

type minimalSeverityPtr string

func MinimalSeverityPtr(v string) MinimalSeverityPtrInput {
	return (*minimalSeverityPtr)(&v)
}

func (*minimalSeverityPtr) ElementType() reflect.Type {
	return minimalSeverityPtrType
}

func (in *minimalSeverityPtr) ToMinimalSeverityPtrOutput() MinimalSeverityPtrOutput {
	return pulumi.ToOutput(in).(MinimalSeverityPtrOutput)
}

func (in *minimalSeverityPtr) ToMinimalSeverityPtrOutputWithContext(ctx context.Context) MinimalSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MinimalSeverityPtrOutput)
}

type Operator string

const (
	// Applies for decimal and non-decimal operands
	OperatorEquals = Operator("Equals")
	// Applies only for decimal operands
	OperatorGreaterThan = Operator("GreaterThan")
	// Applies only for decimal operands
	OperatorGreaterThanOrEqualTo = Operator("GreaterThanOrEqualTo")
	// Applies only for decimal operands
	OperatorLesserThan = Operator("LesserThan")
	// Applies only for decimal operands
	OperatorLesserThanOrEqualTo = Operator("LesserThanOrEqualTo")
	// Applies  for decimal and non-decimal operands
	OperatorNotEquals = Operator("NotEquals")
	// Applies only for non-decimal operands
	OperatorContains = Operator("Contains")
	// Applies only for non-decimal operands
	OperatorStartsWith = Operator("StartsWith")
	// Applies only for non-decimal operands
	OperatorEndsWith = Operator("EndsWith")
)

func (Operator) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (e Operator) ToOperatorOutput() OperatorOutput {
	return pulumi.ToOutput(e).(OperatorOutput)
}

func (e Operator) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatorOutput)
}

func (e Operator) ToOperatorPtrOutput() OperatorPtrOutput {
	return e.ToOperatorPtrOutputWithContext(context.Background())
}

func (e Operator) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return Operator(e).ToOperatorOutputWithContext(ctx).ToOperatorPtrOutputWithContext(ctx)
}

func (e Operator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Operator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Operator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatorOutput struct{ *pulumi.OutputState }

func (OperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Operator)(nil)).Elem()
}

func (o OperatorOutput) ToOperatorOutput() OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorOutputWithContext(ctx context.Context) OperatorOutput {
	return o
}

func (o OperatorOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o.ToOperatorPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Operator) *Operator {
		return &v
	}).(OperatorPtrOutput)
}

func (o OperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Operator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatorPtrOutput struct{ *pulumi.OutputState }

func (OperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Operator)(nil)).Elem()
}

func (o OperatorPtrOutput) ToOperatorPtrOutput() OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return o
}

func (o OperatorPtrOutput) Elem() OperatorOutput {
	return o.ApplyT(func(v *Operator) Operator {
		if v != nil {
			return *v
		}
		var ret Operator
		return ret
	}).(OperatorOutput)
}

func (o OperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Operator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatorInput is an input type that accepts OperatorArgs and OperatorOutput values.
// You can construct a concrete instance of `OperatorInput` via:
//
//          OperatorArgs{...}
type OperatorInput interface {
	pulumi.Input

	ToOperatorOutput() OperatorOutput
	ToOperatorOutputWithContext(context.Context) OperatorOutput
}

var operatorPtrType = reflect.TypeOf((**Operator)(nil)).Elem()

type OperatorPtrInput interface {
	pulumi.Input

	ToOperatorPtrOutput() OperatorPtrOutput
	ToOperatorPtrOutputWithContext(context.Context) OperatorPtrOutput
}

type operatorPtr string

func OperatorPtr(v string) OperatorPtrInput {
	return (*operatorPtr)(&v)
}

func (*operatorPtr) ElementType() reflect.Type {
	return operatorPtrType
}

func (in *operatorPtr) ToOperatorPtrOutput() OperatorPtrOutput {
	return pulumi.ToOutput(in).(OperatorPtrOutput)
}

func (in *operatorPtr) ToOperatorPtrOutputWithContext(ctx context.Context) OperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatorPtrOutput)
}

type PropertyType string

const (
	PropertyTypeString  = PropertyType("String")
	PropertyTypeInteger = PropertyType("Integer")
	PropertyTypeNumber  = PropertyType("Number")
	PropertyTypeBoolean = PropertyType("Boolean")
)

func (PropertyType) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyType)(nil)).Elem()
}

func (e PropertyType) ToPropertyTypeOutput() PropertyTypeOutput {
	return pulumi.ToOutput(e).(PropertyTypeOutput)
}

func (e PropertyType) ToPropertyTypeOutputWithContext(ctx context.Context) PropertyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PropertyTypeOutput)
}

func (e PropertyType) ToPropertyTypePtrOutput() PropertyTypePtrOutput {
	return e.ToPropertyTypePtrOutputWithContext(context.Background())
}

func (e PropertyType) ToPropertyTypePtrOutputWithContext(ctx context.Context) PropertyTypePtrOutput {
	return PropertyType(e).ToPropertyTypeOutputWithContext(ctx).ToPropertyTypePtrOutputWithContext(ctx)
}

func (e PropertyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PropertyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PropertyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PropertyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PropertyTypeOutput struct{ *pulumi.OutputState }

func (PropertyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyType)(nil)).Elem()
}

func (o PropertyTypeOutput) ToPropertyTypeOutput() PropertyTypeOutput {
	return o
}

func (o PropertyTypeOutput) ToPropertyTypeOutputWithContext(ctx context.Context) PropertyTypeOutput {
	return o
}

func (o PropertyTypeOutput) ToPropertyTypePtrOutput() PropertyTypePtrOutput {
	return o.ToPropertyTypePtrOutputWithContext(context.Background())
}

func (o PropertyTypeOutput) ToPropertyTypePtrOutputWithContext(ctx context.Context) PropertyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyType) *PropertyType {
		return &v
	}).(PropertyTypePtrOutput)
}

func (o PropertyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PropertyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PropertyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PropertyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PropertyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PropertyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PropertyTypePtrOutput struct{ *pulumi.OutputState }

func (PropertyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyType)(nil)).Elem()
}

func (o PropertyTypePtrOutput) ToPropertyTypePtrOutput() PropertyTypePtrOutput {
	return o
}

func (o PropertyTypePtrOutput) ToPropertyTypePtrOutputWithContext(ctx context.Context) PropertyTypePtrOutput {
	return o
}

func (o PropertyTypePtrOutput) Elem() PropertyTypeOutput {
	return o.ApplyT(func(v *PropertyType) PropertyType {
		if v != nil {
			return *v
		}
		var ret PropertyType
		return ret
	}).(PropertyTypeOutput)
}

func (o PropertyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PropertyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PropertyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PropertyTypeInput is an input type that accepts PropertyTypeArgs and PropertyTypeOutput values.
// You can construct a concrete instance of `PropertyTypeInput` via:
//
//          PropertyTypeArgs{...}
type PropertyTypeInput interface {
	pulumi.Input

	ToPropertyTypeOutput() PropertyTypeOutput
	ToPropertyTypeOutputWithContext(context.Context) PropertyTypeOutput
}

var propertyTypePtrType = reflect.TypeOf((**PropertyType)(nil)).Elem()

type PropertyTypePtrInput interface {
	pulumi.Input

	ToPropertyTypePtrOutput() PropertyTypePtrOutput
	ToPropertyTypePtrOutputWithContext(context.Context) PropertyTypePtrOutput
}

type propertyTypePtr string

func PropertyTypePtr(v string) PropertyTypePtrInput {
	return (*propertyTypePtr)(&v)
}

func (*propertyTypePtr) ElementType() reflect.Type {
	return propertyTypePtrType
}

func (in *propertyTypePtr) ToPropertyTypePtrOutput() PropertyTypePtrOutput {
	return pulumi.ToOutput(in).(PropertyTypePtrOutput)
}

func (in *propertyTypePtr) ToPropertyTypePtrOutputWithContext(ctx context.Context) PropertyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PropertyTypePtrOutput)
}

type Protocol string

const (
	ProtocolTCP = Protocol("TCP")
	ProtocolUDP = Protocol("UDP")
	ProtocolAll = Protocol("*")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts ProtocolArgs and ProtocolOutput values.
// You can construct a concrete instance of `ProtocolInput` via:
//
//          ProtocolArgs{...}
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

type RecommendationConfigStatus string

const (
	RecommendationConfigStatusDisabled = RecommendationConfigStatus("Disabled")
	RecommendationConfigStatusEnabled  = RecommendationConfigStatus("Enabled")
)

func (RecommendationConfigStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationConfigStatus)(nil)).Elem()
}

func (e RecommendationConfigStatus) ToRecommendationConfigStatusOutput() RecommendationConfigStatusOutput {
	return pulumi.ToOutput(e).(RecommendationConfigStatusOutput)
}

func (e RecommendationConfigStatus) ToRecommendationConfigStatusOutputWithContext(ctx context.Context) RecommendationConfigStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecommendationConfigStatusOutput)
}

func (e RecommendationConfigStatus) ToRecommendationConfigStatusPtrOutput() RecommendationConfigStatusPtrOutput {
	return e.ToRecommendationConfigStatusPtrOutputWithContext(context.Background())
}

func (e RecommendationConfigStatus) ToRecommendationConfigStatusPtrOutputWithContext(ctx context.Context) RecommendationConfigStatusPtrOutput {
	return RecommendationConfigStatus(e).ToRecommendationConfigStatusOutputWithContext(ctx).ToRecommendationConfigStatusPtrOutputWithContext(ctx)
}

func (e RecommendationConfigStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationConfigStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationConfigStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecommendationConfigStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecommendationConfigStatusOutput struct{ *pulumi.OutputState }

func (RecommendationConfigStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationConfigStatus)(nil)).Elem()
}

func (o RecommendationConfigStatusOutput) ToRecommendationConfigStatusOutput() RecommendationConfigStatusOutput {
	return o
}

func (o RecommendationConfigStatusOutput) ToRecommendationConfigStatusOutputWithContext(ctx context.Context) RecommendationConfigStatusOutput {
	return o
}

func (o RecommendationConfigStatusOutput) ToRecommendationConfigStatusPtrOutput() RecommendationConfigStatusPtrOutput {
	return o.ToRecommendationConfigStatusPtrOutputWithContext(context.Background())
}

func (o RecommendationConfigStatusOutput) ToRecommendationConfigStatusPtrOutputWithContext(ctx context.Context) RecommendationConfigStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecommendationConfigStatus) *RecommendationConfigStatus {
		return &v
	}).(RecommendationConfigStatusPtrOutput)
}

func (o RecommendationConfigStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecommendationConfigStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationConfigStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecommendationConfigStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationConfigStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationConfigStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecommendationConfigStatusPtrOutput struct{ *pulumi.OutputState }

func (RecommendationConfigStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendationConfigStatus)(nil)).Elem()
}

func (o RecommendationConfigStatusPtrOutput) ToRecommendationConfigStatusPtrOutput() RecommendationConfigStatusPtrOutput {
	return o
}

func (o RecommendationConfigStatusPtrOutput) ToRecommendationConfigStatusPtrOutputWithContext(ctx context.Context) RecommendationConfigStatusPtrOutput {
	return o
}

func (o RecommendationConfigStatusPtrOutput) Elem() RecommendationConfigStatusOutput {
	return o.ApplyT(func(v *RecommendationConfigStatus) RecommendationConfigStatus {
		if v != nil {
			return *v
		}
		var ret RecommendationConfigStatus
		return ret
	}).(RecommendationConfigStatusOutput)
}

func (o RecommendationConfigStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationConfigStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecommendationConfigStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecommendationConfigStatusInput is an input type that accepts RecommendationConfigStatusArgs and RecommendationConfigStatusOutput values.
// You can construct a concrete instance of `RecommendationConfigStatusInput` via:
//
//          RecommendationConfigStatusArgs{...}
type RecommendationConfigStatusInput interface {
	pulumi.Input

	ToRecommendationConfigStatusOutput() RecommendationConfigStatusOutput
	ToRecommendationConfigStatusOutputWithContext(context.Context) RecommendationConfigStatusOutput
}

var recommendationConfigStatusPtrType = reflect.TypeOf((**RecommendationConfigStatus)(nil)).Elem()

type RecommendationConfigStatusPtrInput interface {
	pulumi.Input

	ToRecommendationConfigStatusPtrOutput() RecommendationConfigStatusPtrOutput
	ToRecommendationConfigStatusPtrOutputWithContext(context.Context) RecommendationConfigStatusPtrOutput
}

type recommendationConfigStatusPtr string

func RecommendationConfigStatusPtr(v string) RecommendationConfigStatusPtrInput {
	return (*recommendationConfigStatusPtr)(&v)
}

func (*recommendationConfigStatusPtr) ElementType() reflect.Type {
	return recommendationConfigStatusPtrType
}

func (in *recommendationConfigStatusPtr) ToRecommendationConfigStatusPtrOutput() RecommendationConfigStatusPtrOutput {
	return pulumi.ToOutput(in).(RecommendationConfigStatusPtrOutput)
}

func (in *recommendationConfigStatusPtr) ToRecommendationConfigStatusPtrOutputWithContext(ctx context.Context) RecommendationConfigStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecommendationConfigStatusPtrOutput)
}

type RecommendationType string

const (
	// Authentication schema used for pull an edge module from an ACR repository does not use Service Principal Authentication.
	RecommendationType_IoT_ACRAuthentication = RecommendationType("IoT_ACRAuthentication")
	// IoT agent message size capacity is currently underutilized, causing an increase in the number of sent messages. Adjust message intervals for better utilization.
	RecommendationType_IoT_AgentSendsUnutilizedMessages = RecommendationType("IoT_AgentSendsUnutilizedMessages")
	// Identified security related system configuration issues.
	RecommendationType_IoT_Baseline = RecommendationType("IoT_Baseline")
	// You can optimize Edge Hub memory usage by turning off protocol heads for any protocols not used by Edge modules in your solution.
	RecommendationType_IoT_EdgeHubMemOptimize = RecommendationType("IoT_EdgeHubMemOptimize")
	// Logging is disabled for this edge module.
	RecommendationType_IoT_EdgeLoggingOptions = RecommendationType("IoT_EdgeLoggingOptions")
	// A minority within a device security group has inconsistent Edge Module settings with the rest of their group.
	RecommendationType_IoT_InconsistentModuleSettings = RecommendationType("IoT_InconsistentModuleSettings")
	// Install the Azure Security of Things Agent.
	RecommendationType_IoT_InstallAgent = RecommendationType("IoT_InstallAgent")
	// IP Filter Configuration should have rules defined for allowed traffic and should deny all other traffic by default.
	RecommendationType_IoT_IPFilter_DenyAll = RecommendationType("IoT_IPFilter_DenyAll")
	// An Allow IP Filter rules source IP range is too large. Overly permissive rules might expose your IoT hub to malicious intenders.
	RecommendationType_IoT_IPFilter_PermissiveRule = RecommendationType("IoT_IPFilter_PermissiveRule")
	// A listening endpoint was found on the device.
	RecommendationType_IoT_OpenPorts = RecommendationType("IoT_OpenPorts")
	// An Allowed firewall policy was found (INPUT/OUTPUT). The policy should Deny all traffic by default and define rules to allow necessary communication to/from the device.
	RecommendationType_IoT_PermissiveFirewallPolicy = RecommendationType("IoT_PermissiveFirewallPolicy")
	// A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports.
	RecommendationType_IoT_PermissiveInputFirewallRules = RecommendationType("IoT_PermissiveInputFirewallRules")
	// A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports.
	RecommendationType_IoT_PermissiveOutputFirewallRules = RecommendationType("IoT_PermissiveOutputFirewallRules")
	// Edge module is configured to run in privileged mode, with extensive Linux capabilities or with host-level network access (send/receive data to host machine).
	RecommendationType_IoT_PrivilegedDockerOptions = RecommendationType("IoT_PrivilegedDockerOptions")
	// Same authentication credentials to the IoT Hub used by multiple devices. This could indicate an illegitimate device impersonating a legitimate device. It also exposes the risk of device impersonation by an attacker.
	RecommendationType_IoT_SharedCredentials = RecommendationType("IoT_SharedCredentials")
	// Insecure TLS configurations detected. Immediate upgrade recommended.
	RecommendationType_IoT_VulnerableTLSCipherSuite = RecommendationType("IoT_VulnerableTLSCipherSuite")
)

func (RecommendationType) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationType)(nil)).Elem()
}

func (e RecommendationType) ToRecommendationTypeOutput() RecommendationTypeOutput {
	return pulumi.ToOutput(e).(RecommendationTypeOutput)
}

func (e RecommendationType) ToRecommendationTypeOutputWithContext(ctx context.Context) RecommendationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecommendationTypeOutput)
}

func (e RecommendationType) ToRecommendationTypePtrOutput() RecommendationTypePtrOutput {
	return e.ToRecommendationTypePtrOutputWithContext(context.Background())
}

func (e RecommendationType) ToRecommendationTypePtrOutputWithContext(ctx context.Context) RecommendationTypePtrOutput {
	return RecommendationType(e).ToRecommendationTypeOutputWithContext(ctx).ToRecommendationTypePtrOutputWithContext(ctx)
}

func (e RecommendationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecommendationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecommendationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecommendationTypeOutput struct{ *pulumi.OutputState }

func (RecommendationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendationType)(nil)).Elem()
}

func (o RecommendationTypeOutput) ToRecommendationTypeOutput() RecommendationTypeOutput {
	return o
}

func (o RecommendationTypeOutput) ToRecommendationTypeOutputWithContext(ctx context.Context) RecommendationTypeOutput {
	return o
}

func (o RecommendationTypeOutput) ToRecommendationTypePtrOutput() RecommendationTypePtrOutput {
	return o.ToRecommendationTypePtrOutputWithContext(context.Background())
}

func (o RecommendationTypeOutput) ToRecommendationTypePtrOutputWithContext(ctx context.Context) RecommendationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecommendationType) *RecommendationType {
		return &v
	}).(RecommendationTypePtrOutput)
}

func (o RecommendationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecommendationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecommendationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecommendationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecommendationTypePtrOutput struct{ *pulumi.OutputState }

func (RecommendationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendationType)(nil)).Elem()
}

func (o RecommendationTypePtrOutput) ToRecommendationTypePtrOutput() RecommendationTypePtrOutput {
	return o
}

func (o RecommendationTypePtrOutput) ToRecommendationTypePtrOutputWithContext(ctx context.Context) RecommendationTypePtrOutput {
	return o
}

func (o RecommendationTypePtrOutput) Elem() RecommendationTypeOutput {
	return o.ApplyT(func(v *RecommendationType) RecommendationType {
		if v != nil {
			return *v
		}
		var ret RecommendationType
		return ret
	}).(RecommendationTypeOutput)
}

func (o RecommendationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecommendationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecommendationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecommendationTypeInput is an input type that accepts RecommendationTypeArgs and RecommendationTypeOutput values.
// You can construct a concrete instance of `RecommendationTypeInput` via:
//
//          RecommendationTypeArgs{...}
type RecommendationTypeInput interface {
	pulumi.Input

	ToRecommendationTypeOutput() RecommendationTypeOutput
	ToRecommendationTypeOutputWithContext(context.Context) RecommendationTypeOutput
}

var recommendationTypePtrType = reflect.TypeOf((**RecommendationType)(nil)).Elem()

type RecommendationTypePtrInput interface {
	pulumi.Input

	ToRecommendationTypePtrOutput() RecommendationTypePtrOutput
	ToRecommendationTypePtrOutputWithContext(context.Context) RecommendationTypePtrOutput
}

type recommendationTypePtr string

func RecommendationTypePtr(v string) RecommendationTypePtrInput {
	return (*recommendationTypePtr)(&v)
}

func (*recommendationTypePtr) ElementType() reflect.Type {
	return recommendationTypePtrType
}

func (in *recommendationTypePtr) ToRecommendationTypePtrOutput() RecommendationTypePtrOutput {
	return pulumi.ToOutput(in).(RecommendationTypePtrOutput)
}

func (in *recommendationTypePtr) ToRecommendationTypePtrOutputWithContext(ctx context.Context) RecommendationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecommendationTypePtrOutput)
}

type Roles string

const (
	// If enabled, send notification on new alerts to the account admins
	RolesAccountAdmin = Roles("AccountAdmin")
	// If enabled, send notification on new alerts to the service admins
	RolesServiceAdmin = Roles("ServiceAdmin")
	// If enabled, send notification on new alerts to the subscription owners
	RolesOwner = Roles("Owner")
	// If enabled, send notification on new alerts to the subscription contributors
	RolesContributor = Roles("Contributor")
)

func (Roles) ElementType() reflect.Type {
	return reflect.TypeOf((*Roles)(nil)).Elem()
}

func (e Roles) ToRolesOutput() RolesOutput {
	return pulumi.ToOutput(e).(RolesOutput)
}

func (e Roles) ToRolesOutputWithContext(ctx context.Context) RolesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RolesOutput)
}

func (e Roles) ToRolesPtrOutput() RolesPtrOutput {
	return e.ToRolesPtrOutputWithContext(context.Background())
}

func (e Roles) ToRolesPtrOutputWithContext(ctx context.Context) RolesPtrOutput {
	return Roles(e).ToRolesOutputWithContext(ctx).ToRolesPtrOutputWithContext(ctx)
}

func (e Roles) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Roles) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Roles) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Roles) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RolesOutput struct{ *pulumi.OutputState }

func (RolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Roles)(nil)).Elem()
}

func (o RolesOutput) ToRolesOutput() RolesOutput {
	return o
}

func (o RolesOutput) ToRolesOutputWithContext(ctx context.Context) RolesOutput {
	return o
}

func (o RolesOutput) ToRolesPtrOutput() RolesPtrOutput {
	return o.ToRolesPtrOutputWithContext(context.Background())
}

func (o RolesOutput) ToRolesPtrOutputWithContext(ctx context.Context) RolesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Roles) *Roles {
		return &v
	}).(RolesPtrOutput)
}

func (o RolesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RolesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Roles) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RolesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RolesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Roles) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RolesPtrOutput struct{ *pulumi.OutputState }

func (RolesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Roles)(nil)).Elem()
}

func (o RolesPtrOutput) ToRolesPtrOutput() RolesPtrOutput {
	return o
}

func (o RolesPtrOutput) ToRolesPtrOutputWithContext(ctx context.Context) RolesPtrOutput {
	return o
}

func (o RolesPtrOutput) Elem() RolesOutput {
	return o.ApplyT(func(v *Roles) Roles {
		if v != nil {
			return *v
		}
		var ret Roles
		return ret
	}).(RolesOutput)
}

func (o RolesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RolesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Roles) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RolesInput is an input type that accepts RolesArgs and RolesOutput values.
// You can construct a concrete instance of `RolesInput` via:
//
//          RolesArgs{...}
type RolesInput interface {
	pulumi.Input

	ToRolesOutput() RolesOutput
	ToRolesOutputWithContext(context.Context) RolesOutput
}

var rolesPtrType = reflect.TypeOf((**Roles)(nil)).Elem()

type RolesPtrInput interface {
	pulumi.Input

	ToRolesPtrOutput() RolesPtrOutput
	ToRolesPtrOutputWithContext(context.Context) RolesPtrOutput
}

type rolesPtr string

func RolesPtr(v string) RolesPtrInput {
	return (*rolesPtr)(&v)
}

func (*rolesPtr) ElementType() reflect.Type {
	return rolesPtrType
}

func (in *rolesPtr) ToRolesPtrOutput() RolesPtrOutput {
	return pulumi.ToOutput(in).(RolesPtrOutput)
}

func (in *rolesPtr) ToRolesPtrOutputWithContext(ctx context.Context) RolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RolesPtrOutput)
}

type RuleState string

const (
	RuleStateEnabled  = RuleState("Enabled")
	RuleStateDisabled = RuleState("Disabled")
	RuleStateExpired  = RuleState("Expired")
)

func (RuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleState)(nil)).Elem()
}

func (e RuleState) ToRuleStateOutput() RuleStateOutput {
	return pulumi.ToOutput(e).(RuleStateOutput)
}

func (e RuleState) ToRuleStateOutputWithContext(ctx context.Context) RuleStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleStateOutput)
}

func (e RuleState) ToRuleStatePtrOutput() RuleStatePtrOutput {
	return e.ToRuleStatePtrOutputWithContext(context.Background())
}

func (e RuleState) ToRuleStatePtrOutputWithContext(ctx context.Context) RuleStatePtrOutput {
	return RuleState(e).ToRuleStateOutputWithContext(ctx).ToRuleStatePtrOutputWithContext(ctx)
}

func (e RuleState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleStateOutput struct{ *pulumi.OutputState }

func (RuleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleState)(nil)).Elem()
}

func (o RuleStateOutput) ToRuleStateOutput() RuleStateOutput {
	return o
}

func (o RuleStateOutput) ToRuleStateOutputWithContext(ctx context.Context) RuleStateOutput {
	return o
}

func (o RuleStateOutput) ToRuleStatePtrOutput() RuleStatePtrOutput {
	return o.ToRuleStatePtrOutputWithContext(context.Background())
}

func (o RuleStateOutput) ToRuleStatePtrOutputWithContext(ctx context.Context) RuleStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleState) *RuleState {
		return &v
	}).(RuleStatePtrOutput)
}

func (o RuleStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleStatePtrOutput struct{ *pulumi.OutputState }

func (RuleStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleState)(nil)).Elem()
}

func (o RuleStatePtrOutput) ToRuleStatePtrOutput() RuleStatePtrOutput {
	return o
}

func (o RuleStatePtrOutput) ToRuleStatePtrOutputWithContext(ctx context.Context) RuleStatePtrOutput {
	return o
}

func (o RuleStatePtrOutput) Elem() RuleStateOutput {
	return o.ApplyT(func(v *RuleState) RuleState {
		if v != nil {
			return *v
		}
		var ret RuleState
		return ret
	}).(RuleStateOutput)
}

func (o RuleStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleStateInput is an input type that accepts RuleStateArgs and RuleStateOutput values.
// You can construct a concrete instance of `RuleStateInput` via:
//
//          RuleStateArgs{...}
type RuleStateInput interface {
	pulumi.Input

	ToRuleStateOutput() RuleStateOutput
	ToRuleStateOutputWithContext(context.Context) RuleStateOutput
}

var ruleStatePtrType = reflect.TypeOf((**RuleState)(nil)).Elem()

type RuleStatePtrInput interface {
	pulumi.Input

	ToRuleStatePtrOutput() RuleStatePtrOutput
	ToRuleStatePtrOutputWithContext(context.Context) RuleStatePtrOutput
}

type ruleStatePtr string

func RuleStatePtr(v string) RuleStatePtrInput {
	return (*ruleStatePtr)(&v)
}

func (*ruleStatePtr) ElementType() reflect.Type {
	return ruleStatePtrType
}

func (in *ruleStatePtr) ToRuleStatePtrOutput() RuleStatePtrOutput {
	return pulumi.ToOutput(in).(RuleStatePtrOutput)
}

func (in *ruleStatePtr) ToRuleStatePtrOutputWithContext(ctx context.Context) RuleStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleStatePtrOutput)
}

type SecuritySolutionStatus string

const (
	SecuritySolutionStatusEnabled  = SecuritySolutionStatus("Enabled")
	SecuritySolutionStatusDisabled = SecuritySolutionStatus("Disabled")
)

func (SecuritySolutionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionStatus)(nil)).Elem()
}

func (e SecuritySolutionStatus) ToSecuritySolutionStatusOutput() SecuritySolutionStatusOutput {
	return pulumi.ToOutput(e).(SecuritySolutionStatusOutput)
}

func (e SecuritySolutionStatus) ToSecuritySolutionStatusOutputWithContext(ctx context.Context) SecuritySolutionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecuritySolutionStatusOutput)
}

func (e SecuritySolutionStatus) ToSecuritySolutionStatusPtrOutput() SecuritySolutionStatusPtrOutput {
	return e.ToSecuritySolutionStatusPtrOutputWithContext(context.Background())
}

func (e SecuritySolutionStatus) ToSecuritySolutionStatusPtrOutputWithContext(ctx context.Context) SecuritySolutionStatusPtrOutput {
	return SecuritySolutionStatus(e).ToSecuritySolutionStatusOutputWithContext(ctx).ToSecuritySolutionStatusPtrOutputWithContext(ctx)
}

func (e SecuritySolutionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySolutionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecuritySolutionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecuritySolutionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecuritySolutionStatusOutput struct{ *pulumi.OutputState }

func (SecuritySolutionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionStatus)(nil)).Elem()
}

func (o SecuritySolutionStatusOutput) ToSecuritySolutionStatusOutput() SecuritySolutionStatusOutput {
	return o
}

func (o SecuritySolutionStatusOutput) ToSecuritySolutionStatusOutputWithContext(ctx context.Context) SecuritySolutionStatusOutput {
	return o
}

func (o SecuritySolutionStatusOutput) ToSecuritySolutionStatusPtrOutput() SecuritySolutionStatusPtrOutput {
	return o.ToSecuritySolutionStatusPtrOutputWithContext(context.Background())
}

func (o SecuritySolutionStatusOutput) ToSecuritySolutionStatusPtrOutputWithContext(ctx context.Context) SecuritySolutionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecuritySolutionStatus) *SecuritySolutionStatus {
		return &v
	}).(SecuritySolutionStatusPtrOutput)
}

func (o SecuritySolutionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecuritySolutionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecuritySolutionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecuritySolutionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecuritySolutionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecuritySolutionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecuritySolutionStatusPtrOutput struct{ *pulumi.OutputState }

func (SecuritySolutionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySolutionStatus)(nil)).Elem()
}

func (o SecuritySolutionStatusPtrOutput) ToSecuritySolutionStatusPtrOutput() SecuritySolutionStatusPtrOutput {
	return o
}

func (o SecuritySolutionStatusPtrOutput) ToSecuritySolutionStatusPtrOutputWithContext(ctx context.Context) SecuritySolutionStatusPtrOutput {
	return o
}

func (o SecuritySolutionStatusPtrOutput) Elem() SecuritySolutionStatusOutput {
	return o.ApplyT(func(v *SecuritySolutionStatus) SecuritySolutionStatus {
		if v != nil {
			return *v
		}
		var ret SecuritySolutionStatus
		return ret
	}).(SecuritySolutionStatusOutput)
}

func (o SecuritySolutionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecuritySolutionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecuritySolutionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecuritySolutionStatusInput is an input type that accepts SecuritySolutionStatusArgs and SecuritySolutionStatusOutput values.
// You can construct a concrete instance of `SecuritySolutionStatusInput` via:
//
//          SecuritySolutionStatusArgs{...}
type SecuritySolutionStatusInput interface {
	pulumi.Input

	ToSecuritySolutionStatusOutput() SecuritySolutionStatusOutput
	ToSecuritySolutionStatusOutputWithContext(context.Context) SecuritySolutionStatusOutput
}

var securitySolutionStatusPtrType = reflect.TypeOf((**SecuritySolutionStatus)(nil)).Elem()

type SecuritySolutionStatusPtrInput interface {
	pulumi.Input

	ToSecuritySolutionStatusPtrOutput() SecuritySolutionStatusPtrOutput
	ToSecuritySolutionStatusPtrOutputWithContext(context.Context) SecuritySolutionStatusPtrOutput
}

type securitySolutionStatusPtr string

func SecuritySolutionStatusPtr(v string) SecuritySolutionStatusPtrInput {
	return (*securitySolutionStatusPtr)(&v)
}

func (*securitySolutionStatusPtr) ElementType() reflect.Type {
	return securitySolutionStatusPtrType
}

func (in *securitySolutionStatusPtr) ToSecuritySolutionStatusPtrOutput() SecuritySolutionStatusPtrOutput {
	return pulumi.ToOutput(in).(SecuritySolutionStatusPtrOutput)
}

func (in *securitySolutionStatusPtr) ToSecuritySolutionStatusPtrOutputWithContext(ctx context.Context) SecuritySolutionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecuritySolutionStatusPtrOutput)
}

type Severity string

const (
	SeverityLow    = Severity("Low")
	SeverityMedium = Severity("Medium")
	SeverityHigh   = Severity("High")
)

func (Severity) ElementType() reflect.Type {
	return reflect.TypeOf((*Severity)(nil)).Elem()
}

func (e Severity) ToSeverityOutput() SeverityOutput {
	return pulumi.ToOutput(e).(SeverityOutput)
}

func (e Severity) ToSeverityOutputWithContext(ctx context.Context) SeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SeverityOutput)
}

func (e Severity) ToSeverityPtrOutput() SeverityPtrOutput {
	return e.ToSeverityPtrOutputWithContext(context.Background())
}

func (e Severity) ToSeverityPtrOutputWithContext(ctx context.Context) SeverityPtrOutput {
	return Severity(e).ToSeverityOutputWithContext(ctx).ToSeverityPtrOutputWithContext(ctx)
}

func (e Severity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Severity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Severity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Severity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SeverityOutput struct{ *pulumi.OutputState }

func (SeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Severity)(nil)).Elem()
}

func (o SeverityOutput) ToSeverityOutput() SeverityOutput {
	return o
}

func (o SeverityOutput) ToSeverityOutputWithContext(ctx context.Context) SeverityOutput {
	return o
}

func (o SeverityOutput) ToSeverityPtrOutput() SeverityPtrOutput {
	return o.ToSeverityPtrOutputWithContext(context.Background())
}

func (o SeverityOutput) ToSeverityPtrOutputWithContext(ctx context.Context) SeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Severity) *Severity {
		return &v
	}).(SeverityPtrOutput)
}

func (o SeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Severity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Severity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SeverityPtrOutput struct{ *pulumi.OutputState }

func (SeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Severity)(nil)).Elem()
}

func (o SeverityPtrOutput) ToSeverityPtrOutput() SeverityPtrOutput {
	return o
}

func (o SeverityPtrOutput) ToSeverityPtrOutputWithContext(ctx context.Context) SeverityPtrOutput {
	return o
}

func (o SeverityPtrOutput) Elem() SeverityOutput {
	return o.ApplyT(func(v *Severity) Severity {
		if v != nil {
			return *v
		}
		var ret Severity
		return ret
	}).(SeverityOutput)
}

func (o SeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Severity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SeverityInput is an input type that accepts SeverityArgs and SeverityOutput values.
// You can construct a concrete instance of `SeverityInput` via:
//
//          SeverityArgs{...}
type SeverityInput interface {
	pulumi.Input

	ToSeverityOutput() SeverityOutput
	ToSeverityOutputWithContext(context.Context) SeverityOutput
}

var severityPtrType = reflect.TypeOf((**Severity)(nil)).Elem()

type SeverityPtrInput interface {
	pulumi.Input

	ToSeverityPtrOutput() SeverityPtrOutput
	ToSeverityPtrOutputWithContext(context.Context) SeverityPtrOutput
}

type severityPtr string

func SeverityPtr(v string) SeverityPtrInput {
	return (*severityPtr)(&v)
}

func (*severityPtr) ElementType() reflect.Type {
	return severityPtrType
}

func (in *severityPtr) ToSeverityPtrOutput() SeverityPtrOutput {
	return pulumi.ToOutput(in).(SeverityPtrOutput)
}

func (in *severityPtr) ToSeverityPtrOutputWithContext(ctx context.Context) SeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SeverityPtrOutput)
}

type SeverityEnum string

const (
	SeverityEnumHigh   = SeverityEnum("High")
	SeverityEnumMedium = SeverityEnum("Medium")
	SeverityEnumLow    = SeverityEnum("Low")
)

func (SeverityEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SeverityEnum)(nil)).Elem()
}

func (e SeverityEnum) ToSeverityEnumOutput() SeverityEnumOutput {
	return pulumi.ToOutput(e).(SeverityEnumOutput)
}

func (e SeverityEnum) ToSeverityEnumOutputWithContext(ctx context.Context) SeverityEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SeverityEnumOutput)
}

func (e SeverityEnum) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return e.ToSeverityEnumPtrOutputWithContext(context.Background())
}

func (e SeverityEnum) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return SeverityEnum(e).ToSeverityEnumOutputWithContext(ctx).ToSeverityEnumPtrOutputWithContext(ctx)
}

func (e SeverityEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SeverityEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SeverityEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SeverityEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SeverityEnumOutput struct{ *pulumi.OutputState }

func (SeverityEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeverityEnum)(nil)).Elem()
}

func (o SeverityEnumOutput) ToSeverityEnumOutput() SeverityEnumOutput {
	return o
}

func (o SeverityEnumOutput) ToSeverityEnumOutputWithContext(ctx context.Context) SeverityEnumOutput {
	return o
}

func (o SeverityEnumOutput) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return o.ToSeverityEnumPtrOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SeverityEnum) *SeverityEnum {
		return &v
	}).(SeverityEnumPtrOutput)
}

func (o SeverityEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SeverityEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SeverityEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SeverityEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SeverityEnumPtrOutput struct{ *pulumi.OutputState }

func (SeverityEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeverityEnum)(nil)).Elem()
}

func (o SeverityEnumPtrOutput) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return o
}

func (o SeverityEnumPtrOutput) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return o
}

func (o SeverityEnumPtrOutput) Elem() SeverityEnumOutput {
	return o.ApplyT(func(v *SeverityEnum) SeverityEnum {
		if v != nil {
			return *v
		}
		var ret SeverityEnum
		return ret
	}).(SeverityEnumOutput)
}

func (o SeverityEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SeverityEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SeverityEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SeverityEnumInput is an input type that accepts SeverityEnumArgs and SeverityEnumOutput values.
// You can construct a concrete instance of `SeverityEnumInput` via:
//
//          SeverityEnumArgs{...}
type SeverityEnumInput interface {
	pulumi.Input

	ToSeverityEnumOutput() SeverityEnumOutput
	ToSeverityEnumOutputWithContext(context.Context) SeverityEnumOutput
}

var severityEnumPtrType = reflect.TypeOf((**SeverityEnum)(nil)).Elem()

type SeverityEnumPtrInput interface {
	pulumi.Input

	ToSeverityEnumPtrOutput() SeverityEnumPtrOutput
	ToSeverityEnumPtrOutputWithContext(context.Context) SeverityEnumPtrOutput
}

type severityEnumPtr string

func SeverityEnumPtr(v string) SeverityEnumPtrInput {
	return (*severityEnumPtr)(&v)
}

func (*severityEnumPtr) ElementType() reflect.Type {
	return severityEnumPtrType
}

func (in *severityEnumPtr) ToSeverityEnumPtrOutput() SeverityEnumPtrOutput {
	return pulumi.ToOutput(in).(SeverityEnumPtrOutput)
}

func (in *severityEnumPtr) ToSeverityEnumPtrOutputWithContext(ctx context.Context) SeverityEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SeverityEnumPtrOutput)
}

type Source string

const (
	// Resource is in Azure
	SourceAzure = Source("Azure")
	// Resource in an on premise machine connected to Azure cloud
	SourceOnPremise = Source("OnPremise")
	// SQL Resource in an on premise machine connected to Azure cloud
	SourceOnPremiseSql = Source("OnPremiseSql")
)

func (Source) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (e Source) ToSourceOutput() SourceOutput {
	return pulumi.ToOutput(e).(SourceOutput)
}

func (e Source) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceOutput)
}

func (e Source) ToSourcePtrOutput() SourcePtrOutput {
	return e.ToSourcePtrOutputWithContext(context.Background())
}

func (e Source) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return Source(e).ToSourceOutputWithContext(ctx).ToSourcePtrOutputWithContext(ctx)
}

func (e Source) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Source) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Source) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceOutput struct{ *pulumi.OutputState }

func (SourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Source)(nil)).Elem()
}

func (o SourceOutput) ToSourceOutput() SourceOutput {
	return o
}

func (o SourceOutput) ToSourceOutputWithContext(ctx context.Context) SourceOutput {
	return o
}

func (o SourceOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o.ToSourcePtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Source) *Source {
		return &v
	}).(SourcePtrOutput)
}

func (o SourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Source) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourcePtrOutput struct{ *pulumi.OutputState }

func (SourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Source)(nil)).Elem()
}

func (o SourcePtrOutput) ToSourcePtrOutput() SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return o
}

func (o SourcePtrOutput) Elem() SourceOutput {
	return o.ApplyT(func(v *Source) Source {
		if v != nil {
			return *v
		}
		var ret Source
		return ret
	}).(SourceOutput)
}

func (o SourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Source) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceInput is an input type that accepts SourceArgs and SourceOutput values.
// You can construct a concrete instance of `SourceInput` via:
//
//          SourceArgs{...}
type SourceInput interface {
	pulumi.Input

	ToSourceOutput() SourceOutput
	ToSourceOutputWithContext(context.Context) SourceOutput
}

var sourcePtrType = reflect.TypeOf((**Source)(nil)).Elem()

type SourcePtrInput interface {
	pulumi.Input

	ToSourcePtrOutput() SourcePtrOutput
	ToSourcePtrOutputWithContext(context.Context) SourcePtrOutput
}

type sourcePtr string

func SourcePtr(v string) SourcePtrInput {
	return (*sourcePtr)(&v)
}

func (*sourcePtr) ElementType() reflect.Type {
	return sourcePtrType
}

func (in *sourcePtr) ToSourcePtrOutput() SourcePtrOutput {
	return pulumi.ToOutput(in).(SourcePtrOutput)
}

func (in *sourcePtr) ToSourcePtrOutputWithContext(ctx context.Context) SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourcePtrOutput)
}

type State string

const (
	// Send notification on new alerts to the subscription's admins
	StateOn = State("On")
	// Don't send notification on new alerts to the subscription's admins
	StateOff = State("Off")
)

func (State) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (e State) ToStateOutput() StateOutput {
	return pulumi.ToOutput(e).(StateOutput)
}

func (e State) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StateOutput)
}

func (e State) ToStatePtrOutput() StatePtrOutput {
	return e.ToStatePtrOutputWithContext(context.Background())
}

func (e State) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return State(e).ToStateOutputWithContext(ctx).ToStatePtrOutputWithContext(ctx)
}

func (e State) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e State) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StateOutput struct{ *pulumi.OutputState }

func (StateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (o StateOutput) ToStateOutput() StateOutput {
	return o
}

func (o StateOutput) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return o
}

func (o StateOutput) ToStatePtrOutput() StatePtrOutput {
	return o.ToStatePtrOutputWithContext(context.Background())
}

func (o StateOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v State) *State {
		return &v
	}).(StatePtrOutput)
}

func (o StateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e State) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e State) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatePtrOutput struct{ *pulumi.OutputState }

func (StatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**State)(nil)).Elem()
}

func (o StatePtrOutput) ToStatePtrOutput() StatePtrOutput {
	return o
}

func (o StatePtrOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o
}

func (o StatePtrOutput) Elem() StateOutput {
	return o.ApplyT(func(v *State) State {
		if v != nil {
			return *v
		}
		var ret State
		return ret
	}).(StateOutput)
}

func (o StatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *State) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StateInput is an input type that accepts StateArgs and StateOutput values.
// You can construct a concrete instance of `StateInput` via:
//
//          StateArgs{...}
type StateInput interface {
	pulumi.Input

	ToStateOutput() StateOutput
	ToStateOutputWithContext(context.Context) StateOutput
}

var statePtrType = reflect.TypeOf((**State)(nil)).Elem()

type StatePtrInput interface {
	pulumi.Input

	ToStatePtrOutput() StatePtrOutput
	ToStatePtrOutputWithContext(context.Context) StatePtrOutput
}

type statePtr string

func StatePtr(v string) StatePtrInput {
	return (*statePtr)(&v)
}

func (*statePtr) ElementType() reflect.Type {
	return statePtrType
}

func (in *statePtr) ToStatePtrOutput() StatePtrOutput {
	return pulumi.ToOutput(in).(StatePtrOutput)
}

func (in *statePtr) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatePtrOutput)
}

type Status string

const (
	StatusRevoked   = Status("Revoked")
	StatusInitiated = Status("Initiated")
)

func (Status) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (e Status) ToStatusOutput() StatusOutput {
	return pulumi.ToOutput(e).(StatusOutput)
}

func (e Status) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusOutput)
}

func (e Status) ToStatusPtrOutput() StatusPtrOutput {
	return e.ToStatusPtrOutputWithContext(context.Background())
}

func (e Status) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return Status(e).ToStatusOutputWithContext(ctx).ToStatusPtrOutputWithContext(ctx)
}

func (e Status) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Status) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Status) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusInput is an input type that accepts StatusArgs and StatusOutput values.
// You can construct a concrete instance of `StatusInput` via:
//
//          StatusArgs{...}
type StatusInput interface {
	pulumi.Input

	ToStatusOutput() StatusOutput
	ToStatusOutputWithContext(context.Context) StatusOutput
}

var statusPtrType = reflect.TypeOf((**Status)(nil)).Elem()

type StatusPtrInput interface {
	pulumi.Input

	ToStatusPtrOutput() StatusPtrOutput
	ToStatusPtrOutputWithContext(context.Context) StatusPtrOutput
}

type statusPtr string

func StatusPtr(v string) StatusPtrInput {
	return (*statusPtr)(&v)
}

func (*statusPtr) ElementType() reflect.Type {
	return statusPtrType
}

func (in *statusPtr) ToStatusPtrOutput() StatusPtrOutput {
	return pulumi.ToOutput(in).(StatusPtrOutput)
}

func (in *statusPtr) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusPtrOutput)
}

type StatusReason string

const (
	StatusReasonExpired               = StatusReason("Expired")
	StatusReasonUserRequested         = StatusReason("UserRequested")
	StatusReasonNewerRequestInitiated = StatusReason("NewerRequestInitiated")
)

func (StatusReason) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusReason)(nil)).Elem()
}

func (e StatusReason) ToStatusReasonOutput() StatusReasonOutput {
	return pulumi.ToOutput(e).(StatusReasonOutput)
}

func (e StatusReason) ToStatusReasonOutputWithContext(ctx context.Context) StatusReasonOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StatusReasonOutput)
}

func (e StatusReason) ToStatusReasonPtrOutput() StatusReasonPtrOutput {
	return e.ToStatusReasonPtrOutputWithContext(context.Background())
}

func (e StatusReason) ToStatusReasonPtrOutputWithContext(ctx context.Context) StatusReasonPtrOutput {
	return StatusReason(e).ToStatusReasonOutputWithContext(ctx).ToStatusReasonPtrOutputWithContext(ctx)
}

func (e StatusReason) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusReason) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StatusReason) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StatusReason) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StatusReasonOutput struct{ *pulumi.OutputState }

func (StatusReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusReason)(nil)).Elem()
}

func (o StatusReasonOutput) ToStatusReasonOutput() StatusReasonOutput {
	return o
}

func (o StatusReasonOutput) ToStatusReasonOutputWithContext(ctx context.Context) StatusReasonOutput {
	return o
}

func (o StatusReasonOutput) ToStatusReasonPtrOutput() StatusReasonPtrOutput {
	return o.ToStatusReasonPtrOutputWithContext(context.Background())
}

func (o StatusReasonOutput) ToStatusReasonPtrOutputWithContext(ctx context.Context) StatusReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusReason) *StatusReason {
		return &v
	}).(StatusReasonPtrOutput)
}

func (o StatusReasonOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusReasonOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusReason) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusReasonOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusReasonOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StatusReason) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusReasonPtrOutput struct{ *pulumi.OutputState }

func (StatusReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusReason)(nil)).Elem()
}

func (o StatusReasonPtrOutput) ToStatusReasonPtrOutput() StatusReasonPtrOutput {
	return o
}

func (o StatusReasonPtrOutput) ToStatusReasonPtrOutputWithContext(ctx context.Context) StatusReasonPtrOutput {
	return o
}

func (o StatusReasonPtrOutput) Elem() StatusReasonOutput {
	return o.ApplyT(func(v *StatusReason) StatusReason {
		if v != nil {
			return *v
		}
		var ret StatusReason
		return ret
	}).(StatusReasonOutput)
}

func (o StatusReasonPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusReasonPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StatusReason) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StatusReasonInput is an input type that accepts StatusReasonArgs and StatusReasonOutput values.
// You can construct a concrete instance of `StatusReasonInput` via:
//
//          StatusReasonArgs{...}
type StatusReasonInput interface {
	pulumi.Input

	ToStatusReasonOutput() StatusReasonOutput
	ToStatusReasonOutputWithContext(context.Context) StatusReasonOutput
}

var statusReasonPtrType = reflect.TypeOf((**StatusReason)(nil)).Elem()

type StatusReasonPtrInput interface {
	pulumi.Input

	ToStatusReasonPtrOutput() StatusReasonPtrOutput
	ToStatusReasonPtrOutputWithContext(context.Context) StatusReasonPtrOutput
}

type statusReasonPtr string

func StatusReasonPtr(v string) StatusReasonPtrInput {
	return (*statusReasonPtr)(&v)
}

func (*statusReasonPtr) ElementType() reflect.Type {
	return statusReasonPtrType
}

func (in *statusReasonPtr) ToStatusReasonPtrOutput() StatusReasonPtrOutput {
	return pulumi.ToOutput(in).(StatusReasonPtrOutput)
}

func (in *statusReasonPtr) ToStatusReasonPtrOutputWithContext(ctx context.Context) StatusReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatusReasonPtrOutput)
}

type SupportedCloudEnum string

const (
	SupportedCloudEnumAWS = SupportedCloudEnum("AWS")
)

func (SupportedCloudEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportedCloudEnum)(nil)).Elem()
}

func (e SupportedCloudEnum) ToSupportedCloudEnumOutput() SupportedCloudEnumOutput {
	return pulumi.ToOutput(e).(SupportedCloudEnumOutput)
}

func (e SupportedCloudEnum) ToSupportedCloudEnumOutputWithContext(ctx context.Context) SupportedCloudEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SupportedCloudEnumOutput)
}

func (e SupportedCloudEnum) ToSupportedCloudEnumPtrOutput() SupportedCloudEnumPtrOutput {
	return e.ToSupportedCloudEnumPtrOutputWithContext(context.Background())
}

func (e SupportedCloudEnum) ToSupportedCloudEnumPtrOutputWithContext(ctx context.Context) SupportedCloudEnumPtrOutput {
	return SupportedCloudEnum(e).ToSupportedCloudEnumOutputWithContext(ctx).ToSupportedCloudEnumPtrOutputWithContext(ctx)
}

func (e SupportedCloudEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedCloudEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SupportedCloudEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SupportedCloudEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SupportedCloudEnumOutput struct{ *pulumi.OutputState }

func (SupportedCloudEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportedCloudEnum)(nil)).Elem()
}

func (o SupportedCloudEnumOutput) ToSupportedCloudEnumOutput() SupportedCloudEnumOutput {
	return o
}

func (o SupportedCloudEnumOutput) ToSupportedCloudEnumOutputWithContext(ctx context.Context) SupportedCloudEnumOutput {
	return o
}

func (o SupportedCloudEnumOutput) ToSupportedCloudEnumPtrOutput() SupportedCloudEnumPtrOutput {
	return o.ToSupportedCloudEnumPtrOutputWithContext(context.Background())
}

func (o SupportedCloudEnumOutput) ToSupportedCloudEnumPtrOutputWithContext(ctx context.Context) SupportedCloudEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupportedCloudEnum) *SupportedCloudEnum {
		return &v
	}).(SupportedCloudEnumPtrOutput)
}

func (o SupportedCloudEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SupportedCloudEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportedCloudEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SupportedCloudEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportedCloudEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SupportedCloudEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SupportedCloudEnumPtrOutput struct{ *pulumi.OutputState }

func (SupportedCloudEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupportedCloudEnum)(nil)).Elem()
}

func (o SupportedCloudEnumPtrOutput) ToSupportedCloudEnumPtrOutput() SupportedCloudEnumPtrOutput {
	return o
}

func (o SupportedCloudEnumPtrOutput) ToSupportedCloudEnumPtrOutputWithContext(ctx context.Context) SupportedCloudEnumPtrOutput {
	return o
}

func (o SupportedCloudEnumPtrOutput) Elem() SupportedCloudEnumOutput {
	return o.ApplyT(func(v *SupportedCloudEnum) SupportedCloudEnum {
		if v != nil {
			return *v
		}
		var ret SupportedCloudEnum
		return ret
	}).(SupportedCloudEnumOutput)
}

func (o SupportedCloudEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SupportedCloudEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SupportedCloudEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SupportedCloudEnumInput is an input type that accepts SupportedCloudEnumArgs and SupportedCloudEnumOutput values.
// You can construct a concrete instance of `SupportedCloudEnumInput` via:
//
//          SupportedCloudEnumArgs{...}
type SupportedCloudEnumInput interface {
	pulumi.Input

	ToSupportedCloudEnumOutput() SupportedCloudEnumOutput
	ToSupportedCloudEnumOutputWithContext(context.Context) SupportedCloudEnumOutput
}

var supportedCloudEnumPtrType = reflect.TypeOf((**SupportedCloudEnum)(nil)).Elem()

type SupportedCloudEnumPtrInput interface {
	pulumi.Input

	ToSupportedCloudEnumPtrOutput() SupportedCloudEnumPtrOutput
	ToSupportedCloudEnumPtrOutputWithContext(context.Context) SupportedCloudEnumPtrOutput
}

type supportedCloudEnumPtr string

func SupportedCloudEnumPtr(v string) SupportedCloudEnumPtrInput {
	return (*supportedCloudEnumPtr)(&v)
}

func (*supportedCloudEnumPtr) ElementType() reflect.Type {
	return supportedCloudEnumPtrType
}

func (in *supportedCloudEnumPtr) ToSupportedCloudEnumPtrOutput() SupportedCloudEnumPtrOutput {
	return pulumi.ToOutput(in).(SupportedCloudEnumPtrOutput)
}

func (in *supportedCloudEnumPtr) ToSupportedCloudEnumPtrOutputWithContext(ctx context.Context) SupportedCloudEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SupportedCloudEnumPtrOutput)
}

type Threats string

const (
	ThreatsAccountBreach        = Threats("accountBreach")
	ThreatsDataExfiltration     = Threats("dataExfiltration")
	ThreatsDataSpillage         = Threats("dataSpillage")
	ThreatsMaliciousInsider     = Threats("maliciousInsider")
	ThreatsElevationOfPrivilege = Threats("elevationOfPrivilege")
	ThreatsThreatResistance     = Threats("threatResistance")
	ThreatsMissingCoverage      = Threats("missingCoverage")
	ThreatsDenialOfService      = Threats("denialOfService")
)

func (Threats) ElementType() reflect.Type {
	return reflect.TypeOf((*Threats)(nil)).Elem()
}

func (e Threats) ToThreatsOutput() ThreatsOutput {
	return pulumi.ToOutput(e).(ThreatsOutput)
}

func (e Threats) ToThreatsOutputWithContext(ctx context.Context) ThreatsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThreatsOutput)
}

func (e Threats) ToThreatsPtrOutput() ThreatsPtrOutput {
	return e.ToThreatsPtrOutputWithContext(context.Background())
}

func (e Threats) ToThreatsPtrOutputWithContext(ctx context.Context) ThreatsPtrOutput {
	return Threats(e).ToThreatsOutputWithContext(ctx).ToThreatsPtrOutputWithContext(ctx)
}

func (e Threats) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Threats) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Threats) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Threats) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThreatsOutput struct{ *pulumi.OutputState }

func (ThreatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Threats)(nil)).Elem()
}

func (o ThreatsOutput) ToThreatsOutput() ThreatsOutput {
	return o
}

func (o ThreatsOutput) ToThreatsOutputWithContext(ctx context.Context) ThreatsOutput {
	return o
}

func (o ThreatsOutput) ToThreatsPtrOutput() ThreatsPtrOutput {
	return o.ToThreatsPtrOutputWithContext(context.Background())
}

func (o ThreatsOutput) ToThreatsPtrOutputWithContext(ctx context.Context) ThreatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Threats) *Threats {
		return &v
	}).(ThreatsPtrOutput)
}

func (o ThreatsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThreatsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Threats) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThreatsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThreatsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Threats) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThreatsPtrOutput struct{ *pulumi.OutputState }

func (ThreatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Threats)(nil)).Elem()
}

func (o ThreatsPtrOutput) ToThreatsPtrOutput() ThreatsPtrOutput {
	return o
}

func (o ThreatsPtrOutput) ToThreatsPtrOutputWithContext(ctx context.Context) ThreatsPtrOutput {
	return o
}

func (o ThreatsPtrOutput) Elem() ThreatsOutput {
	return o.ApplyT(func(v *Threats) Threats {
		if v != nil {
			return *v
		}
		var ret Threats
		return ret
	}).(ThreatsOutput)
}

func (o ThreatsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThreatsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Threats) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThreatsInput is an input type that accepts ThreatsArgs and ThreatsOutput values.
// You can construct a concrete instance of `ThreatsInput` via:
//
//          ThreatsArgs{...}
type ThreatsInput interface {
	pulumi.Input

	ToThreatsOutput() ThreatsOutput
	ToThreatsOutputWithContext(context.Context) ThreatsOutput
}

var threatsPtrType = reflect.TypeOf((**Threats)(nil)).Elem()

type ThreatsPtrInput interface {
	pulumi.Input

	ToThreatsPtrOutput() ThreatsPtrOutput
	ToThreatsPtrOutputWithContext(context.Context) ThreatsPtrOutput
}

type threatsPtr string

func ThreatsPtr(v string) ThreatsPtrInput {
	return (*threatsPtr)(&v)
}

func (*threatsPtr) ElementType() reflect.Type {
	return threatsPtrType
}

func (in *threatsPtr) ToThreatsPtrOutput() ThreatsPtrOutput {
	return pulumi.ToOutput(in).(ThreatsPtrOutput)
}

func (in *threatsPtr) ToThreatsPtrOutputWithContext(ctx context.Context) ThreatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThreatsPtrOutput)
}

type UnmaskedIpLoggingStatus string

const (
	// Unmasked IP logging is disabled
	UnmaskedIpLoggingStatusDisabled = UnmaskedIpLoggingStatus("Disabled")
	// Unmasked IP logging is enabled
	UnmaskedIpLoggingStatusEnabled = UnmaskedIpLoggingStatus("Enabled")
)

func (UnmaskedIpLoggingStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmaskedIpLoggingStatus)(nil)).Elem()
}

func (e UnmaskedIpLoggingStatus) ToUnmaskedIpLoggingStatusOutput() UnmaskedIpLoggingStatusOutput {
	return pulumi.ToOutput(e).(UnmaskedIpLoggingStatusOutput)
}

func (e UnmaskedIpLoggingStatus) ToUnmaskedIpLoggingStatusOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UnmaskedIpLoggingStatusOutput)
}

func (e UnmaskedIpLoggingStatus) ToUnmaskedIpLoggingStatusPtrOutput() UnmaskedIpLoggingStatusPtrOutput {
	return e.ToUnmaskedIpLoggingStatusPtrOutputWithContext(context.Background())
}

func (e UnmaskedIpLoggingStatus) ToUnmaskedIpLoggingStatusPtrOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusPtrOutput {
	return UnmaskedIpLoggingStatus(e).ToUnmaskedIpLoggingStatusOutputWithContext(ctx).ToUnmaskedIpLoggingStatusPtrOutputWithContext(ctx)
}

func (e UnmaskedIpLoggingStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnmaskedIpLoggingStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UnmaskedIpLoggingStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UnmaskedIpLoggingStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UnmaskedIpLoggingStatusOutput struct{ *pulumi.OutputState }

func (UnmaskedIpLoggingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnmaskedIpLoggingStatus)(nil)).Elem()
}

func (o UnmaskedIpLoggingStatusOutput) ToUnmaskedIpLoggingStatusOutput() UnmaskedIpLoggingStatusOutput {
	return o
}

func (o UnmaskedIpLoggingStatusOutput) ToUnmaskedIpLoggingStatusOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusOutput {
	return o
}

func (o UnmaskedIpLoggingStatusOutput) ToUnmaskedIpLoggingStatusPtrOutput() UnmaskedIpLoggingStatusPtrOutput {
	return o.ToUnmaskedIpLoggingStatusPtrOutputWithContext(context.Background())
}

func (o UnmaskedIpLoggingStatusOutput) ToUnmaskedIpLoggingStatusPtrOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UnmaskedIpLoggingStatus) *UnmaskedIpLoggingStatus {
		return &v
	}).(UnmaskedIpLoggingStatusPtrOutput)
}

func (o UnmaskedIpLoggingStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UnmaskedIpLoggingStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnmaskedIpLoggingStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UnmaskedIpLoggingStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnmaskedIpLoggingStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UnmaskedIpLoggingStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UnmaskedIpLoggingStatusPtrOutput struct{ *pulumi.OutputState }

func (UnmaskedIpLoggingStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnmaskedIpLoggingStatus)(nil)).Elem()
}

func (o UnmaskedIpLoggingStatusPtrOutput) ToUnmaskedIpLoggingStatusPtrOutput() UnmaskedIpLoggingStatusPtrOutput {
	return o
}

func (o UnmaskedIpLoggingStatusPtrOutput) ToUnmaskedIpLoggingStatusPtrOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusPtrOutput {
	return o
}

func (o UnmaskedIpLoggingStatusPtrOutput) Elem() UnmaskedIpLoggingStatusOutput {
	return o.ApplyT(func(v *UnmaskedIpLoggingStatus) UnmaskedIpLoggingStatus {
		if v != nil {
			return *v
		}
		var ret UnmaskedIpLoggingStatus
		return ret
	}).(UnmaskedIpLoggingStatusOutput)
}

func (o UnmaskedIpLoggingStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UnmaskedIpLoggingStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UnmaskedIpLoggingStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UnmaskedIpLoggingStatusInput is an input type that accepts UnmaskedIpLoggingStatusArgs and UnmaskedIpLoggingStatusOutput values.
// You can construct a concrete instance of `UnmaskedIpLoggingStatusInput` via:
//
//          UnmaskedIpLoggingStatusArgs{...}
type UnmaskedIpLoggingStatusInput interface {
	pulumi.Input

	ToUnmaskedIpLoggingStatusOutput() UnmaskedIpLoggingStatusOutput
	ToUnmaskedIpLoggingStatusOutputWithContext(context.Context) UnmaskedIpLoggingStatusOutput
}

var unmaskedIpLoggingStatusPtrType = reflect.TypeOf((**UnmaskedIpLoggingStatus)(nil)).Elem()

type UnmaskedIpLoggingStatusPtrInput interface {
	pulumi.Input

	ToUnmaskedIpLoggingStatusPtrOutput() UnmaskedIpLoggingStatusPtrOutput
	ToUnmaskedIpLoggingStatusPtrOutputWithContext(context.Context) UnmaskedIpLoggingStatusPtrOutput
}

type unmaskedIpLoggingStatusPtr string

func UnmaskedIpLoggingStatusPtr(v string) UnmaskedIpLoggingStatusPtrInput {
	return (*unmaskedIpLoggingStatusPtr)(&v)
}

func (*unmaskedIpLoggingStatusPtr) ElementType() reflect.Type {
	return unmaskedIpLoggingStatusPtrType
}

func (in *unmaskedIpLoggingStatusPtr) ToUnmaskedIpLoggingStatusPtrOutput() UnmaskedIpLoggingStatusPtrOutput {
	return pulumi.ToOutput(in).(UnmaskedIpLoggingStatusPtrOutput)
}

func (in *unmaskedIpLoggingStatusPtr) ToUnmaskedIpLoggingStatusPtrOutputWithContext(ctx context.Context) UnmaskedIpLoggingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UnmaskedIpLoggingStatusPtrOutput)
}

type UserImpact string

const (
	UserImpactLow      = UserImpact("Low")
	UserImpactModerate = UserImpact("Moderate")
	UserImpactHigh     = UserImpact("High")
)

func (UserImpact) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImpact)(nil)).Elem()
}

func (e UserImpact) ToUserImpactOutput() UserImpactOutput {
	return pulumi.ToOutput(e).(UserImpactOutput)
}

func (e UserImpact) ToUserImpactOutputWithContext(ctx context.Context) UserImpactOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserImpactOutput)
}

func (e UserImpact) ToUserImpactPtrOutput() UserImpactPtrOutput {
	return e.ToUserImpactPtrOutputWithContext(context.Background())
}

func (e UserImpact) ToUserImpactPtrOutputWithContext(ctx context.Context) UserImpactPtrOutput {
	return UserImpact(e).ToUserImpactOutputWithContext(ctx).ToUserImpactPtrOutputWithContext(ctx)
}

func (e UserImpact) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserImpact) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserImpact) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserImpact) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserImpactOutput struct{ *pulumi.OutputState }

func (UserImpactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserImpact)(nil)).Elem()
}

func (o UserImpactOutput) ToUserImpactOutput() UserImpactOutput {
	return o
}

func (o UserImpactOutput) ToUserImpactOutputWithContext(ctx context.Context) UserImpactOutput {
	return o
}

func (o UserImpactOutput) ToUserImpactPtrOutput() UserImpactPtrOutput {
	return o.ToUserImpactPtrOutputWithContext(context.Background())
}

func (o UserImpactOutput) ToUserImpactPtrOutputWithContext(ctx context.Context) UserImpactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserImpact) *UserImpact {
		return &v
	}).(UserImpactPtrOutput)
}

func (o UserImpactOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserImpactOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserImpact) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserImpactOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserImpactOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserImpact) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserImpactPtrOutput struct{ *pulumi.OutputState }

func (UserImpactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserImpact)(nil)).Elem()
}

func (o UserImpactPtrOutput) ToUserImpactPtrOutput() UserImpactPtrOutput {
	return o
}

func (o UserImpactPtrOutput) ToUserImpactPtrOutputWithContext(ctx context.Context) UserImpactPtrOutput {
	return o
}

func (o UserImpactPtrOutput) Elem() UserImpactOutput {
	return o.ApplyT(func(v *UserImpact) UserImpact {
		if v != nil {
			return *v
		}
		var ret UserImpact
		return ret
	}).(UserImpactOutput)
}

func (o UserImpactPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserImpactPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserImpact) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserImpactInput is an input type that accepts UserImpactArgs and UserImpactOutput values.
// You can construct a concrete instance of `UserImpactInput` via:
//
//          UserImpactArgs{...}
type UserImpactInput interface {
	pulumi.Input

	ToUserImpactOutput() UserImpactOutput
	ToUserImpactOutputWithContext(context.Context) UserImpactOutput
}

var userImpactPtrType = reflect.TypeOf((**UserImpact)(nil)).Elem()

type UserImpactPtrInput interface {
	pulumi.Input

	ToUserImpactPtrOutput() UserImpactPtrOutput
	ToUserImpactPtrOutputWithContext(context.Context) UserImpactPtrOutput
}

type userImpactPtr string

func UserImpactPtr(v string) UserImpactPtrInput {
	return (*userImpactPtr)(&v)
}

func (*userImpactPtr) ElementType() reflect.Type {
	return userImpactPtrType
}

func (in *userImpactPtr) ToUserImpactPtrOutput() UserImpactPtrOutput {
	return pulumi.ToOutput(in).(UserImpactPtrOutput)
}

func (in *userImpactPtr) ToUserImpactPtrOutputWithContext(ctx context.Context) UserImpactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserImpactPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionTypeOutput{})
	pulumi.RegisterOutputType(ActionTypePtrOutput{})
	pulumi.RegisterOutputType(AdditionalWorkspaceDataTypeOutput{})
	pulumi.RegisterOutputType(AdditionalWorkspaceDataTypePtrOutput{})
	pulumi.RegisterOutputType(AdditionalWorkspaceTypeOutput{})
	pulumi.RegisterOutputType(AdditionalWorkspaceTypePtrOutput{})
	pulumi.RegisterOutputType(AssessmentStatusCodeOutput{})
	pulumi.RegisterOutputType(AssessmentStatusCodePtrOutput{})
	pulumi.RegisterOutputType(AssessmentTypeOutput{})
	pulumi.RegisterOutputType(AssessmentTypePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationTypeOutput{})
	pulumi.RegisterOutputType(AuthenticationTypePtrOutput{})
	pulumi.RegisterOutputType(AutoProvisionOutput{})
	pulumi.RegisterOutputType(AutoProvisionPtrOutput{})
	pulumi.RegisterOutputType(CategoriesOutput{})
	pulumi.RegisterOutputType(CategoriesPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOutput{})
	pulumi.RegisterOutputType(DataSourcePtrOutput{})
	pulumi.RegisterOutputType(EventSourceOutput{})
	pulumi.RegisterOutputType(EventSourcePtrOutput{})
	pulumi.RegisterOutputType(ExportDataOutput{})
	pulumi.RegisterOutputType(ExportDataPtrOutput{})
	pulumi.RegisterOutputType(ImplementationEffortOutput{})
	pulumi.RegisterOutputType(ImplementationEffortPtrOutput{})
	pulumi.RegisterOutputType(MinimalSeverityOutput{})
	pulumi.RegisterOutputType(MinimalSeverityPtrOutput{})
	pulumi.RegisterOutputType(OperatorOutput{})
	pulumi.RegisterOutputType(OperatorPtrOutput{})
	pulumi.RegisterOutputType(PropertyTypeOutput{})
	pulumi.RegisterOutputType(PropertyTypePtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(RecommendationConfigStatusOutput{})
	pulumi.RegisterOutputType(RecommendationConfigStatusPtrOutput{})
	pulumi.RegisterOutputType(RecommendationTypeOutput{})
	pulumi.RegisterOutputType(RecommendationTypePtrOutput{})
	pulumi.RegisterOutputType(RolesOutput{})
	pulumi.RegisterOutputType(RolesPtrOutput{})
	pulumi.RegisterOutputType(RuleStateOutput{})
	pulumi.RegisterOutputType(RuleStatePtrOutput{})
	pulumi.RegisterOutputType(SecuritySolutionStatusOutput{})
	pulumi.RegisterOutputType(SecuritySolutionStatusPtrOutput{})
	pulumi.RegisterOutputType(SeverityOutput{})
	pulumi.RegisterOutputType(SeverityPtrOutput{})
	pulumi.RegisterOutputType(SeverityEnumOutput{})
	pulumi.RegisterOutputType(SeverityEnumPtrOutput{})
	pulumi.RegisterOutputType(SourceOutput{})
	pulumi.RegisterOutputType(SourcePtrOutput{})
	pulumi.RegisterOutputType(StateOutput{})
	pulumi.RegisterOutputType(StatePtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(StatusReasonOutput{})
	pulumi.RegisterOutputType(StatusReasonPtrOutput{})
	pulumi.RegisterOutputType(SupportedCloudEnumOutput{})
	pulumi.RegisterOutputType(SupportedCloudEnumPtrOutput{})
	pulumi.RegisterOutputType(ThreatsOutput{})
	pulumi.RegisterOutputType(ThreatsPtrOutput{})
	pulumi.RegisterOutputType(UnmaskedIpLoggingStatusOutput{})
	pulumi.RegisterOutputType(UnmaskedIpLoggingStatusPtrOutput{})
	pulumi.RegisterOutputType(UserImpactOutput{})
	pulumi.RegisterOutputType(UserImpactPtrOutput{})
}
