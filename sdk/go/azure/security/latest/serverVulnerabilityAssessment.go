// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Describes the server vulnerability assessment details on a resource
type ServerVulnerabilityAssessment struct {
	pulumi.CustomResourceState

	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioningState of the vulnerability assessment capability on the VM
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServerVulnerabilityAssessment registers a new resource with the given unique name, arguments, and options.
func NewServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, args *ServerVulnerabilityAssessmentArgs, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessment, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ResourceName == nil {
		return nil, errors.New("missing required argument 'ResourceName'")
	}
	if args == nil || args.ResourceNamespace == nil {
		return nil, errors.New("missing required argument 'ResourceNamespace'")
	}
	if args == nil || args.ResourceType == nil {
		return nil, errors.New("missing required argument 'ResourceType'")
	}
	if args == nil || args.ServerVulnerabilityAssessment == nil {
		return nil, errors.New("missing required argument 'ServerVulnerabilityAssessment'")
	}
	if args == nil {
		args = &ServerVulnerabilityAssessmentArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:security/v20200101:ServerVulnerabilityAssessment"),
		},
	})
	opts = append(opts, aliases)
	var resource ServerVulnerabilityAssessment
	err := ctx.RegisterResource("azure-nextgen:security/latest:ServerVulnerabilityAssessment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerVulnerabilityAssessment gets an existing ServerVulnerabilityAssessment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerVulnerabilityAssessment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerVulnerabilityAssessmentState, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessment, error) {
	var resource ServerVulnerabilityAssessment
	err := ctx.ReadResource("azure-nextgen:security/latest:ServerVulnerabilityAssessment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerVulnerabilityAssessment resources.
type serverVulnerabilityAssessmentState struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The provisioningState of the vulnerability assessment capability on the VM
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource type
	Type *string `pulumi:"type"`
}

type ServerVulnerabilityAssessmentState struct {
	// Resource name
	Name pulumi.StringPtrInput
	// The provisioningState of the vulnerability assessment capability on the VM
	ProvisioningState pulumi.StringPtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (ServerVulnerabilityAssessmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentState)(nil)).Elem()
}

type serverVulnerabilityAssessmentArgs struct {
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the resource.
	ResourceName string `pulumi:"resourceName"`
	// The Namespace of the resource.
	ResourceNamespace string `pulumi:"resourceNamespace"`
	// The type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// ServerVulnerabilityAssessment status. only a 'default' value is supported.
	ServerVulnerabilityAssessment string `pulumi:"serverVulnerabilityAssessment"`
}

// The set of arguments for constructing a ServerVulnerabilityAssessment resource.
type ServerVulnerabilityAssessmentArgs struct {
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Name of the resource.
	ResourceName pulumi.StringInput
	// The Namespace of the resource.
	ResourceNamespace pulumi.StringInput
	// The type of the resource.
	ResourceType pulumi.StringInput
	// ServerVulnerabilityAssessment status. only a 'default' value is supported.
	ServerVulnerabilityAssessment pulumi.StringInput
}

func (ServerVulnerabilityAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentArgs)(nil)).Elem()
}
