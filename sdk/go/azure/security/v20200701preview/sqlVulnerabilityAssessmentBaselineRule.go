


package v20200701preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlVulnerabilityAssessmentBaselineRule struct {
	pulumi.CustomResourceState

	Name       pulumi.StringOutput                 `pulumi:"name"`
	Properties RuleResultsPropertiesResponseOutput `pulumi:"properties"`
	Type       pulumi.StringOutput                 `pulumi:"type"`
}


func NewSqlVulnerabilityAssessmentBaselineRule(ctx *pulumi.Context,
	name string, args *SqlVulnerabilityAssessmentBaselineRuleArgs, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentBaselineRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule"),
		},
		{
			Type: pulumi.String("azure-native:security:SqlVulnerabilityAssessmentBaselineRule"),
		},
		{
			Type: pulumi.String("azure-nextgen:security:SqlVulnerabilityAssessmentBaselineRule"),
		},
	})
	opts = append(opts, aliases)
	var resource SqlVulnerabilityAssessmentBaselineRule
	err := ctx.RegisterResource("azure-native:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}



func GetSqlVulnerabilityAssessmentBaselineRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlVulnerabilityAssessmentBaselineRuleState, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentBaselineRule, error) {
	var resource SqlVulnerabilityAssessmentBaselineRule
	err := ctx.ReadResource("azure-native:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}


type sqlVulnerabilityAssessmentBaselineRuleState struct {
}

type SqlVulnerabilityAssessmentBaselineRuleState struct {
}

func (SqlVulnerabilityAssessmentBaselineRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentBaselineRuleState)(nil)).Elem()
}

type sqlVulnerabilityAssessmentBaselineRuleArgs struct {
	LatestScan  *bool      `pulumi:"latestScan"`
	ResourceId  string     `pulumi:"resourceId"`
	Results     [][]string `pulumi:"results"`
	RuleId      *string    `pulumi:"ruleId"`
	WorkspaceId string     `pulumi:"workspaceId"`
}


type SqlVulnerabilityAssessmentBaselineRuleArgs struct {
	LatestScan  pulumi.BoolPtrInput
	ResourceId  pulumi.StringInput
	Results     pulumi.StringArrayArrayInput
	RuleId      pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SqlVulnerabilityAssessmentBaselineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentBaselineRuleArgs)(nil)).Elem()
}

type SqlVulnerabilityAssessmentBaselineRuleInput interface {
	pulumi.Input

	ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput
	ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput
}

func (*SqlVulnerabilityAssessmentBaselineRule) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlVulnerabilityAssessmentBaselineRule)(nil))
}

func (i *SqlVulnerabilityAssessmentBaselineRule) ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput {
	return i.ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(context.Background())
}

func (i *SqlVulnerabilityAssessmentBaselineRule) ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlVulnerabilityAssessmentBaselineRuleOutput)
}

type SqlVulnerabilityAssessmentBaselineRuleOutput struct{ *pulumi.OutputState }

func (SqlVulnerabilityAssessmentBaselineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlVulnerabilityAssessmentBaselineRule)(nil))
}

func (o SqlVulnerabilityAssessmentBaselineRuleOutput) ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput {
	return o
}

func (o SqlVulnerabilityAssessmentBaselineRuleOutput) ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlVulnerabilityAssessmentBaselineRuleInput)(nil)).Elem(), &SqlVulnerabilityAssessmentBaselineRule{})
	pulumi.RegisterOutputType(SqlVulnerabilityAssessmentBaselineRuleOutput{})
}
