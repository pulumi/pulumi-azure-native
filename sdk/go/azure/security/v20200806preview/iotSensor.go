// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200806preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// IoT sensor
type IotSensor struct {
	pulumi.CustomResourceState

	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIotSensor registers a new resource with the given unique name, arguments, and options.
func NewIotSensor(ctx *pulumi.Context,
	name string, args *IotSensorArgs, opts ...pulumi.ResourceOption) (*IotSensor, error) {
	if args == nil || args.IotSensorName == nil {
		return nil, errors.New("missing required argument 'IotSensorName'")
	}
	if args == nil || args.Scope == nil {
		return nil, errors.New("missing required argument 'Scope'")
	}
	if args == nil {
		args = &IotSensorArgs{}
	}
	var resource IotSensor
	err := ctx.RegisterResource("azure-nextgen:security/v20200806preview:IotSensor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIotSensor gets an existing IotSensor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIotSensor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IotSensorState, opts ...pulumi.ResourceOption) (*IotSensor, error) {
	var resource IotSensor
	err := ctx.ReadResource("azure-nextgen:security/v20200806preview:IotSensor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IotSensor resources.
type iotSensorState struct {
	// Resource name
	Name *string `pulumi:"name"`
	// Resource type
	Type *string `pulumi:"type"`
}

type IotSensorState struct {
	// Resource name
	Name pulumi.StringPtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (IotSensorState) ElementType() reflect.Type {
	return reflect.TypeOf((*iotSensorState)(nil)).Elem()
}

type iotSensorArgs struct {
	// Name of the IoT sensor
	IotSensorName string `pulumi:"iotSensorName"`
	// Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a IotSensor resource.
type IotSensorArgs struct {
	// Name of the IoT sensor
	IotSensorName pulumi.StringInput
	// Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
	Scope pulumi.StringInput
}

func (IotSensorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iotSensorArgs)(nil)).Elem()
}
