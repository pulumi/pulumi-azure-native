// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The aws connector environment data
type AWSEnvironmentData struct {
	// The type of the environment data.
	// Expected value is 'AwsAccount'.
	EnvironmentType string `pulumi:"environmentType"`
	// The AWS account's organizational data
	OrganizationalData interface{} `pulumi:"organizationalData"`
}

// The aws connector environment data
type AWSEnvironmentDataResponse struct {
	// The type of the environment data.
	// Expected value is 'AwsAccount'.
	EnvironmentType string `pulumi:"environmentType"`
	// The AWS account's organizational data
	OrganizationalData interface{} `pulumi:"organizationalData"`
}

// The awsOrganization data for the master account
type AwsOrganizationalDataMaster struct {
	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedAccountIds []string `pulumi:"excludedAccountIds"`
	// The multi cloud account's membership type in the organization
	// Expected value is 'Organization'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
	StacksetName *string `pulumi:"stacksetName"`
}

// The awsOrganization data for the master account
type AwsOrganizationalDataMasterResponse struct {
	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedAccountIds []string `pulumi:"excludedAccountIds"`
	// The multi cloud account's membership type in the organization
	// Expected value is 'Organization'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
	StacksetName *string `pulumi:"stacksetName"`
}

// The awsOrganization data for the member account
type AwsOrganizationalDataMember struct {
	// The multi cloud account's membership type in the organization
	// Expected value is 'Member'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
	ParentHierarchyId *string `pulumi:"parentHierarchyId"`
}

// The awsOrganization data for the member account
type AwsOrganizationalDataMemberResponse struct {
	// The multi cloud account's membership type in the organization
	// Expected value is 'Member'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is not of membership type organization, this will be the ID of the account's parent
	ParentHierarchyId *string `pulumi:"parentHierarchyId"`
}

// The CSPM monitoring for AWS offering
type CspmMonitorAwsOffering struct {
	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorAwsOfferingNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'CspmMonitorAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type CspmMonitorAwsOfferingNativeCloudConnection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The CSPM monitoring for AWS offering
type CspmMonitorAwsOfferingResponse struct {
	// The offering description.
	Description string `pulumi:"description"`
	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorAwsOfferingResponseNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'CspmMonitorAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type CspmMonitorAwsOfferingResponseNativeCloudConnection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The CSPM monitoring for GCP offering
type CspmMonitorGcpOffering struct {
	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorGcpOfferingNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'CspmMonitorGcp'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type CspmMonitorGcpOfferingNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id for the offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The CSPM monitoring for GCP offering
type CspmMonitorGcpOfferingResponse struct {
	// The offering description.
	Description string `pulumi:"description"`
	// The native cloud connection configuration
	NativeCloudConnection *CspmMonitorGcpOfferingResponseNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'CspmMonitorGcp'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type CspmMonitorGcpOfferingResponseNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id for the offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The CSPM monitoring for github offering
type CspmMonitorGithubOffering struct {
	// The type of the security offering.
	// Expected value is 'CspmMonitorGithub'.
	OfferingType string `pulumi:"offeringType"`
}

// The CSPM monitoring for github offering
type CspmMonitorGithubOfferingResponse struct {
	// The offering description.
	Description string `pulumi:"description"`
	// The type of the security offering.
	// Expected value is 'CspmMonitorGithub'.
	OfferingType string `pulumi:"offeringType"`
}

// The Defender for Containers AWS offering
type DefenderForContainersAwsOffering struct {
	// The cloudwatch to kinesis connection configuration
	CloudWatchToKinesis *DefenderForContainersAwsOfferingCloudWatchToKinesis `pulumi:"cloudWatchToKinesis"`
	// The kinesis to s3 connection configuration
	KinesisToS3 *DefenderForContainersAwsOfferingKinesisToS3 `pulumi:"kinesisToS3"`
	// The kubernetes to scuba connection configuration
	KubernetesScubaReader *DefenderForContainersAwsOfferingKubernetesScubaReader `pulumi:"kubernetesScubaReader"`
	// The kubernetes service connection configuration
	KubernetesService *DefenderForContainersAwsOfferingKubernetesService `pulumi:"kubernetesService"`
	// The type of the security offering.
	// Expected value is 'DefenderForContainersAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The cloudwatch to kinesis connection configuration
type DefenderForContainersAwsOfferingCloudWatchToKinesis struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kinesis to s3 connection configuration
type DefenderForContainersAwsOfferingKinesisToS3 struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kubernetes to scuba connection configuration
type DefenderForContainersAwsOfferingKubernetesScubaReader struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kubernetes service connection configuration
type DefenderForContainersAwsOfferingKubernetesService struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The Defender for Containers AWS offering
type DefenderForContainersAwsOfferingResponse struct {
	// The cloudwatch to kinesis connection configuration
	CloudWatchToKinesis *DefenderForContainersAwsOfferingResponseCloudWatchToKinesis `pulumi:"cloudWatchToKinesis"`
	// The offering description.
	Description string `pulumi:"description"`
	// The kinesis to s3 connection configuration
	KinesisToS3 *DefenderForContainersAwsOfferingResponseKinesisToS3 `pulumi:"kinesisToS3"`
	// The kubernetes to scuba connection configuration
	KubernetesScubaReader *DefenderForContainersAwsOfferingResponseKubernetesScubaReader `pulumi:"kubernetesScubaReader"`
	// The kubernetes service connection configuration
	KubernetesService *DefenderForContainersAwsOfferingResponseKubernetesService `pulumi:"kubernetesService"`
	// The type of the security offering.
	// Expected value is 'DefenderForContainersAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The cloudwatch to kinesis connection configuration
type DefenderForContainersAwsOfferingResponseCloudWatchToKinesis struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kinesis to s3 connection configuration
type DefenderForContainersAwsOfferingResponseKinesisToS3 struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kubernetes to scuba connection configuration
type DefenderForContainersAwsOfferingResponseKubernetesScubaReader struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The kubernetes service connection configuration
type DefenderForContainersAwsOfferingResponseKubernetesService struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The containers GCP offering
type DefenderForContainersGcpOffering struct {
	// Is audit logs data collection enabled
	AuditLogsAutoProvisioningFlag *bool `pulumi:"auditLogsAutoProvisioningFlag"`
	// The native cloud connection configuration
	DataPipelineNativeCloudConnection *DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection `pulumi:"dataPipelineNativeCloudConnection"`
	// Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
	DefenderAgentAutoProvisioningFlag *bool `pulumi:"defenderAgentAutoProvisioningFlag"`
	// The native cloud connection configuration
	NativeCloudConnection *DefenderForContainersGcpOfferingNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'DefenderForContainersGcp'.
	OfferingType string `pulumi:"offeringType"`
	// Is Policy Kubernetes agent auto provisioning enabled
	PolicyAgentAutoProvisioningFlag *bool `pulumi:"policyAgentAutoProvisioningFlag"`
}

// The native cloud connection configuration
type DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection struct {
	// The data collection service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The data collection GCP workload identity provider id for this offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The native cloud connection configuration
type DefenderForContainersGcpOfferingNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id for this offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The containers GCP offering
type DefenderForContainersGcpOfferingResponse struct {
	// Is audit logs data collection enabled
	AuditLogsAutoProvisioningFlag *bool `pulumi:"auditLogsAutoProvisioningFlag"`
	// The native cloud connection configuration
	DataPipelineNativeCloudConnection *DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection `pulumi:"dataPipelineNativeCloudConnection"`
	// Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled
	DefenderAgentAutoProvisioningFlag *bool `pulumi:"defenderAgentAutoProvisioningFlag"`
	// The offering description.
	Description string `pulumi:"description"`
	// The native cloud connection configuration
	NativeCloudConnection *DefenderForContainersGcpOfferingResponseNativeCloudConnection `pulumi:"nativeCloudConnection"`
	// The type of the security offering.
	// Expected value is 'DefenderForContainersGcp'.
	OfferingType string `pulumi:"offeringType"`
	// Is Policy Kubernetes agent auto provisioning enabled
	PolicyAgentAutoProvisioningFlag *bool `pulumi:"policyAgentAutoProvisioningFlag"`
}

// The native cloud connection configuration
type DefenderForContainersGcpOfferingResponseDataPipelineNativeCloudConnection struct {
	// The data collection service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The data collection GCP workload identity provider id for this offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The native cloud connection configuration
type DefenderForContainersGcpOfferingResponseNativeCloudConnection struct {
	// The service account email address in GCP for this offering
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id for this offering
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The Defender for Servers AWS offering
type DefenderForServersAwsOffering struct {
	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersAwsOfferingArcAutoProvisioning `pulumi:"arcAutoProvisioning"`
	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersAwsOfferingDefenderForServers `pulumi:"defenderForServers"`
	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersAwsOfferingMdeAutoProvisioning `pulumi:"mdeAutoProvisioning"`
	// The type of the security offering.
	// Expected value is 'DefenderForServersAws'.
	OfferingType string `pulumi:"offeringType"`
	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersAwsOfferingSubPlan `pulumi:"subPlan"`
	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersAwsOfferingVaAutoProvisioning `pulumi:"vaAutoProvisioning"`
}

// The ARC autoprovisioning configuration
type DefenderForServersAwsOfferingArcAutoProvisioning struct {
	// Is arc auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
	// Metadata of Service Principal secret for autoprovisioning
	ServicePrincipalSecretMetadata *DefenderForServersAwsOfferingServicePrincipalSecretMetadata `pulumi:"servicePrincipalSecretMetadata"`
}

// configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersAwsOfferingConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *string `pulumi:"type"`
}

// The Defender for servers connection configuration
type DefenderForServersAwsOfferingDefenderForServers struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersAwsOfferingMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration interface{} `pulumi:"configuration"`
	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// The Defender for Servers AWS offering
type DefenderForServersAwsOfferingResponse struct {
	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersAwsOfferingResponseArcAutoProvisioning `pulumi:"arcAutoProvisioning"`
	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersAwsOfferingResponseDefenderForServers `pulumi:"defenderForServers"`
	// The offering description.
	Description string `pulumi:"description"`
	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersAwsOfferingResponseMdeAutoProvisioning `pulumi:"mdeAutoProvisioning"`
	// The type of the security offering.
	// Expected value is 'DefenderForServersAws'.
	OfferingType string `pulumi:"offeringType"`
	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersAwsOfferingResponseSubPlan `pulumi:"subPlan"`
	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersAwsOfferingResponseVaAutoProvisioning `pulumi:"vaAutoProvisioning"`
}

// The ARC autoprovisioning configuration
type DefenderForServersAwsOfferingResponseArcAutoProvisioning struct {
	// Is arc auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
	// Metadata of Service Principal secret for autoprovisioning
	ServicePrincipalSecretMetadata *DefenderForServersAwsOfferingResponseServicePrincipalSecretMetadata `pulumi:"servicePrincipalSecretMetadata"`
}

// configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersAwsOfferingResponseConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *string `pulumi:"type"`
}

// The Defender for servers connection configuration
type DefenderForServersAwsOfferingResponseDefenderForServers struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersAwsOfferingResponseMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration interface{} `pulumi:"configuration"`
	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// Metadata of Service Principal secret for autoprovisioning
type DefenderForServersAwsOfferingResponseServicePrincipalSecretMetadata struct {
	// expiration date of service principal secret
	ExpiryDate *string `pulumi:"expiryDate"`
	// name of secret resource in parameter store
	ParameterNameInStore *string `pulumi:"parameterNameInStore"`
	// region of parameter store where secret is kept
	ParameterStoreRegion *string `pulumi:"parameterStoreRegion"`
}

// configuration for the servers offering subPlan
type DefenderForServersAwsOfferingResponseSubPlan struct {
	// The available sub plans
	Type *string `pulumi:"type"`
}

// The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersAwsOfferingResponseVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersAwsOfferingResponseConfiguration `pulumi:"configuration"`
	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// Metadata of Service Principal secret for autoprovisioning
type DefenderForServersAwsOfferingServicePrincipalSecretMetadata struct {
	// expiration date of service principal secret
	ExpiryDate *string `pulumi:"expiryDate"`
	// name of secret resource in parameter store
	ParameterNameInStore *string `pulumi:"parameterNameInStore"`
	// region of parameter store where secret is kept
	ParameterStoreRegion *string `pulumi:"parameterStoreRegion"`
}

// configuration for the servers offering subPlan
type DefenderForServersAwsOfferingSubPlan struct {
	// The available sub plans
	Type *string `pulumi:"type"`
}

// The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersAwsOfferingVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersAwsOfferingConfiguration `pulumi:"configuration"`
	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// The Defender for Servers GCP offering configurations
type DefenderForServersGcpOffering struct {
	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersGcpOfferingArcAutoProvisioning `pulumi:"arcAutoProvisioning"`
	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersGcpOfferingDefenderForServers `pulumi:"defenderForServers"`
	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersGcpOfferingMdeAutoProvisioning `pulumi:"mdeAutoProvisioning"`
	// The type of the security offering.
	// Expected value is 'DefenderForServersGcp'.
	OfferingType string `pulumi:"offeringType"`
	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersGcpOfferingSubPlan `pulumi:"subPlan"`
	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersGcpOfferingVaAutoProvisioning `pulumi:"vaAutoProvisioning"`
}

// The ARC autoprovisioning configuration
type DefenderForServersGcpOfferingArcAutoProvisioning struct {
	// Configuration for ARC autoprovisioning
	Configuration *DefenderForServersGcpOfferingConfiguration `pulumi:"configuration"`
	// Is arc auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// Configuration for ARC autoprovisioning
type DefenderForServersGcpOfferingConfiguration struct {
	// The agent onboarding service account numeric id
	AgentOnboardingServiceAccountNumericId *string `pulumi:"agentOnboardingServiceAccountNumericId"`
	// The Azure service principal client id for agent onboarding
	ClientId *string `pulumi:"clientId"`
}

// configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersGcpOfferingConfigurationConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *string `pulumi:"type"`
}

// The Defender for servers connection configuration
type DefenderForServersGcpOfferingDefenderForServers struct {
	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersGcpOfferingMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration interface{} `pulumi:"configuration"`
	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// The Defender for Servers GCP offering configurations
type DefenderForServersGcpOfferingResponse struct {
	// The ARC autoprovisioning configuration
	ArcAutoProvisioning *DefenderForServersGcpOfferingResponseArcAutoProvisioning `pulumi:"arcAutoProvisioning"`
	// The Defender for servers connection configuration
	DefenderForServers *DefenderForServersGcpOfferingResponseDefenderForServers `pulumi:"defenderForServers"`
	// The offering description.
	Description string `pulumi:"description"`
	// The Microsoft Defender for Endpoint autoprovisioning configuration
	MdeAutoProvisioning *DefenderForServersGcpOfferingResponseMdeAutoProvisioning `pulumi:"mdeAutoProvisioning"`
	// The type of the security offering.
	// Expected value is 'DefenderForServersGcp'.
	OfferingType string `pulumi:"offeringType"`
	// configuration for the servers offering subPlan
	SubPlan *DefenderForServersGcpOfferingResponseSubPlan `pulumi:"subPlan"`
	// The Vulnerability Assessment autoprovisioning configuration
	VaAutoProvisioning *DefenderForServersGcpOfferingResponseVaAutoProvisioning `pulumi:"vaAutoProvisioning"`
}

// The ARC autoprovisioning configuration
type DefenderForServersGcpOfferingResponseArcAutoProvisioning struct {
	// Configuration for ARC autoprovisioning
	Configuration *DefenderForServersGcpOfferingResponseConfiguration `pulumi:"configuration"`
	// Is arc auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// Configuration for ARC autoprovisioning
type DefenderForServersGcpOfferingResponseConfiguration struct {
	// The agent onboarding service account numeric id
	AgentOnboardingServiceAccountNumericId *string `pulumi:"agentOnboardingServiceAccountNumericId"`
	// The Azure service principal client id for agent onboarding
	ClientId *string `pulumi:"clientId"`
}

// configuration for Vulnerability Assessment autoprovisioning
type DefenderForServersGcpOfferingResponseConfigurationConfiguration struct {
	// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
	Type *string `pulumi:"type"`
}

// The Defender for servers connection configuration
type DefenderForServersGcpOfferingResponseDefenderForServers struct {
	// The service account email address in GCP for this feature
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The workload identity provider id in GCP for this feature
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The Microsoft Defender for Endpoint autoprovisioning configuration
type DefenderForServersGcpOfferingResponseMdeAutoProvisioning struct {
	// configuration for Microsoft Defender for Endpoint autoprovisioning
	Configuration interface{} `pulumi:"configuration"`
	// Is Microsoft Defender for Endpoint auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// configuration for the servers offering subPlan
type DefenderForServersGcpOfferingResponseSubPlan struct {
	// The available sub plans
	Type *string `pulumi:"type"`
}

// The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersGcpOfferingResponseVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersGcpOfferingResponseConfigurationConfiguration `pulumi:"configuration"`
	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// configuration for the servers offering subPlan
type DefenderForServersGcpOfferingSubPlan struct {
	// The available sub plans
	Type *string `pulumi:"type"`
}

// The Vulnerability Assessment autoprovisioning configuration
type DefenderForServersGcpOfferingVaAutoProvisioning struct {
	// configuration for Vulnerability Assessment autoprovisioning
	Configuration *DefenderForServersGcpOfferingConfigurationConfiguration `pulumi:"configuration"`
	// Is Vulnerability Assessment auto provisioning enabled
	Enabled *bool `pulumi:"enabled"`
}

// The gcpOrganization data for the member account
type GcpOrganizationalDataMember struct {
	// The multi cloud account's membership type in the organization
	// Expected value is 'Member'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is not of membership type organization, this will be the ID of the project's parent
	ParentHierarchyId *string `pulumi:"parentHierarchyId"`
}

// The gcpOrganization data for the member account
type GcpOrganizationalDataMemberResponse struct {
	// The multi cloud account's membership type in the organization
	// Expected value is 'Member'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// If the multi cloud account is not of membership type organization, this will be the ID of the project's parent
	ParentHierarchyId *string `pulumi:"parentHierarchyId"`
}

// The gcpOrganization data for the parent account
type GcpOrganizationalDataOrganization struct {
	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedProjectNumbers []string `pulumi:"excludedProjectNumbers"`
	// The multi cloud account's membership type in the organization
	// Expected value is 'Organization'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// The service account email address which represents the organization level permissions container.
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id which represents the permissions required to auto provision security connectors
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The gcpOrganization data for the parent account
type GcpOrganizationalDataOrganizationResponse struct {
	// If the multi cloud account is of membership type organization, list of accounts excluded from offering
	ExcludedProjectNumbers []string `pulumi:"excludedProjectNumbers"`
	// The multi cloud account's membership type in the organization
	// Expected value is 'Organization'.
	OrganizationMembershipType string `pulumi:"organizationMembershipType"`
	// The service account email address which represents the organization level permissions container.
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The GCP workload identity provider id which represents the permissions required to auto provision security connectors
	WorkloadIdentityProviderId *string `pulumi:"workloadIdentityProviderId"`
}

// The details about the project represented by the security connector
type GcpProjectDetails struct {
	// The GCP Project id
	ProjectId *string `pulumi:"projectId"`
	// The unique GCP Project number
	ProjectNumber *string `pulumi:"projectNumber"`
}

// The details about the project represented by the security connector
type GcpProjectDetailsResponse struct {
	// The GCP Project id
	ProjectId *string `pulumi:"projectId"`
	// The unique GCP Project number
	ProjectNumber *string `pulumi:"projectNumber"`
	// The GCP workload identity federation pool id
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// The GCP project connector environment data
type GcpProjectEnvironmentData struct {
	// The type of the environment data.
	// Expected value is 'GcpProject'.
	EnvironmentType string `pulumi:"environmentType"`
	// The Gcp project's organizational data
	OrganizationalData interface{} `pulumi:"organizationalData"`
	// The Gcp project's details
	ProjectDetails *GcpProjectDetails `pulumi:"projectDetails"`
}

// The GCP project connector environment data
type GcpProjectEnvironmentDataResponse struct {
	// The type of the environment data.
	// Expected value is 'GcpProject'.
	EnvironmentType string `pulumi:"environmentType"`
	// The Gcp project's organizational data
	OrganizationalData interface{} `pulumi:"organizationalData"`
	// The Gcp project's details
	ProjectDetails *GcpProjectDetailsResponse `pulumi:"projectDetails"`
}

// The github scope connector's environment data
type GithubScopeEnvironmentData struct {
	// The type of the environment data.
	// Expected value is 'GithubScope'.
	EnvironmentType string `pulumi:"environmentType"`
}

// The github scope connector's environment data
type GithubScopeEnvironmentDataResponse struct {
	// The type of the environment data.
	// Expected value is 'GithubScope'.
	EnvironmentType string `pulumi:"environmentType"`
}

// The information protection for AWS offering
type InformationProtectionAwsOffering struct {
	// The native cloud connection configuration
	InformationProtection *InformationProtectionAwsOfferingInformationProtection `pulumi:"informationProtection"`
	// The type of the security offering.
	// Expected value is 'InformationProtectionAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type InformationProtectionAwsOfferingInformationProtection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// The information protection for AWS offering
type InformationProtectionAwsOfferingResponse struct {
	// The offering description.
	Description string `pulumi:"description"`
	// The native cloud connection configuration
	InformationProtection *InformationProtectionAwsOfferingResponseInformationProtection `pulumi:"informationProtection"`
	// The type of the security offering.
	// Expected value is 'InformationProtectionAws'.
	OfferingType string `pulumi:"offeringType"`
}

// The native cloud connection configuration
type InformationProtectionAwsOfferingResponseInformationProtection struct {
	// The cloud role ARN in AWS for this feature
	CloudRoleArn *string `pulumi:"cloudRoleArn"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
