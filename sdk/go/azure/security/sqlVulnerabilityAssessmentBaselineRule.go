// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package security

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Rule results.
// API Version: 2020-07-01-preview.
type SqlVulnerabilityAssessmentBaselineRule struct {
	pulumi.CustomResourceState

	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Rule results properties.
	Properties RuleResultsPropertiesResponseOutput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSqlVulnerabilityAssessmentBaselineRule registers a new resource with the given unique name, arguments, and options.
func NewSqlVulnerabilityAssessmentBaselineRule(ctx *pulumi.Context,
	name string, args *SqlVulnerabilityAssessmentBaselineRuleArgs, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentBaselineRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule"),
		},
	})
	opts = append(opts, aliases)
	var resource SqlVulnerabilityAssessmentBaselineRule
	err := ctx.RegisterResource("azure-native:security:SqlVulnerabilityAssessmentBaselineRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlVulnerabilityAssessmentBaselineRule gets an existing SqlVulnerabilityAssessmentBaselineRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlVulnerabilityAssessmentBaselineRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlVulnerabilityAssessmentBaselineRuleState, opts ...pulumi.ResourceOption) (*SqlVulnerabilityAssessmentBaselineRule, error) {
	var resource SqlVulnerabilityAssessmentBaselineRule
	err := ctx.ReadResource("azure-native:security:SqlVulnerabilityAssessmentBaselineRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlVulnerabilityAssessmentBaselineRule resources.
type sqlVulnerabilityAssessmentBaselineRuleState struct {
}

type SqlVulnerabilityAssessmentBaselineRuleState struct {
}

func (SqlVulnerabilityAssessmentBaselineRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentBaselineRuleState)(nil)).Elem()
}

type sqlVulnerabilityAssessmentBaselineRuleArgs struct {
	// Take results from latest scan.
	LatestScan *bool `pulumi:"latestScan"`
	// The identifier of the resource.
	ResourceId string `pulumi:"resourceId"`
	// Expected results to be inserted into the baseline.
	// Leave this field empty it LatestScan == true.
	Results [][]string `pulumi:"results"`
	// The rule Id.
	RuleId *string `pulumi:"ruleId"`
	// The workspace Id.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SqlVulnerabilityAssessmentBaselineRule resource.
type SqlVulnerabilityAssessmentBaselineRuleArgs struct {
	// Take results from latest scan.
	LatestScan pulumi.BoolPtrInput
	// The identifier of the resource.
	ResourceId pulumi.StringInput
	// Expected results to be inserted into the baseline.
	// Leave this field empty it LatestScan == true.
	Results pulumi.StringArrayArrayInput
	// The rule Id.
	RuleId pulumi.StringPtrInput
	// The workspace Id.
	WorkspaceId pulumi.StringInput
}

func (SqlVulnerabilityAssessmentBaselineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlVulnerabilityAssessmentBaselineRuleArgs)(nil)).Elem()
}

type SqlVulnerabilityAssessmentBaselineRuleInput interface {
	pulumi.Input

	ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput
	ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput
}

func (*SqlVulnerabilityAssessmentBaselineRule) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlVulnerabilityAssessmentBaselineRule)(nil)).Elem()
}

func (i *SqlVulnerabilityAssessmentBaselineRule) ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput {
	return i.ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(context.Background())
}

func (i *SqlVulnerabilityAssessmentBaselineRule) ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlVulnerabilityAssessmentBaselineRuleOutput)
}

type SqlVulnerabilityAssessmentBaselineRuleOutput struct{ *pulumi.OutputState }

func (SqlVulnerabilityAssessmentBaselineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlVulnerabilityAssessmentBaselineRule)(nil)).Elem()
}

func (o SqlVulnerabilityAssessmentBaselineRuleOutput) ToSqlVulnerabilityAssessmentBaselineRuleOutput() SqlVulnerabilityAssessmentBaselineRuleOutput {
	return o
}

func (o SqlVulnerabilityAssessmentBaselineRuleOutput) ToSqlVulnerabilityAssessmentBaselineRuleOutputWithContext(ctx context.Context) SqlVulnerabilityAssessmentBaselineRuleOutput {
	return o
}

// Resource name
func (o SqlVulnerabilityAssessmentBaselineRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentBaselineRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Rule results properties.
func (o SqlVulnerabilityAssessmentBaselineRuleOutput) Properties() RuleResultsPropertiesResponseOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentBaselineRule) RuleResultsPropertiesResponseOutput {
		return v.Properties
	}).(RuleResultsPropertiesResponseOutput)
}

// Resource type
func (o SqlVulnerabilityAssessmentBaselineRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlVulnerabilityAssessmentBaselineRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SqlVulnerabilityAssessmentBaselineRuleOutput{})
}
