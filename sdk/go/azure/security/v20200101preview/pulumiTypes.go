// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsProperties struct {
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Assumed role ID is an identifier that you can use to create temporary security credentials.
	AwsAssumeRoleArn string `pulumi:"awsAssumeRoleArn"`
	// A unique identifier that is required when you assume a role in another account.
	AwsExternalId string `pulumi:"awsExternalId"`
}

// AwAssumeRoleAuthenticationDetailsPropertiesInput is an input type that accepts AwAssumeRoleAuthenticationDetailsPropertiesArgs and AwAssumeRoleAuthenticationDetailsPropertiesOutput values.
// You can construct a concrete instance of `AwAssumeRoleAuthenticationDetailsPropertiesInput` via:
//
//          AwAssumeRoleAuthenticationDetailsPropertiesArgs{...}
type AwAssumeRoleAuthenticationDetailsPropertiesInput interface {
	pulumi.Input

	ToAwAssumeRoleAuthenticationDetailsPropertiesOutput() AwAssumeRoleAuthenticationDetailsPropertiesOutput
	ToAwAssumeRoleAuthenticationDetailsPropertiesOutputWithContext(context.Context) AwAssumeRoleAuthenticationDetailsPropertiesOutput
}

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsPropertiesArgs struct {
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Assumed role ID is an identifier that you can use to create temporary security credentials.
	AwsAssumeRoleArn pulumi.StringInput `pulumi:"awsAssumeRoleArn"`
	// A unique identifier that is required when you assume a role in another account.
	AwsExternalId pulumi.StringInput `pulumi:"awsExternalId"`
}

func (AwAssumeRoleAuthenticationDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwAssumeRoleAuthenticationDetailsProperties)(nil)).Elem()
}

func (i AwAssumeRoleAuthenticationDetailsPropertiesArgs) ToAwAssumeRoleAuthenticationDetailsPropertiesOutput() AwAssumeRoleAuthenticationDetailsPropertiesOutput {
	return i.ToAwAssumeRoleAuthenticationDetailsPropertiesOutputWithContext(context.Background())
}

func (i AwAssumeRoleAuthenticationDetailsPropertiesArgs) ToAwAssumeRoleAuthenticationDetailsPropertiesOutputWithContext(ctx context.Context) AwAssumeRoleAuthenticationDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwAssumeRoleAuthenticationDetailsPropertiesOutput)
}

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (AwAssumeRoleAuthenticationDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwAssumeRoleAuthenticationDetailsProperties)(nil)).Elem()
}

func (o AwAssumeRoleAuthenticationDetailsPropertiesOutput) ToAwAssumeRoleAuthenticationDetailsPropertiesOutput() AwAssumeRoleAuthenticationDetailsPropertiesOutput {
	return o
}

func (o AwAssumeRoleAuthenticationDetailsPropertiesOutput) ToAwAssumeRoleAuthenticationDetailsPropertiesOutputWithContext(ctx context.Context) AwAssumeRoleAuthenticationDetailsPropertiesOutput {
	return o
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o AwAssumeRoleAuthenticationDetailsPropertiesOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsProperties) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Assumed role ID is an identifier that you can use to create temporary security credentials.
func (o AwAssumeRoleAuthenticationDetailsPropertiesOutput) AwsAssumeRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsProperties) string { return v.AwsAssumeRoleArn }).(pulumi.StringOutput)
}

// A unique identifier that is required when you assume a role in another account.
func (o AwAssumeRoleAuthenticationDetailsPropertiesOutput) AwsExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsProperties) string { return v.AwsExternalId }).(pulumi.StringOutput)
}

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsPropertiesResponse struct {
	// The ID of the cloud account
	AccountId string `pulumi:"accountId"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState string `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Assumed role ID is an identifier that you can use to create temporary security credentials.
	AwsAssumeRoleArn string `pulumi:"awsAssumeRoleArn"`
	// A unique identifier that is required when you assume a role in another account.
	AwsExternalId string `pulumi:"awsExternalId"`
	// The permissions detected in the cloud account.
	GrantedPermissions []string `pulumi:"grantedPermissions"`
}

// AwAssumeRoleAuthenticationDetailsPropertiesResponseInput is an input type that accepts AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs and AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput values.
// You can construct a concrete instance of `AwAssumeRoleAuthenticationDetailsPropertiesResponseInput` via:
//
//          AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs{...}
type AwAssumeRoleAuthenticationDetailsPropertiesResponseInput interface {
	pulumi.Input

	ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutput() AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput
	ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutputWithContext(context.Context) AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput
}

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs struct {
	// The ID of the cloud account
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState pulumi.StringInput `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Assumed role ID is an identifier that you can use to create temporary security credentials.
	AwsAssumeRoleArn pulumi.StringInput `pulumi:"awsAssumeRoleArn"`
	// A unique identifier that is required when you assume a role in another account.
	AwsExternalId pulumi.StringInput `pulumi:"awsExternalId"`
	// The permissions detected in the cloud account.
	GrantedPermissions pulumi.StringArrayInput `pulumi:"grantedPermissions"`
}

func (AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwAssumeRoleAuthenticationDetailsPropertiesResponse)(nil)).Elem()
}

func (i AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs) ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutput() AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput {
	return i.ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutputWithContext(context.Background())
}

func (i AwAssumeRoleAuthenticationDetailsPropertiesResponseArgs) ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutputWithContext(ctx context.Context) AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput)
}

// AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role Amazon Resource Name (ARN) and external ID. For more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html">Creating a Role to Delegate Permissions to an IAM User (write only)</a>
type AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwAssumeRoleAuthenticationDetailsPropertiesResponse)(nil)).Elem()
}

func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutput() AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput {
	return o
}

func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) ToAwAssumeRoleAuthenticationDetailsPropertiesResponseOutputWithContext(ctx context.Context) AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput {
	return o
}

// The ID of the cloud account
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// State of the multi-cloud connector
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) AuthenticationProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) string {
		return v.AuthenticationProvisioningState
	}).(pulumi.StringOutput)
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Assumed role ID is an identifier that you can use to create temporary security credentials.
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) AwsAssumeRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) string { return v.AwsAssumeRoleArn }).(pulumi.StringOutput)
}

// A unique identifier that is required when you assume a role in another account.
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) AwsExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) string { return v.AwsExternalId }).(pulumi.StringOutput)
}

// The permissions detected in the cloud account.
func (o AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput) GrantedPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwAssumeRoleAuthenticationDetailsPropertiesResponse) []string { return v.GrantedPermissions }).(pulumi.StringArrayOutput)
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsProperties struct {
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Public key element of the AWS credential object (write only)
	AwsAccessKeyId string `pulumi:"awsAccessKeyId"`
	// Secret key element of the AWS credential object (write only)
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
}

// AwsCredsAuthenticationDetailsPropertiesInput is an input type that accepts AwsCredsAuthenticationDetailsPropertiesArgs and AwsCredsAuthenticationDetailsPropertiesOutput values.
// You can construct a concrete instance of `AwsCredsAuthenticationDetailsPropertiesInput` via:
//
//          AwsCredsAuthenticationDetailsPropertiesArgs{...}
type AwsCredsAuthenticationDetailsPropertiesInput interface {
	pulumi.Input

	ToAwsCredsAuthenticationDetailsPropertiesOutput() AwsCredsAuthenticationDetailsPropertiesOutput
	ToAwsCredsAuthenticationDetailsPropertiesOutputWithContext(context.Context) AwsCredsAuthenticationDetailsPropertiesOutput
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsPropertiesArgs struct {
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Public key element of the AWS credential object (write only)
	AwsAccessKeyId pulumi.StringInput `pulumi:"awsAccessKeyId"`
	// Secret key element of the AWS credential object (write only)
	AwsSecretAccessKey pulumi.StringInput `pulumi:"awsSecretAccessKey"`
}

func (AwsCredsAuthenticationDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCredsAuthenticationDetailsProperties)(nil)).Elem()
}

func (i AwsCredsAuthenticationDetailsPropertiesArgs) ToAwsCredsAuthenticationDetailsPropertiesOutput() AwsCredsAuthenticationDetailsPropertiesOutput {
	return i.ToAwsCredsAuthenticationDetailsPropertiesOutputWithContext(context.Background())
}

func (i AwsCredsAuthenticationDetailsPropertiesArgs) ToAwsCredsAuthenticationDetailsPropertiesOutputWithContext(ctx context.Context) AwsCredsAuthenticationDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredsAuthenticationDetailsPropertiesOutput)
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (AwsCredsAuthenticationDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCredsAuthenticationDetailsProperties)(nil)).Elem()
}

func (o AwsCredsAuthenticationDetailsPropertiesOutput) ToAwsCredsAuthenticationDetailsPropertiesOutput() AwsCredsAuthenticationDetailsPropertiesOutput {
	return o
}

func (o AwsCredsAuthenticationDetailsPropertiesOutput) ToAwsCredsAuthenticationDetailsPropertiesOutputWithContext(ctx context.Context) AwsCredsAuthenticationDetailsPropertiesOutput {
	return o
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o AwsCredsAuthenticationDetailsPropertiesOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsProperties) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Public key element of the AWS credential object (write only)
func (o AwsCredsAuthenticationDetailsPropertiesOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsProperties) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

// Secret key element of the AWS credential object (write only)
func (o AwsCredsAuthenticationDetailsPropertiesOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsProperties) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsPropertiesResponse struct {
	// The ID of the cloud account
	AccountId string `pulumi:"accountId"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState string `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Public key element of the AWS credential object (write only)
	AwsAccessKeyId string `pulumi:"awsAccessKeyId"`
	// Secret key element of the AWS credential object (write only)
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
	// The permissions detected in the cloud account.
	GrantedPermissions []string `pulumi:"grantedPermissions"`
}

// AwsCredsAuthenticationDetailsPropertiesResponseInput is an input type that accepts AwsCredsAuthenticationDetailsPropertiesResponseArgs and AwsCredsAuthenticationDetailsPropertiesResponseOutput values.
// You can construct a concrete instance of `AwsCredsAuthenticationDetailsPropertiesResponseInput` via:
//
//          AwsCredsAuthenticationDetailsPropertiesResponseArgs{...}
type AwsCredsAuthenticationDetailsPropertiesResponseInput interface {
	pulumi.Input

	ToAwsCredsAuthenticationDetailsPropertiesResponseOutput() AwsCredsAuthenticationDetailsPropertiesResponseOutput
	ToAwsCredsAuthenticationDetailsPropertiesResponseOutputWithContext(context.Context) AwsCredsAuthenticationDetailsPropertiesResponseOutput
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsPropertiesResponseArgs struct {
	// The ID of the cloud account
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState pulumi.StringInput `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Public key element of the AWS credential object (write only)
	AwsAccessKeyId pulumi.StringInput `pulumi:"awsAccessKeyId"`
	// Secret key element of the AWS credential object (write only)
	AwsSecretAccessKey pulumi.StringInput `pulumi:"awsSecretAccessKey"`
	// The permissions detected in the cloud account.
	GrantedPermissions pulumi.StringArrayInput `pulumi:"grantedPermissions"`
}

func (AwsCredsAuthenticationDetailsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCredsAuthenticationDetailsPropertiesResponse)(nil)).Elem()
}

func (i AwsCredsAuthenticationDetailsPropertiesResponseArgs) ToAwsCredsAuthenticationDetailsPropertiesResponseOutput() AwsCredsAuthenticationDetailsPropertiesResponseOutput {
	return i.ToAwsCredsAuthenticationDetailsPropertiesResponseOutputWithContext(context.Background())
}

func (i AwsCredsAuthenticationDetailsPropertiesResponseArgs) ToAwsCredsAuthenticationDetailsPropertiesResponseOutputWithContext(ctx context.Context) AwsCredsAuthenticationDetailsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredsAuthenticationDetailsPropertiesResponseOutput)
}

// AWS cloud account connector based credentials, the credentials is composed of access key ID and secret key, for more details, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html">Creating an IAM User in Your AWS Account (write only)</a>
type AwsCredsAuthenticationDetailsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AwsCredsAuthenticationDetailsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCredsAuthenticationDetailsPropertiesResponse)(nil)).Elem()
}

func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) ToAwsCredsAuthenticationDetailsPropertiesResponseOutput() AwsCredsAuthenticationDetailsPropertiesResponseOutput {
	return o
}

func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) ToAwsCredsAuthenticationDetailsPropertiesResponseOutputWithContext(ctx context.Context) AwsCredsAuthenticationDetailsPropertiesResponseOutput {
	return o
}

// The ID of the cloud account
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// State of the multi-cloud connector
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) AuthenticationProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) string {
		return v.AuthenticationProvisioningState
	}).(pulumi.StringOutput)
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Public key element of the AWS credential object (write only)
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

// Secret key element of the AWS credential object (write only)
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

// The permissions detected in the cloud account.
func (o AwsCredsAuthenticationDetailsPropertiesResponseOutput) GrantedPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsCredsAuthenticationDetailsPropertiesResponse) []string { return v.GrantedPermissions }).(pulumi.StringArrayOutput)
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsProperties struct {
	// Auth provider x509 certificate URL field of the API key (write only)
	AuthProviderX509CertUrl string `pulumi:"authProviderX509CertUrl"`
	// Auth URI field of the API key (write only)
	AuthUri string `pulumi:"authUri"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Client email field of the API key (write only)
	ClientEmail string `pulumi:"clientEmail"`
	// Client ID field of the API key (write only)
	ClientId string `pulumi:"clientId"`
	// Client x509 certificate URL field of the API key (write only)
	ClientX509CertUrl string `pulumi:"clientX509CertUrl"`
	// The organization ID of the GCP cloud account
	OrganizationId string `pulumi:"organizationId"`
	// Private key field of the API key (write only)
	PrivateKey string `pulumi:"privateKey"`
	// Private key ID field of the API key (write only)
	PrivateKeyId string `pulumi:"privateKeyId"`
	// Project ID field of the API key (write only)
	ProjectId string `pulumi:"projectId"`
	// Token URI field of the API key (write only)
	TokenUri string `pulumi:"tokenUri"`
	// Type field of the API key (write only)
	Type string `pulumi:"type"`
}

// GcpCredentialsDetailsPropertiesInput is an input type that accepts GcpCredentialsDetailsPropertiesArgs and GcpCredentialsDetailsPropertiesOutput values.
// You can construct a concrete instance of `GcpCredentialsDetailsPropertiesInput` via:
//
//          GcpCredentialsDetailsPropertiesArgs{...}
type GcpCredentialsDetailsPropertiesInput interface {
	pulumi.Input

	ToGcpCredentialsDetailsPropertiesOutput() GcpCredentialsDetailsPropertiesOutput
	ToGcpCredentialsDetailsPropertiesOutputWithContext(context.Context) GcpCredentialsDetailsPropertiesOutput
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsPropertiesArgs struct {
	// Auth provider x509 certificate URL field of the API key (write only)
	AuthProviderX509CertUrl pulumi.StringInput `pulumi:"authProviderX509CertUrl"`
	// Auth URI field of the API key (write only)
	AuthUri pulumi.StringInput `pulumi:"authUri"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Client email field of the API key (write only)
	ClientEmail pulumi.StringInput `pulumi:"clientEmail"`
	// Client ID field of the API key (write only)
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client x509 certificate URL field of the API key (write only)
	ClientX509CertUrl pulumi.StringInput `pulumi:"clientX509CertUrl"`
	// The organization ID of the GCP cloud account
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Private key field of the API key (write only)
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	// Private key ID field of the API key (write only)
	PrivateKeyId pulumi.StringInput `pulumi:"privateKeyId"`
	// Project ID field of the API key (write only)
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Token URI field of the API key (write only)
	TokenUri pulumi.StringInput `pulumi:"tokenUri"`
	// Type field of the API key (write only)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GcpCredentialsDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpCredentialsDetailsProperties)(nil)).Elem()
}

func (i GcpCredentialsDetailsPropertiesArgs) ToGcpCredentialsDetailsPropertiesOutput() GcpCredentialsDetailsPropertiesOutput {
	return i.ToGcpCredentialsDetailsPropertiesOutputWithContext(context.Background())
}

func (i GcpCredentialsDetailsPropertiesArgs) ToGcpCredentialsDetailsPropertiesOutputWithContext(ctx context.Context) GcpCredentialsDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpCredentialsDetailsPropertiesOutput)
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (GcpCredentialsDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpCredentialsDetailsProperties)(nil)).Elem()
}

func (o GcpCredentialsDetailsPropertiesOutput) ToGcpCredentialsDetailsPropertiesOutput() GcpCredentialsDetailsPropertiesOutput {
	return o
}

func (o GcpCredentialsDetailsPropertiesOutput) ToGcpCredentialsDetailsPropertiesOutputWithContext(ctx context.Context) GcpCredentialsDetailsPropertiesOutput {
	return o
}

// Auth provider x509 certificate URL field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) AuthProviderX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.AuthProviderX509CertUrl }).(pulumi.StringOutput)
}

// Auth URI field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) AuthUri() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.AuthUri }).(pulumi.StringOutput)
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o GcpCredentialsDetailsPropertiesOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Client email field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.ClientEmail }).(pulumi.StringOutput)
}

// Client ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client x509 certificate URL field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) ClientX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.ClientX509CertUrl }).(pulumi.StringOutput)
}

// The organization ID of the GCP cloud account
func (o GcpCredentialsDetailsPropertiesOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Private key field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// Private key ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.PrivateKeyId }).(pulumi.StringOutput)
}

// Project ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Token URI field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) TokenUri() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.TokenUri }).(pulumi.StringOutput)
}

// Type field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsProperties) string { return v.Type }).(pulumi.StringOutput)
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsPropertiesResponse struct {
	// Auth provider x509 certificate URL field of the API key (write only)
	AuthProviderX509CertUrl string `pulumi:"authProviderX509CertUrl"`
	// Auth URI field of the API key (write only)
	AuthUri string `pulumi:"authUri"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState string `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType string `pulumi:"authenticationType"`
	// Client email field of the API key (write only)
	ClientEmail string `pulumi:"clientEmail"`
	// Client ID field of the API key (write only)
	ClientId string `pulumi:"clientId"`
	// Client x509 certificate URL field of the API key (write only)
	ClientX509CertUrl string `pulumi:"clientX509CertUrl"`
	// The permissions detected in the cloud account.
	GrantedPermissions []string `pulumi:"grantedPermissions"`
	// The organization ID of the GCP cloud account
	OrganizationId string `pulumi:"organizationId"`
	// Private key field of the API key (write only)
	PrivateKey string `pulumi:"privateKey"`
	// Private key ID field of the API key (write only)
	PrivateKeyId string `pulumi:"privateKeyId"`
	// Project ID field of the API key (write only)
	ProjectId string `pulumi:"projectId"`
	// Token URI field of the API key (write only)
	TokenUri string `pulumi:"tokenUri"`
	// Type field of the API key (write only)
	Type string `pulumi:"type"`
}

// GcpCredentialsDetailsPropertiesResponseInput is an input type that accepts GcpCredentialsDetailsPropertiesResponseArgs and GcpCredentialsDetailsPropertiesResponseOutput values.
// You can construct a concrete instance of `GcpCredentialsDetailsPropertiesResponseInput` via:
//
//          GcpCredentialsDetailsPropertiesResponseArgs{...}
type GcpCredentialsDetailsPropertiesResponseInput interface {
	pulumi.Input

	ToGcpCredentialsDetailsPropertiesResponseOutput() GcpCredentialsDetailsPropertiesResponseOutput
	ToGcpCredentialsDetailsPropertiesResponseOutputWithContext(context.Context) GcpCredentialsDetailsPropertiesResponseOutput
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsPropertiesResponseArgs struct {
	// Auth provider x509 certificate URL field of the API key (write only)
	AuthProviderX509CertUrl pulumi.StringInput `pulumi:"authProviderX509CertUrl"`
	// Auth URI field of the API key (write only)
	AuthUri pulumi.StringInput `pulumi:"authUri"`
	// State of the multi-cloud connector
	AuthenticationProvisioningState pulumi.StringInput `pulumi:"authenticationProvisioningState"`
	// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Client email field of the API key (write only)
	ClientEmail pulumi.StringInput `pulumi:"clientEmail"`
	// Client ID field of the API key (write only)
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client x509 certificate URL field of the API key (write only)
	ClientX509CertUrl pulumi.StringInput `pulumi:"clientX509CertUrl"`
	// The permissions detected in the cloud account.
	GrantedPermissions pulumi.StringArrayInput `pulumi:"grantedPermissions"`
	// The organization ID of the GCP cloud account
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Private key field of the API key (write only)
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	// Private key ID field of the API key (write only)
	PrivateKeyId pulumi.StringInput `pulumi:"privateKeyId"`
	// Project ID field of the API key (write only)
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Token URI field of the API key (write only)
	TokenUri pulumi.StringInput `pulumi:"tokenUri"`
	// Type field of the API key (write only)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GcpCredentialsDetailsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpCredentialsDetailsPropertiesResponse)(nil)).Elem()
}

func (i GcpCredentialsDetailsPropertiesResponseArgs) ToGcpCredentialsDetailsPropertiesResponseOutput() GcpCredentialsDetailsPropertiesResponseOutput {
	return i.ToGcpCredentialsDetailsPropertiesResponseOutputWithContext(context.Background())
}

func (i GcpCredentialsDetailsPropertiesResponseArgs) ToGcpCredentialsDetailsPropertiesResponseOutputWithContext(ctx context.Context) GcpCredentialsDetailsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpCredentialsDetailsPropertiesResponseOutput)
}

// GCP cloud account connector based service to service credentials, the credentials are composed of the organization ID and a JSON API key (write only)
type GcpCredentialsDetailsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GcpCredentialsDetailsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpCredentialsDetailsPropertiesResponse)(nil)).Elem()
}

func (o GcpCredentialsDetailsPropertiesResponseOutput) ToGcpCredentialsDetailsPropertiesResponseOutput() GcpCredentialsDetailsPropertiesResponseOutput {
	return o
}

func (o GcpCredentialsDetailsPropertiesResponseOutput) ToGcpCredentialsDetailsPropertiesResponseOutputWithContext(ctx context.Context) GcpCredentialsDetailsPropertiesResponseOutput {
	return o
}

// Auth provider x509 certificate URL field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) AuthProviderX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.AuthProviderX509CertUrl }).(pulumi.StringOutput)
}

// Auth URI field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) AuthUri() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.AuthUri }).(pulumi.StringOutput)
}

// State of the multi-cloud connector
func (o GcpCredentialsDetailsPropertiesResponseOutput) AuthenticationProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.AuthenticationProvisioningState }).(pulumi.StringOutput)
}

// Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.
func (o GcpCredentialsDetailsPropertiesResponseOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Client email field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.ClientEmail }).(pulumi.StringOutput)
}

// Client ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client x509 certificate URL field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) ClientX509CertUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.ClientX509CertUrl }).(pulumi.StringOutput)
}

// The permissions detected in the cloud account.
func (o GcpCredentialsDetailsPropertiesResponseOutput) GrantedPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) []string { return v.GrantedPermissions }).(pulumi.StringArrayOutput)
}

// The organization ID of the GCP cloud account
func (o GcpCredentialsDetailsPropertiesResponseOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Private key field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// Private key ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.PrivateKeyId }).(pulumi.StringOutput)
}

// Project ID field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Token URI field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) TokenUri() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.TokenUri }).(pulumi.StringOutput)
}

// Type field of the API key (write only)
func (o GcpCredentialsDetailsPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GcpCredentialsDetailsPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Settings for hybrid compute management
type HybridComputeSettingsProperties struct {
	// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
	AutoProvision string `pulumi:"autoProvision"`
	// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
	ProxyServer *ProxyServerProperties `pulumi:"proxyServer"`
	// The location where the metadata of machines will be stored
	Region *string `pulumi:"region"`
	// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// An object to access resources that are secured by an Azure AD tenant.
	ServicePrincipal *ServicePrincipalProperties `pulumi:"servicePrincipal"`
}

// HybridComputeSettingsPropertiesInput is an input type that accepts HybridComputeSettingsPropertiesArgs and HybridComputeSettingsPropertiesOutput values.
// You can construct a concrete instance of `HybridComputeSettingsPropertiesInput` via:
//
//          HybridComputeSettingsPropertiesArgs{...}
type HybridComputeSettingsPropertiesInput interface {
	pulumi.Input

	ToHybridComputeSettingsPropertiesOutput() HybridComputeSettingsPropertiesOutput
	ToHybridComputeSettingsPropertiesOutputWithContext(context.Context) HybridComputeSettingsPropertiesOutput
}

// Settings for hybrid compute management
type HybridComputeSettingsPropertiesArgs struct {
	// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
	AutoProvision pulumi.StringInput `pulumi:"autoProvision"`
	// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
	ProxyServer ProxyServerPropertiesPtrInput `pulumi:"proxyServer"`
	// The location where the metadata of machines will be stored
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// An object to access resources that are secured by an Azure AD tenant.
	ServicePrincipal ServicePrincipalPropertiesPtrInput `pulumi:"servicePrincipal"`
}

func (HybridComputeSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridComputeSettingsProperties)(nil)).Elem()
}

func (i HybridComputeSettingsPropertiesArgs) ToHybridComputeSettingsPropertiesOutput() HybridComputeSettingsPropertiesOutput {
	return i.ToHybridComputeSettingsPropertiesOutputWithContext(context.Background())
}

func (i HybridComputeSettingsPropertiesArgs) ToHybridComputeSettingsPropertiesOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesOutput)
}

func (i HybridComputeSettingsPropertiesArgs) ToHybridComputeSettingsPropertiesPtrOutput() HybridComputeSettingsPropertiesPtrOutput {
	return i.ToHybridComputeSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i HybridComputeSettingsPropertiesArgs) ToHybridComputeSettingsPropertiesPtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesOutput).ToHybridComputeSettingsPropertiesPtrOutputWithContext(ctx)
}

// HybridComputeSettingsPropertiesPtrInput is an input type that accepts HybridComputeSettingsPropertiesArgs, HybridComputeSettingsPropertiesPtr and HybridComputeSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `HybridComputeSettingsPropertiesPtrInput` via:
//
//          HybridComputeSettingsPropertiesArgs{...}
//
//  or:
//
//          nil
type HybridComputeSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToHybridComputeSettingsPropertiesPtrOutput() HybridComputeSettingsPropertiesPtrOutput
	ToHybridComputeSettingsPropertiesPtrOutputWithContext(context.Context) HybridComputeSettingsPropertiesPtrOutput
}

type hybridComputeSettingsPropertiesPtrType HybridComputeSettingsPropertiesArgs

func HybridComputeSettingsPropertiesPtr(v *HybridComputeSettingsPropertiesArgs) HybridComputeSettingsPropertiesPtrInput {
	return (*hybridComputeSettingsPropertiesPtrType)(v)
}

func (*hybridComputeSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridComputeSettingsProperties)(nil)).Elem()
}

func (i *hybridComputeSettingsPropertiesPtrType) ToHybridComputeSettingsPropertiesPtrOutput() HybridComputeSettingsPropertiesPtrOutput {
	return i.ToHybridComputeSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *hybridComputeSettingsPropertiesPtrType) ToHybridComputeSettingsPropertiesPtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesPtrOutput)
}

// Settings for hybrid compute management
type HybridComputeSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (HybridComputeSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridComputeSettingsProperties)(nil)).Elem()
}

func (o HybridComputeSettingsPropertiesOutput) ToHybridComputeSettingsPropertiesOutput() HybridComputeSettingsPropertiesOutput {
	return o
}

func (o HybridComputeSettingsPropertiesOutput) ToHybridComputeSettingsPropertiesOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesOutput {
	return o
}

func (o HybridComputeSettingsPropertiesOutput) ToHybridComputeSettingsPropertiesPtrOutput() HybridComputeSettingsPropertiesPtrOutput {
	return o.ToHybridComputeSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o HybridComputeSettingsPropertiesOutput) ToHybridComputeSettingsPropertiesPtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) *HybridComputeSettingsProperties {
		return &v
	}).(HybridComputeSettingsPropertiesPtrOutput)
}

// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
func (o HybridComputeSettingsPropertiesOutput) AutoProvision() pulumi.StringOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) string { return v.AutoProvision }).(pulumi.StringOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
func (o HybridComputeSettingsPropertiesOutput) ProxyServer() ProxyServerPropertiesPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) *ProxyServerProperties { return v.ProxyServer }).(ProxyServerPropertiesPtrOutput)
}

// The location where the metadata of machines will be stored
func (o HybridComputeSettingsPropertiesOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
func (o HybridComputeSettingsPropertiesOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// An object to access resources that are secured by an Azure AD tenant.
func (o HybridComputeSettingsPropertiesOutput) ServicePrincipal() ServicePrincipalPropertiesPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsProperties) *ServicePrincipalProperties { return v.ServicePrincipal }).(ServicePrincipalPropertiesPtrOutput)
}

type HybridComputeSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (HybridComputeSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridComputeSettingsProperties)(nil)).Elem()
}

func (o HybridComputeSettingsPropertiesPtrOutput) ToHybridComputeSettingsPropertiesPtrOutput() HybridComputeSettingsPropertiesPtrOutput {
	return o
}

func (o HybridComputeSettingsPropertiesPtrOutput) ToHybridComputeSettingsPropertiesPtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesPtrOutput {
	return o
}

func (o HybridComputeSettingsPropertiesPtrOutput) Elem() HybridComputeSettingsPropertiesOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) HybridComputeSettingsProperties { return *v }).(HybridComputeSettingsPropertiesOutput)
}

// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
func (o HybridComputeSettingsPropertiesPtrOutput) AutoProvision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.AutoProvision
	}).(pulumi.StringPtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
func (o HybridComputeSettingsPropertiesPtrOutput) ProxyServer() ProxyServerPropertiesPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) *ProxyServerProperties {
		if v == nil {
			return nil
		}
		return v.ProxyServer
	}).(ProxyServerPropertiesPtrOutput)
}

// The location where the metadata of machines will be stored
func (o HybridComputeSettingsPropertiesPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
func (o HybridComputeSettingsPropertiesPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// An object to access resources that are secured by an Azure AD tenant.
func (o HybridComputeSettingsPropertiesPtrOutput) ServicePrincipal() ServicePrincipalPropertiesPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsProperties) *ServicePrincipalProperties {
		if v == nil {
			return nil
		}
		return v.ServicePrincipal
	}).(ServicePrincipalPropertiesPtrOutput)
}

// Settings for hybrid compute management
type HybridComputeSettingsPropertiesResponse struct {
	// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
	AutoProvision string `pulumi:"autoProvision"`
	// State of the service principal and its secret
	HybridComputeProvisioningState string `pulumi:"hybridComputeProvisioningState"`
	// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
	ProxyServer *ProxyServerPropertiesResponse `pulumi:"proxyServer"`
	// The location where the metadata of machines will be stored
	Region *string `pulumi:"region"`
	// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// An object to access resources that are secured by an Azure AD tenant.
	ServicePrincipal *ServicePrincipalPropertiesResponse `pulumi:"servicePrincipal"`
}

// HybridComputeSettingsPropertiesResponseInput is an input type that accepts HybridComputeSettingsPropertiesResponseArgs and HybridComputeSettingsPropertiesResponseOutput values.
// You can construct a concrete instance of `HybridComputeSettingsPropertiesResponseInput` via:
//
//          HybridComputeSettingsPropertiesResponseArgs{...}
type HybridComputeSettingsPropertiesResponseInput interface {
	pulumi.Input

	ToHybridComputeSettingsPropertiesResponseOutput() HybridComputeSettingsPropertiesResponseOutput
	ToHybridComputeSettingsPropertiesResponseOutputWithContext(context.Context) HybridComputeSettingsPropertiesResponseOutput
}

// Settings for hybrid compute management
type HybridComputeSettingsPropertiesResponseArgs struct {
	// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
	AutoProvision pulumi.StringInput `pulumi:"autoProvision"`
	// State of the service principal and its secret
	HybridComputeProvisioningState pulumi.StringInput `pulumi:"hybridComputeProvisioningState"`
	// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
	ProxyServer ProxyServerPropertiesResponsePtrInput `pulumi:"proxyServer"`
	// The location where the metadata of machines will be stored
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// An object to access resources that are secured by an Azure AD tenant.
	ServicePrincipal ServicePrincipalPropertiesResponsePtrInput `pulumi:"servicePrincipal"`
}

func (HybridComputeSettingsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridComputeSettingsPropertiesResponse)(nil)).Elem()
}

func (i HybridComputeSettingsPropertiesResponseArgs) ToHybridComputeSettingsPropertiesResponseOutput() HybridComputeSettingsPropertiesResponseOutput {
	return i.ToHybridComputeSettingsPropertiesResponseOutputWithContext(context.Background())
}

func (i HybridComputeSettingsPropertiesResponseArgs) ToHybridComputeSettingsPropertiesResponseOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesResponseOutput)
}

func (i HybridComputeSettingsPropertiesResponseArgs) ToHybridComputeSettingsPropertiesResponsePtrOutput() HybridComputeSettingsPropertiesResponsePtrOutput {
	return i.ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i HybridComputeSettingsPropertiesResponseArgs) ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesResponseOutput).ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(ctx)
}

// HybridComputeSettingsPropertiesResponsePtrInput is an input type that accepts HybridComputeSettingsPropertiesResponseArgs, HybridComputeSettingsPropertiesResponsePtr and HybridComputeSettingsPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `HybridComputeSettingsPropertiesResponsePtrInput` via:
//
//          HybridComputeSettingsPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type HybridComputeSettingsPropertiesResponsePtrInput interface {
	pulumi.Input

	ToHybridComputeSettingsPropertiesResponsePtrOutput() HybridComputeSettingsPropertiesResponsePtrOutput
	ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(context.Context) HybridComputeSettingsPropertiesResponsePtrOutput
}

type hybridComputeSettingsPropertiesResponsePtrType HybridComputeSettingsPropertiesResponseArgs

func HybridComputeSettingsPropertiesResponsePtr(v *HybridComputeSettingsPropertiesResponseArgs) HybridComputeSettingsPropertiesResponsePtrInput {
	return (*hybridComputeSettingsPropertiesResponsePtrType)(v)
}

func (*hybridComputeSettingsPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridComputeSettingsPropertiesResponse)(nil)).Elem()
}

func (i *hybridComputeSettingsPropertiesResponsePtrType) ToHybridComputeSettingsPropertiesResponsePtrOutput() HybridComputeSettingsPropertiesResponsePtrOutput {
	return i.ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *hybridComputeSettingsPropertiesResponsePtrType) ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridComputeSettingsPropertiesResponsePtrOutput)
}

// Settings for hybrid compute management
type HybridComputeSettingsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HybridComputeSettingsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridComputeSettingsPropertiesResponse)(nil)).Elem()
}

func (o HybridComputeSettingsPropertiesResponseOutput) ToHybridComputeSettingsPropertiesResponseOutput() HybridComputeSettingsPropertiesResponseOutput {
	return o
}

func (o HybridComputeSettingsPropertiesResponseOutput) ToHybridComputeSettingsPropertiesResponseOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponseOutput {
	return o
}

func (o HybridComputeSettingsPropertiesResponseOutput) ToHybridComputeSettingsPropertiesResponsePtrOutput() HybridComputeSettingsPropertiesResponsePtrOutput {
	return o.ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o HybridComputeSettingsPropertiesResponseOutput) ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) *HybridComputeSettingsPropertiesResponse {
		return &v
	}).(HybridComputeSettingsPropertiesResponsePtrOutput)
}

// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
func (o HybridComputeSettingsPropertiesResponseOutput) AutoProvision() pulumi.StringOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) string { return v.AutoProvision }).(pulumi.StringOutput)
}

// State of the service principal and its secret
func (o HybridComputeSettingsPropertiesResponseOutput) HybridComputeProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) string { return v.HybridComputeProvisioningState }).(pulumi.StringOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
func (o HybridComputeSettingsPropertiesResponseOutput) ProxyServer() ProxyServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) *ProxyServerPropertiesResponse { return v.ProxyServer }).(ProxyServerPropertiesResponsePtrOutput)
}

// The location where the metadata of machines will be stored
func (o HybridComputeSettingsPropertiesResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
func (o HybridComputeSettingsPropertiesResponseOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// An object to access resources that are secured by an Azure AD tenant.
func (o HybridComputeSettingsPropertiesResponseOutput) ServicePrincipal() ServicePrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v HybridComputeSettingsPropertiesResponse) *ServicePrincipalPropertiesResponse {
		return v.ServicePrincipal
	}).(ServicePrincipalPropertiesResponsePtrOutput)
}

type HybridComputeSettingsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (HybridComputeSettingsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridComputeSettingsPropertiesResponse)(nil)).Elem()
}

func (o HybridComputeSettingsPropertiesResponsePtrOutput) ToHybridComputeSettingsPropertiesResponsePtrOutput() HybridComputeSettingsPropertiesResponsePtrOutput {
	return o
}

func (o HybridComputeSettingsPropertiesResponsePtrOutput) ToHybridComputeSettingsPropertiesResponsePtrOutputWithContext(ctx context.Context) HybridComputeSettingsPropertiesResponsePtrOutput {
	return o
}

func (o HybridComputeSettingsPropertiesResponsePtrOutput) Elem() HybridComputeSettingsPropertiesResponseOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) HybridComputeSettingsPropertiesResponse { return *v }).(HybridComputeSettingsPropertiesResponseOutput)
}

// Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
func (o HybridComputeSettingsPropertiesResponsePtrOutput) AutoProvision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AutoProvision
	}).(pulumi.StringPtrOutput)
}

// State of the service principal and its secret
func (o HybridComputeSettingsPropertiesResponsePtrOutput) HybridComputeProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HybridComputeProvisioningState
	}).(pulumi.StringPtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
func (o HybridComputeSettingsPropertiesResponsePtrOutput) ProxyServer() ProxyServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *ProxyServerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ProxyServer
	}).(ProxyServerPropertiesResponsePtrOutput)
}

// The location where the metadata of machines will be stored
func (o HybridComputeSettingsPropertiesResponsePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The name of the resource group where Arc (Hybrid Compute) connectors are connected.
func (o HybridComputeSettingsPropertiesResponsePtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// An object to access resources that are secured by an Azure AD tenant.
func (o HybridComputeSettingsPropertiesResponsePtrOutput) ServicePrincipal() ServicePrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *HybridComputeSettingsPropertiesResponse) *ServicePrincipalPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServicePrincipal
	}).(ServicePrincipalPropertiesResponsePtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerProperties struct {
	// Proxy server IP
	Ip *string `pulumi:"ip"`
	// Proxy server port
	Port *string `pulumi:"port"`
}

// ProxyServerPropertiesInput is an input type that accepts ProxyServerPropertiesArgs and ProxyServerPropertiesOutput values.
// You can construct a concrete instance of `ProxyServerPropertiesInput` via:
//
//          ProxyServerPropertiesArgs{...}
type ProxyServerPropertiesInput interface {
	pulumi.Input

	ToProxyServerPropertiesOutput() ProxyServerPropertiesOutput
	ToProxyServerPropertiesOutputWithContext(context.Context) ProxyServerPropertiesOutput
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerPropertiesArgs struct {
	// Proxy server IP
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Proxy server port
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (ProxyServerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyServerProperties)(nil)).Elem()
}

func (i ProxyServerPropertiesArgs) ToProxyServerPropertiesOutput() ProxyServerPropertiesOutput {
	return i.ToProxyServerPropertiesOutputWithContext(context.Background())
}

func (i ProxyServerPropertiesArgs) ToProxyServerPropertiesOutputWithContext(ctx context.Context) ProxyServerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesOutput)
}

func (i ProxyServerPropertiesArgs) ToProxyServerPropertiesPtrOutput() ProxyServerPropertiesPtrOutput {
	return i.ToProxyServerPropertiesPtrOutputWithContext(context.Background())
}

func (i ProxyServerPropertiesArgs) ToProxyServerPropertiesPtrOutputWithContext(ctx context.Context) ProxyServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesOutput).ToProxyServerPropertiesPtrOutputWithContext(ctx)
}

// ProxyServerPropertiesPtrInput is an input type that accepts ProxyServerPropertiesArgs, ProxyServerPropertiesPtr and ProxyServerPropertiesPtrOutput values.
// You can construct a concrete instance of `ProxyServerPropertiesPtrInput` via:
//
//          ProxyServerPropertiesArgs{...}
//
//  or:
//
//          nil
type ProxyServerPropertiesPtrInput interface {
	pulumi.Input

	ToProxyServerPropertiesPtrOutput() ProxyServerPropertiesPtrOutput
	ToProxyServerPropertiesPtrOutputWithContext(context.Context) ProxyServerPropertiesPtrOutput
}

type proxyServerPropertiesPtrType ProxyServerPropertiesArgs

func ProxyServerPropertiesPtr(v *ProxyServerPropertiesArgs) ProxyServerPropertiesPtrInput {
	return (*proxyServerPropertiesPtrType)(v)
}

func (*proxyServerPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyServerProperties)(nil)).Elem()
}

func (i *proxyServerPropertiesPtrType) ToProxyServerPropertiesPtrOutput() ProxyServerPropertiesPtrOutput {
	return i.ToProxyServerPropertiesPtrOutputWithContext(context.Background())
}

func (i *proxyServerPropertiesPtrType) ToProxyServerPropertiesPtrOutputWithContext(ctx context.Context) ProxyServerPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesPtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerPropertiesOutput struct{ *pulumi.OutputState }

func (ProxyServerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyServerProperties)(nil)).Elem()
}

func (o ProxyServerPropertiesOutput) ToProxyServerPropertiesOutput() ProxyServerPropertiesOutput {
	return o
}

func (o ProxyServerPropertiesOutput) ToProxyServerPropertiesOutputWithContext(ctx context.Context) ProxyServerPropertiesOutput {
	return o
}

func (o ProxyServerPropertiesOutput) ToProxyServerPropertiesPtrOutput() ProxyServerPropertiesPtrOutput {
	return o.ToProxyServerPropertiesPtrOutputWithContext(context.Background())
}

func (o ProxyServerPropertiesOutput) ToProxyServerPropertiesPtrOutputWithContext(ctx context.Context) ProxyServerPropertiesPtrOutput {
	return o.ApplyT(func(v ProxyServerProperties) *ProxyServerProperties {
		return &v
	}).(ProxyServerPropertiesPtrOutput)
}

// Proxy server IP
func (o ProxyServerPropertiesOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyServerProperties) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Proxy server port
func (o ProxyServerPropertiesOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyServerProperties) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type ProxyServerPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProxyServerPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyServerProperties)(nil)).Elem()
}

func (o ProxyServerPropertiesPtrOutput) ToProxyServerPropertiesPtrOutput() ProxyServerPropertiesPtrOutput {
	return o
}

func (o ProxyServerPropertiesPtrOutput) ToProxyServerPropertiesPtrOutputWithContext(ctx context.Context) ProxyServerPropertiesPtrOutput {
	return o
}

func (o ProxyServerPropertiesPtrOutput) Elem() ProxyServerPropertiesOutput {
	return o.ApplyT(func(v *ProxyServerProperties) ProxyServerProperties { return *v }).(ProxyServerPropertiesOutput)
}

// Proxy server IP
func (o ProxyServerPropertiesPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Proxy server port
func (o ProxyServerPropertiesPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyServerProperties) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerPropertiesResponse struct {
	// Proxy server IP
	Ip *string `pulumi:"ip"`
	// Proxy server port
	Port *string `pulumi:"port"`
}

// ProxyServerPropertiesResponseInput is an input type that accepts ProxyServerPropertiesResponseArgs and ProxyServerPropertiesResponseOutput values.
// You can construct a concrete instance of `ProxyServerPropertiesResponseInput` via:
//
//          ProxyServerPropertiesResponseArgs{...}
type ProxyServerPropertiesResponseInput interface {
	pulumi.Input

	ToProxyServerPropertiesResponseOutput() ProxyServerPropertiesResponseOutput
	ToProxyServerPropertiesResponseOutputWithContext(context.Context) ProxyServerPropertiesResponseOutput
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerPropertiesResponseArgs struct {
	// Proxy server IP
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Proxy server port
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (ProxyServerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyServerPropertiesResponse)(nil)).Elem()
}

func (i ProxyServerPropertiesResponseArgs) ToProxyServerPropertiesResponseOutput() ProxyServerPropertiesResponseOutput {
	return i.ToProxyServerPropertiesResponseOutputWithContext(context.Background())
}

func (i ProxyServerPropertiesResponseArgs) ToProxyServerPropertiesResponseOutputWithContext(ctx context.Context) ProxyServerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesResponseOutput)
}

func (i ProxyServerPropertiesResponseArgs) ToProxyServerPropertiesResponsePtrOutput() ProxyServerPropertiesResponsePtrOutput {
	return i.ToProxyServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ProxyServerPropertiesResponseArgs) ToProxyServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ProxyServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesResponseOutput).ToProxyServerPropertiesResponsePtrOutputWithContext(ctx)
}

// ProxyServerPropertiesResponsePtrInput is an input type that accepts ProxyServerPropertiesResponseArgs, ProxyServerPropertiesResponsePtr and ProxyServerPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ProxyServerPropertiesResponsePtrInput` via:
//
//          ProxyServerPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ProxyServerPropertiesResponsePtrInput interface {
	pulumi.Input

	ToProxyServerPropertiesResponsePtrOutput() ProxyServerPropertiesResponsePtrOutput
	ToProxyServerPropertiesResponsePtrOutputWithContext(context.Context) ProxyServerPropertiesResponsePtrOutput
}

type proxyServerPropertiesResponsePtrType ProxyServerPropertiesResponseArgs

func ProxyServerPropertiesResponsePtr(v *ProxyServerPropertiesResponseArgs) ProxyServerPropertiesResponsePtrInput {
	return (*proxyServerPropertiesResponsePtrType)(v)
}

func (*proxyServerPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyServerPropertiesResponse)(nil)).Elem()
}

func (i *proxyServerPropertiesResponsePtrType) ToProxyServerPropertiesResponsePtrOutput() ProxyServerPropertiesResponsePtrOutput {
	return i.ToProxyServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *proxyServerPropertiesResponsePtrType) ToProxyServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ProxyServerPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyServerPropertiesResponsePtrOutput)
}

// For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
type ProxyServerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProxyServerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyServerPropertiesResponse)(nil)).Elem()
}

func (o ProxyServerPropertiesResponseOutput) ToProxyServerPropertiesResponseOutput() ProxyServerPropertiesResponseOutput {
	return o
}

func (o ProxyServerPropertiesResponseOutput) ToProxyServerPropertiesResponseOutputWithContext(ctx context.Context) ProxyServerPropertiesResponseOutput {
	return o
}

func (o ProxyServerPropertiesResponseOutput) ToProxyServerPropertiesResponsePtrOutput() ProxyServerPropertiesResponsePtrOutput {
	return o.ToProxyServerPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ProxyServerPropertiesResponseOutput) ToProxyServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ProxyServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ProxyServerPropertiesResponse) *ProxyServerPropertiesResponse {
		return &v
	}).(ProxyServerPropertiesResponsePtrOutput)
}

// Proxy server IP
func (o ProxyServerPropertiesResponseOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyServerPropertiesResponse) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Proxy server port
func (o ProxyServerPropertiesResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyServerPropertiesResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type ProxyServerPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ProxyServerPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyServerPropertiesResponse)(nil)).Elem()
}

func (o ProxyServerPropertiesResponsePtrOutput) ToProxyServerPropertiesResponsePtrOutput() ProxyServerPropertiesResponsePtrOutput {
	return o
}

func (o ProxyServerPropertiesResponsePtrOutput) ToProxyServerPropertiesResponsePtrOutputWithContext(ctx context.Context) ProxyServerPropertiesResponsePtrOutput {
	return o
}

func (o ProxyServerPropertiesResponsePtrOutput) Elem() ProxyServerPropertiesResponseOutput {
	return o.ApplyT(func(v *ProxyServerPropertiesResponse) ProxyServerPropertiesResponse { return *v }).(ProxyServerPropertiesResponseOutput)
}

// Proxy server IP
func (o ProxyServerPropertiesResponsePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Proxy server port
func (o ProxyServerPropertiesResponsePtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyServerPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Defines whether to send email notifications about new security alerts
type SecurityContactPropertiesResponseAlertNotifications struct {
	// Defines the minimal alert severity which will be sent as email notifications
	MinimalSeverity *string `pulumi:"minimalSeverity"`
	// Defines if email notifications will be sent about new security alerts
	State *string `pulumi:"state"`
}

// SecurityContactPropertiesResponseAlertNotificationsInput is an input type that accepts SecurityContactPropertiesResponseAlertNotificationsArgs and SecurityContactPropertiesResponseAlertNotificationsOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesResponseAlertNotificationsInput` via:
//
//          SecurityContactPropertiesResponseAlertNotificationsArgs{...}
type SecurityContactPropertiesResponseAlertNotificationsInput interface {
	pulumi.Input

	ToSecurityContactPropertiesResponseAlertNotificationsOutput() SecurityContactPropertiesResponseAlertNotificationsOutput
	ToSecurityContactPropertiesResponseAlertNotificationsOutputWithContext(context.Context) SecurityContactPropertiesResponseAlertNotificationsOutput
}

// Defines whether to send email notifications about new security alerts
type SecurityContactPropertiesResponseAlertNotificationsArgs struct {
	// Defines the minimal alert severity which will be sent as email notifications
	MinimalSeverity pulumi.StringPtrInput `pulumi:"minimalSeverity"`
	// Defines if email notifications will be sent about new security alerts
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SecurityContactPropertiesResponseAlertNotificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesResponseAlertNotifications)(nil)).Elem()
}

func (i SecurityContactPropertiesResponseAlertNotificationsArgs) ToSecurityContactPropertiesResponseAlertNotificationsOutput() SecurityContactPropertiesResponseAlertNotificationsOutput {
	return i.ToSecurityContactPropertiesResponseAlertNotificationsOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesResponseAlertNotificationsArgs) ToSecurityContactPropertiesResponseAlertNotificationsOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseAlertNotificationsOutput)
}

func (i SecurityContactPropertiesResponseAlertNotificationsArgs) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutput() SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return i.ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesResponseAlertNotificationsArgs) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseAlertNotificationsOutput).ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(ctx)
}

// SecurityContactPropertiesResponseAlertNotificationsPtrInput is an input type that accepts SecurityContactPropertiesResponseAlertNotificationsArgs, SecurityContactPropertiesResponseAlertNotificationsPtr and SecurityContactPropertiesResponseAlertNotificationsPtrOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesResponseAlertNotificationsPtrInput` via:
//
//          SecurityContactPropertiesResponseAlertNotificationsArgs{...}
//
//  or:
//
//          nil
type SecurityContactPropertiesResponseAlertNotificationsPtrInput interface {
	pulumi.Input

	ToSecurityContactPropertiesResponseAlertNotificationsPtrOutput() SecurityContactPropertiesResponseAlertNotificationsPtrOutput
	ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(context.Context) SecurityContactPropertiesResponseAlertNotificationsPtrOutput
}

type securityContactPropertiesResponseAlertNotificationsPtrType SecurityContactPropertiesResponseAlertNotificationsArgs

func SecurityContactPropertiesResponseAlertNotificationsPtr(v *SecurityContactPropertiesResponseAlertNotificationsArgs) SecurityContactPropertiesResponseAlertNotificationsPtrInput {
	return (*securityContactPropertiesResponseAlertNotificationsPtrType)(v)
}

func (*securityContactPropertiesResponseAlertNotificationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesResponseAlertNotifications)(nil)).Elem()
}

func (i *securityContactPropertiesResponseAlertNotificationsPtrType) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutput() SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return i.ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(context.Background())
}

func (i *securityContactPropertiesResponseAlertNotificationsPtrType) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseAlertNotificationsPtrOutput)
}

// Defines whether to send email notifications about new security alerts
type SecurityContactPropertiesResponseAlertNotificationsOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseAlertNotificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesResponseAlertNotifications)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseAlertNotificationsOutput) ToSecurityContactPropertiesResponseAlertNotificationsOutput() SecurityContactPropertiesResponseAlertNotificationsOutput {
	return o
}

func (o SecurityContactPropertiesResponseAlertNotificationsOutput) ToSecurityContactPropertiesResponseAlertNotificationsOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsOutput {
	return o
}

func (o SecurityContactPropertiesResponseAlertNotificationsOutput) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutput() SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return o.ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(context.Background())
}

func (o SecurityContactPropertiesResponseAlertNotificationsOutput) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseAlertNotifications) *SecurityContactPropertiesResponseAlertNotifications {
		return &v
	}).(SecurityContactPropertiesResponseAlertNotificationsPtrOutput)
}

// Defines the minimal alert severity which will be sent as email notifications
func (o SecurityContactPropertiesResponseAlertNotificationsOutput) MinimalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseAlertNotifications) *string { return v.MinimalSeverity }).(pulumi.StringPtrOutput)
}

// Defines if email notifications will be sent about new security alerts
func (o SecurityContactPropertiesResponseAlertNotificationsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseAlertNotifications) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SecurityContactPropertiesResponseAlertNotificationsPtrOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseAlertNotificationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesResponseAlertNotifications)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseAlertNotificationsPtrOutput) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutput() SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseAlertNotificationsPtrOutput) ToSecurityContactPropertiesResponseAlertNotificationsPtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseAlertNotificationsPtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseAlertNotificationsPtrOutput) Elem() SecurityContactPropertiesResponseAlertNotificationsOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseAlertNotifications) SecurityContactPropertiesResponseAlertNotifications {
		return *v
	}).(SecurityContactPropertiesResponseAlertNotificationsOutput)
}

// Defines the minimal alert severity which will be sent as email notifications
func (o SecurityContactPropertiesResponseAlertNotificationsPtrOutput) MinimalSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseAlertNotifications) *string {
		if v == nil {
			return nil
		}
		return v.MinimalSeverity
	}).(pulumi.StringPtrOutput)
}

// Defines if email notifications will be sent about new security alerts
func (o SecurityContactPropertiesResponseAlertNotificationsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseAlertNotifications) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesResponseNotificationsByRole struct {
	// Defines which RBAC roles will get email notifications from Azure Security Center. List of allowed RBAC roles:
	Roles []string `pulumi:"roles"`
	// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
	State *string `pulumi:"state"`
}

// SecurityContactPropertiesResponseNotificationsByRoleInput is an input type that accepts SecurityContactPropertiesResponseNotificationsByRoleArgs and SecurityContactPropertiesResponseNotificationsByRoleOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesResponseNotificationsByRoleInput` via:
//
//          SecurityContactPropertiesResponseNotificationsByRoleArgs{...}
type SecurityContactPropertiesResponseNotificationsByRoleInput interface {
	pulumi.Input

	ToSecurityContactPropertiesResponseNotificationsByRoleOutput() SecurityContactPropertiesResponseNotificationsByRoleOutput
	ToSecurityContactPropertiesResponseNotificationsByRoleOutputWithContext(context.Context) SecurityContactPropertiesResponseNotificationsByRoleOutput
}

// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesResponseNotificationsByRoleArgs struct {
	// Defines which RBAC roles will get email notifications from Azure Security Center. List of allowed RBAC roles:
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (SecurityContactPropertiesResponseNotificationsByRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (i SecurityContactPropertiesResponseNotificationsByRoleArgs) ToSecurityContactPropertiesResponseNotificationsByRoleOutput() SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return i.ToSecurityContactPropertiesResponseNotificationsByRoleOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesResponseNotificationsByRoleArgs) ToSecurityContactPropertiesResponseNotificationsByRoleOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseNotificationsByRoleOutput)
}

func (i SecurityContactPropertiesResponseNotificationsByRoleArgs) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return i.ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(context.Background())
}

func (i SecurityContactPropertiesResponseNotificationsByRoleArgs) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseNotificationsByRoleOutput).ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx)
}

// SecurityContactPropertiesResponseNotificationsByRolePtrInput is an input type that accepts SecurityContactPropertiesResponseNotificationsByRoleArgs, SecurityContactPropertiesResponseNotificationsByRolePtr and SecurityContactPropertiesResponseNotificationsByRolePtrOutput values.
// You can construct a concrete instance of `SecurityContactPropertiesResponseNotificationsByRolePtrInput` via:
//
//          SecurityContactPropertiesResponseNotificationsByRoleArgs{...}
//
//  or:
//
//          nil
type SecurityContactPropertiesResponseNotificationsByRolePtrInput interface {
	pulumi.Input

	ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput
	ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput
}

type securityContactPropertiesResponseNotificationsByRolePtrType SecurityContactPropertiesResponseNotificationsByRoleArgs

func SecurityContactPropertiesResponseNotificationsByRolePtr(v *SecurityContactPropertiesResponseNotificationsByRoleArgs) SecurityContactPropertiesResponseNotificationsByRolePtrInput {
	return (*securityContactPropertiesResponseNotificationsByRolePtrType)(v)
}

func (*securityContactPropertiesResponseNotificationsByRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (i *securityContactPropertiesResponseNotificationsByRolePtrType) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return i.ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(context.Background())
}

func (i *securityContactPropertiesResponseNotificationsByRolePtrType) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityContactPropertiesResponseNotificationsByRolePtrOutput)
}

// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
type SecurityContactPropertiesResponseNotificationsByRoleOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseNotificationsByRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRoleOutput() SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRoleOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o.ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(context.Background())
}

func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseNotificationsByRole) *SecurityContactPropertiesResponseNotificationsByRole {
		return &v
	}).(SecurityContactPropertiesResponseNotificationsByRolePtrOutput)
}

// Defines which RBAC roles will get email notifications from Azure Security Center. List of allowed RBAC roles:
func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseNotificationsByRole) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesResponseNotificationsByRoleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityContactPropertiesResponseNotificationsByRole) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SecurityContactPropertiesResponseNotificationsByRolePtrOutput struct{ *pulumi.OutputState }

func (SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityContactPropertiesResponseNotificationsByRole)(nil)).Elem()
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutput() SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) ToSecurityContactPropertiesResponseNotificationsByRolePtrOutputWithContext(ctx context.Context) SecurityContactPropertiesResponseNotificationsByRolePtrOutput {
	return o
}

func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) Elem() SecurityContactPropertiesResponseNotificationsByRoleOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) SecurityContactPropertiesResponseNotificationsByRole {
		return *v
	}).(SecurityContactPropertiesResponseNotificationsByRoleOutput)
}

// Defines which RBAC roles will get email notifications from Azure Security Center. List of allowed RBAC roles:
func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
func (o SecurityContactPropertiesResponseNotificationsByRolePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityContactPropertiesResponseNotificationsByRole) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Details of the service principal.
type ServicePrincipalProperties struct {
	// Application ID of service principal.
	ApplicationId *string `pulumi:"applicationId"`
	// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
	Secret *string `pulumi:"secret"`
}

// ServicePrincipalPropertiesInput is an input type that accepts ServicePrincipalPropertiesArgs and ServicePrincipalPropertiesOutput values.
// You can construct a concrete instance of `ServicePrincipalPropertiesInput` via:
//
//          ServicePrincipalPropertiesArgs{...}
type ServicePrincipalPropertiesInput interface {
	pulumi.Input

	ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput
	ToServicePrincipalPropertiesOutputWithContext(context.Context) ServicePrincipalPropertiesOutput
}

// Details of the service principal.
type ServicePrincipalPropertiesArgs struct {
	// Application ID of service principal.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ServicePrincipalPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProperties)(nil)).Elem()
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput {
	return i.ToServicePrincipalPropertiesOutputWithContext(context.Background())
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesOutputWithContext(ctx context.Context) ServicePrincipalPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesOutput)
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesPtrOutput() ServicePrincipalPropertiesPtrOutput {
	return i.ToServicePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i ServicePrincipalPropertiesArgs) ToServicePrincipalPropertiesPtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesOutput).ToServicePrincipalPropertiesPtrOutputWithContext(ctx)
}

// ServicePrincipalPropertiesPtrInput is an input type that accepts ServicePrincipalPropertiesArgs, ServicePrincipalPropertiesPtr and ServicePrincipalPropertiesPtrOutput values.
// You can construct a concrete instance of `ServicePrincipalPropertiesPtrInput` via:
//
//          ServicePrincipalPropertiesArgs{...}
//
//  or:
//
//          nil
type ServicePrincipalPropertiesPtrInput interface {
	pulumi.Input

	ToServicePrincipalPropertiesPtrOutput() ServicePrincipalPropertiesPtrOutput
	ToServicePrincipalPropertiesPtrOutputWithContext(context.Context) ServicePrincipalPropertiesPtrOutput
}

type servicePrincipalPropertiesPtrType ServicePrincipalPropertiesArgs

func ServicePrincipalPropertiesPtr(v *ServicePrincipalPropertiesArgs) ServicePrincipalPropertiesPtrInput {
	return (*servicePrincipalPropertiesPtrType)(v)
}

func (*servicePrincipalPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalProperties)(nil)).Elem()
}

func (i *servicePrincipalPropertiesPtrType) ToServicePrincipalPropertiesPtrOutput() ServicePrincipalPropertiesPtrOutput {
	return i.ToServicePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (i *servicePrincipalPropertiesPtrType) ToServicePrincipalPropertiesPtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesPtrOutput)
}

// Details of the service principal.
type ServicePrincipalPropertiesOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProperties)(nil)).Elem()
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesOutput() ServicePrincipalPropertiesOutput {
	return o
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesOutputWithContext(ctx context.Context) ServicePrincipalPropertiesOutput {
	return o
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesPtrOutput() ServicePrincipalPropertiesPtrOutput {
	return o.ToServicePrincipalPropertiesPtrOutputWithContext(context.Background())
}

func (o ServicePrincipalPropertiesOutput) ToServicePrincipalPropertiesPtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesPtrOutput {
	return o.ApplyT(func(v ServicePrincipalProperties) *ServicePrincipalProperties {
		return &v
	}).(ServicePrincipalPropertiesPtrOutput)
}

// Application ID of service principal.
func (o ServicePrincipalPropertiesOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalProperties) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
func (o ServicePrincipalPropertiesOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalProperties) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ServicePrincipalPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalProperties)(nil)).Elem()
}

func (o ServicePrincipalPropertiesPtrOutput) ToServicePrincipalPropertiesPtrOutput() ServicePrincipalPropertiesPtrOutput {
	return o
}

func (o ServicePrincipalPropertiesPtrOutput) ToServicePrincipalPropertiesPtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesPtrOutput {
	return o
}

func (o ServicePrincipalPropertiesPtrOutput) Elem() ServicePrincipalPropertiesOutput {
	return o.ApplyT(func(v *ServicePrincipalProperties) ServicePrincipalProperties { return *v }).(ServicePrincipalPropertiesOutput)
}

// Application ID of service principal.
func (o ServicePrincipalPropertiesPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
func (o ServicePrincipalPropertiesPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalProperties) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Details of the service principal.
type ServicePrincipalPropertiesResponse struct {
	// Application ID of service principal.
	ApplicationId *string `pulumi:"applicationId"`
	// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
	Secret *string `pulumi:"secret"`
}

// ServicePrincipalPropertiesResponseInput is an input type that accepts ServicePrincipalPropertiesResponseArgs and ServicePrincipalPropertiesResponseOutput values.
// You can construct a concrete instance of `ServicePrincipalPropertiesResponseInput` via:
//
//          ServicePrincipalPropertiesResponseArgs{...}
type ServicePrincipalPropertiesResponseInput interface {
	pulumi.Input

	ToServicePrincipalPropertiesResponseOutput() ServicePrincipalPropertiesResponseOutput
	ToServicePrincipalPropertiesResponseOutputWithContext(context.Context) ServicePrincipalPropertiesResponseOutput
}

// Details of the service principal.
type ServicePrincipalPropertiesResponseArgs struct {
	// Application ID of service principal.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ServicePrincipalPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (i ServicePrincipalPropertiesResponseArgs) ToServicePrincipalPropertiesResponseOutput() ServicePrincipalPropertiesResponseOutput {
	return i.ToServicePrincipalPropertiesResponseOutputWithContext(context.Background())
}

func (i ServicePrincipalPropertiesResponseArgs) ToServicePrincipalPropertiesResponseOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesResponseOutput)
}

func (i ServicePrincipalPropertiesResponseArgs) ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput {
	return i.ToServicePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ServicePrincipalPropertiesResponseArgs) ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesResponseOutput).ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx)
}

// ServicePrincipalPropertiesResponsePtrInput is an input type that accepts ServicePrincipalPropertiesResponseArgs, ServicePrincipalPropertiesResponsePtr and ServicePrincipalPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ServicePrincipalPropertiesResponsePtrInput` via:
//
//          ServicePrincipalPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ServicePrincipalPropertiesResponsePtrInput interface {
	pulumi.Input

	ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput
	ToServicePrincipalPropertiesResponsePtrOutputWithContext(context.Context) ServicePrincipalPropertiesResponsePtrOutput
}

type servicePrincipalPropertiesResponsePtrType ServicePrincipalPropertiesResponseArgs

func ServicePrincipalPropertiesResponsePtr(v *ServicePrincipalPropertiesResponseArgs) ServicePrincipalPropertiesResponsePtrInput {
	return (*servicePrincipalPropertiesResponsePtrType)(v)
}

func (*servicePrincipalPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (i *servicePrincipalPropertiesResponsePtrType) ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput {
	return i.ToServicePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *servicePrincipalPropertiesResponsePtrType) ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalPropertiesResponsePtrOutput)
}

// Details of the service principal.
type ServicePrincipalPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponseOutput() ServicePrincipalPropertiesResponseOutput {
	return o
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponseOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponseOutput {
	return o
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput {
	return o.ToServicePrincipalPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ServicePrincipalPropertiesResponseOutput) ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ServicePrincipalPropertiesResponse) *ServicePrincipalPropertiesResponse {
		return &v
	}).(ServicePrincipalPropertiesResponsePtrOutput)
}

// Application ID of service principal.
func (o ServicePrincipalPropertiesResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalPropertiesResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
func (o ServicePrincipalPropertiesResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalPropertiesResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ServicePrincipalPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalPropertiesResponse)(nil)).Elem()
}

func (o ServicePrincipalPropertiesResponsePtrOutput) ToServicePrincipalPropertiesResponsePtrOutput() ServicePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ServicePrincipalPropertiesResponsePtrOutput) ToServicePrincipalPropertiesResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalPropertiesResponsePtrOutput {
	return o
}

func (o ServicePrincipalPropertiesResponsePtrOutput) Elem() ServicePrincipalPropertiesResponseOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) ServicePrincipalPropertiesResponse { return *v }).(ServicePrincipalPropertiesResponseOutput)
}

// Application ID of service principal.
func (o ServicePrincipalPropertiesResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// A secret string that the application uses to prove its identity, also can be referred to as application password (write only).
func (o ServicePrincipalPropertiesResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AwAssumeRoleAuthenticationDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(AwAssumeRoleAuthenticationDetailsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AwsCredsAuthenticationDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(AwsCredsAuthenticationDetailsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GcpCredentialsDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(GcpCredentialsDetailsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HybridComputeSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(HybridComputeSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(HybridComputeSettingsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HybridComputeSettingsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProxyServerPropertiesOutput{})
	pulumi.RegisterOutputType(ProxyServerPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProxyServerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ProxyServerPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseAlertNotificationsOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseAlertNotificationsPtrOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseNotificationsByRoleOutput{})
	pulumi.RegisterOutputType(SecurityContactPropertiesResponseNotificationsByRolePtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalPropertiesResponsePtrOutput{})
}
