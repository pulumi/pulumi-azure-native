// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contact details and configurations for notifications coming from Azure Security Center.
type SecurityContact struct {
	pulumi.CustomResourceState

	// Defines whether to send email notifications about new security alerts
	AlertNotifications SecurityContactPropertiesResponseAlertNotificationsPtrOutput `pulumi:"alertNotifications"`
	// List of email addresses which will get notifications from Azure Security Center by the configurations defined in this security contact.
	Emails pulumi.StringPtrOutput `pulumi:"emails"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
	NotificationsByRole SecurityContactPropertiesResponseNotificationsByRolePtrOutput `pulumi:"notificationsByRole"`
	// The security contact's phone number
	Phone pulumi.StringPtrOutput `pulumi:"phone"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecurityContact registers a new resource with the given unique name, arguments, and options.
func NewSecurityContact(ctx *pulumi.Context,
	name string, args *SecurityContactArgs, opts ...pulumi.ResourceOption) (*SecurityContact, error) {
	if args == nil || args.SecurityContactName == nil {
		return nil, errors.New("missing required argument 'SecurityContactName'")
	}
	if args == nil {
		args = &SecurityContactArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:security/v20170801preview:SecurityContact"),
		},
	})
	opts = append(opts, aliases)
	var resource SecurityContact
	err := ctx.RegisterResource("azure-nextgen:security/v20200101preview:SecurityContact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityContact gets an existing SecurityContact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityContact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityContactState, opts ...pulumi.ResourceOption) (*SecurityContact, error) {
	var resource SecurityContact
	err := ctx.ReadResource("azure-nextgen:security/v20200101preview:SecurityContact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityContact resources.
type securityContactState struct {
	// Defines whether to send email notifications about new security alerts
	AlertNotifications *SecurityContactPropertiesResponseAlertNotifications `pulumi:"alertNotifications"`
	// List of email addresses which will get notifications from Azure Security Center by the configurations defined in this security contact.
	Emails *string `pulumi:"emails"`
	// Resource name
	Name *string `pulumi:"name"`
	// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
	NotificationsByRole *SecurityContactPropertiesResponseNotificationsByRole `pulumi:"notificationsByRole"`
	// The security contact's phone number
	Phone *string `pulumi:"phone"`
	// Resource type
	Type *string `pulumi:"type"`
}

type SecurityContactState struct {
	// Defines whether to send email notifications about new security alerts
	AlertNotifications SecurityContactPropertiesResponseAlertNotificationsPtrInput
	// List of email addresses which will get notifications from Azure Security Center by the configurations defined in this security contact.
	Emails pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// Defines whether to send email notifications from Azure Security Center to persons with specific RBAC roles on the subscription.
	NotificationsByRole SecurityContactPropertiesResponseNotificationsByRolePtrInput
	// The security contact's phone number
	Phone pulumi.StringPtrInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (SecurityContactState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityContactState)(nil)).Elem()
}

type securityContactArgs struct {
	// Name of the security contact object
	SecurityContactName string `pulumi:"securityContactName"`
}

// The set of arguments for constructing a SecurityContact resource.
type SecurityContactArgs struct {
	// Name of the security contact object
	SecurityContactName pulumi.StringInput
}

func (SecurityContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityContactArgs)(nil)).Elem()
}
