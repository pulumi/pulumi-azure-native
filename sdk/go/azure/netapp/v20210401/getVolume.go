// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Volume resource
func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	var rv LookupVolumeResult
	err := ctx.Invoke("azure-native:netapp/v20210401:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVolumeArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
}

// Volume resource
type LookupVolumeResult struct {
	// UUID v4 or resource identifier used to identify the Backup.
	BackupId *string `pulumi:"backupId"`
	// Unique Baremetal Tenant Identifier.
	BaremetalTenantId string `pulumi:"baremetalTenantId"`
	// Specifies whether Cool Access(tiering) is enabled for the volume.
	CoolAccess *bool `pulumi:"coolAccess"`
	// Specifies the number of days after which data that is not accessed by clients will be tiered.
	CoolnessPeriod *int `pulumi:"coolnessPeriod"`
	// A unique file path for the volume. Used when creating mount targets
	CreationToken string `pulumi:"creationToken"`
	// DataProtection type volumes include an object containing details of the replication
	DataProtection *VolumePropertiesResponseDataProtection `pulumi:"dataProtection"`
	// Encryption Key Source. Possible values are: 'Microsoft.NetApp'
	EncryptionKeySource *string `pulumi:"encryptionKeySource"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Set of export policy rules
	ExportPolicy *VolumePropertiesResponseExportPolicy `pulumi:"exportPolicy"`
	// Unique FileSystem Identifier.
	FileSystemId string `pulumi:"fileSystemId"`
	// Resource Id
	Id string `pulumi:"id"`
	// Restoring
	IsRestoring *bool `pulumi:"isRestoring"`
	// Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later
	KerberosEnabled *bool `pulumi:"kerberosEnabled"`
	// Specifies whether LDAP is enabled or not for a given NFS volume.
	LdapEnabled *bool `pulumi:"ldapEnabled"`
	// Resource location
	Location string `pulumi:"location"`
	// List of mount targets
	MountTargets []MountTargetPropertiesResponse `pulumi:"mountTargets"`
	// Resource name
	Name string `pulumi:"name"`
	// Set of protocol types, default NFSv3, CIFS for SMB protocol
	ProtocolTypes []string `pulumi:"protocolTypes"`
	// Azure lifecycle management
	ProvisioningState string `pulumi:"provisioningState"`
	// The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
	SecurityStyle *string `pulumi:"securityStyle"`
	// The service level of the file system
	ServiceLevel *string `pulumi:"serviceLevel"`
	// Enables continuously available share property for smb volume. Only applicable for SMB volume
	SmbContinuouslyAvailable *bool `pulumi:"smbContinuouslyAvailable"`
	// Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later
	SmbEncryption *bool `pulumi:"smbEncryption"`
	// If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).
	SnapshotDirectoryVisible *bool `pulumi:"snapshotDirectoryVisible"`
	// UUID v4 or resource identifier used to identify the Snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
	SubnetId string `pulumi:"subnetId"`
	// Resource tags
	Tags            map[string]string `pulumi:"tags"`
	ThroughputMibps *float64          `pulumi:"throughputMibps"`
	// Resource type
	Type string `pulumi:"type"`
	// UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.
	UnixPermissions *string `pulumi:"unixPermissions"`
	// Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
	UsageThreshold float64 `pulumi:"usageThreshold"`
	// What type of volume is this
	VolumeType *string `pulumi:"volumeType"`
}
