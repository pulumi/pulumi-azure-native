// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagemover

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Agent resource.
// API Version: 2022-07-01-preview.
type Agent struct {
	pulumi.CustomResourceState

	// The Agent status.
	AgentStatus pulumi.StringOutput `pulumi:"agentStatus"`
	// The Agent version.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`
	// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
	ArcResourceId pulumi.StringOutput `pulumi:"arcResourceId"`
	// The VM UUID of the Hybrid Compute resource for the Agent.
	ArcVmUuid pulumi.StringOutput `pulumi:"arcVmUuid"`
	// A description for the Agent.
	Description  pulumi.StringPtrOutput                    `pulumi:"description"`
	ErrorDetails AgentPropertiesResponseErrorDetailsOutput `pulumi:"errorDetails"`
	// The last updated time of the Agent status.
	LastStatusUpdate pulumi.StringOutput `pulumi:"lastStatusUpdate"`
	// Local IP address reported by the Agent.
	LocalIPAddress pulumi.StringOutput `pulumi:"localIPAddress"`
	// Available memory reported by the Agent, in MB.
	MemoryInMB pulumi.Float64Output `pulumi:"memoryInMB"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Available compute cores reported by the Agent.
	NumberOfCores pulumi.Float64Output `pulumi:"numberOfCores"`
	// The provisioning state of this resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource system metadata.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Uptime of the Agent in seconds.
	UptimeInSeconds pulumi.Float64Output `pulumi:"uptimeInSeconds"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArcResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ArcResourceId'")
	}
	if args.ArcVmUuid == nil {
		return nil, errors.New("invalid value for required argument 'ArcVmUuid'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageMoverName == nil {
		return nil, errors.New("invalid value for required argument 'StorageMoverName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:storagemover/v20220701preview:Agent"),
		},
	})
	opts = append(opts, aliases)
	var resource Agent
	err := ctx.RegisterResource("azure-native:storagemover:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("azure-native:storagemover:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
}

type AgentState struct {
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	// The name of the Agent resource.
	AgentName *string `pulumi:"agentName"`
	// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
	ArcResourceId string `pulumi:"arcResourceId"`
	// The VM UUID of the Hybrid Compute resource for the Agent.
	ArcVmUuid string `pulumi:"arcVmUuid"`
	// A description for the Agent.
	Description *string `pulumi:"description"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Storage Mover resource.
	StorageMoverName string `pulumi:"storageMoverName"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	// The name of the Agent resource.
	AgentName pulumi.StringPtrInput
	// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
	ArcResourceId pulumi.StringInput
	// The VM UUID of the Hybrid Compute resource for the Agent.
	ArcVmUuid pulumi.StringInput
	// A description for the Agent.
	Description pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the Storage Mover resource.
	StorageMoverName pulumi.StringInput
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}

type AgentInput interface {
	pulumi.Input

	ToAgentOutput() AgentOutput
	ToAgentOutputWithContext(ctx context.Context) AgentOutput
}

func (*Agent) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (i *Agent) ToAgentOutput() AgentOutput {
	return i.ToAgentOutputWithContext(context.Background())
}

func (i *Agent) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOutput)
}

type AgentOutput struct{ *pulumi.OutputState }

func (AgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (o AgentOutput) ToAgentOutput() AgentOutput {
	return o
}

func (o AgentOutput) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return o
}

// The Agent status.
func (o AgentOutput) AgentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.AgentStatus }).(pulumi.StringOutput)
}

// The Agent version.
func (o AgentOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.AgentVersion }).(pulumi.StringOutput)
}

// The fully qualified resource ID of the Hybrid Compute resource for the Agent.
func (o AgentOutput) ArcResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ArcResourceId }).(pulumi.StringOutput)
}

// The VM UUID of the Hybrid Compute resource for the Agent.
func (o AgentOutput) ArcVmUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ArcVmUuid }).(pulumi.StringOutput)
}

// A description for the Agent.
func (o AgentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AgentOutput) ErrorDetails() AgentPropertiesResponseErrorDetailsOutput {
	return o.ApplyT(func(v *Agent) AgentPropertiesResponseErrorDetailsOutput { return v.ErrorDetails }).(AgentPropertiesResponseErrorDetailsOutput)
}

// The last updated time of the Agent status.
func (o AgentOutput) LastStatusUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.LastStatusUpdate }).(pulumi.StringOutput)
}

// Local IP address reported by the Agent.
func (o AgentOutput) LocalIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.LocalIPAddress }).(pulumi.StringOutput)
}

// Available memory reported by the Agent, in MB.
func (o AgentOutput) MemoryInMB() pulumi.Float64Output {
	return o.ApplyT(func(v *Agent) pulumi.Float64Output { return v.MemoryInMB }).(pulumi.Float64Output)
}

// The name of the resource
func (o AgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Available compute cores reported by the Agent.
func (o AgentOutput) NumberOfCores() pulumi.Float64Output {
	return o.ApplyT(func(v *Agent) pulumi.Float64Output { return v.NumberOfCores }).(pulumi.Float64Output)
}

// The provisioning state of this resource.
func (o AgentOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource system metadata.
func (o AgentOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Agent) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AgentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Uptime of the Agent in seconds.
func (o AgentOutput) UptimeInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v *Agent) pulumi.Float64Output { return v.UptimeInSeconds }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(AgentOutput{})
}
