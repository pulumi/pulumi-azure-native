// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220701preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The job definition resource.
func LookupJobDefinition(ctx *pulumi.Context, args *LookupJobDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupJobDefinitionResult, error) {
	var rv LookupJobDefinitionResult
	err := ctx.Invoke("azure-native:storagemover/v20220701preview:getJobDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJobDefinitionArgs struct {
	// The name of the job definition resource.
	JobDefinitionName string `pulumi:"jobDefinitionName"`
	// The name of the project resource.
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Storage Mover resource.
	StorageMoverName string `pulumi:"storageMoverName"`
}

// The job definition resource.
type LookupJobDefinitionResult struct {
	// Name of the agent to assign for new job runs of this definition.
	AgentName *string `pulumi:"agentName"`
	// Fully qualified resource id of the agent to assign for new job runs of this definition.
	AgentResourceId string `pulumi:"agentResourceId"`
	// Strategy to use for copy.
	CopyMode *string `pulumi:"copyMode"`
	// A description for the job definition.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the job run in a non-terminal state, if exists.
	LatestJobRunName string `pulumi:"latestJobRunName"`
	// The fully qualified resource ID of the job run in a non-terminal state, if exists.
	LatestJobRunResourceId string `pulumi:"latestJobRunResourceId"`
	// The current status of the job run in a non-terminal state, if exists.
	LatestJobRunStatus string `pulumi:"latestJobRunStatus"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The provisioning state of this resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the source endpoint.
	SourceName string `pulumi:"sourceName"`
	// Fully qualified resource ID of the source endpoint.
	SourceResourceId string `pulumi:"sourceResourceId"`
	// The subpath to use when reading from the source Endpoint.
	SourceSubpath *string `pulumi:"sourceSubpath"`
	// Resource system metadata.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The name of the target endpoint.
	TargetName string `pulumi:"targetName"`
	// Fully qualified resource ID of the target endpoint.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The subpath to use when writing to the target Endpoint.
	TargetSubpath *string `pulumi:"targetSubpath"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupJobDefinitionOutput(ctx *pulumi.Context, args LookupJobDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupJobDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupJobDefinitionResult, error) {
			args := v.(LookupJobDefinitionArgs)
			r, err := LookupJobDefinition(ctx, &args, opts...)
			var s LookupJobDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupJobDefinitionResultOutput)
}

type LookupJobDefinitionOutputArgs struct {
	// The name of the job definition resource.
	JobDefinitionName pulumi.StringInput `pulumi:"jobDefinitionName"`
	// The name of the project resource.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Storage Mover resource.
	StorageMoverName pulumi.StringInput `pulumi:"storageMoverName"`
}

func (LookupJobDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobDefinitionArgs)(nil)).Elem()
}

// The job definition resource.
type LookupJobDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupJobDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobDefinitionResult)(nil)).Elem()
}

func (o LookupJobDefinitionResultOutput) ToLookupJobDefinitionResultOutput() LookupJobDefinitionResultOutput {
	return o
}

func (o LookupJobDefinitionResultOutput) ToLookupJobDefinitionResultOutputWithContext(ctx context.Context) LookupJobDefinitionResultOutput {
	return o
}

// Name of the agent to assign for new job runs of this definition.
func (o LookupJobDefinitionResultOutput) AgentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) *string { return v.AgentName }).(pulumi.StringPtrOutput)
}

// Fully qualified resource id of the agent to assign for new job runs of this definition.
func (o LookupJobDefinitionResultOutput) AgentResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.AgentResourceId }).(pulumi.StringOutput)
}

// Strategy to use for copy.
func (o LookupJobDefinitionResultOutput) CopyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) *string { return v.CopyMode }).(pulumi.StringPtrOutput)
}

// A description for the job definition.
func (o LookupJobDefinitionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupJobDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the job run in a non-terminal state, if exists.
func (o LookupJobDefinitionResultOutput) LatestJobRunName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.LatestJobRunName }).(pulumi.StringOutput)
}

// The fully qualified resource ID of the job run in a non-terminal state, if exists.
func (o LookupJobDefinitionResultOutput) LatestJobRunResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.LatestJobRunResourceId }).(pulumi.StringOutput)
}

// The current status of the job run in a non-terminal state, if exists.
func (o LookupJobDefinitionResultOutput) LatestJobRunStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.LatestJobRunStatus }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupJobDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of this resource.
func (o LookupJobDefinitionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the source endpoint.
func (o LookupJobDefinitionResultOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.SourceName }).(pulumi.StringOutput)
}

// Fully qualified resource ID of the source endpoint.
func (o LookupJobDefinitionResultOutput) SourceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.SourceResourceId }).(pulumi.StringOutput)
}

// The subpath to use when reading from the source Endpoint.
func (o LookupJobDefinitionResultOutput) SourceSubpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) *string { return v.SourceSubpath }).(pulumi.StringPtrOutput)
}

// Resource system metadata.
func (o LookupJobDefinitionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The name of the target endpoint.
func (o LookupJobDefinitionResultOutput) TargetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.TargetName }).(pulumi.StringOutput)
}

// Fully qualified resource ID of the target endpoint.
func (o LookupJobDefinitionResultOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The subpath to use when writing to the target Endpoint.
func (o LookupJobDefinitionResultOutput) TargetSubpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) *string { return v.TargetSubpath }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupJobDefinitionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobDefinitionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobDefinitionResultOutput{})
}
