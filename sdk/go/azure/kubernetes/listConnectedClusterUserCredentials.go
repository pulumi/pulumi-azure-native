// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The list of credential result response.
// API Version: 2021-04-01-preview.
func ListConnectedClusterUserCredentials(ctx *pulumi.Context, args *ListConnectedClusterUserCredentialsArgs, opts ...pulumi.InvokeOption) (*ListConnectedClusterUserCredentialsResult, error) {
	var rv ListConnectedClusterUserCredentialsResult
	err := ctx.Invoke("azure-native:kubernetes:listConnectedClusterUserCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListConnectedClusterUserCredentialsArgs struct {
	// The mode of client authentication.
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// Boolean value to indicate whether the request is for client side proxy or not
	ClientProxy bool `pulumi:"clientProxy"`
	// The name of the Kubernetes cluster on which get is called.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The list of credential result response.
type ListConnectedClusterUserCredentialsResult struct {
	// Contains the REP (rendezvous endpoint) and “Sender” access token.
	HybridConnectionConfig HybridConnectionConfigResponse `pulumi:"hybridConnectionConfig"`
	// Base64-encoded Kubernetes configuration file.
	Kubeconfigs []CredentialResultResponse `pulumi:"kubeconfigs"`
}

func ListConnectedClusterUserCredentialsOutput(ctx *pulumi.Context, args ListConnectedClusterUserCredentialsOutputArgs, opts ...pulumi.InvokeOption) ListConnectedClusterUserCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListConnectedClusterUserCredentialsResult, error) {
			args := v.(ListConnectedClusterUserCredentialsArgs)
			r, err := ListConnectedClusterUserCredentials(ctx, &args, opts...)
			var s ListConnectedClusterUserCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListConnectedClusterUserCredentialsResultOutput)
}

type ListConnectedClusterUserCredentialsOutputArgs struct {
	// The mode of client authentication.
	AuthenticationMethod pulumi.StringInput `pulumi:"authenticationMethod"`
	// Boolean value to indicate whether the request is for client side proxy or not
	ClientProxy pulumi.BoolInput `pulumi:"clientProxy"`
	// The name of the Kubernetes cluster on which get is called.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (ListConnectedClusterUserCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListConnectedClusterUserCredentialsArgs)(nil)).Elem()
}

// The list of credential result response.
type ListConnectedClusterUserCredentialsResultOutput struct{ *pulumi.OutputState }

func (ListConnectedClusterUserCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListConnectedClusterUserCredentialsResult)(nil)).Elem()
}

func (o ListConnectedClusterUserCredentialsResultOutput) ToListConnectedClusterUserCredentialsResultOutput() ListConnectedClusterUserCredentialsResultOutput {
	return o
}

func (o ListConnectedClusterUserCredentialsResultOutput) ToListConnectedClusterUserCredentialsResultOutputWithContext(ctx context.Context) ListConnectedClusterUserCredentialsResultOutput {
	return o
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
func (o ListConnectedClusterUserCredentialsResultOutput) HybridConnectionConfig() HybridConnectionConfigResponseOutput {
	return o.ApplyT(func(v ListConnectedClusterUserCredentialsResult) HybridConnectionConfigResponse {
		return v.HybridConnectionConfig
	}).(HybridConnectionConfigResponseOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o ListConnectedClusterUserCredentialsResultOutput) Kubeconfigs() CredentialResultResponseArrayOutput {
	return o.ApplyT(func(v ListConnectedClusterUserCredentialsResult) []CredentialResultResponse { return v.Kubeconfigs }).(CredentialResultResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListConnectedClusterUserCredentialsResultOutput{})
}
