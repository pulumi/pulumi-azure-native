// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Authentication token value.
type AuthenticationDetailsInvokeValue struct {
	// Authentication token.
	Token *string `pulumi:"token"`
}

// AuthenticationDetailsInvokeValueInput is an input type that accepts AuthenticationDetailsInvokeValueArgs and AuthenticationDetailsInvokeValueOutput values.
// You can construct a concrete instance of `AuthenticationDetailsInvokeValueInput` via:
//
//          AuthenticationDetailsInvokeValueArgs{...}
type AuthenticationDetailsInvokeValueInput interface {
	pulumi.Input

	ToAuthenticationDetailsInvokeValueOutput() AuthenticationDetailsInvokeValueOutput
	ToAuthenticationDetailsInvokeValueOutputWithContext(context.Context) AuthenticationDetailsInvokeValueOutput
}

// Authentication token value.
type AuthenticationDetailsInvokeValueArgs struct {
	// Authentication token.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (AuthenticationDetailsInvokeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationDetailsInvokeValue)(nil)).Elem()
}

func (i AuthenticationDetailsInvokeValueArgs) ToAuthenticationDetailsInvokeValueOutput() AuthenticationDetailsInvokeValueOutput {
	return i.ToAuthenticationDetailsInvokeValueOutputWithContext(context.Background())
}

func (i AuthenticationDetailsInvokeValueArgs) ToAuthenticationDetailsInvokeValueOutputWithContext(ctx context.Context) AuthenticationDetailsInvokeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationDetailsInvokeValueOutput)
}

// Authentication token value.
type AuthenticationDetailsInvokeValueOutput struct{ *pulumi.OutputState }

func (AuthenticationDetailsInvokeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationDetailsInvokeValue)(nil)).Elem()
}

func (o AuthenticationDetailsInvokeValueOutput) ToAuthenticationDetailsInvokeValueOutput() AuthenticationDetailsInvokeValueOutput {
	return o
}

func (o AuthenticationDetailsInvokeValueOutput) ToAuthenticationDetailsInvokeValueOutputWithContext(ctx context.Context) AuthenticationDetailsInvokeValueOutput {
	return o
}

// Authentication token.
func (o AuthenticationDetailsInvokeValueOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationDetailsInvokeValue) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfile struct {
	// The client app id configured on target K8 cluster
	ClientAppId string `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId string `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId string `pulumi:"tenantId"`
}

// ConnectedClusterAADProfileInput is an input type that accepts ConnectedClusterAADProfileArgs and ConnectedClusterAADProfileOutput values.
// You can construct a concrete instance of `ConnectedClusterAADProfileInput` via:
//
//          ConnectedClusterAADProfileArgs{...}
type ConnectedClusterAADProfileInput interface {
	pulumi.Input

	ToConnectedClusterAADProfileOutput() ConnectedClusterAADProfileOutput
	ToConnectedClusterAADProfileOutputWithContext(context.Context) ConnectedClusterAADProfileOutput
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileArgs struct {
	// The client app id configured on target K8 cluster
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ConnectedClusterAADProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfile)(nil)).Elem()
}

func (i ConnectedClusterAADProfileArgs) ToConnectedClusterAADProfileOutput() ConnectedClusterAADProfileOutput {
	return i.ToConnectedClusterAADProfileOutputWithContext(context.Background())
}

func (i ConnectedClusterAADProfileArgs) ToConnectedClusterAADProfileOutputWithContext(ctx context.Context) ConnectedClusterAADProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileOutput)
}

func (i ConnectedClusterAADProfileArgs) ToConnectedClusterAADProfilePtrOutput() ConnectedClusterAADProfilePtrOutput {
	return i.ToConnectedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i ConnectedClusterAADProfileArgs) ToConnectedClusterAADProfilePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileOutput).ToConnectedClusterAADProfilePtrOutputWithContext(ctx)
}

// ConnectedClusterAADProfilePtrInput is an input type that accepts ConnectedClusterAADProfileArgs, ConnectedClusterAADProfilePtr and ConnectedClusterAADProfilePtrOutput values.
// You can construct a concrete instance of `ConnectedClusterAADProfilePtrInput` via:
//
//          ConnectedClusterAADProfileArgs{...}
//
//  or:
//
//          nil
type ConnectedClusterAADProfilePtrInput interface {
	pulumi.Input

	ToConnectedClusterAADProfilePtrOutput() ConnectedClusterAADProfilePtrOutput
	ToConnectedClusterAADProfilePtrOutputWithContext(context.Context) ConnectedClusterAADProfilePtrOutput
}

type connectedClusterAADProfilePtrType ConnectedClusterAADProfileArgs

func ConnectedClusterAADProfilePtr(v *ConnectedClusterAADProfileArgs) ConnectedClusterAADProfilePtrInput {
	return (*connectedClusterAADProfilePtrType)(v)
}

func (*connectedClusterAADProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterAADProfile)(nil)).Elem()
}

func (i *connectedClusterAADProfilePtrType) ToConnectedClusterAADProfilePtrOutput() ConnectedClusterAADProfilePtrOutput {
	return i.ToConnectedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i *connectedClusterAADProfilePtrType) ToConnectedClusterAADProfilePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfilePtrOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileOutput struct{ *pulumi.OutputState }

func (ConnectedClusterAADProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfile)(nil)).Elem()
}

func (o ConnectedClusterAADProfileOutput) ToConnectedClusterAADProfileOutput() ConnectedClusterAADProfileOutput {
	return o
}

func (o ConnectedClusterAADProfileOutput) ToConnectedClusterAADProfileOutputWithContext(ctx context.Context) ConnectedClusterAADProfileOutput {
	return o
}

func (o ConnectedClusterAADProfileOutput) ToConnectedClusterAADProfilePtrOutput() ConnectedClusterAADProfilePtrOutput {
	return o.ToConnectedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (o ConnectedClusterAADProfileOutput) ToConnectedClusterAADProfilePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfilePtrOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfile) *ConnectedClusterAADProfile {
		return &v
	}).(ConnectedClusterAADProfilePtrOutput)
}

// The client app id configured on target K8 cluster
func (o ConnectedClusterAADProfileOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfile) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// The server app id to access AD server
func (o ConnectedClusterAADProfileOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfile) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The aad tenant id which is configured on target K8s cluster
func (o ConnectedClusterAADProfileOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfile) string { return v.TenantId }).(pulumi.StringOutput)
}

type ConnectedClusterAADProfilePtrOutput struct{ *pulumi.OutputState }

func (ConnectedClusterAADProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterAADProfile)(nil)).Elem()
}

func (o ConnectedClusterAADProfilePtrOutput) ToConnectedClusterAADProfilePtrOutput() ConnectedClusterAADProfilePtrOutput {
	return o
}

func (o ConnectedClusterAADProfilePtrOutput) ToConnectedClusterAADProfilePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfilePtrOutput {
	return o
}

func (o ConnectedClusterAADProfilePtrOutput) Elem() ConnectedClusterAADProfileOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfile) ConnectedClusterAADProfile { return *v }).(ConnectedClusterAADProfileOutput)
}

// The client app id configured on target K8 cluster
func (o ConnectedClusterAADProfilePtrOutput) ClientAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientAppId
	}).(pulumi.StringPtrOutput)
}

// The server app id to access AD server
func (o ConnectedClusterAADProfilePtrOutput) ServerAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppId
	}).(pulumi.StringPtrOutput)
}

// The aad tenant id which is configured on target K8s cluster
func (o ConnectedClusterAADProfilePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileInvokeResponse struct {
	// The client app id configured on target K8 cluster
	ClientAppId string `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId string `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId string `pulumi:"tenantId"`
}

// ConnectedClusterAADProfileInvokeResponseInput is an input type that accepts ConnectedClusterAADProfileInvokeResponseArgs and ConnectedClusterAADProfileInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectedClusterAADProfileInvokeResponseInput` via:
//
//          ConnectedClusterAADProfileInvokeResponseArgs{...}
type ConnectedClusterAADProfileInvokeResponseInput interface {
	pulumi.Input

	ToConnectedClusterAADProfileInvokeResponseOutput() ConnectedClusterAADProfileInvokeResponseOutput
	ToConnectedClusterAADProfileInvokeResponseOutputWithContext(context.Context) ConnectedClusterAADProfileInvokeResponseOutput
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileInvokeResponseArgs struct {
	// The client app id configured on target K8 cluster
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ConnectedClusterAADProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfileInvokeResponse)(nil)).Elem()
}

func (i ConnectedClusterAADProfileInvokeResponseArgs) ToConnectedClusterAADProfileInvokeResponseOutput() ConnectedClusterAADProfileInvokeResponseOutput {
	return i.ToConnectedClusterAADProfileInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectedClusterAADProfileInvokeResponseArgs) ToConnectedClusterAADProfileInvokeResponseOutputWithContext(ctx context.Context) ConnectedClusterAADProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileInvokeResponseOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectedClusterAADProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfileInvokeResponse)(nil)).Elem()
}

func (o ConnectedClusterAADProfileInvokeResponseOutput) ToConnectedClusterAADProfileInvokeResponseOutput() ConnectedClusterAADProfileInvokeResponseOutput {
	return o
}

func (o ConnectedClusterAADProfileInvokeResponseOutput) ToConnectedClusterAADProfileInvokeResponseOutputWithContext(ctx context.Context) ConnectedClusterAADProfileInvokeResponseOutput {
	return o
}

// The client app id configured on target K8 cluster
func (o ConnectedClusterAADProfileInvokeResponseOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileInvokeResponse) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// The server app id to access AD server
func (o ConnectedClusterAADProfileInvokeResponseOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileInvokeResponse) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The aad tenant id which is configured on target K8s cluster
func (o ConnectedClusterAADProfileInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileResponse struct {
	// The client app id configured on target K8 cluster
	ClientAppId string `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId string `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId string `pulumi:"tenantId"`
}

// ConnectedClusterAADProfileResponseInput is an input type that accepts ConnectedClusterAADProfileResponseArgs and ConnectedClusterAADProfileResponseOutput values.
// You can construct a concrete instance of `ConnectedClusterAADProfileResponseInput` via:
//
//          ConnectedClusterAADProfileResponseArgs{...}
type ConnectedClusterAADProfileResponseInput interface {
	pulumi.Input

	ToConnectedClusterAADProfileResponseOutput() ConnectedClusterAADProfileResponseOutput
	ToConnectedClusterAADProfileResponseOutputWithContext(context.Context) ConnectedClusterAADProfileResponseOutput
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileResponseArgs struct {
	// The client app id configured on target K8 cluster
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// The server app id to access AD server
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The aad tenant id which is configured on target K8s cluster
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ConnectedClusterAADProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfileResponse)(nil)).Elem()
}

func (i ConnectedClusterAADProfileResponseArgs) ToConnectedClusterAADProfileResponseOutput() ConnectedClusterAADProfileResponseOutput {
	return i.ToConnectedClusterAADProfileResponseOutputWithContext(context.Background())
}

func (i ConnectedClusterAADProfileResponseArgs) ToConnectedClusterAADProfileResponseOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileResponseOutput)
}

func (i ConnectedClusterAADProfileResponseArgs) ToConnectedClusterAADProfileResponsePtrOutput() ConnectedClusterAADProfileResponsePtrOutput {
	return i.ToConnectedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i ConnectedClusterAADProfileResponseArgs) ToConnectedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileResponseOutput).ToConnectedClusterAADProfileResponsePtrOutputWithContext(ctx)
}

// ConnectedClusterAADProfileResponsePtrInput is an input type that accepts ConnectedClusterAADProfileResponseArgs, ConnectedClusterAADProfileResponsePtr and ConnectedClusterAADProfileResponsePtrOutput values.
// You can construct a concrete instance of `ConnectedClusterAADProfileResponsePtrInput` via:
//
//          ConnectedClusterAADProfileResponseArgs{...}
//
//  or:
//
//          nil
type ConnectedClusterAADProfileResponsePtrInput interface {
	pulumi.Input

	ToConnectedClusterAADProfileResponsePtrOutput() ConnectedClusterAADProfileResponsePtrOutput
	ToConnectedClusterAADProfileResponsePtrOutputWithContext(context.Context) ConnectedClusterAADProfileResponsePtrOutput
}

type connectedClusterAADProfileResponsePtrType ConnectedClusterAADProfileResponseArgs

func ConnectedClusterAADProfileResponsePtr(v *ConnectedClusterAADProfileResponseArgs) ConnectedClusterAADProfileResponsePtrInput {
	return (*connectedClusterAADProfileResponsePtrType)(v)
}

func (*connectedClusterAADProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterAADProfileResponse)(nil)).Elem()
}

func (i *connectedClusterAADProfileResponsePtrType) ToConnectedClusterAADProfileResponsePtrOutput() ConnectedClusterAADProfileResponsePtrOutput {
	return i.ToConnectedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (i *connectedClusterAADProfileResponsePtrType) ToConnectedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterAADProfileResponsePtrOutput)
}

// AAD profile of the connected cluster
type ConnectedClusterAADProfileResponseOutput struct{ *pulumi.OutputState }

func (ConnectedClusterAADProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterAADProfileResponse)(nil)).Elem()
}

func (o ConnectedClusterAADProfileResponseOutput) ToConnectedClusterAADProfileResponseOutput() ConnectedClusterAADProfileResponseOutput {
	return o
}

func (o ConnectedClusterAADProfileResponseOutput) ToConnectedClusterAADProfileResponseOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponseOutput {
	return o
}

func (o ConnectedClusterAADProfileResponseOutput) ToConnectedClusterAADProfileResponsePtrOutput() ConnectedClusterAADProfileResponsePtrOutput {
	return o.ToConnectedClusterAADProfileResponsePtrOutputWithContext(context.Background())
}

func (o ConnectedClusterAADProfileResponseOutput) ToConnectedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileResponse) *ConnectedClusterAADProfileResponse {
		return &v
	}).(ConnectedClusterAADProfileResponsePtrOutput)
}

// The client app id configured on target K8 cluster
func (o ConnectedClusterAADProfileResponseOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileResponse) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// The server app id to access AD server
func (o ConnectedClusterAADProfileResponseOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileResponse) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The aad tenant id which is configured on target K8s cluster
func (o ConnectedClusterAADProfileResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterAADProfileResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type ConnectedClusterAADProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectedClusterAADProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterAADProfileResponse)(nil)).Elem()
}

func (o ConnectedClusterAADProfileResponsePtrOutput) ToConnectedClusterAADProfileResponsePtrOutput() ConnectedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ConnectedClusterAADProfileResponsePtrOutput) ToConnectedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ConnectedClusterAADProfileResponsePtrOutput) Elem() ConnectedClusterAADProfileResponseOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfileResponse) ConnectedClusterAADProfileResponse { return *v }).(ConnectedClusterAADProfileResponseOutput)
}

// The client app id configured on target K8 cluster
func (o ConnectedClusterAADProfileResponsePtrOutput) ClientAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientAppId
	}).(pulumi.StringPtrOutput)
}

// The server app id to access AD server
func (o ConnectedClusterAADProfileResponsePtrOutput) ServerAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppId
	}).(pulumi.StringPtrOutput)
}

// The aad tenant id which is configured on target K8s cluster
func (o ConnectedClusterAADProfileResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentity struct {
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type string `pulumi:"type"`
}

// ConnectedClusterIdentityInput is an input type that accepts ConnectedClusterIdentityArgs and ConnectedClusterIdentityOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityInput` via:
//
//          ConnectedClusterIdentityArgs{...}
type ConnectedClusterIdentityInput interface {
	pulumi.Input

	ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput
	ToConnectedClusterIdentityOutputWithContext(context.Context) ConnectedClusterIdentityOutput
}

// Identity for the connected cluster.
type ConnectedClusterIdentityArgs struct {
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type ResourceIdentityType `pulumi:"type"`
}

func (ConnectedClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentity)(nil)).Elem()
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput {
	return i.ToConnectedClusterIdentityOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityOutputWithContext(ctx context.Context) ConnectedClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityOutput)
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityPtrOutput() ConnectedClusterIdentityPtrOutput {
	return i.ToConnectedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityArgs) ToConnectedClusterIdentityPtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityOutput).ToConnectedClusterIdentityPtrOutputWithContext(ctx)
}

// ConnectedClusterIdentityPtrInput is an input type that accepts ConnectedClusterIdentityArgs, ConnectedClusterIdentityPtr and ConnectedClusterIdentityPtrOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityPtrInput` via:
//
//          ConnectedClusterIdentityArgs{...}
//
//  or:
//
//          nil
type ConnectedClusterIdentityPtrInput interface {
	pulumi.Input

	ToConnectedClusterIdentityPtrOutput() ConnectedClusterIdentityPtrOutput
	ToConnectedClusterIdentityPtrOutputWithContext(context.Context) ConnectedClusterIdentityPtrOutput
}

type connectedClusterIdentityPtrType ConnectedClusterIdentityArgs

func ConnectedClusterIdentityPtr(v *ConnectedClusterIdentityArgs) ConnectedClusterIdentityPtrInput {
	return (*connectedClusterIdentityPtrType)(v)
}

func (*connectedClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterIdentity)(nil)).Elem()
}

func (i *connectedClusterIdentityPtrType) ToConnectedClusterIdentityPtrOutput() ConnectedClusterIdentityPtrOutput {
	return i.ToConnectedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *connectedClusterIdentityPtrType) ToConnectedClusterIdentityPtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityPtrOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentity)(nil)).Elem()
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityOutput() ConnectedClusterIdentityOutput {
	return o
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityOutputWithContext(ctx context.Context) ConnectedClusterIdentityOutput {
	return o
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityPtrOutput() ConnectedClusterIdentityPtrOutput {
	return o.ToConnectedClusterIdentityPtrOutputWithContext(context.Background())
}

func (o ConnectedClusterIdentityOutput) ToConnectedClusterIdentityPtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityPtrOutput {
	return o.ApplyT(func(v ConnectedClusterIdentity) *ConnectedClusterIdentity {
		return &v
	}).(ConnectedClusterIdentityPtrOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectedClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterIdentity)(nil)).Elem()
}

func (o ConnectedClusterIdentityPtrOutput) ToConnectedClusterIdentityPtrOutput() ConnectedClusterIdentityPtrOutput {
	return o
}

func (o ConnectedClusterIdentityPtrOutput) ToConnectedClusterIdentityPtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityPtrOutput {
	return o
}

func (o ConnectedClusterIdentityPtrOutput) Elem() ConnectedClusterIdentityOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentity) ConnectedClusterIdentity { return *v }).(ConnectedClusterIdentityOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityInvokeResponse struct {
	// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type string `pulumi:"type"`
}

// ConnectedClusterIdentityInvokeResponseInput is an input type that accepts ConnectedClusterIdentityInvokeResponseArgs and ConnectedClusterIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityInvokeResponseInput` via:
//
//          ConnectedClusterIdentityInvokeResponseArgs{...}
type ConnectedClusterIdentityInvokeResponseInput interface {
	pulumi.Input

	ToConnectedClusterIdentityInvokeResponseOutput() ConnectedClusterIdentityInvokeResponseOutput
	ToConnectedClusterIdentityInvokeResponseOutputWithContext(context.Context) ConnectedClusterIdentityInvokeResponseOutput
}

// Identity for the connected cluster.
type ConnectedClusterIdentityInvokeResponseArgs struct {
	// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectedClusterIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentityInvokeResponse)(nil)).Elem()
}

func (i ConnectedClusterIdentityInvokeResponseArgs) ToConnectedClusterIdentityInvokeResponseOutput() ConnectedClusterIdentityInvokeResponseOutput {
	return i.ToConnectedClusterIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityInvokeResponseArgs) ToConnectedClusterIdentityInvokeResponseOutputWithContext(ctx context.Context) ConnectedClusterIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityInvokeResponseOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentityInvokeResponse)(nil)).Elem()
}

func (o ConnectedClusterIdentityInvokeResponseOutput) ToConnectedClusterIdentityInvokeResponseOutput() ConnectedClusterIdentityInvokeResponseOutput {
	return o
}

func (o ConnectedClusterIdentityInvokeResponseOutput) ToConnectedClusterIdentityInvokeResponseOutputWithContext(ctx context.Context) ConnectedClusterIdentityInvokeResponseOutput {
	return o
}

// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityResponse struct {
	// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type string `pulumi:"type"`
}

// ConnectedClusterIdentityResponseInput is an input type that accepts ConnectedClusterIdentityResponseArgs and ConnectedClusterIdentityResponseOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityResponseInput` via:
//
//          ConnectedClusterIdentityResponseArgs{...}
type ConnectedClusterIdentityResponseInput interface {
	pulumi.Input

	ToConnectedClusterIdentityResponseOutput() ConnectedClusterIdentityResponseOutput
	ToConnectedClusterIdentityResponseOutputWithContext(context.Context) ConnectedClusterIdentityResponseOutput
}

// Identity for the connected cluster.
type ConnectedClusterIdentityResponseArgs struct {
	// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectedClusterIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentityResponse)(nil)).Elem()
}

func (i ConnectedClusterIdentityResponseArgs) ToConnectedClusterIdentityResponseOutput() ConnectedClusterIdentityResponseOutput {
	return i.ToConnectedClusterIdentityResponseOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityResponseArgs) ToConnectedClusterIdentityResponseOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityResponseOutput)
}

func (i ConnectedClusterIdentityResponseArgs) ToConnectedClusterIdentityResponsePtrOutput() ConnectedClusterIdentityResponsePtrOutput {
	return i.ToConnectedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ConnectedClusterIdentityResponseArgs) ToConnectedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityResponseOutput).ToConnectedClusterIdentityResponsePtrOutputWithContext(ctx)
}

// ConnectedClusterIdentityResponsePtrInput is an input type that accepts ConnectedClusterIdentityResponseArgs, ConnectedClusterIdentityResponsePtr and ConnectedClusterIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ConnectedClusterIdentityResponsePtrInput` via:
//
//          ConnectedClusterIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ConnectedClusterIdentityResponsePtrInput interface {
	pulumi.Input

	ToConnectedClusterIdentityResponsePtrOutput() ConnectedClusterIdentityResponsePtrOutput
	ToConnectedClusterIdentityResponsePtrOutputWithContext(context.Context) ConnectedClusterIdentityResponsePtrOutput
}

type connectedClusterIdentityResponsePtrType ConnectedClusterIdentityResponseArgs

func ConnectedClusterIdentityResponsePtr(v *ConnectedClusterIdentityResponseArgs) ConnectedClusterIdentityResponsePtrInput {
	return (*connectedClusterIdentityResponsePtrType)(v)
}

func (*connectedClusterIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterIdentityResponse)(nil)).Elem()
}

func (i *connectedClusterIdentityResponsePtrType) ToConnectedClusterIdentityResponsePtrOutput() ConnectedClusterIdentityResponsePtrOutput {
	return i.ToConnectedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *connectedClusterIdentityResponsePtrType) ToConnectedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedClusterIdentityResponsePtrOutput)
}

// Identity for the connected cluster.
type ConnectedClusterIdentityResponseOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedClusterIdentityResponse)(nil)).Elem()
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponseOutput() ConnectedClusterIdentityResponseOutput {
	return o
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponseOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponseOutput {
	return o
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponsePtrOutput() ConnectedClusterIdentityResponsePtrOutput {
	return o.ToConnectedClusterIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ConnectedClusterIdentityResponseOutput) ToConnectedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) *ConnectedClusterIdentityResponse {
		return &v
	}).(ConnectedClusterIdentityResponsePtrOutput)
}

// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedClusterIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectedClusterIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectedClusterIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectedClusterIdentityResponse)(nil)).Elem()
}

func (o ConnectedClusterIdentityResponsePtrOutput) ToConnectedClusterIdentityResponsePtrOutput() ConnectedClusterIdentityResponsePtrOutput {
	return o
}

func (o ConnectedClusterIdentityResponsePtrOutput) ToConnectedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ConnectedClusterIdentityResponsePtrOutput {
	return o
}

func (o ConnectedClusterIdentityResponsePtrOutput) Elem() ConnectedClusterIdentityResponseOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentityResponse) ConnectedClusterIdentityResponse { return *v }).(ConnectedClusterIdentityResponseOutput)
}

// The principal id of connected cluster identity. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity.
func (o ConnectedClusterIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the connected cluster. The type 'SystemAssigned, includes a system created identity. The type 'None' means no identity is assigned to the connected cluster.
func (o ConnectedClusterIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The credential result response.
type CredentialResultInvokeResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// CredentialResultInvokeResponseInput is an input type that accepts CredentialResultInvokeResponseArgs and CredentialResultInvokeResponseOutput values.
// You can construct a concrete instance of `CredentialResultInvokeResponseInput` via:
//
//          CredentialResultInvokeResponseArgs{...}
type CredentialResultInvokeResponseInput interface {
	pulumi.Input

	ToCredentialResultInvokeResponseOutput() CredentialResultInvokeResponseOutput
	ToCredentialResultInvokeResponseOutputWithContext(context.Context) CredentialResultInvokeResponseOutput
}

// The credential result response.
type CredentialResultInvokeResponseArgs struct {
	// The name of the credential.
	Name pulumi.StringInput `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CredentialResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultInvokeResponse)(nil)).Elem()
}

func (i CredentialResultInvokeResponseArgs) ToCredentialResultInvokeResponseOutput() CredentialResultInvokeResponseOutput {
	return i.ToCredentialResultInvokeResponseOutputWithContext(context.Background())
}

func (i CredentialResultInvokeResponseArgs) ToCredentialResultInvokeResponseOutputWithContext(ctx context.Context) CredentialResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultInvokeResponseOutput)
}

// CredentialResultInvokeResponseArrayInput is an input type that accepts CredentialResultInvokeResponseArray and CredentialResultInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CredentialResultInvokeResponseArrayInput` via:
//
//          CredentialResultInvokeResponseArray{ CredentialResultInvokeResponseArgs{...} }
type CredentialResultInvokeResponseArrayInput interface {
	pulumi.Input

	ToCredentialResultInvokeResponseArrayOutput() CredentialResultInvokeResponseArrayOutput
	ToCredentialResultInvokeResponseArrayOutputWithContext(context.Context) CredentialResultInvokeResponseArrayOutput
}

type CredentialResultInvokeResponseArray []CredentialResultInvokeResponseInput

func (CredentialResultInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultInvokeResponse)(nil)).Elem()
}

func (i CredentialResultInvokeResponseArray) ToCredentialResultInvokeResponseArrayOutput() CredentialResultInvokeResponseArrayOutput {
	return i.ToCredentialResultInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CredentialResultInvokeResponseArray) ToCredentialResultInvokeResponseArrayOutputWithContext(ctx context.Context) CredentialResultInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialResultInvokeResponseArrayOutput)
}

// The credential result response.
type CredentialResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultInvokeResponse)(nil)).Elem()
}

func (o CredentialResultInvokeResponseOutput) ToCredentialResultInvokeResponseOutput() CredentialResultInvokeResponseOutput {
	return o
}

func (o CredentialResultInvokeResponseOutput) ToCredentialResultInvokeResponseOutputWithContext(ctx context.Context) CredentialResultInvokeResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultInvokeResponse)(nil)).Elem()
}

func (o CredentialResultInvokeResponseArrayOutput) ToCredentialResultInvokeResponseArrayOutput() CredentialResultInvokeResponseArrayOutput {
	return o
}

func (o CredentialResultInvokeResponseArrayOutput) ToCredentialResultInvokeResponseArrayOutputWithContext(ctx context.Context) CredentialResultInvokeResponseArrayOutput {
	return o
}

func (o CredentialResultInvokeResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultInvokeResponse {
		return vs[0].([]CredentialResultInvokeResponse)[vs[1].(int)]
	}).(CredentialResultInvokeResponseOutput)
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
type HybridConnectionConfigInvokeResponse struct {
	// Timestamp when this token will be expired.
	ExpirationTime float64 `pulumi:"expirationTime"`
	// Name of the connection
	HybridConnectionName string `pulumi:"hybridConnectionName"`
	// Name of the relay.
	Relay string `pulumi:"relay"`
	// Sender access token
	Token string `pulumi:"token"`
}

// HybridConnectionConfigInvokeResponseInput is an input type that accepts HybridConnectionConfigInvokeResponseArgs and HybridConnectionConfigInvokeResponseOutput values.
// You can construct a concrete instance of `HybridConnectionConfigInvokeResponseInput` via:
//
//          HybridConnectionConfigInvokeResponseArgs{...}
type HybridConnectionConfigInvokeResponseInput interface {
	pulumi.Input

	ToHybridConnectionConfigInvokeResponseOutput() HybridConnectionConfigInvokeResponseOutput
	ToHybridConnectionConfigInvokeResponseOutputWithContext(context.Context) HybridConnectionConfigInvokeResponseOutput
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
type HybridConnectionConfigInvokeResponseArgs struct {
	// Timestamp when this token will be expired.
	ExpirationTime pulumi.Float64Input `pulumi:"expirationTime"`
	// Name of the connection
	HybridConnectionName pulumi.StringInput `pulumi:"hybridConnectionName"`
	// Name of the relay.
	Relay pulumi.StringInput `pulumi:"relay"`
	// Sender access token
	Token pulumi.StringInput `pulumi:"token"`
}

func (HybridConnectionConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionConfigInvokeResponse)(nil)).Elem()
}

func (i HybridConnectionConfigInvokeResponseArgs) ToHybridConnectionConfigInvokeResponseOutput() HybridConnectionConfigInvokeResponseOutput {
	return i.ToHybridConnectionConfigInvokeResponseOutputWithContext(context.Background())
}

func (i HybridConnectionConfigInvokeResponseArgs) ToHybridConnectionConfigInvokeResponseOutputWithContext(ctx context.Context) HybridConnectionConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridConnectionConfigInvokeResponseOutput)
}

// Contains the REP (rendezvous endpoint) and “Sender” access token.
type HybridConnectionConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (HybridConnectionConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridConnectionConfigInvokeResponse)(nil)).Elem()
}

func (o HybridConnectionConfigInvokeResponseOutput) ToHybridConnectionConfigInvokeResponseOutput() HybridConnectionConfigInvokeResponseOutput {
	return o
}

func (o HybridConnectionConfigInvokeResponseOutput) ToHybridConnectionConfigInvokeResponseOutputWithContext(ctx context.Context) HybridConnectionConfigInvokeResponseOutput {
	return o
}

// Timestamp when this token will be expired.
func (o HybridConnectionConfigInvokeResponseOutput) ExpirationTime() pulumi.Float64Output {
	return o.ApplyT(func(v HybridConnectionConfigInvokeResponse) float64 { return v.ExpirationTime }).(pulumi.Float64Output)
}

// Name of the connection
func (o HybridConnectionConfigInvokeResponseOutput) HybridConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigInvokeResponse) string { return v.HybridConnectionName }).(pulumi.StringOutput)
}

// Name of the relay.
func (o HybridConnectionConfigInvokeResponseOutput) Relay() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigInvokeResponse) string { return v.Relay }).(pulumi.StringOutput)
}

// Sender access token
func (o HybridConnectionConfigInvokeResponseOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v HybridConnectionConfigInvokeResponse) string { return v.Token }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationDetailsInvokeValueOutput{})
	pulumi.RegisterOutputType(ConnectedClusterAADProfileOutput{})
	pulumi.RegisterOutputType(ConnectedClusterAADProfilePtrOutput{})
	pulumi.RegisterOutputType(ConnectedClusterAADProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectedClusterAADProfileResponseOutput{})
	pulumi.RegisterOutputType(ConnectedClusterAADProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityResponseOutput{})
	pulumi.RegisterOutputType(ConnectedClusterIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(HybridConnectionConfigInvokeResponseOutput{})
}
