// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210325preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The description of the service.
type PrivateLinkServicesForMIPPolicySync struct {
	pulumi.CustomResourceState

	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Setting indicating whether the service has a managed identity associated with it.
	Identity ServicesResourceResponseIdentityPtrOutput `pulumi:"identity"`
	// The kind of the service.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The common properties of a service.
	Properties ServicesPropertiesResponseOutput `pulumi:"properties"`
	// Required property for system data
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrivateLinkServicesForMIPPolicySync registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkServicesForMIPPolicySync(ctx *pulumi.Context,
	name string, args *PrivateLinkServicesForMIPPolicySyncArgs, opts ...pulumi.ResourceOption) (*PrivateLinkServicesForMIPPolicySync, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:m365securityandcompliance/v20210325preview:privateLinkServicesForMIPPolicySync"),
		},
		{
			Type: pulumi.String("azure-native:m365securityandcompliance:privateLinkServicesForMIPPolicySync"),
		},
		{
			Type: pulumi.String("azure-nextgen:m365securityandcompliance:privateLinkServicesForMIPPolicySync"),
		},
	})
	opts = append(opts, aliases)
	var resource PrivateLinkServicesForMIPPolicySync
	err := ctx.RegisterResource("azure-native:m365securityandcompliance/v20210325preview:privateLinkServicesForMIPPolicySync", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkServicesForMIPPolicySync gets an existing PrivateLinkServicesForMIPPolicySync resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkServicesForMIPPolicySync(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkServicesForMIPPolicySyncState, opts ...pulumi.ResourceOption) (*PrivateLinkServicesForMIPPolicySync, error) {
	var resource PrivateLinkServicesForMIPPolicySync
	err := ctx.ReadResource("azure-native:m365securityandcompliance/v20210325preview:privateLinkServicesForMIPPolicySync", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkServicesForMIPPolicySync resources.
type privateLinkServicesForMIPPolicySyncState struct {
}

type PrivateLinkServicesForMIPPolicySyncState struct {
}

func (PrivateLinkServicesForMIPPolicySyncState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkServicesForMIPPolicySyncState)(nil)).Elem()
}

type privateLinkServicesForMIPPolicySyncArgs struct {
	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `pulumi:"etag"`
	// Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `pulumi:"identity"`
	// The kind of the service.
	Kind string `pulumi:"kind"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The common properties of a service.
	Properties *ServicesProperties `pulumi:"properties"`
	// The name of the resource group that contains the service instance.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the service instance.
	ResourceName *string `pulumi:"resourceName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PrivateLinkServicesForMIPPolicySync resource.
type PrivateLinkServicesForMIPPolicySyncArgs struct {
	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag pulumi.StringPtrInput
	// Setting indicating whether the service has a managed identity associated with it.
	Identity ServicesResourceIdentityPtrInput
	// The kind of the service.
	Kind Kind
	// The resource location.
	Location pulumi.StringPtrInput
	// The common properties of a service.
	Properties ServicesPropertiesPtrInput
	// The name of the resource group that contains the service instance.
	ResourceGroupName pulumi.StringInput
	// The name of the service instance.
	ResourceName pulumi.StringPtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (PrivateLinkServicesForMIPPolicySyncArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkServicesForMIPPolicySyncArgs)(nil)).Elem()
}

type PrivateLinkServicesForMIPPolicySyncInput interface {
	pulumi.Input

	ToPrivateLinkServicesForMIPPolicySyncOutput() PrivateLinkServicesForMIPPolicySyncOutput
	ToPrivateLinkServicesForMIPPolicySyncOutputWithContext(ctx context.Context) PrivateLinkServicesForMIPPolicySyncOutput
}

func (*PrivateLinkServicesForMIPPolicySync) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicesForMIPPolicySync)(nil))
}

func (i *PrivateLinkServicesForMIPPolicySync) ToPrivateLinkServicesForMIPPolicySyncOutput() PrivateLinkServicesForMIPPolicySyncOutput {
	return i.ToPrivateLinkServicesForMIPPolicySyncOutputWithContext(context.Background())
}

func (i *PrivateLinkServicesForMIPPolicySync) ToPrivateLinkServicesForMIPPolicySyncOutputWithContext(ctx context.Context) PrivateLinkServicesForMIPPolicySyncOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicesForMIPPolicySyncOutput)
}

type PrivateLinkServicesForMIPPolicySyncOutput struct {
	*pulumi.OutputState
}

func (PrivateLinkServicesForMIPPolicySyncOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicesForMIPPolicySync)(nil))
}

func (o PrivateLinkServicesForMIPPolicySyncOutput) ToPrivateLinkServicesForMIPPolicySyncOutput() PrivateLinkServicesForMIPPolicySyncOutput {
	return o
}

func (o PrivateLinkServicesForMIPPolicySyncOutput) ToPrivateLinkServicesForMIPPolicySyncOutputWithContext(ctx context.Context) PrivateLinkServicesForMIPPolicySyncOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PrivateLinkServicesForMIPPolicySyncOutput{})
}
