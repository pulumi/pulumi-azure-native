// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210111

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The description of the service.
type PrivateLinkServicesForM365ComplianceCenter struct {
	pulumi.CustomResourceState

	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Setting indicating whether the service has a managed identity associated with it.
	Identity ServicesResourceResponseIdentityPtrOutput `pulumi:"identity"`
	// The kind of the service.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The common properties of a service.
	Properties ServicesPropertiesResponseOutput `pulumi:"properties"`
	// Required property for system data
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPrivateLinkServicesForM365ComplianceCenter registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkServicesForM365ComplianceCenter(ctx *pulumi.Context,
	name string, args *PrivateLinkServicesForM365ComplianceCenterArgs, opts ...pulumi.ResourceOption) (*PrivateLinkServicesForM365ComplianceCenter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityandcompliance/v20210111:privateLinkServicesForM365ComplianceCenter"),
		},
		{
			Type: pulumi.String("azure-native:securityandcompliance:privateLinkServicesForM365ComplianceCenter"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityandcompliance:privateLinkServicesForM365ComplianceCenter"),
		},
		{
			Type: pulumi.String("azure-native:securityandcompliance/v20210308:privateLinkServicesForM365ComplianceCenter"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityandcompliance/v20210308:privateLinkServicesForM365ComplianceCenter"),
		},
	})
	opts = append(opts, aliases)
	var resource PrivateLinkServicesForM365ComplianceCenter
	err := ctx.RegisterResource("azure-native:securityandcompliance/v20210111:privateLinkServicesForM365ComplianceCenter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkServicesForM365ComplianceCenter gets an existing PrivateLinkServicesForM365ComplianceCenter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkServicesForM365ComplianceCenter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkServicesForM365ComplianceCenterState, opts ...pulumi.ResourceOption) (*PrivateLinkServicesForM365ComplianceCenter, error) {
	var resource PrivateLinkServicesForM365ComplianceCenter
	err := ctx.ReadResource("azure-native:securityandcompliance/v20210111:privateLinkServicesForM365ComplianceCenter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkServicesForM365ComplianceCenter resources.
type privateLinkServicesForM365ComplianceCenterState struct {
}

type PrivateLinkServicesForM365ComplianceCenterState struct {
}

func (PrivateLinkServicesForM365ComplianceCenterState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkServicesForM365ComplianceCenterState)(nil)).Elem()
}

type privateLinkServicesForM365ComplianceCenterArgs struct {
	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag *string `pulumi:"etag"`
	// Setting indicating whether the service has a managed identity associated with it.
	Identity *ServicesResourceIdentity `pulumi:"identity"`
	// The kind of the service.
	Kind string `pulumi:"kind"`
	// The resource location.
	Location *string `pulumi:"location"`
	// The common properties of a service.
	Properties *ServicesProperties `pulumi:"properties"`
	// The name of the resource group that contains the service instance.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the service instance.
	ResourceName *string `pulumi:"resourceName"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PrivateLinkServicesForM365ComplianceCenter resource.
type PrivateLinkServicesForM365ComplianceCenterArgs struct {
	// An etag associated with the resource, used for optimistic concurrency when editing it.
	Etag pulumi.StringPtrInput
	// Setting indicating whether the service has a managed identity associated with it.
	Identity ServicesResourceIdentityPtrInput
	// The kind of the service.
	Kind Kind
	// The resource location.
	Location pulumi.StringPtrInput
	// The common properties of a service.
	Properties ServicesPropertiesPtrInput
	// The name of the resource group that contains the service instance.
	ResourceGroupName pulumi.StringInput
	// The name of the service instance.
	ResourceName pulumi.StringPtrInput
	// The resource tags.
	Tags pulumi.StringMapInput
}

func (PrivateLinkServicesForM365ComplianceCenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkServicesForM365ComplianceCenterArgs)(nil)).Elem()
}

type PrivateLinkServicesForM365ComplianceCenterInput interface {
	pulumi.Input

	ToPrivateLinkServicesForM365ComplianceCenterOutput() PrivateLinkServicesForM365ComplianceCenterOutput
	ToPrivateLinkServicesForM365ComplianceCenterOutputWithContext(ctx context.Context) PrivateLinkServicesForM365ComplianceCenterOutput
}

func (*PrivateLinkServicesForM365ComplianceCenter) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicesForM365ComplianceCenter)(nil))
}

func (i *PrivateLinkServicesForM365ComplianceCenter) ToPrivateLinkServicesForM365ComplianceCenterOutput() PrivateLinkServicesForM365ComplianceCenterOutput {
	return i.ToPrivateLinkServicesForM365ComplianceCenterOutputWithContext(context.Background())
}

func (i *PrivateLinkServicesForM365ComplianceCenter) ToPrivateLinkServicesForM365ComplianceCenterOutputWithContext(ctx context.Context) PrivateLinkServicesForM365ComplianceCenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicesForM365ComplianceCenterOutput)
}

type PrivateLinkServicesForM365ComplianceCenterOutput struct {
	*pulumi.OutputState
}

func (PrivateLinkServicesForM365ComplianceCenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicesForM365ComplianceCenter)(nil))
}

func (o PrivateLinkServicesForM365ComplianceCenterOutput) ToPrivateLinkServicesForM365ComplianceCenterOutput() PrivateLinkServicesForM365ComplianceCenterOutput {
	return o
}

func (o PrivateLinkServicesForM365ComplianceCenterOutput) ToPrivateLinkServicesForM365ComplianceCenterOutputWithContext(ctx context.Context) PrivateLinkServicesForM365ComplianceCenterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PrivateLinkServicesForM365ComplianceCenterOutput{})
}
