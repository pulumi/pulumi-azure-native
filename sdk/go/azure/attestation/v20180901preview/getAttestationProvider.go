// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Attestation service response message.
//
// Deprecated: Version 2018-09-01-preview will be removed in v2 of the provider.
func LookupAttestationProvider(ctx *pulumi.Context, args *LookupAttestationProviderArgs, opts ...pulumi.InvokeOption) (*LookupAttestationProviderResult, error) {
	var rv LookupAttestationProviderResult
	err := ctx.Invoke("azure-native:attestation/v20180901preview:getAttestationProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAttestationProviderArgs struct {
	// Name of the attestation service instance
	ProviderName string `pulumi:"providerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Attestation service response message.
type LookupAttestationProviderResult struct {
	// Gets the uri of attestation service
	AttestUri *string `pulumi:"attestUri"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Status of attestation service.
	Status *string `pulumi:"status"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Trust model for the attestation service instance.
	TrustModel *string `pulumi:"trustModel"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAttestationProviderOutput(ctx *pulumi.Context, args LookupAttestationProviderOutputArgs, opts ...pulumi.InvokeOption) LookupAttestationProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAttestationProviderResult, error) {
			args := v.(LookupAttestationProviderArgs)
			r, err := LookupAttestationProvider(ctx, &args, opts...)
			var s LookupAttestationProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAttestationProviderResultOutput)
}

type LookupAttestationProviderOutputArgs struct {
	// Name of the attestation service instance
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAttestationProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttestationProviderArgs)(nil)).Elem()
}

// Attestation service response message.
type LookupAttestationProviderResultOutput struct{ *pulumi.OutputState }

func (LookupAttestationProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttestationProviderResult)(nil)).Elem()
}

func (o LookupAttestationProviderResultOutput) ToLookupAttestationProviderResultOutput() LookupAttestationProviderResultOutput {
	return o
}

func (o LookupAttestationProviderResultOutput) ToLookupAttestationProviderResultOutputWithContext(ctx context.Context) LookupAttestationProviderResultOutput {
	return o
}

// Gets the uri of attestation service
func (o LookupAttestationProviderResultOutput) AttestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) *string { return v.AttestUri }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAttestationProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAttestationProviderResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAttestationProviderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) string { return v.Name }).(pulumi.StringOutput)
}

// Status of attestation service.
func (o LookupAttestationProviderResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LookupAttestationProviderResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Trust model for the attestation service instance.
func (o LookupAttestationProviderResultOutput) TrustModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) *string { return v.TrustModel }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAttestationProviderResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttestationProviderResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAttestationProviderResultOutput{})
}
