// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201216preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A favorite process identifier.
//
// Deprecated: Version 2020-12-16-preview will be removed in v2 of the provider.
type FavoriteProcess struct {
	pulumi.CustomResourceState

	// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
	ActualProcessName pulumi.StringOutput `pulumi:"actualProcessName"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The system metadata relating to this resource
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFavoriteProcess registers a new resource with the given unique name, arguments, and options.
func NewFavoriteProcess(ctx *pulumi.Context,
	name string, args *FavoriteProcessArgs, opts ...pulumi.ResourceOption) (*FavoriteProcess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActualProcessName == nil {
		return nil, errors.New("invalid value for required argument 'ActualProcessName'")
	}
	if args.PackageName == nil {
		return nil, errors.New("invalid value for required argument 'PackageName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TestBaseAccountName == nil {
		return nil, errors.New("invalid value for required argument 'TestBaseAccountName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:testbase:FavoriteProcess"),
		},
		{
			Type: pulumi.String("azure-native:testbase/v20220401preview:FavoriteProcess"),
		},
	})
	opts = append(opts, aliases)
	var resource FavoriteProcess
	err := ctx.RegisterResource("azure-native:testbase/v20201216preview:FavoriteProcess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFavoriteProcess gets an existing FavoriteProcess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFavoriteProcess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FavoriteProcessState, opts ...pulumi.ResourceOption) (*FavoriteProcess, error) {
	var resource FavoriteProcess
	err := ctx.ReadResource("azure-native:testbase/v20201216preview:FavoriteProcess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FavoriteProcess resources.
type favoriteProcessState struct {
}

type FavoriteProcessState struct {
}

func (FavoriteProcessState) ElementType() reflect.Type {
	return reflect.TypeOf((*favoriteProcessState)(nil)).Elem()
}

type favoriteProcessArgs struct {
	// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
	ActualProcessName string `pulumi:"actualProcessName"`
	// The resource name of a favorite process in a package. If the process name contains characters that are not allowed in Azure Resource Name, we use 'actualProcessName' in request body to submit the name.
	FavoriteProcessResourceName *string `pulumi:"favoriteProcessResourceName"`
	// The resource name of the Test Base Package.
	PackageName string `pulumi:"packageName"`
	// The name of the resource group that contains the resource.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
}

// The set of arguments for constructing a FavoriteProcess resource.
type FavoriteProcessArgs struct {
	// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
	ActualProcessName pulumi.StringInput
	// The resource name of a favorite process in a package. If the process name contains characters that are not allowed in Azure Resource Name, we use 'actualProcessName' in request body to submit the name.
	FavoriteProcessResourceName pulumi.StringPtrInput
	// The resource name of the Test Base Package.
	PackageName pulumi.StringInput
	// The name of the resource group that contains the resource.
	ResourceGroupName pulumi.StringInput
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput
}

func (FavoriteProcessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*favoriteProcessArgs)(nil)).Elem()
}

type FavoriteProcessInput interface {
	pulumi.Input

	ToFavoriteProcessOutput() FavoriteProcessOutput
	ToFavoriteProcessOutputWithContext(ctx context.Context) FavoriteProcessOutput
}

func (*FavoriteProcess) ElementType() reflect.Type {
	return reflect.TypeOf((**FavoriteProcess)(nil)).Elem()
}

func (i *FavoriteProcess) ToFavoriteProcessOutput() FavoriteProcessOutput {
	return i.ToFavoriteProcessOutputWithContext(context.Background())
}

func (i *FavoriteProcess) ToFavoriteProcessOutputWithContext(ctx context.Context) FavoriteProcessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FavoriteProcessOutput)
}

type FavoriteProcessOutput struct{ *pulumi.OutputState }

func (FavoriteProcessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FavoriteProcess)(nil)).Elem()
}

func (o FavoriteProcessOutput) ToFavoriteProcessOutput() FavoriteProcessOutput {
	return o
}

func (o FavoriteProcessOutput) ToFavoriteProcessOutputWithContext(ctx context.Context) FavoriteProcessOutput {
	return o
}

// The actual name of the favorite process. It will be equal to resource name except for the scenario that the process name contains characters that are not allowed in the resource name.
func (o FavoriteProcessOutput) ActualProcessName() pulumi.StringOutput {
	return o.ApplyT(func(v *FavoriteProcess) pulumi.StringOutput { return v.ActualProcessName }).(pulumi.StringOutput)
}

// Resource name.
func (o FavoriteProcessOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FavoriteProcess) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The system metadata relating to this resource
func (o FavoriteProcessOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *FavoriteProcess) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o FavoriteProcessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FavoriteProcess) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FavoriteProcessOutput{})
}
