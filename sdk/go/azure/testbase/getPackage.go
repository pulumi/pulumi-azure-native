// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package testbase

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Test Base Package resource.
// API Version: 2020-12-16-preview.
func LookupPackage(ctx *pulumi.Context, args *LookupPackageArgs, opts ...pulumi.InvokeOption) (*LookupPackageResult, error) {
	var rv LookupPackageResult
	err := ctx.Invoke("azure-native:testbase:getPackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPackageArgs struct {
	// The resource name of the Test Base Package.
	PackageName string `pulumi:"packageName"`
	// The name of the resource group that contains the resource.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
}

// The Test Base Package resource.
type LookupPackageResult struct {
	// Application name
	ApplicationName string `pulumi:"applicationName"`
	// The file path of the package.
	BlobPath string `pulumi:"blobPath"`
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// The flighting ring for feature update.
	FlightingRing string `pulumi:"flightingRing"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The UTC timestamp when the package was last modified.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The status of the package.
	PackageStatus string `pulumi:"packageStatus"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The system metadata relating to this resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the target OSs of specific OS Update types.
	TargetOSList []TargetOSInfoResponse `pulumi:"targetOSList"`
	// OOB, functional or both. Mapped to the data in 'tests' property.
	TestTypes []string `pulumi:"testTypes"`
	// The detailed test information.
	Tests []TestResponse `pulumi:"tests"`
	// Resource type.
	Type string `pulumi:"type"`
	// The validation results. There's validation on package when it's created or updated.
	ValidationResults []PackageValidationResultResponse `pulumi:"validationResults"`
	// Application version
	Version string `pulumi:"version"`
}
