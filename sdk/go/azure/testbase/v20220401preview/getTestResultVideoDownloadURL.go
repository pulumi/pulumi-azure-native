// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The response of getting a download URL.
func GetTestResultVideoDownloadURL(ctx *pulumi.Context, args *GetTestResultVideoDownloadURLArgs, opts ...pulumi.InvokeOption) (*GetTestResultVideoDownloadURLResult, error) {
	var rv GetTestResultVideoDownloadURLResult
	err := ctx.Invoke("azure-native:testbase/v20220401preview:getTestResultVideoDownloadURL", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetTestResultVideoDownloadURLArgs struct {
	// The resource name of the Test Base Package.
	PackageName string `pulumi:"packageName"`
	// The name of the resource group that contains the resource.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName string `pulumi:"testBaseAccountName"`
	// The Test Result Name. It equals to TestResult-{TestResultId} string.
	TestResultName string `pulumi:"testResultName"`
}

// The response of getting a download URL.
type GetTestResultVideoDownloadURLResult struct {
	// The download URL.
	DownloadUrl string `pulumi:"downloadUrl"`
	// Expiry date of the download URL.
	ExpirationTime string `pulumi:"expirationTime"`
}

func GetTestResultVideoDownloadURLOutput(ctx *pulumi.Context, args GetTestResultVideoDownloadURLOutputArgs, opts ...pulumi.InvokeOption) GetTestResultVideoDownloadURLResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTestResultVideoDownloadURLResult, error) {
			args := v.(GetTestResultVideoDownloadURLArgs)
			r, err := GetTestResultVideoDownloadURL(ctx, &args, opts...)
			var s GetTestResultVideoDownloadURLResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTestResultVideoDownloadURLResultOutput)
}

type GetTestResultVideoDownloadURLOutputArgs struct {
	// The resource name of the Test Base Package.
	PackageName pulumi.StringInput `pulumi:"packageName"`
	// The name of the resource group that contains the resource.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The resource name of the Test Base Account.
	TestBaseAccountName pulumi.StringInput `pulumi:"testBaseAccountName"`
	// The Test Result Name. It equals to TestResult-{TestResultId} string.
	TestResultName pulumi.StringInput `pulumi:"testResultName"`
}

func (GetTestResultVideoDownloadURLOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestResultVideoDownloadURLArgs)(nil)).Elem()
}

// The response of getting a download URL.
type GetTestResultVideoDownloadURLResultOutput struct{ *pulumi.OutputState }

func (GetTestResultVideoDownloadURLResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestResultVideoDownloadURLResult)(nil)).Elem()
}

func (o GetTestResultVideoDownloadURLResultOutput) ToGetTestResultVideoDownloadURLResultOutput() GetTestResultVideoDownloadURLResultOutput {
	return o
}

func (o GetTestResultVideoDownloadURLResultOutput) ToGetTestResultVideoDownloadURLResultOutputWithContext(ctx context.Context) GetTestResultVideoDownloadURLResultOutput {
	return o
}

// The download URL.
func (o GetTestResultVideoDownloadURLResultOutput) DownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetTestResultVideoDownloadURLResult) string { return v.DownloadUrl }).(pulumi.StringOutput)
}

// Expiry date of the download URL.
func (o GetTestResultVideoDownloadURLResultOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTestResultVideoDownloadURLResult) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTestResultVideoDownloadURLResultOutput{})
}
