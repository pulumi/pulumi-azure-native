// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210101

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An attestation resource.
type AttestationAtResourceGroup struct {
	pulumi.CustomResourceState

	// Comments describing why this attestation was created.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// The compliance state that should be set on the resource.
	ComplianceState pulumi.StringPtrOutput `pulumi:"complianceState"`
	// The evidence supporting the compliance state set in this attestation.
	Evidence AttestationEvidenceResponseArrayOutput `pulumi:"evidence"`
	// The time the compliance state should expire.
	ExpiresOn pulumi.StringPtrOutput `pulumi:"expiresOn"`
	// The time the compliance state was last changed in this attestation.
	LastComplianceStateChangeAt pulumi.StringOutput `pulumi:"lastComplianceStateChangeAt"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
	Owner pulumi.StringPtrOutput `pulumi:"owner"`
	// The resource ID of the policy assignment that the attestation is setting the state for.
	PolicyAssignmentId pulumi.StringOutput `pulumi:"policyAssignmentId"`
	// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
	PolicyDefinitionReferenceId pulumi.StringPtrOutput `pulumi:"policyDefinitionReferenceId"`
	// The status of the attestation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAttestationAtResourceGroup registers a new resource with the given unique name, arguments, and options.
func NewAttestationAtResourceGroup(ctx *pulumi.Context,
	name string, args *AttestationAtResourceGroupArgs, opts ...pulumi.ResourceOption) (*AttestationAtResourceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttestationName == nil {
		return nil, errors.New("invalid value for required argument 'AttestationName'")
	}
	if args.PolicyAssignmentId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyAssignmentId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource AttestationAtResourceGroup
	err := ctx.RegisterResource("azure-nextgen:policyinsights/v20210101:AttestationAtResourceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttestationAtResourceGroup gets an existing AttestationAtResourceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttestationAtResourceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AttestationAtResourceGroupState, opts ...pulumi.ResourceOption) (*AttestationAtResourceGroup, error) {
	var resource AttestationAtResourceGroup
	err := ctx.ReadResource("azure-nextgen:policyinsights/v20210101:AttestationAtResourceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AttestationAtResourceGroup resources.
type attestationAtResourceGroupState struct {
	// Comments describing why this attestation was created.
	Comments *string `pulumi:"comments"`
	// The compliance state that should be set on the resource.
	ComplianceState *string `pulumi:"complianceState"`
	// The evidence supporting the compliance state set in this attestation.
	Evidence []AttestationEvidenceResponse `pulumi:"evidence"`
	// The time the compliance state should expire.
	ExpiresOn *string `pulumi:"expiresOn"`
	// The time the compliance state was last changed in this attestation.
	LastComplianceStateChangeAt *string `pulumi:"lastComplianceStateChangeAt"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
	Owner *string `pulumi:"owner"`
	// The resource ID of the policy assignment that the attestation is setting the state for.
	PolicyAssignmentId *string `pulumi:"policyAssignmentId"`
	// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	// The status of the attestation.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type AttestationAtResourceGroupState struct {
	// Comments describing why this attestation was created.
	Comments pulumi.StringPtrInput
	// The compliance state that should be set on the resource.
	ComplianceState pulumi.StringPtrInput
	// The evidence supporting the compliance state set in this attestation.
	Evidence AttestationEvidenceResponseArrayInput
	// The time the compliance state should expire.
	ExpiresOn pulumi.StringPtrInput
	// The time the compliance state was last changed in this attestation.
	LastComplianceStateChangeAt pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
	Owner pulumi.StringPtrInput
	// The resource ID of the policy assignment that the attestation is setting the state for.
	PolicyAssignmentId pulumi.StringPtrInput
	// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
	PolicyDefinitionReferenceId pulumi.StringPtrInput
	// The status of the attestation.
	ProvisioningState pulumi.StringPtrInput
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponsePtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (AttestationAtResourceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*attestationAtResourceGroupState)(nil)).Elem()
}

type attestationAtResourceGroupArgs struct {
	// The name of the attestation.
	AttestationName string `pulumi:"attestationName"`
	// Comments describing why this attestation was created.
	Comments *string `pulumi:"comments"`
	// The compliance state that should be set on the resource.
	ComplianceState *string `pulumi:"complianceState"`
	// The evidence supporting the compliance state set in this attestation.
	Evidence []AttestationEvidence `pulumi:"evidence"`
	// The time the compliance state should expire.
	ExpiresOn *string `pulumi:"expiresOn"`
	// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
	Owner *string `pulumi:"owner"`
	// The resource ID of the policy assignment that the attestation is setting the state for.
	PolicyAssignmentId string `pulumi:"policyAssignmentId"`
	// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AttestationAtResourceGroup resource.
type AttestationAtResourceGroupArgs struct {
	// The name of the attestation.
	AttestationName pulumi.StringInput
	// Comments describing why this attestation was created.
	Comments pulumi.StringPtrInput
	// The compliance state that should be set on the resource.
	ComplianceState pulumi.StringPtrInput
	// The evidence supporting the compliance state set in this attestation.
	Evidence AttestationEvidenceArrayInput
	// The time the compliance state should expire.
	ExpiresOn pulumi.StringPtrInput
	// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.
	Owner pulumi.StringPtrInput
	// The resource ID of the policy assignment that the attestation is setting the state for.
	PolicyAssignmentId pulumi.StringInput
	// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.
	PolicyDefinitionReferenceId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (AttestationAtResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*attestationAtResourceGroupArgs)(nil)).Elem()
}

type AttestationAtResourceGroupInput interface {
	pulumi.Input

	ToAttestationAtResourceGroupOutput() AttestationAtResourceGroupOutput
	ToAttestationAtResourceGroupOutputWithContext(ctx context.Context) AttestationAtResourceGroupOutput
}

func (*AttestationAtResourceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestationAtResourceGroup)(nil))
}

func (i *AttestationAtResourceGroup) ToAttestationAtResourceGroupOutput() AttestationAtResourceGroupOutput {
	return i.ToAttestationAtResourceGroupOutputWithContext(context.Background())
}

func (i *AttestationAtResourceGroup) ToAttestationAtResourceGroupOutputWithContext(ctx context.Context) AttestationAtResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttestationAtResourceGroupOutput)
}

type AttestationAtResourceGroupOutput struct {
	*pulumi.OutputState
}

func (AttestationAtResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttestationAtResourceGroup)(nil))
}

func (o AttestationAtResourceGroupOutput) ToAttestationAtResourceGroupOutput() AttestationAtResourceGroupOutput {
	return o
}

func (o AttestationAtResourceGroupOutput) ToAttestationAtResourceGroupOutputWithContext(ctx context.Context) AttestationAtResourceGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AttestationAtResourceGroupOutput{})
}
