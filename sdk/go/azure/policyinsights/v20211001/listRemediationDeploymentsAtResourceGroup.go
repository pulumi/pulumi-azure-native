// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List of deployments for a remediation.
func ListRemediationDeploymentsAtResourceGroup(ctx *pulumi.Context, args *ListRemediationDeploymentsAtResourceGroupArgs, opts ...pulumi.InvokeOption) (*ListRemediationDeploymentsAtResourceGroupResult, error) {
	var rv ListRemediationDeploymentsAtResourceGroupResult
	err := ctx.Invoke("azure-native:policyinsights/v20211001:listRemediationDeploymentsAtResourceGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListRemediationDeploymentsAtResourceGroupArgs struct {
	// The name of the remediation.
	RemediationName string `pulumi:"remediationName"`
	// Resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Maximum number of records to return.
	Top *int `pulumi:"top"`
}

// List of deployments for a remediation.
type ListRemediationDeploymentsAtResourceGroupResult struct {
	// The URL to get the next set of results.
	NextLink string `pulumi:"nextLink"`
	// Array of deployments for the remediation.
	Value []RemediationDeploymentResponse `pulumi:"value"`
}

func ListRemediationDeploymentsAtResourceGroupOutput(ctx *pulumi.Context, args ListRemediationDeploymentsAtResourceGroupOutputArgs, opts ...pulumi.InvokeOption) ListRemediationDeploymentsAtResourceGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListRemediationDeploymentsAtResourceGroupResult, error) {
			args := v.(ListRemediationDeploymentsAtResourceGroupArgs)
			r, err := ListRemediationDeploymentsAtResourceGroup(ctx, &args, opts...)
			var s ListRemediationDeploymentsAtResourceGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListRemediationDeploymentsAtResourceGroupResultOutput)
}

type ListRemediationDeploymentsAtResourceGroupOutputArgs struct {
	// The name of the remediation.
	RemediationName pulumi.StringInput `pulumi:"remediationName"`
	// Resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Maximum number of records to return.
	Top pulumi.IntPtrInput `pulumi:"top"`
}

func (ListRemediationDeploymentsAtResourceGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRemediationDeploymentsAtResourceGroupArgs)(nil)).Elem()
}

// List of deployments for a remediation.
type ListRemediationDeploymentsAtResourceGroupResultOutput struct{ *pulumi.OutputState }

func (ListRemediationDeploymentsAtResourceGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRemediationDeploymentsAtResourceGroupResult)(nil)).Elem()
}

func (o ListRemediationDeploymentsAtResourceGroupResultOutput) ToListRemediationDeploymentsAtResourceGroupResultOutput() ListRemediationDeploymentsAtResourceGroupResultOutput {
	return o
}

func (o ListRemediationDeploymentsAtResourceGroupResultOutput) ToListRemediationDeploymentsAtResourceGroupResultOutputWithContext(ctx context.Context) ListRemediationDeploymentsAtResourceGroupResultOutput {
	return o
}

// The URL to get the next set of results.
func (o ListRemediationDeploymentsAtResourceGroupResultOutput) NextLink() pulumi.StringOutput {
	return o.ApplyT(func(v ListRemediationDeploymentsAtResourceGroupResult) string { return v.NextLink }).(pulumi.StringOutput)
}

// Array of deployments for the remediation.
func (o ListRemediationDeploymentsAtResourceGroupResultOutput) Value() RemediationDeploymentResponseArrayOutput {
	return o.ApplyT(func(v ListRemediationDeploymentsAtResourceGroupResult) []RemediationDeploymentResponse {
		return v.Value
	}).(RemediationDeploymentResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListRemediationDeploymentsAtResourceGroupResultOutput{})
}
