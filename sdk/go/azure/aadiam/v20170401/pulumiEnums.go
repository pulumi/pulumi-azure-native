// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation.
type Category string

const (
	CategoryAuditLogs  = Category("AuditLogs")
	CategorySignInLogs = Category("SignInLogs")
)

func (Category) ElementType() reflect.Type {
	return reflect.TypeOf((*Category)(nil)).Elem()
}

func (e Category) ToCategoryOutput() CategoryOutput {
	return pulumi.ToOutput(e).(CategoryOutput)
}

func (e Category) ToCategoryOutputWithContext(ctx context.Context) CategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CategoryOutput)
}

func (e Category) ToCategoryPtrOutput() CategoryPtrOutput {
	return e.ToCategoryPtrOutputWithContext(context.Background())
}

func (e Category) ToCategoryPtrOutputWithContext(ctx context.Context) CategoryPtrOutput {
	return Category(e).ToCategoryOutputWithContext(ctx).ToCategoryPtrOutputWithContext(ctx)
}

func (e Category) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Category) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Category) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Category) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CategoryOutput struct{ *pulumi.OutputState }

func (CategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Category)(nil)).Elem()
}

func (o CategoryOutput) ToCategoryOutput() CategoryOutput {
	return o
}

func (o CategoryOutput) ToCategoryOutputWithContext(ctx context.Context) CategoryOutput {
	return o
}

func (o CategoryOutput) ToCategoryPtrOutput() CategoryPtrOutput {
	return o.ToCategoryPtrOutputWithContext(context.Background())
}

func (o CategoryOutput) ToCategoryPtrOutputWithContext(ctx context.Context) CategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Category) *Category {
		return &v
	}).(CategoryPtrOutput)
}

func (o CategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Category) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Category) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CategoryPtrOutput struct{ *pulumi.OutputState }

func (CategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Category)(nil)).Elem()
}

func (o CategoryPtrOutput) ToCategoryPtrOutput() CategoryPtrOutput {
	return o
}

func (o CategoryPtrOutput) ToCategoryPtrOutputWithContext(ctx context.Context) CategoryPtrOutput {
	return o
}

func (o CategoryPtrOutput) Elem() CategoryOutput {
	return o.ApplyT(func(v *Category) Category {
		if v != nil {
			return *v
		}
		var ret Category
		return ret
	}).(CategoryOutput)
}

func (o CategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Category) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CategoryInput is an input type that accepts CategoryArgs and CategoryOutput values.
// You can construct a concrete instance of `CategoryInput` via:
//
//          CategoryArgs{...}
type CategoryInput interface {
	pulumi.Input

	ToCategoryOutput() CategoryOutput
	ToCategoryOutputWithContext(context.Context) CategoryOutput
}

var categoryPtrType = reflect.TypeOf((**Category)(nil)).Elem()

type CategoryPtrInput interface {
	pulumi.Input

	ToCategoryPtrOutput() CategoryPtrOutput
	ToCategoryPtrOutputWithContext(context.Context) CategoryPtrOutput
}

type categoryPtr string

func CategoryPtr(v string) CategoryPtrInput {
	return (*categoryPtr)(&v)
}

func (*categoryPtr) ElementType() reflect.Type {
	return categoryPtrType
}

func (in *categoryPtr) ToCategoryPtrOutput() CategoryPtrOutput {
	return pulumi.ToOutput(in).(CategoryPtrOutput)
}

func (in *categoryPtr) ToCategoryPtrOutputWithContext(ctx context.Context) CategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CategoryPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CategoryOutput{})
	pulumi.RegisterOutputType(CategoryPtrOutput{})
}
