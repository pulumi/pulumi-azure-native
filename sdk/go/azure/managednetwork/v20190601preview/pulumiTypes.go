// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionInvokeResponse struct {
	// The collection of connectivity related Managed Network Groups within the Managed Network
	Groups []ManagedNetworkGroupInvokeResponse `pulumi:"groups"`
	// The collection of Managed Network Peering Policies within the Managed Network
	Peerings []ManagedNetworkPeeringPolicyInvokeResponse `pulumi:"peerings"`
}

// ConnectivityCollectionInvokeResponseInput is an input type that accepts ConnectivityCollectionInvokeResponseArgs and ConnectivityCollectionInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectivityCollectionInvokeResponseInput` via:
//
//          ConnectivityCollectionInvokeResponseArgs{...}
type ConnectivityCollectionInvokeResponseInput interface {
	pulumi.Input

	ToConnectivityCollectionInvokeResponseOutput() ConnectivityCollectionInvokeResponseOutput
	ToConnectivityCollectionInvokeResponseOutputWithContext(context.Context) ConnectivityCollectionInvokeResponseOutput
}

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionInvokeResponseArgs struct {
	// The collection of connectivity related Managed Network Groups within the Managed Network
	Groups ManagedNetworkGroupInvokeResponseArrayInput `pulumi:"groups"`
	// The collection of Managed Network Peering Policies within the Managed Network
	Peerings ManagedNetworkPeeringPolicyInvokeResponseArrayInput `pulumi:"peerings"`
}

func (ConnectivityCollectionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCollectionInvokeResponse)(nil)).Elem()
}

func (i ConnectivityCollectionInvokeResponseArgs) ToConnectivityCollectionInvokeResponseOutput() ConnectivityCollectionInvokeResponseOutput {
	return i.ToConnectivityCollectionInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectivityCollectionInvokeResponseArgs) ToConnectivityCollectionInvokeResponseOutputWithContext(ctx context.Context) ConnectivityCollectionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCollectionInvokeResponseOutput)
}

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityCollectionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCollectionInvokeResponse)(nil)).Elem()
}

func (o ConnectivityCollectionInvokeResponseOutput) ToConnectivityCollectionInvokeResponseOutput() ConnectivityCollectionInvokeResponseOutput {
	return o
}

func (o ConnectivityCollectionInvokeResponseOutput) ToConnectivityCollectionInvokeResponseOutputWithContext(ctx context.Context) ConnectivityCollectionInvokeResponseOutput {
	return o
}

// The collection of connectivity related Managed Network Groups within the Managed Network
func (o ConnectivityCollectionInvokeResponseOutput) Groups() ManagedNetworkGroupInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectivityCollectionInvokeResponse) []ManagedNetworkGroupInvokeResponse { return v.Groups }).(ManagedNetworkGroupInvokeResponseArrayOutput)
}

// The collection of Managed Network Peering Policies within the Managed Network
func (o ConnectivityCollectionInvokeResponseOutput) Peerings() ManagedNetworkPeeringPolicyInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectivityCollectionInvokeResponse) []ManagedNetworkPeeringPolicyInvokeResponse {
		return v.Peerings
	}).(ManagedNetworkPeeringPolicyInvokeResponseArrayOutput)
}

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionResponse struct {
	// The collection of connectivity related Managed Network Groups within the Managed Network
	Groups []ManagedNetworkGroupResponse `pulumi:"groups"`
	// The collection of Managed Network Peering Policies within the Managed Network
	Peerings []ManagedNetworkPeeringPolicyResponse `pulumi:"peerings"`
}

// ConnectivityCollectionResponseInput is an input type that accepts ConnectivityCollectionResponseArgs and ConnectivityCollectionResponseOutput values.
// You can construct a concrete instance of `ConnectivityCollectionResponseInput` via:
//
//          ConnectivityCollectionResponseArgs{...}
type ConnectivityCollectionResponseInput interface {
	pulumi.Input

	ToConnectivityCollectionResponseOutput() ConnectivityCollectionResponseOutput
	ToConnectivityCollectionResponseOutputWithContext(context.Context) ConnectivityCollectionResponseOutput
}

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionResponseArgs struct {
	// The collection of connectivity related Managed Network Groups within the Managed Network
	Groups ManagedNetworkGroupResponseArrayInput `pulumi:"groups"`
	// The collection of Managed Network Peering Policies within the Managed Network
	Peerings ManagedNetworkPeeringPolicyResponseArrayInput `pulumi:"peerings"`
}

func (ConnectivityCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCollectionResponse)(nil)).Elem()
}

func (i ConnectivityCollectionResponseArgs) ToConnectivityCollectionResponseOutput() ConnectivityCollectionResponseOutput {
	return i.ToConnectivityCollectionResponseOutputWithContext(context.Background())
}

func (i ConnectivityCollectionResponseArgs) ToConnectivityCollectionResponseOutputWithContext(ctx context.Context) ConnectivityCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCollectionResponseOutput)
}

func (i ConnectivityCollectionResponseArgs) ToConnectivityCollectionResponsePtrOutput() ConnectivityCollectionResponsePtrOutput {
	return i.ToConnectivityCollectionResponsePtrOutputWithContext(context.Background())
}

func (i ConnectivityCollectionResponseArgs) ToConnectivityCollectionResponsePtrOutputWithContext(ctx context.Context) ConnectivityCollectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCollectionResponseOutput).ToConnectivityCollectionResponsePtrOutputWithContext(ctx)
}

// ConnectivityCollectionResponsePtrInput is an input type that accepts ConnectivityCollectionResponseArgs, ConnectivityCollectionResponsePtr and ConnectivityCollectionResponsePtrOutput values.
// You can construct a concrete instance of `ConnectivityCollectionResponsePtrInput` via:
//
//          ConnectivityCollectionResponseArgs{...}
//
//  or:
//
//          nil
type ConnectivityCollectionResponsePtrInput interface {
	pulumi.Input

	ToConnectivityCollectionResponsePtrOutput() ConnectivityCollectionResponsePtrOutput
	ToConnectivityCollectionResponsePtrOutputWithContext(context.Context) ConnectivityCollectionResponsePtrOutput
}

type connectivityCollectionResponsePtrType ConnectivityCollectionResponseArgs

func ConnectivityCollectionResponsePtr(v *ConnectivityCollectionResponseArgs) ConnectivityCollectionResponsePtrInput {
	return (*connectivityCollectionResponsePtrType)(v)
}

func (*connectivityCollectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityCollectionResponse)(nil)).Elem()
}

func (i *connectivityCollectionResponsePtrType) ToConnectivityCollectionResponsePtrOutput() ConnectivityCollectionResponsePtrOutput {
	return i.ToConnectivityCollectionResponsePtrOutputWithContext(context.Background())
}

func (i *connectivityCollectionResponsePtrType) ToConnectivityCollectionResponsePtrOutputWithContext(ctx context.Context) ConnectivityCollectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityCollectionResponsePtrOutput)
}

// The collection of Connectivity related groups and policies within the Managed Network
type ConnectivityCollectionResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityCollectionResponse)(nil)).Elem()
}

func (o ConnectivityCollectionResponseOutput) ToConnectivityCollectionResponseOutput() ConnectivityCollectionResponseOutput {
	return o
}

func (o ConnectivityCollectionResponseOutput) ToConnectivityCollectionResponseOutputWithContext(ctx context.Context) ConnectivityCollectionResponseOutput {
	return o
}

func (o ConnectivityCollectionResponseOutput) ToConnectivityCollectionResponsePtrOutput() ConnectivityCollectionResponsePtrOutput {
	return o.ToConnectivityCollectionResponsePtrOutputWithContext(context.Background())
}

func (o ConnectivityCollectionResponseOutput) ToConnectivityCollectionResponsePtrOutputWithContext(ctx context.Context) ConnectivityCollectionResponsePtrOutput {
	return o.ApplyT(func(v ConnectivityCollectionResponse) *ConnectivityCollectionResponse {
		return &v
	}).(ConnectivityCollectionResponsePtrOutput)
}

// The collection of connectivity related Managed Network Groups within the Managed Network
func (o ConnectivityCollectionResponseOutput) Groups() ManagedNetworkGroupResponseArrayOutput {
	return o.ApplyT(func(v ConnectivityCollectionResponse) []ManagedNetworkGroupResponse { return v.Groups }).(ManagedNetworkGroupResponseArrayOutput)
}

// The collection of Managed Network Peering Policies within the Managed Network
func (o ConnectivityCollectionResponseOutput) Peerings() ManagedNetworkPeeringPolicyResponseArrayOutput {
	return o.ApplyT(func(v ConnectivityCollectionResponse) []ManagedNetworkPeeringPolicyResponse { return v.Peerings }).(ManagedNetworkPeeringPolicyResponseArrayOutput)
}

type ConnectivityCollectionResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectivityCollectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityCollectionResponse)(nil)).Elem()
}

func (o ConnectivityCollectionResponsePtrOutput) ToConnectivityCollectionResponsePtrOutput() ConnectivityCollectionResponsePtrOutput {
	return o
}

func (o ConnectivityCollectionResponsePtrOutput) ToConnectivityCollectionResponsePtrOutputWithContext(ctx context.Context) ConnectivityCollectionResponsePtrOutput {
	return o
}

func (o ConnectivityCollectionResponsePtrOutput) Elem() ConnectivityCollectionResponseOutput {
	return o.ApplyT(func(v *ConnectivityCollectionResponse) ConnectivityCollectionResponse { return *v }).(ConnectivityCollectionResponseOutput)
}

// The collection of connectivity related Managed Network Groups within the Managed Network
func (o ConnectivityCollectionResponsePtrOutput) Groups() ManagedNetworkGroupResponseArrayOutput {
	return o.ApplyT(func(v *ConnectivityCollectionResponse) []ManagedNetworkGroupResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(ManagedNetworkGroupResponseArrayOutput)
}

// The collection of Managed Network Peering Policies within the Managed Network
func (o ConnectivityCollectionResponsePtrOutput) Peerings() ManagedNetworkPeeringPolicyResponseArrayOutput {
	return o.ApplyT(func(v *ConnectivityCollectionResponse) []ManagedNetworkPeeringPolicyResponse {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ManagedNetworkPeeringPolicyResponseArrayOutput)
}

// The Managed Network Group resource
type ManagedNetworkGroupInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Responsibility role under which this Managed Network Group will be created
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The collection of management groups covered by the Managed Network
	ManagementGroups []ResourceIdInvokeResponse `pulumi:"managementGroups"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The collection of  subnets covered by the Managed Network
	Subnets []ResourceIdInvokeResponse `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions []ResourceIdInvokeResponse `pulumi:"subscriptions"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks []ResourceIdInvokeResponse `pulumi:"virtualNetworks"`
}

// ManagedNetworkGroupInvokeResponseInput is an input type that accepts ManagedNetworkGroupInvokeResponseArgs and ManagedNetworkGroupInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkGroupInvokeResponseInput` via:
//
//          ManagedNetworkGroupInvokeResponseArgs{...}
type ManagedNetworkGroupInvokeResponseInput interface {
	pulumi.Input

	ToManagedNetworkGroupInvokeResponseOutput() ManagedNetworkGroupInvokeResponseOutput
	ToManagedNetworkGroupInvokeResponseOutputWithContext(context.Context) ManagedNetworkGroupInvokeResponseOutput
}

// The Managed Network Group resource
type ManagedNetworkGroupInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id pulumi.StringInput `pulumi:"id"`
	// Responsibility role under which this Managed Network Group will be created
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The collection of management groups covered by the Managed Network
	ManagementGroups ResourceIdInvokeResponseArrayInput `pulumi:"managementGroups"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The collection of  subnets covered by the Managed Network
	Subnets ResourceIdInvokeResponseArrayInput `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions ResourceIdInvokeResponseArrayInput `pulumi:"subscriptions"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks ResourceIdInvokeResponseArrayInput `pulumi:"virtualNetworks"`
}

func (ManagedNetworkGroupInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkGroupInvokeResponse)(nil)).Elem()
}

func (i ManagedNetworkGroupInvokeResponseArgs) ToManagedNetworkGroupInvokeResponseOutput() ManagedNetworkGroupInvokeResponseOutput {
	return i.ToManagedNetworkGroupInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkGroupInvokeResponseArgs) ToManagedNetworkGroupInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkGroupInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkGroupInvokeResponseOutput)
}

// ManagedNetworkGroupInvokeResponseArrayInput is an input type that accepts ManagedNetworkGroupInvokeResponseArray and ManagedNetworkGroupInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedNetworkGroupInvokeResponseArrayInput` via:
//
//          ManagedNetworkGroupInvokeResponseArray{ ManagedNetworkGroupInvokeResponseArgs{...} }
type ManagedNetworkGroupInvokeResponseArrayInput interface {
	pulumi.Input

	ToManagedNetworkGroupInvokeResponseArrayOutput() ManagedNetworkGroupInvokeResponseArrayOutput
	ToManagedNetworkGroupInvokeResponseArrayOutputWithContext(context.Context) ManagedNetworkGroupInvokeResponseArrayOutput
}

type ManagedNetworkGroupInvokeResponseArray []ManagedNetworkGroupInvokeResponseInput

func (ManagedNetworkGroupInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkGroupInvokeResponse)(nil)).Elem()
}

func (i ManagedNetworkGroupInvokeResponseArray) ToManagedNetworkGroupInvokeResponseArrayOutput() ManagedNetworkGroupInvokeResponseArrayOutput {
	return i.ToManagedNetworkGroupInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedNetworkGroupInvokeResponseArray) ToManagedNetworkGroupInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkGroupInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkGroupInvokeResponseArrayOutput)
}

// The Managed Network Group resource
type ManagedNetworkGroupInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkGroupInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkGroupInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkGroupInvokeResponseOutput) ToManagedNetworkGroupInvokeResponseOutput() ManagedNetworkGroupInvokeResponseOutput {
	return o
}

func (o ManagedNetworkGroupInvokeResponseOutput) ToManagedNetworkGroupInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkGroupInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkGroupInvokeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o ManagedNetworkGroupInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Responsibility role under which this Managed Network Group will be created
func (o ManagedNetworkGroupInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o ManagedNetworkGroupInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The collection of management groups covered by the Managed Network
func (o ManagedNetworkGroupInvokeResponseOutput) ManagementGroups() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) []ResourceIdInvokeResponse { return v.ManagementGroups }).(ResourceIdInvokeResponseArrayOutput)
}

// The name of the resource
func (o ManagedNetworkGroupInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkGroupInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ManagedNetworkGroupInvokeResponseOutput) Subnets() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) []ResourceIdInvokeResponse { return v.Subnets }).(ResourceIdInvokeResponseArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ManagedNetworkGroupInvokeResponseOutput) Subscriptions() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) []ResourceIdInvokeResponse { return v.Subscriptions }).(ResourceIdInvokeResponseArrayOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ManagedNetworkGroupInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ManagedNetworkGroupInvokeResponseOutput) VirtualNetworks() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupInvokeResponse) []ResourceIdInvokeResponse { return v.VirtualNetworks }).(ResourceIdInvokeResponseArrayOutput)
}

type ManagedNetworkGroupInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedNetworkGroupInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkGroupInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkGroupInvokeResponseArrayOutput) ToManagedNetworkGroupInvokeResponseArrayOutput() ManagedNetworkGroupInvokeResponseArrayOutput {
	return o
}

func (o ManagedNetworkGroupInvokeResponseArrayOutput) ToManagedNetworkGroupInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkGroupInvokeResponseArrayOutput {
	return o
}

func (o ManagedNetworkGroupInvokeResponseArrayOutput) Index(i pulumi.IntInput) ManagedNetworkGroupInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedNetworkGroupInvokeResponse {
		return vs[0].([]ManagedNetworkGroupInvokeResponse)[vs[1].(int)]
	}).(ManagedNetworkGroupInvokeResponseOutput)
}

// The Managed Network Group resource
type ManagedNetworkGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Responsibility role under which this Managed Network Group will be created
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The collection of management groups covered by the Managed Network
	ManagementGroups []ResourceIdResponse `pulumi:"managementGroups"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The collection of  subnets covered by the Managed Network
	Subnets []ResourceIdResponse `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions []ResourceIdResponse `pulumi:"subscriptions"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks []ResourceIdResponse `pulumi:"virtualNetworks"`
}

// ManagedNetworkGroupResponseInput is an input type that accepts ManagedNetworkGroupResponseArgs and ManagedNetworkGroupResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkGroupResponseInput` via:
//
//          ManagedNetworkGroupResponseArgs{...}
type ManagedNetworkGroupResponseInput interface {
	pulumi.Input

	ToManagedNetworkGroupResponseOutput() ManagedNetworkGroupResponseOutput
	ToManagedNetworkGroupResponseOutputWithContext(context.Context) ManagedNetworkGroupResponseOutput
}

// The Managed Network Group resource
type ManagedNetworkGroupResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id pulumi.StringInput `pulumi:"id"`
	// Responsibility role under which this Managed Network Group will be created
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The collection of management groups covered by the Managed Network
	ManagementGroups ResourceIdResponseArrayInput `pulumi:"managementGroups"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The collection of  subnets covered by the Managed Network
	Subnets ResourceIdResponseArrayInput `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions ResourceIdResponseArrayInput `pulumi:"subscriptions"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks ResourceIdResponseArrayInput `pulumi:"virtualNetworks"`
}

func (ManagedNetworkGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkGroupResponse)(nil)).Elem()
}

func (i ManagedNetworkGroupResponseArgs) ToManagedNetworkGroupResponseOutput() ManagedNetworkGroupResponseOutput {
	return i.ToManagedNetworkGroupResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkGroupResponseArgs) ToManagedNetworkGroupResponseOutputWithContext(ctx context.Context) ManagedNetworkGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkGroupResponseOutput)
}

// ManagedNetworkGroupResponseArrayInput is an input type that accepts ManagedNetworkGroupResponseArray and ManagedNetworkGroupResponseArrayOutput values.
// You can construct a concrete instance of `ManagedNetworkGroupResponseArrayInput` via:
//
//          ManagedNetworkGroupResponseArray{ ManagedNetworkGroupResponseArgs{...} }
type ManagedNetworkGroupResponseArrayInput interface {
	pulumi.Input

	ToManagedNetworkGroupResponseArrayOutput() ManagedNetworkGroupResponseArrayOutput
	ToManagedNetworkGroupResponseArrayOutputWithContext(context.Context) ManagedNetworkGroupResponseArrayOutput
}

type ManagedNetworkGroupResponseArray []ManagedNetworkGroupResponseInput

func (ManagedNetworkGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkGroupResponse)(nil)).Elem()
}

func (i ManagedNetworkGroupResponseArray) ToManagedNetworkGroupResponseArrayOutput() ManagedNetworkGroupResponseArrayOutput {
	return i.ToManagedNetworkGroupResponseArrayOutputWithContext(context.Background())
}

func (i ManagedNetworkGroupResponseArray) ToManagedNetworkGroupResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkGroupResponseArrayOutput)
}

// The Managed Network Group resource
type ManagedNetworkGroupResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkGroupResponse)(nil)).Elem()
}

func (o ManagedNetworkGroupResponseOutput) ToManagedNetworkGroupResponseOutput() ManagedNetworkGroupResponseOutput {
	return o
}

func (o ManagedNetworkGroupResponseOutput) ToManagedNetworkGroupResponseOutputWithContext(ctx context.Context) ManagedNetworkGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o ManagedNetworkGroupResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Responsibility role under which this Managed Network Group will be created
func (o ManagedNetworkGroupResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o ManagedNetworkGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The collection of management groups covered by the Managed Network
func (o ManagedNetworkGroupResponseOutput) ManagementGroups() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) []ResourceIdResponse { return v.ManagementGroups }).(ResourceIdResponseArrayOutput)
}

// The name of the resource
func (o ManagedNetworkGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ManagedNetworkGroupResponseOutput) Subnets() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) []ResourceIdResponse { return v.Subnets }).(ResourceIdResponseArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ManagedNetworkGroupResponseOutput) Subscriptions() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) []ResourceIdResponse { return v.Subscriptions }).(ResourceIdResponseArrayOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ManagedNetworkGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ManagedNetworkGroupResponseOutput) VirtualNetworks() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkGroupResponse) []ResourceIdResponse { return v.VirtualNetworks }).(ResourceIdResponseArrayOutput)
}

type ManagedNetworkGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedNetworkGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkGroupResponse)(nil)).Elem()
}

func (o ManagedNetworkGroupResponseArrayOutput) ToManagedNetworkGroupResponseArrayOutput() ManagedNetworkGroupResponseArrayOutput {
	return o
}

func (o ManagedNetworkGroupResponseArrayOutput) ToManagedNetworkGroupResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkGroupResponseArrayOutput {
	return o
}

func (o ManagedNetworkGroupResponseArrayOutput) Index(i pulumi.IntInput) ManagedNetworkGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedNetworkGroupResponse {
		return vs[0].([]ManagedNetworkGroupResponse)[vs[1].(int)]
	}).(ManagedNetworkGroupResponseOutput)
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyInvokeResponse struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the properties of a Managed Network Policy
	Properties *ManagedNetworkPeeringPolicyPropertiesInvokeResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// ManagedNetworkPeeringPolicyInvokeResponseInput is an input type that accepts ManagedNetworkPeeringPolicyInvokeResponseArgs and ManagedNetworkPeeringPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyInvokeResponseInput` via:
//
//          ManagedNetworkPeeringPolicyInvokeResponseArgs{...}
type ManagedNetworkPeeringPolicyInvokeResponseInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyInvokeResponseOutput() ManagedNetworkPeeringPolicyInvokeResponseOutput
	ToManagedNetworkPeeringPolicyInvokeResponseOutputWithContext(context.Context) ManagedNetworkPeeringPolicyInvokeResponseOutput
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyInvokeResponseArgs struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id pulumi.StringInput `pulumi:"id"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Gets or sets the properties of a Managed Network Policy
	Properties ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedNetworkPeeringPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyInvokeResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyInvokeResponseArgs) ToManagedNetworkPeeringPolicyInvokeResponseOutput() ManagedNetworkPeeringPolicyInvokeResponseOutput {
	return i.ToManagedNetworkPeeringPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyInvokeResponseArgs) ToManagedNetworkPeeringPolicyInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyInvokeResponseOutput)
}

// ManagedNetworkPeeringPolicyInvokeResponseArrayInput is an input type that accepts ManagedNetworkPeeringPolicyInvokeResponseArray and ManagedNetworkPeeringPolicyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyInvokeResponseArrayInput` via:
//
//          ManagedNetworkPeeringPolicyInvokeResponseArray{ ManagedNetworkPeeringPolicyInvokeResponseArgs{...} }
type ManagedNetworkPeeringPolicyInvokeResponseArrayInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyInvokeResponseArrayOutput() ManagedNetworkPeeringPolicyInvokeResponseArrayOutput
	ToManagedNetworkPeeringPolicyInvokeResponseArrayOutputWithContext(context.Context) ManagedNetworkPeeringPolicyInvokeResponseArrayOutput
}

type ManagedNetworkPeeringPolicyInvokeResponseArray []ManagedNetworkPeeringPolicyInvokeResponseInput

func (ManagedNetworkPeeringPolicyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkPeeringPolicyInvokeResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyInvokeResponseArray) ToManagedNetworkPeeringPolicyInvokeResponseArrayOutput() ManagedNetworkPeeringPolicyInvokeResponseArrayOutput {
	return i.ToManagedNetworkPeeringPolicyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyInvokeResponseArray) ToManagedNetworkPeeringPolicyInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyInvokeResponseArrayOutput)
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) ToManagedNetworkPeeringPolicyInvokeResponseOutput() ManagedNetworkPeeringPolicyInvokeResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) ToManagedNetworkPeeringPolicyInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyInvokeResponseOutput {
	return o
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the properties of a Managed Network Policy
func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) Properties() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyInvokeResponse) *ManagedNetworkPeeringPolicyPropertiesInvokeResponse {
		return v.Properties
	}).(ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ManagedNetworkPeeringPolicyInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedNetworkPeeringPolicyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkPeeringPolicyInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyInvokeResponseArrayOutput) ToManagedNetworkPeeringPolicyInvokeResponseArrayOutput() ManagedNetworkPeeringPolicyInvokeResponseArrayOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyInvokeResponseArrayOutput) ToManagedNetworkPeeringPolicyInvokeResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyInvokeResponseArrayOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyInvokeResponseArrayOutput) Index(i pulumi.IntInput) ManagedNetworkPeeringPolicyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedNetworkPeeringPolicyInvokeResponse {
		return vs[0].([]ManagedNetworkPeeringPolicyInvokeResponse)[vs[1].(int)]
	}).(ManagedNetworkPeeringPolicyInvokeResponseOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyProperties struct {
	// Gets or sets the hub virtual network ID
	Hub *ResourceId `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh []ResourceId `pulumi:"mesh"`
	// Gets or sets the spokes group IDs
	Spokes []ResourceId `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type string `pulumi:"type"`
}

// ManagedNetworkPeeringPolicyPropertiesInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesArgs and ManagedNetworkPeeringPolicyPropertiesOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesArgs{...}
type ManagedNetworkPeeringPolicyPropertiesInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesOutput() ManagedNetworkPeeringPolicyPropertiesOutput
	ToManagedNetworkPeeringPolicyPropertiesOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesOutput
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesArgs struct {
	// Gets or sets the hub virtual network ID
	Hub ResourceIdPtrInput `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh ResourceIdArrayInput `pulumi:"mesh"`
	// Gets or sets the spokes group IDs
	Spokes ResourceIdArrayInput `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedNetworkPeeringPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyProperties)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyPropertiesArgs) ToManagedNetworkPeeringPolicyPropertiesOutput() ManagedNetworkPeeringPolicyPropertiesOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesArgs) ToManagedNetworkPeeringPolicyPropertiesOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesOutput)
}

func (i ManagedNetworkPeeringPolicyPropertiesArgs) ToManagedNetworkPeeringPolicyPropertiesPtrOutput() ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesArgs) ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesOutput).ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(ctx)
}

// ManagedNetworkPeeringPolicyPropertiesPtrInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesArgs, ManagedNetworkPeeringPolicyPropertiesPtr and ManagedNetworkPeeringPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesPtrInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesArgs{...}
//
//  or:
//
//          nil
type ManagedNetworkPeeringPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesPtrOutput() ManagedNetworkPeeringPolicyPropertiesPtrOutput
	ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesPtrOutput
}

type managedNetworkPeeringPolicyPropertiesPtrType ManagedNetworkPeeringPolicyPropertiesArgs

func ManagedNetworkPeeringPolicyPropertiesPtr(v *ManagedNetworkPeeringPolicyPropertiesArgs) ManagedNetworkPeeringPolicyPropertiesPtrInput {
	return (*managedNetworkPeeringPolicyPropertiesPtrType)(v)
}

func (*managedNetworkPeeringPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyProperties)(nil)).Elem()
}

func (i *managedNetworkPeeringPolicyPropertiesPtrType) ToManagedNetworkPeeringPolicyPropertiesPtrOutput() ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedNetworkPeeringPolicyPropertiesPtrType) ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesPtrOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyProperties)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesOutput) ToManagedNetworkPeeringPolicyPropertiesOutput() ManagedNetworkPeeringPolicyPropertiesOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesOutput) ToManagedNetworkPeeringPolicyPropertiesOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesOutput) ToManagedNetworkPeeringPolicyPropertiesPtrOutput() ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return o.ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedNetworkPeeringPolicyPropertiesOutput) ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyProperties) *ManagedNetworkPeeringPolicyProperties {
		return &v
	}).(ManagedNetworkPeeringPolicyPropertiesPtrOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesOutput) Hub() ResourceIdPtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyProperties) *ResourceId { return v.Hub }).(ResourceIdPtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesOutput) Mesh() ResourceIdArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyProperties) []ResourceId { return v.Mesh }).(ResourceIdArrayOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesOutput) Spokes() ResourceIdArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyProperties) []ResourceId { return v.Spokes }).(ResourceIdArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyProperties) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedNetworkPeeringPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyProperties)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) ToManagedNetworkPeeringPolicyPropertiesPtrOutput() ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) ToManagedNetworkPeeringPolicyPropertiesPtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesPtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) Elem() ManagedNetworkPeeringPolicyPropertiesOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyProperties) ManagedNetworkPeeringPolicyProperties { return *v }).(ManagedNetworkPeeringPolicyPropertiesOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) Hub() ResourceIdPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyProperties) *ResourceId {
		if v == nil {
			return nil
		}
		return v.Hub
	}).(ResourceIdPtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) Mesh() ResourceIdArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyProperties) []ResourceId {
		if v == nil {
			return nil
		}
		return v.Mesh
	}).(ResourceIdArrayOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) Spokes() ResourceIdArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyProperties) []ResourceId {
		if v == nil {
			return nil
		}
		return v.Spokes
	}).(ResourceIdArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Gets or sets the hub virtual network ID
	Hub *ResourceIdInvokeResponse `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh []ResourceIdInvokeResponse `pulumi:"mesh"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the spokes group IDs
	Spokes []ResourceIdInvokeResponse `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type string `pulumi:"type"`
}

// ManagedNetworkPeeringPolicyPropertiesInvokeResponseInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs and ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesInvokeResponseInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs{...}
type ManagedNetworkPeeringPolicyPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput
	ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Gets or sets the hub virtual network ID
	Hub ResourceIdInvokeResponsePtrInput `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh ResourceIdInvokeResponseArrayInput `pulumi:"mesh"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the spokes group IDs
	Spokes ResourceIdInvokeResponseArrayInput `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyPropertiesInvokeResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput)
}

func (i ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput).ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs, ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtr and ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput
	ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput
}

type managedNetworkPeeringPolicyPropertiesInvokeResponsePtrType ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs

func ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtr(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponseArgs) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrInput {
	return (*managedNetworkPeeringPolicyPropertiesInvokeResponsePtrType)(v)
}

func (*managedNetworkPeeringPolicyPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyPropertiesInvokeResponse)(nil)).Elem()
}

func (i *managedNetworkPeeringPolicyPropertiesInvokeResponsePtrType) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *managedNetworkPeeringPolicyPropertiesInvokeResponsePtrType) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyPropertiesInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return o.ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *ManagedNetworkPeeringPolicyPropertiesInvokeResponse {
		return &v
	}).(ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) Hub() ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *ResourceIdInvokeResponse { return v.Hub }).(ResourceIdInvokeResponsePtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) Mesh() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) []ResourceIdInvokeResponse { return v.Mesh }).(ResourceIdInvokeResponseArrayOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) Spokes() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) []ResourceIdInvokeResponse {
		return v.Spokes
	}).(ResourceIdInvokeResponseArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyPropertiesInvokeResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) ToManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Elem() ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) ManagedNetworkPeeringPolicyPropertiesInvokeResponse {
		return *v
	}).(ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Hub() ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *ResourceIdInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Hub
	}).(ResourceIdInvokeResponsePtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Mesh() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) []ResourceIdInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Mesh
	}).(ResourceIdInvokeResponseArrayOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Spokes() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) []ResourceIdInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Spokes
	}).(ResourceIdInvokeResponseArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Gets or sets the hub virtual network ID
	Hub *ResourceIdResponse `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh []ResourceIdResponse `pulumi:"mesh"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the spokes group IDs
	Spokes []ResourceIdResponse `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type string `pulumi:"type"`
}

// ManagedNetworkPeeringPolicyPropertiesResponseInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesResponseArgs and ManagedNetworkPeeringPolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesResponseInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesResponseArgs{...}
type ManagedNetworkPeeringPolicyPropertiesResponseInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesResponseOutput() ManagedNetworkPeeringPolicyPropertiesResponseOutput
	ToManagedNetworkPeeringPolicyPropertiesResponseOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesResponseOutput
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Gets or sets the hub virtual network ID
	Hub ResourceIdResponsePtrInput `pulumi:"hub"`
	// Gets or sets the mesh group IDs
	Mesh ResourceIdResponseArrayInput `pulumi:"mesh"`
	// Provisioning state of the ManagedNetwork resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Gets or sets the spokes group IDs
	Spokes ResourceIdResponseArrayInput `pulumi:"spokes"`
	// Gets or sets the connectivity type of a network structure policy
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedNetworkPeeringPolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyPropertiesResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyPropertiesResponseArgs) ToManagedNetworkPeeringPolicyPropertiesResponseOutput() ManagedNetworkPeeringPolicyPropertiesResponseOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesResponseArgs) ToManagedNetworkPeeringPolicyPropertiesResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesResponseOutput)
}

func (i ManagedNetworkPeeringPolicyPropertiesResponseArgs) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyPropertiesResponseArgs) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesResponseOutput).ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// ManagedNetworkPeeringPolicyPropertiesResponsePtrInput is an input type that accepts ManagedNetworkPeeringPolicyPropertiesResponseArgs, ManagedNetworkPeeringPolicyPropertiesResponsePtr and ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyPropertiesResponsePtrInput` via:
//
//          ManagedNetworkPeeringPolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ManagedNetworkPeeringPolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput
	ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(context.Context) ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput
}

type managedNetworkPeeringPolicyPropertiesResponsePtrType ManagedNetworkPeeringPolicyPropertiesResponseArgs

func ManagedNetworkPeeringPolicyPropertiesResponsePtr(v *ManagedNetworkPeeringPolicyPropertiesResponseArgs) ManagedNetworkPeeringPolicyPropertiesResponsePtrInput {
	return (*managedNetworkPeeringPolicyPropertiesResponsePtrType)(v)
}

func (*managedNetworkPeeringPolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyPropertiesResponse)(nil)).Elem()
}

func (i *managedNetworkPeeringPolicyPropertiesResponsePtrType) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return i.ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *managedNetworkPeeringPolicyPropertiesResponsePtrType) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput)
}

// Properties of a Managed Network Peering Policy
type ManagedNetworkPeeringPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyPropertiesResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) ToManagedNetworkPeeringPolicyPropertiesResponseOutput() ManagedNetworkPeeringPolicyPropertiesResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) ToManagedNetworkPeeringPolicyPropertiesResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return o.ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) *ManagedNetworkPeeringPolicyPropertiesResponse {
		return &v
	}).(ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) Hub() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) *ResourceIdResponse { return v.Hub }).(ResourceIdResponsePtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) Mesh() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) []ResourceIdResponse { return v.Mesh }).(ResourceIdResponseArrayOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) Spokes() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) []ResourceIdResponse { return v.Spokes }).(ResourceIdResponseArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedNetworkPeeringPolicyPropertiesResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutput() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) ToManagedNetworkPeeringPolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Elem() ManagedNetworkPeeringPolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) ManagedNetworkPeeringPolicyPropertiesResponse {
		return *v
	}).(ManagedNetworkPeeringPolicyPropertiesResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the hub virtual network ID
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Hub() ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) *ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Hub
	}).(ResourceIdResponsePtrOutput)
}

// Gets or sets the mesh group IDs
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Mesh() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Mesh
	}).(ResourceIdResponseArrayOutput)
}

// Provisioning state of the ManagedNetwork resource.
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the spokes group IDs
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Spokes() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Spokes
	}).(ResourceIdResponseArrayOutput)
}

// Gets or sets the connectivity type of a network structure policy
func (o ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedNetworkPeeringPolicyPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyResponse struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the properties of a Managed Network Policy
	Properties *ManagedNetworkPeeringPolicyPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// ManagedNetworkPeeringPolicyResponseInput is an input type that accepts ManagedNetworkPeeringPolicyResponseArgs and ManagedNetworkPeeringPolicyResponseOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyResponseInput` via:
//
//          ManagedNetworkPeeringPolicyResponseArgs{...}
type ManagedNetworkPeeringPolicyResponseInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyResponseOutput() ManagedNetworkPeeringPolicyResponseOutput
	ToManagedNetworkPeeringPolicyResponseOutputWithContext(context.Context) ManagedNetworkPeeringPolicyResponseOutput
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyResponseArgs struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id pulumi.StringInput `pulumi:"id"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringInput `pulumi:"name"`
	// Gets or sets the properties of a Managed Network Policy
	Properties ManagedNetworkPeeringPolicyPropertiesResponsePtrInput `pulumi:"properties"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedNetworkPeeringPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyResponseArgs) ToManagedNetworkPeeringPolicyResponseOutput() ManagedNetworkPeeringPolicyResponseOutput {
	return i.ToManagedNetworkPeeringPolicyResponseOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyResponseArgs) ToManagedNetworkPeeringPolicyResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyResponseOutput)
}

// ManagedNetworkPeeringPolicyResponseArrayInput is an input type that accepts ManagedNetworkPeeringPolicyResponseArray and ManagedNetworkPeeringPolicyResponseArrayOutput values.
// You can construct a concrete instance of `ManagedNetworkPeeringPolicyResponseArrayInput` via:
//
//          ManagedNetworkPeeringPolicyResponseArray{ ManagedNetworkPeeringPolicyResponseArgs{...} }
type ManagedNetworkPeeringPolicyResponseArrayInput interface {
	pulumi.Input

	ToManagedNetworkPeeringPolicyResponseArrayOutput() ManagedNetworkPeeringPolicyResponseArrayOutput
	ToManagedNetworkPeeringPolicyResponseArrayOutputWithContext(context.Context) ManagedNetworkPeeringPolicyResponseArrayOutput
}

type ManagedNetworkPeeringPolicyResponseArray []ManagedNetworkPeeringPolicyResponseInput

func (ManagedNetworkPeeringPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkPeeringPolicyResponse)(nil)).Elem()
}

func (i ManagedNetworkPeeringPolicyResponseArray) ToManagedNetworkPeeringPolicyResponseArrayOutput() ManagedNetworkPeeringPolicyResponseArrayOutput {
	return i.ToManagedNetworkPeeringPolicyResponseArrayOutputWithContext(context.Background())
}

func (i ManagedNetworkPeeringPolicyResponseArray) ToManagedNetworkPeeringPolicyResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedNetworkPeeringPolicyResponseArrayOutput)
}

// The Managed Network Peering Policy resource
type ManagedNetworkPeeringPolicyResponseOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedNetworkPeeringPolicyResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyResponseOutput) ToManagedNetworkPeeringPolicyResponseOutput() ManagedNetworkPeeringPolicyResponseOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyResponseOutput) ToManagedNetworkPeeringPolicyResponseOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyResponseOutput {
	return o
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o ManagedNetworkPeeringPolicyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ManagedNetworkPeeringPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o ManagedNetworkPeeringPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the properties of a Managed Network Policy
func (o ManagedNetworkPeeringPolicyResponseOutput) Properties() ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyResponse) *ManagedNetworkPeeringPolicyPropertiesResponse {
		return v.Properties
	}).(ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o ManagedNetworkPeeringPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedNetworkPeeringPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedNetworkPeeringPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedNetworkPeeringPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedNetworkPeeringPolicyResponse)(nil)).Elem()
}

func (o ManagedNetworkPeeringPolicyResponseArrayOutput) ToManagedNetworkPeeringPolicyResponseArrayOutput() ManagedNetworkPeeringPolicyResponseArrayOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyResponseArrayOutput) ToManagedNetworkPeeringPolicyResponseArrayOutputWithContext(ctx context.Context) ManagedNetworkPeeringPolicyResponseArrayOutput {
	return o
}

func (o ManagedNetworkPeeringPolicyResponseArrayOutput) Index(i pulumi.IntInput) ManagedNetworkPeeringPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedNetworkPeeringPolicyResponse {
		return vs[0].([]ManagedNetworkPeeringPolicyResponse)[vs[1].(int)]
	}).(ManagedNetworkPeeringPolicyResponseOutput)
}

// Generic pointer to a resource
type ResourceId struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// ResourceIdInput is an input type that accepts ResourceIdArgs and ResourceIdOutput values.
// You can construct a concrete instance of `ResourceIdInput` via:
//
//          ResourceIdArgs{...}
type ResourceIdInput interface {
	pulumi.Input

	ToResourceIdOutput() ResourceIdOutput
	ToResourceIdOutputWithContext(context.Context) ResourceIdOutput
}

// Generic pointer to a resource
type ResourceIdArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (i ResourceIdArgs) ToResourceIdOutput() ResourceIdOutput {
	return i.ToResourceIdOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput)
}

func (i ResourceIdArgs) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i ResourceIdArgs) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdOutput).ToResourceIdPtrOutputWithContext(ctx)
}

// ResourceIdPtrInput is an input type that accepts ResourceIdArgs, ResourceIdPtr and ResourceIdPtrOutput values.
// You can construct a concrete instance of `ResourceIdPtrInput` via:
//
//          ResourceIdArgs{...}
//
//  or:
//
//          nil
type ResourceIdPtrInput interface {
	pulumi.Input

	ToResourceIdPtrOutput() ResourceIdPtrOutput
	ToResourceIdPtrOutputWithContext(context.Context) ResourceIdPtrOutput
}

type resourceIdPtrType ResourceIdArgs

func ResourceIdPtr(v *ResourceIdArgs) ResourceIdPtrInput {
	return (*resourceIdPtrType)(v)
}

func (*resourceIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (i *resourceIdPtrType) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return i.ToResourceIdPtrOutputWithContext(context.Background())
}

func (i *resourceIdPtrType) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdPtrOutput)
}

// ResourceIdArrayInput is an input type that accepts ResourceIdArray and ResourceIdArrayOutput values.
// You can construct a concrete instance of `ResourceIdArrayInput` via:
//
//          ResourceIdArray{ ResourceIdArgs{...} }
type ResourceIdArrayInput interface {
	pulumi.Input

	ToResourceIdArrayOutput() ResourceIdArrayOutput
	ToResourceIdArrayOutputWithContext(context.Context) ResourceIdArrayOutput
}

type ResourceIdArray []ResourceIdInput

func (ResourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceId)(nil)).Elem()
}

func (i ResourceIdArray) ToResourceIdArrayOutput() ResourceIdArrayOutput {
	return i.ToResourceIdArrayOutputWithContext(context.Background())
}

func (i ResourceIdArray) ToResourceIdArrayOutputWithContext(ctx context.Context) ResourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdArrayOutput)
}

// Generic pointer to a resource
type ResourceIdOutput struct{ *pulumi.OutputState }

func (ResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceId)(nil)).Elem()
}

func (o ResourceIdOutput) ToResourceIdOutput() ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdOutputWithContext(ctx context.Context) ResourceIdOutput {
	return o
}

func (o ResourceIdOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o.ToResourceIdPtrOutputWithContext(context.Background())
}

func (o ResourceIdOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o.ApplyT(func(v ResourceId) *ResourceId {
		return &v
	}).(ResourceIdPtrOutput)
}

// Resource Id
func (o ResourceIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceIdPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceId)(nil)).Elem()
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutput() ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) ToResourceIdPtrOutputWithContext(ctx context.Context) ResourceIdPtrOutput {
	return o
}

func (o ResourceIdPtrOutput) Elem() ResourceIdOutput {
	return o.ApplyT(func(v *ResourceId) ResourceId { return *v }).(ResourceIdOutput)
}

// Resource Id
func (o ResourceIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceId) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceIdArrayOutput struct{ *pulumi.OutputState }

func (ResourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceId)(nil)).Elem()
}

func (o ResourceIdArrayOutput) ToResourceIdArrayOutput() ResourceIdArrayOutput {
	return o
}

func (o ResourceIdArrayOutput) ToResourceIdArrayOutputWithContext(ctx context.Context) ResourceIdArrayOutput {
	return o
}

func (o ResourceIdArrayOutput) Index(i pulumi.IntInput) ResourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceId {
		return vs[0].([]ResourceId)[vs[1].(int)]
	}).(ResourceIdOutput)
}

// Generic pointer to a resource
type ResourceIdInvokeResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// ResourceIdInvokeResponseInput is an input type that accepts ResourceIdInvokeResponseArgs and ResourceIdInvokeResponseOutput values.
// You can construct a concrete instance of `ResourceIdInvokeResponseInput` via:
//
//          ResourceIdInvokeResponseArgs{...}
type ResourceIdInvokeResponseInput interface {
	pulumi.Input

	ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput
	ToResourceIdInvokeResponseOutputWithContext(context.Context) ResourceIdInvokeResponseOutput
}

// Generic pointer to a resource
type ResourceIdInvokeResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceIdInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdInvokeResponse)(nil)).Elem()
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput {
	return i.ToResourceIdInvokeResponseOutputWithContext(context.Background())
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponseOutputWithContext(ctx context.Context) ResourceIdInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponseOutput)
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return i.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdInvokeResponseArgs) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponseOutput).ToResourceIdInvokeResponsePtrOutputWithContext(ctx)
}

// ResourceIdInvokeResponsePtrInput is an input type that accepts ResourceIdInvokeResponseArgs, ResourceIdInvokeResponsePtr and ResourceIdInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdInvokeResponsePtrInput` via:
//
//          ResourceIdInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdInvokeResponsePtrInput interface {
	pulumi.Input

	ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput
	ToResourceIdInvokeResponsePtrOutputWithContext(context.Context) ResourceIdInvokeResponsePtrOutput
}

type resourceIdInvokeResponsePtrType ResourceIdInvokeResponseArgs

func ResourceIdInvokeResponsePtr(v *ResourceIdInvokeResponseArgs) ResourceIdInvokeResponsePtrInput {
	return (*resourceIdInvokeResponsePtrType)(v)
}

func (*resourceIdInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdInvokeResponse)(nil)).Elem()
}

func (i *resourceIdInvokeResponsePtrType) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return i.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdInvokeResponsePtrType) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponsePtrOutput)
}

// ResourceIdInvokeResponseArrayInput is an input type that accepts ResourceIdInvokeResponseArray and ResourceIdInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ResourceIdInvokeResponseArrayInput` via:
//
//          ResourceIdInvokeResponseArray{ ResourceIdInvokeResponseArgs{...} }
type ResourceIdInvokeResponseArrayInput interface {
	pulumi.Input

	ToResourceIdInvokeResponseArrayOutput() ResourceIdInvokeResponseArrayOutput
	ToResourceIdInvokeResponseArrayOutputWithContext(context.Context) ResourceIdInvokeResponseArrayOutput
}

type ResourceIdInvokeResponseArray []ResourceIdInvokeResponseInput

func (ResourceIdInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceIdInvokeResponse)(nil)).Elem()
}

func (i ResourceIdInvokeResponseArray) ToResourceIdInvokeResponseArrayOutput() ResourceIdInvokeResponseArrayOutput {
	return i.ToResourceIdInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ResourceIdInvokeResponseArray) ToResourceIdInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceIdInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdInvokeResponseArrayOutput)
}

// Generic pointer to a resource
type ResourceIdInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdInvokeResponse)(nil)).Elem()
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponseOutput() ResourceIdInvokeResponseOutput {
	return o
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponseOutputWithContext(ctx context.Context) ResourceIdInvokeResponseOutput {
	return o
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return o.ToResourceIdInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdInvokeResponseOutput) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdInvokeResponse) *ResourceIdInvokeResponse {
		return &v
	}).(ResourceIdInvokeResponsePtrOutput)
}

// Resource Id
func (o ResourceIdInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceIdInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdInvokeResponse)(nil)).Elem()
}

func (o ResourceIdInvokeResponsePtrOutput) ToResourceIdInvokeResponsePtrOutput() ResourceIdInvokeResponsePtrOutput {
	return o
}

func (o ResourceIdInvokeResponsePtrOutput) ToResourceIdInvokeResponsePtrOutputWithContext(ctx context.Context) ResourceIdInvokeResponsePtrOutput {
	return o
}

func (o ResourceIdInvokeResponsePtrOutput) Elem() ResourceIdInvokeResponseOutput {
	return o.ApplyT(func(v *ResourceIdInvokeResponse) ResourceIdInvokeResponse { return *v }).(ResourceIdInvokeResponseOutput)
}

// Resource Id
func (o ResourceIdInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceIdInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceIdInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceIdInvokeResponse)(nil)).Elem()
}

func (o ResourceIdInvokeResponseArrayOutput) ToResourceIdInvokeResponseArrayOutput() ResourceIdInvokeResponseArrayOutput {
	return o
}

func (o ResourceIdInvokeResponseArrayOutput) ToResourceIdInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceIdInvokeResponseArrayOutput {
	return o
}

func (o ResourceIdInvokeResponseArrayOutput) Index(i pulumi.IntInput) ResourceIdInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceIdInvokeResponse {
		return vs[0].([]ResourceIdInvokeResponse)[vs[1].(int)]
	}).(ResourceIdInvokeResponseOutput)
}

// Generic pointer to a resource
type ResourceIdResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// ResourceIdResponseInput is an input type that accepts ResourceIdResponseArgs and ResourceIdResponseOutput values.
// You can construct a concrete instance of `ResourceIdResponseInput` via:
//
//          ResourceIdResponseArgs{...}
type ResourceIdResponseInput interface {
	pulumi.Input

	ToResourceIdResponseOutput() ResourceIdResponseOutput
	ToResourceIdResponseOutputWithContext(context.Context) ResourceIdResponseOutput
}

// Generic pointer to a resource
type ResourceIdResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return i.ToResourceIdResponseOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput)
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdResponseArgs) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseOutput).ToResourceIdResponsePtrOutputWithContext(ctx)
}

// ResourceIdResponsePtrInput is an input type that accepts ResourceIdResponseArgs, ResourceIdResponsePtr and ResourceIdResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdResponsePtrInput` via:
//
//          ResourceIdResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdResponsePtrInput interface {
	pulumi.Input

	ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput
	ToResourceIdResponsePtrOutputWithContext(context.Context) ResourceIdResponsePtrOutput
}

type resourceIdResponsePtrType ResourceIdResponseArgs

func ResourceIdResponsePtr(v *ResourceIdResponseArgs) ResourceIdResponsePtrInput {
	return (*resourceIdResponsePtrType)(v)
}

func (*resourceIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return i.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdResponsePtrType) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponsePtrOutput)
}

// ResourceIdResponseArrayInput is an input type that accepts ResourceIdResponseArray and ResourceIdResponseArrayOutput values.
// You can construct a concrete instance of `ResourceIdResponseArrayInput` via:
//
//          ResourceIdResponseArray{ ResourceIdResponseArgs{...} }
type ResourceIdResponseArrayInput interface {
	pulumi.Input

	ToResourceIdResponseArrayOutput() ResourceIdResponseArrayOutput
	ToResourceIdResponseArrayOutputWithContext(context.Context) ResourceIdResponseArrayOutput
}

type ResourceIdResponseArray []ResourceIdResponseInput

func (ResourceIdResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceIdResponse)(nil)).Elem()
}

func (i ResourceIdResponseArray) ToResourceIdResponseArrayOutput() ResourceIdResponseArrayOutput {
	return i.ToResourceIdResponseArrayOutputWithContext(context.Background())
}

func (i ResourceIdResponseArray) ToResourceIdResponseArrayOutputWithContext(ctx context.Context) ResourceIdResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdResponseArrayOutput)
}

// Generic pointer to a resource
type ResourceIdResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutput() ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponseOutputWithContext(ctx context.Context) ResourceIdResponseOutput {
	return o
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o.ToResourceIdResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdResponseOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdResponse) *ResourceIdResponse {
		return &v
	}).(ResourceIdResponsePtrOutput)
}

// Resource Id
func (o ResourceIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutput() ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) ToResourceIdResponsePtrOutputWithContext(ctx context.Context) ResourceIdResponsePtrOutput {
	return o
}

func (o ResourceIdResponsePtrOutput) Elem() ResourceIdResponseOutput {
	return o.ApplyT(func(v *ResourceIdResponse) ResourceIdResponse { return *v }).(ResourceIdResponseOutput)
}

// Resource Id
func (o ResourceIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type ResourceIdResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceIdResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceIdResponse)(nil)).Elem()
}

func (o ResourceIdResponseArrayOutput) ToResourceIdResponseArrayOutput() ResourceIdResponseArrayOutput {
	return o
}

func (o ResourceIdResponseArrayOutput) ToResourceIdResponseArrayOutputWithContext(ctx context.Context) ResourceIdResponseArrayOutput {
	return o
}

func (o ResourceIdResponseArrayOutput) Index(i pulumi.IntInput) ResourceIdResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceIdResponse {
		return vs[0].([]ResourceIdResponse)[vs[1].(int)]
	}).(ResourceIdResponseOutput)
}

// Scope of a Managed Network
type Scope struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups []ResourceId `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets []ResourceId `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions []ResourceId `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks []ResourceId `pulumi:"virtualNetworks"`
}

// ScopeInput is an input type that accepts ScopeArgs and ScopeOutput values.
// You can construct a concrete instance of `ScopeInput` via:
//
//          ScopeArgs{...}
type ScopeInput interface {
	pulumi.Input

	ToScopeOutput() ScopeOutput
	ToScopeOutputWithContext(context.Context) ScopeOutput
}

// Scope of a Managed Network
type ScopeArgs struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups ResourceIdArrayInput `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets ResourceIdArrayInput `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions ResourceIdArrayInput `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks ResourceIdArrayInput `pulumi:"virtualNetworks"`
}

func (ScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Scope)(nil)).Elem()
}

func (i ScopeArgs) ToScopeOutput() ScopeOutput {
	return i.ToScopeOutputWithContext(context.Background())
}

func (i ScopeArgs) ToScopeOutputWithContext(ctx context.Context) ScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeOutput)
}

func (i ScopeArgs) ToScopePtrOutput() ScopePtrOutput {
	return i.ToScopePtrOutputWithContext(context.Background())
}

func (i ScopeArgs) ToScopePtrOutputWithContext(ctx context.Context) ScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeOutput).ToScopePtrOutputWithContext(ctx)
}

// ScopePtrInput is an input type that accepts ScopeArgs, ScopePtr and ScopePtrOutput values.
// You can construct a concrete instance of `ScopePtrInput` via:
//
//          ScopeArgs{...}
//
//  or:
//
//          nil
type ScopePtrInput interface {
	pulumi.Input

	ToScopePtrOutput() ScopePtrOutput
	ToScopePtrOutputWithContext(context.Context) ScopePtrOutput
}

type scopePtrType ScopeArgs

func ScopePtr(v *ScopeArgs) ScopePtrInput {
	return (*scopePtrType)(v)
}

func (*scopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Scope)(nil)).Elem()
}

func (i *scopePtrType) ToScopePtrOutput() ScopePtrOutput {
	return i.ToScopePtrOutputWithContext(context.Background())
}

func (i *scopePtrType) ToScopePtrOutputWithContext(ctx context.Context) ScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopePtrOutput)
}

// Scope of a Managed Network
type ScopeOutput struct{ *pulumi.OutputState }

func (ScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Scope)(nil)).Elem()
}

func (o ScopeOutput) ToScopeOutput() ScopeOutput {
	return o
}

func (o ScopeOutput) ToScopeOutputWithContext(ctx context.Context) ScopeOutput {
	return o
}

func (o ScopeOutput) ToScopePtrOutput() ScopePtrOutput {
	return o.ToScopePtrOutputWithContext(context.Background())
}

func (o ScopeOutput) ToScopePtrOutputWithContext(ctx context.Context) ScopePtrOutput {
	return o.ApplyT(func(v Scope) *Scope {
		return &v
	}).(ScopePtrOutput)
}

// The collection of management groups covered by the Managed Network
func (o ScopeOutput) ManagementGroups() ResourceIdArrayOutput {
	return o.ApplyT(func(v Scope) []ResourceId { return v.ManagementGroups }).(ResourceIdArrayOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ScopeOutput) Subnets() ResourceIdArrayOutput {
	return o.ApplyT(func(v Scope) []ResourceId { return v.Subnets }).(ResourceIdArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ScopeOutput) Subscriptions() ResourceIdArrayOutput {
	return o.ApplyT(func(v Scope) []ResourceId { return v.Subscriptions }).(ResourceIdArrayOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ScopeOutput) VirtualNetworks() ResourceIdArrayOutput {
	return o.ApplyT(func(v Scope) []ResourceId { return v.VirtualNetworks }).(ResourceIdArrayOutput)
}

type ScopePtrOutput struct{ *pulumi.OutputState }

func (ScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Scope)(nil)).Elem()
}

func (o ScopePtrOutput) ToScopePtrOutput() ScopePtrOutput {
	return o
}

func (o ScopePtrOutput) ToScopePtrOutputWithContext(ctx context.Context) ScopePtrOutput {
	return o
}

func (o ScopePtrOutput) Elem() ScopeOutput {
	return o.ApplyT(func(v *Scope) Scope { return *v }).(ScopeOutput)
}

// The collection of management groups covered by the Managed Network
func (o ScopePtrOutput) ManagementGroups() ResourceIdArrayOutput {
	return o.ApplyT(func(v *Scope) []ResourceId {
		if v == nil {
			return nil
		}
		return v.ManagementGroups
	}).(ResourceIdArrayOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ScopePtrOutput) Subnets() ResourceIdArrayOutput {
	return o.ApplyT(func(v *Scope) []ResourceId {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(ResourceIdArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ScopePtrOutput) Subscriptions() ResourceIdArrayOutput {
	return o.ApplyT(func(v *Scope) []ResourceId {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(ResourceIdArrayOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ScopePtrOutput) VirtualNetworks() ResourceIdArrayOutput {
	return o.ApplyT(func(v *Scope) []ResourceId {
		if v == nil {
			return nil
		}
		return v.VirtualNetworks
	}).(ResourceIdArrayOutput)
}

// Scope of a Managed Network
type ScopeInvokeResponse struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups []ResourceIdInvokeResponse `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets []ResourceIdInvokeResponse `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions []ResourceIdInvokeResponse `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks []ResourceIdInvokeResponse `pulumi:"virtualNetworks"`
}

// ScopeInvokeResponseInput is an input type that accepts ScopeInvokeResponseArgs and ScopeInvokeResponseOutput values.
// You can construct a concrete instance of `ScopeInvokeResponseInput` via:
//
//          ScopeInvokeResponseArgs{...}
type ScopeInvokeResponseInput interface {
	pulumi.Input

	ToScopeInvokeResponseOutput() ScopeInvokeResponseOutput
	ToScopeInvokeResponseOutputWithContext(context.Context) ScopeInvokeResponseOutput
}

// Scope of a Managed Network
type ScopeInvokeResponseArgs struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups ResourceIdInvokeResponseArrayInput `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets ResourceIdInvokeResponseArrayInput `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions ResourceIdInvokeResponseArrayInput `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks ResourceIdInvokeResponseArrayInput `pulumi:"virtualNetworks"`
}

func (ScopeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeInvokeResponse)(nil)).Elem()
}

func (i ScopeInvokeResponseArgs) ToScopeInvokeResponseOutput() ScopeInvokeResponseOutput {
	return i.ToScopeInvokeResponseOutputWithContext(context.Background())
}

func (i ScopeInvokeResponseArgs) ToScopeInvokeResponseOutputWithContext(ctx context.Context) ScopeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeInvokeResponseOutput)
}

// Scope of a Managed Network
type ScopeInvokeResponseOutput struct{ *pulumi.OutputState }

func (ScopeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeInvokeResponse)(nil)).Elem()
}

func (o ScopeInvokeResponseOutput) ToScopeInvokeResponseOutput() ScopeInvokeResponseOutput {
	return o
}

func (o ScopeInvokeResponseOutput) ToScopeInvokeResponseOutputWithContext(ctx context.Context) ScopeInvokeResponseOutput {
	return o
}

// The collection of management groups covered by the Managed Network
func (o ScopeInvokeResponseOutput) ManagementGroups() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ScopeInvokeResponse) []ResourceIdInvokeResponse { return v.ManagementGroups }).(ResourceIdInvokeResponseArrayOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ScopeInvokeResponseOutput) Subnets() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ScopeInvokeResponse) []ResourceIdInvokeResponse { return v.Subnets }).(ResourceIdInvokeResponseArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ScopeInvokeResponseOutput) Subscriptions() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ScopeInvokeResponse) []ResourceIdInvokeResponse { return v.Subscriptions }).(ResourceIdInvokeResponseArrayOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ScopeInvokeResponseOutput) VirtualNetworks() ResourceIdInvokeResponseArrayOutput {
	return o.ApplyT(func(v ScopeInvokeResponse) []ResourceIdInvokeResponse { return v.VirtualNetworks }).(ResourceIdInvokeResponseArrayOutput)
}

// Scope of a Managed Network
type ScopeResponse struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups []ResourceIdResponse `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets []ResourceIdResponse `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions []ResourceIdResponse `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks []ResourceIdResponse `pulumi:"virtualNetworks"`
}

// ScopeResponseInput is an input type that accepts ScopeResponseArgs and ScopeResponseOutput values.
// You can construct a concrete instance of `ScopeResponseInput` via:
//
//          ScopeResponseArgs{...}
type ScopeResponseInput interface {
	pulumi.Input

	ToScopeResponseOutput() ScopeResponseOutput
	ToScopeResponseOutputWithContext(context.Context) ScopeResponseOutput
}

// Scope of a Managed Network
type ScopeResponseArgs struct {
	// The collection of management groups covered by the Managed Network
	ManagementGroups ResourceIdResponseArrayInput `pulumi:"managementGroups"`
	// The collection of  subnets covered by the Managed Network
	Subnets ResourceIdResponseArrayInput `pulumi:"subnets"`
	// The collection of subscriptions covered by the Managed Network
	Subscriptions ResourceIdResponseArrayInput `pulumi:"subscriptions"`
	// The collection of virtual nets covered by the Managed Network
	VirtualNetworks ResourceIdResponseArrayInput `pulumi:"virtualNetworks"`
}

func (ScopeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeResponse)(nil)).Elem()
}

func (i ScopeResponseArgs) ToScopeResponseOutput() ScopeResponseOutput {
	return i.ToScopeResponseOutputWithContext(context.Background())
}

func (i ScopeResponseArgs) ToScopeResponseOutputWithContext(ctx context.Context) ScopeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeResponseOutput)
}

func (i ScopeResponseArgs) ToScopeResponsePtrOutput() ScopeResponsePtrOutput {
	return i.ToScopeResponsePtrOutputWithContext(context.Background())
}

func (i ScopeResponseArgs) ToScopeResponsePtrOutputWithContext(ctx context.Context) ScopeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeResponseOutput).ToScopeResponsePtrOutputWithContext(ctx)
}

// ScopeResponsePtrInput is an input type that accepts ScopeResponseArgs, ScopeResponsePtr and ScopeResponsePtrOutput values.
// You can construct a concrete instance of `ScopeResponsePtrInput` via:
//
//          ScopeResponseArgs{...}
//
//  or:
//
//          nil
type ScopeResponsePtrInput interface {
	pulumi.Input

	ToScopeResponsePtrOutput() ScopeResponsePtrOutput
	ToScopeResponsePtrOutputWithContext(context.Context) ScopeResponsePtrOutput
}

type scopeResponsePtrType ScopeResponseArgs

func ScopeResponsePtr(v *ScopeResponseArgs) ScopeResponsePtrInput {
	return (*scopeResponsePtrType)(v)
}

func (*scopeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeResponse)(nil)).Elem()
}

func (i *scopeResponsePtrType) ToScopeResponsePtrOutput() ScopeResponsePtrOutput {
	return i.ToScopeResponsePtrOutputWithContext(context.Background())
}

func (i *scopeResponsePtrType) ToScopeResponsePtrOutputWithContext(ctx context.Context) ScopeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScopeResponsePtrOutput)
}

// Scope of a Managed Network
type ScopeResponseOutput struct{ *pulumi.OutputState }

func (ScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScopeResponse)(nil)).Elem()
}

func (o ScopeResponseOutput) ToScopeResponseOutput() ScopeResponseOutput {
	return o
}

func (o ScopeResponseOutput) ToScopeResponseOutputWithContext(ctx context.Context) ScopeResponseOutput {
	return o
}

func (o ScopeResponseOutput) ToScopeResponsePtrOutput() ScopeResponsePtrOutput {
	return o.ToScopeResponsePtrOutputWithContext(context.Background())
}

func (o ScopeResponseOutput) ToScopeResponsePtrOutputWithContext(ctx context.Context) ScopeResponsePtrOutput {
	return o.ApplyT(func(v ScopeResponse) *ScopeResponse {
		return &v
	}).(ScopeResponsePtrOutput)
}

// The collection of management groups covered by the Managed Network
func (o ScopeResponseOutput) ManagementGroups() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ScopeResponse) []ResourceIdResponse { return v.ManagementGroups }).(ResourceIdResponseArrayOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ScopeResponseOutput) Subnets() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ScopeResponse) []ResourceIdResponse { return v.Subnets }).(ResourceIdResponseArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ScopeResponseOutput) Subscriptions() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ScopeResponse) []ResourceIdResponse { return v.Subscriptions }).(ResourceIdResponseArrayOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ScopeResponseOutput) VirtualNetworks() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v ScopeResponse) []ResourceIdResponse { return v.VirtualNetworks }).(ResourceIdResponseArrayOutput)
}

type ScopeResponsePtrOutput struct{ *pulumi.OutputState }

func (ScopeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScopeResponse)(nil)).Elem()
}

func (o ScopeResponsePtrOutput) ToScopeResponsePtrOutput() ScopeResponsePtrOutput {
	return o
}

func (o ScopeResponsePtrOutput) ToScopeResponsePtrOutputWithContext(ctx context.Context) ScopeResponsePtrOutput {
	return o
}

func (o ScopeResponsePtrOutput) Elem() ScopeResponseOutput {
	return o.ApplyT(func(v *ScopeResponse) ScopeResponse { return *v }).(ScopeResponseOutput)
}

// The collection of management groups covered by the Managed Network
func (o ScopeResponsePtrOutput) ManagementGroups() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ScopeResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.ManagementGroups
	}).(ResourceIdResponseArrayOutput)
}

// The collection of  subnets covered by the Managed Network
func (o ScopeResponsePtrOutput) Subnets() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ScopeResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(ResourceIdResponseArrayOutput)
}

// The collection of subscriptions covered by the Managed Network
func (o ScopeResponsePtrOutput) Subscriptions() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ScopeResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(ResourceIdResponseArrayOutput)
}

// The collection of virtual nets covered by the Managed Network
func (o ScopeResponsePtrOutput) VirtualNetworks() ResourceIdResponseArrayOutput {
	return o.ApplyT(func(v *ScopeResponse) []ResourceIdResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworks
	}).(ResourceIdResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectivityCollectionInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityCollectionResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityCollectionResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedNetworkGroupInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkGroupInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedNetworkGroupResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyResponseOutput{})
	pulumi.RegisterOutputType(ManagedNetworkPeeringPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceIdOutput{})
	pulumi.RegisterOutputType(ResourceIdPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdArrayOutput{})
	pulumi.RegisterOutputType(ResourceIdInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdResponseArrayOutput{})
	pulumi.RegisterOutputType(ScopeOutput{})
	pulumi.RegisterOutputType(ScopePtrOutput{})
	pulumi.RegisterOutputType(ScopeInvokeResponseOutput{})
	pulumi.RegisterOutputType(ScopeResponseOutput{})
	pulumi.RegisterOutputType(ScopeResponsePtrOutput{})
}
