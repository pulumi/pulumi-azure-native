// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Credential details of the account.
type AccountCredentialDetailsResponse struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString string `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName string `pulumi:"accountName"`
	// Type of the account.
	DataAccountType string `pulumi:"dataAccountType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails []ShareCredentialDetailsResponse `pulumi:"shareCredentialDetails"`
}

// AccountCredentialDetailsResponseInput is an input type that accepts AccountCredentialDetailsResponseArgs and AccountCredentialDetailsResponseOutput values.
// You can construct a concrete instance of `AccountCredentialDetailsResponseInput` via:
//
//          AccountCredentialDetailsResponseArgs{...}
type AccountCredentialDetailsResponseInput interface {
	pulumi.Input

	ToAccountCredentialDetailsResponseOutput() AccountCredentialDetailsResponseOutput
	ToAccountCredentialDetailsResponseOutputWithContext(context.Context) AccountCredentialDetailsResponseOutput
}

// Credential details of the account.
type AccountCredentialDetailsResponseArgs struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString pulumi.StringInput `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Type of the account.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails ShareCredentialDetailsResponseArrayInput `pulumi:"shareCredentialDetails"`
}

func (AccountCredentialDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCredentialDetailsResponse)(nil)).Elem()
}

func (i AccountCredentialDetailsResponseArgs) ToAccountCredentialDetailsResponseOutput() AccountCredentialDetailsResponseOutput {
	return i.ToAccountCredentialDetailsResponseOutputWithContext(context.Background())
}

func (i AccountCredentialDetailsResponseArgs) ToAccountCredentialDetailsResponseOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCredentialDetailsResponseOutput)
}

// AccountCredentialDetailsResponseArrayInput is an input type that accepts AccountCredentialDetailsResponseArray and AccountCredentialDetailsResponseArrayOutput values.
// You can construct a concrete instance of `AccountCredentialDetailsResponseArrayInput` via:
//
//          AccountCredentialDetailsResponseArray{ AccountCredentialDetailsResponseArgs{...} }
type AccountCredentialDetailsResponseArrayInput interface {
	pulumi.Input

	ToAccountCredentialDetailsResponseArrayOutput() AccountCredentialDetailsResponseArrayOutput
	ToAccountCredentialDetailsResponseArrayOutputWithContext(context.Context) AccountCredentialDetailsResponseArrayOutput
}

type AccountCredentialDetailsResponseArray []AccountCredentialDetailsResponseInput

func (AccountCredentialDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCredentialDetailsResponse)(nil)).Elem()
}

func (i AccountCredentialDetailsResponseArray) ToAccountCredentialDetailsResponseArrayOutput() AccountCredentialDetailsResponseArrayOutput {
	return i.ToAccountCredentialDetailsResponseArrayOutputWithContext(context.Background())
}

func (i AccountCredentialDetailsResponseArray) ToAccountCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCredentialDetailsResponseArrayOutput)
}

// Credential details of the account.
type AccountCredentialDetailsResponseOutput struct{ *pulumi.OutputState }

func (AccountCredentialDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCredentialDetailsResponse)(nil)).Elem()
}

func (o AccountCredentialDetailsResponseOutput) ToAccountCredentialDetailsResponseOutput() AccountCredentialDetailsResponseOutput {
	return o
}

func (o AccountCredentialDetailsResponseOutput) ToAccountCredentialDetailsResponseOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseOutput {
	return o
}

// Connection string of the account endpoint to use the account as a storage endpoint on the device.
func (o AccountCredentialDetailsResponseOutput) AccountConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.AccountConnectionString }).(pulumi.StringOutput)
}

// Name of the account.
func (o AccountCredentialDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Type of the account.
func (o AccountCredentialDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Per share level unencrypted access credentials.
func (o AccountCredentialDetailsResponseOutput) ShareCredentialDetails() ShareCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v AccountCredentialDetailsResponse) []ShareCredentialDetailsResponse {
		return v.ShareCredentialDetails
	}).(ShareCredentialDetailsResponseArrayOutput)
}

type AccountCredentialDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AccountCredentialDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCredentialDetailsResponse)(nil)).Elem()
}

func (o AccountCredentialDetailsResponseArrayOutput) ToAccountCredentialDetailsResponseArrayOutput() AccountCredentialDetailsResponseArrayOutput {
	return o
}

func (o AccountCredentialDetailsResponseArrayOutput) ToAccountCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) AccountCredentialDetailsResponseArrayOutput {
	return o
}

func (o AccountCredentialDetailsResponseArrayOutput) Index(i pulumi.IntInput) AccountCredentialDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountCredentialDetailsResponse {
		return vs[0].([]AccountCredentialDetailsResponse)[vs[1].(int)]
	}).(AccountCredentialDetailsResponseOutput)
}

// Additional error info.
type AdditionalErrorInfoResponse struct {
	// Additional error info.
	Info interface{} `pulumi:"info"`
	// Additional error type.
	Type *string `pulumi:"type"`
}

// AdditionalErrorInfoResponseInput is an input type that accepts AdditionalErrorInfoResponseArgs and AdditionalErrorInfoResponseOutput values.
// You can construct a concrete instance of `AdditionalErrorInfoResponseInput` via:
//
//          AdditionalErrorInfoResponseArgs{...}
type AdditionalErrorInfoResponseInput interface {
	pulumi.Input

	ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput
	ToAdditionalErrorInfoResponseOutputWithContext(context.Context) AdditionalErrorInfoResponseOutput
}

// Additional error info.
type AdditionalErrorInfoResponseArgs struct {
	// Additional error info.
	Info pulumi.Input `pulumi:"info"`
	// Additional error type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AdditionalErrorInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (i AdditionalErrorInfoResponseArgs) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return i.ToAdditionalErrorInfoResponseOutputWithContext(context.Background())
}

func (i AdditionalErrorInfoResponseArgs) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalErrorInfoResponseOutput)
}

// AdditionalErrorInfoResponseArrayInput is an input type that accepts AdditionalErrorInfoResponseArray and AdditionalErrorInfoResponseArrayOutput values.
// You can construct a concrete instance of `AdditionalErrorInfoResponseArrayInput` via:
//
//          AdditionalErrorInfoResponseArray{ AdditionalErrorInfoResponseArgs{...} }
type AdditionalErrorInfoResponseArrayInput interface {
	pulumi.Input

	ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput
	ToAdditionalErrorInfoResponseArrayOutputWithContext(context.Context) AdditionalErrorInfoResponseArrayOutput
}

type AdditionalErrorInfoResponseArray []AdditionalErrorInfoResponseInput

func (AdditionalErrorInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (i AdditionalErrorInfoResponseArray) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return i.ToAdditionalErrorInfoResponseArrayOutputWithContext(context.Background())
}

func (i AdditionalErrorInfoResponseArray) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalErrorInfoResponseArrayOutput)
}

// Additional error info.
type AdditionalErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return o
}

// Additional error info.
func (o AdditionalErrorInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// Additional error type.
func (o AdditionalErrorInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdditionalErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AdditionalErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalErrorInfoResponse {
		return vs[0].([]AdditionalErrorInfoResponse)[vs[1].(int)]
	}).(AdditionalErrorInfoResponseOutput)
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponse struct {
	// Mac Address.
	MacAddress string `pulumi:"macAddress"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// ApplianceNetworkConfigurationResponseInput is an input type that accepts ApplianceNetworkConfigurationResponseArgs and ApplianceNetworkConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplianceNetworkConfigurationResponseInput` via:
//
//          ApplianceNetworkConfigurationResponseArgs{...}
type ApplianceNetworkConfigurationResponseInput interface {
	pulumi.Input

	ToApplianceNetworkConfigurationResponseOutput() ApplianceNetworkConfigurationResponseOutput
	ToApplianceNetworkConfigurationResponseOutputWithContext(context.Context) ApplianceNetworkConfigurationResponseOutput
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponseArgs struct {
	// Mac Address.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// Name of the network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplianceNetworkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (i ApplianceNetworkConfigurationResponseArgs) ToApplianceNetworkConfigurationResponseOutput() ApplianceNetworkConfigurationResponseOutput {
	return i.ToApplianceNetworkConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplianceNetworkConfigurationResponseArgs) ToApplianceNetworkConfigurationResponseOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceNetworkConfigurationResponseOutput)
}

// ApplianceNetworkConfigurationResponseArrayInput is an input type that accepts ApplianceNetworkConfigurationResponseArray and ApplianceNetworkConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplianceNetworkConfigurationResponseArrayInput` via:
//
//          ApplianceNetworkConfigurationResponseArray{ ApplianceNetworkConfigurationResponseArgs{...} }
type ApplianceNetworkConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplianceNetworkConfigurationResponseArrayOutput() ApplianceNetworkConfigurationResponseArrayOutput
	ToApplianceNetworkConfigurationResponseArrayOutputWithContext(context.Context) ApplianceNetworkConfigurationResponseArrayOutput
}

type ApplianceNetworkConfigurationResponseArray []ApplianceNetworkConfigurationResponseInput

func (ApplianceNetworkConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (i ApplianceNetworkConfigurationResponseArray) ToApplianceNetworkConfigurationResponseArrayOutput() ApplianceNetworkConfigurationResponseArrayOutput {
	return i.ToApplianceNetworkConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplianceNetworkConfigurationResponseArray) ToApplianceNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceNetworkConfigurationResponseArrayOutput)
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplianceNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (o ApplianceNetworkConfigurationResponseOutput) ToApplianceNetworkConfigurationResponseOutput() ApplianceNetworkConfigurationResponseOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseOutput) ToApplianceNetworkConfigurationResponseOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseOutput {
	return o
}

// Mac Address.
func (o ApplianceNetworkConfigurationResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceNetworkConfigurationResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Name of the network.
func (o ApplianceNetworkConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceNetworkConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

type ApplianceNetworkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplianceNetworkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplianceNetworkConfigurationResponse)(nil)).Elem()
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) ToApplianceNetworkConfigurationResponseArrayOutput() ApplianceNetworkConfigurationResponseArrayOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) ToApplianceNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplianceNetworkConfigurationResponseArrayOutput {
	return o
}

func (o ApplianceNetworkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplianceNetworkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplianceNetworkConfigurationResponse {
		return vs[0].([]ApplianceNetworkConfigurationResponse)[vs[1].(int)]
	}).(ApplianceNetworkConfigurationResponseOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetails struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// AzureFileFilterDetailsInput is an input type that accepts AzureFileFilterDetailsArgs and AzureFileFilterDetailsOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsInput` via:
//
//          AzureFileFilterDetailsArgs{...}
type AzureFileFilterDetailsInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput
	ToAzureFileFilterDetailsOutputWithContext(context.Context) AzureFileFilterDetailsOutput
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsArgs struct {
	// List of full path of the files to be transferred.
	FilePathList pulumi.StringArrayInput `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList pulumi.StringArrayInput `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList pulumi.StringArrayInput `pulumi:"fileShareList"`
}

func (AzureFileFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetails)(nil)).Elem()
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput {
	return i.ToAzureFileFilterDetailsOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsOutputWithContext(ctx context.Context) AzureFileFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput)
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsArgs) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsOutput).ToAzureFileFilterDetailsPtrOutputWithContext(ctx)
}

// AzureFileFilterDetailsPtrInput is an input type that accepts AzureFileFilterDetailsArgs, AzureFileFilterDetailsPtr and AzureFileFilterDetailsPtrOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsPtrInput` via:
//
//          AzureFileFilterDetailsArgs{...}
//
//  or:
//
//          nil
type AzureFileFilterDetailsPtrInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput
	ToAzureFileFilterDetailsPtrOutputWithContext(context.Context) AzureFileFilterDetailsPtrOutput
}

type azureFileFilterDetailsPtrType AzureFileFilterDetailsArgs

func AzureFileFilterDetailsPtr(v *AzureFileFilterDetailsArgs) AzureFileFilterDetailsPtrInput {
	return (*azureFileFilterDetailsPtrType)(v)
}

func (*azureFileFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetails)(nil)).Elem()
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return i.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *azureFileFilterDetailsPtrType) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetails)(nil)).Elem()
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsOutput() AzureFileFilterDetailsOutput {
	return o
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsOutputWithContext(ctx context.Context) AzureFileFilterDetailsOutput {
	return o
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return o.ToAzureFileFilterDetailsPtrOutputWithContext(context.Background())
}

func (o AzureFileFilterDetailsOutput) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) *AzureFileFilterDetails {
		return &v
	}).(AzureFileFilterDetailsPtrOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FilePathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FilePrefixList }).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetails) []string { return v.FileShareList }).(pulumi.StringArrayOutput)
}

type AzureFileFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetails)(nil)).Elem()
}

func (o AzureFileFilterDetailsPtrOutput) ToAzureFileFilterDetailsPtrOutput() AzureFileFilterDetailsPtrOutput {
	return o
}

func (o AzureFileFilterDetailsPtrOutput) ToAzureFileFilterDetailsPtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsPtrOutput {
	return o
}

func (o AzureFileFilterDetailsPtrOutput) Elem() AzureFileFilterDetailsOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) AzureFileFilterDetails { return *v }).(AzureFileFilterDetailsOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FilePathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FilePrefixList
	}).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsPtrOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.FileShareList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponse struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// AzureFileFilterDetailsResponseInput is an input type that accepts AzureFileFilterDetailsResponseArgs and AzureFileFilterDetailsResponseOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsResponseInput` via:
//
//          AzureFileFilterDetailsResponseArgs{...}
type AzureFileFilterDetailsResponseInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsResponseOutput() AzureFileFilterDetailsResponseOutput
	ToAzureFileFilterDetailsResponseOutputWithContext(context.Context) AzureFileFilterDetailsResponseOutput
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponseArgs struct {
	// List of full path of the files to be transferred.
	FilePathList pulumi.StringArrayInput `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList pulumi.StringArrayInput `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList pulumi.StringArrayInput `pulumi:"fileShareList"`
}

func (AzureFileFilterDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (i AzureFileFilterDetailsResponseArgs) ToAzureFileFilterDetailsResponseOutput() AzureFileFilterDetailsResponseOutput {
	return i.ToAzureFileFilterDetailsResponseOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsResponseArgs) ToAzureFileFilterDetailsResponseOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsResponseOutput)
}

func (i AzureFileFilterDetailsResponseArgs) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return i.ToAzureFileFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i AzureFileFilterDetailsResponseArgs) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsResponseOutput).ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx)
}

// AzureFileFilterDetailsResponsePtrInput is an input type that accepts AzureFileFilterDetailsResponseArgs, AzureFileFilterDetailsResponsePtr and AzureFileFilterDetailsResponsePtrOutput values.
// You can construct a concrete instance of `AzureFileFilterDetailsResponsePtrInput` via:
//
//          AzureFileFilterDetailsResponseArgs{...}
//
//  or:
//
//          nil
type AzureFileFilterDetailsResponsePtrInput interface {
	pulumi.Input

	ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput
	ToAzureFileFilterDetailsResponsePtrOutputWithContext(context.Context) AzureFileFilterDetailsResponsePtrOutput
}

type azureFileFilterDetailsResponsePtrType AzureFileFilterDetailsResponseArgs

func AzureFileFilterDetailsResponsePtr(v *AzureFileFilterDetailsResponseArgs) AzureFileFilterDetailsResponsePtrInput {
	return (*azureFileFilterDetailsResponsePtrType)(v)
}

func (*azureFileFilterDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (i *azureFileFilterDetailsResponsePtrType) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return i.ToAzureFileFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *azureFileFilterDetailsResponsePtrType) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutput() AzureFileFilterDetailsResponseOutput {
	return o
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponseOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponseOutput {
	return o
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return o.ToAzureFileFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o AzureFileFilterDetailsResponseOutput) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) *AzureFileFilterDetailsResponse {
		return &v
	}).(AzureFileFilterDetailsResponsePtrOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FilePrefixList }).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponseOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileFilterDetailsResponse) []string { return v.FileShareList }).(pulumi.StringArrayOutput)
}

type AzureFileFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileFilterDetailsResponse)(nil)).Elem()
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutput() AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) ToAzureFileFilterDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFileFilterDetailsResponsePtrOutput {
	return o
}

func (o AzureFileFilterDetailsResponsePtrOutput) Elem() AzureFileFilterDetailsResponseOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) AzureFileFilterDetailsResponse { return *v }).(AzureFileFilterDetailsResponseOutput)
}

// List of full path of the files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure files to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FilePrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FilePrefixList
	}).(pulumi.StringArrayOutput)
}

// List of file shares to be transferred.
func (o AzureFileFilterDetailsResponsePtrOutput) FileShareList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.FileShareList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetails struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// BlobFilterDetailsInput is an input type that accepts BlobFilterDetailsArgs and BlobFilterDetailsOutput values.
// You can construct a concrete instance of `BlobFilterDetailsInput` via:
//
//          BlobFilterDetailsArgs{...}
type BlobFilterDetailsInput interface {
	pulumi.Input

	ToBlobFilterDetailsOutput() BlobFilterDetailsOutput
	ToBlobFilterDetailsOutputWithContext(context.Context) BlobFilterDetailsOutput
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsArgs struct {
	// List of full path of the blobs to be transferred.
	BlobPathList pulumi.StringArrayInput `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList pulumi.StringArrayInput `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList pulumi.StringArrayInput `pulumi:"containerList"`
}

func (BlobFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetails)(nil)).Elem()
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutput() BlobFilterDetailsOutput {
	return i.ToBlobFilterDetailsOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsOutputWithContext(ctx context.Context) BlobFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput)
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i BlobFilterDetailsArgs) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsOutput).ToBlobFilterDetailsPtrOutputWithContext(ctx)
}

// BlobFilterDetailsPtrInput is an input type that accepts BlobFilterDetailsArgs, BlobFilterDetailsPtr and BlobFilterDetailsPtrOutput values.
// You can construct a concrete instance of `BlobFilterDetailsPtrInput` via:
//
//          BlobFilterDetailsArgs{...}
//
//  or:
//
//          nil
type BlobFilterDetailsPtrInput interface {
	pulumi.Input

	ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput
	ToBlobFilterDetailsPtrOutputWithContext(context.Context) BlobFilterDetailsPtrOutput
}

type blobFilterDetailsPtrType BlobFilterDetailsArgs

func BlobFilterDetailsPtr(v *BlobFilterDetailsArgs) BlobFilterDetailsPtrInput {
	return (*blobFilterDetailsPtrType)(v)
}

func (*blobFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetails)(nil)).Elem()
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return i.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *blobFilterDetailsPtrType) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsPtrOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetails)(nil)).Elem()
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsOutput() BlobFilterDetailsOutput {
	return o
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsOutputWithContext(ctx context.Context) BlobFilterDetailsOutput {
	return o
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return o.ToBlobFilterDetailsPtrOutputWithContext(context.Background())
}

func (o BlobFilterDetailsOutput) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return o.ApplyT(func(v BlobFilterDetails) *BlobFilterDetails {
		return &v
	}).(BlobFilterDetailsPtrOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.BlobPathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.BlobPrefixList }).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetails) []string { return v.ContainerList }).(pulumi.StringArrayOutput)
}

type BlobFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetails)(nil)).Elem()
}

func (o BlobFilterDetailsPtrOutput) ToBlobFilterDetailsPtrOutput() BlobFilterDetailsPtrOutput {
	return o
}

func (o BlobFilterDetailsPtrOutput) ToBlobFilterDetailsPtrOutputWithContext(ctx context.Context) BlobFilterDetailsPtrOutput {
	return o
}

func (o BlobFilterDetailsPtrOutput) Elem() BlobFilterDetailsOutput {
	return o.ApplyT(func(v *BlobFilterDetails) BlobFilterDetails { return *v }).(BlobFilterDetailsOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsPtrOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsPtrOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.BlobPrefixList
	}).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsPtrOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetails) []string {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.StringArrayOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponse struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// BlobFilterDetailsResponseInput is an input type that accepts BlobFilterDetailsResponseArgs and BlobFilterDetailsResponseOutput values.
// You can construct a concrete instance of `BlobFilterDetailsResponseInput` via:
//
//          BlobFilterDetailsResponseArgs{...}
type BlobFilterDetailsResponseInput interface {
	pulumi.Input

	ToBlobFilterDetailsResponseOutput() BlobFilterDetailsResponseOutput
	ToBlobFilterDetailsResponseOutputWithContext(context.Context) BlobFilterDetailsResponseOutput
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponseArgs struct {
	// List of full path of the blobs to be transferred.
	BlobPathList pulumi.StringArrayInput `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList pulumi.StringArrayInput `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList pulumi.StringArrayInput `pulumi:"containerList"`
}

func (BlobFilterDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetailsResponse)(nil)).Elem()
}

func (i BlobFilterDetailsResponseArgs) ToBlobFilterDetailsResponseOutput() BlobFilterDetailsResponseOutput {
	return i.ToBlobFilterDetailsResponseOutputWithContext(context.Background())
}

func (i BlobFilterDetailsResponseArgs) ToBlobFilterDetailsResponseOutputWithContext(ctx context.Context) BlobFilterDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsResponseOutput)
}

func (i BlobFilterDetailsResponseArgs) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return i.ToBlobFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i BlobFilterDetailsResponseArgs) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsResponseOutput).ToBlobFilterDetailsResponsePtrOutputWithContext(ctx)
}

// BlobFilterDetailsResponsePtrInput is an input type that accepts BlobFilterDetailsResponseArgs, BlobFilterDetailsResponsePtr and BlobFilterDetailsResponsePtrOutput values.
// You can construct a concrete instance of `BlobFilterDetailsResponsePtrInput` via:
//
//          BlobFilterDetailsResponseArgs{...}
//
//  or:
//
//          nil
type BlobFilterDetailsResponsePtrInput interface {
	pulumi.Input

	ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput
	ToBlobFilterDetailsResponsePtrOutputWithContext(context.Context) BlobFilterDetailsResponsePtrOutput
}

type blobFilterDetailsResponsePtrType BlobFilterDetailsResponseArgs

func BlobFilterDetailsResponsePtr(v *BlobFilterDetailsResponseArgs) BlobFilterDetailsResponsePtrInput {
	return (*blobFilterDetailsResponsePtrType)(v)
}

func (*blobFilterDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetailsResponse)(nil)).Elem()
}

func (i *blobFilterDetailsResponsePtrType) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return i.ToBlobFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *blobFilterDetailsResponsePtrType) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobFilterDetailsResponsePtrOutput)
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutput() BlobFilterDetailsResponseOutput {
	return o
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponseOutputWithContext(ctx context.Context) BlobFilterDetailsResponseOutput {
	return o
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return o.ToBlobFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o BlobFilterDetailsResponseOutput) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) *BlobFilterDetailsResponse {
		return &v
	}).(BlobFilterDetailsResponsePtrOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPathList }).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponseOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.BlobPrefixList }).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponseOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlobFilterDetailsResponse) []string { return v.ContainerList }).(pulumi.StringArrayOutput)
}

type BlobFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobFilterDetailsResponse)(nil)).Elem()
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutput() BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) ToBlobFilterDetailsResponsePtrOutputWithContext(ctx context.Context) BlobFilterDetailsResponsePtrOutput {
	return o
}

func (o BlobFilterDetailsResponsePtrOutput) Elem() BlobFilterDetailsResponseOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) BlobFilterDetailsResponse { return *v }).(BlobFilterDetailsResponseOutput)
}

// List of full path of the blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPathList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPathList
	}).(pulumi.StringArrayOutput)
}

// Prefix list of the Azure blobs to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) BlobPrefixList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.BlobPrefixList
	}).(pulumi.StringArrayOutput)
}

// List of blob containers to be transferred.
func (o BlobFilterDetailsResponsePtrOutput) ContainerList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlobFilterDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.StringArrayOutput)
}

// Cloud error.
type CloudErrorResponse struct {
	// Cloud error additional info.
	AdditionalInfo []AdditionalErrorInfoResponse `pulumi:"additionalInfo"`
	// Cloud error code.
	Code *string `pulumi:"code"`
	// Cloud error details.
	Details []CloudErrorResponse `pulumi:"details"`
	// Cloud error message.
	Message *string `pulumi:"message"`
	// Cloud error target.
	Target *string `pulumi:"target"`
}

// CloudErrorResponseInput is an input type that accepts CloudErrorResponseArgs and CloudErrorResponseOutput values.
// You can construct a concrete instance of `CloudErrorResponseInput` via:
//
//          CloudErrorResponseArgs{...}
type CloudErrorResponseInput interface {
	pulumi.Input

	ToCloudErrorResponseOutput() CloudErrorResponseOutput
	ToCloudErrorResponseOutputWithContext(context.Context) CloudErrorResponseOutput
}

// Cloud error.
type CloudErrorResponseArgs struct {
	// Cloud error additional info.
	AdditionalInfo AdditionalErrorInfoResponseArrayInput `pulumi:"additionalInfo"`
	// Cloud error code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Cloud error details.
	Details CloudErrorResponseArrayInput `pulumi:"details"`
	// Cloud error message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Cloud error target.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (CloudErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (i CloudErrorResponseArgs) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return i.ToCloudErrorResponseOutputWithContext(context.Background())
}

func (i CloudErrorResponseArgs) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseOutput)
}

func (i CloudErrorResponseArgs) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return i.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (i CloudErrorResponseArgs) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseOutput).ToCloudErrorResponsePtrOutputWithContext(ctx)
}

// CloudErrorResponsePtrInput is an input type that accepts CloudErrorResponseArgs, CloudErrorResponsePtr and CloudErrorResponsePtrOutput values.
// You can construct a concrete instance of `CloudErrorResponsePtrInput` via:
//
//          CloudErrorResponseArgs{...}
//
//  or:
//
//          nil
type CloudErrorResponsePtrInput interface {
	pulumi.Input

	ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput
	ToCloudErrorResponsePtrOutputWithContext(context.Context) CloudErrorResponsePtrOutput
}

type cloudErrorResponsePtrType CloudErrorResponseArgs

func CloudErrorResponsePtr(v *CloudErrorResponseArgs) CloudErrorResponsePtrInput {
	return (*cloudErrorResponsePtrType)(v)
}

func (*cloudErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorResponse)(nil)).Elem()
}

func (i *cloudErrorResponsePtrType) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return i.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (i *cloudErrorResponsePtrType) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponsePtrOutput)
}

// CloudErrorResponseArrayInput is an input type that accepts CloudErrorResponseArray and CloudErrorResponseArrayOutput values.
// You can construct a concrete instance of `CloudErrorResponseArrayInput` via:
//
//          CloudErrorResponseArray{ CloudErrorResponseArgs{...} }
type CloudErrorResponseArrayInput interface {
	pulumi.Input

	ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput
	ToCloudErrorResponseArrayOutputWithContext(context.Context) CloudErrorResponseArrayOutput
}

type CloudErrorResponseArray []CloudErrorResponseInput

func (CloudErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (i CloudErrorResponseArray) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return i.ToCloudErrorResponseArrayOutputWithContext(context.Background())
}

func (i CloudErrorResponseArray) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseArrayOutput)
}

// Cloud error.
type CloudErrorResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *CloudErrorResponse {
		return &v
	}).(CloudErrorResponsePtrOutput)
}

// Cloud error additional info.
func (o CloudErrorResponseOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []AdditionalErrorInfoResponse { return v.AdditionalInfo }).(AdditionalErrorInfoResponseArrayOutput)
}

// Cloud error code.
func (o CloudErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Cloud error details.
func (o CloudErrorResponseOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []CloudErrorResponse { return v.Details }).(CloudErrorResponseArrayOutput)
}

// Cloud error message.
func (o CloudErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Cloud error target.
func (o CloudErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) Elem() CloudErrorResponseOutput {
	return o.ApplyT(func(v *CloudErrorResponse) CloudErrorResponse { return *v }).(CloudErrorResponseOutput)
}

// Cloud error additional info.
func (o CloudErrorResponsePtrOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []AdditionalErrorInfoResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(AdditionalErrorInfoResponseArrayOutput)
}

// Cloud error code.
func (o CloudErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Cloud error details.
func (o CloudErrorResponsePtrOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []CloudErrorResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorResponseArrayOutput)
}

// Cloud error message.
func (o CloudErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Cloud error target.
func (o CloudErrorResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorResponse {
		return vs[0].([]CloudErrorResponse)[vs[1].(int)]
	}).(CloudErrorResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreference `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//          ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contact Details.
type ContactDetailsArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference NotificationPreferenceArrayInput `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

// Contact Details.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

// Contact name of the person.
func (o ContactDetailsOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.ContactName }).(pulumi.StringOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetails) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsOutput) NotificationPreference() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v ContactDetails) []NotificationPreference { return v.NotificationPreference }).(NotificationPreferenceArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreferenceResponse `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsResponseInput is an input type that accepts ContactDetailsResponseArgs and ContactDetailsResponseOutput values.
// You can construct a concrete instance of `ContactDetailsResponseInput` via:
//
//          ContactDetailsResponseArgs{...}
type ContactDetailsResponseInput interface {
	pulumi.Input

	ToContactDetailsResponseOutput() ContactDetailsResponseOutput
	ToContactDetailsResponseOutputWithContext(context.Context) ContactDetailsResponseOutput
}

// Contact Details.
type ContactDetailsResponseArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList pulumi.StringArrayInput `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference NotificationPreferenceResponseArrayInput `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return i.ToContactDetailsResponseOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput)
}

// Contact Details.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

// Contact name of the person.
func (o ContactDetailsResponseOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactName }).(pulumi.StringOutput)
}

// List of Email-ids to be notified about job progress.
func (o ContactDetailsResponseOutput) EmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []string { return v.EmailList }).(pulumi.StringArrayOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Notification preference for a job stage.
func (o ContactDetailsResponseOutput) NotificationPreference() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v ContactDetailsResponse) []NotificationPreferenceResponse { return v.NotificationPreference }).(NotificationPreferenceResponseArrayOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

// Copy progress.
type CopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// To indicate bytes transferred.
	BytesProcessed int `pulumi:"bytesProcessed"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut int `pulumi:"directoriesErroredOut"`
	// Number of files which could not be copied
	FilesErroredOut int `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed int `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed int `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded int `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed int `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount int `pulumi:"renamedContainerCount"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess int `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess int `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// CopyProgressResponseInput is an input type that accepts CopyProgressResponseArgs and CopyProgressResponseOutput values.
// You can construct a concrete instance of `CopyProgressResponseInput` via:
//
//          CopyProgressResponseArgs{...}
type CopyProgressResponseInput interface {
	pulumi.Input

	ToCopyProgressResponseOutput() CopyProgressResponseOutput
	ToCopyProgressResponseOutputWithContext(context.Context) CopyProgressResponseOutput
}

// Copy progress.
type CopyProgressResponseArgs struct {
	// Id of the account where the data needs to be uploaded.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// To indicate bytes transferred.
	BytesProcessed pulumi.IntInput `pulumi:"bytesProcessed"`
	// Data Account Type.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut pulumi.IntInput `pulumi:"directoriesErroredOut"`
	// Number of files which could not be copied
	FilesErroredOut pulumi.IntInput `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed pulumi.IntInput `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed pulumi.IntInput `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded pulumi.IntInput `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed pulumi.IntInput `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress pulumi.BoolInput `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount pulumi.IntInput `pulumi:"renamedContainerCount"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess pulumi.IntInput `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess pulumi.IntInput `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType pulumi.StringInput `pulumi:"transferType"`
}

func (CopyProgressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyProgressResponse)(nil)).Elem()
}

func (i CopyProgressResponseArgs) ToCopyProgressResponseOutput() CopyProgressResponseOutput {
	return i.ToCopyProgressResponseOutputWithContext(context.Background())
}

func (i CopyProgressResponseArgs) ToCopyProgressResponseOutputWithContext(ctx context.Context) CopyProgressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyProgressResponseOutput)
}

// CopyProgressResponseArrayInput is an input type that accepts CopyProgressResponseArray and CopyProgressResponseArrayOutput values.
// You can construct a concrete instance of `CopyProgressResponseArrayInput` via:
//
//          CopyProgressResponseArray{ CopyProgressResponseArgs{...} }
type CopyProgressResponseArrayInput interface {
	pulumi.Input

	ToCopyProgressResponseArrayOutput() CopyProgressResponseArrayOutput
	ToCopyProgressResponseArrayOutputWithContext(context.Context) CopyProgressResponseArrayOutput
}

type CopyProgressResponseArray []CopyProgressResponseInput

func (CopyProgressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CopyProgressResponse)(nil)).Elem()
}

func (i CopyProgressResponseArray) ToCopyProgressResponseArrayOutput() CopyProgressResponseArrayOutput {
	return i.ToCopyProgressResponseArrayOutputWithContext(context.Background())
}

func (i CopyProgressResponseArray) ToCopyProgressResponseArrayOutputWithContext(ctx context.Context) CopyProgressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CopyProgressResponseArrayOutput)
}

// Copy progress.
type CopyProgressResponseOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutput() CopyProgressResponseOutput {
	return o
}

func (o CopyProgressResponseOutput) ToCopyProgressResponseOutputWithContext(ctx context.Context) CopyProgressResponseOutput {
	return o
}

// Id of the account where the data needs to be uploaded.
func (o CopyProgressResponseOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.AccountId }).(pulumi.StringOutput)
}

// To indicate bytes transferred.
func (o CopyProgressResponseOutput) BytesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.BytesProcessed }).(pulumi.IntOutput)
}

// Data Account Type.
func (o CopyProgressResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate directories errored out in the job.
func (o CopyProgressResponseOutput) DirectoriesErroredOut() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.DirectoriesErroredOut }).(pulumi.IntOutput)
}

// Number of files which could not be copied
func (o CopyProgressResponseOutput) FilesErroredOut() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.FilesErroredOut }).(pulumi.IntOutput)
}

// Number of files processed
func (o CopyProgressResponseOutput) FilesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.FilesProcessed }).(pulumi.IntOutput)
}

// To indicate directories renamed
func (o CopyProgressResponseOutput) InvalidDirectoriesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidDirectoriesProcessed }).(pulumi.IntOutput)
}

// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFileBytesUploaded() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidFileBytesUploaded }).(pulumi.IntOutput)
}

// Number of files not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) InvalidFilesProcessed() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.InvalidFilesProcessed }).(pulumi.IntOutput)
}

// To indicate if enumeration of data is in progress.
// Until this is true, the TotalBytesToProcess may not be valid.
func (o CopyProgressResponseOutput) IsEnumerationInProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v CopyProgressResponse) bool { return v.IsEnumerationInProgress }).(pulumi.BoolOutput)
}

// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
func (o CopyProgressResponseOutput) RenamedContainerCount() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.RenamedContainerCount }).(pulumi.IntOutput)
}

// Name of the storage account. This will be empty for data account types other than storage account.
func (o CopyProgressResponseOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Total amount of data to be processed by the job.
func (o CopyProgressResponseOutput) TotalBytesToProcess() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.TotalBytesToProcess }).(pulumi.IntOutput)
}

// Total files to process
func (o CopyProgressResponseOutput) TotalFilesToProcess() pulumi.IntOutput {
	return o.ApplyT(func(v CopyProgressResponse) int { return v.TotalFilesToProcess }).(pulumi.IntOutput)
}

// Transfer type of data
func (o CopyProgressResponseOutput) TransferType() pulumi.StringOutput {
	return o.ApplyT(func(v CopyProgressResponse) string { return v.TransferType }).(pulumi.StringOutput)
}

type CopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (CopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CopyProgressResponse)(nil)).Elem()
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutput() CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) ToCopyProgressResponseArrayOutputWithContext(ctx context.Context) CopyProgressResponseArrayOutput {
	return o
}

func (o CopyProgressResponseArrayOutput) Index(i pulumi.IntInput) CopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CopyProgressResponse {
		return vs[0].([]CopyProgressResponse)[vs[1].(int)]
	}).(CopyProgressResponseOutput)
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
	CopyVerboseLogLink string `pulumi:"copyVerboseLogLink"`
}

// DataBoxAccountCopyLogDetailsResponseInput is an input type that accepts DataBoxAccountCopyLogDetailsResponseArgs and DataBoxAccountCopyLogDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxAccountCopyLogDetailsResponseInput` via:
//
//          DataBoxAccountCopyLogDetailsResponseArgs{...}
type DataBoxAccountCopyLogDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxAccountCopyLogDetailsResponseOutput() DataBoxAccountCopyLogDetailsResponseOutput
	ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(context.Context) DataBoxAccountCopyLogDetailsResponseOutput
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponseArgs struct {
	// Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType pulumi.StringInput `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink pulumi.StringInput `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
	CopyVerboseLogLink pulumi.StringInput `pulumi:"copyVerboseLogLink"`
}

func (DataBoxAccountCopyLogDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (i DataBoxAccountCopyLogDetailsResponseArgs) ToDataBoxAccountCopyLogDetailsResponseOutput() DataBoxAccountCopyLogDetailsResponseOutput {
	return i.ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxAccountCopyLogDetailsResponseArgs) ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxAccountCopyLogDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxAccountCopyLogDetailsResponseOutput)
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutput() DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxAccountCopyLogDetailsResponseOutput) ToDataBoxAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
func (o DataBoxAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxAccountCopyLogDetailsResponse) string { return v.CopyVerboseLogLink }).(pulumi.StringOutput)
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// DataBoxDiskCopyLogDetailsResponseInput is an input type that accepts DataBoxDiskCopyLogDetailsResponseArgs and DataBoxDiskCopyLogDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxDiskCopyLogDetailsResponseInput` via:
//
//          DataBoxDiskCopyLogDetailsResponseArgs{...}
type DataBoxDiskCopyLogDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxDiskCopyLogDetailsResponseOutput() DataBoxDiskCopyLogDetailsResponseOutput
	ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(context.Context) DataBoxDiskCopyLogDetailsResponseOutput
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponseArgs struct {
	// Indicates the type of job details.
	CopyLogDetailsType pulumi.StringInput `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber pulumi.StringInput `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink pulumi.StringInput `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink pulumi.StringInput `pulumi:"verboseLogLink"`
}

func (DataBoxDiskCopyLogDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyLogDetailsResponse)(nil)).Elem()
}

func (i DataBoxDiskCopyLogDetailsResponseArgs) ToDataBoxDiskCopyLogDetailsResponseOutput() DataBoxDiskCopyLogDetailsResponseOutput {
	return i.ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxDiskCopyLogDetailsResponseArgs) ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyLogDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskCopyLogDetailsResponseOutput)
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutput() DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxDiskCopyLogDetailsResponseOutput) ToDataBoxDiskCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyLogDetailsResponseOutput {
	return o
}

// Indicates the type of job details.
func (o DataBoxDiskCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Disk Serial Number.
func (o DataBoxDiskCopyLogDetailsResponseOutput) DiskSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.DiskSerialNumber }).(pulumi.StringOutput)
}

// Link for copy error logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) ErrorLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.ErrorLogLink }).(pulumi.StringOutput)
}

// Link for copy verbose logs.
func (o DataBoxDiskCopyLogDetailsResponseOutput) VerboseLogLink() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyLogDetailsResponse) string { return v.VerboseLogLink }).(pulumi.StringOutput)
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponse struct {
	// Bytes copied during the copy of disk.
	BytesCopied int `pulumi:"bytesCopied"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete int `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber string `pulumi:"serialNumber"`
	// The Status of the copy
	Status string `pulumi:"status"`
}

// DataBoxDiskCopyProgressResponseInput is an input type that accepts DataBoxDiskCopyProgressResponseArgs and DataBoxDiskCopyProgressResponseOutput values.
// You can construct a concrete instance of `DataBoxDiskCopyProgressResponseInput` via:
//
//          DataBoxDiskCopyProgressResponseArgs{...}
type DataBoxDiskCopyProgressResponseInput interface {
	pulumi.Input

	ToDataBoxDiskCopyProgressResponseOutput() DataBoxDiskCopyProgressResponseOutput
	ToDataBoxDiskCopyProgressResponseOutputWithContext(context.Context) DataBoxDiskCopyProgressResponseOutput
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponseArgs struct {
	// Bytes copied during the copy of disk.
	BytesCopied pulumi.IntInput `pulumi:"bytesCopied"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete pulumi.IntInput `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// The Status of the copy
	Status pulumi.StringInput `pulumi:"status"`
}

func (DataBoxDiskCopyProgressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (i DataBoxDiskCopyProgressResponseArgs) ToDataBoxDiskCopyProgressResponseOutput() DataBoxDiskCopyProgressResponseOutput {
	return i.ToDataBoxDiskCopyProgressResponseOutputWithContext(context.Background())
}

func (i DataBoxDiskCopyProgressResponseArgs) ToDataBoxDiskCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskCopyProgressResponseOutput)
}

// DataBoxDiskCopyProgressResponseArrayInput is an input type that accepts DataBoxDiskCopyProgressResponseArray and DataBoxDiskCopyProgressResponseArrayOutput values.
// You can construct a concrete instance of `DataBoxDiskCopyProgressResponseArrayInput` via:
//
//          DataBoxDiskCopyProgressResponseArray{ DataBoxDiskCopyProgressResponseArgs{...} }
type DataBoxDiskCopyProgressResponseArrayInput interface {
	pulumi.Input

	ToDataBoxDiskCopyProgressResponseArrayOutput() DataBoxDiskCopyProgressResponseArrayOutput
	ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(context.Context) DataBoxDiskCopyProgressResponseArrayOutput
}

type DataBoxDiskCopyProgressResponseArray []DataBoxDiskCopyProgressResponseInput

func (DataBoxDiskCopyProgressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (i DataBoxDiskCopyProgressResponseArray) ToDataBoxDiskCopyProgressResponseArrayOutput() DataBoxDiskCopyProgressResponseArrayOutput {
	return i.ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(context.Background())
}

func (i DataBoxDiskCopyProgressResponseArray) ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskCopyProgressResponseArrayOutput)
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutput() DataBoxDiskCopyProgressResponseOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseOutput) ToDataBoxDiskCopyProgressResponseOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseOutput {
	return o
}

// Bytes copied during the copy of disk.
func (o DataBoxDiskCopyProgressResponseOutput) BytesCopied() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) int { return v.BytesCopied }).(pulumi.IntOutput)
}

// Indicates the percentage completed for the copy of the disk.
func (o DataBoxDiskCopyProgressResponseOutput) PercentComplete() pulumi.IntOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) int { return v.PercentComplete }).(pulumi.IntOutput)
}

// The serial number of the disk
func (o DataBoxDiskCopyProgressResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The Status of the copy
func (o DataBoxDiskCopyProgressResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskCopyProgressResponse) string { return v.Status }).(pulumi.StringOutput)
}

type DataBoxDiskCopyProgressResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxDiskCopyProgressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxDiskCopyProgressResponse)(nil)).Elem()
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutput() DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) ToDataBoxDiskCopyProgressResponseArrayOutputWithContext(ctx context.Context) DataBoxDiskCopyProgressResponseArrayOutput {
	return o
}

func (o DataBoxDiskCopyProgressResponseArrayOutput) Index(i pulumi.IntInput) DataBoxDiskCopyProgressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxDiskCopyProgressResponse {
		return vs[0].([]DataBoxDiskCopyProgressResponse)[vs[1].(int)]
	}).(DataBoxDiskCopyProgressResponseOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxDiskJobDetailsInput is an input type that accepts DataBoxDiskJobDetailsArgs and DataBoxDiskJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxDiskJobDetailsInput` via:
//
//          DataBoxDiskJobDetailsArgs{...}
type DataBoxDiskJobDetailsInput interface {
	pulumi.Input

	ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput
	ToDataBoxDiskJobDetailsOutputWithContext(context.Context) DataBoxDiskJobDetailsOutput
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// User entered passkey for DataBox Disk job.
	Passkey pulumi.StringPtrInput `pulumi:"passkey"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks pulumi.IntMapInput `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxDiskJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetails)(nil)).Elem()
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput {
	return i.ToDataBoxDiskJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxDiskJobDetailsArgs) ToDataBoxDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetails)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsOutput() DataBoxDiskJobDetailsOutput {
	return o
}

func (o DataBoxDiskJobDetailsOutput) ToDataBoxDiskJobDetailsOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsOutput {
	return o
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxDiskJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *string { return v.Passkey }).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) map[string]int { return v.PreferredDisks }).(pulumi.IntMapOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxDiskCopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails map[string]int `pulumi:"disksAndSizeDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// DataBoxDiskJobDetailsResponseInput is an input type that accepts DataBoxDiskJobDetailsResponseArgs and DataBoxDiskJobDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxDiskJobDetailsResponseInput` via:
//
//          DataBoxDiskJobDetailsResponseArgs{...}
type DataBoxDiskJobDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxDiskJobDetailsResponseOutput() DataBoxDiskJobDetailsResponseOutput
	ToDataBoxDiskJobDetailsResponseOutputWithContext(context.Context) DataBoxDiskJobDetailsResponseOutput
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponseArgs struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey pulumi.StringInput `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponseInput `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails pulumi.ArrayInput `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress DataBoxDiskCopyProgressResponseArrayInput `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsResponseArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsResponseArrayInput `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponseInput `pulumi:"deliveryPackage"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails pulumi.IntMapInput `pulumi:"disksAndSizeDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages JobStagesResponseArrayInput `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponseInput `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey pulumi.StringPtrInput `pulumi:"passkey"`
	// Preferences for the order.
	Preferences PreferencesResponsePtrInput `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks pulumi.IntMapInput `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponseInput `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey pulumi.StringInput `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponsePtrInput `pulumi:"shippingAddress"`
}

func (DataBoxDiskJobDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetailsResponse)(nil)).Elem()
}

func (i DataBoxDiskJobDetailsResponseArgs) ToDataBoxDiskJobDetailsResponseOutput() DataBoxDiskJobDetailsResponseOutput {
	return i.ToDataBoxDiskJobDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxDiskJobDetailsResponseArgs) ToDataBoxDiskJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobDetailsResponseOutput)
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutput() DataBoxDiskJobDetailsResponseOutput {
	return o
}

func (o DataBoxDiskJobDetailsResponseOutput) ToDataBoxDiskJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxDiskJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxDiskJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxDiskJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per disk.
func (o DataBoxDiskJobDetailsResponseOutput) CopyProgress() DataBoxDiskCopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataBoxDiskCopyProgressResponse { return v.CopyProgress }).(DataBoxDiskCopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxDiskJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
func (o DataBoxDiskJobDetailsResponseOutput) DisksAndSizeDetails() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.DisksAndSizeDetails }).(pulumi.IntMapOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxDiskJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxDiskJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxDiskJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxDiskJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// User entered passkey for DataBox Disk job.
func (o DataBoxDiskJobDetailsResponseOutput) Passkey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *string { return v.Passkey }).(pulumi.StringPtrOutput)
}

// Preferences for the order.
func (o DataBoxDiskJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
func (o DataBoxDiskJobDetailsResponseOutput) PreferredDisks() pulumi.IntMapOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) map[string]int { return v.PreferredDisks }).(pulumi.IntMapOutput)
}

// Return package shipping details.
func (o DataBoxDiskJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxDiskJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxDiskJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxDiskJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined bool `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey string `pulumi:"passKey"`
}

// DataBoxDiskJobSecretsResponseInput is an input type that accepts DataBoxDiskJobSecretsResponseArgs and DataBoxDiskJobSecretsResponseOutput values.
// You can construct a concrete instance of `DataBoxDiskJobSecretsResponseInput` via:
//
//          DataBoxDiskJobSecretsResponseArgs{...}
type DataBoxDiskJobSecretsResponseInput interface {
	pulumi.Input

	ToDataBoxDiskJobSecretsResponseOutput() DataBoxDiskJobSecretsResponseOutput
	ToDataBoxDiskJobSecretsResponseOutputWithContext(context.Context) DataBoxDiskJobSecretsResponseOutput
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponseArgs struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponseInput `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets DiskSecretResponseArrayInput `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponseInput `pulumi:"error"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined pulumi.BoolInput `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	JobSecretsType pulumi.StringInput `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey pulumi.StringInput `pulumi:"passKey"`
}

func (DataBoxDiskJobSecretsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobSecretsResponse)(nil)).Elem()
}

func (i DataBoxDiskJobSecretsResponseArgs) ToDataBoxDiskJobSecretsResponseOutput() DataBoxDiskJobSecretsResponseOutput {
	return i.ToDataBoxDiskJobSecretsResponseOutputWithContext(context.Background())
}

func (i DataBoxDiskJobSecretsResponseArgs) ToDataBoxDiskJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobSecretsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxDiskJobSecretsResponseOutput)
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxDiskJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxDiskJobSecretsResponse)(nil)).Elem()
}

func (o DataBoxDiskJobSecretsResponseOutput) ToDataBoxDiskJobSecretsResponseOutput() DataBoxDiskJobSecretsResponseOutput {
	return o
}

func (o DataBoxDiskJobSecretsResponseOutput) ToDataBoxDiskJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxDiskJobSecretsResponseOutput {
	return o
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataBoxDiskJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Contains the list of secrets object for that device.
func (o DataBoxDiskJobSecretsResponseOutput) DiskSecrets() DiskSecretResponseArrayOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) []DiskSecretResponse { return v.DiskSecrets }).(DiskSecretResponseArrayOutput)
}

// Error while fetching the secrets.
func (o DataBoxDiskJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Whether passkey was provided by user.
func (o DataBoxDiskJobSecretsResponseOutput) IsPasskeyUserDefined() pulumi.BoolOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) bool { return v.IsPasskeyUserDefined }).(pulumi.BoolOutput)
}

// Used to indicate what type of job secrets object.
func (o DataBoxDiskJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// PassKey for the disk Job.
func (o DataBoxDiskJobSecretsResponseOutput) PassKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxDiskJobSecretsResponse) string { return v.PassKey }).(pulumi.StringOutput)
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink []string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
	CopyVerboseLogLink []string `pulumi:"copyVerboseLogLink"`
}

// DataBoxHeavyAccountCopyLogDetailsResponseInput is an input type that accepts DataBoxHeavyAccountCopyLogDetailsResponseArgs and DataBoxHeavyAccountCopyLogDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxHeavyAccountCopyLogDetailsResponseInput` via:
//
//          DataBoxHeavyAccountCopyLogDetailsResponseArgs{...}
type DataBoxHeavyAccountCopyLogDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxHeavyAccountCopyLogDetailsResponseOutput() DataBoxHeavyAccountCopyLogDetailsResponseOutput
	ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(context.Context) DataBoxHeavyAccountCopyLogDetailsResponseOutput
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponseArgs struct {
	// Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Indicates the type of job details.
	CopyLogDetailsType pulumi.StringInput `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink pulumi.StringArrayInput `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
	CopyVerboseLogLink pulumi.StringArrayInput `pulumi:"copyVerboseLogLink"`
}

func (DataBoxHeavyAccountCopyLogDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (i DataBoxHeavyAccountCopyLogDetailsResponseArgs) ToDataBoxHeavyAccountCopyLogDetailsResponseOutput() DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return i.ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxHeavyAccountCopyLogDetailsResponseArgs) ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyAccountCopyLogDetailsResponseOutput)
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyAccountCopyLogDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyAccountCopyLogDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutput() DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) ToDataBoxHeavyAccountCopyLogDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyAccountCopyLogDetailsResponseOutput {
	return o
}

// Account name.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.AccountName }).(pulumi.StringOutput)
}

// Indicates the type of job details.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) string { return v.CopyLogDetailsType }).(pulumi.StringOutput)
}

// Link for copy logs.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyLogLink }).(pulumi.StringArrayOutput)
}

// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
func (o DataBoxHeavyAccountCopyLogDetailsResponseOutput) CopyVerboseLogLink() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyAccountCopyLogDetailsResponse) []string { return v.CopyVerboseLogLink }).(pulumi.StringArrayOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxHeavyJobDetailsInput is an input type that accepts DataBoxHeavyJobDetailsArgs and DataBoxHeavyJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobDetailsInput` via:
//
//          DataBoxHeavyJobDetailsArgs{...}
type DataBoxHeavyJobDetailsInput interface {
	pulumi.Input

	ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput
	ToDataBoxHeavyJobDetailsOutputWithContext(context.Context) DataBoxHeavyJobDetailsOutput
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxHeavyJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetails)(nil)).Elem()
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput {
	return i.ToDataBoxHeavyJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobDetailsArgs) ToDataBoxHeavyJobDetailsOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetails)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsOutput() DataBoxHeavyJobDetailsOutput {
	return o
}

func (o DataBoxHeavyJobDetailsOutput) ToDataBoxHeavyJobDetailsOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsOutput {
	return o
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxHeavyJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// DataBoxHeavyJobDetailsResponseInput is an input type that accepts DataBoxHeavyJobDetailsResponseArgs and DataBoxHeavyJobDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobDetailsResponseInput` via:
//
//          DataBoxHeavyJobDetailsResponseArgs{...}
type DataBoxHeavyJobDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxHeavyJobDetailsResponseOutput() DataBoxHeavyJobDetailsResponseOutput
	ToDataBoxHeavyJobDetailsResponseOutputWithContext(context.Context) DataBoxHeavyJobDetailsResponseOutput
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponseArgs struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey pulumi.StringInput `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponseInput `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails pulumi.ArrayInput `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress CopyProgressResponseArrayInput `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsResponseArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsResponseArrayInput `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponseInput `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages JobStagesResponseArrayInput `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponseInput `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences PreferencesResponsePtrInput `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponseInput `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey pulumi.StringInput `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponsePtrInput `pulumi:"shippingAddress"`
}

func (DataBoxHeavyJobDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetailsResponse)(nil)).Elem()
}

func (i DataBoxHeavyJobDetailsResponseArgs) ToDataBoxHeavyJobDetailsResponseOutput() DataBoxHeavyJobDetailsResponseOutput {
	return i.ToDataBoxHeavyJobDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobDetailsResponseArgs) ToDataBoxHeavyJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobDetailsResponseOutput)
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutput() DataBoxHeavyJobDetailsResponseOutput {
	return o
}

func (o DataBoxHeavyJobDetailsResponseOutput) ToDataBoxHeavyJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxHeavyJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxHeavyJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per account.
func (o DataBoxHeavyJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxHeavyJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxHeavyJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxHeavyJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxHeavyJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxHeavyJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxHeavyJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// Preferences for the order.
func (o DataBoxHeavyJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxHeavyJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxHeavyJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxHeavyJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxHeavyJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponse struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets []DataBoxHeavySecretResponse `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// DataBoxHeavyJobSecretsResponseInput is an input type that accepts DataBoxHeavyJobSecretsResponseArgs and DataBoxHeavyJobSecretsResponseOutput values.
// You can construct a concrete instance of `DataBoxHeavyJobSecretsResponseInput` via:
//
//          DataBoxHeavyJobSecretsResponseArgs{...}
type DataBoxHeavyJobSecretsResponseInput interface {
	pulumi.Input

	ToDataBoxHeavyJobSecretsResponseOutput() DataBoxHeavyJobSecretsResponseOutput
	ToDataBoxHeavyJobSecretsResponseOutputWithContext(context.Context) DataBoxHeavyJobSecretsResponseOutput
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponseArgs struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets DataBoxHeavySecretResponseArrayInput `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponseInput `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponseInput `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType pulumi.StringInput `pulumi:"jobSecretsType"`
}

func (DataBoxHeavyJobSecretsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobSecretsResponse)(nil)).Elem()
}

func (i DataBoxHeavyJobSecretsResponseArgs) ToDataBoxHeavyJobSecretsResponseOutput() DataBoxHeavyJobSecretsResponseOutput {
	return i.ToDataBoxHeavyJobSecretsResponseOutputWithContext(context.Background())
}

func (i DataBoxHeavyJobSecretsResponseArgs) ToDataBoxHeavyJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobSecretsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavyJobSecretsResponseOutput)
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavyJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavyJobSecretsResponse)(nil)).Elem()
}

func (o DataBoxHeavyJobSecretsResponseOutput) ToDataBoxHeavyJobSecretsResponseOutput() DataBoxHeavyJobSecretsResponseOutput {
	return o
}

func (o DataBoxHeavyJobSecretsResponseOutput) ToDataBoxHeavyJobSecretsResponseOutputWithContext(ctx context.Context) DataBoxHeavyJobSecretsResponseOutput {
	return o
}

// Contains the list of secret objects for a databox heavy job.
func (o DataBoxHeavyJobSecretsResponseOutput) CabinetPodSecrets() DataBoxHeavySecretResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) []DataBoxHeavySecretResponse { return v.CabinetPodSecrets }).(DataBoxHeavySecretResponseArrayOutput)
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataBoxHeavyJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Error while fetching the secrets.
func (o DataBoxHeavyJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Used to indicate what type of job secrets object.
func (o DataBoxHeavyJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavyJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// DataBoxHeavySecretResponseInput is an input type that accepts DataBoxHeavySecretResponseArgs and DataBoxHeavySecretResponseOutput values.
// You can construct a concrete instance of `DataBoxHeavySecretResponseInput` via:
//
//          DataBoxHeavySecretResponseArgs{...}
type DataBoxHeavySecretResponseInput interface {
	pulumi.Input

	ToDataBoxHeavySecretResponseOutput() DataBoxHeavySecretResponseOutput
	ToDataBoxHeavySecretResponseOutputWithContext(context.Context) DataBoxHeavySecretResponseOutput
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponseArgs struct {
	// Per account level access credentials.
	AccountCredentialDetails AccountCredentialDetailsResponseArrayInput `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword pulumi.StringInput `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber pulumi.StringInput `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey pulumi.StringInput `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations ApplianceNetworkConfigurationResponseArrayInput `pulumi:"networkConfigurations"`
}

func (DataBoxHeavySecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavySecretResponse)(nil)).Elem()
}

func (i DataBoxHeavySecretResponseArgs) ToDataBoxHeavySecretResponseOutput() DataBoxHeavySecretResponseOutput {
	return i.ToDataBoxHeavySecretResponseOutputWithContext(context.Background())
}

func (i DataBoxHeavySecretResponseArgs) ToDataBoxHeavySecretResponseOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavySecretResponseOutput)
}

// DataBoxHeavySecretResponseArrayInput is an input type that accepts DataBoxHeavySecretResponseArray and DataBoxHeavySecretResponseArrayOutput values.
// You can construct a concrete instance of `DataBoxHeavySecretResponseArrayInput` via:
//
//          DataBoxHeavySecretResponseArray{ DataBoxHeavySecretResponseArgs{...} }
type DataBoxHeavySecretResponseArrayInput interface {
	pulumi.Input

	ToDataBoxHeavySecretResponseArrayOutput() DataBoxHeavySecretResponseArrayOutput
	ToDataBoxHeavySecretResponseArrayOutputWithContext(context.Context) DataBoxHeavySecretResponseArrayOutput
}

type DataBoxHeavySecretResponseArray []DataBoxHeavySecretResponseInput

func (DataBoxHeavySecretResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxHeavySecretResponse)(nil)).Elem()
}

func (i DataBoxHeavySecretResponseArray) ToDataBoxHeavySecretResponseArrayOutput() DataBoxHeavySecretResponseArrayOutput {
	return i.ToDataBoxHeavySecretResponseArrayOutputWithContext(context.Background())
}

func (i DataBoxHeavySecretResponseArray) ToDataBoxHeavySecretResponseArrayOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxHeavySecretResponseArrayOutput)
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponseOutput struct{ *pulumi.OutputState }

func (DataBoxHeavySecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxHeavySecretResponse)(nil)).Elem()
}

func (o DataBoxHeavySecretResponseOutput) ToDataBoxHeavySecretResponseOutput() DataBoxHeavySecretResponseOutput {
	return o
}

func (o DataBoxHeavySecretResponseOutput) ToDataBoxHeavySecretResponseOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseOutput {
	return o
}

// Per account level access credentials.
func (o DataBoxHeavySecretResponseOutput) AccountCredentialDetails() AccountCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) []AccountCredentialDetailsResponse {
		return v.AccountCredentialDetails
	}).(AccountCredentialDetailsResponseArrayOutput)
}

// Password for out of the box experience on device.
func (o DataBoxHeavySecretResponseOutput) DevicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.DevicePassword }).(pulumi.StringOutput)
}

// Serial number of the assigned device.
func (o DataBoxHeavySecretResponseOutput) DeviceSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.DeviceSerialNumber }).(pulumi.StringOutput)
}

// The base 64 encoded public key to authenticate with the device
func (o DataBoxHeavySecretResponseOutput) EncodedValidationCertPubKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) string { return v.EncodedValidationCertPubKey }).(pulumi.StringOutput)
}

// Network configuration of the appliance.
func (o DataBoxHeavySecretResponseOutput) NetworkConfigurations() ApplianceNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataBoxHeavySecretResponse) []ApplianceNetworkConfigurationResponse {
		return v.NetworkConfigurations
	}).(ApplianceNetworkConfigurationResponseArrayOutput)
}

type DataBoxHeavySecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxHeavySecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxHeavySecretResponse)(nil)).Elem()
}

func (o DataBoxHeavySecretResponseArrayOutput) ToDataBoxHeavySecretResponseArrayOutput() DataBoxHeavySecretResponseArrayOutput {
	return o
}

func (o DataBoxHeavySecretResponseArrayOutput) ToDataBoxHeavySecretResponseArrayOutputWithContext(ctx context.Context) DataBoxHeavySecretResponseArrayOutput {
	return o
}

func (o DataBoxHeavySecretResponseArrayOutput) Index(i pulumi.IntInput) DataBoxHeavySecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxHeavySecretResponse {
		return vs[0].([]DataBoxHeavySecretResponse)[vs[1].(int)]
	}).(DataBoxHeavySecretResponseOutput)
}

// Databox Job Details
type DataBoxJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// DataBoxJobDetailsInput is an input type that accepts DataBoxJobDetailsArgs and DataBoxJobDetailsOutput values.
// You can construct a concrete instance of `DataBoxJobDetailsInput` via:
//
//          DataBoxJobDetailsArgs{...}
type DataBoxJobDetailsInput interface {
	pulumi.Input

	ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput
	ToDataBoxJobDetailsOutputWithContext(context.Context) DataBoxJobDetailsOutput
}

// Databox Job Details
type DataBoxJobDetailsArgs struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsArrayInput `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (DataBoxJobDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetails)(nil)).Elem()
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput {
	return i.ToDataBoxJobDetailsOutputWithContext(context.Background())
}

func (i DataBoxJobDetailsArgs) ToDataBoxJobDetailsOutputWithContext(ctx context.Context) DataBoxJobDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsOutput)
}

// Databox Job Details
type DataBoxJobDetailsOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetails)(nil)).Elem()
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsOutput() DataBoxJobDetailsOutput {
	return o
}

func (o DataBoxJobDetailsOutput) ToDataBoxJobDetailsOutputWithContext(ctx context.Context) DataBoxJobDetailsOutput {
	return o
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v DataBoxJobDetails) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsOutput) DataExportDetails() DataExportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetails) []DataExportDetails { return v.DataExportDetails }).(DataExportDetailsArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsOutput) DataImportDetails() DataImportDetailsArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetails) []DataImportDetails { return v.DataImportDetails }).(DataImportDetailsArrayOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxJobDetailsOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetails) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetails) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

// Databox Job Details
type DataBoxJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes *int `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// DataBoxJobDetailsResponseInput is an input type that accepts DataBoxJobDetailsResponseArgs and DataBoxJobDetailsResponseOutput values.
// You can construct a concrete instance of `DataBoxJobDetailsResponseInput` via:
//
//          DataBoxJobDetailsResponseArgs{...}
type DataBoxJobDetailsResponseInput interface {
	pulumi.Input

	ToDataBoxJobDetailsResponseOutput() DataBoxJobDetailsResponseOutput
	ToDataBoxJobDetailsResponseOutputWithContext(context.Context) DataBoxJobDetailsResponseOutput
}

// Databox Job Details
type DataBoxJobDetailsResponseArgs struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey pulumi.StringInput `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponseInput `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails pulumi.ArrayInput `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress CopyProgressResponseArrayInput `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails DataExportDetailsResponseArrayInput `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails DataImportDetailsResponseArrayInput `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponseInput `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword pulumi.StringPtrInput `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTerabytes pulumi.IntPtrInput `pulumi:"expectedDataSizeInTerabytes"`
	// Indicates the type of job details.
	JobDetailsType pulumi.StringInput `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages JobStagesResponseArrayInput `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey KeyEncryptionKeyResponseInput `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences PreferencesResponsePtrInput `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponseInput `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey pulumi.StringInput `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponsePtrInput `pulumi:"shippingAddress"`
}

func (DataBoxJobDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetailsResponse)(nil)).Elem()
}

func (i DataBoxJobDetailsResponseArgs) ToDataBoxJobDetailsResponseOutput() DataBoxJobDetailsResponseOutput {
	return i.ToDataBoxJobDetailsResponseOutputWithContext(context.Background())
}

func (i DataBoxJobDetailsResponseArgs) ToDataBoxJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxJobDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxJobDetailsResponseOutput)
}

// Databox Job Details
type DataBoxJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataBoxJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxJobDetailsResponse)(nil)).Elem()
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutput() DataBoxJobDetailsResponseOutput {
	return o
}

func (o DataBoxJobDetailsResponseOutput) ToDataBoxJobDetailsResponseOutputWithContext(ctx context.Context) DataBoxJobDetailsResponseOutput {
	return o
}

// Shared access key to download the chain of custody logs
func (o DataBoxJobDetailsResponseOutput) ChainOfCustodySasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ChainOfCustodySasKey }).(pulumi.StringOutput)
}

// Contact details for notification and shipping.
func (o DataBoxJobDetailsResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// List of copy log details.
func (o DataBoxJobDetailsResponseOutput) CopyLogDetails() pulumi.ArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []interface{} { return v.CopyLogDetails }).(pulumi.ArrayOutput)
}

// Copy progress per storage account.
func (o DataBoxJobDetailsResponseOutput) CopyProgress() CopyProgressResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []CopyProgressResponse { return v.CopyProgress }).(CopyProgressResponseArrayOutput)
}

// Details of the data to be exported from azure.
func (o DataBoxJobDetailsResponseOutput) DataExportDetails() DataExportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataExportDetailsResponse { return v.DataExportDetails }).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be imported into azure.
func (o DataBoxJobDetailsResponseOutput) DataImportDetails() DataImportDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []DataImportDetailsResponse { return v.DataImportDetails }).(DataImportDetailsResponseArrayOutput)
}

// Delivery package shipping details.
func (o DataBoxJobDetailsResponseOutput) DeliveryPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.DeliveryPackage }).(PackageShippingDetailsResponseOutput)
}

// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o DataBoxJobDetailsResponseOutput) DevicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *string { return v.DevicePassword }).(pulumi.StringPtrOutput)
}

// The expected size of the data, which needs to be transferred in this job, in terabytes.
func (o DataBoxJobDetailsResponseOutput) ExpectedDataSizeInTerabytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *int { return v.ExpectedDataSizeInTerabytes }).(pulumi.IntPtrOutput)
}

// Indicates the type of job details.
func (o DataBoxJobDetailsResponseOutput) JobDetailsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.JobDetailsType }).(pulumi.StringOutput)
}

// List of stages that run in the job.
func (o DataBoxJobDetailsResponseOutput) JobStages() JobStagesResponseArrayOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) []JobStagesResponse { return v.JobStages }).(JobStagesResponseArrayOutput)
}

// Details about which key encryption type is being used.
func (o DataBoxJobDetailsResponseOutput) KeyEncryptionKey() KeyEncryptionKeyResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) KeyEncryptionKeyResponse { return v.KeyEncryptionKey }).(KeyEncryptionKeyResponseOutput)
}

// Preferences for the order.
func (o DataBoxJobDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Return package shipping details.
func (o DataBoxJobDetailsResponseOutput) ReturnPackage() PackageShippingDetailsResponseOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) PackageShippingDetailsResponse { return v.ReturnPackage }).(PackageShippingDetailsResponseOutput)
}

// Shared access key to download the return shipment label
func (o DataBoxJobDetailsResponseOutput) ReverseShipmentLabelSasKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) string { return v.ReverseShipmentLabelSasKey }).(pulumi.StringOutput)
}

// Shipping address of the customer.
func (o DataBoxJobDetailsResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v DataBoxJobDetailsResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// The secrets related to a DataBox.
type DataBoxSecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// DataBoxSecretResponseInput is an input type that accepts DataBoxSecretResponseArgs and DataBoxSecretResponseOutput values.
// You can construct a concrete instance of `DataBoxSecretResponseInput` via:
//
//          DataBoxSecretResponseArgs{...}
type DataBoxSecretResponseInput interface {
	pulumi.Input

	ToDataBoxSecretResponseOutput() DataBoxSecretResponseOutput
	ToDataBoxSecretResponseOutputWithContext(context.Context) DataBoxSecretResponseOutput
}

// The secrets related to a DataBox.
type DataBoxSecretResponseArgs struct {
	// Per account level access credentials.
	AccountCredentialDetails AccountCredentialDetailsResponseArrayInput `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword pulumi.StringInput `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber pulumi.StringInput `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey pulumi.StringInput `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations ApplianceNetworkConfigurationResponseArrayInput `pulumi:"networkConfigurations"`
}

func (DataBoxSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxSecretResponse)(nil)).Elem()
}

func (i DataBoxSecretResponseArgs) ToDataBoxSecretResponseOutput() DataBoxSecretResponseOutput {
	return i.ToDataBoxSecretResponseOutputWithContext(context.Background())
}

func (i DataBoxSecretResponseArgs) ToDataBoxSecretResponseOutputWithContext(ctx context.Context) DataBoxSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxSecretResponseOutput)
}

// DataBoxSecretResponseArrayInput is an input type that accepts DataBoxSecretResponseArray and DataBoxSecretResponseArrayOutput values.
// You can construct a concrete instance of `DataBoxSecretResponseArrayInput` via:
//
//          DataBoxSecretResponseArray{ DataBoxSecretResponseArgs{...} }
type DataBoxSecretResponseArrayInput interface {
	pulumi.Input

	ToDataBoxSecretResponseArrayOutput() DataBoxSecretResponseArrayOutput
	ToDataBoxSecretResponseArrayOutputWithContext(context.Context) DataBoxSecretResponseArrayOutput
}

type DataBoxSecretResponseArray []DataBoxSecretResponseInput

func (DataBoxSecretResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxSecretResponse)(nil)).Elem()
}

func (i DataBoxSecretResponseArray) ToDataBoxSecretResponseArrayOutput() DataBoxSecretResponseArrayOutput {
	return i.ToDataBoxSecretResponseArrayOutputWithContext(context.Background())
}

func (i DataBoxSecretResponseArray) ToDataBoxSecretResponseArrayOutputWithContext(ctx context.Context) DataBoxSecretResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataBoxSecretResponseArrayOutput)
}

// The secrets related to a DataBox.
type DataBoxSecretResponseOutput struct{ *pulumi.OutputState }

func (DataBoxSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxSecretResponse)(nil)).Elem()
}

func (o DataBoxSecretResponseOutput) ToDataBoxSecretResponseOutput() DataBoxSecretResponseOutput {
	return o
}

func (o DataBoxSecretResponseOutput) ToDataBoxSecretResponseOutputWithContext(ctx context.Context) DataBoxSecretResponseOutput {
	return o
}

// Per account level access credentials.
func (o DataBoxSecretResponseOutput) AccountCredentialDetails() AccountCredentialDetailsResponseArrayOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) []AccountCredentialDetailsResponse { return v.AccountCredentialDetails }).(AccountCredentialDetailsResponseArrayOutput)
}

// Password for out of the box experience on device.
func (o DataBoxSecretResponseOutput) DevicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.DevicePassword }).(pulumi.StringOutput)
}

// Serial number of the assigned device.
func (o DataBoxSecretResponseOutput) DeviceSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.DeviceSerialNumber }).(pulumi.StringOutput)
}

// The base 64 encoded public key to authenticate with the device
func (o DataBoxSecretResponseOutput) EncodedValidationCertPubKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) string { return v.EncodedValidationCertPubKey }).(pulumi.StringOutput)
}

// Network configuration of the appliance.
func (o DataBoxSecretResponseOutput) NetworkConfigurations() ApplianceNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v DataBoxSecretResponse) []ApplianceNetworkConfigurationResponse { return v.NetworkConfigurations }).(ApplianceNetworkConfigurationResponseArrayOutput)
}

type DataBoxSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DataBoxSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataBoxSecretResponse)(nil)).Elem()
}

func (o DataBoxSecretResponseArrayOutput) ToDataBoxSecretResponseArrayOutput() DataBoxSecretResponseArrayOutput {
	return o
}

func (o DataBoxSecretResponseArrayOutput) ToDataBoxSecretResponseArrayOutputWithContext(ctx context.Context) DataBoxSecretResponseArrayOutput {
	return o
}

func (o DataBoxSecretResponseArrayOutput) Index(i pulumi.IntInput) DataBoxSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataBoxSecretResponse {
		return vs[0].([]DataBoxSecretResponse)[vs[1].(int)]
	}).(DataBoxSecretResponseOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfiguration `pulumi:"transferConfiguration"`
}

// DataExportDetailsInput is an input type that accepts DataExportDetailsArgs and DataExportDetailsOutput values.
// You can construct a concrete instance of `DataExportDetailsInput` via:
//
//          DataExportDetailsArgs{...}
type DataExportDetailsInput interface {
	pulumi.Input

	ToDataExportDetailsOutput() DataExportDetailsOutput
	ToDataExportDetailsOutputWithContext(context.Context) DataExportDetailsOutput
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel pulumi.StringPtrInput `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationInput `pulumi:"transferConfiguration"`
}

func (DataExportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutput() DataExportDetailsOutput {
	return i.ToDataExportDetailsOutputWithContext(context.Background())
}

func (i DataExportDetailsArgs) ToDataExportDetailsOutputWithContext(ctx context.Context) DataExportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsOutput)
}

// DataExportDetailsArrayInput is an input type that accepts DataExportDetailsArray and DataExportDetailsArrayOutput values.
// You can construct a concrete instance of `DataExportDetailsArrayInput` via:
//
//          DataExportDetailsArray{ DataExportDetailsArgs{...} }
type DataExportDetailsArrayInput interface {
	pulumi.Input

	ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput
	ToDataExportDetailsArrayOutputWithContext(context.Context) DataExportDetailsArrayOutput
}

type DataExportDetailsArray []DataExportDetailsInput

func (DataExportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetails)(nil)).Elem()
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput {
	return i.ToDataExportDetailsArrayOutputWithContext(context.Background())
}

func (i DataExportDetailsArray) ToDataExportDetailsArrayOutputWithContext(ctx context.Context) DataExportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsArrayOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsOutput struct{ *pulumi.OutputState }

func (DataExportDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetails)(nil)).Elem()
}

func (o DataExportDetailsOutput) ToDataExportDetailsOutput() DataExportDetailsOutput {
	return o
}

func (o DataExportDetailsOutput) ToDataExportDetailsOutputWithContext(ctx context.Context) DataExportDetailsOutput {
	return o
}

// Account details of the data to be transferred
func (o DataExportDetailsOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataExportDetails) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataExportDetailsOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExportDetails) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

// Configuration for the data transfer.
func (o DataExportDetailsOutput) TransferConfiguration() TransferConfigurationOutput {
	return o.ApplyT(func(v DataExportDetails) TransferConfiguration { return v.TransferConfiguration }).(TransferConfigurationOutput)
}

type DataExportDetailsArrayOutput struct{ *pulumi.OutputState }

func (DataExportDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetails)(nil)).Elem()
}

func (o DataExportDetailsArrayOutput) ToDataExportDetailsArrayOutput() DataExportDetailsArrayOutput {
	return o
}

func (o DataExportDetailsArrayOutput) ToDataExportDetailsArrayOutputWithContext(ctx context.Context) DataExportDetailsArrayOutput {
	return o
}

func (o DataExportDetailsArrayOutput) Index(i pulumi.IntInput) DataExportDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExportDetails {
		return vs[0].([]DataExportDetails)[vs[1].(int)]
	}).(DataExportDetailsOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationResponse `pulumi:"transferConfiguration"`
}

// DataExportDetailsResponseInput is an input type that accepts DataExportDetailsResponseArgs and DataExportDetailsResponseOutput values.
// You can construct a concrete instance of `DataExportDetailsResponseInput` via:
//
//          DataExportDetailsResponseArgs{...}
type DataExportDetailsResponseInput interface {
	pulumi.Input

	ToDataExportDetailsResponseOutput() DataExportDetailsResponseOutput
	ToDataExportDetailsResponseOutputWithContext(context.Context) DataExportDetailsResponseOutput
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponseArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel pulumi.StringPtrInput `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationResponseInput `pulumi:"transferConfiguration"`
}

func (DataExportDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetailsResponse)(nil)).Elem()
}

func (i DataExportDetailsResponseArgs) ToDataExportDetailsResponseOutput() DataExportDetailsResponseOutput {
	return i.ToDataExportDetailsResponseOutputWithContext(context.Background())
}

func (i DataExportDetailsResponseArgs) ToDataExportDetailsResponseOutputWithContext(ctx context.Context) DataExportDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsResponseOutput)
}

// DataExportDetailsResponseArrayInput is an input type that accepts DataExportDetailsResponseArray and DataExportDetailsResponseArrayOutput values.
// You can construct a concrete instance of `DataExportDetailsResponseArrayInput` via:
//
//          DataExportDetailsResponseArray{ DataExportDetailsResponseArgs{...} }
type DataExportDetailsResponseArrayInput interface {
	pulumi.Input

	ToDataExportDetailsResponseArrayOutput() DataExportDetailsResponseArrayOutput
	ToDataExportDetailsResponseArrayOutputWithContext(context.Context) DataExportDetailsResponseArrayOutput
}

type DataExportDetailsResponseArray []DataExportDetailsResponseInput

func (DataExportDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetailsResponse)(nil)).Elem()
}

func (i DataExportDetailsResponseArray) ToDataExportDetailsResponseArrayOutput() DataExportDetailsResponseArrayOutput {
	return i.ToDataExportDetailsResponseArrayOutputWithContext(context.Background())
}

func (i DataExportDetailsResponseArray) ToDataExportDetailsResponseArrayOutputWithContext(ctx context.Context) DataExportDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExportDetailsResponseArrayOutput)
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutput() DataExportDetailsResponseOutput {
	return o
}

func (o DataExportDetailsResponseOutput) ToDataExportDetailsResponseOutputWithContext(ctx context.Context) DataExportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataExportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

// Level of the logs to be collected.
func (o DataExportDetailsResponseOutput) LogCollectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) *string { return v.LogCollectionLevel }).(pulumi.StringPtrOutput)
}

// Configuration for the data transfer.
func (o DataExportDetailsResponseOutput) TransferConfiguration() TransferConfigurationResponseOutput {
	return o.ApplyT(func(v DataExportDetailsResponse) TransferConfigurationResponse { return v.TransferConfiguration }).(TransferConfigurationResponseOutput)
}

type DataExportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataExportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataExportDetailsResponse)(nil)).Elem()
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutput() DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) ToDataExportDetailsResponseArrayOutputWithContext(ctx context.Context) DataExportDetailsResponseArrayOutput {
	return o
}

func (o DataExportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataExportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataExportDetailsResponse {
		return vs[0].([]DataExportDetailsResponse)[vs[1].(int)]
	}).(DataExportDetailsResponseOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// DataImportDetailsInput is an input type that accepts DataImportDetailsArgs and DataImportDetailsOutput values.
// You can construct a concrete instance of `DataImportDetailsInput` via:
//
//          DataImportDetailsArgs{...}
type DataImportDetailsInput interface {
	pulumi.Input

	ToDataImportDetailsOutput() DataImportDetailsOutput
	ToDataImportDetailsOutputWithContext(context.Context) DataImportDetailsOutput
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
}

func (DataImportDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutput() DataImportDetailsOutput {
	return i.ToDataImportDetailsOutputWithContext(context.Background())
}

func (i DataImportDetailsArgs) ToDataImportDetailsOutputWithContext(ctx context.Context) DataImportDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsOutput)
}

// DataImportDetailsArrayInput is an input type that accepts DataImportDetailsArray and DataImportDetailsArrayOutput values.
// You can construct a concrete instance of `DataImportDetailsArrayInput` via:
//
//          DataImportDetailsArray{ DataImportDetailsArgs{...} }
type DataImportDetailsArrayInput interface {
	pulumi.Input

	ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput
	ToDataImportDetailsArrayOutputWithContext(context.Context) DataImportDetailsArrayOutput
}

type DataImportDetailsArray []DataImportDetailsInput

func (DataImportDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetails)(nil)).Elem()
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput {
	return i.ToDataImportDetailsArrayOutputWithContext(context.Background())
}

func (i DataImportDetailsArray) ToDataImportDetailsArrayOutputWithContext(ctx context.Context) DataImportDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsArrayOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsOutput struct{ *pulumi.OutputState }

func (DataImportDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetails)(nil)).Elem()
}

func (o DataImportDetailsOutput) ToDataImportDetailsOutput() DataImportDetailsOutput {
	return o
}

func (o DataImportDetailsOutput) ToDataImportDetailsOutputWithContext(ctx context.Context) DataImportDetailsOutput {
	return o
}

// Account details of the data to be transferred
func (o DataImportDetailsOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataImportDetails) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

type DataImportDetailsArrayOutput struct{ *pulumi.OutputState }

func (DataImportDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetails)(nil)).Elem()
}

func (o DataImportDetailsArrayOutput) ToDataImportDetailsArrayOutput() DataImportDetailsArrayOutput {
	return o
}

func (o DataImportDetailsArrayOutput) ToDataImportDetailsArrayOutputWithContext(ctx context.Context) DataImportDetailsArrayOutput {
	return o
}

func (o DataImportDetailsArrayOutput) Index(i pulumi.IntInput) DataImportDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataImportDetails {
		return vs[0].([]DataImportDetails)[vs[1].(int)]
	}).(DataImportDetailsOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// DataImportDetailsResponseInput is an input type that accepts DataImportDetailsResponseArgs and DataImportDetailsResponseOutput values.
// You can construct a concrete instance of `DataImportDetailsResponseInput` via:
//
//          DataImportDetailsResponseArgs{...}
type DataImportDetailsResponseInput interface {
	pulumi.Input

	ToDataImportDetailsResponseOutput() DataImportDetailsResponseOutput
	ToDataImportDetailsResponseOutputWithContext(context.Context) DataImportDetailsResponseOutput
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponseArgs struct {
	// Account details of the data to be transferred
	AccountDetails pulumi.Input `pulumi:"accountDetails"`
}

func (DataImportDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetailsResponse)(nil)).Elem()
}

func (i DataImportDetailsResponseArgs) ToDataImportDetailsResponseOutput() DataImportDetailsResponseOutput {
	return i.ToDataImportDetailsResponseOutputWithContext(context.Background())
}

func (i DataImportDetailsResponseArgs) ToDataImportDetailsResponseOutputWithContext(ctx context.Context) DataImportDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsResponseOutput)
}

// DataImportDetailsResponseArrayInput is an input type that accepts DataImportDetailsResponseArray and DataImportDetailsResponseArrayOutput values.
// You can construct a concrete instance of `DataImportDetailsResponseArrayInput` via:
//
//          DataImportDetailsResponseArray{ DataImportDetailsResponseArgs{...} }
type DataImportDetailsResponseArrayInput interface {
	pulumi.Input

	ToDataImportDetailsResponseArrayOutput() DataImportDetailsResponseArrayOutput
	ToDataImportDetailsResponseArrayOutputWithContext(context.Context) DataImportDetailsResponseArrayOutput
}

type DataImportDetailsResponseArray []DataImportDetailsResponseInput

func (DataImportDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetailsResponse)(nil)).Elem()
}

func (i DataImportDetailsResponseArray) ToDataImportDetailsResponseArrayOutput() DataImportDetailsResponseArrayOutput {
	return i.ToDataImportDetailsResponseArrayOutputWithContext(context.Background())
}

func (i DataImportDetailsResponseArray) ToDataImportDetailsResponseArrayOutputWithContext(ctx context.Context) DataImportDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataImportDetailsResponseArrayOutput)
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutput() DataImportDetailsResponseOutput {
	return o
}

func (o DataImportDetailsResponseOutput) ToDataImportDetailsResponseOutputWithContext(ctx context.Context) DataImportDetailsResponseOutput {
	return o
}

// Account details of the data to be transferred
func (o DataImportDetailsResponseOutput) AccountDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v DataImportDetailsResponse) interface{} { return v.AccountDetails }).(pulumi.AnyOutput)
}

type DataImportDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataImportDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataImportDetailsResponse)(nil)).Elem()
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutput() DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) ToDataImportDetailsResponseArrayOutputWithContext(ctx context.Context) DataImportDetailsResponseArrayOutput {
	return o
}

func (o DataImportDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataImportDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataImportDetailsResponse {
		return vs[0].([]DataImportDetailsResponse)[vs[1].(int)]
	}).(DataImportDetailsResponseOutput)
}

// The secrets related to a databox job.
type DataboxJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets []DataBoxSecretResponse `pulumi:"podSecrets"`
}

// DataboxJobSecretsResponseInput is an input type that accepts DataboxJobSecretsResponseArgs and DataboxJobSecretsResponseOutput values.
// You can construct a concrete instance of `DataboxJobSecretsResponseInput` via:
//
//          DataboxJobSecretsResponseArgs{...}
type DataboxJobSecretsResponseInput interface {
	pulumi.Input

	ToDataboxJobSecretsResponseOutput() DataboxJobSecretsResponseOutput
	ToDataboxJobSecretsResponseOutputWithContext(context.Context) DataboxJobSecretsResponseOutput
}

// The secrets related to a databox job.
type DataboxJobSecretsResponseArgs struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponseInput `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponseInput `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	JobSecretsType pulumi.StringInput `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets DataBoxSecretResponseArrayInput `pulumi:"podSecrets"`
}

func (DataboxJobSecretsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataboxJobSecretsResponse)(nil)).Elem()
}

func (i DataboxJobSecretsResponseArgs) ToDataboxJobSecretsResponseOutput() DataboxJobSecretsResponseOutput {
	return i.ToDataboxJobSecretsResponseOutputWithContext(context.Background())
}

func (i DataboxJobSecretsResponseArgs) ToDataboxJobSecretsResponseOutputWithContext(ctx context.Context) DataboxJobSecretsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataboxJobSecretsResponseOutput)
}

// The secrets related to a databox job.
type DataboxJobSecretsResponseOutput struct{ *pulumi.OutputState }

func (DataboxJobSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataboxJobSecretsResponse)(nil)).Elem()
}

func (o DataboxJobSecretsResponseOutput) ToDataboxJobSecretsResponseOutput() DataboxJobSecretsResponseOutput {
	return o
}

func (o DataboxJobSecretsResponseOutput) ToDataboxJobSecretsResponseOutputWithContext(ctx context.Context) DataboxJobSecretsResponseOutput {
	return o
}

// Dc Access Security Code for Customer Managed Shipping
func (o DataboxJobSecretsResponseOutput) DcAccessSecurityCode() DcAccessSecurityCodeResponseOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) DcAccessSecurityCodeResponse { return v.DcAccessSecurityCode }).(DcAccessSecurityCodeResponseOutput)
}

// Error while fetching the secrets.
func (o DataboxJobSecretsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Used to indicate what type of job secrets object.
func (o DataboxJobSecretsResponseOutput) JobSecretsType() pulumi.StringOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) string { return v.JobSecretsType }).(pulumi.StringOutput)
}

// Contains the list of secret objects for a job.
func (o DataboxJobSecretsResponseOutput) PodSecrets() DataBoxSecretResponseArrayOutput {
	return o.ApplyT(func(v DataboxJobSecretsResponse) []DataBoxSecretResponse { return v.PodSecrets }).(DataBoxSecretResponseArrayOutput)
}

// Dc access security code
type DcAccessSecurityCodeResponse struct {
	// Forward Dc access security code.
	ForwardDcAccessCode *string `pulumi:"forwardDcAccessCode"`
	// Reverse Dc access security code.
	ReverseDcAccessCode *string `pulumi:"reverseDcAccessCode"`
}

// DcAccessSecurityCodeResponseInput is an input type that accepts DcAccessSecurityCodeResponseArgs and DcAccessSecurityCodeResponseOutput values.
// You can construct a concrete instance of `DcAccessSecurityCodeResponseInput` via:
//
//          DcAccessSecurityCodeResponseArgs{...}
type DcAccessSecurityCodeResponseInput interface {
	pulumi.Input

	ToDcAccessSecurityCodeResponseOutput() DcAccessSecurityCodeResponseOutput
	ToDcAccessSecurityCodeResponseOutputWithContext(context.Context) DcAccessSecurityCodeResponseOutput
}

// Dc access security code
type DcAccessSecurityCodeResponseArgs struct {
	// Forward Dc access security code.
	ForwardDcAccessCode pulumi.StringPtrInput `pulumi:"forwardDcAccessCode"`
	// Reverse Dc access security code.
	ReverseDcAccessCode pulumi.StringPtrInput `pulumi:"reverseDcAccessCode"`
}

func (DcAccessSecurityCodeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DcAccessSecurityCodeResponse)(nil)).Elem()
}

func (i DcAccessSecurityCodeResponseArgs) ToDcAccessSecurityCodeResponseOutput() DcAccessSecurityCodeResponseOutput {
	return i.ToDcAccessSecurityCodeResponseOutputWithContext(context.Background())
}

func (i DcAccessSecurityCodeResponseArgs) ToDcAccessSecurityCodeResponseOutputWithContext(ctx context.Context) DcAccessSecurityCodeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DcAccessSecurityCodeResponseOutput)
}

// Dc access security code
type DcAccessSecurityCodeResponseOutput struct{ *pulumi.OutputState }

func (DcAccessSecurityCodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DcAccessSecurityCodeResponse)(nil)).Elem()
}

func (o DcAccessSecurityCodeResponseOutput) ToDcAccessSecurityCodeResponseOutput() DcAccessSecurityCodeResponseOutput {
	return o
}

func (o DcAccessSecurityCodeResponseOutput) ToDcAccessSecurityCodeResponseOutputWithContext(ctx context.Context) DcAccessSecurityCodeResponseOutput {
	return o
}

// Forward Dc access security code.
func (o DcAccessSecurityCodeResponseOutput) ForwardDcAccessCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcAccessSecurityCodeResponse) *string { return v.ForwardDcAccessCode }).(pulumi.StringPtrOutput)
}

// Reverse Dc access security code.
func (o DcAccessSecurityCodeResponseOutput) ReverseDcAccessCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DcAccessSecurityCodeResponse) *string { return v.ReverseDcAccessCode }).(pulumi.StringPtrOutput)
}

// Contains all the secrets of a Disk.
type DiskSecretResponse struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
}

// DiskSecretResponseInput is an input type that accepts DiskSecretResponseArgs and DiskSecretResponseOutput values.
// You can construct a concrete instance of `DiskSecretResponseInput` via:
//
//          DiskSecretResponseArgs{...}
type DiskSecretResponseInput interface {
	pulumi.Input

	ToDiskSecretResponseOutput() DiskSecretResponseOutput
	ToDiskSecretResponseOutputWithContext(context.Context) DiskSecretResponseOutput
}

// Contains all the secrets of a Disk.
type DiskSecretResponseArgs struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey pulumi.StringInput `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber pulumi.StringInput `pulumi:"diskSerialNumber"`
}

func (DiskSecretResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskSecretResponse)(nil)).Elem()
}

func (i DiskSecretResponseArgs) ToDiskSecretResponseOutput() DiskSecretResponseOutput {
	return i.ToDiskSecretResponseOutputWithContext(context.Background())
}

func (i DiskSecretResponseArgs) ToDiskSecretResponseOutputWithContext(ctx context.Context) DiskSecretResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskSecretResponseOutput)
}

// DiskSecretResponseArrayInput is an input type that accepts DiskSecretResponseArray and DiskSecretResponseArrayOutput values.
// You can construct a concrete instance of `DiskSecretResponseArrayInput` via:
//
//          DiskSecretResponseArray{ DiskSecretResponseArgs{...} }
type DiskSecretResponseArrayInput interface {
	pulumi.Input

	ToDiskSecretResponseArrayOutput() DiskSecretResponseArrayOutput
	ToDiskSecretResponseArrayOutputWithContext(context.Context) DiskSecretResponseArrayOutput
}

type DiskSecretResponseArray []DiskSecretResponseInput

func (DiskSecretResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskSecretResponse)(nil)).Elem()
}

func (i DiskSecretResponseArray) ToDiskSecretResponseArrayOutput() DiskSecretResponseArrayOutput {
	return i.ToDiskSecretResponseArrayOutputWithContext(context.Background())
}

func (i DiskSecretResponseArray) ToDiskSecretResponseArrayOutputWithContext(ctx context.Context) DiskSecretResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskSecretResponseArrayOutput)
}

// Contains all the secrets of a Disk.
type DiskSecretResponseOutput struct{ *pulumi.OutputState }

func (DiskSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskSecretResponse)(nil)).Elem()
}

func (o DiskSecretResponseOutput) ToDiskSecretResponseOutput() DiskSecretResponseOutput {
	return o
}

func (o DiskSecretResponseOutput) ToDiskSecretResponseOutputWithContext(ctx context.Context) DiskSecretResponseOutput {
	return o
}

// Bit Locker key of the disk which can be used to unlock the disk to copy data.
func (o DiskSecretResponseOutput) BitLockerKey() pulumi.StringOutput {
	return o.ApplyT(func(v DiskSecretResponse) string { return v.BitLockerKey }).(pulumi.StringOutput)
}

// Serial number of the assigned disk.
func (o DiskSecretResponseOutput) DiskSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DiskSecretResponse) string { return v.DiskSerialNumber }).(pulumi.StringOutput)
}

type DiskSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskSecretResponse)(nil)).Elem()
}

func (o DiskSecretResponseArrayOutput) ToDiskSecretResponseArrayOutput() DiskSecretResponseArrayOutput {
	return o
}

func (o DiskSecretResponseArrayOutput) ToDiskSecretResponseArrayOutputWithContext(ctx context.Context) DiskSecretResponseArrayOutput {
	return o
}

func (o DiskSecretResponseArrayOutput) Index(i pulumi.IntInput) DiskSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskSecretResponse {
		return vs[0].([]DiskSecretResponse)[vs[1].(int)]
	}).(DiskSecretResponseOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferences struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
}

// EncryptionPreferencesInput is an input type that accepts EncryptionPreferencesArgs and EncryptionPreferencesOutput values.
// You can construct a concrete instance of `EncryptionPreferencesInput` via:
//
//          EncryptionPreferencesArgs{...}
type EncryptionPreferencesInput interface {
	pulumi.Input

	ToEncryptionPreferencesOutput() EncryptionPreferencesOutput
	ToEncryptionPreferencesOutputWithContext(context.Context) EncryptionPreferencesOutput
}

// Preferences related to the Encryption.
type EncryptionPreferencesArgs struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption pulumi.StringPtrInput `pulumi:"doubleEncryption"`
}

func (EncryptionPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return i.ToEncryptionPreferencesOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput)
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i EncryptionPreferencesArgs) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesOutput).ToEncryptionPreferencesPtrOutputWithContext(ctx)
}

// EncryptionPreferencesPtrInput is an input type that accepts EncryptionPreferencesArgs, EncryptionPreferencesPtr and EncryptionPreferencesPtrOutput values.
// You can construct a concrete instance of `EncryptionPreferencesPtrInput` via:
//
//          EncryptionPreferencesArgs{...}
//
//  or:
//
//          nil
type EncryptionPreferencesPtrInput interface {
	pulumi.Input

	ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput
	ToEncryptionPreferencesPtrOutputWithContext(context.Context) EncryptionPreferencesPtrOutput
}

type encryptionPreferencesPtrType EncryptionPreferencesArgs

func EncryptionPreferencesPtr(v *EncryptionPreferencesArgs) EncryptionPreferencesPtrInput {
	return (*encryptionPreferencesPtrType)(v)
}

func (*encryptionPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return i.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (i *encryptionPreferencesPtrType) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesPtrOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferencesOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutput() EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesOutputWithContext(ctx context.Context) EncryptionPreferencesOutput {
	return o
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o.ToEncryptionPreferencesPtrOutputWithContext(context.Background())
}

func (o EncryptionPreferencesOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v EncryptionPreferences) *EncryptionPreferences {
		return &v
	}).(EncryptionPreferencesPtrOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferences) *string { return v.DoubleEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferences)(nil)).Elem()
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutput() EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) ToEncryptionPreferencesPtrOutputWithContext(ctx context.Context) EncryptionPreferencesPtrOutput {
	return o
}

func (o EncryptionPreferencesPtrOutput) Elem() EncryptionPreferencesOutput {
	return o.ApplyT(func(v *EncryptionPreferences) EncryptionPreferences { return *v }).(EncryptionPreferencesOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesPtrOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferences) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryption
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponse struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
}

// EncryptionPreferencesResponseInput is an input type that accepts EncryptionPreferencesResponseArgs and EncryptionPreferencesResponseOutput values.
// You can construct a concrete instance of `EncryptionPreferencesResponseInput` via:
//
//          EncryptionPreferencesResponseArgs{...}
type EncryptionPreferencesResponseInput interface {
	pulumi.Input

	ToEncryptionPreferencesResponseOutput() EncryptionPreferencesResponseOutput
	ToEncryptionPreferencesResponseOutputWithContext(context.Context) EncryptionPreferencesResponseOutput
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponseArgs struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption pulumi.StringPtrInput `pulumi:"doubleEncryption"`
}

func (EncryptionPreferencesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferencesResponse)(nil)).Elem()
}

func (i EncryptionPreferencesResponseArgs) ToEncryptionPreferencesResponseOutput() EncryptionPreferencesResponseOutput {
	return i.ToEncryptionPreferencesResponseOutputWithContext(context.Background())
}

func (i EncryptionPreferencesResponseArgs) ToEncryptionPreferencesResponseOutputWithContext(ctx context.Context) EncryptionPreferencesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesResponseOutput)
}

func (i EncryptionPreferencesResponseArgs) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return i.ToEncryptionPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionPreferencesResponseArgs) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesResponseOutput).ToEncryptionPreferencesResponsePtrOutputWithContext(ctx)
}

// EncryptionPreferencesResponsePtrInput is an input type that accepts EncryptionPreferencesResponseArgs, EncryptionPreferencesResponsePtr and EncryptionPreferencesResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionPreferencesResponsePtrInput` via:
//
//          EncryptionPreferencesResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionPreferencesResponsePtrInput interface {
	pulumi.Input

	ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput
	ToEncryptionPreferencesResponsePtrOutputWithContext(context.Context) EncryptionPreferencesResponsePtrOutput
}

type encryptionPreferencesResponsePtrType EncryptionPreferencesResponseArgs

func EncryptionPreferencesResponsePtr(v *EncryptionPreferencesResponseArgs) EncryptionPreferencesResponsePtrInput {
	return (*encryptionPreferencesResponsePtrType)(v)
}

func (*encryptionPreferencesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferencesResponse)(nil)).Elem()
}

func (i *encryptionPreferencesResponsePtrType) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return i.ToEncryptionPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionPreferencesResponsePtrType) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPreferencesResponsePtrOutput)
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutput() EncryptionPreferencesResponseOutput {
	return o
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponseOutputWithContext(ctx context.Context) EncryptionPreferencesResponseOutput {
	return o
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return o.ToEncryptionPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionPreferencesResponseOutput) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPreferencesResponse) *EncryptionPreferencesResponse {
		return &v
	}).(EncryptionPreferencesResponsePtrOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesResponseOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPreferencesResponse) *string { return v.DoubleEncryption }).(pulumi.StringPtrOutput)
}

type EncryptionPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPreferencesResponse)(nil)).Elem()
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutput() EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) ToEncryptionPreferencesResponsePtrOutputWithContext(ctx context.Context) EncryptionPreferencesResponsePtrOutput {
	return o
}

func (o EncryptionPreferencesResponsePtrOutput) Elem() EncryptionPreferencesResponseOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) EncryptionPreferencesResponse { return *v }).(EncryptionPreferencesResponseOutput)
}

// Defines secondary layer of software-based encryption enablement.
func (o EncryptionPreferencesResponsePtrOutput) DoubleEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DoubleEncryption
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetails struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// FilterFileDetailsInput is an input type that accepts FilterFileDetailsArgs and FilterFileDetailsOutput values.
// You can construct a concrete instance of `FilterFileDetailsInput` via:
//
//          FilterFileDetailsArgs{...}
type FilterFileDetailsInput interface {
	pulumi.Input

	ToFilterFileDetailsOutput() FilterFileDetailsOutput
	ToFilterFileDetailsOutputWithContext(context.Context) FilterFileDetailsOutput
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsArgs struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath pulumi.StringInput `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType pulumi.StringInput `pulumi:"filterFileType"`
}

func (FilterFileDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutput() FilterFileDetailsOutput {
	return i.ToFilterFileDetailsOutputWithContext(context.Background())
}

func (i FilterFileDetailsArgs) ToFilterFileDetailsOutputWithContext(ctx context.Context) FilterFileDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsOutput)
}

// FilterFileDetailsArrayInput is an input type that accepts FilterFileDetailsArray and FilterFileDetailsArrayOutput values.
// You can construct a concrete instance of `FilterFileDetailsArrayInput` via:
//
//          FilterFileDetailsArray{ FilterFileDetailsArgs{...} }
type FilterFileDetailsArrayInput interface {
	pulumi.Input

	ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput
	ToFilterFileDetailsArrayOutputWithContext(context.Context) FilterFileDetailsArrayOutput
}

type FilterFileDetailsArray []FilterFileDetailsInput

func (FilterFileDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetails)(nil)).Elem()
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput {
	return i.ToFilterFileDetailsArrayOutputWithContext(context.Background())
}

func (i FilterFileDetailsArray) ToFilterFileDetailsArrayOutputWithContext(ctx context.Context) FilterFileDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsArrayOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetails)(nil)).Elem()
}

func (o FilterFileDetailsOutput) ToFilterFileDetailsOutput() FilterFileDetailsOutput {
	return o
}

func (o FilterFileDetailsOutput) ToFilterFileDetailsOutputWithContext(ctx context.Context) FilterFileDetailsOutput {
	return o
}

// Path of the file that contains the details of all items to transfer.
func (o FilterFileDetailsOutput) FilterFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetails) string { return v.FilterFilePath }).(pulumi.StringOutput)
}

// Type of the filter file.
func (o FilterFileDetailsOutput) FilterFileType() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetails) string { return v.FilterFileType }).(pulumi.StringOutput)
}

type FilterFileDetailsArrayOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetails)(nil)).Elem()
}

func (o FilterFileDetailsArrayOutput) ToFilterFileDetailsArrayOutput() FilterFileDetailsArrayOutput {
	return o
}

func (o FilterFileDetailsArrayOutput) ToFilterFileDetailsArrayOutputWithContext(ctx context.Context) FilterFileDetailsArrayOutput {
	return o
}

func (o FilterFileDetailsArrayOutput) Index(i pulumi.IntInput) FilterFileDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFileDetails {
		return vs[0].([]FilterFileDetails)[vs[1].(int)]
	}).(FilterFileDetailsOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponse struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// FilterFileDetailsResponseInput is an input type that accepts FilterFileDetailsResponseArgs and FilterFileDetailsResponseOutput values.
// You can construct a concrete instance of `FilterFileDetailsResponseInput` via:
//
//          FilterFileDetailsResponseArgs{...}
type FilterFileDetailsResponseInput interface {
	pulumi.Input

	ToFilterFileDetailsResponseOutput() FilterFileDetailsResponseOutput
	ToFilterFileDetailsResponseOutputWithContext(context.Context) FilterFileDetailsResponseOutput
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponseArgs struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath pulumi.StringInput `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType pulumi.StringInput `pulumi:"filterFileType"`
}

func (FilterFileDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetailsResponse)(nil)).Elem()
}

func (i FilterFileDetailsResponseArgs) ToFilterFileDetailsResponseOutput() FilterFileDetailsResponseOutput {
	return i.ToFilterFileDetailsResponseOutputWithContext(context.Background())
}

func (i FilterFileDetailsResponseArgs) ToFilterFileDetailsResponseOutputWithContext(ctx context.Context) FilterFileDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsResponseOutput)
}

// FilterFileDetailsResponseArrayInput is an input type that accepts FilterFileDetailsResponseArray and FilterFileDetailsResponseArrayOutput values.
// You can construct a concrete instance of `FilterFileDetailsResponseArrayInput` via:
//
//          FilterFileDetailsResponseArray{ FilterFileDetailsResponseArgs{...} }
type FilterFileDetailsResponseArrayInput interface {
	pulumi.Input

	ToFilterFileDetailsResponseArrayOutput() FilterFileDetailsResponseArrayOutput
	ToFilterFileDetailsResponseArrayOutputWithContext(context.Context) FilterFileDetailsResponseArrayOutput
}

type FilterFileDetailsResponseArray []FilterFileDetailsResponseInput

func (FilterFileDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetailsResponse)(nil)).Elem()
}

func (i FilterFileDetailsResponseArray) ToFilterFileDetailsResponseArrayOutput() FilterFileDetailsResponseArrayOutput {
	return i.ToFilterFileDetailsResponseArrayOutputWithContext(context.Background())
}

func (i FilterFileDetailsResponseArray) ToFilterFileDetailsResponseArrayOutputWithContext(ctx context.Context) FilterFileDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFileDetailsResponseArrayOutput)
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponseOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutput() FilterFileDetailsResponseOutput {
	return o
}

func (o FilterFileDetailsResponseOutput) ToFilterFileDetailsResponseOutputWithContext(ctx context.Context) FilterFileDetailsResponseOutput {
	return o
}

// Path of the file that contains the details of all items to transfer.
func (o FilterFileDetailsResponseOutput) FilterFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFilePath }).(pulumi.StringOutput)
}

// Type of the filter file.
func (o FilterFileDetailsResponseOutput) FilterFileType() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFileDetailsResponse) string { return v.FilterFileType }).(pulumi.StringOutput)
}

type FilterFileDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (FilterFileDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFileDetailsResponse)(nil)).Elem()
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutput() FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) ToFilterFileDetailsResponseArrayOutputWithContext(ctx context.Context) FilterFileDetailsResponseArrayOutput {
	return o
}

func (o FilterFileDetailsResponseArrayOutput) Index(i pulumi.IntInput) FilterFileDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFileDetailsResponse {
		return vs[0].([]FilterFileDetailsResponse)[vs[1].(int)]
	}).(FilterFileDetailsResponseOutput)
}

// Managed identity properties.
type IdentityPropertiesResponse struct {
	// Managed service identity type.
	Type *string `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned *UserAssignedPropertiesResponse `pulumi:"userAssigned"`
}

// IdentityPropertiesResponseInput is an input type that accepts IdentityPropertiesResponseArgs and IdentityPropertiesResponseOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponseInput` via:
//
//          IdentityPropertiesResponseArgs{...}
type IdentityPropertiesResponseInput interface {
	pulumi.Input

	ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput
	ToIdentityPropertiesResponseOutputWithContext(context.Context) IdentityPropertiesResponseOutput
}

// Managed identity properties.
type IdentityPropertiesResponseArgs struct {
	// Managed service identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned UserAssignedPropertiesResponsePtrInput `pulumi:"userAssigned"`
}

func (IdentityPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return i.ToIdentityPropertiesResponseOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput)
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesResponseArgs) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponseOutput).ToIdentityPropertiesResponsePtrOutputWithContext(ctx)
}

// IdentityPropertiesResponsePtrInput is an input type that accepts IdentityPropertiesResponseArgs, IdentityPropertiesResponsePtr and IdentityPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesResponsePtrInput` via:
//
//          IdentityPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IdentityPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput
	ToIdentityPropertiesResponsePtrOutputWithContext(context.Context) IdentityPropertiesResponsePtrOutput
}

type identityPropertiesResponsePtrType IdentityPropertiesResponseArgs

func IdentityPropertiesResponsePtr(v *IdentityPropertiesResponseArgs) IdentityPropertiesResponsePtrInput {
	return (*identityPropertiesResponsePtrType)(v)
}

func (*identityPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return i.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *identityPropertiesResponsePtrType) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesResponsePtrOutput)
}

// Managed identity properties.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o.ToIdentityPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *IdentityPropertiesResponse {
		return &v
	}).(IdentityPropertiesResponsePtrOutput)
}

// Managed service identity type.
func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesResponseOutput) UserAssigned() UserAssignedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *UserAssignedPropertiesResponse { return v.UserAssigned }).(UserAssignedPropertiesResponsePtrOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse { return *v }).(IdentityPropertiesResponseOutput)
}

// Managed service identity type.
func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User assigned identity properties.
func (o IdentityPropertiesResponsePtrOutput) UserAssigned() UserAssignedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *UserAssignedPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssigned
	}).(UserAssignedPropertiesResponsePtrOutput)
}

// Additional delivery info.
type JobDeliveryInfo struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoInput is an input type that accepts JobDeliveryInfoArgs and JobDeliveryInfoOutput values.
// You can construct a concrete instance of `JobDeliveryInfoInput` via:
//
//          JobDeliveryInfoArgs{...}
type JobDeliveryInfoInput interface {
	pulumi.Input

	ToJobDeliveryInfoOutput() JobDeliveryInfoOutput
	ToJobDeliveryInfoOutputWithContext(context.Context) JobDeliveryInfoOutput
}

// Additional delivery info.
type JobDeliveryInfoArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return i.ToJobDeliveryInfoOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput)
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput).ToJobDeliveryInfoPtrOutputWithContext(ctx)
}

// JobDeliveryInfoPtrInput is an input type that accepts JobDeliveryInfoArgs, JobDeliveryInfoPtr and JobDeliveryInfoPtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoPtrInput` via:
//
//          JobDeliveryInfoArgs{...}
//
//  or:
//
//          nil
type JobDeliveryInfoPtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput
	ToJobDeliveryInfoPtrOutputWithContext(context.Context) JobDeliveryInfoPtrOutput
}

type jobDeliveryInfoPtrType JobDeliveryInfoArgs

func JobDeliveryInfoPtr(v *JobDeliveryInfoArgs) JobDeliveryInfoPtrInput {
	return (*jobDeliveryInfoPtrType)(v)
}

func (*jobDeliveryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfo) *JobDeliveryInfo {
		return &v
	}).(JobDeliveryInfoPtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfo) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoPtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) Elem() JobDeliveryInfoOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) JobDeliveryInfo { return *v }).(JobDeliveryInfoOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoPtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponse struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoResponseInput is an input type that accepts JobDeliveryInfoResponseArgs and JobDeliveryInfoResponseOutput values.
// You can construct a concrete instance of `JobDeliveryInfoResponseInput` via:
//
//          JobDeliveryInfoResponseArgs{...}
type JobDeliveryInfoResponseInput interface {
	pulumi.Input

	ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput
	ToJobDeliveryInfoResponseOutputWithContext(context.Context) JobDeliveryInfoResponseOutput
}

// Additional delivery info.
type JobDeliveryInfoResponseArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (i JobDeliveryInfoResponseArgs) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return i.ToJobDeliveryInfoResponseOutputWithContext(context.Background())
}

func (i JobDeliveryInfoResponseArgs) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoResponseOutput)
}

func (i JobDeliveryInfoResponseArgs) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return i.ToJobDeliveryInfoResponsePtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoResponseArgs) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoResponseOutput).ToJobDeliveryInfoResponsePtrOutputWithContext(ctx)
}

// JobDeliveryInfoResponsePtrInput is an input type that accepts JobDeliveryInfoResponseArgs, JobDeliveryInfoResponsePtr and JobDeliveryInfoResponsePtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoResponsePtrInput` via:
//
//          JobDeliveryInfoResponseArgs{...}
//
//  or:
//
//          nil
type JobDeliveryInfoResponsePtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput
	ToJobDeliveryInfoResponsePtrOutputWithContext(context.Context) JobDeliveryInfoResponsePtrOutput
}

type jobDeliveryInfoResponsePtrType JobDeliveryInfoResponseArgs

func JobDeliveryInfoResponsePtr(v *JobDeliveryInfoResponseArgs) JobDeliveryInfoResponsePtrInput {
	return (*jobDeliveryInfoResponsePtrType)(v)
}

func (*jobDeliveryInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (i *jobDeliveryInfoResponsePtrType) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return i.ToJobDeliveryInfoResponsePtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoResponsePtrType) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoResponsePtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponseOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o.ToJobDeliveryInfoResponsePtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *JobDeliveryInfoResponse {
		return &v
	}).(JobDeliveryInfoResponsePtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponseOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) Elem() JobDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) JobDeliveryInfoResponse { return *v }).(JobDeliveryInfoResponseOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponsePtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Job stages.
type JobStagesResponse struct {
	// Display name of the job stage.
	DisplayName string `pulumi:"displayName"`
	// Job Stage Details
	JobStageDetails interface{} `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName string `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus string `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime string `pulumi:"stageTime"`
}

// JobStagesResponseInput is an input type that accepts JobStagesResponseArgs and JobStagesResponseOutput values.
// You can construct a concrete instance of `JobStagesResponseInput` via:
//
//          JobStagesResponseArgs{...}
type JobStagesResponseInput interface {
	pulumi.Input

	ToJobStagesResponseOutput() JobStagesResponseOutput
	ToJobStagesResponseOutputWithContext(context.Context) JobStagesResponseOutput
}

// Job stages.
type JobStagesResponseArgs struct {
	// Display name of the job stage.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Job Stage Details
	JobStageDetails pulumi.Input `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus pulumi.StringInput `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime pulumi.StringInput `pulumi:"stageTime"`
}

func (JobStagesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStagesResponse)(nil)).Elem()
}

func (i JobStagesResponseArgs) ToJobStagesResponseOutput() JobStagesResponseOutput {
	return i.ToJobStagesResponseOutputWithContext(context.Background())
}

func (i JobStagesResponseArgs) ToJobStagesResponseOutputWithContext(ctx context.Context) JobStagesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStagesResponseOutput)
}

// JobStagesResponseArrayInput is an input type that accepts JobStagesResponseArray and JobStagesResponseArrayOutput values.
// You can construct a concrete instance of `JobStagesResponseArrayInput` via:
//
//          JobStagesResponseArray{ JobStagesResponseArgs{...} }
type JobStagesResponseArrayInput interface {
	pulumi.Input

	ToJobStagesResponseArrayOutput() JobStagesResponseArrayOutput
	ToJobStagesResponseArrayOutputWithContext(context.Context) JobStagesResponseArrayOutput
}

type JobStagesResponseArray []JobStagesResponseInput

func (JobStagesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStagesResponse)(nil)).Elem()
}

func (i JobStagesResponseArray) ToJobStagesResponseArrayOutput() JobStagesResponseArrayOutput {
	return i.ToJobStagesResponseArrayOutputWithContext(context.Background())
}

func (i JobStagesResponseArray) ToJobStagesResponseArrayOutputWithContext(ctx context.Context) JobStagesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStagesResponseArrayOutput)
}

// Job stages.
type JobStagesResponseOutput struct{ *pulumi.OutputState }

func (JobStagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutput() JobStagesResponseOutput {
	return o
}

func (o JobStagesResponseOutput) ToJobStagesResponseOutputWithContext(ctx context.Context) JobStagesResponseOutput {
	return o
}

// Display name of the job stage.
func (o JobStagesResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Job Stage Details
func (o JobStagesResponseOutput) JobStageDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v JobStagesResponse) interface{} { return v.JobStageDetails }).(pulumi.AnyOutput)
}

// Name of the job stage.
func (o JobStagesResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageName }).(pulumi.StringOutput)
}

// Status of the job stage.
func (o JobStagesResponseOutput) StageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageStatus }).(pulumi.StringOutput)
}

// Time for the job stage in UTC ISO 8601 format.
func (o JobStagesResponseOutput) StageTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStagesResponse) string { return v.StageTime }).(pulumi.StringOutput)
}

type JobStagesResponseArrayOutput struct{ *pulumi.OutputState }

func (JobStagesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobStagesResponse)(nil)).Elem()
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutput() JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) ToJobStagesResponseArrayOutputWithContext(ctx context.Context) JobStagesResponseArrayOutput {
	return o
}

func (o JobStagesResponseArrayOutput) Index(i pulumi.IntInput) JobStagesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobStagesResponse {
		return vs[0].([]JobStagesResponse)[vs[1].(int)]
	}).(JobStagesResponseOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponse struct {
	// Managed identity properties used for key encryption.
	IdentityProperties *IdentityPropertiesResponse `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// KeyEncryptionKeyResponseInput is an input type that accepts KeyEncryptionKeyResponseArgs and KeyEncryptionKeyResponseOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyResponseInput` via:
//
//          KeyEncryptionKeyResponseArgs{...}
type KeyEncryptionKeyResponseInput interface {
	pulumi.Input

	ToKeyEncryptionKeyResponseOutput() KeyEncryptionKeyResponseOutput
	ToKeyEncryptionKeyResponseOutputWithContext(context.Context) KeyEncryptionKeyResponseOutput
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponseArgs struct {
	// Managed identity properties used for key encryption.
	IdentityProperties IdentityPropertiesResponsePtrInput `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType pulumi.StringInput `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl pulumi.StringPtrInput `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID pulumi.StringPtrInput `pulumi:"kekVaultResourceID"`
}

func (KeyEncryptionKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyResponse)(nil)).Elem()
}

func (i KeyEncryptionKeyResponseArgs) ToKeyEncryptionKeyResponseOutput() KeyEncryptionKeyResponseOutput {
	return i.ToKeyEncryptionKeyResponseOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyResponseArgs) ToKeyEncryptionKeyResponseOutputWithContext(ctx context.Context) KeyEncryptionKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyResponseOutput)
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponseOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyResponse)(nil)).Elem()
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutput() KeyEncryptionKeyResponseOutput {
	return o
}

func (o KeyEncryptionKeyResponseOutput) ToKeyEncryptionKeyResponseOutputWithContext(ctx context.Context) KeyEncryptionKeyResponseOutput {
	return o
}

// Managed identity properties used for key encryption.
func (o KeyEncryptionKeyResponseOutput) IdentityProperties() IdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *IdentityPropertiesResponse { return v.IdentityProperties }).(IdentityPropertiesResponsePtrOutput)
}

// Type of encryption key used for key encryption.
func (o KeyEncryptionKeyResponseOutput) KekType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) string { return v.KekType }).(pulumi.StringOutput)
}

// Key encryption key. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekUrl }).(pulumi.StringPtrOutput)
}

// Kek vault resource id. It is required in case of Customer managed KekType.
func (o KeyEncryptionKeyResponseOutput) KekVaultResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyResponse) *string { return v.KekVaultResourceID }).(pulumi.StringPtrOutput)
}

// Details of the managed disks.
type ManagedDiskDetails struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// ManagedDiskDetailsInput is an input type that accepts ManagedDiskDetailsArgs and ManagedDiskDetailsOutput values.
// You can construct a concrete instance of `ManagedDiskDetailsInput` via:
//
//          ManagedDiskDetailsArgs{...}
type ManagedDiskDetailsInput interface {
	pulumi.Input

	ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput
	ToManagedDiskDetailsOutputWithContext(context.Context) ManagedDiskDetailsOutput
}

// Details of the managed disks.
type ManagedDiskDetailsArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
}

func (ManagedDiskDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetails)(nil)).Elem()
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput {
	return i.ToManagedDiskDetailsOutputWithContext(context.Background())
}

func (i ManagedDiskDetailsArgs) ToManagedDiskDetailsOutputWithContext(ctx context.Context) ManagedDiskDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskDetailsOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsOutput struct{ *pulumi.OutputState }

func (ManagedDiskDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetails)(nil)).Elem()
}

func (o ManagedDiskDetailsOutput) ToManagedDiskDetailsOutput() ManagedDiskDetailsOutput {
	return o
}

func (o ManagedDiskDetailsOutput) ToManagedDiskDetailsOutputWithContext(ctx context.Context) ManagedDiskDetailsOutput {
	return o
}

// Account Type of the data to be transferred.
func (o ManagedDiskDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Resource Group Id of the compute disks.
func (o ManagedDiskDetailsOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o ManagedDiskDetailsOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDiskDetails) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Resource Id of the storage account that can be used to copy the vhd for staging.
func (o ManagedDiskDetailsOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetails) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsResponse struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// ManagedDiskDetailsResponseInput is an input type that accepts ManagedDiskDetailsResponseArgs and ManagedDiskDetailsResponseOutput values.
// You can construct a concrete instance of `ManagedDiskDetailsResponseInput` via:
//
//          ManagedDiskDetailsResponseArgs{...}
type ManagedDiskDetailsResponseInput interface {
	pulumi.Input

	ToManagedDiskDetailsResponseOutput() ManagedDiskDetailsResponseOutput
	ToManagedDiskDetailsResponseOutputWithContext(context.Context) ManagedDiskDetailsResponseOutput
}

// Details of the managed disks.
type ManagedDiskDetailsResponseArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
}

func (ManagedDiskDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetailsResponse)(nil)).Elem()
}

func (i ManagedDiskDetailsResponseArgs) ToManagedDiskDetailsResponseOutput() ManagedDiskDetailsResponseOutput {
	return i.ToManagedDiskDetailsResponseOutputWithContext(context.Background())
}

func (i ManagedDiskDetailsResponseArgs) ToManagedDiskDetailsResponseOutputWithContext(ctx context.Context) ManagedDiskDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskDetailsResponseOutput)
}

// Details of the managed disks.
type ManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (ManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutput() ManagedDiskDetailsResponseOutput {
	return o
}

func (o ManagedDiskDetailsResponseOutput) ToManagedDiskDetailsResponseOutputWithContext(ctx context.Context) ManagedDiskDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
func (o ManagedDiskDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Resource Group Id of the compute disks.
func (o ManagedDiskDetailsResponseOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o ManagedDiskDetailsResponseOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Resource Id of the storage account that can be used to copy the vhd for staging.
func (o ManagedDiskDetailsResponseOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskDetailsResponse) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceInput is an input type that accepts NotificationPreferenceArgs and NotificationPreferenceOutput values.
// You can construct a concrete instance of `NotificationPreferenceInput` via:
//
//          NotificationPreferenceArgs{...}
type NotificationPreferenceInput interface {
	pulumi.Input

	ToNotificationPreferenceOutput() NotificationPreferenceOutput
	ToNotificationPreferenceOutputWithContext(context.Context) NotificationPreferenceOutput
}

// Notification preference for a job stage.
type NotificationPreferenceArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return i.ToNotificationPreferenceOutputWithContext(context.Background())
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceOutput)
}

// NotificationPreferenceArrayInput is an input type that accepts NotificationPreferenceArray and NotificationPreferenceArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceArrayInput` via:
//
//          NotificationPreferenceArray{ NotificationPreferenceArgs{...} }
type NotificationPreferenceArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput
	ToNotificationPreferenceArrayOutputWithContext(context.Context) NotificationPreferenceArrayOutput
}

type NotificationPreferenceArray []NotificationPreferenceInput

func (NotificationPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return i.ToNotificationPreferenceArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return o
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreference) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreference) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreference {
		return vs[0].([]NotificationPreference)[vs[1].(int)]
	}).(NotificationPreferenceOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceResponseInput is an input type that accepts NotificationPreferenceResponseArgs and NotificationPreferenceResponseOutput values.
// You can construct a concrete instance of `NotificationPreferenceResponseInput` via:
//
//          NotificationPreferenceResponseArgs{...}
type NotificationPreferenceResponseInput interface {
	pulumi.Input

	ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput
	ToNotificationPreferenceResponseOutputWithContext(context.Context) NotificationPreferenceResponseOutput
}

// Notification preference for a job stage.
type NotificationPreferenceResponseArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (i NotificationPreferenceResponseArgs) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return i.ToNotificationPreferenceResponseOutputWithContext(context.Background())
}

func (i NotificationPreferenceResponseArgs) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceResponseOutput)
}

// NotificationPreferenceResponseArrayInput is an input type that accepts NotificationPreferenceResponseArray and NotificationPreferenceResponseArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceResponseArrayInput` via:
//
//          NotificationPreferenceResponseArray{ NotificationPreferenceResponseArgs{...} }
type NotificationPreferenceResponseArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput
	ToNotificationPreferenceResponseArrayOutputWithContext(context.Context) NotificationPreferenceResponseArrayOutput
}

type NotificationPreferenceResponseArray []NotificationPreferenceResponseInput

func (NotificationPreferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (i NotificationPreferenceResponseArray) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return i.ToNotificationPreferenceResponseArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceResponseArray) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceResponseArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponseOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return o
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceResponseOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreferenceResponse {
		return vs[0].([]NotificationPreferenceResponse)[vs[1].(int)]
	}).(NotificationPreferenceResponseOutput)
}

// Shipping details.
type PackageShippingDetailsResponse struct {
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId string `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// PackageShippingDetailsResponseInput is an input type that accepts PackageShippingDetailsResponseArgs and PackageShippingDetailsResponseOutput values.
// You can construct a concrete instance of `PackageShippingDetailsResponseInput` via:
//
//          PackageShippingDetailsResponseArgs{...}
type PackageShippingDetailsResponseInput interface {
	pulumi.Input

	ToPackageShippingDetailsResponseOutput() PackageShippingDetailsResponseOutput
	ToPackageShippingDetailsResponseOutputWithContext(context.Context) PackageShippingDetailsResponseOutput
}

// Shipping details.
type PackageShippingDetailsResponseArgs struct {
	// Name of the carrier.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId pulumi.StringInput `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl pulumi.StringInput `pulumi:"trackingUrl"`
}

func (PackageShippingDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageShippingDetailsResponse)(nil)).Elem()
}

func (i PackageShippingDetailsResponseArgs) ToPackageShippingDetailsResponseOutput() PackageShippingDetailsResponseOutput {
	return i.ToPackageShippingDetailsResponseOutputWithContext(context.Background())
}

func (i PackageShippingDetailsResponseArgs) ToPackageShippingDetailsResponseOutputWithContext(ctx context.Context) PackageShippingDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageShippingDetailsResponseOutput)
}

// Shipping details.
type PackageShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (PackageShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageShippingDetailsResponse)(nil)).Elem()
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutput() PackageShippingDetailsResponseOutput {
	return o
}

func (o PackageShippingDetailsResponseOutput) ToPackageShippingDetailsResponseOutputWithContext(ctx context.Context) PackageShippingDetailsResponseOutput {
	return o
}

// Name of the carrier.
func (o PackageShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// Tracking Id of shipment.
func (o PackageShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// Url where shipment can be tracked.
func (o PackageShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PackageShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

// Preferences related to the order
type Preferences struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferences `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// PreferencesInput is an input type that accepts PreferencesArgs and PreferencesOutput values.
// You can construct a concrete instance of `PreferencesInput` via:
//
//          PreferencesArgs{...}
type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(context.Context) PreferencesOutput
}

// Preferences related to the order
type PreferencesArgs struct {
	// Preferences related to the Encryption.
	EncryptionPreferences EncryptionPreferencesPtrInput `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion pulumi.StringArrayInput `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences TransportPreferencesPtrInput `pulumi:"transportPreferences"`
}

func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (i PreferencesArgs) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

func (i PreferencesArgs) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput).ToPreferencesPtrOutputWithContext(ctx)
}

// PreferencesPtrInput is an input type that accepts PreferencesArgs, PreferencesPtr and PreferencesPtrOutput values.
// You can construct a concrete instance of `PreferencesPtrInput` via:
//
//          PreferencesArgs{...}
//
//  or:
//
//          nil
type PreferencesPtrInput interface {
	pulumi.Input

	ToPreferencesPtrOutput() PreferencesPtrOutput
	ToPreferencesPtrOutputWithContext(context.Context) PreferencesPtrOutput
}

type preferencesPtrType PreferencesArgs

func PreferencesPtr(v *PreferencesArgs) PreferencesPtrInput {
	return (*preferencesPtrType)(v)
}

func (*preferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *preferencesPtrType) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferencesPtrType) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesOutput struct{ *pulumi.OutputState }

func (PreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (o PreferencesOutput) ToPreferencesOutput() PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o.ToPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferencesOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *Preferences {
		return &v
	}).(PreferencesPtrOutput)
}

// Preferences related to the Encryption.
func (o PreferencesOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *EncryptionPreferences { return v.EncryptionPreferences }).(EncryptionPreferencesPtrOutput)
}

// Preferred data center region.
func (o PreferencesOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Preferences) []string { return v.PreferredDataCenterRegion }).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TransportPreferences { return v.TransportPreferences }).(TransportPreferencesPtrOutput)
}

type PreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) Elem() PreferencesOutput {
	return o.ApplyT(func(v *Preferences) Preferences { return *v }).(PreferencesOutput)
}

// Preferences related to the Encryption.
func (o PreferencesPtrOutput) EncryptionPreferences() EncryptionPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *EncryptionPreferences {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesPtrOutput)
}

// Preferred data center region.
func (o PreferencesPtrOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Preferences) []string {
		if v == nil {
			return nil
		}
		return v.PreferredDataCenterRegion
	}).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesPtrOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TransportPreferences {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesResponse struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferencesResponse `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// PreferencesResponseInput is an input type that accepts PreferencesResponseArgs and PreferencesResponseOutput values.
// You can construct a concrete instance of `PreferencesResponseInput` via:
//
//          PreferencesResponseArgs{...}
type PreferencesResponseInput interface {
	pulumi.Input

	ToPreferencesResponseOutput() PreferencesResponseOutput
	ToPreferencesResponseOutputWithContext(context.Context) PreferencesResponseOutput
}

// Preferences related to the order
type PreferencesResponseArgs struct {
	// Preferences related to the Encryption.
	EncryptionPreferences EncryptionPreferencesResponsePtrInput `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion pulumi.StringArrayInput `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences TransportPreferencesResponsePtrInput `pulumi:"transportPreferences"`
}

func (PreferencesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (i PreferencesResponseArgs) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return i.ToPreferencesResponseOutputWithContext(context.Background())
}

func (i PreferencesResponseArgs) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponseOutput)
}

func (i PreferencesResponseArgs) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return i.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i PreferencesResponseArgs) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponseOutput).ToPreferencesResponsePtrOutputWithContext(ctx)
}

// PreferencesResponsePtrInput is an input type that accepts PreferencesResponseArgs, PreferencesResponsePtr and PreferencesResponsePtrOutput values.
// You can construct a concrete instance of `PreferencesResponsePtrInput` via:
//
//          PreferencesResponseArgs{...}
//
//  or:
//
//          nil
type PreferencesResponsePtrInput interface {
	pulumi.Input

	ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput
	ToPreferencesResponsePtrOutputWithContext(context.Context) PreferencesResponsePtrOutput
}

type preferencesResponsePtrType PreferencesResponseArgs

func PreferencesResponsePtr(v *PreferencesResponseArgs) PreferencesResponsePtrInput {
	return (*preferencesResponsePtrType)(v)
}

func (*preferencesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (i *preferencesResponsePtrType) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return i.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i *preferencesResponsePtrType) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponsePtrOutput)
}

// Preferences related to the order
type PreferencesResponseOutput struct{ *pulumi.OutputState }

func (PreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *PreferencesResponse {
		return &v
	}).(PreferencesResponsePtrOutput)
}

// Preferences related to the Encryption.
func (o PreferencesResponseOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *EncryptionPreferencesResponse { return v.EncryptionPreferences }).(EncryptionPreferencesResponsePtrOutput)
}

// Preferred data center region.
func (o PreferencesResponseOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []string { return v.PreferredDataCenterRegion }).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponseOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.TransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

type PreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (PreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) Elem() PreferencesResponseOutput {
	return o.ApplyT(func(v *PreferencesResponse) PreferencesResponse { return *v }).(PreferencesResponseOutput)
}

// Preferences related to the Encryption.
func (o PreferencesResponsePtrOutput) EncryptionPreferences() EncryptionPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *EncryptionPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionPreferences
	}).(EncryptionPreferencesResponsePtrOutput)
}

// Preferred data center region.
func (o PreferencesResponsePtrOutput) PreferredDataCenterRegion() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PreferredDataCenterRegion
	}).(pulumi.StringArrayOutput)
}

// Preferences related to the shipment logistics of the sku.
func (o PreferencesResponsePtrOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Identity type
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity { return *v }).(ResourceIdentityOutput)
}

// Identity type
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

// Msi identity details of the resource
type ResourceIdentityResponseArgs struct {
	// Service Principal Id backing the Msi
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Home Tenant Id
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities UserAssignedIdentityResponseMapInput `pulumi:"userAssignedIdentities"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse { return *v }).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponse struct {
	// Password for the share.
	Password string `pulumi:"password"`
	// Name of the share.
	ShareName string `pulumi:"shareName"`
	// Type of the share.
	ShareType string `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols []string `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName string `pulumi:"userName"`
}

// ShareCredentialDetailsResponseInput is an input type that accepts ShareCredentialDetailsResponseArgs and ShareCredentialDetailsResponseOutput values.
// You can construct a concrete instance of `ShareCredentialDetailsResponseInput` via:
//
//          ShareCredentialDetailsResponseArgs{...}
type ShareCredentialDetailsResponseInput interface {
	pulumi.Input

	ToShareCredentialDetailsResponseOutput() ShareCredentialDetailsResponseOutput
	ToShareCredentialDetailsResponseOutputWithContext(context.Context) ShareCredentialDetailsResponseOutput
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponseArgs struct {
	// Password for the share.
	Password pulumi.StringInput `pulumi:"password"`
	// Name of the share.
	ShareName pulumi.StringInput `pulumi:"shareName"`
	// Type of the share.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols pulumi.StringArrayInput `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ShareCredentialDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareCredentialDetailsResponse)(nil)).Elem()
}

func (i ShareCredentialDetailsResponseArgs) ToShareCredentialDetailsResponseOutput() ShareCredentialDetailsResponseOutput {
	return i.ToShareCredentialDetailsResponseOutputWithContext(context.Background())
}

func (i ShareCredentialDetailsResponseArgs) ToShareCredentialDetailsResponseOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareCredentialDetailsResponseOutput)
}

// ShareCredentialDetailsResponseArrayInput is an input type that accepts ShareCredentialDetailsResponseArray and ShareCredentialDetailsResponseArrayOutput values.
// You can construct a concrete instance of `ShareCredentialDetailsResponseArrayInput` via:
//
//          ShareCredentialDetailsResponseArray{ ShareCredentialDetailsResponseArgs{...} }
type ShareCredentialDetailsResponseArrayInput interface {
	pulumi.Input

	ToShareCredentialDetailsResponseArrayOutput() ShareCredentialDetailsResponseArrayOutput
	ToShareCredentialDetailsResponseArrayOutputWithContext(context.Context) ShareCredentialDetailsResponseArrayOutput
}

type ShareCredentialDetailsResponseArray []ShareCredentialDetailsResponseInput

func (ShareCredentialDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareCredentialDetailsResponse)(nil)).Elem()
}

func (i ShareCredentialDetailsResponseArray) ToShareCredentialDetailsResponseArrayOutput() ShareCredentialDetailsResponseArrayOutput {
	return i.ToShareCredentialDetailsResponseArrayOutputWithContext(context.Background())
}

func (i ShareCredentialDetailsResponseArray) ToShareCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareCredentialDetailsResponseArrayOutput)
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponseOutput struct{ *pulumi.OutputState }

func (ShareCredentialDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareCredentialDetailsResponse)(nil)).Elem()
}

func (o ShareCredentialDetailsResponseOutput) ToShareCredentialDetailsResponseOutput() ShareCredentialDetailsResponseOutput {
	return o
}

func (o ShareCredentialDetailsResponseOutput) ToShareCredentialDetailsResponseOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseOutput {
	return o
}

// Password for the share.
func (o ShareCredentialDetailsResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.Password }).(pulumi.StringOutput)
}

// Name of the share.
func (o ShareCredentialDetailsResponseOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.ShareName }).(pulumi.StringOutput)
}

// Type of the share.
func (o ShareCredentialDetailsResponseOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.ShareType }).(pulumi.StringOutput)
}

// Access protocols supported on the device.
func (o ShareCredentialDetailsResponseOutput) SupportedAccessProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) []string { return v.SupportedAccessProtocols }).(pulumi.StringArrayOutput)
}

// User name for the share.
func (o ShareCredentialDetailsResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ShareCredentialDetailsResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type ShareCredentialDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ShareCredentialDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ShareCredentialDetailsResponse)(nil)).Elem()
}

func (o ShareCredentialDetailsResponseArrayOutput) ToShareCredentialDetailsResponseArrayOutput() ShareCredentialDetailsResponseArrayOutput {
	return o
}

func (o ShareCredentialDetailsResponseArrayOutput) ToShareCredentialDetailsResponseArrayOutputWithContext(ctx context.Context) ShareCredentialDetailsResponseArrayOutput {
	return o
}

func (o ShareCredentialDetailsResponseArrayOutput) Index(i pulumi.IntInput) ShareCredentialDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ShareCredentialDetailsResponse {
		return vs[0].([]ShareCredentialDetailsResponse)[vs[1].(int)]
	}).(ShareCredentialDetailsResponseOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressInput is an input type that accepts ShippingAddressArgs and ShippingAddressOutput values.
// You can construct a concrete instance of `ShippingAddressInput` via:
//
//          ShippingAddressArgs{...}
type ShippingAddressInput interface {
	pulumi.Input

	ToShippingAddressOutput() ShippingAddressOutput
	ToShippingAddressOutputWithContext(context.Context) ShippingAddressOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (i ShippingAddressArgs) ToShippingAddressOutput() ShippingAddressOutput {
	return i.ToShippingAddressOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput)
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput).ToShippingAddressPtrOutputWithContext(ctx)
}

// ShippingAddressPtrInput is an input type that accepts ShippingAddressArgs, ShippingAddressPtr and ShippingAddressPtrOutput values.
// You can construct a concrete instance of `ShippingAddressPtrInput` via:
//
//          ShippingAddressArgs{...}
//
//  or:
//
//          nil
type ShippingAddressPtrInput interface {
	pulumi.Input

	ToShippingAddressPtrOutput() ShippingAddressPtrOutput
	ToShippingAddressPtrOutputWithContext(context.Context) ShippingAddressPtrOutput
}

type shippingAddressPtrType ShippingAddressArgs

func ShippingAddressPtr(v *ShippingAddressArgs) ShippingAddressPtrInput {
	return (*shippingAddressPtrType)(v)
}

func (*shippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressOutput struct{ *pulumi.OutputState }

func (ShippingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressOutput) ToShippingAddressOutput() ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *ShippingAddress {
		return &v
	}).(ShippingAddressPtrOutput)
}

// Type of address.
func (o ShippingAddressOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressPtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) Elem() ShippingAddressOutput {
	return o.ApplyT(func(v *ShippingAddress) ShippingAddress { return *v }).(ShippingAddressOutput)
}

// Type of address.
func (o ShippingAddressPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressPtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressPtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressResponseInput is an input type that accepts ShippingAddressResponseArgs and ShippingAddressResponseOutput values.
// You can construct a concrete instance of `ShippingAddressResponseInput` via:
//
//          ShippingAddressResponseArgs{...}
type ShippingAddressResponseInput interface {
	pulumi.Input

	ToShippingAddressResponseOutput() ShippingAddressResponseOutput
	ToShippingAddressResponseOutputWithContext(context.Context) ShippingAddressResponseOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return i.ToShippingAddressResponseOutputWithContext(context.Background())
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponseOutput)
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return i.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponseOutput).ToShippingAddressResponsePtrOutputWithContext(ctx)
}

// ShippingAddressResponsePtrInput is an input type that accepts ShippingAddressResponseArgs, ShippingAddressResponsePtr and ShippingAddressResponsePtrOutput values.
// You can construct a concrete instance of `ShippingAddressResponsePtrInput` via:
//
//          ShippingAddressResponseArgs{...}
//
//  or:
//
//          nil
type ShippingAddressResponsePtrInput interface {
	pulumi.Input

	ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput
	ToShippingAddressResponsePtrOutputWithContext(context.Context) ShippingAddressResponsePtrOutput
}

type shippingAddressResponsePtrType ShippingAddressResponseArgs

func ShippingAddressResponsePtr(v *ShippingAddressResponseArgs) ShippingAddressResponsePtrInput {
	return (*shippingAddressResponsePtrType)(v)
}

func (*shippingAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (i *shippingAddressResponsePtrType) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return i.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (i *shippingAddressResponsePtrType) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponsePtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *ShippingAddressResponse {
		return &v
	}).(ShippingAddressResponsePtrOutput)
}

// Type of address.
func (o ShippingAddressResponseOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponseOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponseOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponseOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) Elem() ShippingAddressResponseOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) ShippingAddressResponse { return *v }).(ShippingAddressResponseOutput)
}

// Type of address.
func (o ShippingAddressResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponsePtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponsePtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type Sku struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The Sku.
type SkuArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The Sku.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The display name of the sku.
func (o SkuOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The display name of the sku.
func (o SkuPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Sku.
type SkuResponse struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// The Sku.
type SkuResponseArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// The Sku.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The display name of the sku.
func (o SkuResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The display name of the sku.
func (o SkuResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Details for the storage account.
type StorageAccountDetails struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// StorageAccountDetailsInput is an input type that accepts StorageAccountDetailsArgs and StorageAccountDetailsOutput values.
// You can construct a concrete instance of `StorageAccountDetailsInput` via:
//
//          StorageAccountDetailsArgs{...}
type StorageAccountDetailsInput interface {
	pulumi.Input

	ToStorageAccountDetailsOutput() StorageAccountDetailsOutput
	ToStorageAccountDetailsOutputWithContext(context.Context) StorageAccountDetailsOutput
}

// Details for the storage account.
type StorageAccountDetailsArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (StorageAccountDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return i.ToStorageAccountDetailsOutputWithContext(context.Background())
}

func (i StorageAccountDetailsArgs) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsOutput)
}

// Details for the storage account.
type StorageAccountDetailsOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetails)(nil)).Elem()
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutput() StorageAccountDetailsOutput {
	return o
}

func (o StorageAccountDetailsOutput) ToStorageAccountDetailsOutputWithContext(ctx context.Context) StorageAccountDetailsOutput {
	return o
}

// Account Type of the data to be transferred.
func (o StorageAccountDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o StorageAccountDetailsOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountDetails) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Storage Account Resource Id.
func (o StorageAccountDetailsOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetails) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Details for the storage account.
type StorageAccountDetailsResponse struct {
	// Account Type of the data to be transferred.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// StorageAccountDetailsResponseInput is an input type that accepts StorageAccountDetailsResponseArgs and StorageAccountDetailsResponseOutput values.
// You can construct a concrete instance of `StorageAccountDetailsResponseInput` via:
//
//          StorageAccountDetailsResponseArgs{...}
type StorageAccountDetailsResponseInput interface {
	pulumi.Input

	ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput
	ToStorageAccountDetailsResponseOutputWithContext(context.Context) StorageAccountDetailsResponseOutput
}

// Details for the storage account.
type StorageAccountDetailsResponseArgs struct {
	// Account Type of the data to be transferred.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword pulumi.StringPtrInput `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (StorageAccountDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (i StorageAccountDetailsResponseArgs) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return i.ToStorageAccountDetailsResponseOutputWithContext(context.Background())
}

func (i StorageAccountDetailsResponseArgs) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountDetailsResponseOutput)
}

// Details for the storage account.
type StorageAccountDetailsResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountDetailsResponse)(nil)).Elem()
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutput() StorageAccountDetailsResponseOutput {
	return o
}

func (o StorageAccountDetailsResponseOutput) ToStorageAccountDetailsResponseOutputWithContext(ctx context.Context) StorageAccountDetailsResponseOutput {
	return o
}

// Account Type of the data to be transferred.
func (o StorageAccountDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
func (o StorageAccountDetailsResponseOutput) SharePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) *string { return v.SharePassword }).(pulumi.StringPtrOutput)
}

// Storage Account Resource Id.
func (o StorageAccountDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAccountDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Details to transfer all data.
type TransferAllDetails struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// TransferAllDetailsInput is an input type that accepts TransferAllDetailsArgs and TransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferAllDetailsInput` via:
//
//          TransferAllDetailsArgs{...}
type TransferAllDetailsInput interface {
	pulumi.Input

	ToTransferAllDetailsOutput() TransferAllDetailsOutput
	ToTransferAllDetailsOutputWithContext(context.Context) TransferAllDetailsOutput
}

// Details to transfer all data.
type TransferAllDetailsArgs struct {
	// Type of the account of data
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs pulumi.BoolPtrInput `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles pulumi.BoolPtrInput `pulumi:"transferAllFiles"`
}

func (TransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetails)(nil)).Elem()
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutput() TransferAllDetailsOutput {
	return i.ToTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsOutputWithContext(ctx context.Context) TransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput)
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferAllDetailsArgs) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsOutput).ToTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferAllDetailsPtrInput is an input type that accepts TransferAllDetailsArgs, TransferAllDetailsPtr and TransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferAllDetailsPtrInput` via:
//
//          TransferAllDetailsArgs{...}
//
//  or:
//
//          nil
type TransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput
	ToTransferAllDetailsPtrOutputWithContext(context.Context) TransferAllDetailsPtrOutput
}

type transferAllDetailsPtrType TransferAllDetailsArgs

func TransferAllDetailsPtr(v *TransferAllDetailsArgs) TransferAllDetailsPtrInput {
	return (*transferAllDetailsPtrType)(v)
}

func (*transferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetails)(nil)).Elem()
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return i.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferAllDetailsPtrType) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsPtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetails)(nil)).Elem()
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsOutput() TransferAllDetailsOutput {
	return o
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsOutputWithContext(ctx context.Context) TransferAllDetailsOutput {
	return o
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return o.ToTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferAllDetailsOutput) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferAllDetails) *TransferAllDetails {
		return &v
	}).(TransferAllDetailsPtrOutput)
}

// Type of the account of data
func (o TransferAllDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferAllDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetails) *bool { return v.TransferAllBlobs }).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetails) *bool { return v.TransferAllFiles }).(pulumi.BoolPtrOutput)
}

type TransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetails)(nil)).Elem()
}

func (o TransferAllDetailsPtrOutput) ToTransferAllDetailsPtrOutput() TransferAllDetailsPtrOutput {
	return o
}

func (o TransferAllDetailsPtrOutput) ToTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferAllDetailsPtrOutput {
	return o
}

func (o TransferAllDetailsPtrOutput) Elem() TransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferAllDetails) TransferAllDetails { return *v }).(TransferAllDetailsOutput)
}

// Type of the account of data
func (o TransferAllDetailsPtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsPtrOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllBlobs
	}).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsPtrOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetails) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllFiles
	}).(pulumi.BoolPtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsResponse struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// TransferAllDetailsResponseInput is an input type that accepts TransferAllDetailsResponseArgs and TransferAllDetailsResponseOutput values.
// You can construct a concrete instance of `TransferAllDetailsResponseInput` via:
//
//          TransferAllDetailsResponseArgs{...}
type TransferAllDetailsResponseInput interface {
	pulumi.Input

	ToTransferAllDetailsResponseOutput() TransferAllDetailsResponseOutput
	ToTransferAllDetailsResponseOutputWithContext(context.Context) TransferAllDetailsResponseOutput
}

// Details to transfer all data.
type TransferAllDetailsResponseArgs struct {
	// Type of the account of data
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs pulumi.BoolPtrInput `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles pulumi.BoolPtrInput `pulumi:"transferAllFiles"`
}

func (TransferAllDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetailsResponse)(nil)).Elem()
}

func (i TransferAllDetailsResponseArgs) ToTransferAllDetailsResponseOutput() TransferAllDetailsResponseOutput {
	return i.ToTransferAllDetailsResponseOutputWithContext(context.Background())
}

func (i TransferAllDetailsResponseArgs) ToTransferAllDetailsResponseOutputWithContext(ctx context.Context) TransferAllDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsResponseOutput)
}

func (i TransferAllDetailsResponseArgs) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return i.ToTransferAllDetailsResponsePtrOutputWithContext(context.Background())
}

func (i TransferAllDetailsResponseArgs) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsResponseOutput).ToTransferAllDetailsResponsePtrOutputWithContext(ctx)
}

// TransferAllDetailsResponsePtrInput is an input type that accepts TransferAllDetailsResponseArgs, TransferAllDetailsResponsePtr and TransferAllDetailsResponsePtrOutput values.
// You can construct a concrete instance of `TransferAllDetailsResponsePtrInput` via:
//
//          TransferAllDetailsResponseArgs{...}
//
//  or:
//
//          nil
type TransferAllDetailsResponsePtrInput interface {
	pulumi.Input

	ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput
	ToTransferAllDetailsResponsePtrOutputWithContext(context.Context) TransferAllDetailsResponsePtrOutput
}

type transferAllDetailsResponsePtrType TransferAllDetailsResponseArgs

func TransferAllDetailsResponsePtr(v *TransferAllDetailsResponseArgs) TransferAllDetailsResponsePtrInput {
	return (*transferAllDetailsResponsePtrType)(v)
}

func (*transferAllDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetailsResponse)(nil)).Elem()
}

func (i *transferAllDetailsResponsePtrType) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return i.ToTransferAllDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *transferAllDetailsResponsePtrType) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferAllDetailsResponsePtrOutput)
}

// Details to transfer all data.
type TransferAllDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutput() TransferAllDetailsResponseOutput {
	return o
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponseOutputWithContext(ctx context.Context) TransferAllDetailsResponseOutput {
	return o
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return o.ToTransferAllDetailsResponsePtrOutputWithContext(context.Background())
}

func (o TransferAllDetailsResponseOutput) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *TransferAllDetailsResponse {
		return &v
	}).(TransferAllDetailsResponsePtrOutput)
}

// Type of the account of data
func (o TransferAllDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllBlobs }).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponseOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferAllDetailsResponse) *bool { return v.TransferAllFiles }).(pulumi.BoolPtrOutput)
}

type TransferAllDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferAllDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferAllDetailsResponse)(nil)).Elem()
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutput() TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) ToTransferAllDetailsResponsePtrOutputWithContext(ctx context.Context) TransferAllDetailsResponsePtrOutput {
	return o
}

func (o TransferAllDetailsResponsePtrOutput) Elem() TransferAllDetailsResponseOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) TransferAllDetailsResponse { return *v }).(TransferAllDetailsResponseOutput)
}

// Type of the account of data
func (o TransferAllDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// To indicate if all Azure blobs have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllBlobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllBlobs
	}).(pulumi.BoolPtrOutput)
}

// To indicate if all Azure Files have to be transferred
func (o TransferAllDetailsResponsePtrOutput) TransferAllFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferAllDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TransferAllFiles
	}).(pulumi.BoolPtrOutput)
}

// Configuration for defining the transfer of data.
type TransferConfiguration struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// TransferConfigurationInput is an input type that accepts TransferConfigurationArgs and TransferConfigurationOutput values.
// You can construct a concrete instance of `TransferConfigurationInput` via:
//
//          TransferConfigurationArgs{...}
type TransferConfigurationInput interface {
	pulumi.Input

	ToTransferConfigurationOutput() TransferConfigurationOutput
	ToTransferConfigurationOutputWithContext(context.Context) TransferConfigurationOutput
}

// Configuration for defining the transfer of data.
type TransferConfigurationArgs struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails TransferConfigurationTransferAllDetailsPtrInput `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType pulumi.StringInput `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails TransferConfigurationTransferFilterDetailsPtrInput `pulumi:"transferFilterDetails"`
}

func (TransferConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfiguration)(nil)).Elem()
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutput() TransferConfigurationOutput {
	return i.ToTransferConfigurationOutputWithContext(context.Background())
}

func (i TransferConfigurationArgs) ToTransferConfigurationOutputWithContext(ctx context.Context) TransferConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationOutput struct{ *pulumi.OutputState }

func (TransferConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfiguration)(nil)).Elem()
}

func (o TransferConfigurationOutput) ToTransferConfigurationOutput() TransferConfigurationOutput {
	return o
}

func (o TransferConfigurationOutput) ToTransferConfigurationOutputWithContext(ctx context.Context) TransferConfigurationOutput {
	return o
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
func (o TransferConfigurationOutput) TransferAllDetails() TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfiguration) *TransferConfigurationTransferAllDetails { return v.TransferAllDetails }).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Type of the configuration for transfer.
func (o TransferConfigurationOutput) TransferConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferConfiguration) string { return v.TransferConfigurationType }).(pulumi.StringOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
func (o TransferConfigurationOutput) TransferFilterDetails() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfiguration) *TransferConfigurationTransferFilterDetails {
		return v.TransferFilterDetails
	}).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponse struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationResponseTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationResponseTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// TransferConfigurationResponseInput is an input type that accepts TransferConfigurationResponseArgs and TransferConfigurationResponseOutput values.
// You can construct a concrete instance of `TransferConfigurationResponseInput` via:
//
//          TransferConfigurationResponseArgs{...}
type TransferConfigurationResponseInput interface {
	pulumi.Input

	ToTransferConfigurationResponseOutput() TransferConfigurationResponseOutput
	ToTransferConfigurationResponseOutputWithContext(context.Context) TransferConfigurationResponseOutput
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponseArgs struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails TransferConfigurationResponseTransferAllDetailsPtrInput `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType pulumi.StringInput `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails TransferConfigurationResponseTransferFilterDetailsPtrInput `pulumi:"transferFilterDetails"`
}

func (TransferConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponse)(nil)).Elem()
}

func (i TransferConfigurationResponseArgs) ToTransferConfigurationResponseOutput() TransferConfigurationResponseOutput {
	return i.ToTransferConfigurationResponseOutputWithContext(context.Background())
}

func (i TransferConfigurationResponseArgs) ToTransferConfigurationResponseOutputWithContext(ctx context.Context) TransferConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseOutput)
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponseOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponse)(nil)).Elem()
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutput() TransferConfigurationResponseOutput {
	return o
}

func (o TransferConfigurationResponseOutput) ToTransferConfigurationResponseOutputWithContext(ctx context.Context) TransferConfigurationResponseOutput {
	return o
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
func (o TransferConfigurationResponseOutput) TransferAllDetails() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferAllDetails {
		return v.TransferAllDetails
	}).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Type of the configuration for transfer.
func (o TransferConfigurationResponseOutput) TransferConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) string { return v.TransferConfigurationType }).(pulumi.StringOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
func (o TransferConfigurationResponseOutput) TransferFilterDetails() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponse) *TransferConfigurationResponseTransferFilterDetails {
		return v.TransferFilterDetails
	}).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetailsResponse `pulumi:"include"`
}

// TransferConfigurationResponseTransferAllDetailsInput is an input type that accepts TransferConfigurationResponseTransferAllDetailsArgs and TransferConfigurationResponseTransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationResponseTransferAllDetailsInput` via:
//
//          TransferConfigurationResponseTransferAllDetailsArgs{...}
type TransferConfigurationResponseTransferAllDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationResponseTransferAllDetailsOutput() TransferConfigurationResponseTransferAllDetailsOutput
	ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(context.Context) TransferConfigurationResponseTransferAllDetailsOutput
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetailsArgs struct {
	// Details to transfer all data.
	Include TransferAllDetailsResponsePtrInput `pulumi:"include"`
}

func (TransferConfigurationResponseTransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (i TransferConfigurationResponseTransferAllDetailsArgs) ToTransferConfigurationResponseTransferAllDetailsOutput() TransferConfigurationResponseTransferAllDetailsOutput {
	return i.ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationResponseTransferAllDetailsArgs) ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferAllDetailsOutput)
}

func (i TransferConfigurationResponseTransferAllDetailsArgs) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationResponseTransferAllDetailsArgs) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferAllDetailsOutput).ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationResponseTransferAllDetailsPtrInput is an input type that accepts TransferConfigurationResponseTransferAllDetailsArgs, TransferConfigurationResponseTransferAllDetailsPtr and TransferConfigurationResponseTransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationResponseTransferAllDetailsPtrInput` via:
//
//          TransferConfigurationResponseTransferAllDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationResponseTransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput
	ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput
}

type transferConfigurationResponseTransferAllDetailsPtrType TransferConfigurationResponseTransferAllDetailsArgs

func TransferConfigurationResponseTransferAllDetailsPtr(v *TransferConfigurationResponseTransferAllDetailsArgs) TransferConfigurationResponseTransferAllDetailsPtrInput {
	return (*transferConfigurationResponseTransferAllDetailsPtrType)(v)
}

func (*transferConfigurationResponseTransferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (i *transferConfigurationResponseTransferAllDetailsPtrType) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationResponseTransferAllDetailsPtrType) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutput() TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationResponseTransferAllDetailsOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferAllDetails) *TransferConfigurationResponseTransferAllDetails {
		return &v
	}).(TransferConfigurationResponseTransferAllDetailsPtrOutput)
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse { return v.Include }).(TransferAllDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutput() TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) ToTransferConfigurationResponseTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Elem() TransferConfigurationResponseTransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) TransferConfigurationResponseTransferAllDetails {
		return *v
	}).(TransferConfigurationResponseTransferAllDetailsOutput)
}

// Details to transfer all data.
func (o TransferConfigurationResponseTransferAllDetailsPtrOutput) Include() TransferAllDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferAllDetails) *TransferAllDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferAllDetailsResponsePtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetailsResponse `pulumi:"include"`
}

// TransferConfigurationResponseTransferFilterDetailsInput is an input type that accepts TransferConfigurationResponseTransferFilterDetailsArgs and TransferConfigurationResponseTransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationResponseTransferFilterDetailsInput` via:
//
//          TransferConfigurationResponseTransferFilterDetailsArgs{...}
type TransferConfigurationResponseTransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationResponseTransferFilterDetailsOutput() TransferConfigurationResponseTransferFilterDetailsOutput
	ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(context.Context) TransferConfigurationResponseTransferFilterDetailsOutput
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetailsArgs struct {
	// Details of the filtering the transfer of data.
	Include TransferFilterDetailsResponsePtrInput `pulumi:"include"`
}

func (TransferConfigurationResponseTransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (i TransferConfigurationResponseTransferFilterDetailsArgs) ToTransferConfigurationResponseTransferFilterDetailsOutput() TransferConfigurationResponseTransferFilterDetailsOutput {
	return i.ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationResponseTransferFilterDetailsArgs) ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferFilterDetailsOutput)
}

func (i TransferConfigurationResponseTransferFilterDetailsArgs) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationResponseTransferFilterDetailsArgs) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferFilterDetailsOutput).ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationResponseTransferFilterDetailsPtrInput is an input type that accepts TransferConfigurationResponseTransferFilterDetailsArgs, TransferConfigurationResponseTransferFilterDetailsPtr and TransferConfigurationResponseTransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationResponseTransferFilterDetailsPtrInput` via:
//
//          TransferConfigurationResponseTransferFilterDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationResponseTransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput
	ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput
}

type transferConfigurationResponseTransferFilterDetailsPtrType TransferConfigurationResponseTransferFilterDetailsArgs

func TransferConfigurationResponseTransferFilterDetailsPtr(v *TransferConfigurationResponseTransferFilterDetailsArgs) TransferConfigurationResponseTransferFilterDetailsPtrInput {
	return (*transferConfigurationResponseTransferFilterDetailsPtrType)(v)
}

func (*transferConfigurationResponseTransferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (i *transferConfigurationResponseTransferFilterDetailsPtrType) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationResponseTransferFilterDetailsPtrType) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutput() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationResponseTransferFilterDetailsOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferFilterDetails) *TransferConfigurationResponseTransferFilterDetails {
		return &v
	}).(TransferConfigurationResponseTransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

type TransferConfigurationResponseTransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationResponseTransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationResponseTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutput() TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) ToTransferConfigurationResponseTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationResponseTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Elem() TransferConfigurationResponseTransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) TransferConfigurationResponseTransferFilterDetails {
		return *v
	}).(TransferConfigurationResponseTransferFilterDetailsOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationResponseTransferFilterDetailsPtrOutput) Include() TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferConfigurationResponseTransferFilterDetails) *TransferFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferFilterDetailsResponsePtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetails `pulumi:"include"`
}

// TransferConfigurationTransferAllDetailsInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs and TransferConfigurationTransferAllDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsInput` via:
//
//          TransferConfigurationTransferAllDetailsArgs{...}
type TransferConfigurationTransferAllDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput
	ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsOutput
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetailsArgs struct {
	// Details to transfer all data.
	Include TransferAllDetailsPtrInput `pulumi:"include"`
}

func (TransferConfigurationTransferAllDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput {
	return i.ToTransferConfigurationTransferAllDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput)
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferAllDetailsArgs) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsOutput).ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferAllDetailsPtrInput is an input type that accepts TransferConfigurationTransferAllDetailsArgs, TransferConfigurationTransferAllDetailsPtr and TransferConfigurationTransferAllDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferAllDetailsPtrInput` via:
//
//          TransferConfigurationTransferAllDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationTransferAllDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput
	ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferAllDetailsPtrOutput
}

type transferConfigurationTransferAllDetailsPtrType TransferConfigurationTransferAllDetailsArgs

func TransferConfigurationTransferAllDetailsPtr(v *TransferConfigurationTransferAllDetailsArgs) TransferConfigurationTransferAllDetailsPtrInput {
	return (*transferConfigurationTransferAllDetailsPtrType)(v)
}

func (*transferConfigurationTransferAllDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return i.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferAllDetailsPtrType) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferAllDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsOutput() TransferConfigurationTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationTransferAllDetailsOutput) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferAllDetails) *TransferConfigurationTransferAllDetails {
		return &v
	}).(TransferConfigurationTransferAllDetailsPtrOutput)
}

// Details to transfer all data.
func (o TransferConfigurationTransferAllDetailsOutput) Include() TransferAllDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferAllDetails) *TransferAllDetails { return v.Include }).(TransferAllDetailsPtrOutput)
}

type TransferConfigurationTransferAllDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferAllDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferAllDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) ToTransferConfigurationTransferAllDetailsPtrOutput() TransferConfigurationTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) ToTransferConfigurationTransferAllDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferAllDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferAllDetailsPtrOutput) Elem() TransferConfigurationTransferAllDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferAllDetails) TransferConfigurationTransferAllDetails { return *v }).(TransferConfigurationTransferAllDetailsOutput)
}

// Details to transfer all data.
func (o TransferConfigurationTransferAllDetailsPtrOutput) Include() TransferAllDetailsPtrOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferAllDetails) *TransferAllDetails {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferAllDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetails `pulumi:"include"`
}

// TransferConfigurationTransferFilterDetailsInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs and TransferConfigurationTransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsInput` via:
//
//          TransferConfigurationTransferFilterDetailsArgs{...}
type TransferConfigurationTransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput
	ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsOutput
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetailsArgs struct {
	// Details of the filtering the transfer of data.
	Include TransferFilterDetailsPtrInput `pulumi:"include"`
}

func (TransferConfigurationTransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput {
	return i.ToTransferConfigurationTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput)
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferConfigurationTransferFilterDetailsArgs) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsOutput).ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferConfigurationTransferFilterDetailsPtrInput is an input type that accepts TransferConfigurationTransferFilterDetailsArgs, TransferConfigurationTransferFilterDetailsPtr and TransferConfigurationTransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferConfigurationTransferFilterDetailsPtrInput` via:
//
//          TransferConfigurationTransferFilterDetailsArgs{...}
//
//  or:
//
//          nil
type TransferConfigurationTransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput
	ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Context) TransferConfigurationTransferFilterDetailsPtrOutput
}

type transferConfigurationTransferFilterDetailsPtrType TransferConfigurationTransferFilterDetailsArgs

func TransferConfigurationTransferFilterDetailsPtr(v *TransferConfigurationTransferFilterDetailsArgs) TransferConfigurationTransferFilterDetailsPtrInput {
	return (*transferConfigurationTransferFilterDetailsPtrType)(v)
}

func (*transferConfigurationTransferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return i.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferConfigurationTransferFilterDetailsPtrType) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsOutput() TransferConfigurationTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferConfigurationTransferFilterDetailsOutput) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferFilterDetails) *TransferConfigurationTransferFilterDetails {
		return &v
	}).(TransferConfigurationTransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationTransferFilterDetailsOutput) Include() TransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferConfigurationTransferFilterDetails) *TransferFilterDetails { return v.Include }).(TransferFilterDetailsPtrOutput)
}

type TransferConfigurationTransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferConfigurationTransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferConfigurationTransferFilterDetails)(nil)).Elem()
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) ToTransferConfigurationTransferFilterDetailsPtrOutput() TransferConfigurationTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) ToTransferConfigurationTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferConfigurationTransferFilterDetailsPtrOutput {
	return o
}

func (o TransferConfigurationTransferFilterDetailsPtrOutput) Elem() TransferConfigurationTransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferFilterDetails) TransferConfigurationTransferFilterDetails {
		return *v
	}).(TransferConfigurationTransferFilterDetailsOutput)
}

// Details of the filtering the transfer of data.
func (o TransferConfigurationTransferFilterDetailsPtrOutput) Include() TransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferConfigurationTransferFilterDetails) *TransferFilterDetails {
		if v == nil {
			return nil
		}
		return v.Include
	}).(TransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetails struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetails `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetails `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetails `pulumi:"filterFileDetails"`
}

// TransferFilterDetailsInput is an input type that accepts TransferFilterDetailsArgs and TransferFilterDetailsOutput values.
// You can construct a concrete instance of `TransferFilterDetailsInput` via:
//
//          TransferFilterDetailsArgs{...}
type TransferFilterDetailsInput interface {
	pulumi.Input

	ToTransferFilterDetailsOutput() TransferFilterDetailsOutput
	ToTransferFilterDetailsOutputWithContext(context.Context) TransferFilterDetailsOutput
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsArgs struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails AzureFileFilterDetailsPtrInput `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails BlobFilterDetailsPtrInput `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails FilterFileDetailsArrayInput `pulumi:"filterFileDetails"`
}

func (TransferFilterDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetails)(nil)).Elem()
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutput() TransferFilterDetailsOutput {
	return i.ToTransferFilterDetailsOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsOutputWithContext(ctx context.Context) TransferFilterDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput)
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i TransferFilterDetailsArgs) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsOutput).ToTransferFilterDetailsPtrOutputWithContext(ctx)
}

// TransferFilterDetailsPtrInput is an input type that accepts TransferFilterDetailsArgs, TransferFilterDetailsPtr and TransferFilterDetailsPtrOutput values.
// You can construct a concrete instance of `TransferFilterDetailsPtrInput` via:
//
//          TransferFilterDetailsArgs{...}
//
//  or:
//
//          nil
type TransferFilterDetailsPtrInput interface {
	pulumi.Input

	ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput
	ToTransferFilterDetailsPtrOutputWithContext(context.Context) TransferFilterDetailsPtrOutput
}

type transferFilterDetailsPtrType TransferFilterDetailsArgs

func TransferFilterDetailsPtr(v *TransferFilterDetailsArgs) TransferFilterDetailsPtrInput {
	return (*transferFilterDetailsPtrType)(v)
}

func (*transferFilterDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetails)(nil)).Elem()
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return i.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (i *transferFilterDetailsPtrType) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsPtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetails)(nil)).Elem()
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsOutput() TransferFilterDetailsOutput {
	return o
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsOutputWithContext(ctx context.Context) TransferFilterDetailsOutput {
	return o
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return o.ToTransferFilterDetailsPtrOutputWithContext(context.Background())
}

func (o TransferFilterDetailsOutput) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferFilterDetails) *TransferFilterDetails {
		return &v
	}).(TransferFilterDetailsPtrOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsOutput) AzureFileFilterDetails() AzureFileFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferFilterDetails) *AzureFileFilterDetails { return v.AzureFileFilterDetails }).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsOutput) BlobFilterDetails() BlobFilterDetailsPtrOutput {
	return o.ApplyT(func(v TransferFilterDetails) *BlobFilterDetails { return v.BlobFilterDetails }).(BlobFilterDetailsPtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferFilterDetails) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsOutput) FilterFileDetails() FilterFileDetailsArrayOutput {
	return o.ApplyT(func(v TransferFilterDetails) []FilterFileDetails { return v.FilterFileDetails }).(FilterFileDetailsArrayOutput)
}

type TransferFilterDetailsPtrOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetails)(nil)).Elem()
}

func (o TransferFilterDetailsPtrOutput) ToTransferFilterDetailsPtrOutput() TransferFilterDetailsPtrOutput {
	return o
}

func (o TransferFilterDetailsPtrOutput) ToTransferFilterDetailsPtrOutputWithContext(ctx context.Context) TransferFilterDetailsPtrOutput {
	return o
}

func (o TransferFilterDetailsPtrOutput) Elem() TransferFilterDetailsOutput {
	return o.ApplyT(func(v *TransferFilterDetails) TransferFilterDetails { return *v }).(TransferFilterDetailsOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsPtrOutput) AzureFileFilterDetails() AzureFileFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *AzureFileFilterDetails {
		if v == nil {
			return nil
		}
		return v.AzureFileFilterDetails
	}).(AzureFileFilterDetailsPtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsPtrOutput) BlobFilterDetails() BlobFilterDetailsPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *BlobFilterDetails {
		if v == nil {
			return nil
		}
		return v.BlobFilterDetails
	}).(BlobFilterDetailsPtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsPtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsPtrOutput) FilterFileDetails() FilterFileDetailsArrayOutput {
	return o.ApplyT(func(v *TransferFilterDetails) []FilterFileDetails {
		if v == nil {
			return nil
		}
		return v.FilterFileDetails
	}).(FilterFileDetailsArrayOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponse struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetailsResponse `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetailsResponse `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetailsResponse `pulumi:"filterFileDetails"`
}

// TransferFilterDetailsResponseInput is an input type that accepts TransferFilterDetailsResponseArgs and TransferFilterDetailsResponseOutput values.
// You can construct a concrete instance of `TransferFilterDetailsResponseInput` via:
//
//          TransferFilterDetailsResponseArgs{...}
type TransferFilterDetailsResponseInput interface {
	pulumi.Input

	ToTransferFilterDetailsResponseOutput() TransferFilterDetailsResponseOutput
	ToTransferFilterDetailsResponseOutputWithContext(context.Context) TransferFilterDetailsResponseOutput
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponseArgs struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails AzureFileFilterDetailsResponsePtrInput `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails BlobFilterDetailsResponsePtrInput `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType pulumi.StringInput `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails FilterFileDetailsResponseArrayInput `pulumi:"filterFileDetails"`
}

func (TransferFilterDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetailsResponse)(nil)).Elem()
}

func (i TransferFilterDetailsResponseArgs) ToTransferFilterDetailsResponseOutput() TransferFilterDetailsResponseOutput {
	return i.ToTransferFilterDetailsResponseOutputWithContext(context.Background())
}

func (i TransferFilterDetailsResponseArgs) ToTransferFilterDetailsResponseOutputWithContext(ctx context.Context) TransferFilterDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsResponseOutput)
}

func (i TransferFilterDetailsResponseArgs) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return i.ToTransferFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i TransferFilterDetailsResponseArgs) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsResponseOutput).ToTransferFilterDetailsResponsePtrOutputWithContext(ctx)
}

// TransferFilterDetailsResponsePtrInput is an input type that accepts TransferFilterDetailsResponseArgs, TransferFilterDetailsResponsePtr and TransferFilterDetailsResponsePtrOutput values.
// You can construct a concrete instance of `TransferFilterDetailsResponsePtrInput` via:
//
//          TransferFilterDetailsResponseArgs{...}
//
//  or:
//
//          nil
type TransferFilterDetailsResponsePtrInput interface {
	pulumi.Input

	ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput
	ToTransferFilterDetailsResponsePtrOutputWithContext(context.Context) TransferFilterDetailsResponsePtrOutput
}

type transferFilterDetailsResponsePtrType TransferFilterDetailsResponseArgs

func TransferFilterDetailsResponsePtr(v *TransferFilterDetailsResponseArgs) TransferFilterDetailsResponsePtrInput {
	return (*transferFilterDetailsResponsePtrType)(v)
}

func (*transferFilterDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetailsResponse)(nil)).Elem()
}

func (i *transferFilterDetailsResponsePtrType) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return i.ToTransferFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *transferFilterDetailsResponsePtrType) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferFilterDetailsResponsePtrOutput)
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponseOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutput() TransferFilterDetailsResponseOutput {
	return o
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponseOutputWithContext(ctx context.Context) TransferFilterDetailsResponseOutput {
	return o
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return o.ToTransferFilterDetailsResponsePtrOutputWithContext(context.Background())
}

func (o TransferFilterDetailsResponseOutput) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *TransferFilterDetailsResponse {
		return &v
	}).(TransferFilterDetailsResponsePtrOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponseOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse { return v.AzureFileFilterDetails }).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponseOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) *BlobFilterDetailsResponse { return v.BlobFilterDetails }).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponseOutput) DataAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) string { return v.DataAccountType }).(pulumi.StringOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponseOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v TransferFilterDetailsResponse) []FilterFileDetailsResponse { return v.FilterFileDetails }).(FilterFileDetailsResponseArrayOutput)
}

type TransferFilterDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (TransferFilterDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferFilterDetailsResponse)(nil)).Elem()
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutput() TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) ToTransferFilterDetailsResponsePtrOutputWithContext(ctx context.Context) TransferFilterDetailsResponsePtrOutput {
	return o
}

func (o TransferFilterDetailsResponsePtrOutput) Elem() TransferFilterDetailsResponseOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) TransferFilterDetailsResponse { return *v }).(TransferFilterDetailsResponseOutput)
}

// Filter details to transfer Azure files.
func (o TransferFilterDetailsResponsePtrOutput) AzureFileFilterDetails() AzureFileFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *AzureFileFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AzureFileFilterDetails
	}).(AzureFileFilterDetailsResponsePtrOutput)
}

// Filter details to transfer blobs.
func (o TransferFilterDetailsResponsePtrOutput) BlobFilterDetails() BlobFilterDetailsResponsePtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *BlobFilterDetailsResponse {
		if v == nil {
			return nil
		}
		return v.BlobFilterDetails
	}).(BlobFilterDetailsResponsePtrOutput)
}

// Type of the account of data.
func (o TransferFilterDetailsResponsePtrOutput) DataAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataAccountType
	}).(pulumi.StringPtrOutput)
}

// Details of the filter files to be used for data transfer.
func (o TransferFilterDetailsResponsePtrOutput) FilterFileDetails() FilterFileDetailsResponseArrayOutput {
	return o.ApplyT(func(v *TransferFilterDetailsResponse) []FilterFileDetailsResponse {
		if v == nil {
			return nil
		}
		return v.FilterFileDetails
	}).(FilterFileDetailsResponseArrayOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesInput is an input type that accepts TransportPreferencesArgs and TransportPreferencesOutput values.
// You can construct a concrete instance of `TransportPreferencesInput` via:
//
//          TransportPreferencesArgs{...}
type TransportPreferencesInput interface {
	pulumi.Input

	ToTransportPreferencesOutput() TransportPreferencesOutput
	ToTransportPreferencesOutputWithContext(context.Context) TransportPreferencesOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return i.ToTransportPreferencesOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput)
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput).ToTransportPreferencesPtrOutputWithContext(ctx)
}

// TransportPreferencesPtrInput is an input type that accepts TransportPreferencesArgs, TransportPreferencesPtr and TransportPreferencesPtrOutput values.
// You can construct a concrete instance of `TransportPreferencesPtrInput` via:
//
//          TransportPreferencesArgs{...}
//
//  or:
//
//          nil
type TransportPreferencesPtrInput interface {
	pulumi.Input

	ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput
	ToTransportPreferencesPtrOutputWithContext(context.Context) TransportPreferencesPtrOutput
}

type transportPreferencesPtrType TransportPreferencesArgs

func TransportPreferencesPtr(v *TransportPreferencesArgs) TransportPreferencesPtrInput {
	return (*transportPreferencesPtrType)(v)
}

func (*transportPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesOutput struct{ *pulumi.OutputState }

func (TransportPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o.ApplyT(func(v TransportPreferences) *TransportPreferences {
		return &v
	}).(TransportPreferencesPtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferences) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesPtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) Elem() TransportPreferencesOutput {
	return o.ApplyT(func(v *TransportPreferences) TransportPreferences { return *v }).(TransportPreferencesOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesPtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferences) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesResponseInput is an input type that accepts TransportPreferencesResponseArgs and TransportPreferencesResponseOutput values.
// You can construct a concrete instance of `TransportPreferencesResponseInput` via:
//
//          TransportPreferencesResponseArgs{...}
type TransportPreferencesResponseInput interface {
	pulumi.Input

	ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput
	ToTransportPreferencesResponseOutputWithContext(context.Context) TransportPreferencesResponseOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return i.ToTransportPreferencesResponseOutputWithContext(context.Background())
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponseOutput)
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return i.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponseOutput).ToTransportPreferencesResponsePtrOutputWithContext(ctx)
}

// TransportPreferencesResponsePtrInput is an input type that accepts TransportPreferencesResponseArgs, TransportPreferencesResponsePtr and TransportPreferencesResponsePtrOutput values.
// You can construct a concrete instance of `TransportPreferencesResponsePtrInput` via:
//
//          TransportPreferencesResponseArgs{...}
//
//  or:
//
//          nil
type TransportPreferencesResponsePtrInput interface {
	pulumi.Input

	ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput
	ToTransportPreferencesResponsePtrOutputWithContext(context.Context) TransportPreferencesResponsePtrOutput
}

type transportPreferencesResponsePtrType TransportPreferencesResponseArgs

func TransportPreferencesResponsePtr(v *TransportPreferencesResponseArgs) TransportPreferencesResponsePtrInput {
	return (*transportPreferencesResponsePtrType)(v)
}

func (*transportPreferencesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (i *transportPreferencesResponsePtrType) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return i.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i *transportPreferencesResponsePtrType) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponsePtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) *TransportPreferencesResponse {
		return &v
	}).(TransportPreferencesResponsePtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponseOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) Elem() TransportPreferencesResponseOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) TransportPreferencesResponse { return *v }).(TransportPreferencesResponseOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponsePtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponse struct {
	// Name of the job.
	JobName string `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets interface{} `pulumi:"jobSecrets"`
}

// UnencryptedCredentialsResponseInput is an input type that accepts UnencryptedCredentialsResponseArgs and UnencryptedCredentialsResponseOutput values.
// You can construct a concrete instance of `UnencryptedCredentialsResponseInput` via:
//
//          UnencryptedCredentialsResponseArgs{...}
type UnencryptedCredentialsResponseInput interface {
	pulumi.Input

	ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput
	ToUnencryptedCredentialsResponseOutputWithContext(context.Context) UnencryptedCredentialsResponseOutput
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponseArgs struct {
	// Name of the job.
	JobName pulumi.StringInput `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets pulumi.Input `pulumi:"jobSecrets"`
}

func (UnencryptedCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnencryptedCredentialsResponse)(nil)).Elem()
}

func (i UnencryptedCredentialsResponseArgs) ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput {
	return i.ToUnencryptedCredentialsResponseOutputWithContext(context.Background())
}

func (i UnencryptedCredentialsResponseArgs) ToUnencryptedCredentialsResponseOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnencryptedCredentialsResponseOutput)
}

// UnencryptedCredentialsResponseArrayInput is an input type that accepts UnencryptedCredentialsResponseArray and UnencryptedCredentialsResponseArrayOutput values.
// You can construct a concrete instance of `UnencryptedCredentialsResponseArrayInput` via:
//
//          UnencryptedCredentialsResponseArray{ UnencryptedCredentialsResponseArgs{...} }
type UnencryptedCredentialsResponseArrayInput interface {
	pulumi.Input

	ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput
	ToUnencryptedCredentialsResponseArrayOutputWithContext(context.Context) UnencryptedCredentialsResponseArrayOutput
}

type UnencryptedCredentialsResponseArray []UnencryptedCredentialsResponseInput

func (UnencryptedCredentialsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnencryptedCredentialsResponse)(nil)).Elem()
}

func (i UnencryptedCredentialsResponseArray) ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput {
	return i.ToUnencryptedCredentialsResponseArrayOutputWithContext(context.Background())
}

func (i UnencryptedCredentialsResponseArray) ToUnencryptedCredentialsResponseArrayOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnencryptedCredentialsResponseArrayOutput)
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput {
	return o
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseOutput {
	return o
}

// Name of the job.
func (o UnencryptedCredentialsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Secrets related to this job.
func (o UnencryptedCredentialsResponseOutput) JobSecrets() pulumi.AnyOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) interface{} { return v.JobSecrets }).(pulumi.AnyOutput)
}

type UnencryptedCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) Index(i pulumi.IntInput) UnencryptedCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnencryptedCredentialsResponse {
		return vs[0].([]UnencryptedCredentialsResponse)[vs[1].(int)]
	}).(UnencryptedCredentialsResponseOutput)
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponse struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// UserAssignedIdentityResponseInput is an input type that accepts UserAssignedIdentityResponseArgs and UserAssignedIdentityResponseOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseInput` via:
//
//          UserAssignedIdentityResponseArgs{...}
type UserAssignedIdentityResponseInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput
	ToUserAssignedIdentityResponseOutputWithContext(context.Context) UserAssignedIdentityResponseOutput
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponseArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (UserAssignedIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return i.ToUserAssignedIdentityResponseOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseArgs) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseOutput)
}

// UserAssignedIdentityResponseMapInput is an input type that accepts UserAssignedIdentityResponseMap and UserAssignedIdentityResponseMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityResponseMapInput` via:
//
//          UserAssignedIdentityResponseMap{ "key": UserAssignedIdentityResponseArgs{...} }
type UserAssignedIdentityResponseMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput
	ToUserAssignedIdentityResponseMapOutputWithContext(context.Context) UserAssignedIdentityResponseMapOutput
}

type UserAssignedIdentityResponseMap map[string]UserAssignedIdentityResponseInput

func (UserAssignedIdentityResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return i.ToUserAssignedIdentityResponseMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityResponseMap) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityResponseMapOutput)
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// User assigned identity properties.
type UserAssignedPropertiesResponse struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId *string `pulumi:"resourceId"`
}

// UserAssignedPropertiesResponseInput is an input type that accepts UserAssignedPropertiesResponseArgs and UserAssignedPropertiesResponseOutput values.
// You can construct a concrete instance of `UserAssignedPropertiesResponseInput` via:
//
//          UserAssignedPropertiesResponseArgs{...}
type UserAssignedPropertiesResponseInput interface {
	pulumi.Input

	ToUserAssignedPropertiesResponseOutput() UserAssignedPropertiesResponseOutput
	ToUserAssignedPropertiesResponseOutputWithContext(context.Context) UserAssignedPropertiesResponseOutput
}

// User assigned identity properties.
type UserAssignedPropertiesResponseArgs struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (UserAssignedPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedPropertiesResponse)(nil)).Elem()
}

func (i UserAssignedPropertiesResponseArgs) ToUserAssignedPropertiesResponseOutput() UserAssignedPropertiesResponseOutput {
	return i.ToUserAssignedPropertiesResponseOutputWithContext(context.Background())
}

func (i UserAssignedPropertiesResponseArgs) ToUserAssignedPropertiesResponseOutputWithContext(ctx context.Context) UserAssignedPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesResponseOutput)
}

func (i UserAssignedPropertiesResponseArgs) ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput {
	return i.ToUserAssignedPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i UserAssignedPropertiesResponseArgs) ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesResponseOutput).ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx)
}

// UserAssignedPropertiesResponsePtrInput is an input type that accepts UserAssignedPropertiesResponseArgs, UserAssignedPropertiesResponsePtr and UserAssignedPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `UserAssignedPropertiesResponsePtrInput` via:
//
//          UserAssignedPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type UserAssignedPropertiesResponsePtrInput interface {
	pulumi.Input

	ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput
	ToUserAssignedPropertiesResponsePtrOutputWithContext(context.Context) UserAssignedPropertiesResponsePtrOutput
}

type userAssignedPropertiesResponsePtrType UserAssignedPropertiesResponseArgs

func UserAssignedPropertiesResponsePtr(v *UserAssignedPropertiesResponseArgs) UserAssignedPropertiesResponsePtrInput {
	return (*userAssignedPropertiesResponsePtrType)(v)
}

func (*userAssignedPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedPropertiesResponse)(nil)).Elem()
}

func (i *userAssignedPropertiesResponsePtrType) ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput {
	return i.ToUserAssignedPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *userAssignedPropertiesResponsePtrType) ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedPropertiesResponsePtrOutput)
}

// User assigned identity properties.
type UserAssignedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponseOutput() UserAssignedPropertiesResponseOutput {
	return o
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponseOutputWithContext(ctx context.Context) UserAssignedPropertiesResponseOutput {
	return o
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput {
	return o.ToUserAssignedPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o UserAssignedPropertiesResponseOutput) ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserAssignedPropertiesResponse) *UserAssignedPropertiesResponse {
		return &v
	}).(UserAssignedPropertiesResponsePtrOutput)
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedPropertiesResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserAssignedPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedPropertiesResponsePtrOutput) ToUserAssignedPropertiesResponsePtrOutput() UserAssignedPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedPropertiesResponsePtrOutput) ToUserAssignedPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedPropertiesResponsePtrOutput) Elem() UserAssignedPropertiesResponseOutput {
	return o.ApplyT(func(v *UserAssignedPropertiesResponse) UserAssignedPropertiesResponse { return *v }).(UserAssignedPropertiesResponseOutput)
}

// Arm resource id for user assigned identity to be used to fetch MSI token.
func (o UserAssignedPropertiesResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(AccountCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplianceNetworkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureFileFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(BlobFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseOutput{})
	pulumi.RegisterOutputType(CopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskCopyProgressResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxDiskJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyAccountCopyLogDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavyJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxHeavySecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsOutput{})
	pulumi.RegisterOutputType(DataBoxJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseOutput{})
	pulumi.RegisterOutputType(DataBoxSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsOutput{})
	pulumi.RegisterOutputType(DataExportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataExportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsOutput{})
	pulumi.RegisterOutputType(DataImportDetailsArrayOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataImportDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DataboxJobSecretsResponseOutput{})
	pulumi.RegisterOutputType(DcAccessSecurityCodeResponseOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseOutput{})
	pulumi.RegisterOutputType(DiskSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsArrayOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseOutput{})
	pulumi.RegisterOutputType(FilterFileDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoPtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(JobStagesResponseOutput{})
	pulumi.RegisterOutputType(JobStagesResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyResponseOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsOutput{})
	pulumi.RegisterOutputType(ManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(PackageShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferencesResponseOutput{})
	pulumi.RegisterOutputType(PreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseOutput{})
	pulumi.RegisterOutputType(ShareCredentialDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ShippingAddressOutput{})
	pulumi.RegisterOutputType(ShippingAddressPtrOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsOutput{})
	pulumi.RegisterOutputType(StorageAccountDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferAllDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationResponseTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferAllDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferConfigurationTransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsPtrOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponseOutput{})
	pulumi.RegisterOutputType(TransferFilterDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesOutput{})
	pulumi.RegisterOutputType(TransportPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedPropertiesResponsePtrOutput{})
}
