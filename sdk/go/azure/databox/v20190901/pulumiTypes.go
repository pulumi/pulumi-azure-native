// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Credential details of the account.
type AccountCredentialDetailsResponse struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString string `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName string `pulumi:"accountName"`
	// Data Destination Type.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails []ShareCredentialDetailsResponse `pulumi:"shareCredentialDetails"`
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponse struct {
	// Mac Address.
	MacAddress string `pulumi:"macAddress"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreference `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreferenceResponse `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Copy progress.
type CopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// Amount of data uploaded by the job as of now.
	BytesSentToCloud float64 `pulumi:"bytesSentToCloud"`
	// Data Destination Type.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Number of files which could not be copied
	FilesErroredOut float64 `pulumi:"filesErroredOut"`
	// Number of files processed by the job as of now.
	FilesProcessed float64 `pulumi:"filesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded float64 `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed float64 `pulumi:"invalidFilesProcessed"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount float64 `pulumi:"renamedContainerCount"`
	// Name of the storage account where the data needs to be uploaded.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess float64 `pulumi:"totalBytesToProcess"`
	// Total number of files to be processed by the job.
	TotalFilesToProcess float64 `pulumi:"totalFilesToProcess"`
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponse struct {
	// Destination account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink string `pulumi:"copyLogLink"`
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponse struct {
	// Bytes copied during the copy of disk.
	BytesCopied float64 `pulumi:"bytesCopied"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete int `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber string `pulumi:"serialNumber"`
	// The Status of the copy
	Status string `pulumi:"status"`
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetails
func (val *DataBoxDiskJobDetails) Defaults() *DataBoxDiskJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxDiskCopyProgressResponse `pulumi:"copyProgress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails map[string]int `pulumi:"disksAndSizeDetails"`
	// Error details for failure. This is optional.
	ErrorDetails []JobErrorDetailsResponse `pulumi:"errorDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetailsResponse
func (val *DataBoxDiskJobDetailsResponse) Defaults() *DataBoxDiskJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode *DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined bool `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxDisk'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey string `pulumi:"passKey"`
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponse struct {
	// Destination account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink []string `pulumi:"copyLogLink"`
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// Set Device password for unlocking Databox Heavy
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetails
func (val *DataBoxHeavyJobDetails) Defaults() *DataBoxHeavyJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// Set Device password for unlocking Databox Heavy
	DevicePassword *string `pulumi:"devicePassword"`
	// Error details for failure. This is optional.
	ErrorDetails []JobErrorDetailsResponse `pulumi:"errorDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetailsResponse
func (val *DataBoxHeavyJobDetailsResponse) Defaults() *DataBoxHeavyJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponse struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets []DataBoxHeavySecretResponse `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode *DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxHeavy'.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// Databox Job Details
type DataBoxJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// Set Device password for unlocking Databox
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetails
func (val *DataBoxJobDetails) Defaults() *DataBoxJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Job Details
type DataBoxJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Destination account details.
	DestinationAccountDetails []interface{} `pulumi:"destinationAccountDetails"`
	// Set Device password for unlocking Databox
	DevicePassword *string `pulumi:"devicePassword"`
	// Error details for failure. This is optional.
	ErrorDetails []JobErrorDetailsResponse `pulumi:"errorDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetailsResponse
func (val *DataBoxJobDetailsResponse) Defaults() *DataBoxJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ShippingAddress = *tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to a DataBox.
type DataBoxSecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// The secrets related to a databox job.
type DataboxJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode *DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBox'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets []DataBoxSecretResponse `pulumi:"podSecrets"`
}

// Dc Access Security code for device.
type DcAccessSecurityCodeResponse struct {
	// Dc Access Code for dispatching from DC.
	ForwardDCAccessCode *string `pulumi:"forwardDCAccessCode"`
	// Dc Access code for dropping off at DC.
	ReverseDCAccessCode *string `pulumi:"reverseDCAccessCode"`
}

// Details for the destination compute disks.
type DestinationManagedDiskDetails struct {
	// Arm Id of the destination where the data has to be moved.
	AccountId *string `pulumi:"accountId"`
	// Data Destination Type.
	// Expected value is 'ManagedDisk'.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Destination Resource Group Id where the Compute disks should be created.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Share password to be shared by all shares in SA.
	SharePassword *string `pulumi:"sharePassword"`
	// Arm Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Details for the destination compute disks.
type DestinationManagedDiskDetailsResponse struct {
	// Arm Id of the destination where the data has to be moved.
	AccountId *string `pulumi:"accountId"`
	// Data Destination Type.
	// Expected value is 'ManagedDisk'.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Destination Resource Group Id where the Compute disks should be created.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Share password to be shared by all shares in SA.
	SharePassword *string `pulumi:"sharePassword"`
	// Arm Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Details for the destination storage account.
type DestinationStorageAccountDetails struct {
	// Arm Id of the destination where the data has to be moved.
	AccountId *string `pulumi:"accountId"`
	// Data Destination Type.
	// Expected value is 'StorageAccount'.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Share password to be shared by all shares in SA.
	SharePassword *string `pulumi:"sharePassword"`
	// Destination Storage Account Arm Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Details for the destination storage account.
type DestinationStorageAccountDetailsResponse struct {
	// Arm Id of the destination where the data has to be moved.
	AccountId *string `pulumi:"accountId"`
	// Data Destination Type.
	// Expected value is 'StorageAccount'.
	DataDestinationType string `pulumi:"dataDestinationType"`
	// Share password to be shared by all shares in SA.
	SharePassword *string `pulumi:"sharePassword"`
	// Destination Storage Account Arm Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Contains all the secrets of a Disk.
type DiskSecretResponse struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
}

// Top level error for the job.
type ErrorResponse struct {
	// Error code that can be used to programmatically identify the error.
	Code string `pulumi:"code"`
	// Describes the error in detail and provides debugging information.
	Message string `pulumi:"message"`
}

// Top level error for the job.
type ErrorResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponse)(nil)).Elem()
}

func (o ErrorResponseOutput) ToErrorResponseOutput() ErrorResponseOutput {
	return o
}

func (o ErrorResponseOutput) ToErrorResponseOutputWithContext(ctx context.Context) ErrorResponseOutput {
	return o
}

// Error code that can be used to programmatically identify the error.
func (o ErrorResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Describes the error in detail and provides debugging information.
func (o ErrorResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Additional delivery info.
type JobDeliveryInfo struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoInput is an input type that accepts JobDeliveryInfoArgs and JobDeliveryInfoOutput values.
// You can construct a concrete instance of `JobDeliveryInfoInput` via:
//
//	JobDeliveryInfoArgs{...}
type JobDeliveryInfoInput interface {
	pulumi.Input

	ToJobDeliveryInfoOutput() JobDeliveryInfoOutput
	ToJobDeliveryInfoOutputWithContext(context.Context) JobDeliveryInfoOutput
}

// Additional delivery info.
type JobDeliveryInfoArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return i.ToJobDeliveryInfoOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput)
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput).ToJobDeliveryInfoPtrOutputWithContext(ctx)
}

// JobDeliveryInfoPtrInput is an input type that accepts JobDeliveryInfoArgs, JobDeliveryInfoPtr and JobDeliveryInfoPtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoPtrInput` via:
//
//	        JobDeliveryInfoArgs{...}
//
//	or:
//
//	        nil
type JobDeliveryInfoPtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput
	ToJobDeliveryInfoPtrOutputWithContext(context.Context) JobDeliveryInfoPtrOutput
}

type jobDeliveryInfoPtrType JobDeliveryInfoArgs

func JobDeliveryInfoPtr(v *JobDeliveryInfoArgs) JobDeliveryInfoPtrInput {
	return (*jobDeliveryInfoPtrType)(v)
}

func (*jobDeliveryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDeliveryInfo) *JobDeliveryInfo {
		return &v
	}).(JobDeliveryInfoPtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfo) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoPtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) Elem() JobDeliveryInfoOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) JobDeliveryInfo {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfo
		return ret
	}).(JobDeliveryInfoOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoPtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponse struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// Additional delivery info.
type JobDeliveryInfoResponseOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return o
}

// Scheduled date time.
func (o JobDeliveryInfoResponseOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) Elem() JobDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) JobDeliveryInfoResponse {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfoResponse
		return ret
	}).(JobDeliveryInfoResponseOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponsePtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Job Error Details for providing the information and recommended action.
type JobErrorDetailsResponse struct {
	// Code for the error.
	ErrorCode int `pulumi:"errorCode"`
	// Message for the error.
	ErrorMessage string `pulumi:"errorMessage"`
	// Contains the non localized exception message
	ExceptionMessage string `pulumi:"exceptionMessage"`
	// Recommended action for the error.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// Job stages.
type JobStagesResponse struct {
	// Display name of the job stage.
	DisplayName string `pulumi:"displayName"`
	// Error details for the stage.
	ErrorDetails []JobErrorDetailsResponse `pulumi:"errorDetails"`
	// Job Stage Details
	JobStageDetails interface{} `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName string `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus string `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime string `pulumi:"stageTime"`
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreference
func (val *NotificationPreference) Defaults() *NotificationPreference {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreferenceResponse
func (val *NotificationPreferenceResponse) Defaults() *NotificationPreferenceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// Shipping details.
type PackageShippingDetailsResponse struct {
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId string `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// Preferences related to the order
type Preferences struct {
	// Preferred Data Center Region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// Preferences related to the order
type PreferencesResponse struct {
	// Preferred Data Center Region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponse struct {
	// Password for the share.
	Password string `pulumi:"password"`
	// Name of the share.
	ShareName string `pulumi:"shareName"`
	// Type of the share.
	ShareType string `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols []string `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName string `pulumi:"userName"`
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddress
func (val *ShippingAddress) Defaults() *ShippingAddress {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AddressType) {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddressResponse
func (val *ShippingAddressResponse) Defaults() *ShippingAddressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AddressType) {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// The Sku.
type Sku struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The Sku.
type SkuArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The Sku.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The display name of the sku.
func (o SkuOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The Sku.
type SkuResponse struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// The Sku.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The display name of the sku.
func (o SkuResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponse struct {
	// Name of the job.
	JobName string `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets interface{} `pulumi:"jobSecrets"`
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput {
	return o
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseOutput {
	return o
}

// Name of the job.
func (o UnencryptedCredentialsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Secrets related to this job.
func (o UnencryptedCredentialsResponseOutput) JobSecrets() pulumi.AnyOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) interface{} { return v.JobSecrets }).(pulumi.AnyOutput)
}

type UnencryptedCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) Index(i pulumi.IntInput) UnencryptedCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnencryptedCredentialsResponse {
		return vs[0].([]UnencryptedCredentialsResponse)[vs[1].(int)]
	}).(UnencryptedCredentialsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ErrorResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoPtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseArrayOutput{})
}
