// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Credential details of the account.
type AccountCredentialDetailsResponse struct {
	// Connection string of the account endpoint to use the account as a storage endpoint on the device.
	AccountConnectionString string `pulumi:"accountConnectionString"`
	// Name of the account.
	AccountName string `pulumi:"accountName"`
	// Type of the account.
	DataAccountType string `pulumi:"dataAccountType"`
	// Per share level unencrypted access credentials.
	ShareCredentialDetails []ShareCredentialDetailsResponse `pulumi:"shareCredentialDetails"`
}

// Additional error info.
type AdditionalErrorInfoResponse struct {
	// Additional error info.
	Info interface{} `pulumi:"info"`
	// Additional error type.
	Type *string `pulumi:"type"`
}

// Additional error info.
type AdditionalErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return o
}

// Additional error info.
func (o AdditionalErrorInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// Additional error type.
func (o AdditionalErrorInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdditionalErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AdditionalErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalErrorInfoResponse {
		return vs[0].([]AdditionalErrorInfoResponse)[vs[1].(int)]
	}).(AdditionalErrorInfoResponseOutput)
}

// The Network Adapter configuration of a DataBox.
type ApplianceNetworkConfigurationResponse struct {
	// Mac Address.
	MacAddress string `pulumi:"macAddress"`
	// Name of the network.
	Name string `pulumi:"name"`
}

// Filter details to transfer Azure files
type AzureFileFilterDetails struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// Filter details to transfer Azure files
type AzureFileFilterDetailsResponse struct {
	// List of full path of the files to be transferred.
	FilePathList []string `pulumi:"filePathList"`
	// Prefix list of the Azure files to be transferred.
	FilePrefixList []string `pulumi:"filePrefixList"`
	// List of file shares to be transferred.
	FileShareList []string `pulumi:"fileShareList"`
}

// Filter details to transfer Azure Blobs
type BlobFilterDetails struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// Filter details to transfer Azure Blobs
type BlobFilterDetailsResponse struct {
	// List of full path of the blobs to be transferred.
	BlobPathList []string `pulumi:"blobPathList"`
	// Prefix list of the Azure blobs to be transferred.
	BlobPrefixList []string `pulumi:"blobPrefixList"`
	// List of blob containers to be transferred.
	ContainerList []string `pulumi:"containerList"`
}

// Cloud error.
type CloudErrorResponse struct {
	// Cloud error additional info.
	AdditionalInfo []AdditionalErrorInfoResponse `pulumi:"additionalInfo"`
	// Cloud error code.
	Code *string `pulumi:"code"`
	// Cloud error details.
	Details []CloudErrorResponse `pulumi:"details"`
	// Cloud error message.
	Message *string `pulumi:"message"`
	// Cloud error target.
	Target *string `pulumi:"target"`
}

// Cloud error.
type CloudErrorResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return o
}

// Cloud error additional info.
func (o CloudErrorResponseOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []AdditionalErrorInfoResponse { return v.AdditionalInfo }).(AdditionalErrorInfoResponseArrayOutput)
}

// Cloud error code.
func (o CloudErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Cloud error details.
func (o CloudErrorResponseOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []CloudErrorResponse { return v.Details }).(CloudErrorResponseArrayOutput)
}

// Cloud error message.
func (o CloudErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Cloud error target.
func (o CloudErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorResponse {
		return vs[0].([]CloudErrorResponse)[vs[1].(int)]
	}).(CloudErrorResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreference `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// List of Email-ids to be notified about job progress.
	EmailList []string `pulumi:"emailList"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Notification preference for a job stage.
	NotificationPreference []NotificationPreferenceResponse `pulumi:"notificationPreference"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// Copy progress.
type CopyProgressResponse struct {
	// Id of the account where the data needs to be uploaded.
	AccountId string `pulumi:"accountId"`
	// To indicate bytes transferred.
	BytesProcessed float64 `pulumi:"bytesProcessed"`
	// Data Account Type.
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate directories errored out in the job.
	DirectoriesErroredOut float64 `pulumi:"directoriesErroredOut"`
	// Number of files which could not be copied
	FilesErroredOut float64 `pulumi:"filesErroredOut"`
	// Number of files processed
	FilesProcessed float64 `pulumi:"filesProcessed"`
	// To indicate directories renamed
	InvalidDirectoriesProcessed float64 `pulumi:"invalidDirectoriesProcessed"`
	// Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFileBytesUploaded float64 `pulumi:"invalidFileBytesUploaded"`
	// Number of files not adhering to azure naming conventions which were processed by automatic renaming
	InvalidFilesProcessed float64 `pulumi:"invalidFilesProcessed"`
	// To indicate if enumeration of data is in progress.
	// Until this is true, the TotalBytesToProcess may not be valid.
	IsEnumerationInProgress bool `pulumi:"isEnumerationInProgress"`
	// Number of folders not adhering to azure naming conventions which were processed by automatic renaming
	RenamedContainerCount float64 `pulumi:"renamedContainerCount"`
	// Name of the storage account. This will be empty for data account types other than storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Total amount of data to be processed by the job.
	TotalBytesToProcess float64 `pulumi:"totalBytesToProcess"`
	// Total files to process
	TotalFilesToProcess float64 `pulumi:"totalFilesToProcess"`
	// Transfer type of data
	TransferType string `pulumi:"transferType"`
}

// Copy log details for a storage account of a DataBox job
type DataBoxAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.
	CopyVerboseLogLink string `pulumi:"copyVerboseLogLink"`
}

// Copy Log Details for a disk
type DataBoxDiskCopyLogDetailsResponse struct {
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Disk Serial Number.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
	// Link for copy error logs.
	ErrorLogLink string `pulumi:"errorLogLink"`
	// Link for copy verbose logs.
	VerboseLogLink string `pulumi:"verboseLogLink"`
}

// DataBox Disk Copy Progress
type DataBoxDiskCopyProgressResponse struct {
	// Bytes copied during the copy of disk.
	BytesCopied float64 `pulumi:"bytesCopied"`
	// Indicates the percentage completed for the copy of the disk.
	PercentComplete int `pulumi:"percentComplete"`
	// The serial number of the disk
	SerialNumber string `pulumi:"serialNumber"`
	// The Status of the copy
	Status string `pulumi:"status"`
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetails
func (val *DataBoxDiskJobDetails) Defaults() *DataBoxDiskJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// DataBox Disk Job Details.
type DataBoxDiskJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per disk.
	CopyProgress []DataBoxDiskCopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
	DisksAndSizeDetails map[string]int `pulumi:"disksAndSizeDetails"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxDisk'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// User entered passkey for DataBox Disk job.
	Passkey *string `pulumi:"passkey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
	PreferredDisks map[string]int `pulumi:"preferredDisks"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxDiskJobDetailsResponse
func (val *DataBoxDiskJobDetailsResponse) Defaults() *DataBoxDiskJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to disk job.
type DataBoxDiskJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Contains the list of secrets object for that device.
	DiskSecrets []DiskSecretResponse `pulumi:"diskSecrets"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Whether passkey was provided by user.
	IsPasskeyUserDefined bool `pulumi:"isPasskeyUserDefined"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxDisk'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// PassKey for the disk Job.
	PassKey string `pulumi:"passKey"`
}

// Copy log details for a storage account for Databox heavy
type DataBoxHeavyAccountCopyLogDetailsResponse struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	CopyLogDetailsType string `pulumi:"copyLogDetailsType"`
	// Link for copy logs.
	CopyLogLink []string `pulumi:"copyLogLink"`
	// Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.
	CopyVerboseLogLink []string `pulumi:"copyVerboseLogLink"`
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetails
func (val *DataBoxHeavyJobDetails) Defaults() *DataBoxHeavyJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Heavy Device Job Details
type DataBoxHeavyJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBoxHeavy'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxHeavyJobDetailsResponse
func (val *DataBoxHeavyJobDetailsResponse) Defaults() *DataBoxHeavyJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to a databox heavy job.
type DataBoxHeavyJobSecretsResponse struct {
	// Contains the list of secret objects for a databox heavy job.
	CabinetPodSecrets []DataBoxHeavySecretResponse `pulumi:"cabinetPodSecrets"`
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBoxHeavy'.
	JobSecretsType string `pulumi:"jobSecretsType"`
}

// The secrets related to a databox heavy.
type DataBoxHeavySecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// Databox Job Details
type DataBoxJobDetails struct {
	// Contact details for notification and shipping.
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetails `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetails `pulumi:"dataImportDetails"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKey `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *Preferences `pulumi:"preferences"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetails
func (val *DataBoxJobDetails) Defaults() *DataBoxJobDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// Databox Job Details
type DataBoxJobDetailsResponse struct {
	// Shared access key to download the chain of custody logs
	ChainOfCustodySasKey string `pulumi:"chainOfCustodySasKey"`
	// Contact details for notification and shipping.
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// List of copy log details.
	CopyLogDetails []interface{} `pulumi:"copyLogDetails"`
	// Copy progress per storage account.
	CopyProgress []CopyProgressResponse `pulumi:"copyProgress"`
	// Details of the data to be exported from azure.
	DataExportDetails []DataExportDetailsResponse `pulumi:"dataExportDetails"`
	// Details of the data to be imported into azure.
	DataImportDetails []DataImportDetailsResponse `pulumi:"dataImportDetails"`
	// Delivery package shipping details.
	DeliveryPackage PackageShippingDetailsResponse `pulumi:"deliveryPackage"`
	// Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	DevicePassword *string `pulumi:"devicePassword"`
	// The expected size of the data, which needs to be transferred in this job, in terabytes.
	ExpectedDataSizeInTeraBytes *int `pulumi:"expectedDataSizeInTeraBytes"`
	// Indicates the type of job details.
	// Expected value is 'DataBox'.
	JobDetailsType string `pulumi:"jobDetailsType"`
	// List of stages that run in the job.
	JobStages []JobStagesResponse `pulumi:"jobStages"`
	// Details about which key encryption type is being used.
	KeyEncryptionKey *KeyEncryptionKeyResponse `pulumi:"keyEncryptionKey"`
	// Preferences for the order.
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Return package shipping details.
	ReturnPackage PackageShippingDetailsResponse `pulumi:"returnPackage"`
	// Shared access key to download the return shipment label
	ReverseShipmentLabelSasKey string `pulumi:"reverseShipmentLabelSasKey"`
	// Shipping address of the customer.
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// Defaults sets the appropriate defaults for DataBoxJobDetailsResponse
func (val *DataBoxJobDetailsResponse) Defaults() *DataBoxJobDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KeyEncryptionKey = tmp.KeyEncryptionKey.Defaults()

	tmp.Preferences = tmp.Preferences.Defaults()

	tmp.ShippingAddress = tmp.ShippingAddress.Defaults()

	return &tmp
}

// The secrets related to a DataBox.
type DataBoxSecretResponse struct {
	// Per account level access credentials.
	AccountCredentialDetails []AccountCredentialDetailsResponse `pulumi:"accountCredentialDetails"`
	// Password for out of the box experience on device.
	DevicePassword string `pulumi:"devicePassword"`
	// Serial number of the assigned device.
	DeviceSerialNumber string `pulumi:"deviceSerialNumber"`
	// The base 64 encoded public key to authenticate with the device
	EncodedValidationCertPubKey string `pulumi:"encodedValidationCertPubKey"`
	// Network configuration of the appliance.
	NetworkConfigurations []ApplianceNetworkConfigurationResponse `pulumi:"networkConfigurations"`
}

// Details of the data to be used for exporting data from azure.
type DataExportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfiguration `pulumi:"transferConfiguration"`
}

// Defaults sets the appropriate defaults for DataExportDetails
func (val *DataExportDetails) Defaults() *DataExportDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.LogCollectionLevel) {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	tmp.TransferConfiguration = *tmp.TransferConfiguration.Defaults()

	return &tmp
}

// Details of the data to be used for exporting data from azure.
type DataExportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
	// Level of the logs to be collected.
	LogCollectionLevel *string `pulumi:"logCollectionLevel"`
	// Configuration for the data transfer.
	TransferConfiguration TransferConfigurationResponse `pulumi:"transferConfiguration"`
}

// Defaults sets the appropriate defaults for DataExportDetailsResponse
func (val *DataExportDetailsResponse) Defaults() *DataExportDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.LogCollectionLevel) {
		logCollectionLevel_ := "Error"
		tmp.LogCollectionLevel = &logCollectionLevel_
	}
	tmp.TransferConfiguration = *tmp.TransferConfiguration.Defaults()

	return &tmp
}

// Details of the data to be used for importing data to azure.
type DataImportDetails struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// Details of the data to be used for importing data to azure.
type DataImportDetailsResponse struct {
	// Account details of the data to be transferred
	AccountDetails interface{} `pulumi:"accountDetails"`
}

// The secrets related to a databox job.
type DataboxJobSecretsResponse struct {
	// Dc Access Security Code for Customer Managed Shipping
	DcAccessSecurityCode DcAccessSecurityCodeResponse `pulumi:"dcAccessSecurityCode"`
	// Error while fetching the secrets.
	Error CloudErrorResponse `pulumi:"error"`
	// Used to indicate what type of job secrets object.
	// Expected value is 'DataBox'.
	JobSecretsType string `pulumi:"jobSecretsType"`
	// Contains the list of secret objects for a job.
	PodSecrets []DataBoxSecretResponse `pulumi:"podSecrets"`
}

// Dc access security code
type DcAccessSecurityCodeResponse struct {
	// Forward Dc access security code.
	ForwardDCAccessCode *string `pulumi:"forwardDCAccessCode"`
	// Reverse Dc access security code.
	ReverseDCAccessCode *string `pulumi:"reverseDCAccessCode"`
}

// Contains all the secrets of a Disk.
type DiskSecretResponse struct {
	// Bit Locker key of the disk which can be used to unlock the disk to copy data.
	BitLockerKey string `pulumi:"bitLockerKey"`
	// Serial number of the assigned disk.
	DiskSerialNumber string `pulumi:"diskSerialNumber"`
}

// Preferences related to the Encryption.
type EncryptionPreferences struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
}

// Defaults sets the appropriate defaults for EncryptionPreferences
func (val *EncryptionPreferences) Defaults() *EncryptionPreferences {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DoubleEncryption) {
		doubleEncryption_ := "Disabled"
		tmp.DoubleEncryption = &doubleEncryption_
	}
	return &tmp
}

// Preferences related to the Encryption.
type EncryptionPreferencesResponse struct {
	// Defines secondary layer of software-based encryption enablement.
	DoubleEncryption *string `pulumi:"doubleEncryption"`
}

// Defaults sets the appropriate defaults for EncryptionPreferencesResponse
func (val *EncryptionPreferencesResponse) Defaults() *EncryptionPreferencesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DoubleEncryption) {
		doubleEncryption_ := "Disabled"
		tmp.DoubleEncryption = &doubleEncryption_
	}
	return &tmp
}

// Details of the filter files to be used for data transfer.
type FilterFileDetails struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// Details of the filter files to be used for data transfer.
type FilterFileDetailsResponse struct {
	// Path of the file that contains the details of all items to transfer.
	FilterFilePath string `pulumi:"filterFilePath"`
	// Type of the filter file.
	FilterFileType string `pulumi:"filterFileType"`
}

// Managed identity properties.
type IdentityProperties struct {
	// Managed service identity type.
	Type *string `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned *UserAssignedProperties `pulumi:"userAssigned"`
}

// Managed identity properties.
type IdentityPropertiesResponse struct {
	// Managed service identity type.
	Type *string `pulumi:"type"`
	// User assigned identity properties.
	UserAssigned *UserAssignedPropertiesResponse `pulumi:"userAssigned"`
}

// Additional delivery info.
type JobDeliveryInfo struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// JobDeliveryInfoInput is an input type that accepts JobDeliveryInfoArgs and JobDeliveryInfoOutput values.
// You can construct a concrete instance of `JobDeliveryInfoInput` via:
//
//	JobDeliveryInfoArgs{...}
type JobDeliveryInfoInput interface {
	pulumi.Input

	ToJobDeliveryInfoOutput() JobDeliveryInfoOutput
	ToJobDeliveryInfoOutputWithContext(context.Context) JobDeliveryInfoOutput
}

// Additional delivery info.
type JobDeliveryInfoArgs struct {
	// Scheduled date time.
	ScheduledDateTime pulumi.StringPtrInput `pulumi:"scheduledDateTime"`
}

func (JobDeliveryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return i.ToJobDeliveryInfoOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput)
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i JobDeliveryInfoArgs) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoOutput).ToJobDeliveryInfoPtrOutputWithContext(ctx)
}

// JobDeliveryInfoPtrInput is an input type that accepts JobDeliveryInfoArgs, JobDeliveryInfoPtr and JobDeliveryInfoPtrOutput values.
// You can construct a concrete instance of `JobDeliveryInfoPtrInput` via:
//
//	        JobDeliveryInfoArgs{...}
//
//	or:
//
//	        nil
type JobDeliveryInfoPtrInput interface {
	pulumi.Input

	ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput
	ToJobDeliveryInfoPtrOutputWithContext(context.Context) JobDeliveryInfoPtrOutput
}

type jobDeliveryInfoPtrType JobDeliveryInfoArgs

func JobDeliveryInfoPtr(v *JobDeliveryInfoArgs) JobDeliveryInfoPtrInput {
	return (*jobDeliveryInfoPtrType)(v)
}

func (*jobDeliveryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return i.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (i *jobDeliveryInfoPtrType) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeliveryInfoPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutput() JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoOutputWithContext(ctx context.Context) JobDeliveryInfoOutput {
	return o
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o.ToJobDeliveryInfoPtrOutputWithContext(context.Background())
}

func (o JobDeliveryInfoOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDeliveryInfo) *JobDeliveryInfo {
		return &v
	}).(JobDeliveryInfoPtrOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfo) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoPtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfo)(nil)).Elem()
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutput() JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) ToJobDeliveryInfoPtrOutputWithContext(ctx context.Context) JobDeliveryInfoPtrOutput {
	return o
}

func (o JobDeliveryInfoPtrOutput) Elem() JobDeliveryInfoOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) JobDeliveryInfo {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfo
		return ret
	}).(JobDeliveryInfoOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoPtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfo) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Additional delivery info.
type JobDeliveryInfoResponse struct {
	// Scheduled date time.
	ScheduledDateTime *string `pulumi:"scheduledDateTime"`
}

// Additional delivery info.
type JobDeliveryInfoResponseOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutput() JobDeliveryInfoResponseOutput {
	return o
}

func (o JobDeliveryInfoResponseOutput) ToJobDeliveryInfoResponseOutputWithContext(ctx context.Context) JobDeliveryInfoResponseOutput {
	return o
}

// Scheduled date time.
func (o JobDeliveryInfoResponseOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeliveryInfoResponse) *string { return v.ScheduledDateTime }).(pulumi.StringPtrOutput)
}

type JobDeliveryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (JobDeliveryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDeliveryInfoResponse)(nil)).Elem()
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutput() JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) ToJobDeliveryInfoResponsePtrOutputWithContext(ctx context.Context) JobDeliveryInfoResponsePtrOutput {
	return o
}

func (o JobDeliveryInfoResponsePtrOutput) Elem() JobDeliveryInfoResponseOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) JobDeliveryInfoResponse {
		if v != nil {
			return *v
		}
		var ret JobDeliveryInfoResponse
		return ret
	}).(JobDeliveryInfoResponseOutput)
}

// Scheduled date time.
func (o JobDeliveryInfoResponsePtrOutput) ScheduledDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDeliveryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduledDateTime
	}).(pulumi.StringPtrOutput)
}

// Job stages.
type JobStagesResponse struct {
	// Display name of the job stage.
	DisplayName string `pulumi:"displayName"`
	// Job Stage Details
	JobStageDetails interface{} `pulumi:"jobStageDetails"`
	// Name of the job stage.
	StageName string `pulumi:"stageName"`
	// Status of the job stage.
	StageStatus string `pulumi:"stageStatus"`
	// Time for the job stage in UTC ISO 8601 format.
	StageTime string `pulumi:"stageTime"`
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKey struct {
	// Managed identity properties used for key encryption.
	IdentityProperties *IdentityProperties `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// Defaults sets the appropriate defaults for KeyEncryptionKey
func (val *KeyEncryptionKey) Defaults() *KeyEncryptionKey {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.KekType) {
		tmp.KekType = "MicrosoftManaged"
	}
	return &tmp
}

// Encryption key containing details about key to encrypt different keys.
type KeyEncryptionKeyResponse struct {
	// Managed identity properties used for key encryption.
	IdentityProperties *IdentityPropertiesResponse `pulumi:"identityProperties"`
	// Type of encryption key used for key encryption.
	KekType string `pulumi:"kekType"`
	// Key encryption key. It is required in case of Customer managed KekType.
	KekUrl *string `pulumi:"kekUrl"`
	// Kek vault resource id. It is required in case of Customer managed KekType.
	KekVaultResourceID *string `pulumi:"kekVaultResourceID"`
}

// Defaults sets the appropriate defaults for KeyEncryptionKeyResponse
func (val *KeyEncryptionKeyResponse) Defaults() *KeyEncryptionKeyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.KekType) {
		tmp.KekType = "MicrosoftManaged"
	}
	return &tmp
}

// Details of the managed disks.
type ManagedDiskDetails struct {
	// Account Type of the data to be transferred.
	// Expected value is 'ManagedDisk'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Defaults sets the appropriate defaults for ManagedDiskDetails
func (val *ManagedDiskDetails) Defaults() *ManagedDiskDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details of the managed disks.
type ManagedDiskDetailsResponse struct {
	// Account Type of the data to be transferred.
	// Expected value is 'ManagedDisk'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Resource Group Id of the compute disks.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Resource Id of the storage account that can be used to copy the vhd for staging.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
}

// Defaults sets the appropriate defaults for ManagedDiskDetailsResponse
func (val *ManagedDiskDetailsResponse) Defaults() *ManagedDiskDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreference
func (val *NotificationPreference) Defaults() *NotificationPreference {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// Defaults sets the appropriate defaults for NotificationPreferenceResponse
func (val *NotificationPreferenceResponse) Defaults() *NotificationPreferenceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.SendNotification) {
		tmp.SendNotification = true
	}
	return &tmp
}

// Shipping details.
type PackageShippingDetailsResponse struct {
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// Tracking Id of shipment.
	TrackingId string `pulumi:"trackingId"`
	// Url where shipment can be tracked.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// Preferences related to the order
type Preferences struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferences `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// Defaults sets the appropriate defaults for Preferences
func (val *Preferences) Defaults() *Preferences {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EncryptionPreferences = tmp.EncryptionPreferences.Defaults()

	return &tmp
}

// Preferences related to the order
type PreferencesResponse struct {
	// Preferences related to the Encryption.
	EncryptionPreferences *EncryptionPreferencesResponse `pulumi:"encryptionPreferences"`
	// Preferred data center region.
	PreferredDataCenterRegion []string `pulumi:"preferredDataCenterRegion"`
	// Preferences related to the shipment logistics of the sku.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// Defaults sets the appropriate defaults for PreferencesResponse
func (val *PreferencesResponse) Defaults() *PreferencesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.EncryptionPreferences = tmp.EncryptionPreferences.Defaults()

	return &tmp
}

// Msi identity details of the resource
type ResourceIdentity struct {
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentity
func (val *ResourceIdentity) Defaults() *ResourceIdentity {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Type) {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Msi identity details of the resource
type ResourceIdentityArgs struct {
	// Identity type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityArgs
func (val *ResourceIdentityArgs) Defaults() *ResourceIdentityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Type) {
		tmp.Type = pulumi.StringPtr("None")
	}
	return &tmp
}
func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Msi identity details of the resource
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// Identity type
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ResourceIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// Identity type
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ResourceIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Msi identity details of the resource
type ResourceIdentityResponse struct {
	// Service Principal Id backing the Msi
	PrincipalId string `pulumi:"principalId"`
	// Home Tenant Id
	TenantId string `pulumi:"tenantId"`
	// Identity type
	Type *string `pulumi:"type"`
	// User Assigned Identities
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Defaults sets the appropriate defaults for ResourceIdentityResponse
func (val *ResourceIdentityResponse) Defaults() *ResourceIdentityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Type) {
		type_ := "None"
		tmp.Type = &type_
	}
	return &tmp
}

// Msi identity details of the resource
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Identity type
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// Service Principal Id backing the Msi
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Home Tenant Id
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity type
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User Assigned Identities
func (o ResourceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Credential details of the shares in account.
type ShareCredentialDetailsResponse struct {
	// Password for the share.
	Password string `pulumi:"password"`
	// Name of the share.
	ShareName string `pulumi:"shareName"`
	// Type of the share.
	ShareType string `pulumi:"shareType"`
	// Access protocols supported on the device.
	SupportedAccessProtocols []string `pulumi:"supportedAccessProtocols"`
	// User name for the share.
	UserName string `pulumi:"userName"`
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddress
func (val *ShippingAddress) Defaults() *ShippingAddress {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AddressType) {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// Defaults sets the appropriate defaults for ShippingAddressResponse
func (val *ShippingAddressResponse) Defaults() *ShippingAddressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AddressType) {
		addressType_ := "None"
		tmp.AddressType = &addressType_
	}
	return &tmp
}

// The Sku.
type Sku struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The Sku.
type SkuArgs struct {
	// The display name of the sku.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The sku family.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The sku name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

// The Sku.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

// The display name of the sku.
func (o SkuOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The Sku.
type SkuResponse struct {
	// The display name of the sku.
	DisplayName *string `pulumi:"displayName"`
	// The sku family.
	Family *string `pulumi:"family"`
	// The sku name.
	Name string `pulumi:"name"`
}

// The Sku.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The display name of the sku.
func (o SkuResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The sku family.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Details for the storage account.
type StorageAccountDetails struct {
	// Account Type of the data to be transferred.
	// Expected value is 'StorageAccount'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+
	SharePassword *string `pulumi:"sharePassword"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for StorageAccountDetails
func (val *StorageAccountDetails) Defaults() *StorageAccountDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details for the storage account.
type StorageAccountDetailsResponse struct {
	// Account Type of the data to be transferred.
	// Expected value is 'StorageAccount'.
	DataAccountType string `pulumi:"dataAccountType"`
	// Storage Account Resource Id.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// Defaults sets the appropriate defaults for StorageAccountDetailsResponse
func (val *StorageAccountDetailsResponse) Defaults() *StorageAccountDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Provides details about resource creation and update time
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC)
	CreatedAt string `pulumi:"createdAt"`
	// A string identifier for the identity that created the resource
	CreatedBy string `pulumi:"createdBy"`
	// The type of identity that created the resource: user, application, managedIdentity
	CreatedByType string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt string `pulumi:"lastModifiedAt"`
	// A string identifier for the identity that last modified the resource
	LastModifiedBy string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource: user, application, managedIdentity
	LastModifiedByType string `pulumi:"lastModifiedByType"`
}

// Provides details about resource creation and update time
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC)
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// A string identifier for the identity that created the resource
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The type of identity that created the resource: user, application, managedIdentity
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedByType }).(pulumi.StringOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// A string identifier for the identity that last modified the resource
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedBy }).(pulumi.StringOutput)
}

// The type of identity that last modified the resource: user, application, managedIdentity
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedByType }).(pulumi.StringOutput)
}

// Details to transfer all data.
type TransferAllDetails struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// Defaults sets the appropriate defaults for TransferAllDetails
func (val *TransferAllDetails) Defaults() *TransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details to transfer all data.
type TransferAllDetailsResponse struct {
	// Type of the account of data
	DataAccountType string `pulumi:"dataAccountType"`
	// To indicate if all Azure blobs have to be transferred
	TransferAllBlobs *bool `pulumi:"transferAllBlobs"`
	// To indicate if all Azure Files have to be transferred
	TransferAllFiles *bool `pulumi:"transferAllFiles"`
}

// Defaults sets the appropriate defaults for TransferAllDetailsResponse
func (val *TransferAllDetailsResponse) Defaults() *TransferAllDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Configuration for defining the transfer of data.
type TransferConfiguration struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// Defaults sets the appropriate defaults for TransferConfiguration
func (val *TransferConfiguration) Defaults() *TransferConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TransferAllDetails = tmp.TransferAllDetails.Defaults()

	tmp.TransferFilterDetails = tmp.TransferFilterDetails.Defaults()

	return &tmp
}

// Configuration for defining the transfer of data.
type TransferConfigurationResponse struct {
	// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
	TransferAllDetails *TransferConfigurationResponseTransferAllDetails `pulumi:"transferAllDetails"`
	// Type of the configuration for transfer.
	TransferConfigurationType string `pulumi:"transferConfigurationType"`
	// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
	TransferFilterDetails *TransferConfigurationResponseTransferFilterDetails `pulumi:"transferFilterDetails"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponse
func (val *TransferConfigurationResponse) Defaults() *TransferConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.TransferAllDetails = tmp.TransferAllDetails.Defaults()

	tmp.TransferFilterDetails = tmp.TransferFilterDetails.Defaults()

	return &tmp
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationResponseTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetailsResponse `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponseTransferAllDetails
func (val *TransferConfigurationResponseTransferAllDetails) Defaults() *TransferConfigurationResponseTransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationResponseTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetailsResponse `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationResponseTransferFilterDetails
func (val *TransferConfigurationResponseTransferFilterDetails) Defaults() *TransferConfigurationResponseTransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll
type TransferConfigurationTransferAllDetails struct {
	// Details to transfer all data.
	Include *TransferAllDetails `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferAllDetails
func (val *TransferConfigurationTransferAllDetails) Defaults() *TransferConfigurationTransferAllDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.
type TransferConfigurationTransferFilterDetails struct {
	// Details of the filtering the transfer of data.
	Include *TransferFilterDetails `pulumi:"include"`
}

// Defaults sets the appropriate defaults for TransferConfigurationTransferFilterDetails
func (val *TransferConfigurationTransferFilterDetails) Defaults() *TransferConfigurationTransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Include = tmp.Include.Defaults()

	return &tmp
}

// Details of the filtering the transfer of data.
type TransferFilterDetails struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetails `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetails `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetails `pulumi:"filterFileDetails"`
}

// Defaults sets the appropriate defaults for TransferFilterDetails
func (val *TransferFilterDetails) Defaults() *TransferFilterDetails {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Details of the filtering the transfer of data.
type TransferFilterDetailsResponse struct {
	// Filter details to transfer Azure files.
	AzureFileFilterDetails *AzureFileFilterDetailsResponse `pulumi:"azureFileFilterDetails"`
	// Filter details to transfer blobs.
	BlobFilterDetails *BlobFilterDetailsResponse `pulumi:"blobFilterDetails"`
	// Type of the account of data.
	DataAccountType string `pulumi:"dataAccountType"`
	// Details of the filter files to be used for data transfer.
	FilterFileDetails []FilterFileDetailsResponse `pulumi:"filterFileDetails"`
}

// Defaults sets the appropriate defaults for TransferFilterDetailsResponse
func (val *TransferFilterDetailsResponse) Defaults() *TransferFilterDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataAccountType) {
		tmp.DataAccountType = "StorageAccount"
	}
	return &tmp
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponse struct {
	// Name of the job.
	JobName string `pulumi:"jobName"`
	// Secrets related to this job.
	JobSecrets interface{} `pulumi:"jobSecrets"`
}

// Unencrypted credentials for accessing device.
type UnencryptedCredentialsResponseOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutput() UnencryptedCredentialsResponseOutput {
	return o
}

func (o UnencryptedCredentialsResponseOutput) ToUnencryptedCredentialsResponseOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseOutput {
	return o
}

// Name of the job.
func (o UnencryptedCredentialsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// Secrets related to this job.
func (o UnencryptedCredentialsResponseOutput) JobSecrets() pulumi.AnyOutput {
	return o.ApplyT(func(v UnencryptedCredentialsResponse) interface{} { return v.JobSecrets }).(pulumi.AnyOutput)
}

type UnencryptedCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (UnencryptedCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnencryptedCredentialsResponse)(nil)).Elem()
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutput() UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) ToUnencryptedCredentialsResponseArrayOutputWithContext(ctx context.Context) UnencryptedCredentialsResponseArrayOutput {
	return o
}

func (o UnencryptedCredentialsResponseArrayOutput) Index(i pulumi.IntInput) UnencryptedCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnencryptedCredentialsResponse {
		return vs[0].([]UnencryptedCredentialsResponse)[vs[1].(int)]
	}).(UnencryptedCredentialsResponseOutput)
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponse struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// Class defining User assigned identity details.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// User assigned identity properties.
type UserAssignedProperties struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId *string `pulumi:"resourceId"`
}

// User assigned identity properties.
type UserAssignedPropertiesResponse struct {
	// Arm resource id for user assigned identity to be used to fetch MSI token.
	ResourceId *string `pulumi:"resourceId"`
}

func init() {
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoPtrOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponseOutput{})
	pulumi.RegisterOutputType(JobDeliveryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseOutput{})
	pulumi.RegisterOutputType(UnencryptedCredentialsResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
