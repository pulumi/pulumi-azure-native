// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The essential information related to the peer's ASN.
//
// Deprecated: Version 2019-08-01-preview will be removed in v2 of the provider.
func LookupPeerAsn(ctx *pulumi.Context, args *LookupPeerAsnArgs, opts ...pulumi.InvokeOption) (*LookupPeerAsnResult, error) {
	var rv LookupPeerAsnResult
	err := ctx.Invoke("azure-native:peering/v20190801preview:getPeerAsn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPeerAsnArgs struct {
	// The peer ASN name.
	PeerAsnName string `pulumi:"peerAsnName"`
}

// The essential information related to the peer's ASN.
type LookupPeerAsnResult struct {
	// The ID of the resource.
	Id string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The Autonomous System Number (ASN) of the peer.
	PeerAsn *int `pulumi:"peerAsn"`
	// The contact information of the peer.
	PeerContactInfo *ContactInfoResponse `pulumi:"peerContactInfo"`
	// The name of the peer.
	PeerName *string `pulumi:"peerName"`
	// The type of the resource.
	Type string `pulumi:"type"`
	// The validation state of the ASN associated with the peer.
	ValidationState *string `pulumi:"validationState"`
}

func LookupPeerAsnOutput(ctx *pulumi.Context, args LookupPeerAsnOutputArgs, opts ...pulumi.InvokeOption) LookupPeerAsnResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPeerAsnResult, error) {
			args := v.(LookupPeerAsnArgs)
			r, err := LookupPeerAsn(ctx, &args, opts...)
			var s LookupPeerAsnResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPeerAsnResultOutput)
}

type LookupPeerAsnOutputArgs struct {
	// The peer ASN name.
	PeerAsnName pulumi.StringInput `pulumi:"peerAsnName"`
}

func (LookupPeerAsnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeerAsnArgs)(nil)).Elem()
}

// The essential information related to the peer's ASN.
type LookupPeerAsnResultOutput struct{ *pulumi.OutputState }

func (LookupPeerAsnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeerAsnResult)(nil)).Elem()
}

func (o LookupPeerAsnResultOutput) ToLookupPeerAsnResultOutput() LookupPeerAsnResultOutput {
	return o
}

func (o LookupPeerAsnResultOutput) ToLookupPeerAsnResultOutputWithContext(ctx context.Context) LookupPeerAsnResultOutput {
	return o
}

// The ID of the resource.
func (o LookupPeerAsnResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource.
func (o LookupPeerAsnResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Autonomous System Number (ASN) of the peer.
func (o LookupPeerAsnResultOutput) PeerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) *int { return v.PeerAsn }).(pulumi.IntPtrOutput)
}

// The contact information of the peer.
func (o LookupPeerAsnResultOutput) PeerContactInfo() ContactInfoResponsePtrOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) *ContactInfoResponse { return v.PeerContactInfo }).(ContactInfoResponsePtrOutput)
}

// The name of the peer.
func (o LookupPeerAsnResultOutput) PeerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) *string { return v.PeerName }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o LookupPeerAsnResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) string { return v.Type }).(pulumi.StringOutput)
}

// The validation state of the ASN associated with the peer.
func (o LookupPeerAsnResultOutput) ValidationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPeerAsnResult) *string { return v.ValidationState }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeerAsnResultOutput{})
}
