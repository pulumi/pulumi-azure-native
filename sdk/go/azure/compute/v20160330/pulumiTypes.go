// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20160330

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContent struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName *string `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content *string `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName *string `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName *string `pulumi:"settingName"`
}

// AdditionalUnattendContentInput is an input type that accepts AdditionalUnattendContentArgs and AdditionalUnattendContentOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentInput` via:
//
//          AdditionalUnattendContentArgs{...}
type AdditionalUnattendContentInput interface {
	pulumi.Input

	ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput
	ToAdditionalUnattendContentOutputWithContext(context.Context) AdditionalUnattendContentOutput
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentArgs struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName ComponentNames `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName PassNames `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName SettingNames `pulumi:"settingName"`
}

func (AdditionalUnattendContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContent)(nil)).Elem()
}

func (i AdditionalUnattendContentArgs) ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput {
	return i.ToAdditionalUnattendContentOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentArgs) ToAdditionalUnattendContentOutputWithContext(ctx context.Context) AdditionalUnattendContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentOutput)
}

// AdditionalUnattendContentArrayInput is an input type that accepts AdditionalUnattendContentArray and AdditionalUnattendContentArrayOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentArrayInput` via:
//
//          AdditionalUnattendContentArray{ AdditionalUnattendContentArgs{...} }
type AdditionalUnattendContentArrayInput interface {
	pulumi.Input

	ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput
	ToAdditionalUnattendContentArrayOutputWithContext(context.Context) AdditionalUnattendContentArrayOutput
}

type AdditionalUnattendContentArray []AdditionalUnattendContentInput

func (AdditionalUnattendContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContent)(nil)).Elem()
}

func (i AdditionalUnattendContentArray) ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput {
	return i.ToAdditionalUnattendContentArrayOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentArray) ToAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentArrayOutput)
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContent)(nil)).Elem()
}

func (o AdditionalUnattendContentOutput) ToAdditionalUnattendContentOutput() AdditionalUnattendContentOutput {
	return o
}

func (o AdditionalUnattendContentOutput) ToAdditionalUnattendContentOutputWithContext(ctx context.Context) AdditionalUnattendContentOutput {
	return o
}

// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
func (o AdditionalUnattendContentOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
func (o AdditionalUnattendContentOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
func (o AdditionalUnattendContentOutput) PassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.PassName }).(pulumi.StringPtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
func (o AdditionalUnattendContentOutput) SettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContent) *string { return v.SettingName }).(pulumi.StringPtrOutput)
}

type AdditionalUnattendContentArrayOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContent)(nil)).Elem()
}

func (o AdditionalUnattendContentArrayOutput) ToAdditionalUnattendContentArrayOutput() AdditionalUnattendContentArrayOutput {
	return o
}

func (o AdditionalUnattendContentArrayOutput) ToAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentArrayOutput {
	return o
}

func (o AdditionalUnattendContentArrayOutput) Index(i pulumi.IntInput) AdditionalUnattendContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalUnattendContent {
		return vs[0].([]AdditionalUnattendContent)[vs[1].(int)]
	}).(AdditionalUnattendContentOutput)
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentInvokeResponse struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName *string `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content *string `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName *string `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName *string `pulumi:"settingName"`
}

// AdditionalUnattendContentInvokeResponseInput is an input type that accepts AdditionalUnattendContentInvokeResponseArgs and AdditionalUnattendContentInvokeResponseOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentInvokeResponseInput` via:
//
//          AdditionalUnattendContentInvokeResponseArgs{...}
type AdditionalUnattendContentInvokeResponseInput interface {
	pulumi.Input

	ToAdditionalUnattendContentInvokeResponseOutput() AdditionalUnattendContentInvokeResponseOutput
	ToAdditionalUnattendContentInvokeResponseOutputWithContext(context.Context) AdditionalUnattendContentInvokeResponseOutput
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentInvokeResponseArgs struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName pulumi.StringPtrInput `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName pulumi.StringPtrInput `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName pulumi.StringPtrInput `pulumi:"settingName"`
}

func (AdditionalUnattendContentInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContentInvokeResponse)(nil)).Elem()
}

func (i AdditionalUnattendContentInvokeResponseArgs) ToAdditionalUnattendContentInvokeResponseOutput() AdditionalUnattendContentInvokeResponseOutput {
	return i.ToAdditionalUnattendContentInvokeResponseOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentInvokeResponseArgs) ToAdditionalUnattendContentInvokeResponseOutputWithContext(ctx context.Context) AdditionalUnattendContentInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentInvokeResponseOutput)
}

// AdditionalUnattendContentInvokeResponseArrayInput is an input type that accepts AdditionalUnattendContentInvokeResponseArray and AdditionalUnattendContentInvokeResponseArrayOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentInvokeResponseArrayInput` via:
//
//          AdditionalUnattendContentInvokeResponseArray{ AdditionalUnattendContentInvokeResponseArgs{...} }
type AdditionalUnattendContentInvokeResponseArrayInput interface {
	pulumi.Input

	ToAdditionalUnattendContentInvokeResponseArrayOutput() AdditionalUnattendContentInvokeResponseArrayOutput
	ToAdditionalUnattendContentInvokeResponseArrayOutputWithContext(context.Context) AdditionalUnattendContentInvokeResponseArrayOutput
}

type AdditionalUnattendContentInvokeResponseArray []AdditionalUnattendContentInvokeResponseInput

func (AdditionalUnattendContentInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContentInvokeResponse)(nil)).Elem()
}

func (i AdditionalUnattendContentInvokeResponseArray) ToAdditionalUnattendContentInvokeResponseArrayOutput() AdditionalUnattendContentInvokeResponseArrayOutput {
	return i.ToAdditionalUnattendContentInvokeResponseArrayOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentInvokeResponseArray) ToAdditionalUnattendContentInvokeResponseArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentInvokeResponseArrayOutput)
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentInvokeResponseOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContentInvokeResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentInvokeResponseOutput) ToAdditionalUnattendContentInvokeResponseOutput() AdditionalUnattendContentInvokeResponseOutput {
	return o
}

func (o AdditionalUnattendContentInvokeResponseOutput) ToAdditionalUnattendContentInvokeResponseOutputWithContext(ctx context.Context) AdditionalUnattendContentInvokeResponseOutput {
	return o
}

// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
func (o AdditionalUnattendContentInvokeResponseOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentInvokeResponse) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
func (o AdditionalUnattendContentInvokeResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentInvokeResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
func (o AdditionalUnattendContentInvokeResponseOutput) PassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentInvokeResponse) *string { return v.PassName }).(pulumi.StringPtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
func (o AdditionalUnattendContentInvokeResponseOutput) SettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentInvokeResponse) *string { return v.SettingName }).(pulumi.StringPtrOutput)
}

type AdditionalUnattendContentInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContentInvokeResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentInvokeResponseArrayOutput) ToAdditionalUnattendContentInvokeResponseArrayOutput() AdditionalUnattendContentInvokeResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentInvokeResponseArrayOutput) ToAdditionalUnattendContentInvokeResponseArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentInvokeResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentInvokeResponseArrayOutput) Index(i pulumi.IntInput) AdditionalUnattendContentInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalUnattendContentInvokeResponse {
		return vs[0].([]AdditionalUnattendContentInvokeResponse)[vs[1].(int)]
	}).(AdditionalUnattendContentInvokeResponseOutput)
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentResponse struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName *string `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content *string `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName *string `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName *string `pulumi:"settingName"`
}

// AdditionalUnattendContentResponseInput is an input type that accepts AdditionalUnattendContentResponseArgs and AdditionalUnattendContentResponseOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentResponseInput` via:
//
//          AdditionalUnattendContentResponseArgs{...}
type AdditionalUnattendContentResponseInput interface {
	pulumi.Input

	ToAdditionalUnattendContentResponseOutput() AdditionalUnattendContentResponseOutput
	ToAdditionalUnattendContentResponseOutputWithContext(context.Context) AdditionalUnattendContentResponseOutput
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentResponseArgs struct {
	// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
	ComponentName pulumi.StringPtrInput `pulumi:"componentName"`
	// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The pass name. Currently, the only allowable value is OobeSystem.
	PassName pulumi.StringPtrInput `pulumi:"passName"`
	// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
	SettingName pulumi.StringPtrInput `pulumi:"settingName"`
}

func (AdditionalUnattendContentResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContentResponse)(nil)).Elem()
}

func (i AdditionalUnattendContentResponseArgs) ToAdditionalUnattendContentResponseOutput() AdditionalUnattendContentResponseOutput {
	return i.ToAdditionalUnattendContentResponseOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentResponseArgs) ToAdditionalUnattendContentResponseOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentResponseOutput)
}

// AdditionalUnattendContentResponseArrayInput is an input type that accepts AdditionalUnattendContentResponseArray and AdditionalUnattendContentResponseArrayOutput values.
// You can construct a concrete instance of `AdditionalUnattendContentResponseArrayInput` via:
//
//          AdditionalUnattendContentResponseArray{ AdditionalUnattendContentResponseArgs{...} }
type AdditionalUnattendContentResponseArrayInput interface {
	pulumi.Input

	ToAdditionalUnattendContentResponseArrayOutput() AdditionalUnattendContentResponseArrayOutput
	ToAdditionalUnattendContentResponseArrayOutputWithContext(context.Context) AdditionalUnattendContentResponseArrayOutput
}

type AdditionalUnattendContentResponseArray []AdditionalUnattendContentResponseInput

func (AdditionalUnattendContentResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContentResponse)(nil)).Elem()
}

func (i AdditionalUnattendContentResponseArray) ToAdditionalUnattendContentResponseArrayOutput() AdditionalUnattendContentResponseArrayOutput {
	return i.ToAdditionalUnattendContentResponseArrayOutputWithContext(context.Background())
}

func (i AdditionalUnattendContentResponseArray) ToAdditionalUnattendContentResponseArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalUnattendContentResponseArrayOutput)
}

// Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
type AdditionalUnattendContentResponseOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalUnattendContentResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentResponseOutput) ToAdditionalUnattendContentResponseOutput() AdditionalUnattendContentResponseOutput {
	return o
}

func (o AdditionalUnattendContentResponseOutput) ToAdditionalUnattendContentResponseOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseOutput {
	return o
}

// The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
func (o AdditionalUnattendContentResponseOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
func (o AdditionalUnattendContentResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The pass name. Currently, the only allowable value is OobeSystem.
func (o AdditionalUnattendContentResponseOutput) PassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.PassName }).(pulumi.StringPtrOutput)
}

// Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
func (o AdditionalUnattendContentResponseOutput) SettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalUnattendContentResponse) *string { return v.SettingName }).(pulumi.StringPtrOutput)
}

type AdditionalUnattendContentResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalUnattendContentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalUnattendContentResponse)(nil)).Elem()
}

func (o AdditionalUnattendContentResponseArrayOutput) ToAdditionalUnattendContentResponseArrayOutput() AdditionalUnattendContentResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentResponseArrayOutput) ToAdditionalUnattendContentResponseArrayOutputWithContext(ctx context.Context) AdditionalUnattendContentResponseArrayOutput {
	return o
}

func (o AdditionalUnattendContentResponseArrayOutput) Index(i pulumi.IntInput) AdditionalUnattendContentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalUnattendContentResponse {
		return vs[0].([]AdditionalUnattendContentResponse)[vs[1].(int)]
	}).(AdditionalUnattendContentResponseOutput)
}

// The API entity reference.
type ApiEntityReference struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id *string `pulumi:"id"`
}

// ApiEntityReferenceInput is an input type that accepts ApiEntityReferenceArgs and ApiEntityReferenceOutput values.
// You can construct a concrete instance of `ApiEntityReferenceInput` via:
//
//          ApiEntityReferenceArgs{...}
type ApiEntityReferenceInput interface {
	pulumi.Input

	ToApiEntityReferenceOutput() ApiEntityReferenceOutput
	ToApiEntityReferenceOutputWithContext(context.Context) ApiEntityReferenceOutput
}

// The API entity reference.
type ApiEntityReferenceArgs struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiEntityReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReference)(nil)).Elem()
}

func (i ApiEntityReferenceArgs) ToApiEntityReferenceOutput() ApiEntityReferenceOutput {
	return i.ToApiEntityReferenceOutputWithContext(context.Background())
}

func (i ApiEntityReferenceArgs) ToApiEntityReferenceOutputWithContext(ctx context.Context) ApiEntityReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferenceOutput)
}

// The API entity reference.
type ApiEntityReferenceOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReference)(nil)).Elem()
}

func (o ApiEntityReferenceOutput) ToApiEntityReferenceOutput() ApiEntityReferenceOutput {
	return o
}

func (o ApiEntityReferenceOutput) ToApiEntityReferenceOutputWithContext(ctx context.Context) ApiEntityReferenceOutput {
	return o
}

// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEntityReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The API entity reference.
type ApiEntityReferenceInvokeResponse struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id *string `pulumi:"id"`
}

// ApiEntityReferenceInvokeResponseInput is an input type that accepts ApiEntityReferenceInvokeResponseArgs and ApiEntityReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `ApiEntityReferenceInvokeResponseInput` via:
//
//          ApiEntityReferenceInvokeResponseArgs{...}
type ApiEntityReferenceInvokeResponseInput interface {
	pulumi.Input

	ToApiEntityReferenceInvokeResponseOutput() ApiEntityReferenceInvokeResponseOutput
	ToApiEntityReferenceInvokeResponseOutputWithContext(context.Context) ApiEntityReferenceInvokeResponseOutput
}

// The API entity reference.
type ApiEntityReferenceInvokeResponseArgs struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiEntityReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReferenceInvokeResponse)(nil)).Elem()
}

func (i ApiEntityReferenceInvokeResponseArgs) ToApiEntityReferenceInvokeResponseOutput() ApiEntityReferenceInvokeResponseOutput {
	return i.ToApiEntityReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i ApiEntityReferenceInvokeResponseArgs) ToApiEntityReferenceInvokeResponseOutputWithContext(ctx context.Context) ApiEntityReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferenceInvokeResponseOutput)
}

// The API entity reference.
type ApiEntityReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReferenceInvokeResponse)(nil)).Elem()
}

func (o ApiEntityReferenceInvokeResponseOutput) ToApiEntityReferenceInvokeResponseOutput() ApiEntityReferenceInvokeResponseOutput {
	return o
}

func (o ApiEntityReferenceInvokeResponseOutput) ToApiEntityReferenceInvokeResponseOutputWithContext(ctx context.Context) ApiEntityReferenceInvokeResponseOutput {
	return o
}

// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEntityReferenceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The API entity reference.
type ApiEntityReferenceResponse struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id *string `pulumi:"id"`
}

// ApiEntityReferenceResponseInput is an input type that accepts ApiEntityReferenceResponseArgs and ApiEntityReferenceResponseOutput values.
// You can construct a concrete instance of `ApiEntityReferenceResponseInput` via:
//
//          ApiEntityReferenceResponseArgs{...}
type ApiEntityReferenceResponseInput interface {
	pulumi.Input

	ToApiEntityReferenceResponseOutput() ApiEntityReferenceResponseOutput
	ToApiEntityReferenceResponseOutputWithContext(context.Context) ApiEntityReferenceResponseOutput
}

// The API entity reference.
type ApiEntityReferenceResponseArgs struct {
	// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiEntityReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReferenceResponse)(nil)).Elem()
}

func (i ApiEntityReferenceResponseArgs) ToApiEntityReferenceResponseOutput() ApiEntityReferenceResponseOutput {
	return i.ToApiEntityReferenceResponseOutputWithContext(context.Background())
}

func (i ApiEntityReferenceResponseArgs) ToApiEntityReferenceResponseOutputWithContext(ctx context.Context) ApiEntityReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEntityReferenceResponseOutput)
}

// The API entity reference.
type ApiEntityReferenceResponseOutput struct{ *pulumi.OutputState }

func (ApiEntityReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEntityReferenceResponse)(nil)).Elem()
}

func (o ApiEntityReferenceResponseOutput) ToApiEntityReferenceResponseOutput() ApiEntityReferenceResponseOutput {
	return o
}

func (o ApiEntityReferenceResponseOutput) ToApiEntityReferenceResponseOutputWithContext(ctx context.Context) ApiEntityReferenceResponseOutput {
	return o
}

// The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
func (o ApiEntityReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEntityReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnostics struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled *bool `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri *string `pulumi:"storageUri"`
}

// BootDiagnosticsInput is an input type that accepts BootDiagnosticsArgs and BootDiagnosticsOutput values.
// You can construct a concrete instance of `BootDiagnosticsInput` via:
//
//          BootDiagnosticsArgs{...}
type BootDiagnosticsInput interface {
	pulumi.Input

	ToBootDiagnosticsOutput() BootDiagnosticsOutput
	ToBootDiagnosticsOutputWithContext(context.Context) BootDiagnosticsOutput
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsArgs struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri pulumi.StringPtrInput `pulumi:"storageUri"`
}

func (BootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnostics)(nil)).Elem()
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsOutput() BootDiagnosticsOutput {
	return i.ToBootDiagnosticsOutputWithContext(context.Background())
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsOutputWithContext(ctx context.Context) BootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsOutput)
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return i.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsArgs) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsOutput).ToBootDiagnosticsPtrOutputWithContext(ctx)
}

// BootDiagnosticsPtrInput is an input type that accepts BootDiagnosticsArgs, BootDiagnosticsPtr and BootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsPtrInput` via:
//
//          BootDiagnosticsArgs{...}
//
//  or:
//
//          nil
type BootDiagnosticsPtrInput interface {
	pulumi.Input

	ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput
	ToBootDiagnosticsPtrOutputWithContext(context.Context) BootDiagnosticsPtrOutput
}

type bootDiagnosticsPtrType BootDiagnosticsArgs

func BootDiagnosticsPtr(v *BootDiagnosticsArgs) BootDiagnosticsPtrInput {
	return (*bootDiagnosticsPtrType)(v)
}

func (*bootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnostics)(nil)).Elem()
}

func (i *bootDiagnosticsPtrType) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return i.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsPtrType) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnostics)(nil)).Elem()
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsOutput() BootDiagnosticsOutput {
	return o
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsOutputWithContext(ctx context.Context) BootDiagnosticsOutput {
	return o
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return o.ToBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsOutput) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return o.ApplyT(func(v BootDiagnostics) *BootDiagnostics {
		return &v
	}).(BootDiagnosticsPtrOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BootDiagnostics) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootDiagnostics) *string { return v.StorageUri }).(pulumi.StringPtrOutput)
}

type BootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnostics)(nil)).Elem()
}

func (o BootDiagnosticsPtrOutput) ToBootDiagnosticsPtrOutput() BootDiagnosticsPtrOutput {
	return o
}

func (o BootDiagnosticsPtrOutput) ToBootDiagnosticsPtrOutputWithContext(ctx context.Context) BootDiagnosticsPtrOutput {
	return o
}

func (o BootDiagnosticsPtrOutput) Elem() BootDiagnosticsOutput {
	return o.ApplyT(func(v *BootDiagnostics) BootDiagnostics { return *v }).(BootDiagnosticsOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BootDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsPtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewInvokeResponse struct {
	// The console screenshot blob URI.
	ConsoleScreenshotBlobUri string `pulumi:"consoleScreenshotBlobUri"`
	// The Linux serial console log blob Uri.
	SerialConsoleLogBlobUri string `pulumi:"serialConsoleLogBlobUri"`
}

// BootDiagnosticsInstanceViewInvokeResponseInput is an input type that accepts BootDiagnosticsInstanceViewInvokeResponseArgs and BootDiagnosticsInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `BootDiagnosticsInstanceViewInvokeResponseInput` via:
//
//          BootDiagnosticsInstanceViewInvokeResponseArgs{...}
type BootDiagnosticsInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToBootDiagnosticsInstanceViewInvokeResponseOutput() BootDiagnosticsInstanceViewInvokeResponseOutput
	ToBootDiagnosticsInstanceViewInvokeResponseOutputWithContext(context.Context) BootDiagnosticsInstanceViewInvokeResponseOutput
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewInvokeResponseArgs struct {
	// The console screenshot blob URI.
	ConsoleScreenshotBlobUri pulumi.StringInput `pulumi:"consoleScreenshotBlobUri"`
	// The Linux serial console log blob Uri.
	SerialConsoleLogBlobUri pulumi.StringInput `pulumi:"serialConsoleLogBlobUri"`
}

func (BootDiagnosticsInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInstanceViewInvokeResponse)(nil)).Elem()
}

func (i BootDiagnosticsInstanceViewInvokeResponseArgs) ToBootDiagnosticsInstanceViewInvokeResponseOutput() BootDiagnosticsInstanceViewInvokeResponseOutput {
	return i.ToBootDiagnosticsInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i BootDiagnosticsInstanceViewInvokeResponseArgs) ToBootDiagnosticsInstanceViewInvokeResponseOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewInvokeResponseOutput)
}

func (i BootDiagnosticsInstanceViewInvokeResponseArgs) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutput() BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return i.ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsInstanceViewInvokeResponseArgs) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewInvokeResponseOutput).ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(ctx)
}

// BootDiagnosticsInstanceViewInvokeResponsePtrInput is an input type that accepts BootDiagnosticsInstanceViewInvokeResponseArgs, BootDiagnosticsInstanceViewInvokeResponsePtr and BootDiagnosticsInstanceViewInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsInstanceViewInvokeResponsePtrInput` via:
//
//          BootDiagnosticsInstanceViewInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BootDiagnosticsInstanceViewInvokeResponsePtrInput interface {
	pulumi.Input

	ToBootDiagnosticsInstanceViewInvokeResponsePtrOutput() BootDiagnosticsInstanceViewInvokeResponsePtrOutput
	ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(context.Context) BootDiagnosticsInstanceViewInvokeResponsePtrOutput
}

type bootDiagnosticsInstanceViewInvokeResponsePtrType BootDiagnosticsInstanceViewInvokeResponseArgs

func BootDiagnosticsInstanceViewInvokeResponsePtr(v *BootDiagnosticsInstanceViewInvokeResponseArgs) BootDiagnosticsInstanceViewInvokeResponsePtrInput {
	return (*bootDiagnosticsInstanceViewInvokeResponsePtrType)(v)
}

func (*bootDiagnosticsInstanceViewInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInstanceViewInvokeResponse)(nil)).Elem()
}

func (i *bootDiagnosticsInstanceViewInvokeResponsePtrType) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutput() BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return i.ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsInstanceViewInvokeResponsePtrType) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewInvokeResponsePtrOutput)
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInstanceViewInvokeResponse)(nil)).Elem()
}

func (o BootDiagnosticsInstanceViewInvokeResponseOutput) ToBootDiagnosticsInstanceViewInvokeResponseOutput() BootDiagnosticsInstanceViewInvokeResponseOutput {
	return o
}

func (o BootDiagnosticsInstanceViewInvokeResponseOutput) ToBootDiagnosticsInstanceViewInvokeResponseOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponseOutput {
	return o
}

func (o BootDiagnosticsInstanceViewInvokeResponseOutput) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutput() BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return o.ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsInstanceViewInvokeResponseOutput) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewInvokeResponse) *BootDiagnosticsInstanceViewInvokeResponse {
		return &v
	}).(BootDiagnosticsInstanceViewInvokeResponsePtrOutput)
}

// The console screenshot blob URI.
func (o BootDiagnosticsInstanceViewInvokeResponseOutput) ConsoleScreenshotBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewInvokeResponse) string { return v.ConsoleScreenshotBlobUri }).(pulumi.StringOutput)
}

// The Linux serial console log blob Uri.
func (o BootDiagnosticsInstanceViewInvokeResponseOutput) SerialConsoleLogBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewInvokeResponse) string { return v.SerialConsoleLogBlobUri }).(pulumi.StringOutput)
}

type BootDiagnosticsInstanceViewInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInstanceViewInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInstanceViewInvokeResponse)(nil)).Elem()
}

func (o BootDiagnosticsInstanceViewInvokeResponsePtrOutput) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutput() BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInstanceViewInvokeResponsePtrOutput) ToBootDiagnosticsInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInstanceViewInvokeResponsePtrOutput) Elem() BootDiagnosticsInstanceViewInvokeResponseOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewInvokeResponse) BootDiagnosticsInstanceViewInvokeResponse {
		return *v
	}).(BootDiagnosticsInstanceViewInvokeResponseOutput)
}

// The console screenshot blob URI.
func (o BootDiagnosticsInstanceViewInvokeResponsePtrOutput) ConsoleScreenshotBlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConsoleScreenshotBlobUri
	}).(pulumi.StringPtrOutput)
}

// The Linux serial console log blob Uri.
func (o BootDiagnosticsInstanceViewInvokeResponsePtrOutput) SerialConsoleLogBlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerialConsoleLogBlobUri
	}).(pulumi.StringPtrOutput)
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewResponse struct {
	// The console screenshot blob URI.
	ConsoleScreenshotBlobUri string `pulumi:"consoleScreenshotBlobUri"`
	// The Linux serial console log blob Uri.
	SerialConsoleLogBlobUri string `pulumi:"serialConsoleLogBlobUri"`
}

// BootDiagnosticsInstanceViewResponseInput is an input type that accepts BootDiagnosticsInstanceViewResponseArgs and BootDiagnosticsInstanceViewResponseOutput values.
// You can construct a concrete instance of `BootDiagnosticsInstanceViewResponseInput` via:
//
//          BootDiagnosticsInstanceViewResponseArgs{...}
type BootDiagnosticsInstanceViewResponseInput interface {
	pulumi.Input

	ToBootDiagnosticsInstanceViewResponseOutput() BootDiagnosticsInstanceViewResponseOutput
	ToBootDiagnosticsInstanceViewResponseOutputWithContext(context.Context) BootDiagnosticsInstanceViewResponseOutput
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewResponseArgs struct {
	// The console screenshot blob URI.
	ConsoleScreenshotBlobUri pulumi.StringInput `pulumi:"consoleScreenshotBlobUri"`
	// The Linux serial console log blob Uri.
	SerialConsoleLogBlobUri pulumi.StringInput `pulumi:"serialConsoleLogBlobUri"`
}

func (BootDiagnosticsInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInstanceViewResponse)(nil)).Elem()
}

func (i BootDiagnosticsInstanceViewResponseArgs) ToBootDiagnosticsInstanceViewResponseOutput() BootDiagnosticsInstanceViewResponseOutput {
	return i.ToBootDiagnosticsInstanceViewResponseOutputWithContext(context.Background())
}

func (i BootDiagnosticsInstanceViewResponseArgs) ToBootDiagnosticsInstanceViewResponseOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewResponseOutput)
}

func (i BootDiagnosticsInstanceViewResponseArgs) ToBootDiagnosticsInstanceViewResponsePtrOutput() BootDiagnosticsInstanceViewResponsePtrOutput {
	return i.ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsInstanceViewResponseArgs) ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewResponseOutput).ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(ctx)
}

// BootDiagnosticsInstanceViewResponsePtrInput is an input type that accepts BootDiagnosticsInstanceViewResponseArgs, BootDiagnosticsInstanceViewResponsePtr and BootDiagnosticsInstanceViewResponsePtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsInstanceViewResponsePtrInput` via:
//
//          BootDiagnosticsInstanceViewResponseArgs{...}
//
//  or:
//
//          nil
type BootDiagnosticsInstanceViewResponsePtrInput interface {
	pulumi.Input

	ToBootDiagnosticsInstanceViewResponsePtrOutput() BootDiagnosticsInstanceViewResponsePtrOutput
	ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(context.Context) BootDiagnosticsInstanceViewResponsePtrOutput
}

type bootDiagnosticsInstanceViewResponsePtrType BootDiagnosticsInstanceViewResponseArgs

func BootDiagnosticsInstanceViewResponsePtr(v *BootDiagnosticsInstanceViewResponseArgs) BootDiagnosticsInstanceViewResponsePtrInput {
	return (*bootDiagnosticsInstanceViewResponsePtrType)(v)
}

func (*bootDiagnosticsInstanceViewResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInstanceViewResponse)(nil)).Elem()
}

func (i *bootDiagnosticsInstanceViewResponsePtrType) ToBootDiagnosticsInstanceViewResponsePtrOutput() BootDiagnosticsInstanceViewResponsePtrOutput {
	return i.ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsInstanceViewResponsePtrType) ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInstanceViewResponsePtrOutput)
}

// The instance view of a virtual machine boot diagnostics.
type BootDiagnosticsInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInstanceViewResponse)(nil)).Elem()
}

func (o BootDiagnosticsInstanceViewResponseOutput) ToBootDiagnosticsInstanceViewResponseOutput() BootDiagnosticsInstanceViewResponseOutput {
	return o
}

func (o BootDiagnosticsInstanceViewResponseOutput) ToBootDiagnosticsInstanceViewResponseOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponseOutput {
	return o
}

func (o BootDiagnosticsInstanceViewResponseOutput) ToBootDiagnosticsInstanceViewResponsePtrOutput() BootDiagnosticsInstanceViewResponsePtrOutput {
	return o.ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsInstanceViewResponseOutput) ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewResponse) *BootDiagnosticsInstanceViewResponse {
		return &v
	}).(BootDiagnosticsInstanceViewResponsePtrOutput)
}

// The console screenshot blob URI.
func (o BootDiagnosticsInstanceViewResponseOutput) ConsoleScreenshotBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewResponse) string { return v.ConsoleScreenshotBlobUri }).(pulumi.StringOutput)
}

// The Linux serial console log blob Uri.
func (o BootDiagnosticsInstanceViewResponseOutput) SerialConsoleLogBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v BootDiagnosticsInstanceViewResponse) string { return v.SerialConsoleLogBlobUri }).(pulumi.StringOutput)
}

type BootDiagnosticsInstanceViewResponsePtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInstanceViewResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInstanceViewResponse)(nil)).Elem()
}

func (o BootDiagnosticsInstanceViewResponsePtrOutput) ToBootDiagnosticsInstanceViewResponsePtrOutput() BootDiagnosticsInstanceViewResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInstanceViewResponsePtrOutput) ToBootDiagnosticsInstanceViewResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInstanceViewResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInstanceViewResponsePtrOutput) Elem() BootDiagnosticsInstanceViewResponseOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewResponse) BootDiagnosticsInstanceViewResponse { return *v }).(BootDiagnosticsInstanceViewResponseOutput)
}

// The console screenshot blob URI.
func (o BootDiagnosticsInstanceViewResponsePtrOutput) ConsoleScreenshotBlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConsoleScreenshotBlobUri
	}).(pulumi.StringPtrOutput)
}

// The Linux serial console log blob Uri.
func (o BootDiagnosticsInstanceViewResponsePtrOutput) SerialConsoleLogBlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SerialConsoleLogBlobUri
	}).(pulumi.StringPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsInvokeResponse struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled *bool `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri *string `pulumi:"storageUri"`
}

// BootDiagnosticsInvokeResponseInput is an input type that accepts BootDiagnosticsInvokeResponseArgs and BootDiagnosticsInvokeResponseOutput values.
// You can construct a concrete instance of `BootDiagnosticsInvokeResponseInput` via:
//
//          BootDiagnosticsInvokeResponseArgs{...}
type BootDiagnosticsInvokeResponseInput interface {
	pulumi.Input

	ToBootDiagnosticsInvokeResponseOutput() BootDiagnosticsInvokeResponseOutput
	ToBootDiagnosticsInvokeResponseOutputWithContext(context.Context) BootDiagnosticsInvokeResponseOutput
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsInvokeResponseArgs struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri pulumi.StringPtrInput `pulumi:"storageUri"`
}

func (BootDiagnosticsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInvokeResponse)(nil)).Elem()
}

func (i BootDiagnosticsInvokeResponseArgs) ToBootDiagnosticsInvokeResponseOutput() BootDiagnosticsInvokeResponseOutput {
	return i.ToBootDiagnosticsInvokeResponseOutputWithContext(context.Background())
}

func (i BootDiagnosticsInvokeResponseArgs) ToBootDiagnosticsInvokeResponseOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInvokeResponseOutput)
}

func (i BootDiagnosticsInvokeResponseArgs) ToBootDiagnosticsInvokeResponsePtrOutput() BootDiagnosticsInvokeResponsePtrOutput {
	return i.ToBootDiagnosticsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsInvokeResponseArgs) ToBootDiagnosticsInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInvokeResponseOutput).ToBootDiagnosticsInvokeResponsePtrOutputWithContext(ctx)
}

// BootDiagnosticsInvokeResponsePtrInput is an input type that accepts BootDiagnosticsInvokeResponseArgs, BootDiagnosticsInvokeResponsePtr and BootDiagnosticsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsInvokeResponsePtrInput` via:
//
//          BootDiagnosticsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BootDiagnosticsInvokeResponsePtrInput interface {
	pulumi.Input

	ToBootDiagnosticsInvokeResponsePtrOutput() BootDiagnosticsInvokeResponsePtrOutput
	ToBootDiagnosticsInvokeResponsePtrOutputWithContext(context.Context) BootDiagnosticsInvokeResponsePtrOutput
}

type bootDiagnosticsInvokeResponsePtrType BootDiagnosticsInvokeResponseArgs

func BootDiagnosticsInvokeResponsePtr(v *BootDiagnosticsInvokeResponseArgs) BootDiagnosticsInvokeResponsePtrInput {
	return (*bootDiagnosticsInvokeResponsePtrType)(v)
}

func (*bootDiagnosticsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInvokeResponse)(nil)).Elem()
}

func (i *bootDiagnosticsInvokeResponsePtrType) ToBootDiagnosticsInvokeResponsePtrOutput() BootDiagnosticsInvokeResponsePtrOutput {
	return i.ToBootDiagnosticsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsInvokeResponsePtrType) ToBootDiagnosticsInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsInvokeResponsePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsInvokeResponseOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsInvokeResponse)(nil)).Elem()
}

func (o BootDiagnosticsInvokeResponseOutput) ToBootDiagnosticsInvokeResponseOutput() BootDiagnosticsInvokeResponseOutput {
	return o
}

func (o BootDiagnosticsInvokeResponseOutput) ToBootDiagnosticsInvokeResponseOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponseOutput {
	return o
}

func (o BootDiagnosticsInvokeResponseOutput) ToBootDiagnosticsInvokeResponsePtrOutput() BootDiagnosticsInvokeResponsePtrOutput {
	return o.ToBootDiagnosticsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsInvokeResponseOutput) ToBootDiagnosticsInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponsePtrOutput {
	return o.ApplyT(func(v BootDiagnosticsInvokeResponse) *BootDiagnosticsInvokeResponse {
		return &v
	}).(BootDiagnosticsInvokeResponsePtrOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsInvokeResponseOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsInvokeResponse) *string { return v.StorageUri }).(pulumi.StringPtrOutput)
}

type BootDiagnosticsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsInvokeResponse)(nil)).Elem()
}

func (o BootDiagnosticsInvokeResponsePtrOutput) ToBootDiagnosticsInvokeResponsePtrOutput() BootDiagnosticsInvokeResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInvokeResponsePtrOutput) ToBootDiagnosticsInvokeResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsInvokeResponsePtrOutput {
	return o
}

func (o BootDiagnosticsInvokeResponsePtrOutput) Elem() BootDiagnosticsInvokeResponseOutput {
	return o.ApplyT(func(v *BootDiagnosticsInvokeResponse) BootDiagnosticsInvokeResponse { return *v }).(BootDiagnosticsInvokeResponseOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsInvokeResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsInvokeResponsePtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsResponse struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled *bool `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri *string `pulumi:"storageUri"`
}

// BootDiagnosticsResponseInput is an input type that accepts BootDiagnosticsResponseArgs and BootDiagnosticsResponseOutput values.
// You can construct a concrete instance of `BootDiagnosticsResponseInput` via:
//
//          BootDiagnosticsResponseArgs{...}
type BootDiagnosticsResponseInput interface {
	pulumi.Input

	ToBootDiagnosticsResponseOutput() BootDiagnosticsResponseOutput
	ToBootDiagnosticsResponseOutputWithContext(context.Context) BootDiagnosticsResponseOutput
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsResponseArgs struct {
	// Whether boot diagnostics should be enabled on the Virtual Machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Uri of the storage account to use for placing the console output and screenshot.
	StorageUri pulumi.StringPtrInput `pulumi:"storageUri"`
}

func (BootDiagnosticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsResponse)(nil)).Elem()
}

func (i BootDiagnosticsResponseArgs) ToBootDiagnosticsResponseOutput() BootDiagnosticsResponseOutput {
	return i.ToBootDiagnosticsResponseOutputWithContext(context.Background())
}

func (i BootDiagnosticsResponseArgs) ToBootDiagnosticsResponseOutputWithContext(ctx context.Context) BootDiagnosticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsResponseOutput)
}

func (i BootDiagnosticsResponseArgs) ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput {
	return i.ToBootDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i BootDiagnosticsResponseArgs) ToBootDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsResponseOutput).ToBootDiagnosticsResponsePtrOutputWithContext(ctx)
}

// BootDiagnosticsResponsePtrInput is an input type that accepts BootDiagnosticsResponseArgs, BootDiagnosticsResponsePtr and BootDiagnosticsResponsePtrOutput values.
// You can construct a concrete instance of `BootDiagnosticsResponsePtrInput` via:
//
//          BootDiagnosticsResponseArgs{...}
//
//  or:
//
//          nil
type BootDiagnosticsResponsePtrInput interface {
	pulumi.Input

	ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput
	ToBootDiagnosticsResponsePtrOutputWithContext(context.Context) BootDiagnosticsResponsePtrOutput
}

type bootDiagnosticsResponsePtrType BootDiagnosticsResponseArgs

func BootDiagnosticsResponsePtr(v *BootDiagnosticsResponseArgs) BootDiagnosticsResponsePtrInput {
	return (*bootDiagnosticsResponsePtrType)(v)
}

func (*bootDiagnosticsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsResponse)(nil)).Elem()
}

func (i *bootDiagnosticsResponsePtrType) ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput {
	return i.ToBootDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i *bootDiagnosticsResponsePtrType) ToBootDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BootDiagnosticsResponsePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
type BootDiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BootDiagnosticsResponse)(nil)).Elem()
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponseOutput() BootDiagnosticsResponseOutput {
	return o
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponseOutputWithContext(ctx context.Context) BootDiagnosticsResponseOutput {
	return o
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput {
	return o.ToBootDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (o BootDiagnosticsResponseOutput) ToBootDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v BootDiagnosticsResponse) *BootDiagnosticsResponse {
		return &v
	}).(BootDiagnosticsResponsePtrOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsResponseOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BootDiagnosticsResponse) *string { return v.StorageUri }).(pulumi.StringPtrOutput)
}

type BootDiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (BootDiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BootDiagnosticsResponse)(nil)).Elem()
}

func (o BootDiagnosticsResponsePtrOutput) ToBootDiagnosticsResponsePtrOutput() BootDiagnosticsResponsePtrOutput {
	return o
}

func (o BootDiagnosticsResponsePtrOutput) ToBootDiagnosticsResponsePtrOutputWithContext(ctx context.Context) BootDiagnosticsResponsePtrOutput {
	return o
}

func (o BootDiagnosticsResponsePtrOutput) Elem() BootDiagnosticsResponseOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) BootDiagnosticsResponse { return *v }).(BootDiagnosticsResponseOutput)
}

// Whether boot diagnostics should be enabled on the Virtual Machine.
func (o BootDiagnosticsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Uri of the storage account to use for placing the console output and screenshot.
func (o BootDiagnosticsResponsePtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BootDiagnosticsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageUri
	}).(pulumi.StringPtrOutput)
}

// Describes a data disk.
type DataDisk struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDisk `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The disk name.
	Name string `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDisk `pulumi:"vhd"`
}

// DataDiskInput is an input type that accepts DataDiskArgs and DataDiskOutput values.
// You can construct a concrete instance of `DataDiskInput` via:
//
//          DataDiskArgs{...}
type DataDiskInput interface {
	pulumi.Input

	ToDataDiskOutput() DataDiskOutput
	ToDataDiskOutputWithContext(context.Context) DataDiskOutput
}

// Describes a data disk.
type DataDiskArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching CachingTypes `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption DiskCreateOptionTypes `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskPtrInput `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInput `pulumi:"vhd"`
}

func (DataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisk)(nil)).Elem()
}

func (i DataDiskArgs) ToDataDiskOutput() DataDiskOutput {
	return i.ToDataDiskOutputWithContext(context.Background())
}

func (i DataDiskArgs) ToDataDiskOutputWithContext(ctx context.Context) DataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskOutput)
}

// DataDiskArrayInput is an input type that accepts DataDiskArray and DataDiskArrayOutput values.
// You can construct a concrete instance of `DataDiskArrayInput` via:
//
//          DataDiskArray{ DataDiskArgs{...} }
type DataDiskArrayInput interface {
	pulumi.Input

	ToDataDiskArrayOutput() DataDiskArrayOutput
	ToDataDiskArrayOutputWithContext(context.Context) DataDiskArrayOutput
}

type DataDiskArray []DataDiskInput

func (DataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDisk)(nil)).Elem()
}

func (i DataDiskArray) ToDataDiskArrayOutput() DataDiskArrayOutput {
	return i.ToDataDiskArrayOutputWithContext(context.Background())
}

func (i DataDiskArray) ToDataDiskArrayOutputWithContext(ctx context.Context) DataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskArrayOutput)
}

// Describes a data disk.
type DataDiskOutput struct{ *pulumi.OutputState }

func (DataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDisk)(nil)).Elem()
}

func (o DataDiskOutput) ToDataDiskOutput() DataDiskOutput {
	return o
}

func (o DataDiskOutput) ToDataDiskOutputWithContext(ctx context.Context) DataDiskOutput {
	return o
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o DataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o DataDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v DataDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o DataDiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataDisk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o DataDiskOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v DataDisk) *VirtualHardDisk { return v.Image }).(VirtualHardDiskPtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
func (o DataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The disk name.
func (o DataDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The virtual hard disk.
func (o DataDiskOutput) Vhd() VirtualHardDiskOutput {
	return o.ApplyT(func(v DataDisk) VirtualHardDisk { return v.Vhd }).(VirtualHardDiskOutput)
}

type DataDiskArrayOutput struct{ *pulumi.OutputState }

func (DataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDisk)(nil)).Elem()
}

func (o DataDiskArrayOutput) ToDataDiskArrayOutput() DataDiskArrayOutput {
	return o
}

func (o DataDiskArrayOutput) ToDataDiskArrayOutputWithContext(ctx context.Context) DataDiskArrayOutput {
	return o
}

func (o DataDiskArrayOutput) Index(i pulumi.IntInput) DataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDisk {
		return vs[0].([]DataDisk)[vs[1].(int)]
	}).(DataDiskOutput)
}

// Describes a data disk.
type DataDiskInvokeResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDiskInvokeResponse `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The disk name.
	Name string `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInvokeResponse `pulumi:"vhd"`
}

// DataDiskInvokeResponseInput is an input type that accepts DataDiskInvokeResponseArgs and DataDiskInvokeResponseOutput values.
// You can construct a concrete instance of `DataDiskInvokeResponseInput` via:
//
//          DataDiskInvokeResponseArgs{...}
type DataDiskInvokeResponseInput interface {
	pulumi.Input

	ToDataDiskInvokeResponseOutput() DataDiskInvokeResponseOutput
	ToDataDiskInvokeResponseOutputWithContext(context.Context) DataDiskInvokeResponseOutput
}

// Describes a data disk.
type DataDiskInvokeResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskInvokeResponsePtrInput `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInvokeResponseInput `pulumi:"vhd"`
}

func (DataDiskInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskInvokeResponse)(nil)).Elem()
}

func (i DataDiskInvokeResponseArgs) ToDataDiskInvokeResponseOutput() DataDiskInvokeResponseOutput {
	return i.ToDataDiskInvokeResponseOutputWithContext(context.Background())
}

func (i DataDiskInvokeResponseArgs) ToDataDiskInvokeResponseOutputWithContext(ctx context.Context) DataDiskInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskInvokeResponseOutput)
}

// DataDiskInvokeResponseArrayInput is an input type that accepts DataDiskInvokeResponseArray and DataDiskInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskInvokeResponseArrayInput` via:
//
//          DataDiskInvokeResponseArray{ DataDiskInvokeResponseArgs{...} }
type DataDiskInvokeResponseArrayInput interface {
	pulumi.Input

	ToDataDiskInvokeResponseArrayOutput() DataDiskInvokeResponseArrayOutput
	ToDataDiskInvokeResponseArrayOutputWithContext(context.Context) DataDiskInvokeResponseArrayOutput
}

type DataDiskInvokeResponseArray []DataDiskInvokeResponseInput

func (DataDiskInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskInvokeResponse)(nil)).Elem()
}

func (i DataDiskInvokeResponseArray) ToDataDiskInvokeResponseArrayOutput() DataDiskInvokeResponseArrayOutput {
	return i.ToDataDiskInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskInvokeResponseArray) ToDataDiskInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskInvokeResponseArrayOutput)
}

// Describes a data disk.
type DataDiskInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataDiskInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskInvokeResponse)(nil)).Elem()
}

func (o DataDiskInvokeResponseOutput) ToDataDiskInvokeResponseOutput() DataDiskInvokeResponseOutput {
	return o
}

func (o DataDiskInvokeResponseOutput) ToDataDiskInvokeResponseOutputWithContext(ctx context.Context) DataDiskInvokeResponseOutput {
	return o
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o DataDiskInvokeResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o DataDiskInvokeResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o DataDiskInvokeResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o DataDiskInvokeResponseOutput) Image() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) *VirtualHardDiskInvokeResponse { return v.Image }).(VirtualHardDiskInvokeResponsePtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
func (o DataDiskInvokeResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// The disk name.
func (o DataDiskInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The virtual hard disk.
func (o DataDiskInvokeResponseOutput) Vhd() VirtualHardDiskInvokeResponseOutput {
	return o.ApplyT(func(v DataDiskInvokeResponse) VirtualHardDiskInvokeResponse { return v.Vhd }).(VirtualHardDiskInvokeResponseOutput)
}

type DataDiskInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskInvokeResponse)(nil)).Elem()
}

func (o DataDiskInvokeResponseArrayOutput) ToDataDiskInvokeResponseArrayOutput() DataDiskInvokeResponseArrayOutput {
	return o
}

func (o DataDiskInvokeResponseArrayOutput) ToDataDiskInvokeResponseArrayOutputWithContext(ctx context.Context) DataDiskInvokeResponseArrayOutput {
	return o
}

func (o DataDiskInvokeResponseArrayOutput) Index(i pulumi.IntInput) DataDiskInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskInvokeResponse {
		return vs[0].([]DataDiskInvokeResponse)[vs[1].(int)]
	}).(DataDiskInvokeResponseOutput)
}

// Describes a data disk.
type DataDiskResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDiskResponse `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The disk name.
	Name string `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDiskResponse `pulumi:"vhd"`
}

// DataDiskResponseInput is an input type that accepts DataDiskResponseArgs and DataDiskResponseOutput values.
// You can construct a concrete instance of `DataDiskResponseInput` via:
//
//          DataDiskResponseArgs{...}
type DataDiskResponseInput interface {
	pulumi.Input

	ToDataDiskResponseOutput() DataDiskResponseOutput
	ToDataDiskResponseOutputWithContext(context.Context) DataDiskResponseOutput
}

// Describes a data disk.
type DataDiskResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskResponsePtrInput `pulumi:"image"`
	// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// The virtual hard disk.
	Vhd VirtualHardDiskResponseInput `pulumi:"vhd"`
}

func (DataDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskResponse)(nil)).Elem()
}

func (i DataDiskResponseArgs) ToDataDiskResponseOutput() DataDiskResponseOutput {
	return i.ToDataDiskResponseOutputWithContext(context.Background())
}

func (i DataDiskResponseArgs) ToDataDiskResponseOutputWithContext(ctx context.Context) DataDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskResponseOutput)
}

// DataDiskResponseArrayInput is an input type that accepts DataDiskResponseArray and DataDiskResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskResponseArrayInput` via:
//
//          DataDiskResponseArray{ DataDiskResponseArgs{...} }
type DataDiskResponseArrayInput interface {
	pulumi.Input

	ToDataDiskResponseArrayOutput() DataDiskResponseArrayOutput
	ToDataDiskResponseArrayOutputWithContext(context.Context) DataDiskResponseArrayOutput
}

type DataDiskResponseArray []DataDiskResponseInput

func (DataDiskResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskResponse)(nil)).Elem()
}

func (i DataDiskResponseArray) ToDataDiskResponseArrayOutput() DataDiskResponseArrayOutput {
	return i.ToDataDiskResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskResponseArray) ToDataDiskResponseArrayOutputWithContext(ctx context.Context) DataDiskResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskResponseArrayOutput)
}

// Describes a data disk.
type DataDiskResponseOutput struct{ *pulumi.OutputState }

func (DataDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskResponse)(nil)).Elem()
}

func (o DataDiskResponseOutput) ToDataDiskResponseOutput() DataDiskResponseOutput {
	return o
}

func (o DataDiskResponseOutput) ToDataDiskResponseOutputWithContext(ctx context.Context) DataDiskResponseOutput {
	return o
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o DataDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o DataDiskResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o DataDiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o DataDiskResponseOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v DataDiskResponse) *VirtualHardDiskResponse { return v.Image }).(VirtualHardDiskResponsePtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
func (o DataDiskResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// The disk name.
func (o DataDiskResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataDiskResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The virtual hard disk.
func (o DataDiskResponseOutput) Vhd() VirtualHardDiskResponseOutput {
	return o.ApplyT(func(v DataDiskResponse) VirtualHardDiskResponse { return v.Vhd }).(VirtualHardDiskResponseOutput)
}

type DataDiskResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskResponse)(nil)).Elem()
}

func (o DataDiskResponseArrayOutput) ToDataDiskResponseArrayOutput() DataDiskResponseArrayOutput {
	return o
}

func (o DataDiskResponseArrayOutput) ToDataDiskResponseArrayOutputWithContext(ctx context.Context) DataDiskResponseArrayOutput {
	return o
}

func (o DataDiskResponseArrayOutput) Index(i pulumi.IntInput) DataDiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskResponse {
		return vs[0].([]DataDiskResponse)[vs[1].(int)]
	}).(DataDiskResponseOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfile struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnostics `pulumi:"bootDiagnostics"`
}

// DiagnosticsProfileInput is an input type that accepts DiagnosticsProfileArgs and DiagnosticsProfileOutput values.
// You can construct a concrete instance of `DiagnosticsProfileInput` via:
//
//          DiagnosticsProfileArgs{...}
type DiagnosticsProfileInput interface {
	pulumi.Input

	ToDiagnosticsProfileOutput() DiagnosticsProfileOutput
	ToDiagnosticsProfileOutputWithContext(context.Context) DiagnosticsProfileOutput
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsPtrInput `pulumi:"bootDiagnostics"`
}

func (DiagnosticsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfile)(nil)).Elem()
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfileOutput() DiagnosticsProfileOutput {
	return i.ToDiagnosticsProfileOutputWithContext(context.Background())
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfileOutputWithContext(ctx context.Context) DiagnosticsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileOutput)
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return i.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i DiagnosticsProfileArgs) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileOutput).ToDiagnosticsProfilePtrOutputWithContext(ctx)
}

// DiagnosticsProfilePtrInput is an input type that accepts DiagnosticsProfileArgs, DiagnosticsProfilePtr and DiagnosticsProfilePtrOutput values.
// You can construct a concrete instance of `DiagnosticsProfilePtrInput` via:
//
//          DiagnosticsProfileArgs{...}
//
//  or:
//
//          nil
type DiagnosticsProfilePtrInput interface {
	pulumi.Input

	ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput
	ToDiagnosticsProfilePtrOutputWithContext(context.Context) DiagnosticsProfilePtrOutput
}

type diagnosticsProfilePtrType DiagnosticsProfileArgs

func DiagnosticsProfilePtr(v *DiagnosticsProfileArgs) DiagnosticsProfilePtrInput {
	return (*diagnosticsProfilePtrType)(v)
}

func (*diagnosticsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfile)(nil)).Elem()
}

func (i *diagnosticsProfilePtrType) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return i.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (i *diagnosticsProfilePtrType) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfilePtrOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfile)(nil)).Elem()
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfileOutput() DiagnosticsProfileOutput {
	return o
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfileOutputWithContext(ctx context.Context) DiagnosticsProfileOutput {
	return o
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return o.ToDiagnosticsProfilePtrOutputWithContext(context.Background())
}

func (o DiagnosticsProfileOutput) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return o.ApplyT(func(v DiagnosticsProfile) *DiagnosticsProfile {
		return &v
	}).(DiagnosticsProfilePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileOutput) BootDiagnostics() BootDiagnosticsPtrOutput {
	return o.ApplyT(func(v DiagnosticsProfile) *BootDiagnostics { return v.BootDiagnostics }).(BootDiagnosticsPtrOutput)
}

type DiagnosticsProfilePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfile)(nil)).Elem()
}

func (o DiagnosticsProfilePtrOutput) ToDiagnosticsProfilePtrOutput() DiagnosticsProfilePtrOutput {
	return o
}

func (o DiagnosticsProfilePtrOutput) ToDiagnosticsProfilePtrOutputWithContext(ctx context.Context) DiagnosticsProfilePtrOutput {
	return o
}

func (o DiagnosticsProfilePtrOutput) Elem() DiagnosticsProfileOutput {
	return o.ApplyT(func(v *DiagnosticsProfile) DiagnosticsProfile { return *v }).(DiagnosticsProfileOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfilePtrOutput) BootDiagnostics() BootDiagnosticsPtrOutput {
	return o.ApplyT(func(v *DiagnosticsProfile) *BootDiagnostics {
		if v == nil {
			return nil
		}
		return v.BootDiagnostics
	}).(BootDiagnosticsPtrOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileInvokeResponse struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnosticsInvokeResponse `pulumi:"bootDiagnostics"`
}

// DiagnosticsProfileInvokeResponseInput is an input type that accepts DiagnosticsProfileInvokeResponseArgs and DiagnosticsProfileInvokeResponseOutput values.
// You can construct a concrete instance of `DiagnosticsProfileInvokeResponseInput` via:
//
//          DiagnosticsProfileInvokeResponseArgs{...}
type DiagnosticsProfileInvokeResponseInput interface {
	pulumi.Input

	ToDiagnosticsProfileInvokeResponseOutput() DiagnosticsProfileInvokeResponseOutput
	ToDiagnosticsProfileInvokeResponseOutputWithContext(context.Context) DiagnosticsProfileInvokeResponseOutput
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileInvokeResponseArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsInvokeResponsePtrInput `pulumi:"bootDiagnostics"`
}

func (DiagnosticsProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfileInvokeResponse)(nil)).Elem()
}

func (i DiagnosticsProfileInvokeResponseArgs) ToDiagnosticsProfileInvokeResponseOutput() DiagnosticsProfileInvokeResponseOutput {
	return i.ToDiagnosticsProfileInvokeResponseOutputWithContext(context.Background())
}

func (i DiagnosticsProfileInvokeResponseArgs) ToDiagnosticsProfileInvokeResponseOutputWithContext(ctx context.Context) DiagnosticsProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileInvokeResponseOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfileInvokeResponse)(nil)).Elem()
}

func (o DiagnosticsProfileInvokeResponseOutput) ToDiagnosticsProfileInvokeResponseOutput() DiagnosticsProfileInvokeResponseOutput {
	return o
}

func (o DiagnosticsProfileInvokeResponseOutput) ToDiagnosticsProfileInvokeResponseOutputWithContext(ctx context.Context) DiagnosticsProfileInvokeResponseOutput {
	return o
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileInvokeResponseOutput) BootDiagnostics() BootDiagnosticsInvokeResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsProfileInvokeResponse) *BootDiagnosticsInvokeResponse { return v.BootDiagnostics }).(BootDiagnosticsInvokeResponsePtrOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileResponse struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnosticsResponse `pulumi:"bootDiagnostics"`
}

// DiagnosticsProfileResponseInput is an input type that accepts DiagnosticsProfileResponseArgs and DiagnosticsProfileResponseOutput values.
// You can construct a concrete instance of `DiagnosticsProfileResponseInput` via:
//
//          DiagnosticsProfileResponseArgs{...}
type DiagnosticsProfileResponseInput interface {
	pulumi.Input

	ToDiagnosticsProfileResponseOutput() DiagnosticsProfileResponseOutput
	ToDiagnosticsProfileResponseOutputWithContext(context.Context) DiagnosticsProfileResponseOutput
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileResponseArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsResponsePtrInput `pulumi:"bootDiagnostics"`
}

func (DiagnosticsProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfileResponse)(nil)).Elem()
}

func (i DiagnosticsProfileResponseArgs) ToDiagnosticsProfileResponseOutput() DiagnosticsProfileResponseOutput {
	return i.ToDiagnosticsProfileResponseOutputWithContext(context.Background())
}

func (i DiagnosticsProfileResponseArgs) ToDiagnosticsProfileResponseOutputWithContext(ctx context.Context) DiagnosticsProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileResponseOutput)
}

func (i DiagnosticsProfileResponseArgs) ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput {
	return i.ToDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticsProfileResponseArgs) ToDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) DiagnosticsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileResponseOutput).ToDiagnosticsProfileResponsePtrOutputWithContext(ctx)
}

// DiagnosticsProfileResponsePtrInput is an input type that accepts DiagnosticsProfileResponseArgs, DiagnosticsProfileResponsePtr and DiagnosticsProfileResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticsProfileResponsePtrInput` via:
//
//          DiagnosticsProfileResponseArgs{...}
//
//  or:
//
//          nil
type DiagnosticsProfileResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput
	ToDiagnosticsProfileResponsePtrOutputWithContext(context.Context) DiagnosticsProfileResponsePtrOutput
}

type diagnosticsProfileResponsePtrType DiagnosticsProfileResponseArgs

func DiagnosticsProfileResponsePtr(v *DiagnosticsProfileResponseArgs) DiagnosticsProfileResponsePtrInput {
	return (*diagnosticsProfileResponsePtrType)(v)
}

func (*diagnosticsProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfileResponse)(nil)).Elem()
}

func (i *diagnosticsProfileResponsePtrType) ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput {
	return i.ToDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticsProfileResponsePtrType) ToDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) DiagnosticsProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsProfileResponsePtrOutput)
}

// Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
type DiagnosticsProfileResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsProfileResponse)(nil)).Elem()
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponseOutput() DiagnosticsProfileResponseOutput {
	return o
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponseOutputWithContext(ctx context.Context) DiagnosticsProfileResponseOutput {
	return o
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput {
	return o.ToDiagnosticsProfileResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticsProfileResponseOutput) ToDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) DiagnosticsProfileResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsProfileResponse) *DiagnosticsProfileResponse {
		return &v
	}).(DiagnosticsProfileResponsePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileResponseOutput) BootDiagnostics() BootDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsProfileResponse) *BootDiagnosticsResponse { return v.BootDiagnostics }).(BootDiagnosticsResponsePtrOutput)
}

type DiagnosticsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsProfileResponse)(nil)).Elem()
}

func (o DiagnosticsProfileResponsePtrOutput) ToDiagnosticsProfileResponsePtrOutput() DiagnosticsProfileResponsePtrOutput {
	return o
}

func (o DiagnosticsProfileResponsePtrOutput) ToDiagnosticsProfileResponsePtrOutputWithContext(ctx context.Context) DiagnosticsProfileResponsePtrOutput {
	return o
}

func (o DiagnosticsProfileResponsePtrOutput) Elem() DiagnosticsProfileResponseOutput {
	return o.ApplyT(func(v *DiagnosticsProfileResponse) DiagnosticsProfileResponse { return *v }).(DiagnosticsProfileResponseOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o DiagnosticsProfileResponsePtrOutput) BootDiagnostics() BootDiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v *DiagnosticsProfileResponse) *BootDiagnosticsResponse {
		if v == nil {
			return nil
		}
		return v.BootDiagnostics
	}).(BootDiagnosticsResponsePtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettings struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey *KeyVaultSecretReference `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey *KeyVaultKeyReference `pulumi:"keyEncryptionKey"`
}

// DiskEncryptionSettingsInput is an input type that accepts DiskEncryptionSettingsArgs and DiskEncryptionSettingsOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsInput` via:
//
//          DiskEncryptionSettingsArgs{...}
type DiskEncryptionSettingsInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsOutput() DiskEncryptionSettingsOutput
	ToDiskEncryptionSettingsOutputWithContext(context.Context) DiskEncryptionSettingsOutput
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsArgs struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey KeyVaultSecretReferencePtrInput `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey KeyVaultKeyReferencePtrInput `pulumi:"keyEncryptionKey"`
}

func (DiskEncryptionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettings)(nil)).Elem()
}

func (i DiskEncryptionSettingsArgs) ToDiskEncryptionSettingsOutput() DiskEncryptionSettingsOutput {
	return i.ToDiskEncryptionSettingsOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsArgs) ToDiskEncryptionSettingsOutputWithContext(ctx context.Context) DiskEncryptionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsOutput)
}

func (i DiskEncryptionSettingsArgs) ToDiskEncryptionSettingsPtrOutput() DiskEncryptionSettingsPtrOutput {
	return i.ToDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsArgs) ToDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsOutput).ToDiskEncryptionSettingsPtrOutputWithContext(ctx)
}

// DiskEncryptionSettingsPtrInput is an input type that accepts DiskEncryptionSettingsArgs, DiskEncryptionSettingsPtr and DiskEncryptionSettingsPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsPtrInput` via:
//
//          DiskEncryptionSettingsArgs{...}
//
//  or:
//
//          nil
type DiskEncryptionSettingsPtrInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsPtrOutput() DiskEncryptionSettingsPtrOutput
	ToDiskEncryptionSettingsPtrOutputWithContext(context.Context) DiskEncryptionSettingsPtrOutput
}

type diskEncryptionSettingsPtrType DiskEncryptionSettingsArgs

func DiskEncryptionSettingsPtr(v *DiskEncryptionSettingsArgs) DiskEncryptionSettingsPtrInput {
	return (*diskEncryptionSettingsPtrType)(v)
}

func (*diskEncryptionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettings)(nil)).Elem()
}

func (i *diskEncryptionSettingsPtrType) ToDiskEncryptionSettingsPtrOutput() DiskEncryptionSettingsPtrOutput {
	return i.ToDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionSettingsPtrType) ToDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsPtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettings)(nil)).Elem()
}

func (o DiskEncryptionSettingsOutput) ToDiskEncryptionSettingsOutput() DiskEncryptionSettingsOutput {
	return o
}

func (o DiskEncryptionSettingsOutput) ToDiskEncryptionSettingsOutputWithContext(ctx context.Context) DiskEncryptionSettingsOutput {
	return o
}

func (o DiskEncryptionSettingsOutput) ToDiskEncryptionSettingsPtrOutput() DiskEncryptionSettingsPtrOutput {
	return o.ToDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSettingsOutput) ToDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettings) *DiskEncryptionSettings {
		return &v
	}).(DiskEncryptionSettingsPtrOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsOutput) DiskEncryptionKey() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettings) *KeyVaultSecretReference { return v.DiskEncryptionKey }).(KeyVaultSecretReferencePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsOutput) KeyEncryptionKey() KeyVaultKeyReferencePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettings) *KeyVaultKeyReference { return v.KeyEncryptionKey }).(KeyVaultKeyReferencePtrOutput)
}

type DiskEncryptionSettingsPtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettings)(nil)).Elem()
}

func (o DiskEncryptionSettingsPtrOutput) ToDiskEncryptionSettingsPtrOutput() DiskEncryptionSettingsPtrOutput {
	return o
}

func (o DiskEncryptionSettingsPtrOutput) ToDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsPtrOutput {
	return o
}

func (o DiskEncryptionSettingsPtrOutput) Elem() DiskEncryptionSettingsOutput {
	return o.ApplyT(func(v *DiskEncryptionSettings) DiskEncryptionSettings { return *v }).(DiskEncryptionSettingsOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsPtrOutput) DiskEncryptionKey() KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettings) *KeyVaultSecretReference {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKey
	}).(KeyVaultSecretReferencePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsPtrOutput) KeyEncryptionKey() KeyVaultKeyReferencePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettings) *KeyVaultKeyReference {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyVaultKeyReferencePtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsInvokeResponse struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey *KeyVaultSecretReferenceInvokeResponse `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey *KeyVaultKeyReferenceInvokeResponse `pulumi:"keyEncryptionKey"`
}

// DiskEncryptionSettingsInvokeResponseInput is an input type that accepts DiskEncryptionSettingsInvokeResponseArgs and DiskEncryptionSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsInvokeResponseInput` via:
//
//          DiskEncryptionSettingsInvokeResponseArgs{...}
type DiskEncryptionSettingsInvokeResponseInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsInvokeResponseOutput() DiskEncryptionSettingsInvokeResponseOutput
	ToDiskEncryptionSettingsInvokeResponseOutputWithContext(context.Context) DiskEncryptionSettingsInvokeResponseOutput
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsInvokeResponseArgs struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey KeyVaultSecretReferenceInvokeResponsePtrInput `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey KeyVaultKeyReferenceInvokeResponsePtrInput `pulumi:"keyEncryptionKey"`
}

func (DiskEncryptionSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettingsInvokeResponse)(nil)).Elem()
}

func (i DiskEncryptionSettingsInvokeResponseArgs) ToDiskEncryptionSettingsInvokeResponseOutput() DiskEncryptionSettingsInvokeResponseOutput {
	return i.ToDiskEncryptionSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsInvokeResponseArgs) ToDiskEncryptionSettingsInvokeResponseOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsInvokeResponseOutput)
}

func (i DiskEncryptionSettingsInvokeResponseArgs) ToDiskEncryptionSettingsInvokeResponsePtrOutput() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return i.ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsInvokeResponseArgs) ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsInvokeResponseOutput).ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// DiskEncryptionSettingsInvokeResponsePtrInput is an input type that accepts DiskEncryptionSettingsInvokeResponseArgs, DiskEncryptionSettingsInvokeResponsePtr and DiskEncryptionSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsInvokeResponsePtrInput` via:
//
//          DiskEncryptionSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type DiskEncryptionSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsInvokeResponsePtrOutput() DiskEncryptionSettingsInvokeResponsePtrOutput
	ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(context.Context) DiskEncryptionSettingsInvokeResponsePtrOutput
}

type diskEncryptionSettingsInvokeResponsePtrType DiskEncryptionSettingsInvokeResponseArgs

func DiskEncryptionSettingsInvokeResponsePtr(v *DiskEncryptionSettingsInvokeResponseArgs) DiskEncryptionSettingsInvokeResponsePtrInput {
	return (*diskEncryptionSettingsInvokeResponsePtrType)(v)
}

func (*diskEncryptionSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettingsInvokeResponse)(nil)).Elem()
}

func (i *diskEncryptionSettingsInvokeResponsePtrType) ToDiskEncryptionSettingsInvokeResponsePtrOutput() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return i.ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *diskEncryptionSettingsInvokeResponsePtrType) ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsInvokeResponsePtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettingsInvokeResponse)(nil)).Elem()
}

func (o DiskEncryptionSettingsInvokeResponseOutput) ToDiskEncryptionSettingsInvokeResponseOutput() DiskEncryptionSettingsInvokeResponseOutput {
	return o
}

func (o DiskEncryptionSettingsInvokeResponseOutput) ToDiskEncryptionSettingsInvokeResponseOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponseOutput {
	return o
}

func (o DiskEncryptionSettingsInvokeResponseOutput) ToDiskEncryptionSettingsInvokeResponsePtrOutput() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o.ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSettingsInvokeResponseOutput) ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsInvokeResponse) *DiskEncryptionSettingsInvokeResponse {
		return &v
	}).(DiskEncryptionSettingsInvokeResponsePtrOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsInvokeResponseOutput) DiskEncryptionKey() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsInvokeResponse) *KeyVaultSecretReferenceInvokeResponse {
		return v.DiskEncryptionKey
	}).(KeyVaultSecretReferenceInvokeResponsePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsInvokeResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsInvokeResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsInvokeResponseOutput) KeyEncryptionKey() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsInvokeResponse) *KeyVaultKeyReferenceInvokeResponse {
		return v.KeyEncryptionKey
	}).(KeyVaultKeyReferenceInvokeResponsePtrOutput)
}

type DiskEncryptionSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettingsInvokeResponse)(nil)).Elem()
}

func (o DiskEncryptionSettingsInvokeResponsePtrOutput) ToDiskEncryptionSettingsInvokeResponsePtrOutput() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o
}

func (o DiskEncryptionSettingsInvokeResponsePtrOutput) ToDiskEncryptionSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o
}

func (o DiskEncryptionSettingsInvokeResponsePtrOutput) Elem() DiskEncryptionSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsInvokeResponse) DiskEncryptionSettingsInvokeResponse { return *v }).(DiskEncryptionSettingsInvokeResponseOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsInvokeResponsePtrOutput) DiskEncryptionKey() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsInvokeResponse) *KeyVaultSecretReferenceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKey
	}).(KeyVaultSecretReferenceInvokeResponsePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsInvokeResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsInvokeResponsePtrOutput) KeyEncryptionKey() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsInvokeResponse) *KeyVaultKeyReferenceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyVaultKeyReferenceInvokeResponsePtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsResponse struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey *KeyVaultSecretReferenceResponse `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey *KeyVaultKeyReferenceResponse `pulumi:"keyEncryptionKey"`
}

// DiskEncryptionSettingsResponseInput is an input type that accepts DiskEncryptionSettingsResponseArgs and DiskEncryptionSettingsResponseOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsResponseInput` via:
//
//          DiskEncryptionSettingsResponseArgs{...}
type DiskEncryptionSettingsResponseInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsResponseOutput() DiskEncryptionSettingsResponseOutput
	ToDiskEncryptionSettingsResponseOutputWithContext(context.Context) DiskEncryptionSettingsResponseOutput
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsResponseArgs struct {
	// Specifies the location of the disk encryption key, which is a Key Vault Secret.
	DiskEncryptionKey KeyVaultSecretReferenceResponsePtrInput `pulumi:"diskEncryptionKey"`
	// Specifies whether disk encryption should be enabled on the virtual machine.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the location of the key encryption key in Key Vault.
	KeyEncryptionKey KeyVaultKeyReferenceResponsePtrInput `pulumi:"keyEncryptionKey"`
}

func (DiskEncryptionSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettingsResponse)(nil)).Elem()
}

func (i DiskEncryptionSettingsResponseArgs) ToDiskEncryptionSettingsResponseOutput() DiskEncryptionSettingsResponseOutput {
	return i.ToDiskEncryptionSettingsResponseOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsResponseArgs) ToDiskEncryptionSettingsResponseOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsResponseOutput)
}

func (i DiskEncryptionSettingsResponseArgs) ToDiskEncryptionSettingsResponsePtrOutput() DiskEncryptionSettingsResponsePtrOutput {
	return i.ToDiskEncryptionSettingsResponsePtrOutputWithContext(context.Background())
}

func (i DiskEncryptionSettingsResponseArgs) ToDiskEncryptionSettingsResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsResponseOutput).ToDiskEncryptionSettingsResponsePtrOutputWithContext(ctx)
}

// DiskEncryptionSettingsResponsePtrInput is an input type that accepts DiskEncryptionSettingsResponseArgs, DiskEncryptionSettingsResponsePtr and DiskEncryptionSettingsResponsePtrOutput values.
// You can construct a concrete instance of `DiskEncryptionSettingsResponsePtrInput` via:
//
//          DiskEncryptionSettingsResponseArgs{...}
//
//  or:
//
//          nil
type DiskEncryptionSettingsResponsePtrInput interface {
	pulumi.Input

	ToDiskEncryptionSettingsResponsePtrOutput() DiskEncryptionSettingsResponsePtrOutput
	ToDiskEncryptionSettingsResponsePtrOutputWithContext(context.Context) DiskEncryptionSettingsResponsePtrOutput
}

type diskEncryptionSettingsResponsePtrType DiskEncryptionSettingsResponseArgs

func DiskEncryptionSettingsResponsePtr(v *DiskEncryptionSettingsResponseArgs) DiskEncryptionSettingsResponsePtrInput {
	return (*diskEncryptionSettingsResponsePtrType)(v)
}

func (*diskEncryptionSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettingsResponse)(nil)).Elem()
}

func (i *diskEncryptionSettingsResponsePtrType) ToDiskEncryptionSettingsResponsePtrOutput() DiskEncryptionSettingsResponsePtrOutput {
	return i.ToDiskEncryptionSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *diskEncryptionSettingsResponsePtrType) ToDiskEncryptionSettingsResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSettingsResponsePtrOutput)
}

// Describes a Encryption Settings for a Disk
type DiskEncryptionSettingsResponseOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSettingsResponse)(nil)).Elem()
}

func (o DiskEncryptionSettingsResponseOutput) ToDiskEncryptionSettingsResponseOutput() DiskEncryptionSettingsResponseOutput {
	return o
}

func (o DiskEncryptionSettingsResponseOutput) ToDiskEncryptionSettingsResponseOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponseOutput {
	return o
}

func (o DiskEncryptionSettingsResponseOutput) ToDiskEncryptionSettingsResponsePtrOutput() DiskEncryptionSettingsResponsePtrOutput {
	return o.ToDiskEncryptionSettingsResponsePtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSettingsResponseOutput) ToDiskEncryptionSettingsResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsResponse) *DiskEncryptionSettingsResponse {
		return &v
	}).(DiskEncryptionSettingsResponsePtrOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsResponseOutput) DiskEncryptionKey() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsResponse) *KeyVaultSecretReferenceResponse { return v.DiskEncryptionKey }).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsResponseOutput) KeyEncryptionKey() KeyVaultKeyReferenceResponsePtrOutput {
	return o.ApplyT(func(v DiskEncryptionSettingsResponse) *KeyVaultKeyReferenceResponse { return v.KeyEncryptionKey }).(KeyVaultKeyReferenceResponsePtrOutput)
}

type DiskEncryptionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSettingsResponse)(nil)).Elem()
}

func (o DiskEncryptionSettingsResponsePtrOutput) ToDiskEncryptionSettingsResponsePtrOutput() DiskEncryptionSettingsResponsePtrOutput {
	return o
}

func (o DiskEncryptionSettingsResponsePtrOutput) ToDiskEncryptionSettingsResponsePtrOutputWithContext(ctx context.Context) DiskEncryptionSettingsResponsePtrOutput {
	return o
}

func (o DiskEncryptionSettingsResponsePtrOutput) Elem() DiskEncryptionSettingsResponseOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsResponse) DiskEncryptionSettingsResponse { return *v }).(DiskEncryptionSettingsResponseOutput)
}

// Specifies the location of the disk encryption key, which is a Key Vault Secret.
func (o DiskEncryptionSettingsResponsePtrOutput) DiskEncryptionKey() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsResponse) *KeyVaultSecretReferenceResponse {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKey
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Specifies whether disk encryption should be enabled on the virtual machine.
func (o DiskEncryptionSettingsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the location of the key encryption key in Key Vault.
func (o DiskEncryptionSettingsResponsePtrOutput) KeyEncryptionKey() KeyVaultKeyReferenceResponsePtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSettingsResponse) *KeyVaultKeyReferenceResponse {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(KeyVaultKeyReferenceResponsePtrOutput)
}

// The instance view of the disk.
type DiskInstanceViewInvokeResponse struct {
	// The disk name.
	Name *string `pulumi:"name"`
	// The resource status information.
	Statuses []InstanceViewStatusInvokeResponse `pulumi:"statuses"`
}

// DiskInstanceViewInvokeResponseInput is an input type that accepts DiskInstanceViewInvokeResponseArgs and DiskInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `DiskInstanceViewInvokeResponseInput` via:
//
//          DiskInstanceViewInvokeResponseArgs{...}
type DiskInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToDiskInstanceViewInvokeResponseOutput() DiskInstanceViewInvokeResponseOutput
	ToDiskInstanceViewInvokeResponseOutputWithContext(context.Context) DiskInstanceViewInvokeResponseOutput
}

// The instance view of the disk.
type DiskInstanceViewInvokeResponseArgs struct {
	// The disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource status information.
	Statuses InstanceViewStatusInvokeResponseArrayInput `pulumi:"statuses"`
}

func (DiskInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstanceViewInvokeResponse)(nil)).Elem()
}

func (i DiskInstanceViewInvokeResponseArgs) ToDiskInstanceViewInvokeResponseOutput() DiskInstanceViewInvokeResponseOutput {
	return i.ToDiskInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i DiskInstanceViewInvokeResponseArgs) ToDiskInstanceViewInvokeResponseOutputWithContext(ctx context.Context) DiskInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskInstanceViewInvokeResponseOutput)
}

// DiskInstanceViewInvokeResponseArrayInput is an input type that accepts DiskInstanceViewInvokeResponseArray and DiskInstanceViewInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DiskInstanceViewInvokeResponseArrayInput` via:
//
//          DiskInstanceViewInvokeResponseArray{ DiskInstanceViewInvokeResponseArgs{...} }
type DiskInstanceViewInvokeResponseArrayInput interface {
	pulumi.Input

	ToDiskInstanceViewInvokeResponseArrayOutput() DiskInstanceViewInvokeResponseArrayOutput
	ToDiskInstanceViewInvokeResponseArrayOutputWithContext(context.Context) DiskInstanceViewInvokeResponseArrayOutput
}

type DiskInstanceViewInvokeResponseArray []DiskInstanceViewInvokeResponseInput

func (DiskInstanceViewInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskInstanceViewInvokeResponse)(nil)).Elem()
}

func (i DiskInstanceViewInvokeResponseArray) ToDiskInstanceViewInvokeResponseArrayOutput() DiskInstanceViewInvokeResponseArrayOutput {
	return i.ToDiskInstanceViewInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DiskInstanceViewInvokeResponseArray) ToDiskInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) DiskInstanceViewInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskInstanceViewInvokeResponseArrayOutput)
}

// The instance view of the disk.
type DiskInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (DiskInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstanceViewInvokeResponse)(nil)).Elem()
}

func (o DiskInstanceViewInvokeResponseOutput) ToDiskInstanceViewInvokeResponseOutput() DiskInstanceViewInvokeResponseOutput {
	return o
}

func (o DiskInstanceViewInvokeResponseOutput) ToDiskInstanceViewInvokeResponseOutputWithContext(ctx context.Context) DiskInstanceViewInvokeResponseOutput {
	return o
}

// The disk name.
func (o DiskInstanceViewInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskInstanceViewInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o DiskInstanceViewInvokeResponseOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v DiskInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse { return v.Statuses }).(InstanceViewStatusInvokeResponseArrayOutput)
}

type DiskInstanceViewInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskInstanceViewInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskInstanceViewInvokeResponse)(nil)).Elem()
}

func (o DiskInstanceViewInvokeResponseArrayOutput) ToDiskInstanceViewInvokeResponseArrayOutput() DiskInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o DiskInstanceViewInvokeResponseArrayOutput) ToDiskInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) DiskInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o DiskInstanceViewInvokeResponseArrayOutput) Index(i pulumi.IntInput) DiskInstanceViewInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskInstanceViewInvokeResponse {
		return vs[0].([]DiskInstanceViewInvokeResponse)[vs[1].(int)]
	}).(DiskInstanceViewInvokeResponseOutput)
}

// The instance view of the disk.
type DiskInstanceViewResponse struct {
	// The disk name.
	Name *string `pulumi:"name"`
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
}

// DiskInstanceViewResponseInput is an input type that accepts DiskInstanceViewResponseArgs and DiskInstanceViewResponseOutput values.
// You can construct a concrete instance of `DiskInstanceViewResponseInput` via:
//
//          DiskInstanceViewResponseArgs{...}
type DiskInstanceViewResponseInput interface {
	pulumi.Input

	ToDiskInstanceViewResponseOutput() DiskInstanceViewResponseOutput
	ToDiskInstanceViewResponseOutputWithContext(context.Context) DiskInstanceViewResponseOutput
}

// The instance view of the disk.
type DiskInstanceViewResponseArgs struct {
	// The disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource status information.
	Statuses InstanceViewStatusResponseArrayInput `pulumi:"statuses"`
}

func (DiskInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstanceViewResponse)(nil)).Elem()
}

func (i DiskInstanceViewResponseArgs) ToDiskInstanceViewResponseOutput() DiskInstanceViewResponseOutput {
	return i.ToDiskInstanceViewResponseOutputWithContext(context.Background())
}

func (i DiskInstanceViewResponseArgs) ToDiskInstanceViewResponseOutputWithContext(ctx context.Context) DiskInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskInstanceViewResponseOutput)
}

// DiskInstanceViewResponseArrayInput is an input type that accepts DiskInstanceViewResponseArray and DiskInstanceViewResponseArrayOutput values.
// You can construct a concrete instance of `DiskInstanceViewResponseArrayInput` via:
//
//          DiskInstanceViewResponseArray{ DiskInstanceViewResponseArgs{...} }
type DiskInstanceViewResponseArrayInput interface {
	pulumi.Input

	ToDiskInstanceViewResponseArrayOutput() DiskInstanceViewResponseArrayOutput
	ToDiskInstanceViewResponseArrayOutputWithContext(context.Context) DiskInstanceViewResponseArrayOutput
}

type DiskInstanceViewResponseArray []DiskInstanceViewResponseInput

func (DiskInstanceViewResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskInstanceViewResponse)(nil)).Elem()
}

func (i DiskInstanceViewResponseArray) ToDiskInstanceViewResponseArrayOutput() DiskInstanceViewResponseArrayOutput {
	return i.ToDiskInstanceViewResponseArrayOutputWithContext(context.Background())
}

func (i DiskInstanceViewResponseArray) ToDiskInstanceViewResponseArrayOutputWithContext(ctx context.Context) DiskInstanceViewResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskInstanceViewResponseArrayOutput)
}

// The instance view of the disk.
type DiskInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (DiskInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstanceViewResponse)(nil)).Elem()
}

func (o DiskInstanceViewResponseOutput) ToDiskInstanceViewResponseOutput() DiskInstanceViewResponseOutput {
	return o
}

func (o DiskInstanceViewResponseOutput) ToDiskInstanceViewResponseOutputWithContext(ctx context.Context) DiskInstanceViewResponseOutput {
	return o
}

// The disk name.
func (o DiskInstanceViewResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskInstanceViewResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o DiskInstanceViewResponseOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v DiskInstanceViewResponse) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

type DiskInstanceViewResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskInstanceViewResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskInstanceViewResponse)(nil)).Elem()
}

func (o DiskInstanceViewResponseArrayOutput) ToDiskInstanceViewResponseArrayOutput() DiskInstanceViewResponseArrayOutput {
	return o
}

func (o DiskInstanceViewResponseArrayOutput) ToDiskInstanceViewResponseArrayOutputWithContext(ctx context.Context) DiskInstanceViewResponseArrayOutput {
	return o
}

func (o DiskInstanceViewResponseArrayOutput) Index(i pulumi.IntInput) DiskInstanceViewResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskInstanceViewResponse {
		return vs[0].([]DiskInstanceViewResponse)[vs[1].(int)]
	}).(DiskInstanceViewResponseOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfile struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize *string `pulumi:"vmSize"`
}

// HardwareProfileInput is an input type that accepts HardwareProfileArgs and HardwareProfileOutput values.
// You can construct a concrete instance of `HardwareProfileInput` via:
//
//          HardwareProfileArgs{...}
type HardwareProfileInput interface {
	pulumi.Input

	ToHardwareProfileOutput() HardwareProfileOutput
	ToHardwareProfileOutputWithContext(context.Context) HardwareProfileOutput
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileArgs struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (HardwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (i HardwareProfileArgs) ToHardwareProfileOutput() HardwareProfileOutput {
	return i.ToHardwareProfileOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput)
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput).ToHardwareProfilePtrOutputWithContext(ctx)
}

// HardwareProfilePtrInput is an input type that accepts HardwareProfileArgs, HardwareProfilePtr and HardwareProfilePtrOutput values.
// You can construct a concrete instance of `HardwareProfilePtrInput` via:
//
//          HardwareProfileArgs{...}
//
//  or:
//
//          nil
type HardwareProfilePtrInput interface {
	pulumi.Input

	ToHardwareProfilePtrOutput() HardwareProfilePtrOutput
	ToHardwareProfilePtrOutputWithContext(context.Context) HardwareProfilePtrOutput
}

type hardwareProfilePtrType HardwareProfileArgs

func HardwareProfilePtr(v *HardwareProfileArgs) HardwareProfilePtrInput {
	return (*hardwareProfilePtrType)(v)
}

func (*hardwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfilePtrOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileOutput struct{ *pulumi.OutputState }

func (HardwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (o HardwareProfileOutput) ToHardwareProfileOutput() HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o.ApplyT(func(v HardwareProfile) *HardwareProfile {
		return &v
	}).(HardwareProfilePtrOutput)
}

// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
func (o HardwareProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type HardwareProfilePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) Elem() HardwareProfileOutput {
	return o.ApplyT(func(v *HardwareProfile) HardwareProfile { return *v }).(HardwareProfileOutput)
}

// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
func (o HardwareProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileInvokeResponse struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize *string `pulumi:"vmSize"`
}

// HardwareProfileInvokeResponseInput is an input type that accepts HardwareProfileInvokeResponseArgs and HardwareProfileInvokeResponseOutput values.
// You can construct a concrete instance of `HardwareProfileInvokeResponseInput` via:
//
//          HardwareProfileInvokeResponseArgs{...}
type HardwareProfileInvokeResponseInput interface {
	pulumi.Input

	ToHardwareProfileInvokeResponseOutput() HardwareProfileInvokeResponseOutput
	ToHardwareProfileInvokeResponseOutputWithContext(context.Context) HardwareProfileInvokeResponseOutput
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileInvokeResponseArgs struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (HardwareProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileInvokeResponse)(nil)).Elem()
}

func (i HardwareProfileInvokeResponseArgs) ToHardwareProfileInvokeResponseOutput() HardwareProfileInvokeResponseOutput {
	return i.ToHardwareProfileInvokeResponseOutputWithContext(context.Background())
}

func (i HardwareProfileInvokeResponseArgs) ToHardwareProfileInvokeResponseOutputWithContext(ctx context.Context) HardwareProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileInvokeResponseOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (HardwareProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileInvokeResponse)(nil)).Elem()
}

func (o HardwareProfileInvokeResponseOutput) ToHardwareProfileInvokeResponseOutput() HardwareProfileInvokeResponseOutput {
	return o
}

func (o HardwareProfileInvokeResponseOutput) ToHardwareProfileInvokeResponseOutputWithContext(ctx context.Context) HardwareProfileInvokeResponseOutput {
	return o
}

// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
func (o HardwareProfileInvokeResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileInvokeResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileResponse struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize *string `pulumi:"vmSize"`
}

// HardwareProfileResponseInput is an input type that accepts HardwareProfileResponseArgs and HardwareProfileResponseOutput values.
// You can construct a concrete instance of `HardwareProfileResponseInput` via:
//
//          HardwareProfileResponseArgs{...}
type HardwareProfileResponseInput interface {
	pulumi.Input

	ToHardwareProfileResponseOutput() HardwareProfileResponseOutput
	ToHardwareProfileResponseOutputWithContext(context.Context) HardwareProfileResponseOutput
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileResponseArgs struct {
	// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (HardwareProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileResponse)(nil)).Elem()
}

func (i HardwareProfileResponseArgs) ToHardwareProfileResponseOutput() HardwareProfileResponseOutput {
	return i.ToHardwareProfileResponseOutputWithContext(context.Background())
}

func (i HardwareProfileResponseArgs) ToHardwareProfileResponseOutputWithContext(ctx context.Context) HardwareProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileResponseOutput)
}

func (i HardwareProfileResponseArgs) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return i.ToHardwareProfileResponsePtrOutputWithContext(context.Background())
}

func (i HardwareProfileResponseArgs) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileResponseOutput).ToHardwareProfileResponsePtrOutputWithContext(ctx)
}

// HardwareProfileResponsePtrInput is an input type that accepts HardwareProfileResponseArgs, HardwareProfileResponsePtr and HardwareProfileResponsePtrOutput values.
// You can construct a concrete instance of `HardwareProfileResponsePtrInput` via:
//
//          HardwareProfileResponseArgs{...}
//
//  or:
//
//          nil
type HardwareProfileResponsePtrInput interface {
	pulumi.Input

	ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput
	ToHardwareProfileResponsePtrOutputWithContext(context.Context) HardwareProfileResponsePtrOutput
}

type hardwareProfileResponsePtrType HardwareProfileResponseArgs

func HardwareProfileResponsePtr(v *HardwareProfileResponseArgs) HardwareProfileResponsePtrInput {
	return (*hardwareProfileResponsePtrType)(v)
}

func (*hardwareProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfileResponse)(nil)).Elem()
}

func (i *hardwareProfileResponsePtrType) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return i.ToHardwareProfileResponsePtrOutputWithContext(context.Background())
}

func (i *hardwareProfileResponsePtrType) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileResponsePtrOutput)
}

// Specifies the hardware settings for the virtual machine.
type HardwareProfileResponseOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutput() HardwareProfileResponseOutput {
	return o
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutputWithContext(ctx context.Context) HardwareProfileResponseOutput {
	return o
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return o.ToHardwareProfileResponsePtrOutputWithContext(context.Background())
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *HardwareProfileResponse {
		return &v
	}).(HardwareProfileResponsePtrOutput)
}

// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
func (o HardwareProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type HardwareProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) Elem() HardwareProfileResponseOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) HardwareProfileResponse { return *v }).(HardwareProfileResponseOutput)
}

// Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
func (o HardwareProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReference struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer *string `pulumi:"offer"`
	// The image publisher.
	Publisher *string `pulumi:"publisher"`
	// The image SKU.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version *string `pulumi:"version"`
}

// ImageReferenceInput is an input type that accepts ImageReferenceArgs and ImageReferenceOutput values.
// You can construct a concrete instance of `ImageReferenceInput` via:
//
//          ImageReferenceArgs{...}
type ImageReferenceInput interface {
	pulumi.Input

	ToImageReferenceOutput() ImageReferenceOutput
	ToImageReferenceOutputWithContext(context.Context) ImageReferenceOutput
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceArgs struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The image publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The image SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (i ImageReferenceArgs) ToImageReferenceOutput() ImageReferenceOutput {
	return i.ToImageReferenceOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput)
}

func (i ImageReferenceArgs) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i ImageReferenceArgs) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceOutput).ToImageReferencePtrOutputWithContext(ctx)
}

// ImageReferencePtrInput is an input type that accepts ImageReferenceArgs, ImageReferencePtr and ImageReferencePtrOutput values.
// You can construct a concrete instance of `ImageReferencePtrInput` via:
//
//          ImageReferenceArgs{...}
//
//  or:
//
//          nil
type ImageReferencePtrInput interface {
	pulumi.Input

	ToImageReferencePtrOutput() ImageReferencePtrOutput
	ToImageReferencePtrOutputWithContext(context.Context) ImageReferencePtrOutput
}

type imageReferencePtrType ImageReferenceArgs

func ImageReferencePtr(v *ImageReferenceArgs) ImageReferencePtrInput {
	return (*imageReferencePtrType)(v)
}

func (*imageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (i *imageReferencePtrType) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return i.ToImageReferencePtrOutputWithContext(context.Background())
}

func (i *imageReferencePtrType) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferencePtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceOutput struct{ *pulumi.OutputState }

func (ImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReference)(nil)).Elem()
}

func (o ImageReferenceOutput) ToImageReferenceOutput() ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferenceOutputWithContext(ctx context.Context) ImageReferenceOutput {
	return o
}

func (o ImageReferenceOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o.ToImageReferencePtrOutputWithContext(context.Background())
}

func (o ImageReferenceOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o.ApplyT(func(v ImageReference) *ImageReference {
		return &v
	}).(ImageReferencePtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferencePtrOutput struct{ *pulumi.OutputState }

func (ImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReference)(nil)).Elem()
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutput() ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) ToImageReferencePtrOutputWithContext(ctx context.Context) ImageReferencePtrOutput {
	return o
}

func (o ImageReferencePtrOutput) Elem() ImageReferenceOutput {
	return o.ApplyT(func(v *ImageReference) ImageReference { return *v }).(ImageReferenceOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceInvokeResponse struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer *string `pulumi:"offer"`
	// The image publisher.
	Publisher *string `pulumi:"publisher"`
	// The image SKU.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version *string `pulumi:"version"`
}

// ImageReferenceInvokeResponseInput is an input type that accepts ImageReferenceInvokeResponseArgs and ImageReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `ImageReferenceInvokeResponseInput` via:
//
//          ImageReferenceInvokeResponseArgs{...}
type ImageReferenceInvokeResponseInput interface {
	pulumi.Input

	ToImageReferenceInvokeResponseOutput() ImageReferenceInvokeResponseOutput
	ToImageReferenceInvokeResponseOutputWithContext(context.Context) ImageReferenceInvokeResponseOutput
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceInvokeResponseArgs struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The image publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The image SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceInvokeResponse)(nil)).Elem()
}

func (i ImageReferenceInvokeResponseArgs) ToImageReferenceInvokeResponseOutput() ImageReferenceInvokeResponseOutput {
	return i.ToImageReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i ImageReferenceInvokeResponseArgs) ToImageReferenceInvokeResponseOutputWithContext(ctx context.Context) ImageReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceInvokeResponseOutput)
}

func (i ImageReferenceInvokeResponseArgs) ToImageReferenceInvokeResponsePtrOutput() ImageReferenceInvokeResponsePtrOutput {
	return i.ToImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ImageReferenceInvokeResponseArgs) ToImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) ImageReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceInvokeResponseOutput).ToImageReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// ImageReferenceInvokeResponsePtrInput is an input type that accepts ImageReferenceInvokeResponseArgs, ImageReferenceInvokeResponsePtr and ImageReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ImageReferenceInvokeResponsePtrInput` via:
//
//          ImageReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ImageReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToImageReferenceInvokeResponsePtrOutput() ImageReferenceInvokeResponsePtrOutput
	ToImageReferenceInvokeResponsePtrOutputWithContext(context.Context) ImageReferenceInvokeResponsePtrOutput
}

type imageReferenceInvokeResponsePtrType ImageReferenceInvokeResponseArgs

func ImageReferenceInvokeResponsePtr(v *ImageReferenceInvokeResponseArgs) ImageReferenceInvokeResponsePtrInput {
	return (*imageReferenceInvokeResponsePtrType)(v)
}

func (*imageReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceInvokeResponse)(nil)).Elem()
}

func (i *imageReferenceInvokeResponsePtrType) ToImageReferenceInvokeResponsePtrOutput() ImageReferenceInvokeResponsePtrOutput {
	return i.ToImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *imageReferenceInvokeResponsePtrType) ToImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) ImageReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceInvokeResponsePtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (ImageReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceInvokeResponse)(nil)).Elem()
}

func (o ImageReferenceInvokeResponseOutput) ToImageReferenceInvokeResponseOutput() ImageReferenceInvokeResponseOutput {
	return o
}

func (o ImageReferenceInvokeResponseOutput) ToImageReferenceInvokeResponseOutputWithContext(ctx context.Context) ImageReferenceInvokeResponseOutput {
	return o
}

func (o ImageReferenceInvokeResponseOutput) ToImageReferenceInvokeResponsePtrOutput() ImageReferenceInvokeResponsePtrOutput {
	return o.ToImageReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ImageReferenceInvokeResponseOutput) ToImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) ImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ImageReferenceInvokeResponse) *ImageReferenceInvokeResponse {
		return &v
	}).(ImageReferenceInvokeResponsePtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferenceInvokeResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceInvokeResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceInvokeResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceInvokeResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferenceInvokeResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceInvokeResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceInvokeResponse)(nil)).Elem()
}

func (o ImageReferenceInvokeResponsePtrOutput) ToImageReferenceInvokeResponsePtrOutput() ImageReferenceInvokeResponsePtrOutput {
	return o
}

func (o ImageReferenceInvokeResponsePtrOutput) ToImageReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) ImageReferenceInvokeResponsePtrOutput {
	return o
}

func (o ImageReferenceInvokeResponsePtrOutput) Elem() ImageReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *ImageReferenceInvokeResponse) ImageReferenceInvokeResponse { return *v }).(ImageReferenceInvokeResponseOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferenceInvokeResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceInvokeResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceInvokeResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferenceInvokeResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceResponse struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer *string `pulumi:"offer"`
	// The image publisher.
	Publisher *string `pulumi:"publisher"`
	// The image SKU.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version *string `pulumi:"version"`
}

// ImageReferenceResponseInput is an input type that accepts ImageReferenceResponseArgs and ImageReferenceResponseOutput values.
// You can construct a concrete instance of `ImageReferenceResponseInput` via:
//
//          ImageReferenceResponseArgs{...}
type ImageReferenceResponseInput interface {
	pulumi.Input

	ToImageReferenceResponseOutput() ImageReferenceResponseOutput
	ToImageReferenceResponseOutputWithContext(context.Context) ImageReferenceResponseOutput
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceResponseArgs struct {
	// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The image publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The image SKU.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ImageReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return i.ToImageReferenceResponseOutputWithContext(context.Background())
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponseOutput)
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return i.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i ImageReferenceResponseArgs) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponseOutput).ToImageReferenceResponsePtrOutputWithContext(ctx)
}

// ImageReferenceResponsePtrInput is an input type that accepts ImageReferenceResponseArgs, ImageReferenceResponsePtr and ImageReferenceResponsePtrOutput values.
// You can construct a concrete instance of `ImageReferenceResponsePtrInput` via:
//
//          ImageReferenceResponseArgs{...}
//
//  or:
//
//          nil
type ImageReferenceResponsePtrInput interface {
	pulumi.Input

	ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput
	ToImageReferenceResponsePtrOutputWithContext(context.Context) ImageReferenceResponsePtrOutput
}

type imageReferenceResponsePtrType ImageReferenceResponseArgs

func ImageReferenceResponsePtr(v *ImageReferenceResponseArgs) ImageReferenceResponsePtrInput {
	return (*imageReferenceResponsePtrType)(v)
}

func (*imageReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceResponse)(nil)).Elem()
}

func (i *imageReferenceResponsePtrType) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return i.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *imageReferenceResponsePtrType) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageReferenceResponsePtrOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.
type ImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutput() ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponseOutputWithContext(ctx context.Context) ImageReferenceResponseOutput {
	return o
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return o.ToImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o ImageReferenceResponseOutput) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *ImageReferenceResponse {
		return &v
	}).(ImageReferenceResponsePtrOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageReferenceResponse)(nil)).Elem()
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutput() ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) ToImageReferenceResponsePtrOutputWithContext(ctx context.Context) ImageReferenceResponsePtrOutput {
	return o
}

func (o ImageReferenceResponsePtrOutput) Elem() ImageReferenceResponseOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) ImageReferenceResponse { return *v }).(ImageReferenceResponseOutput)
}

// Specifies the offer of the platform image or marketplace image used to create the virtual machine.
func (o ImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The image publisher.
func (o ImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The image SKU.
func (o ImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
func (o ImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Instance view status.
type InstanceViewStatus struct {
	// The status code.
	Code *string `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// The level code.
	Level *string `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message *string `pulumi:"message"`
	// The time of the status.
	Time *string `pulumi:"time"`
}

// InstanceViewStatusInput is an input type that accepts InstanceViewStatusArgs and InstanceViewStatusOutput values.
// You can construct a concrete instance of `InstanceViewStatusInput` via:
//
//          InstanceViewStatusArgs{...}
type InstanceViewStatusInput interface {
	pulumi.Input

	ToInstanceViewStatusOutput() InstanceViewStatusOutput
	ToInstanceViewStatusOutputWithContext(context.Context) InstanceViewStatusOutput
}

// Instance view status.
type InstanceViewStatusArgs struct {
	// The status code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus pulumi.StringPtrInput `pulumi:"displayStatus"`
	// The level code.
	Level StatusLevelTypes `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The time of the status.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (InstanceViewStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatus)(nil)).Elem()
}

func (i InstanceViewStatusArgs) ToInstanceViewStatusOutput() InstanceViewStatusOutput {
	return i.ToInstanceViewStatusOutputWithContext(context.Background())
}

func (i InstanceViewStatusArgs) ToInstanceViewStatusOutputWithContext(ctx context.Context) InstanceViewStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusOutput)
}

// InstanceViewStatusArrayInput is an input type that accepts InstanceViewStatusArray and InstanceViewStatusArrayOutput values.
// You can construct a concrete instance of `InstanceViewStatusArrayInput` via:
//
//          InstanceViewStatusArray{ InstanceViewStatusArgs{...} }
type InstanceViewStatusArrayInput interface {
	pulumi.Input

	ToInstanceViewStatusArrayOutput() InstanceViewStatusArrayOutput
	ToInstanceViewStatusArrayOutputWithContext(context.Context) InstanceViewStatusArrayOutput
}

type InstanceViewStatusArray []InstanceViewStatusInput

func (InstanceViewStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatus)(nil)).Elem()
}

func (i InstanceViewStatusArray) ToInstanceViewStatusArrayOutput() InstanceViewStatusArrayOutput {
	return i.ToInstanceViewStatusArrayOutputWithContext(context.Background())
}

func (i InstanceViewStatusArray) ToInstanceViewStatusArrayOutputWithContext(ctx context.Context) InstanceViewStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusArrayOutput)
}

// Instance view status.
type InstanceViewStatusOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatus)(nil)).Elem()
}

func (o InstanceViewStatusOutput) ToInstanceViewStatusOutput() InstanceViewStatusOutput {
	return o
}

func (o InstanceViewStatusOutput) ToInstanceViewStatusOutputWithContext(ctx context.Context) InstanceViewStatusOutput {
	return o
}

// The status code.
func (o InstanceViewStatusOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatus) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatus) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatus) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatus) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type InstanceViewStatusArrayOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatus)(nil)).Elem()
}

func (o InstanceViewStatusArrayOutput) ToInstanceViewStatusArrayOutput() InstanceViewStatusArrayOutput {
	return o
}

func (o InstanceViewStatusArrayOutput) ToInstanceViewStatusArrayOutputWithContext(ctx context.Context) InstanceViewStatusArrayOutput {
	return o
}

func (o InstanceViewStatusArrayOutput) Index(i pulumi.IntInput) InstanceViewStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceViewStatus {
		return vs[0].([]InstanceViewStatus)[vs[1].(int)]
	}).(InstanceViewStatusOutput)
}

// Instance view status.
type InstanceViewStatusInvokeResponse struct {
	// The status code.
	Code *string `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// The level code.
	Level *string `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message *string `pulumi:"message"`
	// The time of the status.
	Time *string `pulumi:"time"`
}

// InstanceViewStatusInvokeResponseInput is an input type that accepts InstanceViewStatusInvokeResponseArgs and InstanceViewStatusInvokeResponseOutput values.
// You can construct a concrete instance of `InstanceViewStatusInvokeResponseInput` via:
//
//          InstanceViewStatusInvokeResponseArgs{...}
type InstanceViewStatusInvokeResponseInput interface {
	pulumi.Input

	ToInstanceViewStatusInvokeResponseOutput() InstanceViewStatusInvokeResponseOutput
	ToInstanceViewStatusInvokeResponseOutputWithContext(context.Context) InstanceViewStatusInvokeResponseOutput
}

// Instance view status.
type InstanceViewStatusInvokeResponseArgs struct {
	// The status code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus pulumi.StringPtrInput `pulumi:"displayStatus"`
	// The level code.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The time of the status.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (InstanceViewStatusInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (i InstanceViewStatusInvokeResponseArgs) ToInstanceViewStatusInvokeResponseOutput() InstanceViewStatusInvokeResponseOutput {
	return i.ToInstanceViewStatusInvokeResponseOutputWithContext(context.Background())
}

func (i InstanceViewStatusInvokeResponseArgs) ToInstanceViewStatusInvokeResponseOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusInvokeResponseOutput)
}

func (i InstanceViewStatusInvokeResponseArgs) ToInstanceViewStatusInvokeResponsePtrOutput() InstanceViewStatusInvokeResponsePtrOutput {
	return i.ToInstanceViewStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (i InstanceViewStatusInvokeResponseArgs) ToInstanceViewStatusInvokeResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusInvokeResponseOutput).ToInstanceViewStatusInvokeResponsePtrOutputWithContext(ctx)
}

// InstanceViewStatusInvokeResponsePtrInput is an input type that accepts InstanceViewStatusInvokeResponseArgs, InstanceViewStatusInvokeResponsePtr and InstanceViewStatusInvokeResponsePtrOutput values.
// You can construct a concrete instance of `InstanceViewStatusInvokeResponsePtrInput` via:
//
//          InstanceViewStatusInvokeResponseArgs{...}
//
//  or:
//
//          nil
type InstanceViewStatusInvokeResponsePtrInput interface {
	pulumi.Input

	ToInstanceViewStatusInvokeResponsePtrOutput() InstanceViewStatusInvokeResponsePtrOutput
	ToInstanceViewStatusInvokeResponsePtrOutputWithContext(context.Context) InstanceViewStatusInvokeResponsePtrOutput
}

type instanceViewStatusInvokeResponsePtrType InstanceViewStatusInvokeResponseArgs

func InstanceViewStatusInvokeResponsePtr(v *InstanceViewStatusInvokeResponseArgs) InstanceViewStatusInvokeResponsePtrInput {
	return (*instanceViewStatusInvokeResponsePtrType)(v)
}

func (*instanceViewStatusInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (i *instanceViewStatusInvokeResponsePtrType) ToInstanceViewStatusInvokeResponsePtrOutput() InstanceViewStatusInvokeResponsePtrOutput {
	return i.ToInstanceViewStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *instanceViewStatusInvokeResponsePtrType) ToInstanceViewStatusInvokeResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusInvokeResponsePtrOutput)
}

// InstanceViewStatusInvokeResponseArrayInput is an input type that accepts InstanceViewStatusInvokeResponseArray and InstanceViewStatusInvokeResponseArrayOutput values.
// You can construct a concrete instance of `InstanceViewStatusInvokeResponseArrayInput` via:
//
//          InstanceViewStatusInvokeResponseArray{ InstanceViewStatusInvokeResponseArgs{...} }
type InstanceViewStatusInvokeResponseArrayInput interface {
	pulumi.Input

	ToInstanceViewStatusInvokeResponseArrayOutput() InstanceViewStatusInvokeResponseArrayOutput
	ToInstanceViewStatusInvokeResponseArrayOutputWithContext(context.Context) InstanceViewStatusInvokeResponseArrayOutput
}

type InstanceViewStatusInvokeResponseArray []InstanceViewStatusInvokeResponseInput

func (InstanceViewStatusInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (i InstanceViewStatusInvokeResponseArray) ToInstanceViewStatusInvokeResponseArrayOutput() InstanceViewStatusInvokeResponseArrayOutput {
	return i.ToInstanceViewStatusInvokeResponseArrayOutputWithContext(context.Background())
}

func (i InstanceViewStatusInvokeResponseArray) ToInstanceViewStatusInvokeResponseArrayOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusInvokeResponseArrayOutput)
}

// Instance view status.
type InstanceViewStatusInvokeResponseOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (o InstanceViewStatusInvokeResponseOutput) ToInstanceViewStatusInvokeResponseOutput() InstanceViewStatusInvokeResponseOutput {
	return o
}

func (o InstanceViewStatusInvokeResponseOutput) ToInstanceViewStatusInvokeResponseOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponseOutput {
	return o
}

func (o InstanceViewStatusInvokeResponseOutput) ToInstanceViewStatusInvokeResponsePtrOutput() InstanceViewStatusInvokeResponsePtrOutput {
	return o.ToInstanceViewStatusInvokeResponsePtrOutputWithContext(context.Background())
}

func (o InstanceViewStatusInvokeResponseOutput) ToInstanceViewStatusInvokeResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponsePtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *InstanceViewStatusInvokeResponse {
		return &v
	}).(InstanceViewStatusInvokeResponsePtrOutput)
}

// The status code.
func (o InstanceViewStatusInvokeResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusInvokeResponseOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusInvokeResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusInvokeResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusInvokeResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusInvokeResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type InstanceViewStatusInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (o InstanceViewStatusInvokeResponsePtrOutput) ToInstanceViewStatusInvokeResponsePtrOutput() InstanceViewStatusInvokeResponsePtrOutput {
	return o
}

func (o InstanceViewStatusInvokeResponsePtrOutput) ToInstanceViewStatusInvokeResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponsePtrOutput {
	return o
}

func (o InstanceViewStatusInvokeResponsePtrOutput) Elem() InstanceViewStatusInvokeResponseOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) InstanceViewStatusInvokeResponse { return *v }).(InstanceViewStatusInvokeResponseOutput)
}

// The status code.
func (o InstanceViewStatusInvokeResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusInvokeResponsePtrOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayStatus
	}).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusInvokeResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusInvokeResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusInvokeResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type InstanceViewStatusInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatusInvokeResponse)(nil)).Elem()
}

func (o InstanceViewStatusInvokeResponseArrayOutput) ToInstanceViewStatusInvokeResponseArrayOutput() InstanceViewStatusInvokeResponseArrayOutput {
	return o
}

func (o InstanceViewStatusInvokeResponseArrayOutput) ToInstanceViewStatusInvokeResponseArrayOutputWithContext(ctx context.Context) InstanceViewStatusInvokeResponseArrayOutput {
	return o
}

func (o InstanceViewStatusInvokeResponseArrayOutput) Index(i pulumi.IntInput) InstanceViewStatusInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceViewStatusInvokeResponse {
		return vs[0].([]InstanceViewStatusInvokeResponse)[vs[1].(int)]
	}).(InstanceViewStatusInvokeResponseOutput)
}

// Instance view status.
type InstanceViewStatusResponse struct {
	// The status code.
	Code *string `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// The level code.
	Level *string `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message *string `pulumi:"message"`
	// The time of the status.
	Time *string `pulumi:"time"`
}

// InstanceViewStatusResponseInput is an input type that accepts InstanceViewStatusResponseArgs and InstanceViewStatusResponseOutput values.
// You can construct a concrete instance of `InstanceViewStatusResponseInput` via:
//
//          InstanceViewStatusResponseArgs{...}
type InstanceViewStatusResponseInput interface {
	pulumi.Input

	ToInstanceViewStatusResponseOutput() InstanceViewStatusResponseOutput
	ToInstanceViewStatusResponseOutputWithContext(context.Context) InstanceViewStatusResponseOutput
}

// Instance view status.
type InstanceViewStatusResponseArgs struct {
	// The status code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus pulumi.StringPtrInput `pulumi:"displayStatus"`
	// The level code.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The time of the status.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (InstanceViewStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatusResponse)(nil)).Elem()
}

func (i InstanceViewStatusResponseArgs) ToInstanceViewStatusResponseOutput() InstanceViewStatusResponseOutput {
	return i.ToInstanceViewStatusResponseOutputWithContext(context.Background())
}

func (i InstanceViewStatusResponseArgs) ToInstanceViewStatusResponseOutputWithContext(ctx context.Context) InstanceViewStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusResponseOutput)
}

func (i InstanceViewStatusResponseArgs) ToInstanceViewStatusResponsePtrOutput() InstanceViewStatusResponsePtrOutput {
	return i.ToInstanceViewStatusResponsePtrOutputWithContext(context.Background())
}

func (i InstanceViewStatusResponseArgs) ToInstanceViewStatusResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusResponseOutput).ToInstanceViewStatusResponsePtrOutputWithContext(ctx)
}

// InstanceViewStatusResponsePtrInput is an input type that accepts InstanceViewStatusResponseArgs, InstanceViewStatusResponsePtr and InstanceViewStatusResponsePtrOutput values.
// You can construct a concrete instance of `InstanceViewStatusResponsePtrInput` via:
//
//          InstanceViewStatusResponseArgs{...}
//
//  or:
//
//          nil
type InstanceViewStatusResponsePtrInput interface {
	pulumi.Input

	ToInstanceViewStatusResponsePtrOutput() InstanceViewStatusResponsePtrOutput
	ToInstanceViewStatusResponsePtrOutputWithContext(context.Context) InstanceViewStatusResponsePtrOutput
}

type instanceViewStatusResponsePtrType InstanceViewStatusResponseArgs

func InstanceViewStatusResponsePtr(v *InstanceViewStatusResponseArgs) InstanceViewStatusResponsePtrInput {
	return (*instanceViewStatusResponsePtrType)(v)
}

func (*instanceViewStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceViewStatusResponse)(nil)).Elem()
}

func (i *instanceViewStatusResponsePtrType) ToInstanceViewStatusResponsePtrOutput() InstanceViewStatusResponsePtrOutput {
	return i.ToInstanceViewStatusResponsePtrOutputWithContext(context.Background())
}

func (i *instanceViewStatusResponsePtrType) ToInstanceViewStatusResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusResponsePtrOutput)
}

// InstanceViewStatusResponseArrayInput is an input type that accepts InstanceViewStatusResponseArray and InstanceViewStatusResponseArrayOutput values.
// You can construct a concrete instance of `InstanceViewStatusResponseArrayInput` via:
//
//          InstanceViewStatusResponseArray{ InstanceViewStatusResponseArgs{...} }
type InstanceViewStatusResponseArrayInput interface {
	pulumi.Input

	ToInstanceViewStatusResponseArrayOutput() InstanceViewStatusResponseArrayOutput
	ToInstanceViewStatusResponseArrayOutputWithContext(context.Context) InstanceViewStatusResponseArrayOutput
}

type InstanceViewStatusResponseArray []InstanceViewStatusResponseInput

func (InstanceViewStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatusResponse)(nil)).Elem()
}

func (i InstanceViewStatusResponseArray) ToInstanceViewStatusResponseArrayOutput() InstanceViewStatusResponseArrayOutput {
	return i.ToInstanceViewStatusResponseArrayOutputWithContext(context.Background())
}

func (i InstanceViewStatusResponseArray) ToInstanceViewStatusResponseArrayOutputWithContext(ctx context.Context) InstanceViewStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceViewStatusResponseArrayOutput)
}

// Instance view status.
type InstanceViewStatusResponseOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatusResponse)(nil)).Elem()
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponseOutput() InstanceViewStatusResponseOutput {
	return o
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponseOutputWithContext(ctx context.Context) InstanceViewStatusResponseOutput {
	return o
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponsePtrOutput() InstanceViewStatusResponsePtrOutput {
	return o.ToInstanceViewStatusResponsePtrOutputWithContext(context.Background())
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusResponsePtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *InstanceViewStatusResponse {
		return &v
	}).(InstanceViewStatusResponsePtrOutput)
}

// The status code.
func (o InstanceViewStatusResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusResponseOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type InstanceViewStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceViewStatusResponse)(nil)).Elem()
}

func (o InstanceViewStatusResponsePtrOutput) ToInstanceViewStatusResponsePtrOutput() InstanceViewStatusResponsePtrOutput {
	return o
}

func (o InstanceViewStatusResponsePtrOutput) ToInstanceViewStatusResponsePtrOutputWithContext(ctx context.Context) InstanceViewStatusResponsePtrOutput {
	return o
}

func (o InstanceViewStatusResponsePtrOutput) Elem() InstanceViewStatusResponseOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) InstanceViewStatusResponse { return *v }).(InstanceViewStatusResponseOutput)
}

// The status code.
func (o InstanceViewStatusResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusResponsePtrOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayStatus
	}).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusResponsePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceViewStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type InstanceViewStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatusResponse)(nil)).Elem()
}

func (o InstanceViewStatusResponseArrayOutput) ToInstanceViewStatusResponseArrayOutput() InstanceViewStatusResponseArrayOutput {
	return o
}

func (o InstanceViewStatusResponseArrayOutput) ToInstanceViewStatusResponseArrayOutputWithContext(ctx context.Context) InstanceViewStatusResponseArrayOutput {
	return o
}

func (o InstanceViewStatusResponseArrayOutput) Index(i pulumi.IntInput) InstanceViewStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceViewStatusResponse {
		return vs[0].([]InstanceViewStatusResponse)[vs[1].(int)]
	}).(InstanceViewStatusResponseOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReference struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl string `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResource `pulumi:"sourceVault"`
}

// KeyVaultKeyReferenceInput is an input type that accepts KeyVaultKeyReferenceArgs and KeyVaultKeyReferenceOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceInput` via:
//
//          KeyVaultKeyReferenceArgs{...}
type KeyVaultKeyReferenceInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceOutput() KeyVaultKeyReferenceOutput
	ToKeyVaultKeyReferenceOutputWithContext(context.Context) KeyVaultKeyReferenceOutput
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceArgs struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl pulumi.StringInput `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResourceInput `pulumi:"sourceVault"`
}

func (KeyVaultKeyReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReference)(nil)).Elem()
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferenceOutput() KeyVaultKeyReferenceOutput {
	return i.ToKeyVaultKeyReferenceOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferenceOutputWithContext(ctx context.Context) KeyVaultKeyReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceOutput)
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return i.ToKeyVaultKeyReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceArgs) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceOutput).ToKeyVaultKeyReferencePtrOutputWithContext(ctx)
}

// KeyVaultKeyReferencePtrInput is an input type that accepts KeyVaultKeyReferenceArgs, KeyVaultKeyReferencePtr and KeyVaultKeyReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferencePtrInput` via:
//
//          KeyVaultKeyReferenceArgs{...}
//
//  or:
//
//          nil
type KeyVaultKeyReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput
	ToKeyVaultKeyReferencePtrOutputWithContext(context.Context) KeyVaultKeyReferencePtrOutput
}

type keyVaultKeyReferencePtrType KeyVaultKeyReferenceArgs

func KeyVaultKeyReferencePtr(v *KeyVaultKeyReferenceArgs) KeyVaultKeyReferencePtrInput {
	return (*keyVaultKeyReferencePtrType)(v)
}

func (*keyVaultKeyReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReference)(nil)).Elem()
}

func (i *keyVaultKeyReferencePtrType) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return i.ToKeyVaultKeyReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultKeyReferencePtrType) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferencePtrOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReference)(nil)).Elem()
}

func (o KeyVaultKeyReferenceOutput) ToKeyVaultKeyReferenceOutput() KeyVaultKeyReferenceOutput {
	return o
}

func (o KeyVaultKeyReferenceOutput) ToKeyVaultKeyReferenceOutputWithContext(ctx context.Context) KeyVaultKeyReferenceOutput {
	return o
}

func (o KeyVaultKeyReferenceOutput) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return o.ToKeyVaultKeyReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultKeyReferenceOutput) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReference) *KeyVaultKeyReference {
		return &v
	}).(KeyVaultKeyReferencePtrOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferenceOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReference) string { return v.KeyUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferenceOutput) SourceVault() SubResourceOutput {
	return o.ApplyT(func(v KeyVaultKeyReference) SubResource { return v.SourceVault }).(SubResourceOutput)
}

type KeyVaultKeyReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReference)(nil)).Elem()
}

func (o KeyVaultKeyReferencePtrOutput) ToKeyVaultKeyReferencePtrOutput() KeyVaultKeyReferencePtrOutput {
	return o
}

func (o KeyVaultKeyReferencePtrOutput) ToKeyVaultKeyReferencePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferencePtrOutput {
	return o
}

func (o KeyVaultKeyReferencePtrOutput) Elem() KeyVaultKeyReferenceOutput {
	return o.ApplyT(func(v *KeyVaultKeyReference) KeyVaultKeyReference { return *v }).(KeyVaultKeyReferenceOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferencePtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReference) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferencePtrOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReference) *SubResource {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourcePtrOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceInvokeResponse struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl string `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResourceInvokeResponse `pulumi:"sourceVault"`
}

// KeyVaultKeyReferenceInvokeResponseInput is an input type that accepts KeyVaultKeyReferenceInvokeResponseArgs and KeyVaultKeyReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceInvokeResponseInput` via:
//
//          KeyVaultKeyReferenceInvokeResponseArgs{...}
type KeyVaultKeyReferenceInvokeResponseInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceInvokeResponseOutput() KeyVaultKeyReferenceInvokeResponseOutput
	ToKeyVaultKeyReferenceInvokeResponseOutputWithContext(context.Context) KeyVaultKeyReferenceInvokeResponseOutput
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceInvokeResponseArgs struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl pulumi.StringInput `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResourceInvokeResponseInput `pulumi:"sourceVault"`
}

func (KeyVaultKeyReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceInvokeResponse)(nil)).Elem()
}

func (i KeyVaultKeyReferenceInvokeResponseArgs) ToKeyVaultKeyReferenceInvokeResponseOutput() KeyVaultKeyReferenceInvokeResponseOutput {
	return i.ToKeyVaultKeyReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceInvokeResponseArgs) ToKeyVaultKeyReferenceInvokeResponseOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceInvokeResponseOutput)
}

func (i KeyVaultKeyReferenceInvokeResponseArgs) ToKeyVaultKeyReferenceInvokeResponsePtrOutput() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return i.ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceInvokeResponseArgs) ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceInvokeResponseOutput).ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// KeyVaultKeyReferenceInvokeResponsePtrInput is an input type that accepts KeyVaultKeyReferenceInvokeResponseArgs, KeyVaultKeyReferenceInvokeResponsePtr and KeyVaultKeyReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceInvokeResponsePtrInput` via:
//
//          KeyVaultKeyReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultKeyReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceInvokeResponsePtrOutput() KeyVaultKeyReferenceInvokeResponsePtrOutput
	ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(context.Context) KeyVaultKeyReferenceInvokeResponsePtrOutput
}

type keyVaultKeyReferenceInvokeResponsePtrType KeyVaultKeyReferenceInvokeResponseArgs

func KeyVaultKeyReferenceInvokeResponsePtr(v *KeyVaultKeyReferenceInvokeResponseArgs) KeyVaultKeyReferenceInvokeResponsePtrInput {
	return (*keyVaultKeyReferenceInvokeResponsePtrType)(v)
}

func (*keyVaultKeyReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceInvokeResponse)(nil)).Elem()
}

func (i *keyVaultKeyReferenceInvokeResponsePtrType) ToKeyVaultKeyReferenceInvokeResponsePtrOutput() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return i.ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultKeyReferenceInvokeResponsePtrType) ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceInvokeResponsePtrOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceInvokeResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceInvokeResponseOutput) ToKeyVaultKeyReferenceInvokeResponseOutput() KeyVaultKeyReferenceInvokeResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceInvokeResponseOutput) ToKeyVaultKeyReferenceInvokeResponseOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceInvokeResponseOutput) ToKeyVaultKeyReferenceInvokeResponsePtrOutput() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o.ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultKeyReferenceInvokeResponseOutput) ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceInvokeResponse) *KeyVaultKeyReferenceInvokeResponse {
		return &v
	}).(KeyVaultKeyReferenceInvokeResponsePtrOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferenceInvokeResponseOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceInvokeResponse) string { return v.KeyUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferenceInvokeResponseOutput) SourceVault() SubResourceInvokeResponseOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceInvokeResponse) SubResourceInvokeResponse { return v.SourceVault }).(SubResourceInvokeResponseOutput)
}

type KeyVaultKeyReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceInvokeResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceInvokeResponsePtrOutput) ToKeyVaultKeyReferenceInvokeResponsePtrOutput() KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceInvokeResponsePtrOutput) ToKeyVaultKeyReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceInvokeResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceInvokeResponsePtrOutput) Elem() KeyVaultKeyReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceInvokeResponse) KeyVaultKeyReferenceInvokeResponse { return *v }).(KeyVaultKeyReferenceInvokeResponseOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferenceInvokeResponsePtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferenceInvokeResponsePtrOutput) SourceVault() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceInvokeResponse) *SubResourceInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourceInvokeResponsePtrOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceResponse struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl string `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResourceResponse `pulumi:"sourceVault"`
}

// KeyVaultKeyReferenceResponseInput is an input type that accepts KeyVaultKeyReferenceResponseArgs and KeyVaultKeyReferenceResponseOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceResponseInput` via:
//
//          KeyVaultKeyReferenceResponseArgs{...}
type KeyVaultKeyReferenceResponseInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceResponseOutput() KeyVaultKeyReferenceResponseOutput
	ToKeyVaultKeyReferenceResponseOutputWithContext(context.Context) KeyVaultKeyReferenceResponseOutput
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceResponseArgs struct {
	// The URL referencing a key encryption key in Key Vault.
	KeyUrl pulumi.StringInput `pulumi:"keyUrl"`
	// The relative URL of the Key Vault containing the key.
	SourceVault SubResourceResponseInput `pulumi:"sourceVault"`
}

func (KeyVaultKeyReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (i KeyVaultKeyReferenceResponseArgs) ToKeyVaultKeyReferenceResponseOutput() KeyVaultKeyReferenceResponseOutput {
	return i.ToKeyVaultKeyReferenceResponseOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceResponseArgs) ToKeyVaultKeyReferenceResponseOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceResponseOutput)
}

func (i KeyVaultKeyReferenceResponseArgs) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return i.ToKeyVaultKeyReferenceResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultKeyReferenceResponseArgs) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceResponseOutput).ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx)
}

// KeyVaultKeyReferenceResponsePtrInput is an input type that accepts KeyVaultKeyReferenceResponseArgs, KeyVaultKeyReferenceResponsePtr and KeyVaultKeyReferenceResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultKeyReferenceResponsePtrInput` via:
//
//          KeyVaultKeyReferenceResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultKeyReferenceResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput
	ToKeyVaultKeyReferenceResponsePtrOutputWithContext(context.Context) KeyVaultKeyReferenceResponsePtrOutput
}

type keyVaultKeyReferenceResponsePtrType KeyVaultKeyReferenceResponseArgs

func KeyVaultKeyReferenceResponsePtr(v *KeyVaultKeyReferenceResponseArgs) KeyVaultKeyReferenceResponsePtrInput {
	return (*keyVaultKeyReferenceResponsePtrType)(v)
}

func (*keyVaultKeyReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (i *keyVaultKeyReferenceResponsePtrType) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return i.ToKeyVaultKeyReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultKeyReferenceResponsePtrType) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyReferenceResponsePtrOutput)
}

// Describes a reference to Key Vault Key
type KeyVaultKeyReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponseOutput() KeyVaultKeyReferenceResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponseOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponseOutput {
	return o
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return o.ToKeyVaultKeyReferenceResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultKeyReferenceResponseOutput) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) *KeyVaultKeyReferenceResponse {
		return &v
	}).(KeyVaultKeyReferenceResponsePtrOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferenceResponseOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) string { return v.KeyUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferenceResponseOutput) SourceVault() SubResourceResponseOutput {
	return o.ApplyT(func(v KeyVaultKeyReferenceResponse) SubResourceResponse { return v.SourceVault }).(SubResourceResponseOutput)
}

type KeyVaultKeyReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultKeyReferenceResponse)(nil)).Elem()
}

func (o KeyVaultKeyReferenceResponsePtrOutput) ToKeyVaultKeyReferenceResponsePtrOutput() KeyVaultKeyReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponsePtrOutput) ToKeyVaultKeyReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultKeyReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultKeyReferenceResponsePtrOutput) Elem() KeyVaultKeyReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) KeyVaultKeyReferenceResponse { return *v }).(KeyVaultKeyReferenceResponseOutput)
}

// The URL referencing a key encryption key in Key Vault.
func (o KeyVaultKeyReferenceResponsePtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the key.
func (o KeyVaultKeyReferenceResponsePtrOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultKeyReferenceResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourceResponsePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReference struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl string `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResource `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceInput is an input type that accepts KeyVaultSecretReferenceArgs and KeyVaultSecretReferenceOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceInput` via:
//
//          KeyVaultSecretReferenceArgs{...}
type KeyVaultSecretReferenceInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput
	ToKeyVaultSecretReferenceOutputWithContext(context.Context) KeyVaultSecretReferenceOutput
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceArgs struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return i.ToKeyVaultSecretReferenceOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput)
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceArgs) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceOutput).ToKeyVaultSecretReferencePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferencePtrInput is an input type that accepts KeyVaultSecretReferenceArgs, KeyVaultSecretReferencePtr and KeyVaultSecretReferencePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferencePtrInput` via:
//
//          KeyVaultSecretReferenceArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretReferencePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput
	ToKeyVaultSecretReferencePtrOutputWithContext(context.Context) KeyVaultSecretReferencePtrOutput
}

type keyVaultSecretReferencePtrType KeyVaultSecretReferenceArgs

func KeyVaultSecretReferencePtr(v *KeyVaultSecretReferenceArgs) KeyVaultSecretReferencePtrInput {
	return (*keyVaultSecretReferencePtrType)(v)
}

func (*keyVaultSecretReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return i.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferencePtrType) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferencePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutput() KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferenceOutputWithContext(ctx context.Context) KeyVaultSecretReferenceOutput {
	return o
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o.ToKeyVaultSecretReferencePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) *KeyVaultSecretReference {
		return &v
	}).(KeyVaultSecretReferencePtrOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceOutput) SourceVault() SubResourceOutput {
	return o.ApplyT(func(v KeyVaultSecretReference) SubResource { return v.SourceVault }).(SubResourceOutput)
}

type KeyVaultSecretReferencePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReference)(nil)).Elem()
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutput() KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) ToKeyVaultSecretReferencePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferencePtrOutput {
	return o
}

func (o KeyVaultSecretReferencePtrOutput) Elem() KeyVaultSecretReferenceOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) KeyVaultSecretReference { return *v }).(KeyVaultSecretReferenceOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferencePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferencePtrOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReference) *SubResource {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourcePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceInvokeResponse struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl string `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceInvokeResponse `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceInvokeResponseInput is an input type that accepts KeyVaultSecretReferenceInvokeResponseArgs and KeyVaultSecretReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceInvokeResponseInput` via:
//
//          KeyVaultSecretReferenceInvokeResponseArgs{...}
type KeyVaultSecretReferenceInvokeResponseInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceInvokeResponseOutput() KeyVaultSecretReferenceInvokeResponseOutput
	ToKeyVaultSecretReferenceInvokeResponseOutputWithContext(context.Context) KeyVaultSecretReferenceInvokeResponseOutput
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceInvokeResponseArgs struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceInvokeResponseInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceInvokeResponse)(nil)).Elem()
}

func (i KeyVaultSecretReferenceInvokeResponseArgs) ToKeyVaultSecretReferenceInvokeResponseOutput() KeyVaultSecretReferenceInvokeResponseOutput {
	return i.ToKeyVaultSecretReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceInvokeResponseArgs) ToKeyVaultSecretReferenceInvokeResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceInvokeResponseOutput)
}

func (i KeyVaultSecretReferenceInvokeResponseArgs) ToKeyVaultSecretReferenceInvokeResponsePtrOutput() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceInvokeResponseArgs) ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceInvokeResponseOutput).ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferenceInvokeResponsePtrInput is an input type that accepts KeyVaultSecretReferenceInvokeResponseArgs, KeyVaultSecretReferenceInvokeResponsePtr and KeyVaultSecretReferenceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceInvokeResponsePtrInput` via:
//
//          KeyVaultSecretReferenceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretReferenceInvokeResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceInvokeResponsePtrOutput() KeyVaultSecretReferenceInvokeResponsePtrOutput
	ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(context.Context) KeyVaultSecretReferenceInvokeResponsePtrOutput
}

type keyVaultSecretReferenceInvokeResponsePtrType KeyVaultSecretReferenceInvokeResponseArgs

func KeyVaultSecretReferenceInvokeResponsePtr(v *KeyVaultSecretReferenceInvokeResponseArgs) KeyVaultSecretReferenceInvokeResponsePtrInput {
	return (*keyVaultSecretReferenceInvokeResponsePtrType)(v)
}

func (*keyVaultSecretReferenceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceInvokeResponse)(nil)).Elem()
}

func (i *keyVaultSecretReferenceInvokeResponsePtrType) ToKeyVaultSecretReferenceInvokeResponsePtrOutput() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferenceInvokeResponsePtrType) ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceInvokeResponsePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceInvokeResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceInvokeResponseOutput) ToKeyVaultSecretReferenceInvokeResponseOutput() KeyVaultSecretReferenceInvokeResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceInvokeResponseOutput) ToKeyVaultSecretReferenceInvokeResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceInvokeResponseOutput) ToKeyVaultSecretReferenceInvokeResponsePtrOutput() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o.ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceInvokeResponseOutput) ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceInvokeResponse) *KeyVaultSecretReferenceInvokeResponse {
		return &v
	}).(KeyVaultSecretReferenceInvokeResponsePtrOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceInvokeResponseOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceInvokeResponse) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceInvokeResponseOutput) SourceVault() SubResourceInvokeResponseOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceInvokeResponse) SubResourceInvokeResponse { return v.SourceVault }).(SubResourceInvokeResponseOutput)
}

type KeyVaultSecretReferenceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceInvokeResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceInvokeResponsePtrOutput) ToKeyVaultSecretReferenceInvokeResponsePtrOutput() KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceInvokeResponsePtrOutput) ToKeyVaultSecretReferenceInvokeResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceInvokeResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceInvokeResponsePtrOutput) Elem() KeyVaultSecretReferenceInvokeResponseOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceInvokeResponse) KeyVaultSecretReferenceInvokeResponse { return *v }).(KeyVaultSecretReferenceInvokeResponseOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceInvokeResponsePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceInvokeResponsePtrOutput) SourceVault() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceInvokeResponse) *SubResourceInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourceInvokeResponsePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceResponse struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl string `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceResponse `pulumi:"sourceVault"`
}

// KeyVaultSecretReferenceResponseInput is an input type that accepts KeyVaultSecretReferenceResponseArgs and KeyVaultSecretReferenceResponseOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceResponseInput` via:
//
//          KeyVaultSecretReferenceResponseArgs{...}
type KeyVaultSecretReferenceResponseInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput
	ToKeyVaultSecretReferenceResponseOutputWithContext(context.Context) KeyVaultSecretReferenceResponseOutput
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceResponseArgs struct {
	// The URL referencing a secret in a Key Vault.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The relative URL of the Key Vault containing the secret.
	SourceVault SubResourceResponseInput `pulumi:"sourceVault"`
}

func (KeyVaultSecretReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput {
	return i.ToKeyVaultSecretReferenceResponseOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponseOutput)
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultSecretReferenceResponseArgs) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponseOutput).ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx)
}

// KeyVaultSecretReferenceResponsePtrInput is an input type that accepts KeyVaultSecretReferenceResponseArgs, KeyVaultSecretReferenceResponsePtr and KeyVaultSecretReferenceResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultSecretReferenceResponsePtrInput` via:
//
//          KeyVaultSecretReferenceResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultSecretReferenceResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput
	ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Context) KeyVaultSecretReferenceResponsePtrOutput
}

type keyVaultSecretReferenceResponsePtrType KeyVaultSecretReferenceResponseArgs

func KeyVaultSecretReferenceResponsePtr(v *KeyVaultSecretReferenceResponseArgs) KeyVaultSecretReferenceResponsePtrInput {
	return (*keyVaultSecretReferenceResponsePtrType)(v)
}

func (*keyVaultSecretReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (i *keyVaultSecretReferenceResponsePtrType) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return i.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultSecretReferenceResponsePtrType) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSecretReferenceResponsePtrOutput)
}

// Describes a reference to Key Vault Secret
type KeyVaultSecretReferenceResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutput() KeyVaultSecretReferenceResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponseOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponseOutput {
	return o
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return o.ToKeyVaultSecretReferenceResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultSecretReferenceResponseOutput) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) *KeyVaultSecretReferenceResponse {
		return &v
	}).(KeyVaultSecretReferenceResponsePtrOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceResponseOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceResponseOutput) SourceVault() SubResourceResponseOutput {
	return o.ApplyT(func(v KeyVaultSecretReferenceResponse) SubResourceResponse { return v.SourceVault }).(SubResourceResponseOutput)
}

type KeyVaultSecretReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultSecretReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSecretReferenceResponse)(nil)).Elem()
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutput() KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) ToKeyVaultSecretReferenceResponsePtrOutputWithContext(ctx context.Context) KeyVaultSecretReferenceResponsePtrOutput {
	return o
}

func (o KeyVaultSecretReferenceResponsePtrOutput) Elem() KeyVaultSecretReferenceResponseOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) KeyVaultSecretReferenceResponse { return *v }).(KeyVaultSecretReferenceResponseOutput)
}

// The URL referencing a secret in a Key Vault.
func (o KeyVaultSecretReferenceResponsePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The relative URL of the Key Vault containing the secret.
func (o KeyVaultSecretReferenceResponsePtrOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *KeyVaultSecretReferenceResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return &v.SourceVault
	}).(SubResourceResponsePtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfiguration struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfiguration `pulumi:"ssh"`
}

// LinuxConfigurationInput is an input type that accepts LinuxConfigurationArgs and LinuxConfigurationOutput values.
// You can construct a concrete instance of `LinuxConfigurationInput` via:
//
//          LinuxConfigurationArgs{...}
type LinuxConfigurationInput interface {
	pulumi.Input

	ToLinuxConfigurationOutput() LinuxConfigurationOutput
	ToLinuxConfigurationOutputWithContext(context.Context) LinuxConfigurationOutput
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationArgs struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh SshConfigurationPtrInput `pulumi:"ssh"`
}

func (LinuxConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfiguration)(nil)).Elem()
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationOutput() LinuxConfigurationOutput {
	return i.ToLinuxConfigurationOutputWithContext(context.Background())
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationOutputWithContext(ctx context.Context) LinuxConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationOutput)
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return i.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i LinuxConfigurationArgs) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationOutput).ToLinuxConfigurationPtrOutputWithContext(ctx)
}

// LinuxConfigurationPtrInput is an input type that accepts LinuxConfigurationArgs, LinuxConfigurationPtr and LinuxConfigurationPtrOutput values.
// You can construct a concrete instance of `LinuxConfigurationPtrInput` via:
//
//          LinuxConfigurationArgs{...}
//
//  or:
//
//          nil
type LinuxConfigurationPtrInput interface {
	pulumi.Input

	ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput
	ToLinuxConfigurationPtrOutputWithContext(context.Context) LinuxConfigurationPtrOutput
}

type linuxConfigurationPtrType LinuxConfigurationArgs

func LinuxConfigurationPtr(v *LinuxConfigurationArgs) LinuxConfigurationPtrInput {
	return (*linuxConfigurationPtrType)(v)
}

func (*linuxConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfiguration)(nil)).Elem()
}

func (i *linuxConfigurationPtrType) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return i.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i *linuxConfigurationPtrType) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfiguration)(nil)).Elem()
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationOutput() LinuxConfigurationOutput {
	return o
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationOutputWithContext(ctx context.Context) LinuxConfigurationOutput {
	return o
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return o.ToLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (o LinuxConfigurationOutput) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *LinuxConfiguration {
		return &v
	}).(LinuxConfigurationPtrOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v LinuxConfiguration) *SshConfiguration { return v.Ssh }).(SshConfigurationPtrOutput)
}

type LinuxConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfiguration)(nil)).Elem()
}

func (o LinuxConfigurationPtrOutput) ToLinuxConfigurationPtrOutput() LinuxConfigurationPtrOutput {
	return o
}

func (o LinuxConfigurationPtrOutput) ToLinuxConfigurationPtrOutputWithContext(ctx context.Context) LinuxConfigurationPtrOutput {
	return o
}

func (o LinuxConfigurationPtrOutput) Elem() LinuxConfigurationOutput {
	return o.ApplyT(func(v *LinuxConfiguration) LinuxConfiguration { return *v }).(LinuxConfigurationOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationPtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationPtrOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v *LinuxConfiguration) *SshConfiguration {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationInvokeResponse struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfigurationInvokeResponse `pulumi:"ssh"`
}

// LinuxConfigurationInvokeResponseInput is an input type that accepts LinuxConfigurationInvokeResponseArgs and LinuxConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `LinuxConfigurationInvokeResponseInput` via:
//
//          LinuxConfigurationInvokeResponseArgs{...}
type LinuxConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToLinuxConfigurationInvokeResponseOutput() LinuxConfigurationInvokeResponseOutput
	ToLinuxConfigurationInvokeResponseOutputWithContext(context.Context) LinuxConfigurationInvokeResponseOutput
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationInvokeResponseArgs struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh SshConfigurationInvokeResponsePtrInput `pulumi:"ssh"`
}

func (LinuxConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfigurationInvokeResponse)(nil)).Elem()
}

func (i LinuxConfigurationInvokeResponseArgs) ToLinuxConfigurationInvokeResponseOutput() LinuxConfigurationInvokeResponseOutput {
	return i.ToLinuxConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i LinuxConfigurationInvokeResponseArgs) ToLinuxConfigurationInvokeResponseOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationInvokeResponseOutput)
}

func (i LinuxConfigurationInvokeResponseArgs) ToLinuxConfigurationInvokeResponsePtrOutput() LinuxConfigurationInvokeResponsePtrOutput {
	return i.ToLinuxConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i LinuxConfigurationInvokeResponseArgs) ToLinuxConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationInvokeResponseOutput).ToLinuxConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// LinuxConfigurationInvokeResponsePtrInput is an input type that accepts LinuxConfigurationInvokeResponseArgs, LinuxConfigurationInvokeResponsePtr and LinuxConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `LinuxConfigurationInvokeResponsePtrInput` via:
//
//          LinuxConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type LinuxConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToLinuxConfigurationInvokeResponsePtrOutput() LinuxConfigurationInvokeResponsePtrOutput
	ToLinuxConfigurationInvokeResponsePtrOutputWithContext(context.Context) LinuxConfigurationInvokeResponsePtrOutput
}

type linuxConfigurationInvokeResponsePtrType LinuxConfigurationInvokeResponseArgs

func LinuxConfigurationInvokeResponsePtr(v *LinuxConfigurationInvokeResponseArgs) LinuxConfigurationInvokeResponsePtrInput {
	return (*linuxConfigurationInvokeResponsePtrType)(v)
}

func (*linuxConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfigurationInvokeResponse)(nil)).Elem()
}

func (i *linuxConfigurationInvokeResponsePtrType) ToLinuxConfigurationInvokeResponsePtrOutput() LinuxConfigurationInvokeResponsePtrOutput {
	return i.ToLinuxConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *linuxConfigurationInvokeResponsePtrType) ToLinuxConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationInvokeResponsePtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfigurationInvokeResponse)(nil)).Elem()
}

func (o LinuxConfigurationInvokeResponseOutput) ToLinuxConfigurationInvokeResponseOutput() LinuxConfigurationInvokeResponseOutput {
	return o
}

func (o LinuxConfigurationInvokeResponseOutput) ToLinuxConfigurationInvokeResponseOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponseOutput {
	return o
}

func (o LinuxConfigurationInvokeResponseOutput) ToLinuxConfigurationInvokeResponsePtrOutput() LinuxConfigurationInvokeResponsePtrOutput {
	return o.ToLinuxConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o LinuxConfigurationInvokeResponseOutput) ToLinuxConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationInvokeResponse) *LinuxConfigurationInvokeResponse {
		return &v
	}).(LinuxConfigurationInvokeResponsePtrOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationInvokeResponseOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfigurationInvokeResponse) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationInvokeResponseOutput) Ssh() SshConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationInvokeResponse) *SshConfigurationInvokeResponse { return v.Ssh }).(SshConfigurationInvokeResponsePtrOutput)
}

type LinuxConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfigurationInvokeResponse)(nil)).Elem()
}

func (o LinuxConfigurationInvokeResponsePtrOutput) ToLinuxConfigurationInvokeResponsePtrOutput() LinuxConfigurationInvokeResponsePtrOutput {
	return o
}

func (o LinuxConfigurationInvokeResponsePtrOutput) ToLinuxConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationInvokeResponsePtrOutput {
	return o
}

func (o LinuxConfigurationInvokeResponsePtrOutput) Elem() LinuxConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *LinuxConfigurationInvokeResponse) LinuxConfigurationInvokeResponse { return *v }).(LinuxConfigurationInvokeResponseOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationInvokeResponsePtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationInvokeResponsePtrOutput) Ssh() SshConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationInvokeResponse) *SshConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationInvokeResponsePtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationResponse struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfigurationResponse `pulumi:"ssh"`
}

// LinuxConfigurationResponseInput is an input type that accepts LinuxConfigurationResponseArgs and LinuxConfigurationResponseOutput values.
// You can construct a concrete instance of `LinuxConfigurationResponseInput` via:
//
//          LinuxConfigurationResponseArgs{...}
type LinuxConfigurationResponseInput interface {
	pulumi.Input

	ToLinuxConfigurationResponseOutput() LinuxConfigurationResponseOutput
	ToLinuxConfigurationResponseOutputWithContext(context.Context) LinuxConfigurationResponseOutput
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationResponseArgs struct {
	// Specifies whether password authentication should be disabled.
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh SshConfigurationResponsePtrInput `pulumi:"ssh"`
}

func (LinuxConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfigurationResponse)(nil)).Elem()
}

func (i LinuxConfigurationResponseArgs) ToLinuxConfigurationResponseOutput() LinuxConfigurationResponseOutput {
	return i.ToLinuxConfigurationResponseOutputWithContext(context.Background())
}

func (i LinuxConfigurationResponseArgs) ToLinuxConfigurationResponseOutputWithContext(ctx context.Context) LinuxConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationResponseOutput)
}

func (i LinuxConfigurationResponseArgs) ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput {
	return i.ToLinuxConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i LinuxConfigurationResponseArgs) ToLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationResponseOutput).ToLinuxConfigurationResponsePtrOutputWithContext(ctx)
}

// LinuxConfigurationResponsePtrInput is an input type that accepts LinuxConfigurationResponseArgs, LinuxConfigurationResponsePtr and LinuxConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `LinuxConfigurationResponsePtrInput` via:
//
//          LinuxConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type LinuxConfigurationResponsePtrInput interface {
	pulumi.Input

	ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput
	ToLinuxConfigurationResponsePtrOutputWithContext(context.Context) LinuxConfigurationResponsePtrOutput
}

type linuxConfigurationResponsePtrType LinuxConfigurationResponseArgs

func LinuxConfigurationResponsePtr(v *LinuxConfigurationResponseArgs) LinuxConfigurationResponsePtrInput {
	return (*linuxConfigurationResponsePtrType)(v)
}

func (*linuxConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfigurationResponse)(nil)).Elem()
}

func (i *linuxConfigurationResponsePtrType) ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput {
	return i.ToLinuxConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *linuxConfigurationResponsePtrType) ToLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxConfigurationResponsePtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
type LinuxConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxConfigurationResponse)(nil)).Elem()
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponseOutput() LinuxConfigurationResponseOutput {
	return o
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponseOutputWithContext(ctx context.Context) LinuxConfigurationResponseOutput {
	return o
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput {
	return o.ToLinuxConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o LinuxConfigurationResponseOutput) ToLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *LinuxConfigurationResponse {
		return &v
	}).(LinuxConfigurationResponsePtrOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationResponseOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationResponseOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LinuxConfigurationResponse) *SshConfigurationResponse { return v.Ssh }).(SshConfigurationResponsePtrOutput)
}

type LinuxConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxConfigurationResponse)(nil)).Elem()
}

func (o LinuxConfigurationResponsePtrOutput) ToLinuxConfigurationResponsePtrOutput() LinuxConfigurationResponsePtrOutput {
	return o
}

func (o LinuxConfigurationResponsePtrOutput) ToLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) LinuxConfigurationResponsePtrOutput {
	return o
}

func (o LinuxConfigurationResponsePtrOutput) Elem() LinuxConfigurationResponseOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) LinuxConfigurationResponse { return *v }).(LinuxConfigurationResponseOutput)
}

// Specifies whether password authentication should be disabled.
func (o LinuxConfigurationResponsePtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o LinuxConfigurationResponsePtrOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *LinuxConfigurationResponse) *SshConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReference struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary *bool `pulumi:"primary"`
}

// NetworkInterfaceReferenceInput is an input type that accepts NetworkInterfaceReferenceArgs and NetworkInterfaceReferenceOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceInput` via:
//
//          NetworkInterfaceReferenceArgs{...}
type NetworkInterfaceReferenceInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceOutput() NetworkInterfaceReferenceOutput
	ToNetworkInterfaceReferenceOutputWithContext(context.Context) NetworkInterfaceReferenceOutput
}

// Describes a network interface reference.
type NetworkInterfaceReferenceArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (NetworkInterfaceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReference)(nil)).Elem()
}

func (i NetworkInterfaceReferenceArgs) ToNetworkInterfaceReferenceOutput() NetworkInterfaceReferenceOutput {
	return i.ToNetworkInterfaceReferenceOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceArgs) ToNetworkInterfaceReferenceOutputWithContext(ctx context.Context) NetworkInterfaceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceOutput)
}

// NetworkInterfaceReferenceArrayInput is an input type that accepts NetworkInterfaceReferenceArray and NetworkInterfaceReferenceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceArrayInput` via:
//
//          NetworkInterfaceReferenceArray{ NetworkInterfaceReferenceArgs{...} }
type NetworkInterfaceReferenceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceArrayOutput() NetworkInterfaceReferenceArrayOutput
	ToNetworkInterfaceReferenceArrayOutputWithContext(context.Context) NetworkInterfaceReferenceArrayOutput
}

type NetworkInterfaceReferenceArray []NetworkInterfaceReferenceInput

func (NetworkInterfaceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReference)(nil)).Elem()
}

func (i NetworkInterfaceReferenceArray) ToNetworkInterfaceReferenceArrayOutput() NetworkInterfaceReferenceArrayOutput {
	return i.ToNetworkInterfaceReferenceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceArray) ToNetworkInterfaceReferenceArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceArrayOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReferenceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReference)(nil)).Elem()
}

func (o NetworkInterfaceReferenceOutput) ToNetworkInterfaceReferenceOutput() NetworkInterfaceReferenceOutput {
	return o
}

func (o NetworkInterfaceReferenceOutput) ToNetworkInterfaceReferenceOutputWithContext(ctx context.Context) NetworkInterfaceReferenceOutput {
	return o
}

// Resource Id
func (o NetworkInterfaceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
func (o NetworkInterfaceReferenceOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReference) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type NetworkInterfaceReferenceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReference)(nil)).Elem()
}

func (o NetworkInterfaceReferenceArrayOutput) ToNetworkInterfaceReferenceArrayOutput() NetworkInterfaceReferenceArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceArrayOutput) ToNetworkInterfaceReferenceArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceReference {
		return vs[0].([]NetworkInterfaceReference)[vs[1].(int)]
	}).(NetworkInterfaceReferenceOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReferenceInvokeResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary *bool `pulumi:"primary"`
}

// NetworkInterfaceReferenceInvokeResponseInput is an input type that accepts NetworkInterfaceReferenceInvokeResponseArgs and NetworkInterfaceReferenceInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceInvokeResponseInput` via:
//
//          NetworkInterfaceReferenceInvokeResponseArgs{...}
type NetworkInterfaceReferenceInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceInvokeResponseOutput() NetworkInterfaceReferenceInvokeResponseOutput
	ToNetworkInterfaceReferenceInvokeResponseOutputWithContext(context.Context) NetworkInterfaceReferenceInvokeResponseOutput
}

// Describes a network interface reference.
type NetworkInterfaceReferenceInvokeResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (NetworkInterfaceReferenceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReferenceInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceReferenceInvokeResponseArgs) ToNetworkInterfaceReferenceInvokeResponseOutput() NetworkInterfaceReferenceInvokeResponseOutput {
	return i.ToNetworkInterfaceReferenceInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceInvokeResponseArgs) ToNetworkInterfaceReferenceInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceReferenceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceInvokeResponseOutput)
}

// NetworkInterfaceReferenceInvokeResponseArrayInput is an input type that accepts NetworkInterfaceReferenceInvokeResponseArray and NetworkInterfaceReferenceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceInvokeResponseArrayInput` via:
//
//          NetworkInterfaceReferenceInvokeResponseArray{ NetworkInterfaceReferenceInvokeResponseArgs{...} }
type NetworkInterfaceReferenceInvokeResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceInvokeResponseArrayOutput() NetworkInterfaceReferenceInvokeResponseArrayOutput
	ToNetworkInterfaceReferenceInvokeResponseArrayOutputWithContext(context.Context) NetworkInterfaceReferenceInvokeResponseArrayOutput
}

type NetworkInterfaceReferenceInvokeResponseArray []NetworkInterfaceReferenceInvokeResponseInput

func (NetworkInterfaceReferenceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReferenceInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceReferenceInvokeResponseArray) ToNetworkInterfaceReferenceInvokeResponseArrayOutput() NetworkInterfaceReferenceInvokeResponseArrayOutput {
	return i.ToNetworkInterfaceReferenceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceInvokeResponseArray) ToNetworkInterfaceReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceInvokeResponseArrayOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReferenceInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReferenceInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceReferenceInvokeResponseOutput) ToNetworkInterfaceReferenceInvokeResponseOutput() NetworkInterfaceReferenceInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceReferenceInvokeResponseOutput) ToNetworkInterfaceReferenceInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceReferenceInvokeResponseOutput {
	return o
}

// Resource Id
func (o NetworkInterfaceReferenceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReferenceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
func (o NetworkInterfaceReferenceInvokeResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReferenceInvokeResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type NetworkInterfaceReferenceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReferenceInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceReferenceInvokeResponseArrayOutput) ToNetworkInterfaceReferenceInvokeResponseArrayOutput() NetworkInterfaceReferenceInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceInvokeResponseArrayOutput) ToNetworkInterfaceReferenceInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceInvokeResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceReferenceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceReferenceInvokeResponse {
		return vs[0].([]NetworkInterfaceReferenceInvokeResponse)[vs[1].(int)]
	}).(NetworkInterfaceReferenceInvokeResponseOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReferenceResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary *bool `pulumi:"primary"`
}

// NetworkInterfaceReferenceResponseInput is an input type that accepts NetworkInterfaceReferenceResponseArgs and NetworkInterfaceReferenceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceResponseInput` via:
//
//          NetworkInterfaceReferenceResponseArgs{...}
type NetworkInterfaceReferenceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceResponseOutput() NetworkInterfaceReferenceResponseOutput
	ToNetworkInterfaceReferenceResponseOutputWithContext(context.Context) NetworkInterfaceReferenceResponseOutput
}

// Describes a network interface reference.
type NetworkInterfaceReferenceResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (NetworkInterfaceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReferenceResponse)(nil)).Elem()
}

func (i NetworkInterfaceReferenceResponseArgs) ToNetworkInterfaceReferenceResponseOutput() NetworkInterfaceReferenceResponseOutput {
	return i.ToNetworkInterfaceReferenceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceResponseArgs) ToNetworkInterfaceReferenceResponseOutputWithContext(ctx context.Context) NetworkInterfaceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceResponseOutput)
}

// NetworkInterfaceReferenceResponseArrayInput is an input type that accepts NetworkInterfaceReferenceResponseArray and NetworkInterfaceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceReferenceResponseArrayInput` via:
//
//          NetworkInterfaceReferenceResponseArray{ NetworkInterfaceReferenceResponseArgs{...} }
type NetworkInterfaceReferenceResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceReferenceResponseArrayOutput() NetworkInterfaceReferenceResponseArrayOutput
	ToNetworkInterfaceReferenceResponseArrayOutputWithContext(context.Context) NetworkInterfaceReferenceResponseArrayOutput
}

type NetworkInterfaceReferenceResponseArray []NetworkInterfaceReferenceResponseInput

func (NetworkInterfaceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReferenceResponse)(nil)).Elem()
}

func (i NetworkInterfaceReferenceResponseArray) ToNetworkInterfaceReferenceResponseArrayOutput() NetworkInterfaceReferenceResponseArrayOutput {
	return i.ToNetworkInterfaceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceReferenceResponseArray) ToNetworkInterfaceReferenceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceReferenceResponseArrayOutput)
}

// Describes a network interface reference.
type NetworkInterfaceReferenceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceReferenceResponse)(nil)).Elem()
}

func (o NetworkInterfaceReferenceResponseOutput) ToNetworkInterfaceReferenceResponseOutput() NetworkInterfaceReferenceResponseOutput {
	return o
}

func (o NetworkInterfaceReferenceResponseOutput) ToNetworkInterfaceReferenceResponseOutputWithContext(ctx context.Context) NetworkInterfaceReferenceResponseOutput {
	return o
}

// Resource Id
func (o NetworkInterfaceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the primary network interface in case the virtual machine has more than 1 network interface.
func (o NetworkInterfaceReferenceResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceReferenceResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type NetworkInterfaceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceReferenceResponse)(nil)).Elem()
}

func (o NetworkInterfaceReferenceResponseArrayOutput) ToNetworkInterfaceReferenceResponseArrayOutput() NetworkInterfaceReferenceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceResponseArrayOutput) ToNetworkInterfaceReferenceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceReferenceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceReferenceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceReferenceResponse {
		return vs[0].([]NetworkInterfaceReferenceResponse)[vs[1].(int)]
	}).(NetworkInterfaceReferenceResponseOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfile struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces []NetworkInterfaceReference `pulumi:"networkInterfaces"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//          NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileArgs struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces NetworkInterfaceReferenceArrayInput `pulumi:"networkInterfaces"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//          NetworkProfileArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyT(func(v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
func (o NetworkProfileOutput) NetworkInterfaces() NetworkInterfaceReferenceArrayOutput {
	return o.ApplyT(func(v NetworkProfile) []NetworkInterfaceReference { return v.NetworkInterfaces }).(NetworkInterfaceReferenceArrayOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile { return *v }).(NetworkProfileOutput)
}

// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
func (o NetworkProfilePtrOutput) NetworkInterfaces() NetworkInterfaceReferenceArrayOutput {
	return o.ApplyT(func(v *NetworkProfile) []NetworkInterfaceReference {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceReferenceArrayOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileInvokeResponse struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces []NetworkInterfaceReferenceInvokeResponse `pulumi:"networkInterfaces"`
}

// NetworkProfileInvokeResponseInput is an input type that accepts NetworkProfileInvokeResponseArgs and NetworkProfileInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkProfileInvokeResponseInput` via:
//
//          NetworkProfileInvokeResponseArgs{...}
type NetworkProfileInvokeResponseInput interface {
	pulumi.Input

	ToNetworkProfileInvokeResponseOutput() NetworkProfileInvokeResponseOutput
	ToNetworkProfileInvokeResponseOutputWithContext(context.Context) NetworkProfileInvokeResponseOutput
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileInvokeResponseArgs struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces NetworkInterfaceReferenceInvokeResponseArrayInput `pulumi:"networkInterfaces"`
}

func (NetworkProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileInvokeResponse)(nil)).Elem()
}

func (i NetworkProfileInvokeResponseArgs) ToNetworkProfileInvokeResponseOutput() NetworkProfileInvokeResponseOutput {
	return i.ToNetworkProfileInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkProfileInvokeResponseArgs) ToNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) NetworkProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileInvokeResponseOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileInvokeResponse)(nil)).Elem()
}

func (o NetworkProfileInvokeResponseOutput) ToNetworkProfileInvokeResponseOutput() NetworkProfileInvokeResponseOutput {
	return o
}

func (o NetworkProfileInvokeResponseOutput) ToNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) NetworkProfileInvokeResponseOutput {
	return o
}

// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
func (o NetworkProfileInvokeResponseOutput) NetworkInterfaces() NetworkInterfaceReferenceInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfileInvokeResponse) []NetworkInterfaceReferenceInvokeResponse {
		return v.NetworkInterfaces
	}).(NetworkInterfaceReferenceInvokeResponseArrayOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileResponse struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces []NetworkInterfaceReferenceResponse `pulumi:"networkInterfaces"`
}

// NetworkProfileResponseInput is an input type that accepts NetworkProfileResponseArgs and NetworkProfileResponseOutput values.
// You can construct a concrete instance of `NetworkProfileResponseInput` via:
//
//          NetworkProfileResponseArgs{...}
type NetworkProfileResponseInput interface {
	pulumi.Input

	ToNetworkProfileResponseOutput() NetworkProfileResponseOutput
	ToNetworkProfileResponseOutputWithContext(context.Context) NetworkProfileResponseOutput
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileResponseArgs struct {
	// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
	NetworkInterfaces NetworkInterfaceReferenceResponseArrayInput `pulumi:"networkInterfaces"`
}

func (NetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return i.ToNetworkProfileResponseOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput)
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i NetworkProfileResponseArgs) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponseOutput).ToNetworkProfileResponsePtrOutputWithContext(ctx)
}

// NetworkProfileResponsePtrInput is an input type that accepts NetworkProfileResponseArgs, NetworkProfileResponsePtr and NetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `NetworkProfileResponsePtrInput` via:
//
//          NetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type NetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput
	ToNetworkProfileResponsePtrOutputWithContext(context.Context) NetworkProfileResponsePtrOutput
}

type networkProfileResponsePtrType NetworkProfileResponseArgs

func NetworkProfileResponsePtr(v *NetworkProfileResponseArgs) NetworkProfileResponsePtrInput {
	return (*networkProfileResponsePtrType)(v)
}

func (*networkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return i.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *networkProfileResponsePtrType) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileResponsePtrOutput)
}

// Specifies the network interfaces of the virtual machine.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *NetworkProfileResponse {
		return &v
	}).(NetworkProfileResponsePtrOutput)
}

// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
func (o NetworkProfileResponseOutput) NetworkInterfaces() NetworkInterfaceReferenceResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfileResponse) []NetworkInterfaceReferenceResponse { return v.NetworkInterfaces }).(NetworkInterfaceReferenceResponseArrayOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse { return *v }).(NetworkProfileResponseOutput)
}

// Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
func (o NetworkProfileResponsePtrOutput) NetworkInterfaces() NetworkInterfaceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) []NetworkInterfaceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceReferenceResponseArrayOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDisk struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings *DiskEncryptionSettings `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDisk `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDisk `pulumi:"vhd"`
}

// OSDiskInput is an input type that accepts OSDiskArgs and OSDiskOutput values.
// You can construct a concrete instance of `OSDiskInput` via:
//
//          OSDiskArgs{...}
type OSDiskInput interface {
	pulumi.Input

	ToOSDiskOutput() OSDiskOutput
	ToOSDiskOutputWithContext(context.Context) OSDiskOutput
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching CachingTypes `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption DiskCreateOptionTypes `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings DiskEncryptionSettingsPtrInput `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskPtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType OperatingSystemTypes `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInput `pulumi:"vhd"`
}

func (OSDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDisk)(nil)).Elem()
}

func (i OSDiskArgs) ToOSDiskOutput() OSDiskOutput {
	return i.ToOSDiskOutputWithContext(context.Background())
}

func (i OSDiskArgs) ToOSDiskOutputWithContext(ctx context.Context) OSDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskOutput)
}

func (i OSDiskArgs) ToOSDiskPtrOutput() OSDiskPtrOutput {
	return i.ToOSDiskPtrOutputWithContext(context.Background())
}

func (i OSDiskArgs) ToOSDiskPtrOutputWithContext(ctx context.Context) OSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskOutput).ToOSDiskPtrOutputWithContext(ctx)
}

// OSDiskPtrInput is an input type that accepts OSDiskArgs, OSDiskPtr and OSDiskPtrOutput values.
// You can construct a concrete instance of `OSDiskPtrInput` via:
//
//          OSDiskArgs{...}
//
//  or:
//
//          nil
type OSDiskPtrInput interface {
	pulumi.Input

	ToOSDiskPtrOutput() OSDiskPtrOutput
	ToOSDiskPtrOutputWithContext(context.Context) OSDiskPtrOutput
}

type osdiskPtrType OSDiskArgs

func OSDiskPtr(v *OSDiskArgs) OSDiskPtrInput {
	return (*osdiskPtrType)(v)
}

func (*osdiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDisk)(nil)).Elem()
}

func (i *osdiskPtrType) ToOSDiskPtrOutput() OSDiskPtrOutput {
	return i.ToOSDiskPtrOutputWithContext(context.Background())
}

func (i *osdiskPtrType) ToOSDiskPtrOutputWithContext(ctx context.Context) OSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskPtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskOutput struct{ *pulumi.OutputState }

func (OSDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDisk)(nil)).Elem()
}

func (o OSDiskOutput) ToOSDiskOutput() OSDiskOutput {
	return o
}

func (o OSDiskOutput) ToOSDiskOutputWithContext(ctx context.Context) OSDiskOutput {
	return o
}

func (o OSDiskOutput) ToOSDiskPtrOutput() OSDiskPtrOutput {
	return o.ToOSDiskPtrOutputWithContext(context.Background())
}

func (o OSDiskOutput) ToOSDiskPtrOutputWithContext(ctx context.Context) OSDiskPtrOutput {
	return o.ApplyT(func(v OSDisk) *OSDisk {
		return &v
	}).(OSDiskPtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v OSDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OSDisk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskOutput) EncryptionSettings() DiskEncryptionSettingsPtrOutput {
	return o.ApplyT(func(v OSDisk) *DiskEncryptionSettings { return v.EncryptionSettings }).(DiskEncryptionSettingsPtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v OSDisk) *VirtualHardDisk { return v.Image }).(VirtualHardDiskPtrOutput)
}

// The disk name.
func (o OSDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OSDisk) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskOutput) Vhd() VirtualHardDiskOutput {
	return o.ApplyT(func(v OSDisk) VirtualHardDisk { return v.Vhd }).(VirtualHardDiskOutput)
}

type OSDiskPtrOutput struct{ *pulumi.OutputState }

func (OSDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDisk)(nil)).Elem()
}

func (o OSDiskPtrOutput) ToOSDiskPtrOutput() OSDiskPtrOutput {
	return o
}

func (o OSDiskPtrOutput) ToOSDiskPtrOutputWithContext(ctx context.Context) OSDiskPtrOutput {
	return o
}

func (o OSDiskPtrOutput) Elem() OSDiskOutput {
	return o.ApplyT(func(v *OSDisk) OSDisk { return *v }).(OSDiskOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskPtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDisk) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskPtrOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OSDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskPtrOutput) EncryptionSettings() DiskEncryptionSettingsPtrOutput {
	return o.ApplyT(func(v *OSDisk) *DiskEncryptionSettings {
		if v == nil {
			return nil
		}
		return v.EncryptionSettings
	}).(DiskEncryptionSettingsPtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskPtrOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v *OSDisk) *VirtualHardDisk {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskPtrOutput)
}

// The disk name.
func (o OSDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskPtrOutput) Vhd() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v *OSDisk) *VirtualHardDisk {
		if v == nil {
			return nil
		}
		return &v.Vhd
	}).(VirtualHardDiskPtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskInvokeResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings *DiskEncryptionSettingsInvokeResponse `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDiskInvokeResponse `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInvokeResponse `pulumi:"vhd"`
}

// OSDiskInvokeResponseInput is an input type that accepts OSDiskInvokeResponseArgs and OSDiskInvokeResponseOutput values.
// You can construct a concrete instance of `OSDiskInvokeResponseInput` via:
//
//          OSDiskInvokeResponseArgs{...}
type OSDiskInvokeResponseInput interface {
	pulumi.Input

	ToOSDiskInvokeResponseOutput() OSDiskInvokeResponseOutput
	ToOSDiskInvokeResponseOutputWithContext(context.Context) OSDiskInvokeResponseOutput
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskInvokeResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings DiskEncryptionSettingsInvokeResponsePtrInput `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskInvokeResponsePtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDiskInvokeResponseInput `pulumi:"vhd"`
}

func (OSDiskInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskInvokeResponse)(nil)).Elem()
}

func (i OSDiskInvokeResponseArgs) ToOSDiskInvokeResponseOutput() OSDiskInvokeResponseOutput {
	return i.ToOSDiskInvokeResponseOutputWithContext(context.Background())
}

func (i OSDiskInvokeResponseArgs) ToOSDiskInvokeResponseOutputWithContext(ctx context.Context) OSDiskInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskInvokeResponseOutput)
}

func (i OSDiskInvokeResponseArgs) ToOSDiskInvokeResponsePtrOutput() OSDiskInvokeResponsePtrOutput {
	return i.ToOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i OSDiskInvokeResponseArgs) ToOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) OSDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskInvokeResponseOutput).ToOSDiskInvokeResponsePtrOutputWithContext(ctx)
}

// OSDiskInvokeResponsePtrInput is an input type that accepts OSDiskInvokeResponseArgs, OSDiskInvokeResponsePtr and OSDiskInvokeResponsePtrOutput values.
// You can construct a concrete instance of `OSDiskInvokeResponsePtrInput` via:
//
//          OSDiskInvokeResponseArgs{...}
//
//  or:
//
//          nil
type OSDiskInvokeResponsePtrInput interface {
	pulumi.Input

	ToOSDiskInvokeResponsePtrOutput() OSDiskInvokeResponsePtrOutput
	ToOSDiskInvokeResponsePtrOutputWithContext(context.Context) OSDiskInvokeResponsePtrOutput
}

type osdiskInvokeResponsePtrType OSDiskInvokeResponseArgs

func OSDiskInvokeResponsePtr(v *OSDiskInvokeResponseArgs) OSDiskInvokeResponsePtrInput {
	return (*osdiskInvokeResponsePtrType)(v)
}

func (*osdiskInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskInvokeResponse)(nil)).Elem()
}

func (i *osdiskInvokeResponsePtrType) ToOSDiskInvokeResponsePtrOutput() OSDiskInvokeResponsePtrOutput {
	return i.ToOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *osdiskInvokeResponsePtrType) ToOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) OSDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskInvokeResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskInvokeResponseOutput struct{ *pulumi.OutputState }

func (OSDiskInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskInvokeResponse)(nil)).Elem()
}

func (o OSDiskInvokeResponseOutput) ToOSDiskInvokeResponseOutput() OSDiskInvokeResponseOutput {
	return o
}

func (o OSDiskInvokeResponseOutput) ToOSDiskInvokeResponseOutputWithContext(ctx context.Context) OSDiskInvokeResponseOutput {
	return o
}

func (o OSDiskInvokeResponseOutput) ToOSDiskInvokeResponsePtrOutput() OSDiskInvokeResponsePtrOutput {
	return o.ToOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (o OSDiskInvokeResponseOutput) ToOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) OSDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *OSDiskInvokeResponse {
		return &v
	}).(OSDiskInvokeResponsePtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskInvokeResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskInvokeResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskInvokeResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskInvokeResponseOutput) EncryptionSettings() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *DiskEncryptionSettingsInvokeResponse { return v.EncryptionSettings }).(DiskEncryptionSettingsInvokeResponsePtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskInvokeResponseOutput) Image() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *VirtualHardDiskInvokeResponse { return v.Image }).(VirtualHardDiskInvokeResponsePtrOutput)
}

// The disk name.
func (o OSDiskInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskInvokeResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskInvokeResponseOutput) Vhd() VirtualHardDiskInvokeResponseOutput {
	return o.ApplyT(func(v OSDiskInvokeResponse) VirtualHardDiskInvokeResponse { return v.Vhd }).(VirtualHardDiskInvokeResponseOutput)
}

type OSDiskInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskInvokeResponse)(nil)).Elem()
}

func (o OSDiskInvokeResponsePtrOutput) ToOSDiskInvokeResponsePtrOutput() OSDiskInvokeResponsePtrOutput {
	return o
}

func (o OSDiskInvokeResponsePtrOutput) ToOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) OSDiskInvokeResponsePtrOutput {
	return o
}

func (o OSDiskInvokeResponsePtrOutput) Elem() OSDiskInvokeResponseOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) OSDiskInvokeResponse { return *v }).(OSDiskInvokeResponseOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskInvokeResponsePtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskInvokeResponsePtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskInvokeResponsePtrOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskInvokeResponsePtrOutput) EncryptionSettings() DiskEncryptionSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *DiskEncryptionSettingsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionSettings
	}).(DiskEncryptionSettingsInvokeResponsePtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskInvokeResponsePtrOutput) Image() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *VirtualHardDiskInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskInvokeResponsePtrOutput)
}

// The disk name.
func (o OSDiskInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskInvokeResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskInvokeResponsePtrOutput) Vhd() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskInvokeResponse) *VirtualHardDiskInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.Vhd
	}).(VirtualHardDiskInvokeResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings *DiskEncryptionSettingsResponse `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image *VirtualHardDiskResponse `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDiskResponse `pulumi:"vhd"`
}

// OSDiskResponseInput is an input type that accepts OSDiskResponseArgs and OSDiskResponseOutput values.
// You can construct a concrete instance of `OSDiskResponseInput` via:
//
//          OSDiskResponseArgs{...}
type OSDiskResponseInput interface {
	pulumi.Input

	ToOSDiskResponseOutput() OSDiskResponseOutput
	ToOSDiskResponseOutputWithContext(context.Context) OSDiskResponseOutput
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
	EncryptionSettings DiskEncryptionSettingsResponsePtrInput `pulumi:"encryptionSettings"`
	// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
	Image VirtualHardDiskResponsePtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The virtual hard disk.
	Vhd VirtualHardDiskResponseInput `pulumi:"vhd"`
}

func (OSDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskResponse)(nil)).Elem()
}

func (i OSDiskResponseArgs) ToOSDiskResponseOutput() OSDiskResponseOutput {
	return i.ToOSDiskResponseOutputWithContext(context.Background())
}

func (i OSDiskResponseArgs) ToOSDiskResponseOutputWithContext(ctx context.Context) OSDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskResponseOutput)
}

func (i OSDiskResponseArgs) ToOSDiskResponsePtrOutput() OSDiskResponsePtrOutput {
	return i.ToOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i OSDiskResponseArgs) ToOSDiskResponsePtrOutputWithContext(ctx context.Context) OSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskResponseOutput).ToOSDiskResponsePtrOutputWithContext(ctx)
}

// OSDiskResponsePtrInput is an input type that accepts OSDiskResponseArgs, OSDiskResponsePtr and OSDiskResponsePtrOutput values.
// You can construct a concrete instance of `OSDiskResponsePtrInput` via:
//
//          OSDiskResponseArgs{...}
//
//  or:
//
//          nil
type OSDiskResponsePtrInput interface {
	pulumi.Input

	ToOSDiskResponsePtrOutput() OSDiskResponsePtrOutput
	ToOSDiskResponsePtrOutputWithContext(context.Context) OSDiskResponsePtrOutput
}

type osdiskResponsePtrType OSDiskResponseArgs

func OSDiskResponsePtr(v *OSDiskResponseArgs) OSDiskResponsePtrInput {
	return (*osdiskResponsePtrType)(v)
}

func (*osdiskResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskResponse)(nil)).Elem()
}

func (i *osdiskResponsePtrType) ToOSDiskResponsePtrOutput() OSDiskResponsePtrOutput {
	return i.ToOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i *osdiskResponsePtrType) ToOSDiskResponsePtrOutputWithContext(ctx context.Context) OSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
type OSDiskResponseOutput struct{ *pulumi.OutputState }

func (OSDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskResponse)(nil)).Elem()
}

func (o OSDiskResponseOutput) ToOSDiskResponseOutput() OSDiskResponseOutput {
	return o
}

func (o OSDiskResponseOutput) ToOSDiskResponseOutputWithContext(ctx context.Context) OSDiskResponseOutput {
	return o
}

func (o OSDiskResponseOutput) ToOSDiskResponsePtrOutput() OSDiskResponsePtrOutput {
	return o.ToOSDiskResponsePtrOutputWithContext(context.Background())
}

func (o OSDiskResponseOutput) ToOSDiskResponsePtrOutputWithContext(ctx context.Context) OSDiskResponsePtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *OSDiskResponse {
		return &v
	}).(OSDiskResponsePtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v OSDiskResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskResponseOutput) EncryptionSettings() DiskEncryptionSettingsResponsePtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *DiskEncryptionSettingsResponse { return v.EncryptionSettings }).(DiskEncryptionSettingsResponsePtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskResponseOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *VirtualHardDiskResponse { return v.Image }).(VirtualHardDiskResponsePtrOutput)
}

// The disk name.
func (o OSDiskResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OSDiskResponse) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskResponseOutput) Vhd() VirtualHardDiskResponseOutput {
	return o.ApplyT(func(v OSDiskResponse) VirtualHardDiskResponse { return v.Vhd }).(VirtualHardDiskResponseOutput)
}

type OSDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskResponse)(nil)).Elem()
}

func (o OSDiskResponsePtrOutput) ToOSDiskResponsePtrOutput() OSDiskResponsePtrOutput {
	return o
}

func (o OSDiskResponsePtrOutput) ToOSDiskResponsePtrOutputWithContext(ctx context.Context) OSDiskResponsePtrOutput {
	return o
}

func (o OSDiskResponsePtrOutput) Elem() OSDiskResponseOutput {
	return o.ApplyT(func(v *OSDiskResponse) OSDiskResponse { return *v }).(OSDiskResponseOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o OSDiskResponsePtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o OSDiskResponsePtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
func (o OSDiskResponsePtrOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGB
	}).(pulumi.IntPtrOutput)
}

// Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
func (o OSDiskResponsePtrOutput) EncryptionSettings() DiskEncryptionSettingsResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *DiskEncryptionSettingsResponse {
		if v == nil {
			return nil
		}
		return v.EncryptionSettings
	}).(DiskEncryptionSettingsResponsePtrOutput)
}

// The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
func (o OSDiskResponsePtrOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *VirtualHardDiskResponse {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskResponsePtrOutput)
}

// The disk name.
func (o OSDiskResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o OSDiskResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The virtual hard disk.
func (o OSDiskResponsePtrOutput) Vhd() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v *OSDiskResponse) *VirtualHardDiskResponse {
		if v == nil {
			return nil
		}
		return &v.Vhd
	}).(VirtualHardDiskResponsePtrOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfile struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName *string `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData *string `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration *LinuxConfiguration `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets []VaultSecretGroup `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration *WindowsConfiguration `pulumi:"windowsConfiguration"`
}

// OSProfileInput is an input type that accepts OSProfileArgs and OSProfileOutput values.
// You can construct a concrete instance of `OSProfileInput` via:
//
//          OSProfileArgs{...}
type OSProfileInput interface {
	pulumi.Input

	ToOSProfileOutput() OSProfileOutput
	ToOSProfileOutputWithContext(context.Context) OSProfileOutput
}

// Specifies the operating system settings for the virtual machine.
type OSProfileArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration LinuxConfigurationPtrInput `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets VaultSecretGroupArrayInput `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration WindowsConfigurationPtrInput `pulumi:"windowsConfiguration"`
}

func (OSProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfile)(nil)).Elem()
}

func (i OSProfileArgs) ToOSProfileOutput() OSProfileOutput {
	return i.ToOSProfileOutputWithContext(context.Background())
}

func (i OSProfileArgs) ToOSProfileOutputWithContext(ctx context.Context) OSProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileOutput)
}

func (i OSProfileArgs) ToOSProfilePtrOutput() OSProfilePtrOutput {
	return i.ToOSProfilePtrOutputWithContext(context.Background())
}

func (i OSProfileArgs) ToOSProfilePtrOutputWithContext(ctx context.Context) OSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileOutput).ToOSProfilePtrOutputWithContext(ctx)
}

// OSProfilePtrInput is an input type that accepts OSProfileArgs, OSProfilePtr and OSProfilePtrOutput values.
// You can construct a concrete instance of `OSProfilePtrInput` via:
//
//          OSProfileArgs{...}
//
//  or:
//
//          nil
type OSProfilePtrInput interface {
	pulumi.Input

	ToOSProfilePtrOutput() OSProfilePtrOutput
	ToOSProfilePtrOutputWithContext(context.Context) OSProfilePtrOutput
}

type osprofilePtrType OSProfileArgs

func OSProfilePtr(v *OSProfileArgs) OSProfilePtrInput {
	return (*osprofilePtrType)(v)
}

func (*osprofilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSProfile)(nil)).Elem()
}

func (i *osprofilePtrType) ToOSProfilePtrOutput() OSProfilePtrOutput {
	return i.ToOSProfilePtrOutputWithContext(context.Background())
}

func (i *osprofilePtrType) ToOSProfilePtrOutputWithContext(ctx context.Context) OSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfilePtrOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfileOutput struct{ *pulumi.OutputState }

func (OSProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfile)(nil)).Elem()
}

func (o OSProfileOutput) ToOSProfileOutput() OSProfileOutput {
	return o
}

func (o OSProfileOutput) ToOSProfileOutputWithContext(ctx context.Context) OSProfileOutput {
	return o
}

func (o OSProfileOutput) ToOSProfilePtrOutput() OSProfilePtrOutput {
	return o.ToOSProfilePtrOutputWithContext(context.Background())
}

func (o OSProfileOutput) ToOSProfilePtrOutputWithContext(ctx context.Context) OSProfilePtrOutput {
	return o.ApplyT(func(v OSProfile) *OSProfile {
		return &v
	}).(OSProfilePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o OSProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfile) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
func (o OSProfileOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfile) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfile) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o OSProfileOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v OSProfile) *LinuxConfiguration { return v.LinuxConfiguration }).(LinuxConfigurationPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual machine.
func (o OSProfileOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v OSProfile) []VaultSecretGroup { return v.Secrets }).(VaultSecretGroupArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o OSProfileOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v OSProfile) *WindowsConfiguration { return v.WindowsConfiguration }).(WindowsConfigurationPtrOutput)
}

type OSProfilePtrOutput struct{ *pulumi.OutputState }

func (OSProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSProfile)(nil)).Elem()
}

func (o OSProfilePtrOutput) ToOSProfilePtrOutput() OSProfilePtrOutput {
	return o
}

func (o OSProfilePtrOutput) ToOSProfilePtrOutputWithContext(ctx context.Context) OSProfilePtrOutput {
	return o
}

func (o OSProfilePtrOutput) Elem() OSProfileOutput {
	return o.ApplyT(func(v *OSProfile) OSProfile { return *v }).(OSProfileOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o OSProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
func (o OSProfilePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfilePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfile) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o OSProfilePtrOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v *OSProfile) *LinuxConfiguration {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationPtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual machine.
func (o OSProfilePtrOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v *OSProfile) []VaultSecretGroup {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o OSProfilePtrOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v *OSProfile) *WindowsConfiguration {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationPtrOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfileInvokeResponse struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName *string `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData *string `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration *LinuxConfigurationInvokeResponse `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets []VaultSecretGroupInvokeResponse `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration *WindowsConfigurationInvokeResponse `pulumi:"windowsConfiguration"`
}

// OSProfileInvokeResponseInput is an input type that accepts OSProfileInvokeResponseArgs and OSProfileInvokeResponseOutput values.
// You can construct a concrete instance of `OSProfileInvokeResponseInput` via:
//
//          OSProfileInvokeResponseArgs{...}
type OSProfileInvokeResponseInput interface {
	pulumi.Input

	ToOSProfileInvokeResponseOutput() OSProfileInvokeResponseOutput
	ToOSProfileInvokeResponseOutputWithContext(context.Context) OSProfileInvokeResponseOutput
}

// Specifies the operating system settings for the virtual machine.
type OSProfileInvokeResponseArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration LinuxConfigurationInvokeResponsePtrInput `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets VaultSecretGroupInvokeResponseArrayInput `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration WindowsConfigurationInvokeResponsePtrInput `pulumi:"windowsConfiguration"`
}

func (OSProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfileInvokeResponse)(nil)).Elem()
}

func (i OSProfileInvokeResponseArgs) ToOSProfileInvokeResponseOutput() OSProfileInvokeResponseOutput {
	return i.ToOSProfileInvokeResponseOutputWithContext(context.Background())
}

func (i OSProfileInvokeResponseArgs) ToOSProfileInvokeResponseOutputWithContext(ctx context.Context) OSProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileInvokeResponseOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (OSProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfileInvokeResponse)(nil)).Elem()
}

func (o OSProfileInvokeResponseOutput) ToOSProfileInvokeResponseOutput() OSProfileInvokeResponseOutput {
	return o
}

func (o OSProfileInvokeResponseOutput) ToOSProfileInvokeResponseOutputWithContext(ctx context.Context) OSProfileInvokeResponseOutput {
	return o
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o OSProfileInvokeResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileInvokeResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
func (o OSProfileInvokeResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileInvokeResponseOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o OSProfileInvokeResponseOutput) LinuxConfiguration() LinuxConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *LinuxConfigurationInvokeResponse { return v.LinuxConfiguration }).(LinuxConfigurationInvokeResponsePtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual machine.
func (o OSProfileInvokeResponseOutput) Secrets() VaultSecretGroupInvokeResponseArrayOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) []VaultSecretGroupInvokeResponse { return v.Secrets }).(VaultSecretGroupInvokeResponseArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o OSProfileInvokeResponseOutput) WindowsConfiguration() WindowsConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v OSProfileInvokeResponse) *WindowsConfigurationInvokeResponse { return v.WindowsConfiguration }).(WindowsConfigurationInvokeResponsePtrOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfileResponse struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName *string `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData *string `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration *LinuxConfigurationResponse `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets []VaultSecretGroupResponse `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration *WindowsConfigurationResponse `pulumi:"windowsConfiguration"`
}

// OSProfileResponseInput is an input type that accepts OSProfileResponseArgs and OSProfileResponseOutput values.
// You can construct a concrete instance of `OSProfileResponseInput` via:
//
//          OSProfileResponseArgs{...}
type OSProfileResponseInput interface {
	pulumi.Input

	ToOSProfileResponseOutput() OSProfileResponseOutput
	ToOSProfileResponseOutputWithContext(context.Context) OSProfileResponseOutput
}

// Specifies the operating system settings for the virtual machine.
type OSProfileResponseArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	LinuxConfiguration LinuxConfigurationResponsePtrInput `pulumi:"linuxConfiguration"`
	// Specifies set of certificates that should be installed onto the virtual machine.
	Secrets VaultSecretGroupResponseArrayInput `pulumi:"secrets"`
	// Specifies Windows operating system settings on the virtual machine.
	WindowsConfiguration WindowsConfigurationResponsePtrInput `pulumi:"windowsConfiguration"`
}

func (OSProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfileResponse)(nil)).Elem()
}

func (i OSProfileResponseArgs) ToOSProfileResponseOutput() OSProfileResponseOutput {
	return i.ToOSProfileResponseOutputWithContext(context.Background())
}

func (i OSProfileResponseArgs) ToOSProfileResponseOutputWithContext(ctx context.Context) OSProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileResponseOutput)
}

func (i OSProfileResponseArgs) ToOSProfileResponsePtrOutput() OSProfileResponsePtrOutput {
	return i.ToOSProfileResponsePtrOutputWithContext(context.Background())
}

func (i OSProfileResponseArgs) ToOSProfileResponsePtrOutputWithContext(ctx context.Context) OSProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileResponseOutput).ToOSProfileResponsePtrOutputWithContext(ctx)
}

// OSProfileResponsePtrInput is an input type that accepts OSProfileResponseArgs, OSProfileResponsePtr and OSProfileResponsePtrOutput values.
// You can construct a concrete instance of `OSProfileResponsePtrInput` via:
//
//          OSProfileResponseArgs{...}
//
//  or:
//
//          nil
type OSProfileResponsePtrInput interface {
	pulumi.Input

	ToOSProfileResponsePtrOutput() OSProfileResponsePtrOutput
	ToOSProfileResponsePtrOutputWithContext(context.Context) OSProfileResponsePtrOutput
}

type osprofileResponsePtrType OSProfileResponseArgs

func OSProfileResponsePtr(v *OSProfileResponseArgs) OSProfileResponsePtrInput {
	return (*osprofileResponsePtrType)(v)
}

func (*osprofileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSProfileResponse)(nil)).Elem()
}

func (i *osprofileResponsePtrType) ToOSProfileResponsePtrOutput() OSProfileResponsePtrOutput {
	return i.ToOSProfileResponsePtrOutputWithContext(context.Background())
}

func (i *osprofileResponsePtrType) ToOSProfileResponsePtrOutputWithContext(ctx context.Context) OSProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSProfileResponsePtrOutput)
}

// Specifies the operating system settings for the virtual machine.
type OSProfileResponseOutput struct{ *pulumi.OutputState }

func (OSProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSProfileResponse)(nil)).Elem()
}

func (o OSProfileResponseOutput) ToOSProfileResponseOutput() OSProfileResponseOutput {
	return o
}

func (o OSProfileResponseOutput) ToOSProfileResponseOutputWithContext(ctx context.Context) OSProfileResponseOutput {
	return o
}

func (o OSProfileResponseOutput) ToOSProfileResponsePtrOutput() OSProfileResponsePtrOutput {
	return o.ToOSProfileResponsePtrOutputWithContext(context.Background())
}

func (o OSProfileResponseOutput) ToOSProfileResponsePtrOutputWithContext(ctx context.Context) OSProfileResponsePtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *OSProfileResponse {
		return &v
	}).(OSProfileResponsePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o OSProfileResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
func (o OSProfileResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileResponseOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o OSProfileResponseOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *LinuxConfigurationResponse { return v.LinuxConfiguration }).(LinuxConfigurationResponsePtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual machine.
func (o OSProfileResponseOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v OSProfileResponse) []VaultSecretGroupResponse { return v.Secrets }).(VaultSecretGroupResponseArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o OSProfileResponseOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v OSProfileResponse) *WindowsConfigurationResponse { return v.WindowsConfiguration }).(WindowsConfigurationResponsePtrOutput)
}

type OSProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OSProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSProfileResponse)(nil)).Elem()
}

func (o OSProfileResponsePtrOutput) ToOSProfileResponsePtrOutput() OSProfileResponsePtrOutput {
	return o
}

func (o OSProfileResponsePtrOutput) ToOSProfileResponsePtrOutputWithContext(ctx context.Context) OSProfileResponsePtrOutput {
	return o
}

func (o OSProfileResponsePtrOutput) Elem() OSProfileResponseOutput {
	return o.ApplyT(func(v *OSProfileResponse) OSProfileResponse { return *v }).(OSProfileResponseOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o OSProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
func (o OSProfileResponsePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o OSProfileResponsePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o OSProfileResponsePtrOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *LinuxConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationResponsePtrOutput)
}

// Specifies set of certificates that should be installed onto the virtual machine.
func (o OSProfileResponsePtrOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v *OSProfileResponse) []VaultSecretGroupResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupResponseArrayOutput)
}

// Specifies Windows operating system settings on the virtual machine.
func (o OSProfileResponsePtrOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *OSProfileResponse) *WindowsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationResponsePtrOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type Plan struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// PlanInput is an input type that accepts PlanArgs and PlanOutput values.
// You can construct a concrete instance of `PlanInput` via:
//
//          PlanArgs{...}
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (i PlanArgs) ToPlanOutput() PlanOutput {
	return i.ToPlanOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput)
}

func (i PlanArgs) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput).ToPlanPtrOutputWithContext(ctx)
}

// PlanPtrInput is an input type that accepts PlanArgs, PlanPtr and PlanPtrOutput values.
// You can construct a concrete instance of `PlanPtrInput` via:
//
//          PlanArgs{...}
//
//  or:
//
//          nil
type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtrType PlanArgs

func PlanPtr(v *PlanArgs) PlanPtrInput {
	return (*planPtrType)(v)
}

func (*planPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (i *planPtrType) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i *planPtrType) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanPtrOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyT(func(v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

// The plan ID.
func (o PlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Plan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan { return *v }).(PlanOutput)
}

// The plan ID.
func (o PlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanInvokeResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// PlanInvokeResponseInput is an input type that accepts PlanInvokeResponseArgs and PlanInvokeResponseOutput values.
// You can construct a concrete instance of `PlanInvokeResponseInput` via:
//
//          PlanInvokeResponseArgs{...}
type PlanInvokeResponseInput interface {
	pulumi.Input

	ToPlanInvokeResponseOutput() PlanInvokeResponseOutput
	ToPlanInvokeResponseOutputWithContext(context.Context) PlanInvokeResponseOutput
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanInvokeResponseArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PlanInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanInvokeResponse)(nil)).Elem()
}

func (i PlanInvokeResponseArgs) ToPlanInvokeResponseOutput() PlanInvokeResponseOutput {
	return i.ToPlanInvokeResponseOutputWithContext(context.Background())
}

func (i PlanInvokeResponseArgs) ToPlanInvokeResponseOutputWithContext(ctx context.Context) PlanInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanInvokeResponseOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanInvokeResponseOutput struct{ *pulumi.OutputState }

func (PlanInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanInvokeResponse)(nil)).Elem()
}

func (o PlanInvokeResponseOutput) ToPlanInvokeResponseOutput() PlanInvokeResponseOutput {
	return o
}

func (o PlanInvokeResponseOutput) ToPlanInvokeResponseOutputWithContext(ctx context.Context) PlanInvokeResponseOutput {
	return o
}

// The plan ID.
func (o PlanInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PlanInvokeResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanInvokeResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanInvokeResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanInvokeResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// PlanResponseInput is an input type that accepts PlanResponseArgs and PlanResponseOutput values.
// You can construct a concrete instance of `PlanResponseInput` via:
//
//          PlanResponseArgs{...}
type PlanResponseInput interface {
	pulumi.Input

	ToPlanResponseOutput() PlanResponseOutput
	ToPlanResponseOutputWithContext(context.Context) PlanResponseOutput
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanResponseArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The promotion code.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (PlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (i PlanResponseArgs) ToPlanResponseOutput() PlanResponseOutput {
	return i.ToPlanResponseOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput)
}

func (i PlanResponseArgs) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput).ToPlanResponsePtrOutputWithContext(ctx)
}

// PlanResponsePtrInput is an input type that accepts PlanResponseArgs, PlanResponsePtr and PlanResponsePtrOutput values.
// You can construct a concrete instance of `PlanResponsePtrInput` via:
//
//          PlanResponseArgs{...}
//
//  or:
//
//          nil
type PlanResponsePtrInput interface {
	pulumi.Input

	ToPlanResponsePtrOutput() PlanResponsePtrOutput
	ToPlanResponsePtrOutputWithContext(context.Context) PlanResponsePtrOutput
}

type planResponsePtrType PlanResponseArgs

func PlanResponsePtr(v *PlanResponseArgs) PlanResponsePtrInput {
	return (*planResponsePtrType)(v)
}

func (*planResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (i *planResponsePtrType) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i *planResponsePtrType) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponsePtrOutput)
}

// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (o PlanResponseOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o.ApplyT(func(v PlanResponse) *PlanResponse {
		return &v
	}).(PlanResponsePtrOutput)
}

// The plan ID.
func (o PlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type PlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) Elem() PlanResponseOutput {
	return o.ApplyT(func(v *PlanResponse) PlanResponse { return *v }).(PlanResponseOutput)
}

// The plan ID.
func (o PlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
func (o PlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o PlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o PlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type Sku struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity *float64 `pulumi:"capacity"`
	// The sku name.
	Name *string `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuArgs struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o SkuOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Sku) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The sku name.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o SkuPtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Sku) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The sku name.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuInvokeResponse struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity *float64 `pulumi:"capacity"`
	// The sku name.
	Name *string `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier *string `pulumi:"tier"`
}

// SkuInvokeResponseInput is an input type that accepts SkuInvokeResponseArgs and SkuInvokeResponseOutput values.
// You can construct a concrete instance of `SkuInvokeResponseInput` via:
//
//          SkuInvokeResponseArgs{...}
type SkuInvokeResponseInput interface {
	pulumi.Input

	ToSkuInvokeResponseOutput() SkuInvokeResponseOutput
	ToSkuInvokeResponseOutputWithContext(context.Context) SkuInvokeResponseOutput
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuInvokeResponseArgs struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return i.ToSkuInvokeResponseOutputWithContext(context.Background())
}

func (i SkuInvokeResponseArgs) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuInvokeResponseOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (SkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuInvokeResponse)(nil)).Elem()
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutput() SkuInvokeResponseOutput {
	return o
}

func (o SkuInvokeResponseOutput) ToSkuInvokeResponseOutputWithContext(ctx context.Context) SkuInvokeResponseOutput {
	return o
}

// Specifies the number of virtual machines in the scale set.
func (o SkuInvokeResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The sku name.
func (o SkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
func (o SkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuResponse struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity *float64 `pulumi:"capacity"`
	// The sku name.
	Name *string `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuResponseArgs struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o SkuResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The sku name.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o SkuResponsePtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SkuResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The sku name.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfiguration struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKey `pulumi:"publicKeys"`
}

// SshConfigurationInput is an input type that accepts SshConfigurationArgs and SshConfigurationOutput values.
// You can construct a concrete instance of `SshConfigurationInput` via:
//
//          SshConfigurationArgs{...}
type SshConfigurationInput interface {
	pulumi.Input

	ToSshConfigurationOutput() SshConfigurationOutput
	ToSshConfigurationOutputWithContext(context.Context) SshConfigurationOutput
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys SshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (SshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (i SshConfigurationArgs) ToSshConfigurationOutput() SshConfigurationOutput {
	return i.ToSshConfigurationOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput)
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput).ToSshConfigurationPtrOutputWithContext(ctx)
}

// SshConfigurationPtrInput is an input type that accepts SshConfigurationArgs, SshConfigurationPtr and SshConfigurationPtrOutput values.
// You can construct a concrete instance of `SshConfigurationPtrInput` via:
//
//          SshConfigurationArgs{...}
//
//  or:
//
//          nil
type SshConfigurationPtrInput interface {
	pulumi.Input

	ToSshConfigurationPtrOutput() SshConfigurationPtrOutput
	ToSshConfigurationPtrOutputWithContext(context.Context) SshConfigurationPtrOutput
}

type sshConfigurationPtrType SshConfigurationArgs

func SshConfigurationPtr(v *SshConfigurationArgs) SshConfigurationPtrInput {
	return (*sshConfigurationPtrType)(v)
}

func (*sshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationOutput struct{ *pulumi.OutputState }

func (SshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationOutput) ToSshConfigurationOutput() SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o.ApplyT(func(v SshConfiguration) *SshConfiguration {
		return &v
	}).(SshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v SshConfiguration) []SshPublicKey { return v.PublicKeys }).(SshPublicKeyArrayOutput)
}

type SshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) Elem() SshConfigurationOutput {
	return o.ApplyT(func(v *SshConfiguration) SshConfiguration { return *v }).(SshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationPtrOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v *SshConfiguration) []SshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyArrayOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationInvokeResponse struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKeyInvokeResponse `pulumi:"publicKeys"`
}

// SshConfigurationInvokeResponseInput is an input type that accepts SshConfigurationInvokeResponseArgs and SshConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `SshConfigurationInvokeResponseInput` via:
//
//          SshConfigurationInvokeResponseArgs{...}
type SshConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToSshConfigurationInvokeResponseOutput() SshConfigurationInvokeResponseOutput
	ToSshConfigurationInvokeResponseOutputWithContext(context.Context) SshConfigurationInvokeResponseOutput
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationInvokeResponseArgs struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys SshPublicKeyInvokeResponseArrayInput `pulumi:"publicKeys"`
}

func (SshConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationInvokeResponse)(nil)).Elem()
}

func (i SshConfigurationInvokeResponseArgs) ToSshConfigurationInvokeResponseOutput() SshConfigurationInvokeResponseOutput {
	return i.ToSshConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i SshConfigurationInvokeResponseArgs) ToSshConfigurationInvokeResponseOutputWithContext(ctx context.Context) SshConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationInvokeResponseOutput)
}

func (i SshConfigurationInvokeResponseArgs) ToSshConfigurationInvokeResponsePtrOutput() SshConfigurationInvokeResponsePtrOutput {
	return i.ToSshConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SshConfigurationInvokeResponseArgs) ToSshConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SshConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationInvokeResponseOutput).ToSshConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// SshConfigurationInvokeResponsePtrInput is an input type that accepts SshConfigurationInvokeResponseArgs, SshConfigurationInvokeResponsePtr and SshConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SshConfigurationInvokeResponsePtrInput` via:
//
//          SshConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SshConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToSshConfigurationInvokeResponsePtrOutput() SshConfigurationInvokeResponsePtrOutput
	ToSshConfigurationInvokeResponsePtrOutputWithContext(context.Context) SshConfigurationInvokeResponsePtrOutput
}

type sshConfigurationInvokeResponsePtrType SshConfigurationInvokeResponseArgs

func SshConfigurationInvokeResponsePtr(v *SshConfigurationInvokeResponseArgs) SshConfigurationInvokeResponsePtrInput {
	return (*sshConfigurationInvokeResponsePtrType)(v)
}

func (*sshConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationInvokeResponse)(nil)).Elem()
}

func (i *sshConfigurationInvokeResponsePtrType) ToSshConfigurationInvokeResponsePtrOutput() SshConfigurationInvokeResponsePtrOutput {
	return i.ToSshConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sshConfigurationInvokeResponsePtrType) ToSshConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SshConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationInvokeResponsePtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (SshConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationInvokeResponse)(nil)).Elem()
}

func (o SshConfigurationInvokeResponseOutput) ToSshConfigurationInvokeResponseOutput() SshConfigurationInvokeResponseOutput {
	return o
}

func (o SshConfigurationInvokeResponseOutput) ToSshConfigurationInvokeResponseOutputWithContext(ctx context.Context) SshConfigurationInvokeResponseOutput {
	return o
}

func (o SshConfigurationInvokeResponseOutput) ToSshConfigurationInvokeResponsePtrOutput() SshConfigurationInvokeResponsePtrOutput {
	return o.ToSshConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SshConfigurationInvokeResponseOutput) ToSshConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SshConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v SshConfigurationInvokeResponse) *SshConfigurationInvokeResponse {
		return &v
	}).(SshConfigurationInvokeResponsePtrOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationInvokeResponseOutput) PublicKeys() SshPublicKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v SshConfigurationInvokeResponse) []SshPublicKeyInvokeResponse { return v.PublicKeys }).(SshPublicKeyInvokeResponseArrayOutput)
}

type SshConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationInvokeResponse)(nil)).Elem()
}

func (o SshConfigurationInvokeResponsePtrOutput) ToSshConfigurationInvokeResponsePtrOutput() SshConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SshConfigurationInvokeResponsePtrOutput) ToSshConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) SshConfigurationInvokeResponsePtrOutput {
	return o
}

func (o SshConfigurationInvokeResponsePtrOutput) Elem() SshConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *SshConfigurationInvokeResponse) SshConfigurationInvokeResponse { return *v }).(SshConfigurationInvokeResponseOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationInvokeResponsePtrOutput) PublicKeys() SshPublicKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *SshConfigurationInvokeResponse) []SshPublicKeyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyInvokeResponseArrayOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKeyResponse `pulumi:"publicKeys"`
}

// SshConfigurationResponseInput is an input type that accepts SshConfigurationResponseArgs and SshConfigurationResponseOutput values.
// You can construct a concrete instance of `SshConfigurationResponseInput` via:
//
//          SshConfigurationResponseArgs{...}
type SshConfigurationResponseInput interface {
	pulumi.Input

	ToSshConfigurationResponseOutput() SshConfigurationResponseOutput
	ToSshConfigurationResponseOutputWithContext(context.Context) SshConfigurationResponseOutput
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponseArgs struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys SshPublicKeyResponseArrayInput `pulumi:"publicKeys"`
}

func (SshConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return i.ToSshConfigurationResponseOutputWithContext(context.Background())
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponseOutput)
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return i.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i SshConfigurationResponseArgs) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponseOutput).ToSshConfigurationResponsePtrOutputWithContext(ctx)
}

// SshConfigurationResponsePtrInput is an input type that accepts SshConfigurationResponseArgs, SshConfigurationResponsePtr and SshConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `SshConfigurationResponsePtrInput` via:
//
//          SshConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type SshConfigurationResponsePtrInput interface {
	pulumi.Input

	ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput
	ToSshConfigurationResponsePtrOutputWithContext(context.Context) SshConfigurationResponsePtrOutput
}

type sshConfigurationResponsePtrType SshConfigurationResponseArgs

func SshConfigurationResponsePtr(v *SshConfigurationResponseArgs) SshConfigurationResponsePtrInput {
	return (*sshConfigurationResponsePtrType)(v)
}

func (*sshConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (i *sshConfigurationResponsePtrType) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return i.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *sshConfigurationResponsePtrType) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationResponsePtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o.ToSshConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v SshConfigurationResponse) *SshConfigurationResponse {
		return &v
	}).(SshConfigurationResponsePtrOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponseOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v SshConfigurationResponse) []SshPublicKeyResponse { return v.PublicKeys }).(SshPublicKeyResponseArrayOutput)
}

type SshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) Elem() SshConfigurationResponseOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) SshConfigurationResponse { return *v }).(SshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponsePtrOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) []SshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKey struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// SshPublicKeyInput is an input type that accepts SshPublicKeyArgs and SshPublicKeyOutput values.
// You can construct a concrete instance of `SshPublicKeyInput` via:
//
//          SshPublicKeyArgs{...}
type SshPublicKeyInput interface {
	pulumi.Input

	ToSshPublicKeyOutput() SshPublicKeyOutput
	ToSshPublicKeyOutputWithContext(context.Context) SshPublicKeyOutput
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyArgs struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return i.ToSshPublicKeyOutputWithContext(context.Background())
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyOutput)
}

// SshPublicKeyArrayInput is an input type that accepts SshPublicKeyArray and SshPublicKeyArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyArrayInput` via:
//
//          SshPublicKeyArray{ SshPublicKeyArgs{...} }
type SshPublicKeyArrayInput interface {
	pulumi.Input

	ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput
	ToSshPublicKeyArrayOutputWithContext(context.Context) SshPublicKeyArrayOutput
}

type SshPublicKeyArray []SshPublicKeyInput

func (SshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return i.ToSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyOutput struct{ *pulumi.OutputState }

func (SshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return o
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o SshPublicKeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
func (o SshPublicKeyOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) Index(i pulumi.IntInput) SshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKey {
		return vs[0].([]SshPublicKey)[vs[1].(int)]
	}).(SshPublicKeyOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyInvokeResponse struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// SshPublicKeyInvokeResponseInput is an input type that accepts SshPublicKeyInvokeResponseArgs and SshPublicKeyInvokeResponseOutput values.
// You can construct a concrete instance of `SshPublicKeyInvokeResponseInput` via:
//
//          SshPublicKeyInvokeResponseArgs{...}
type SshPublicKeyInvokeResponseInput interface {
	pulumi.Input

	ToSshPublicKeyInvokeResponseOutput() SshPublicKeyInvokeResponseOutput
	ToSshPublicKeyInvokeResponseOutputWithContext(context.Context) SshPublicKeyInvokeResponseOutput
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyInvokeResponseArgs struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SshPublicKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyInvokeResponse)(nil)).Elem()
}

func (i SshPublicKeyInvokeResponseArgs) ToSshPublicKeyInvokeResponseOutput() SshPublicKeyInvokeResponseOutput {
	return i.ToSshPublicKeyInvokeResponseOutputWithContext(context.Background())
}

func (i SshPublicKeyInvokeResponseArgs) ToSshPublicKeyInvokeResponseOutputWithContext(ctx context.Context) SshPublicKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyInvokeResponseOutput)
}

// SshPublicKeyInvokeResponseArrayInput is an input type that accepts SshPublicKeyInvokeResponseArray and SshPublicKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyInvokeResponseArrayInput` via:
//
//          SshPublicKeyInvokeResponseArray{ SshPublicKeyInvokeResponseArgs{...} }
type SshPublicKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToSshPublicKeyInvokeResponseArrayOutput() SshPublicKeyInvokeResponseArrayOutput
	ToSshPublicKeyInvokeResponseArrayOutputWithContext(context.Context) SshPublicKeyInvokeResponseArrayOutput
}

type SshPublicKeyInvokeResponseArray []SshPublicKeyInvokeResponseInput

func (SshPublicKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyInvokeResponse)(nil)).Elem()
}

func (i SshPublicKeyInvokeResponseArray) ToSshPublicKeyInvokeResponseArrayOutput() SshPublicKeyInvokeResponseArrayOutput {
	return i.ToSshPublicKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyInvokeResponseArray) ToSshPublicKeyInvokeResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyInvokeResponseArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (SshPublicKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyInvokeResponse)(nil)).Elem()
}

func (o SshPublicKeyInvokeResponseOutput) ToSshPublicKeyInvokeResponseOutput() SshPublicKeyInvokeResponseOutput {
	return o
}

func (o SshPublicKeyInvokeResponseOutput) ToSshPublicKeyInvokeResponseOutputWithContext(ctx context.Context) SshPublicKeyInvokeResponseOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o SshPublicKeyInvokeResponseOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyInvokeResponse) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
func (o SshPublicKeyInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyInvokeResponse)(nil)).Elem()
}

func (o SshPublicKeyInvokeResponseArrayOutput) ToSshPublicKeyInvokeResponseArrayOutput() SshPublicKeyInvokeResponseArrayOutput {
	return o
}

func (o SshPublicKeyInvokeResponseArrayOutput) ToSshPublicKeyInvokeResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyInvokeResponseArrayOutput {
	return o
}

func (o SshPublicKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) SshPublicKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKeyInvokeResponse {
		return vs[0].([]SshPublicKeyInvokeResponse)[vs[1].(int)]
	}).(SshPublicKeyInvokeResponseOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyResponse struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// SshPublicKeyResponseInput is an input type that accepts SshPublicKeyResponseArgs and SshPublicKeyResponseOutput values.
// You can construct a concrete instance of `SshPublicKeyResponseInput` via:
//
//          SshPublicKeyResponseArgs{...}
type SshPublicKeyResponseInput interface {
	pulumi.Input

	ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput
	ToSshPublicKeyResponseOutputWithContext(context.Context) SshPublicKeyResponseOutput
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyResponseArgs struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SshPublicKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyResponse)(nil)).Elem()
}

func (i SshPublicKeyResponseArgs) ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput {
	return i.ToSshPublicKeyResponseOutputWithContext(context.Background())
}

func (i SshPublicKeyResponseArgs) ToSshPublicKeyResponseOutputWithContext(ctx context.Context) SshPublicKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyResponseOutput)
}

// SshPublicKeyResponseArrayInput is an input type that accepts SshPublicKeyResponseArray and SshPublicKeyResponseArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyResponseArrayInput` via:
//
//          SshPublicKeyResponseArray{ SshPublicKeyResponseArgs{...} }
type SshPublicKeyResponseArrayInput interface {
	pulumi.Input

	ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput
	ToSshPublicKeyResponseArrayOutputWithContext(context.Context) SshPublicKeyResponseArrayOutput
}

type SshPublicKeyResponseArray []SshPublicKeyResponseInput

func (SshPublicKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyResponse)(nil)).Elem()
}

func (i SshPublicKeyResponseArray) ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput {
	return i.ToSshPublicKeyResponseArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyResponseArray) ToSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput {
	return o
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutputWithContext(ctx context.Context) SshPublicKeyResponseOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
func (o SshPublicKeyResponseOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
func (o SshPublicKeyResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) SshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKeyResponse {
		return vs[0].([]SshPublicKeyResponse)[vs[1].(int)]
	}).(SshPublicKeyResponseOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfile struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks []DataDisk `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference *ImageReference `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk *OSDisk `pulumi:"osDisk"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//          StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileArgs struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks DataDiskArrayInput `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference ImageReferencePtrInput `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk OSDiskPtrInput `pulumi:"osDisk"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//          StorageProfileArgs{...}
//
//  or:
//
//          nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyT(func(v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileOutput) DataDisks() DataDiskArrayOutput {
	return o.ApplyT(func(v StorageProfile) []DataDisk { return v.DataDisks }).(DataDiskArrayOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
func (o StorageProfileOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v StorageProfile) *ImageReference { return v.ImageReference }).(ImageReferencePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileOutput) OsDisk() OSDiskPtrOutput {
	return o.ApplyT(func(v StorageProfile) *OSDisk { return v.OsDisk }).(OSDiskPtrOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile { return *v }).(StorageProfileOutput)
}

// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfilePtrOutput) DataDisks() DataDiskArrayOutput {
	return o.ApplyT(func(v *StorageProfile) []DataDisk {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(DataDiskArrayOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
func (o StorageProfilePtrOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v *StorageProfile) *ImageReference {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferencePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfilePtrOutput) OsDisk() OSDiskPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *OSDisk {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(OSDiskPtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileInvokeResponse struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks []DataDiskInvokeResponse `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference *ImageReferenceInvokeResponse `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk *OSDiskInvokeResponse `pulumi:"osDisk"`
}

// StorageProfileInvokeResponseInput is an input type that accepts StorageProfileInvokeResponseArgs and StorageProfileInvokeResponseOutput values.
// You can construct a concrete instance of `StorageProfileInvokeResponseInput` via:
//
//          StorageProfileInvokeResponseArgs{...}
type StorageProfileInvokeResponseInput interface {
	pulumi.Input

	ToStorageProfileInvokeResponseOutput() StorageProfileInvokeResponseOutput
	ToStorageProfileInvokeResponseOutputWithContext(context.Context) StorageProfileInvokeResponseOutput
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileInvokeResponseArgs struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks DataDiskInvokeResponseArrayInput `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference ImageReferenceInvokeResponsePtrInput `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk OSDiskInvokeResponsePtrInput `pulumi:"osDisk"`
}

func (StorageProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileInvokeResponse)(nil)).Elem()
}

func (i StorageProfileInvokeResponseArgs) ToStorageProfileInvokeResponseOutput() StorageProfileInvokeResponseOutput {
	return i.ToStorageProfileInvokeResponseOutputWithContext(context.Background())
}

func (i StorageProfileInvokeResponseArgs) ToStorageProfileInvokeResponseOutputWithContext(ctx context.Context) StorageProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileInvokeResponseOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileInvokeResponse)(nil)).Elem()
}

func (o StorageProfileInvokeResponseOutput) ToStorageProfileInvokeResponseOutput() StorageProfileInvokeResponseOutput {
	return o
}

func (o StorageProfileInvokeResponseOutput) ToStorageProfileInvokeResponseOutputWithContext(ctx context.Context) StorageProfileInvokeResponseOutput {
	return o
}

// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileInvokeResponseOutput) DataDisks() DataDiskInvokeResponseArrayOutput {
	return o.ApplyT(func(v StorageProfileInvokeResponse) []DataDiskInvokeResponse { return v.DataDisks }).(DataDiskInvokeResponseArrayOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
func (o StorageProfileInvokeResponseOutput) ImageReference() ImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileInvokeResponse) *ImageReferenceInvokeResponse { return v.ImageReference }).(ImageReferenceInvokeResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileInvokeResponseOutput) OsDisk() OSDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileInvokeResponse) *OSDiskInvokeResponse { return v.OsDisk }).(OSDiskInvokeResponsePtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileResponse struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks []DataDiskResponse `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference *ImageReferenceResponse `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk *OSDiskResponse `pulumi:"osDisk"`
}

// StorageProfileResponseInput is an input type that accepts StorageProfileResponseArgs and StorageProfileResponseOutput values.
// You can construct a concrete instance of `StorageProfileResponseInput` via:
//
//          StorageProfileResponseArgs{...}
type StorageProfileResponseInput interface {
	pulumi.Input

	ToStorageProfileResponseOutput() StorageProfileResponseOutput
	ToStorageProfileResponseOutputWithContext(context.Context) StorageProfileResponseOutput
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileResponseArgs struct {
	// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	DataDisks DataDiskResponseArrayInput `pulumi:"dataDisks"`
	// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
	ImageReference ImageReferenceResponsePtrInput `pulumi:"imageReference"`
	// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
	OsDisk OSDiskResponsePtrInput `pulumi:"osDisk"`
}

func (StorageProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (i StorageProfileResponseArgs) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return i.ToStorageProfileResponseOutputWithContext(context.Background())
}

func (i StorageProfileResponseArgs) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponseOutput)
}

func (i StorageProfileResponseArgs) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return i.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i StorageProfileResponseArgs) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponseOutput).ToStorageProfileResponsePtrOutputWithContext(ctx)
}

// StorageProfileResponsePtrInput is an input type that accepts StorageProfileResponseArgs, StorageProfileResponsePtr and StorageProfileResponsePtrOutput values.
// You can construct a concrete instance of `StorageProfileResponsePtrInput` via:
//
//          StorageProfileResponseArgs{...}
//
//  or:
//
//          nil
type StorageProfileResponsePtrInput interface {
	pulumi.Input

	ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput
	ToStorageProfileResponsePtrOutputWithContext(context.Context) StorageProfileResponsePtrOutput
}

type storageProfileResponsePtrType StorageProfileResponseArgs

func StorageProfileResponsePtr(v *StorageProfileResponseArgs) StorageProfileResponsePtrInput {
	return (*storageProfileResponsePtrType)(v)
}

func (*storageProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (i *storageProfileResponsePtrType) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return i.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i *storageProfileResponsePtrType) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileResponsePtrOutput)
}

// Specifies the storage settings for the virtual machine disks.
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o.ToStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (o StorageProfileResponseOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *StorageProfileResponse {
		return &v
	}).(StorageProfileResponsePtrOutput)
}

// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileResponseOutput) DataDisks() DataDiskResponseArrayOutput {
	return o.ApplyT(func(v StorageProfileResponse) []DataDiskResponse { return v.DataDisks }).(DataDiskResponseArrayOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
func (o StorageProfileResponseOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *ImageReferenceResponse { return v.ImageReference }).(ImageReferenceResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileResponseOutput) OsDisk() OSDiskResponsePtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *OSDiskResponse { return v.OsDisk }).(OSDiskResponsePtrOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse { return *v }).(StorageProfileResponseOutput)
}

// Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileResponsePtrOutput) DataDisks() DataDiskResponseArrayOutput {
	return o.ApplyT(func(v *StorageProfileResponse) []DataDiskResponse {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(DataDiskResponseArrayOutput)
}

// Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
func (o StorageProfileResponsePtrOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *ImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferenceResponsePtrOutput)
}

// Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
func (o StorageProfileResponsePtrOutput) OsDisk() OSDiskResponsePtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *OSDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(OSDiskResponsePtrOutput)
}

type SubResource struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//          SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

type SubResourceArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//          SubResourceArgs{...}
//
//  or:
//
//          nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//          SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyT(func(v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource Id
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource { return *v }).(SubResourceOutput)
}

// Resource Id
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

type SubResourceInvokeResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// SubResourceInvokeResponseInput is an input type that accepts SubResourceInvokeResponseArgs and SubResourceInvokeResponseOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponseInput` via:
//
//          SubResourceInvokeResponseArgs{...}
type SubResourceInvokeResponseInput interface {
	pulumi.Input

	ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput
	ToSubResourceInvokeResponseOutputWithContext(context.Context) SubResourceInvokeResponseOutput
}

type SubResourceInvokeResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceInvokeResponse)(nil)).Elem()
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput {
	return i.ToSubResourceInvokeResponseOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponseOutputWithContext(ctx context.Context) SubResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseOutput)
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return i.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseOutput).ToSubResourceInvokeResponsePtrOutputWithContext(ctx)
}

// SubResourceInvokeResponsePtrInput is an input type that accepts SubResourceInvokeResponseArgs, SubResourceInvokeResponsePtr and SubResourceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponsePtrInput` via:
//
//          SubResourceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceInvokeResponsePtrInput interface {
	pulumi.Input

	ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput
	ToSubResourceInvokeResponsePtrOutputWithContext(context.Context) SubResourceInvokeResponsePtrOutput
}

type subResourceInvokeResponsePtrType SubResourceInvokeResponseArgs

func SubResourceInvokeResponsePtr(v *SubResourceInvokeResponseArgs) SubResourceInvokeResponsePtrInput {
	return (*subResourceInvokeResponsePtrType)(v)
}

func (*subResourceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceInvokeResponse)(nil)).Elem()
}

func (i *subResourceInvokeResponsePtrType) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return i.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceInvokeResponsePtrType) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponsePtrOutput)
}

// SubResourceInvokeResponseArrayInput is an input type that accepts SubResourceInvokeResponseArray and SubResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponseArrayInput` via:
//
//          SubResourceInvokeResponseArray{ SubResourceInvokeResponseArgs{...} }
type SubResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput
	ToSubResourceInvokeResponseArrayOutputWithContext(context.Context) SubResourceInvokeResponseArrayOutput
}

type SubResourceInvokeResponseArray []SubResourceInvokeResponseInput

func (SubResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceInvokeResponse)(nil)).Elem()
}

func (i SubResourceInvokeResponseArray) ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput {
	return i.ToSubResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArray) ToSubResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SubResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseArrayOutput)
}

type SubResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput {
	return o
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponseOutputWithContext(ctx context.Context) SubResourceInvokeResponseOutput {
	return o
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return o.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubResourceInvokeResponse) *SubResourceInvokeResponse {
		return &v
	}).(SubResourceInvokeResponsePtrOutput)
}

// Resource Id
func (o SubResourceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponsePtrOutput) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return o
}

func (o SubResourceInvokeResponsePtrOutput) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return o
}

func (o SubResourceInvokeResponsePtrOutput) Elem() SubResourceInvokeResponseOutput {
	return o.ApplyT(func(v *SubResourceInvokeResponse) SubResourceInvokeResponse { return *v }).(SubResourceInvokeResponseOutput)
}

// Resource Id
func (o SubResourceInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponseArrayOutput) ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput {
	return o
}

func (o SubResourceInvokeResponseArrayOutput) ToSubResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SubResourceInvokeResponseArrayOutput {
	return o
}

func (o SubResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceInvokeResponse {
		return vs[0].([]SubResourceInvokeResponse)[vs[1].(int)]
	}).(SubResourceInvokeResponseOutput)
}

type SubResourceResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// SubResourceResponseInput is an input type that accepts SubResourceResponseArgs and SubResourceResponseOutput values.
// You can construct a concrete instance of `SubResourceResponseInput` via:
//
//          SubResourceResponseArgs{...}
type SubResourceResponseInput interface {
	pulumi.Input

	ToSubResourceResponseOutput() SubResourceResponseOutput
	ToSubResourceResponseOutputWithContext(context.Context) SubResourceResponseOutput
}

type SubResourceResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return i.ToSubResourceResponseOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput)
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput).ToSubResourceResponsePtrOutputWithContext(ctx)
}

// SubResourceResponsePtrInput is an input type that accepts SubResourceResponseArgs, SubResourceResponsePtr and SubResourceResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceResponsePtrInput` via:
//
//          SubResourceResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceResponsePtrInput interface {
	pulumi.Input

	ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput
	ToSubResourceResponsePtrOutputWithContext(context.Context) SubResourceResponsePtrOutput
}

type subResourceResponsePtrType SubResourceResponseArgs

func SubResourceResponsePtr(v *SubResourceResponseArgs) SubResourceResponsePtrInput {
	return (*subResourceResponsePtrType)(v)
}

func (*subResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponsePtrOutput)
}

// SubResourceResponseArrayInput is an input type that accepts SubResourceResponseArray and SubResourceResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceResponseArrayInput` via:
//
//          SubResourceResponseArray{ SubResourceResponseArgs{...} }
type SubResourceResponseArrayInput interface {
	pulumi.Input

	ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput
	ToSubResourceResponseArrayOutputWithContext(context.Context) SubResourceResponseArrayOutput
}

type SubResourceResponseArray []SubResourceResponseInput

func (SubResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return i.ToSubResourceResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseArrayOutput)
}

type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *SubResourceResponse {
		return &v
	}).(SubResourceResponsePtrOutput)
}

// Resource Id
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse { return *v }).(SubResourceResponseOutput)
}

// Resource Id
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicy struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode *string `pulumi:"mode"`
}

// UpgradePolicyInput is an input type that accepts UpgradePolicyArgs and UpgradePolicyOutput values.
// You can construct a concrete instance of `UpgradePolicyInput` via:
//
//          UpgradePolicyArgs{...}
type UpgradePolicyInput interface {
	pulumi.Input

	ToUpgradePolicyOutput() UpgradePolicyOutput
	ToUpgradePolicyOutputWithContext(context.Context) UpgradePolicyOutput
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyArgs struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode UpgradeMode `pulumi:"mode"`
}

func (UpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicy)(nil)).Elem()
}

func (i UpgradePolicyArgs) ToUpgradePolicyOutput() UpgradePolicyOutput {
	return i.ToUpgradePolicyOutputWithContext(context.Background())
}

func (i UpgradePolicyArgs) ToUpgradePolicyOutputWithContext(ctx context.Context) UpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyOutput)
}

func (i UpgradePolicyArgs) ToUpgradePolicyPtrOutput() UpgradePolicyPtrOutput {
	return i.ToUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i UpgradePolicyArgs) ToUpgradePolicyPtrOutputWithContext(ctx context.Context) UpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyOutput).ToUpgradePolicyPtrOutputWithContext(ctx)
}

// UpgradePolicyPtrInput is an input type that accepts UpgradePolicyArgs, UpgradePolicyPtr and UpgradePolicyPtrOutput values.
// You can construct a concrete instance of `UpgradePolicyPtrInput` via:
//
//          UpgradePolicyArgs{...}
//
//  or:
//
//          nil
type UpgradePolicyPtrInput interface {
	pulumi.Input

	ToUpgradePolicyPtrOutput() UpgradePolicyPtrOutput
	ToUpgradePolicyPtrOutputWithContext(context.Context) UpgradePolicyPtrOutput
}

type upgradePolicyPtrType UpgradePolicyArgs

func UpgradePolicyPtr(v *UpgradePolicyArgs) UpgradePolicyPtrInput {
	return (*upgradePolicyPtrType)(v)
}

func (*upgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradePolicy)(nil)).Elem()
}

func (i *upgradePolicyPtrType) ToUpgradePolicyPtrOutput() UpgradePolicyPtrOutput {
	return i.ToUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *upgradePolicyPtrType) ToUpgradePolicyPtrOutputWithContext(ctx context.Context) UpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyPtrOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyOutput struct{ *pulumi.OutputState }

func (UpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicy)(nil)).Elem()
}

func (o UpgradePolicyOutput) ToUpgradePolicyOutput() UpgradePolicyOutput {
	return o
}

func (o UpgradePolicyOutput) ToUpgradePolicyOutputWithContext(ctx context.Context) UpgradePolicyOutput {
	return o
}

func (o UpgradePolicyOutput) ToUpgradePolicyPtrOutput() UpgradePolicyPtrOutput {
	return o.ToUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o UpgradePolicyOutput) ToUpgradePolicyPtrOutputWithContext(ctx context.Context) UpgradePolicyPtrOutput {
	return o.ApplyT(func(v UpgradePolicy) *UpgradePolicy {
		return &v
	}).(UpgradePolicyPtrOutput)
}

// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
func (o UpgradePolicyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpgradePolicy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type UpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (UpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradePolicy)(nil)).Elem()
}

func (o UpgradePolicyPtrOutput) ToUpgradePolicyPtrOutput() UpgradePolicyPtrOutput {
	return o
}

func (o UpgradePolicyPtrOutput) ToUpgradePolicyPtrOutputWithContext(ctx context.Context) UpgradePolicyPtrOutput {
	return o
}

func (o UpgradePolicyPtrOutput) Elem() UpgradePolicyOutput {
	return o.ApplyT(func(v *UpgradePolicy) UpgradePolicy { return *v }).(UpgradePolicyOutput)
}

// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
func (o UpgradePolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyInvokeResponse struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode *string `pulumi:"mode"`
}

// UpgradePolicyInvokeResponseInput is an input type that accepts UpgradePolicyInvokeResponseArgs and UpgradePolicyInvokeResponseOutput values.
// You can construct a concrete instance of `UpgradePolicyInvokeResponseInput` via:
//
//          UpgradePolicyInvokeResponseArgs{...}
type UpgradePolicyInvokeResponseInput interface {
	pulumi.Input

	ToUpgradePolicyInvokeResponseOutput() UpgradePolicyInvokeResponseOutput
	ToUpgradePolicyInvokeResponseOutputWithContext(context.Context) UpgradePolicyInvokeResponseOutput
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyInvokeResponseArgs struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (UpgradePolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicyInvokeResponse)(nil)).Elem()
}

func (i UpgradePolicyInvokeResponseArgs) ToUpgradePolicyInvokeResponseOutput() UpgradePolicyInvokeResponseOutput {
	return i.ToUpgradePolicyInvokeResponseOutputWithContext(context.Background())
}

func (i UpgradePolicyInvokeResponseArgs) ToUpgradePolicyInvokeResponseOutputWithContext(ctx context.Context) UpgradePolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyInvokeResponseOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (UpgradePolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicyInvokeResponse)(nil)).Elem()
}

func (o UpgradePolicyInvokeResponseOutput) ToUpgradePolicyInvokeResponseOutput() UpgradePolicyInvokeResponseOutput {
	return o
}

func (o UpgradePolicyInvokeResponseOutput) ToUpgradePolicyInvokeResponseOutputWithContext(ctx context.Context) UpgradePolicyInvokeResponseOutput {
	return o
}

// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
func (o UpgradePolicyInvokeResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpgradePolicyInvokeResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyResponse struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode *string `pulumi:"mode"`
}

// UpgradePolicyResponseInput is an input type that accepts UpgradePolicyResponseArgs and UpgradePolicyResponseOutput values.
// You can construct a concrete instance of `UpgradePolicyResponseInput` via:
//
//          UpgradePolicyResponseArgs{...}
type UpgradePolicyResponseInput interface {
	pulumi.Input

	ToUpgradePolicyResponseOutput() UpgradePolicyResponseOutput
	ToUpgradePolicyResponseOutputWithContext(context.Context) UpgradePolicyResponseOutput
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyResponseArgs struct {
	// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (UpgradePolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicyResponse)(nil)).Elem()
}

func (i UpgradePolicyResponseArgs) ToUpgradePolicyResponseOutput() UpgradePolicyResponseOutput {
	return i.ToUpgradePolicyResponseOutputWithContext(context.Background())
}

func (i UpgradePolicyResponseArgs) ToUpgradePolicyResponseOutputWithContext(ctx context.Context) UpgradePolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyResponseOutput)
}

func (i UpgradePolicyResponseArgs) ToUpgradePolicyResponsePtrOutput() UpgradePolicyResponsePtrOutput {
	return i.ToUpgradePolicyResponsePtrOutputWithContext(context.Background())
}

func (i UpgradePolicyResponseArgs) ToUpgradePolicyResponsePtrOutputWithContext(ctx context.Context) UpgradePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyResponseOutput).ToUpgradePolicyResponsePtrOutputWithContext(ctx)
}

// UpgradePolicyResponsePtrInput is an input type that accepts UpgradePolicyResponseArgs, UpgradePolicyResponsePtr and UpgradePolicyResponsePtrOutput values.
// You can construct a concrete instance of `UpgradePolicyResponsePtrInput` via:
//
//          UpgradePolicyResponseArgs{...}
//
//  or:
//
//          nil
type UpgradePolicyResponsePtrInput interface {
	pulumi.Input

	ToUpgradePolicyResponsePtrOutput() UpgradePolicyResponsePtrOutput
	ToUpgradePolicyResponsePtrOutputWithContext(context.Context) UpgradePolicyResponsePtrOutput
}

type upgradePolicyResponsePtrType UpgradePolicyResponseArgs

func UpgradePolicyResponsePtr(v *UpgradePolicyResponseArgs) UpgradePolicyResponsePtrInput {
	return (*upgradePolicyResponsePtrType)(v)
}

func (*upgradePolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradePolicyResponse)(nil)).Elem()
}

func (i *upgradePolicyResponsePtrType) ToUpgradePolicyResponsePtrOutput() UpgradePolicyResponsePtrOutput {
	return i.ToUpgradePolicyResponsePtrOutputWithContext(context.Background())
}

func (i *upgradePolicyResponsePtrType) ToUpgradePolicyResponsePtrOutputWithContext(ctx context.Context) UpgradePolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpgradePolicyResponsePtrOutput)
}

// Describes an upgrade policy - automatic or manual.
type UpgradePolicyResponseOutput struct{ *pulumi.OutputState }

func (UpgradePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradePolicyResponse)(nil)).Elem()
}

func (o UpgradePolicyResponseOutput) ToUpgradePolicyResponseOutput() UpgradePolicyResponseOutput {
	return o
}

func (o UpgradePolicyResponseOutput) ToUpgradePolicyResponseOutputWithContext(ctx context.Context) UpgradePolicyResponseOutput {
	return o
}

func (o UpgradePolicyResponseOutput) ToUpgradePolicyResponsePtrOutput() UpgradePolicyResponsePtrOutput {
	return o.ToUpgradePolicyResponsePtrOutputWithContext(context.Background())
}

func (o UpgradePolicyResponseOutput) ToUpgradePolicyResponsePtrOutputWithContext(ctx context.Context) UpgradePolicyResponsePtrOutput {
	return o.ApplyT(func(v UpgradePolicyResponse) *UpgradePolicyResponse {
		return &v
	}).(UpgradePolicyResponsePtrOutput)
}

// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
func (o UpgradePolicyResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpgradePolicyResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type UpgradePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradePolicyResponse)(nil)).Elem()
}

func (o UpgradePolicyResponsePtrOutput) ToUpgradePolicyResponsePtrOutput() UpgradePolicyResponsePtrOutput {
	return o
}

func (o UpgradePolicyResponsePtrOutput) ToUpgradePolicyResponsePtrOutputWithContext(ctx context.Context) UpgradePolicyResponsePtrOutput {
	return o
}

func (o UpgradePolicyResponsePtrOutput) Elem() UpgradePolicyResponseOutput {
	return o.ApplyT(func(v *UpgradePolicyResponse) UpgradePolicyResponse { return *v }).(UpgradePolicyResponseOutput)
}

// Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
func (o UpgradePolicyResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificate struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore *string `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// VaultCertificateInput is an input type that accepts VaultCertificateArgs and VaultCertificateOutput values.
// You can construct a concrete instance of `VaultCertificateInput` via:
//
//          VaultCertificateArgs{...}
type VaultCertificateInput interface {
	pulumi.Input

	ToVaultCertificateOutput() VaultCertificateOutput
	ToVaultCertificateOutputWithContext(context.Context) VaultCertificateOutput
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateArgs struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
}

func (VaultCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificate)(nil)).Elem()
}

func (i VaultCertificateArgs) ToVaultCertificateOutput() VaultCertificateOutput {
	return i.ToVaultCertificateOutputWithContext(context.Background())
}

func (i VaultCertificateArgs) ToVaultCertificateOutputWithContext(ctx context.Context) VaultCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateOutput)
}

// VaultCertificateArrayInput is an input type that accepts VaultCertificateArray and VaultCertificateArrayOutput values.
// You can construct a concrete instance of `VaultCertificateArrayInput` via:
//
//          VaultCertificateArray{ VaultCertificateArgs{...} }
type VaultCertificateArrayInput interface {
	pulumi.Input

	ToVaultCertificateArrayOutput() VaultCertificateArrayOutput
	ToVaultCertificateArrayOutputWithContext(context.Context) VaultCertificateArrayOutput
}

type VaultCertificateArray []VaultCertificateInput

func (VaultCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificate)(nil)).Elem()
}

func (i VaultCertificateArray) ToVaultCertificateArrayOutput() VaultCertificateArrayOutput {
	return i.ToVaultCertificateArrayOutputWithContext(context.Background())
}

func (i VaultCertificateArray) ToVaultCertificateArrayOutputWithContext(ctx context.Context) VaultCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateArrayOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateOutput struct{ *pulumi.OutputState }

func (VaultCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificate)(nil)).Elem()
}

func (o VaultCertificateOutput) ToVaultCertificateOutput() VaultCertificateOutput {
	return o
}

func (o VaultCertificateOutput) ToVaultCertificateOutputWithContext(ctx context.Context) VaultCertificateOutput {
	return o
}

// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
func (o VaultCertificateOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificate) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o VaultCertificateOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificate) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type VaultCertificateArrayOutput struct{ *pulumi.OutputState }

func (VaultCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificate)(nil)).Elem()
}

func (o VaultCertificateArrayOutput) ToVaultCertificateArrayOutput() VaultCertificateArrayOutput {
	return o
}

func (o VaultCertificateArrayOutput) ToVaultCertificateArrayOutputWithContext(ctx context.Context) VaultCertificateArrayOutput {
	return o
}

func (o VaultCertificateArrayOutput) Index(i pulumi.IntInput) VaultCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultCertificate {
		return vs[0].([]VaultCertificate)[vs[1].(int)]
	}).(VaultCertificateOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateInvokeResponse struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore *string `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// VaultCertificateInvokeResponseInput is an input type that accepts VaultCertificateInvokeResponseArgs and VaultCertificateInvokeResponseOutput values.
// You can construct a concrete instance of `VaultCertificateInvokeResponseInput` via:
//
//          VaultCertificateInvokeResponseArgs{...}
type VaultCertificateInvokeResponseInput interface {
	pulumi.Input

	ToVaultCertificateInvokeResponseOutput() VaultCertificateInvokeResponseOutput
	ToVaultCertificateInvokeResponseOutputWithContext(context.Context) VaultCertificateInvokeResponseOutput
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateInvokeResponseArgs struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
}

func (VaultCertificateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificateInvokeResponse)(nil)).Elem()
}

func (i VaultCertificateInvokeResponseArgs) ToVaultCertificateInvokeResponseOutput() VaultCertificateInvokeResponseOutput {
	return i.ToVaultCertificateInvokeResponseOutputWithContext(context.Background())
}

func (i VaultCertificateInvokeResponseArgs) ToVaultCertificateInvokeResponseOutputWithContext(ctx context.Context) VaultCertificateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateInvokeResponseOutput)
}

// VaultCertificateInvokeResponseArrayInput is an input type that accepts VaultCertificateInvokeResponseArray and VaultCertificateInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VaultCertificateInvokeResponseArrayInput` via:
//
//          VaultCertificateInvokeResponseArray{ VaultCertificateInvokeResponseArgs{...} }
type VaultCertificateInvokeResponseArrayInput interface {
	pulumi.Input

	ToVaultCertificateInvokeResponseArrayOutput() VaultCertificateInvokeResponseArrayOutput
	ToVaultCertificateInvokeResponseArrayOutputWithContext(context.Context) VaultCertificateInvokeResponseArrayOutput
}

type VaultCertificateInvokeResponseArray []VaultCertificateInvokeResponseInput

func (VaultCertificateInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificateInvokeResponse)(nil)).Elem()
}

func (i VaultCertificateInvokeResponseArray) ToVaultCertificateInvokeResponseArrayOutput() VaultCertificateInvokeResponseArrayOutput {
	return i.ToVaultCertificateInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VaultCertificateInvokeResponseArray) ToVaultCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VaultCertificateInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateInvokeResponseArrayOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateInvokeResponseOutput struct{ *pulumi.OutputState }

func (VaultCertificateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificateInvokeResponse)(nil)).Elem()
}

func (o VaultCertificateInvokeResponseOutput) ToVaultCertificateInvokeResponseOutput() VaultCertificateInvokeResponseOutput {
	return o
}

func (o VaultCertificateInvokeResponseOutput) ToVaultCertificateInvokeResponseOutputWithContext(ctx context.Context) VaultCertificateInvokeResponseOutput {
	return o
}

// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
func (o VaultCertificateInvokeResponseOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateInvokeResponse) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o VaultCertificateInvokeResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateInvokeResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type VaultCertificateInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultCertificateInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificateInvokeResponse)(nil)).Elem()
}

func (o VaultCertificateInvokeResponseArrayOutput) ToVaultCertificateInvokeResponseArrayOutput() VaultCertificateInvokeResponseArrayOutput {
	return o
}

func (o VaultCertificateInvokeResponseArrayOutput) ToVaultCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VaultCertificateInvokeResponseArrayOutput {
	return o
}

func (o VaultCertificateInvokeResponseArrayOutput) Index(i pulumi.IntInput) VaultCertificateInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultCertificateInvokeResponse {
		return vs[0].([]VaultCertificateInvokeResponse)[vs[1].(int)]
	}).(VaultCertificateInvokeResponseOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateResponse struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore *string `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// VaultCertificateResponseInput is an input type that accepts VaultCertificateResponseArgs and VaultCertificateResponseOutput values.
// You can construct a concrete instance of `VaultCertificateResponseInput` via:
//
//          VaultCertificateResponseArgs{...}
type VaultCertificateResponseInput interface {
	pulumi.Input

	ToVaultCertificateResponseOutput() VaultCertificateResponseOutput
	ToVaultCertificateResponseOutputWithContext(context.Context) VaultCertificateResponseOutput
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateResponseArgs struct {
	// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
}

func (VaultCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificateResponse)(nil)).Elem()
}

func (i VaultCertificateResponseArgs) ToVaultCertificateResponseOutput() VaultCertificateResponseOutput {
	return i.ToVaultCertificateResponseOutputWithContext(context.Background())
}

func (i VaultCertificateResponseArgs) ToVaultCertificateResponseOutputWithContext(ctx context.Context) VaultCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateResponseOutput)
}

// VaultCertificateResponseArrayInput is an input type that accepts VaultCertificateResponseArray and VaultCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VaultCertificateResponseArrayInput` via:
//
//          VaultCertificateResponseArray{ VaultCertificateResponseArgs{...} }
type VaultCertificateResponseArrayInput interface {
	pulumi.Input

	ToVaultCertificateResponseArrayOutput() VaultCertificateResponseArrayOutput
	ToVaultCertificateResponseArrayOutputWithContext(context.Context) VaultCertificateResponseArrayOutput
}

type VaultCertificateResponseArray []VaultCertificateResponseInput

func (VaultCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificateResponse)(nil)).Elem()
}

func (i VaultCertificateResponseArray) ToVaultCertificateResponseArrayOutput() VaultCertificateResponseArrayOutput {
	return i.ToVaultCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VaultCertificateResponseArray) ToVaultCertificateResponseArrayOutputWithContext(ctx context.Context) VaultCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultCertificateResponseArrayOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
type VaultCertificateResponseOutput struct{ *pulumi.OutputState }

func (VaultCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultCertificateResponse)(nil)).Elem()
}

func (o VaultCertificateResponseOutput) ToVaultCertificateResponseOutput() VaultCertificateResponseOutput {
	return o
}

func (o VaultCertificateResponseOutput) ToVaultCertificateResponseOutputWithContext(ctx context.Context) VaultCertificateResponseOutput {
	return o
}

// For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
func (o VaultCertificateResponseOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateResponse) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o VaultCertificateResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultCertificateResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type VaultCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultCertificateResponse)(nil)).Elem()
}

func (o VaultCertificateResponseArrayOutput) ToVaultCertificateResponseArrayOutput() VaultCertificateResponseArrayOutput {
	return o
}

func (o VaultCertificateResponseArrayOutput) ToVaultCertificateResponseArrayOutputWithContext(ctx context.Context) VaultCertificateResponseArrayOutput {
	return o
}

func (o VaultCertificateResponseArrayOutput) Index(i pulumi.IntInput) VaultCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultCertificateResponse {
		return vs[0].([]VaultCertificateResponse)[vs[1].(int)]
	}).(VaultCertificateResponseOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroup struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault *SubResource `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []VaultCertificate `pulumi:"vaultCertificates"`
}

// VaultSecretGroupInput is an input type that accepts VaultSecretGroupArgs and VaultSecretGroupOutput values.
// You can construct a concrete instance of `VaultSecretGroupInput` via:
//
//          VaultSecretGroupArgs{...}
type VaultSecretGroupInput interface {
	pulumi.Input

	ToVaultSecretGroupOutput() VaultSecretGroupOutput
	ToVaultSecretGroupOutputWithContext(context.Context) VaultSecretGroupOutput
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupArgs struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault SubResourcePtrInput `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates VaultCertificateArrayInput `pulumi:"vaultCertificates"`
}

func (VaultSecretGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroup)(nil)).Elem()
}

func (i VaultSecretGroupArgs) ToVaultSecretGroupOutput() VaultSecretGroupOutput {
	return i.ToVaultSecretGroupOutputWithContext(context.Background())
}

func (i VaultSecretGroupArgs) ToVaultSecretGroupOutputWithContext(ctx context.Context) VaultSecretGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupOutput)
}

// VaultSecretGroupArrayInput is an input type that accepts VaultSecretGroupArray and VaultSecretGroupArrayOutput values.
// You can construct a concrete instance of `VaultSecretGroupArrayInput` via:
//
//          VaultSecretGroupArray{ VaultSecretGroupArgs{...} }
type VaultSecretGroupArrayInput interface {
	pulumi.Input

	ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput
	ToVaultSecretGroupArrayOutputWithContext(context.Context) VaultSecretGroupArrayOutput
}

type VaultSecretGroupArray []VaultSecretGroupInput

func (VaultSecretGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroup)(nil)).Elem()
}

func (i VaultSecretGroupArray) ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput {
	return i.ToVaultSecretGroupArrayOutputWithContext(context.Background())
}

func (i VaultSecretGroupArray) ToVaultSecretGroupArrayOutputWithContext(ctx context.Context) VaultSecretGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupArrayOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroup)(nil)).Elem()
}

func (o VaultSecretGroupOutput) ToVaultSecretGroupOutput() VaultSecretGroupOutput {
	return o
}

func (o VaultSecretGroupOutput) ToVaultSecretGroupOutputWithContext(ctx context.Context) VaultSecretGroupOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
func (o VaultSecretGroupOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v VaultSecretGroup) *SubResource { return v.SourceVault }).(SubResourcePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o VaultSecretGroupOutput) VaultCertificates() VaultCertificateArrayOutput {
	return o.ApplyT(func(v VaultSecretGroup) []VaultCertificate { return v.VaultCertificates }).(VaultCertificateArrayOutput)
}

type VaultSecretGroupArrayOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroup)(nil)).Elem()
}

func (o VaultSecretGroupArrayOutput) ToVaultSecretGroupArrayOutput() VaultSecretGroupArrayOutput {
	return o
}

func (o VaultSecretGroupArrayOutput) ToVaultSecretGroupArrayOutputWithContext(ctx context.Context) VaultSecretGroupArrayOutput {
	return o
}

func (o VaultSecretGroupArrayOutput) Index(i pulumi.IntInput) VaultSecretGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultSecretGroup {
		return vs[0].([]VaultSecretGroup)[vs[1].(int)]
	}).(VaultSecretGroupOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupInvokeResponse struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault *SubResourceInvokeResponse `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []VaultCertificateInvokeResponse `pulumi:"vaultCertificates"`
}

// VaultSecretGroupInvokeResponseInput is an input type that accepts VaultSecretGroupInvokeResponseArgs and VaultSecretGroupInvokeResponseOutput values.
// You can construct a concrete instance of `VaultSecretGroupInvokeResponseInput` via:
//
//          VaultSecretGroupInvokeResponseArgs{...}
type VaultSecretGroupInvokeResponseInput interface {
	pulumi.Input

	ToVaultSecretGroupInvokeResponseOutput() VaultSecretGroupInvokeResponseOutput
	ToVaultSecretGroupInvokeResponseOutputWithContext(context.Context) VaultSecretGroupInvokeResponseOutput
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupInvokeResponseArgs struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault SubResourceInvokeResponsePtrInput `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates VaultCertificateInvokeResponseArrayInput `pulumi:"vaultCertificates"`
}

func (VaultSecretGroupInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroupInvokeResponse)(nil)).Elem()
}

func (i VaultSecretGroupInvokeResponseArgs) ToVaultSecretGroupInvokeResponseOutput() VaultSecretGroupInvokeResponseOutput {
	return i.ToVaultSecretGroupInvokeResponseOutputWithContext(context.Background())
}

func (i VaultSecretGroupInvokeResponseArgs) ToVaultSecretGroupInvokeResponseOutputWithContext(ctx context.Context) VaultSecretGroupInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupInvokeResponseOutput)
}

// VaultSecretGroupInvokeResponseArrayInput is an input type that accepts VaultSecretGroupInvokeResponseArray and VaultSecretGroupInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VaultSecretGroupInvokeResponseArrayInput` via:
//
//          VaultSecretGroupInvokeResponseArray{ VaultSecretGroupInvokeResponseArgs{...} }
type VaultSecretGroupInvokeResponseArrayInput interface {
	pulumi.Input

	ToVaultSecretGroupInvokeResponseArrayOutput() VaultSecretGroupInvokeResponseArrayOutput
	ToVaultSecretGroupInvokeResponseArrayOutputWithContext(context.Context) VaultSecretGroupInvokeResponseArrayOutput
}

type VaultSecretGroupInvokeResponseArray []VaultSecretGroupInvokeResponseInput

func (VaultSecretGroupInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroupInvokeResponse)(nil)).Elem()
}

func (i VaultSecretGroupInvokeResponseArray) ToVaultSecretGroupInvokeResponseArrayOutput() VaultSecretGroupInvokeResponseArrayOutput {
	return i.ToVaultSecretGroupInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VaultSecretGroupInvokeResponseArray) ToVaultSecretGroupInvokeResponseArrayOutputWithContext(ctx context.Context) VaultSecretGroupInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupInvokeResponseArrayOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupInvokeResponseOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroupInvokeResponse)(nil)).Elem()
}

func (o VaultSecretGroupInvokeResponseOutput) ToVaultSecretGroupInvokeResponseOutput() VaultSecretGroupInvokeResponseOutput {
	return o
}

func (o VaultSecretGroupInvokeResponseOutput) ToVaultSecretGroupInvokeResponseOutputWithContext(ctx context.Context) VaultSecretGroupInvokeResponseOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
func (o VaultSecretGroupInvokeResponseOutput) SourceVault() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VaultSecretGroupInvokeResponse) *SubResourceInvokeResponse { return v.SourceVault }).(SubResourceInvokeResponsePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o VaultSecretGroupInvokeResponseOutput) VaultCertificates() VaultCertificateInvokeResponseArrayOutput {
	return o.ApplyT(func(v VaultSecretGroupInvokeResponse) []VaultCertificateInvokeResponse { return v.VaultCertificates }).(VaultCertificateInvokeResponseArrayOutput)
}

type VaultSecretGroupInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroupInvokeResponse)(nil)).Elem()
}

func (o VaultSecretGroupInvokeResponseArrayOutput) ToVaultSecretGroupInvokeResponseArrayOutput() VaultSecretGroupInvokeResponseArrayOutput {
	return o
}

func (o VaultSecretGroupInvokeResponseArrayOutput) ToVaultSecretGroupInvokeResponseArrayOutputWithContext(ctx context.Context) VaultSecretGroupInvokeResponseArrayOutput {
	return o
}

func (o VaultSecretGroupInvokeResponseArrayOutput) Index(i pulumi.IntInput) VaultSecretGroupInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultSecretGroupInvokeResponse {
		return vs[0].([]VaultSecretGroupInvokeResponse)[vs[1].(int)]
	}).(VaultSecretGroupInvokeResponseOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupResponse struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault *SubResourceResponse `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []VaultCertificateResponse `pulumi:"vaultCertificates"`
}

// VaultSecretGroupResponseInput is an input type that accepts VaultSecretGroupResponseArgs and VaultSecretGroupResponseOutput values.
// You can construct a concrete instance of `VaultSecretGroupResponseInput` via:
//
//          VaultSecretGroupResponseArgs{...}
type VaultSecretGroupResponseInput interface {
	pulumi.Input

	ToVaultSecretGroupResponseOutput() VaultSecretGroupResponseOutput
	ToVaultSecretGroupResponseOutputWithContext(context.Context) VaultSecretGroupResponseOutput
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupResponseArgs struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault SubResourceResponsePtrInput `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates VaultCertificateResponseArrayInput `pulumi:"vaultCertificates"`
}

func (VaultSecretGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroupResponse)(nil)).Elem()
}

func (i VaultSecretGroupResponseArgs) ToVaultSecretGroupResponseOutput() VaultSecretGroupResponseOutput {
	return i.ToVaultSecretGroupResponseOutputWithContext(context.Background())
}

func (i VaultSecretGroupResponseArgs) ToVaultSecretGroupResponseOutputWithContext(ctx context.Context) VaultSecretGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupResponseOutput)
}

// VaultSecretGroupResponseArrayInput is an input type that accepts VaultSecretGroupResponseArray and VaultSecretGroupResponseArrayOutput values.
// You can construct a concrete instance of `VaultSecretGroupResponseArrayInput` via:
//
//          VaultSecretGroupResponseArray{ VaultSecretGroupResponseArgs{...} }
type VaultSecretGroupResponseArrayInput interface {
	pulumi.Input

	ToVaultSecretGroupResponseArrayOutput() VaultSecretGroupResponseArrayOutput
	ToVaultSecretGroupResponseArrayOutputWithContext(context.Context) VaultSecretGroupResponseArrayOutput
}

type VaultSecretGroupResponseArray []VaultSecretGroupResponseInput

func (VaultSecretGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroupResponse)(nil)).Elem()
}

func (i VaultSecretGroupResponseArray) ToVaultSecretGroupResponseArrayOutput() VaultSecretGroupResponseArrayOutput {
	return i.ToVaultSecretGroupResponseArrayOutputWithContext(context.Background())
}

func (i VaultSecretGroupResponseArray) ToVaultSecretGroupResponseArrayOutputWithContext(ctx context.Context) VaultSecretGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultSecretGroupResponseArrayOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type VaultSecretGroupResponseOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultSecretGroupResponse)(nil)).Elem()
}

func (o VaultSecretGroupResponseOutput) ToVaultSecretGroupResponseOutput() VaultSecretGroupResponseOutput {
	return o
}

func (o VaultSecretGroupResponseOutput) ToVaultSecretGroupResponseOutputWithContext(ctx context.Context) VaultSecretGroupResponseOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
func (o VaultSecretGroupResponseOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VaultSecretGroupResponse) *SubResourceResponse { return v.SourceVault }).(SubResourceResponsePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o VaultSecretGroupResponseOutput) VaultCertificates() VaultCertificateResponseArrayOutput {
	return o.ApplyT(func(v VaultSecretGroupResponse) []VaultCertificateResponse { return v.VaultCertificates }).(VaultCertificateResponseArrayOutput)
}

type VaultSecretGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (VaultSecretGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VaultSecretGroupResponse)(nil)).Elem()
}

func (o VaultSecretGroupResponseArrayOutput) ToVaultSecretGroupResponseArrayOutput() VaultSecretGroupResponseArrayOutput {
	return o
}

func (o VaultSecretGroupResponseArrayOutput) ToVaultSecretGroupResponseArrayOutputWithContext(ctx context.Context) VaultSecretGroupResponseArrayOutput {
	return o
}

func (o VaultSecretGroupResponseArrayOutput) Index(i pulumi.IntInput) VaultSecretGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VaultSecretGroupResponse {
		return vs[0].([]VaultSecretGroupResponse)[vs[1].(int)]
	}).(VaultSecretGroupResponseOutput)
}

// Describes the uri of a disk.
type VirtualHardDisk struct {
	// Specifies the virtual hard disk's uri.
	Uri *string `pulumi:"uri"`
}

// VirtualHardDiskInput is an input type that accepts VirtualHardDiskArgs and VirtualHardDiskOutput values.
// You can construct a concrete instance of `VirtualHardDiskInput` via:
//
//          VirtualHardDiskArgs{...}
type VirtualHardDiskInput interface {
	pulumi.Input

	ToVirtualHardDiskOutput() VirtualHardDiskOutput
	ToVirtualHardDiskOutputWithContext(context.Context) VirtualHardDiskOutput
}

// Describes the uri of a disk.
type VirtualHardDiskArgs struct {
	// Specifies the virtual hard disk's uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualHardDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDisk)(nil)).Elem()
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskOutput() VirtualHardDiskOutput {
	return i.ToVirtualHardDiskOutputWithContext(context.Background())
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskOutputWithContext(ctx context.Context) VirtualHardDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskOutput)
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return i.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (i VirtualHardDiskArgs) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskOutput).ToVirtualHardDiskPtrOutputWithContext(ctx)
}

// VirtualHardDiskPtrInput is an input type that accepts VirtualHardDiskArgs, VirtualHardDiskPtr and VirtualHardDiskPtrOutput values.
// You can construct a concrete instance of `VirtualHardDiskPtrInput` via:
//
//          VirtualHardDiskArgs{...}
//
//  or:
//
//          nil
type VirtualHardDiskPtrInput interface {
	pulumi.Input

	ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput
	ToVirtualHardDiskPtrOutputWithContext(context.Context) VirtualHardDiskPtrOutput
}

type virtualHardDiskPtrType VirtualHardDiskArgs

func VirtualHardDiskPtr(v *VirtualHardDiskArgs) VirtualHardDiskPtrInput {
	return (*virtualHardDiskPtrType)(v)
}

func (*virtualHardDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDisk)(nil)).Elem()
}

func (i *virtualHardDiskPtrType) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return i.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (i *virtualHardDiskPtrType) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskPtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDisk)(nil)).Elem()
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskOutput() VirtualHardDiskOutput {
	return o
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskOutputWithContext(ctx context.Context) VirtualHardDiskOutput {
	return o
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return o.ToVirtualHardDiskPtrOutputWithContext(context.Background())
}

func (o VirtualHardDiskOutput) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v VirtualHardDisk) *VirtualHardDisk {
		return &v
	}).(VirtualHardDiskPtrOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDisk) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDisk)(nil)).Elem()
}

func (o VirtualHardDiskPtrOutput) ToVirtualHardDiskPtrOutput() VirtualHardDiskPtrOutput {
	return o
}

func (o VirtualHardDiskPtrOutput) ToVirtualHardDiskPtrOutputWithContext(ctx context.Context) VirtualHardDiskPtrOutput {
	return o
}

func (o VirtualHardDiskPtrOutput) Elem() VirtualHardDiskOutput {
	return o.ApplyT(func(v *VirtualHardDisk) VirtualHardDisk { return *v }).(VirtualHardDiskOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDisk) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskInvokeResponse struct {
	// Specifies the virtual hard disk's uri.
	Uri *string `pulumi:"uri"`
}

// VirtualHardDiskInvokeResponseInput is an input type that accepts VirtualHardDiskInvokeResponseArgs and VirtualHardDiskInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualHardDiskInvokeResponseInput` via:
//
//          VirtualHardDiskInvokeResponseArgs{...}
type VirtualHardDiskInvokeResponseInput interface {
	pulumi.Input

	ToVirtualHardDiskInvokeResponseOutput() VirtualHardDiskInvokeResponseOutput
	ToVirtualHardDiskInvokeResponseOutputWithContext(context.Context) VirtualHardDiskInvokeResponseOutput
}

// Describes the uri of a disk.
type VirtualHardDiskInvokeResponseArgs struct {
	// Specifies the virtual hard disk's uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualHardDiskInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskInvokeResponse)(nil)).Elem()
}

func (i VirtualHardDiskInvokeResponseArgs) ToVirtualHardDiskInvokeResponseOutput() VirtualHardDiskInvokeResponseOutput {
	return i.ToVirtualHardDiskInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualHardDiskInvokeResponseArgs) ToVirtualHardDiskInvokeResponseOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskInvokeResponseOutput)
}

func (i VirtualHardDiskInvokeResponseArgs) ToVirtualHardDiskInvokeResponsePtrOutput() VirtualHardDiskInvokeResponsePtrOutput {
	return i.ToVirtualHardDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHardDiskInvokeResponseArgs) ToVirtualHardDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskInvokeResponseOutput).ToVirtualHardDiskInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualHardDiskInvokeResponsePtrInput is an input type that accepts VirtualHardDiskInvokeResponseArgs, VirtualHardDiskInvokeResponsePtr and VirtualHardDiskInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHardDiskInvokeResponsePtrInput` via:
//
//          VirtualHardDiskInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHardDiskInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualHardDiskInvokeResponsePtrOutput() VirtualHardDiskInvokeResponsePtrOutput
	ToVirtualHardDiskInvokeResponsePtrOutputWithContext(context.Context) VirtualHardDiskInvokeResponsePtrOutput
}

type virtualHardDiskInvokeResponsePtrType VirtualHardDiskInvokeResponseArgs

func VirtualHardDiskInvokeResponsePtr(v *VirtualHardDiskInvokeResponseArgs) VirtualHardDiskInvokeResponsePtrInput {
	return (*virtualHardDiskInvokeResponsePtrType)(v)
}

func (*virtualHardDiskInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskInvokeResponse)(nil)).Elem()
}

func (i *virtualHardDiskInvokeResponsePtrType) ToVirtualHardDiskInvokeResponsePtrOutput() VirtualHardDiskInvokeResponsePtrOutput {
	return i.ToVirtualHardDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHardDiskInvokeResponsePtrType) ToVirtualHardDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskInvokeResponsePtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskInvokeResponse)(nil)).Elem()
}

func (o VirtualHardDiskInvokeResponseOutput) ToVirtualHardDiskInvokeResponseOutput() VirtualHardDiskInvokeResponseOutput {
	return o
}

func (o VirtualHardDiskInvokeResponseOutput) ToVirtualHardDiskInvokeResponseOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponseOutput {
	return o
}

func (o VirtualHardDiskInvokeResponseOutput) ToVirtualHardDiskInvokeResponsePtrOutput() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ToVirtualHardDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHardDiskInvokeResponseOutput) ToVirtualHardDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualHardDiskInvokeResponse) *VirtualHardDiskInvokeResponse {
		return &v
	}).(VirtualHardDiskInvokeResponsePtrOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskInvokeResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskInvokeResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskInvokeResponse)(nil)).Elem()
}

func (o VirtualHardDiskInvokeResponsePtrOutput) ToVirtualHardDiskInvokeResponsePtrOutput() VirtualHardDiskInvokeResponsePtrOutput {
	return o
}

func (o VirtualHardDiskInvokeResponsePtrOutput) ToVirtualHardDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskInvokeResponsePtrOutput {
	return o
}

func (o VirtualHardDiskInvokeResponsePtrOutput) Elem() VirtualHardDiskInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskInvokeResponse) VirtualHardDiskInvokeResponse { return *v }).(VirtualHardDiskInvokeResponseOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskInvokeResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskResponse struct {
	// Specifies the virtual hard disk's uri.
	Uri *string `pulumi:"uri"`
}

// VirtualHardDiskResponseInput is an input type that accepts VirtualHardDiskResponseArgs and VirtualHardDiskResponseOutput values.
// You can construct a concrete instance of `VirtualHardDiskResponseInput` via:
//
//          VirtualHardDiskResponseArgs{...}
type VirtualHardDiskResponseInput interface {
	pulumi.Input

	ToVirtualHardDiskResponseOutput() VirtualHardDiskResponseOutput
	ToVirtualHardDiskResponseOutputWithContext(context.Context) VirtualHardDiskResponseOutput
}

// Describes the uri of a disk.
type VirtualHardDiskResponseArgs struct {
	// Specifies the virtual hard disk's uri.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (VirtualHardDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskResponse)(nil)).Elem()
}

func (i VirtualHardDiskResponseArgs) ToVirtualHardDiskResponseOutput() VirtualHardDiskResponseOutput {
	return i.ToVirtualHardDiskResponseOutputWithContext(context.Background())
}

func (i VirtualHardDiskResponseArgs) ToVirtualHardDiskResponseOutputWithContext(ctx context.Context) VirtualHardDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskResponseOutput)
}

func (i VirtualHardDiskResponseArgs) ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput {
	return i.ToVirtualHardDiskResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHardDiskResponseArgs) ToVirtualHardDiskResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskResponseOutput).ToVirtualHardDiskResponsePtrOutputWithContext(ctx)
}

// VirtualHardDiskResponsePtrInput is an input type that accepts VirtualHardDiskResponseArgs, VirtualHardDiskResponsePtr and VirtualHardDiskResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHardDiskResponsePtrInput` via:
//
//          VirtualHardDiskResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHardDiskResponsePtrInput interface {
	pulumi.Input

	ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput
	ToVirtualHardDiskResponsePtrOutputWithContext(context.Context) VirtualHardDiskResponsePtrOutput
}

type virtualHardDiskResponsePtrType VirtualHardDiskResponseArgs

func VirtualHardDiskResponsePtr(v *VirtualHardDiskResponseArgs) VirtualHardDiskResponsePtrInput {
	return (*virtualHardDiskResponsePtrType)(v)
}

func (*virtualHardDiskResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskResponse)(nil)).Elem()
}

func (i *virtualHardDiskResponsePtrType) ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput {
	return i.ToVirtualHardDiskResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHardDiskResponsePtrType) ToVirtualHardDiskResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskResponsePtrOutput)
}

// Describes the uri of a disk.
type VirtualHardDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskResponse)(nil)).Elem()
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponseOutput() VirtualHardDiskResponseOutput {
	return o
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponseOutputWithContext(ctx context.Context) VirtualHardDiskResponseOutput {
	return o
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput {
	return o.ToVirtualHardDiskResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHardDiskResponseOutput) ToVirtualHardDiskResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualHardDiskResponse) *VirtualHardDiskResponse {
		return &v
	}).(VirtualHardDiskResponsePtrOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskResponse)(nil)).Elem()
}

func (o VirtualHardDiskResponsePtrOutput) ToVirtualHardDiskResponsePtrOutput() VirtualHardDiskResponsePtrOutput {
	return o
}

func (o VirtualHardDiskResponsePtrOutput) ToVirtualHardDiskResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskResponsePtrOutput {
	return o
}

func (o VirtualHardDiskResponsePtrOutput) Elem() VirtualHardDiskResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskResponse) VirtualHardDiskResponse { return *v }).(VirtualHardDiskResponseOutput)
}

// Specifies the virtual hard disk's uri.
func (o VirtualHardDiskResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewInvokeResponse struct {
	// The virtual machine extension handler instance view.
	ExtensionHandlers []VirtualMachineExtensionHandlerInstanceViewInvokeResponse `pulumi:"extensionHandlers"`
	// The resource status information.
	Statuses []InstanceViewStatusInvokeResponse `pulumi:"statuses"`
	// The VM Agent full version.
	VmAgentVersion *string `pulumi:"vmAgentVersion"`
}

// VirtualMachineAgentInstanceViewInvokeResponseInput is an input type that accepts VirtualMachineAgentInstanceViewInvokeResponseArgs and VirtualMachineAgentInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineAgentInstanceViewInvokeResponseInput` via:
//
//          VirtualMachineAgentInstanceViewInvokeResponseArgs{...}
type VirtualMachineAgentInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineAgentInstanceViewInvokeResponseOutput() VirtualMachineAgentInstanceViewInvokeResponseOutput
	ToVirtualMachineAgentInstanceViewInvokeResponseOutputWithContext(context.Context) VirtualMachineAgentInstanceViewInvokeResponseOutput
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewInvokeResponseArgs struct {
	// The virtual machine extension handler instance view.
	ExtensionHandlers VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayInput `pulumi:"extensionHandlers"`
	// The resource status information.
	Statuses InstanceViewStatusInvokeResponseArrayInput `pulumi:"statuses"`
	// The VM Agent full version.
	VmAgentVersion pulumi.StringPtrInput `pulumi:"vmAgentVersion"`
}

func (VirtualMachineAgentInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgentInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineAgentInstanceViewInvokeResponseArgs) ToVirtualMachineAgentInstanceViewInvokeResponseOutput() VirtualMachineAgentInstanceViewInvokeResponseOutput {
	return i.ToVirtualMachineAgentInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineAgentInstanceViewInvokeResponseArgs) ToVirtualMachineAgentInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewInvokeResponseOutput)
}

func (i VirtualMachineAgentInstanceViewInvokeResponseArgs) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutput() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return i.ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineAgentInstanceViewInvokeResponseArgs) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewInvokeResponseOutput).ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineAgentInstanceViewInvokeResponsePtrInput is an input type that accepts VirtualMachineAgentInstanceViewInvokeResponseArgs, VirtualMachineAgentInstanceViewInvokeResponsePtr and VirtualMachineAgentInstanceViewInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineAgentInstanceViewInvokeResponsePtrInput` via:
//
//          VirtualMachineAgentInstanceViewInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineAgentInstanceViewInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutput() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput
	ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineAgentInstanceViewInvokeResponsePtrOutput
}

type virtualMachineAgentInstanceViewInvokeResponsePtrType VirtualMachineAgentInstanceViewInvokeResponseArgs

func VirtualMachineAgentInstanceViewInvokeResponsePtr(v *VirtualMachineAgentInstanceViewInvokeResponseArgs) VirtualMachineAgentInstanceViewInvokeResponsePtrInput {
	return (*virtualMachineAgentInstanceViewInvokeResponsePtrType)(v)
}

func (*virtualMachineAgentInstanceViewInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgentInstanceViewInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineAgentInstanceViewInvokeResponsePtrType) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutput() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return i.ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineAgentInstanceViewInvokeResponsePtrType) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewInvokeResponsePtrOutput)
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgentInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) ToVirtualMachineAgentInstanceViewInvokeResponseOutput() VirtualMachineAgentInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) ToVirtualMachineAgentInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutput() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return o.ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewInvokeResponse) *VirtualMachineAgentInstanceViewInvokeResponse {
		return &v
	}).(VirtualMachineAgentInstanceViewInvokeResponsePtrOutput)
}

// The virtual machine extension handler instance view.
func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) ExtensionHandlers() VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewInvokeResponse) []VirtualMachineExtensionHandlerInstanceViewInvokeResponse {
		return v.ExtensionHandlers
	}).(VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		return v.Statuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// The VM Agent full version.
func (o VirtualMachineAgentInstanceViewInvokeResponseOutput) VmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewInvokeResponse) *string { return v.VmAgentVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineAgentInstanceViewInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgentInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutput() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) ToVirtualMachineAgentInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) Elem() VirtualMachineAgentInstanceViewInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewInvokeResponse) VirtualMachineAgentInstanceViewInvokeResponse {
		return *v
	}).(VirtualMachineAgentInstanceViewInvokeResponseOutput)
}

// The virtual machine extension handler instance view.
func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) ExtensionHandlers() VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewInvokeResponse) []VirtualMachineExtensionHandlerInstanceViewInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ExtensionHandlers
	}).(VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// The VM Agent full version.
func (o VirtualMachineAgentInstanceViewInvokeResponsePtrOutput) VmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewResponse struct {
	// The virtual machine extension handler instance view.
	ExtensionHandlers []VirtualMachineExtensionHandlerInstanceViewResponse `pulumi:"extensionHandlers"`
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
	// The VM Agent full version.
	VmAgentVersion *string `pulumi:"vmAgentVersion"`
}

// VirtualMachineAgentInstanceViewResponseInput is an input type that accepts VirtualMachineAgentInstanceViewResponseArgs and VirtualMachineAgentInstanceViewResponseOutput values.
// You can construct a concrete instance of `VirtualMachineAgentInstanceViewResponseInput` via:
//
//          VirtualMachineAgentInstanceViewResponseArgs{...}
type VirtualMachineAgentInstanceViewResponseInput interface {
	pulumi.Input

	ToVirtualMachineAgentInstanceViewResponseOutput() VirtualMachineAgentInstanceViewResponseOutput
	ToVirtualMachineAgentInstanceViewResponseOutputWithContext(context.Context) VirtualMachineAgentInstanceViewResponseOutput
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewResponseArgs struct {
	// The virtual machine extension handler instance view.
	ExtensionHandlers VirtualMachineExtensionHandlerInstanceViewResponseArrayInput `pulumi:"extensionHandlers"`
	// The resource status information.
	Statuses InstanceViewStatusResponseArrayInput `pulumi:"statuses"`
	// The VM Agent full version.
	VmAgentVersion pulumi.StringPtrInput `pulumi:"vmAgentVersion"`
}

func (VirtualMachineAgentInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgentInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineAgentInstanceViewResponseArgs) ToVirtualMachineAgentInstanceViewResponseOutput() VirtualMachineAgentInstanceViewResponseOutput {
	return i.ToVirtualMachineAgentInstanceViewResponseOutputWithContext(context.Background())
}

func (i VirtualMachineAgentInstanceViewResponseArgs) ToVirtualMachineAgentInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewResponseOutput)
}

func (i VirtualMachineAgentInstanceViewResponseArgs) ToVirtualMachineAgentInstanceViewResponsePtrOutput() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineAgentInstanceViewResponseArgs) ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewResponseOutput).ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(ctx)
}

// VirtualMachineAgentInstanceViewResponsePtrInput is an input type that accepts VirtualMachineAgentInstanceViewResponseArgs, VirtualMachineAgentInstanceViewResponsePtr and VirtualMachineAgentInstanceViewResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineAgentInstanceViewResponsePtrInput` via:
//
//          VirtualMachineAgentInstanceViewResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineAgentInstanceViewResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineAgentInstanceViewResponsePtrOutput() VirtualMachineAgentInstanceViewResponsePtrOutput
	ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(context.Context) VirtualMachineAgentInstanceViewResponsePtrOutput
}

type virtualMachineAgentInstanceViewResponsePtrType VirtualMachineAgentInstanceViewResponseArgs

func VirtualMachineAgentInstanceViewResponsePtr(v *VirtualMachineAgentInstanceViewResponseArgs) VirtualMachineAgentInstanceViewResponsePtrInput {
	return (*virtualMachineAgentInstanceViewResponsePtrType)(v)
}

func (*virtualMachineAgentInstanceViewResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgentInstanceViewResponse)(nil)).Elem()
}

func (i *virtualMachineAgentInstanceViewResponsePtrType) ToVirtualMachineAgentInstanceViewResponsePtrOutput() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineAgentInstanceViewResponsePtrType) ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAgentInstanceViewResponsePtrOutput)
}

// The instance view of the VM Agent running on the virtual machine.
type VirtualMachineAgentInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAgentInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineAgentInstanceViewResponseOutput) ToVirtualMachineAgentInstanceViewResponseOutput() VirtualMachineAgentInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewResponseOutput) ToVirtualMachineAgentInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewResponseOutput) ToVirtualMachineAgentInstanceViewResponsePtrOutput() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o.ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineAgentInstanceViewResponseOutput) ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewResponse) *VirtualMachineAgentInstanceViewResponse {
		return &v
	}).(VirtualMachineAgentInstanceViewResponsePtrOutput)
}

// The virtual machine extension handler instance view.
func (o VirtualMachineAgentInstanceViewResponseOutput) ExtensionHandlers() VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewResponse) []VirtualMachineExtensionHandlerInstanceViewResponse {
		return v.ExtensionHandlers
	}).(VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineAgentInstanceViewResponseOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewResponse) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// The VM Agent full version.
func (o VirtualMachineAgentInstanceViewResponseOutput) VmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAgentInstanceViewResponse) *string { return v.VmAgentVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineAgentInstanceViewResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAgentInstanceViewResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAgentInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineAgentInstanceViewResponsePtrOutput) ToVirtualMachineAgentInstanceViewResponsePtrOutput() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewResponsePtrOutput) ToVirtualMachineAgentInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineAgentInstanceViewResponsePtrOutput) Elem() VirtualMachineAgentInstanceViewResponseOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewResponse) VirtualMachineAgentInstanceViewResponse { return *v }).(VirtualMachineAgentInstanceViewResponseOutput)
}

// The virtual machine extension handler instance view.
func (o VirtualMachineAgentInstanceViewResponsePtrOutput) ExtensionHandlers() VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewResponse) []VirtualMachineExtensionHandlerInstanceViewResponse {
		if v == nil {
			return nil
		}
		return v.ExtensionHandlers
	}).(VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineAgentInstanceViewResponsePtrOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewResponse) []InstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusResponseArrayOutput)
}

// The VM Agent full version.
func (o VirtualMachineAgentInstanceViewResponsePtrOutput) VmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAgentInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewInvokeResponse struct {
	// The extension handler status.
	Status *InstanceViewStatusInvokeResponse `pulumi:"status"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionHandlerInstanceViewInvokeResponseInput is an input type that accepts VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs and VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionHandlerInstanceViewInvokeResponseInput` via:
//
//          VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs{...}
type VirtualMachineExtensionHandlerInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput
	ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutputWithContext(context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs struct {
	// The extension handler status.
	Status InstanceViewStatusInvokeResponsePtrInput `pulumi:"status"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionHandlerInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput {
	return i.ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput)
}

// VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayInput is an input type that accepts VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray and VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayInput` via:
//
//          VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray{ VirtualMachineExtensionHandlerInstanceViewInvokeResponseArgs{...} }
type VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput
	ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput
}

type VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray []VirtualMachineExtensionHandlerInstanceViewInvokeResponseInput

func (VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionHandlerInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return i.ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionHandlerInstanceViewInvokeResponseArray) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput)
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionHandlerInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput {
	return o
}

// The extension handler status.
func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) Status() InstanceViewStatusInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewInvokeResponse) *InstanceViewStatusInvokeResponse {
		return v.Status
	}).(InstanceViewStatusInvokeResponsePtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewInvokeResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionHandlerInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput) ToVirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionHandlerInstanceViewInvokeResponse {
		return vs[0].([]VirtualMachineExtensionHandlerInstanceViewInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput)
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewResponse struct {
	// The extension handler status.
	Status *InstanceViewStatusResponse `pulumi:"status"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionHandlerInstanceViewResponseInput is an input type that accepts VirtualMachineExtensionHandlerInstanceViewResponseArgs and VirtualMachineExtensionHandlerInstanceViewResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionHandlerInstanceViewResponseInput` via:
//
//          VirtualMachineExtensionHandlerInstanceViewResponseArgs{...}
type VirtualMachineExtensionHandlerInstanceViewResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionHandlerInstanceViewResponseOutput() VirtualMachineExtensionHandlerInstanceViewResponseOutput
	ToVirtualMachineExtensionHandlerInstanceViewResponseOutputWithContext(context.Context) VirtualMachineExtensionHandlerInstanceViewResponseOutput
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewResponseArgs struct {
	// The extension handler status.
	Status InstanceViewStatusResponsePtrInput `pulumi:"status"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionHandlerInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionHandlerInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionHandlerInstanceViewResponseArgs) ToVirtualMachineExtensionHandlerInstanceViewResponseOutput() VirtualMachineExtensionHandlerInstanceViewResponseOutput {
	return i.ToVirtualMachineExtensionHandlerInstanceViewResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionHandlerInstanceViewResponseArgs) ToVirtualMachineExtensionHandlerInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionHandlerInstanceViewResponseOutput)
}

// VirtualMachineExtensionHandlerInstanceViewResponseArrayInput is an input type that accepts VirtualMachineExtensionHandlerInstanceViewResponseArray and VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionHandlerInstanceViewResponseArrayInput` via:
//
//          VirtualMachineExtensionHandlerInstanceViewResponseArray{ VirtualMachineExtensionHandlerInstanceViewResponseArgs{...} }
type VirtualMachineExtensionHandlerInstanceViewResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput
	ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput
}

type VirtualMachineExtensionHandlerInstanceViewResponseArray []VirtualMachineExtensionHandlerInstanceViewResponseInput

func (VirtualMachineExtensionHandlerInstanceViewResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionHandlerInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionHandlerInstanceViewResponseArray) ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return i.ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionHandlerInstanceViewResponseArray) ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput)
}

// The instance view of a virtual machine extension handler.
type VirtualMachineExtensionHandlerInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionHandlerInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionHandlerInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionHandlerInstanceViewResponseOutput) ToVirtualMachineExtensionHandlerInstanceViewResponseOutput() VirtualMachineExtensionHandlerInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewResponseOutput) ToVirtualMachineExtensionHandlerInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewResponseOutput {
	return o
}

// The extension handler status.
func (o VirtualMachineExtensionHandlerInstanceViewResponseOutput) Status() InstanceViewStatusResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewResponse) *InstanceViewStatusResponse {
		return v.Status
	}).(InstanceViewStatusResponsePtrOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionHandlerInstanceViewResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionHandlerInstanceViewResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionHandlerInstanceViewResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionHandlerInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput) ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutput() VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput) ToVirtualMachineExtensionHandlerInstanceViewResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionHandlerInstanceViewResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionHandlerInstanceViewResponse {
		return vs[0].([]VirtualMachineExtensionHandlerInstanceViewResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionHandlerInstanceViewResponseOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceView struct {
	// The virtual machine extension name.
	Name *string `pulumi:"name"`
	// The resource status information.
	Statuses []InstanceViewStatus `pulumi:"statuses"`
	// The resource status information.
	Substatuses []InstanceViewStatus `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionInstanceViewInput is an input type that accepts VirtualMachineExtensionInstanceViewArgs and VirtualMachineExtensionInstanceViewOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewInput` via:
//
//          VirtualMachineExtensionInstanceViewArgs{...}
type VirtualMachineExtensionInstanceViewInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewOutput() VirtualMachineExtensionInstanceViewOutput
	ToVirtualMachineExtensionInstanceViewOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewOutput
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewArgs struct {
	// The virtual machine extension name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource status information.
	Statuses InstanceViewStatusArrayInput `pulumi:"statuses"`
	// The resource status information.
	Substatuses InstanceViewStatusArrayInput `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionInstanceViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceView)(nil)).Elem()
}

func (i VirtualMachineExtensionInstanceViewArgs) ToVirtualMachineExtensionInstanceViewOutput() VirtualMachineExtensionInstanceViewOutput {
	return i.ToVirtualMachineExtensionInstanceViewOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewArgs) ToVirtualMachineExtensionInstanceViewOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewOutput)
}

func (i VirtualMachineExtensionInstanceViewArgs) ToVirtualMachineExtensionInstanceViewPtrOutput() VirtualMachineExtensionInstanceViewPtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewArgs) ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewOutput).ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(ctx)
}

// VirtualMachineExtensionInstanceViewPtrInput is an input type that accepts VirtualMachineExtensionInstanceViewArgs, VirtualMachineExtensionInstanceViewPtr and VirtualMachineExtensionInstanceViewPtrOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewPtrInput` via:
//
//          VirtualMachineExtensionInstanceViewArgs{...}
//
//  or:
//
//          nil
type VirtualMachineExtensionInstanceViewPtrInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewPtrOutput() VirtualMachineExtensionInstanceViewPtrOutput
	ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewPtrOutput
}

type virtualMachineExtensionInstanceViewPtrType VirtualMachineExtensionInstanceViewArgs

func VirtualMachineExtensionInstanceViewPtr(v *VirtualMachineExtensionInstanceViewArgs) VirtualMachineExtensionInstanceViewPtrInput {
	return (*virtualMachineExtensionInstanceViewPtrType)(v)
}

func (*virtualMachineExtensionInstanceViewPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceView)(nil)).Elem()
}

func (i *virtualMachineExtensionInstanceViewPtrType) ToVirtualMachineExtensionInstanceViewPtrOutput() VirtualMachineExtensionInstanceViewPtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(context.Background())
}

func (i *virtualMachineExtensionInstanceViewPtrType) ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewPtrOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceView)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewOutput) ToVirtualMachineExtensionInstanceViewOutput() VirtualMachineExtensionInstanceViewOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewOutput) ToVirtualMachineExtensionInstanceViewOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewOutput) ToVirtualMachineExtensionInstanceViewPtrOutput() VirtualMachineExtensionInstanceViewPtrOutput {
	return o.ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(context.Background())
}

func (o VirtualMachineExtensionInstanceViewOutput) ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) *VirtualMachineExtensionInstanceView {
		return &v
	}).(VirtualMachineExtensionInstanceViewPtrOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewOutput) Statuses() InstanceViewStatusArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) []InstanceViewStatus { return v.Statuses }).(InstanceViewStatusArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewOutput) Substatuses() InstanceViewStatusArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) []InstanceViewStatus { return v.Substatuses }).(InstanceViewStatusArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceView) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInstanceViewPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceView)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewPtrOutput) ToVirtualMachineExtensionInstanceViewPtrOutput() VirtualMachineExtensionInstanceViewPtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewPtrOutput) ToVirtualMachineExtensionInstanceViewPtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewPtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewPtrOutput) Elem() VirtualMachineExtensionInstanceViewOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) VirtualMachineExtensionInstanceView { return *v }).(VirtualMachineExtensionInstanceViewOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewPtrOutput) Statuses() InstanceViewStatusArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) []InstanceViewStatus {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewPtrOutput) Substatuses() InstanceViewStatusArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) []InstanceViewStatus {
		if v == nil {
			return nil
		}
		return v.Substatuses
	}).(InstanceViewStatusArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewPtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceView) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewInvokeResponse struct {
	// The virtual machine extension name.
	Name *string `pulumi:"name"`
	// The resource status information.
	Statuses []InstanceViewStatusInvokeResponse `pulumi:"statuses"`
	// The resource status information.
	Substatuses []InstanceViewStatusInvokeResponse `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionInstanceViewInvokeResponseInput is an input type that accepts VirtualMachineExtensionInstanceViewInvokeResponseArgs and VirtualMachineExtensionInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewInvokeResponseInput` via:
//
//          VirtualMachineExtensionInstanceViewInvokeResponseArgs{...}
type VirtualMachineExtensionInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewInvokeResponseOutput() VirtualMachineExtensionInstanceViewInvokeResponseOutput
	ToVirtualMachineExtensionInstanceViewInvokeResponseOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewInvokeResponseOutput
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewInvokeResponseArgs struct {
	// The virtual machine extension name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource status information.
	Statuses InstanceViewStatusInvokeResponseArrayInput `pulumi:"statuses"`
	// The resource status information.
	Substatuses InstanceViewStatusInvokeResponseArrayInput `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionInstanceViewInvokeResponseOutput() VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return i.ToVirtualMachineExtensionInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewInvokeResponseOutput)
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutput() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArgs) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewInvokeResponseOutput).ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineExtensionInstanceViewInvokeResponsePtrInput is an input type that accepts VirtualMachineExtensionInstanceViewInvokeResponseArgs, VirtualMachineExtensionInstanceViewInvokeResponsePtr and VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewInvokeResponsePtrInput` via:
//
//          VirtualMachineExtensionInstanceViewInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineExtensionInstanceViewInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutput() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput
	ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput
}

type virtualMachineExtensionInstanceViewInvokeResponsePtrType VirtualMachineExtensionInstanceViewInvokeResponseArgs

func VirtualMachineExtensionInstanceViewInvokeResponsePtr(v *VirtualMachineExtensionInstanceViewInvokeResponseArgs) VirtualMachineExtensionInstanceViewInvokeResponsePtrInput {
	return (*virtualMachineExtensionInstanceViewInvokeResponsePtrType)(v)
}

func (*virtualMachineExtensionInstanceViewInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineExtensionInstanceViewInvokeResponsePtrType) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutput() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineExtensionInstanceViewInvokeResponsePtrType) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput)
}

// VirtualMachineExtensionInstanceViewInvokeResponseArrayInput is an input type that accepts VirtualMachineExtensionInstanceViewInvokeResponseArray and VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewInvokeResponseArrayInput` via:
//
//          VirtualMachineExtensionInstanceViewInvokeResponseArray{ VirtualMachineExtensionInstanceViewInvokeResponseArgs{...} }
type VirtualMachineExtensionInstanceViewInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput
	ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput
}

type VirtualMachineExtensionInstanceViewInvokeResponseArray []VirtualMachineExtensionInstanceViewInvokeResponseInput

func (VirtualMachineExtensionInstanceViewInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArray) ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput {
	return i.ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewInvokeResponseArray) ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionInstanceViewInvokeResponseOutput() VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutput() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return o.ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) *VirtualMachineExtensionInstanceViewInvokeResponse {
		return &v
	}).(VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		return v.Statuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) Substatuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		return v.Substatuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewInvokeResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewInvokeResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutput() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) ToVirtualMachineExtensionInstanceViewInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) Elem() VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) VirtualMachineExtensionInstanceViewInvokeResponse {
		return *v
	}).(VirtualMachineExtensionInstanceViewInvokeResponseOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) Substatuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Substatuses
	}).(InstanceViewStatusInvokeResponseArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput) ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutput() VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput) ToVirtualMachineExtensionInstanceViewInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionInstanceViewInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionInstanceViewInvokeResponse {
		return vs[0].([]VirtualMachineExtensionInstanceViewInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionInstanceViewInvokeResponseOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewResponse struct {
	// The virtual machine extension name.
	Name *string `pulumi:"name"`
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
	// The resource status information.
	Substatuses []InstanceViewStatusResponse `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionInstanceViewResponseInput is an input type that accepts VirtualMachineExtensionInstanceViewResponseArgs and VirtualMachineExtensionInstanceViewResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewResponseInput` via:
//
//          VirtualMachineExtensionInstanceViewResponseArgs{...}
type VirtualMachineExtensionInstanceViewResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewResponseOutput() VirtualMachineExtensionInstanceViewResponseOutput
	ToVirtualMachineExtensionInstanceViewResponseOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewResponseOutput
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewResponseArgs struct {
	// The virtual machine extension name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource status information.
	Statuses InstanceViewStatusResponseArrayInput `pulumi:"statuses"`
	// The resource status information.
	Substatuses InstanceViewStatusResponseArrayInput `pulumi:"substatuses"`
	// Specifies the type of the extension; an example is "CustomScriptExtension".
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInstanceViewResponseArgs) ToVirtualMachineExtensionInstanceViewResponseOutput() VirtualMachineExtensionInstanceViewResponseOutput {
	return i.ToVirtualMachineExtensionInstanceViewResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewResponseArgs) ToVirtualMachineExtensionInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewResponseOutput)
}

func (i VirtualMachineExtensionInstanceViewResponseArgs) ToVirtualMachineExtensionInstanceViewResponsePtrOutput() VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewResponseArgs) ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewResponseOutput).ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(ctx)
}

// VirtualMachineExtensionInstanceViewResponsePtrInput is an input type that accepts VirtualMachineExtensionInstanceViewResponseArgs, VirtualMachineExtensionInstanceViewResponsePtr and VirtualMachineExtensionInstanceViewResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewResponsePtrInput` via:
//
//          VirtualMachineExtensionInstanceViewResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineExtensionInstanceViewResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewResponsePtrOutput() VirtualMachineExtensionInstanceViewResponsePtrOutput
	ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewResponsePtrOutput
}

type virtualMachineExtensionInstanceViewResponsePtrType VirtualMachineExtensionInstanceViewResponseArgs

func VirtualMachineExtensionInstanceViewResponsePtr(v *VirtualMachineExtensionInstanceViewResponseArgs) VirtualMachineExtensionInstanceViewResponsePtrInput {
	return (*virtualMachineExtensionInstanceViewResponsePtrType)(v)
}

func (*virtualMachineExtensionInstanceViewResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (i *virtualMachineExtensionInstanceViewResponsePtrType) ToVirtualMachineExtensionInstanceViewResponsePtrOutput() VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineExtensionInstanceViewResponsePtrType) ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewResponsePtrOutput)
}

// VirtualMachineExtensionInstanceViewResponseArrayInput is an input type that accepts VirtualMachineExtensionInstanceViewResponseArray and VirtualMachineExtensionInstanceViewResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInstanceViewResponseArrayInput` via:
//
//          VirtualMachineExtensionInstanceViewResponseArray{ VirtualMachineExtensionInstanceViewResponseArgs{...} }
type VirtualMachineExtensionInstanceViewResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInstanceViewResponseArrayOutput() VirtualMachineExtensionInstanceViewResponseArrayOutput
	ToVirtualMachineExtensionInstanceViewResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionInstanceViewResponseArrayOutput
}

type VirtualMachineExtensionInstanceViewResponseArray []VirtualMachineExtensionInstanceViewResponseInput

func (VirtualMachineExtensionInstanceViewResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInstanceViewResponseArray) ToVirtualMachineExtensionInstanceViewResponseArrayOutput() VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return i.ToVirtualMachineExtensionInstanceViewResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInstanceViewResponseArray) ToVirtualMachineExtensionInstanceViewResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInstanceViewResponseArrayOutput)
}

// The instance view of a virtual machine extension.
type VirtualMachineExtensionInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewResponseOutput) ToVirtualMachineExtensionInstanceViewResponseOutput() VirtualMachineExtensionInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponseOutput) ToVirtualMachineExtensionInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponseOutput) ToVirtualMachineExtensionInstanceViewResponsePtrOutput() VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return o.ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineExtensionInstanceViewResponseOutput) ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) *VirtualMachineExtensionInstanceViewResponse {
		return &v
	}).(VirtualMachineExtensionInstanceViewResponsePtrOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewResponseOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewResponseOutput) Substatuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) []InstanceViewStatusResponse { return v.Substatuses }).(InstanceViewStatusResponseArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInstanceViewResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInstanceViewResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) ToVirtualMachineExtensionInstanceViewResponsePtrOutput() VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) ToVirtualMachineExtensionInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) Elem() VirtualMachineExtensionInstanceViewResponseOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) VirtualMachineExtensionInstanceViewResponse {
		return *v
	}).(VirtualMachineExtensionInstanceViewResponseOutput)
}

// The virtual machine extension name.
func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) []InstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusResponseArrayOutput)
}

// The resource status information.
func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) Substatuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) []InstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Substatuses
	}).(InstanceViewStatusResponseArrayOutput)
}

// Specifies the type of the extension; an example is "CustomScriptExtension".
func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInstanceViewResponsePtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineExtensionInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInstanceViewResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInstanceViewResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInstanceViewResponseArrayOutput) ToVirtualMachineExtensionInstanceViewResponseArrayOutput() VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponseArrayOutput) ToVirtualMachineExtensionInstanceViewResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInstanceViewResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionInstanceViewResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionInstanceViewResponse {
		return vs[0].([]VirtualMachineExtensionInstanceViewResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionInstanceViewResponseOutput)
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionInvokeResponse struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// How the extension handler should be forced to update even if the extension configuration has not changed.
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// Resource Id
	Id string `pulumi:"id"`
	// The virtual machine extension instance view.
	InstanceView *VirtualMachineExtensionInstanceViewInvokeResponse `pulumi:"instanceView"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionInvokeResponseInput is an input type that accepts VirtualMachineExtensionInvokeResponseArgs and VirtualMachineExtensionInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInvokeResponseInput` via:
//
//          VirtualMachineExtensionInvokeResponseArgs{...}
type VirtualMachineExtensionInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInvokeResponseOutput() VirtualMachineExtensionInvokeResponseOutput
	ToVirtualMachineExtensionInvokeResponseOutputWithContext(context.Context) VirtualMachineExtensionInvokeResponseOutput
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionInvokeResponseArgs struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// How the extension handler should be forced to update even if the extension configuration has not changed.
	ForceUpdateTag pulumi.StringPtrInput `pulumi:"forceUpdateTag"`
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// The virtual machine extension instance view.
	InstanceView VirtualMachineExtensionInstanceViewInvokeResponsePtrInput `pulumi:"instanceView"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInvokeResponseArgs) ToVirtualMachineExtensionInvokeResponseOutput() VirtualMachineExtensionInvokeResponseOutput {
	return i.ToVirtualMachineExtensionInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInvokeResponseArgs) ToVirtualMachineExtensionInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInvokeResponseOutput)
}

// VirtualMachineExtensionInvokeResponseArrayInput is an input type that accepts VirtualMachineExtensionInvokeResponseArray and VirtualMachineExtensionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionInvokeResponseArrayInput` via:
//
//          VirtualMachineExtensionInvokeResponseArray{ VirtualMachineExtensionInvokeResponseArgs{...} }
type VirtualMachineExtensionInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionInvokeResponseArrayOutput() VirtualMachineExtensionInvokeResponseArrayOutput
	ToVirtualMachineExtensionInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionInvokeResponseArrayOutput
}

type VirtualMachineExtensionInvokeResponseArray []VirtualMachineExtensionInvokeResponseInput

func (VirtualMachineExtensionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionInvokeResponseArray) ToVirtualMachineExtensionInvokeResponseArrayOutput() VirtualMachineExtensionInvokeResponseArrayOutput {
	return i.ToVirtualMachineExtensionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionInvokeResponseArray) ToVirtualMachineExtensionInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionInvokeResponseArrayOutput)
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInvokeResponseOutput) ToVirtualMachineExtensionInvokeResponseOutput() VirtualMachineExtensionInvokeResponseOutput {
	return o
}

func (o VirtualMachineExtensionInvokeResponseOutput) ToVirtualMachineExtensionInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionInvokeResponseOutput {
	return o
}

// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineExtensionInvokeResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// How the extension handler should be forced to update even if the extension configuration has not changed.
func (o VirtualMachineExtensionInvokeResponseOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o VirtualMachineExtensionInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The virtual machine extension instance view.
func (o VirtualMachineExtensionInvokeResponseOutput) InstanceView() VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) *VirtualMachineExtensionInstanceViewInvokeResponse {
		return v.InstanceView
	}).(VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput)
}

// Resource location
func (o VirtualMachineExtensionInvokeResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o VirtualMachineExtensionInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
func (o VirtualMachineExtensionInvokeResponseOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineExtensionInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineExtensionInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineExtensionInvokeResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Resource tags
func (o VirtualMachineExtensionInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o VirtualMachineExtensionInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionInvokeResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionInvokeResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionInvokeResponseArrayOutput) ToVirtualMachineExtensionInvokeResponseArrayOutput() VirtualMachineExtensionInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInvokeResponseArrayOutput) ToVirtualMachineExtensionInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionInvokeResponse {
		return vs[0].([]VirtualMachineExtensionInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionInvokeResponseOutput)
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionResponse struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// How the extension handler should be forced to update even if the extension configuration has not changed.
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// Resource Id
	Id string `pulumi:"id"`
	// The virtual machine extension instance view.
	InstanceView *VirtualMachineExtensionInstanceViewResponse `pulumi:"instanceView"`
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineExtensionResponseInput is an input type that accepts VirtualMachineExtensionResponseArgs and VirtualMachineExtensionResponseOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionResponseInput` via:
//
//          VirtualMachineExtensionResponseArgs{...}
type VirtualMachineExtensionResponseInput interface {
	pulumi.Input

	ToVirtualMachineExtensionResponseOutput() VirtualMachineExtensionResponseOutput
	ToVirtualMachineExtensionResponseOutputWithContext(context.Context) VirtualMachineExtensionResponseOutput
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionResponseArgs struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// How the extension handler should be forced to update even if the extension configuration has not changed.
	ForceUpdateTag pulumi.StringPtrInput `pulumi:"forceUpdateTag"`
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// The virtual machine extension instance view.
	InstanceView VirtualMachineExtensionInstanceViewResponsePtrInput `pulumi:"instanceView"`
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineExtensionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionResponseArgs) ToVirtualMachineExtensionResponseOutput() VirtualMachineExtensionResponseOutput {
	return i.ToVirtualMachineExtensionResponseOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionResponseArgs) ToVirtualMachineExtensionResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionResponseOutput)
}

// VirtualMachineExtensionResponseArrayInput is an input type that accepts VirtualMachineExtensionResponseArray and VirtualMachineExtensionResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineExtensionResponseArrayInput` via:
//
//          VirtualMachineExtensionResponseArray{ VirtualMachineExtensionResponseArgs{...} }
type VirtualMachineExtensionResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineExtensionResponseArrayOutput() VirtualMachineExtensionResponseArrayOutput
	ToVirtualMachineExtensionResponseArrayOutputWithContext(context.Context) VirtualMachineExtensionResponseArrayOutput
}

type VirtualMachineExtensionResponseArray []VirtualMachineExtensionResponseInput

func (VirtualMachineExtensionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionResponse)(nil)).Elem()
}

func (i VirtualMachineExtensionResponseArray) ToVirtualMachineExtensionResponseArrayOutput() VirtualMachineExtensionResponseArrayOutput {
	return i.ToVirtualMachineExtensionResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineExtensionResponseArray) ToVirtualMachineExtensionResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineExtensionResponseArrayOutput)
}

// Describes a Virtual Machine Extension.
type VirtualMachineExtensionResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionResponseOutput) ToVirtualMachineExtensionResponseOutput() VirtualMachineExtensionResponseOutput {
	return o
}

func (o VirtualMachineExtensionResponseOutput) ToVirtualMachineExtensionResponseOutputWithContext(ctx context.Context) VirtualMachineExtensionResponseOutput {
	return o
}

// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
func (o VirtualMachineExtensionResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// How the extension handler should be forced to update even if the extension configuration has not changed.
func (o VirtualMachineExtensionResponseOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o VirtualMachineExtensionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The virtual machine extension instance view.
func (o VirtualMachineExtensionResponseOutput) InstanceView() VirtualMachineExtensionInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) *VirtualMachineExtensionInstanceViewResponse {
		return v.InstanceView
	}).(VirtualMachineExtensionInstanceViewResponsePtrOutput)
}

// Resource location
func (o VirtualMachineExtensionResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o VirtualMachineExtensionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
func (o VirtualMachineExtensionResponseOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineExtensionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineExtensionResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineExtensionResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Resource tags
func (o VirtualMachineExtensionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o VirtualMachineExtensionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the version of the script handler.
func (o VirtualMachineExtensionResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineExtensionResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineExtensionResponseArrayOutput) ToVirtualMachineExtensionResponseArrayOutput() VirtualMachineExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionResponseArrayOutput) ToVirtualMachineExtensionResponseArrayOutputWithContext(ctx context.Context) VirtualMachineExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineExtensionResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineExtensionResponse {
		return vs[0].([]VirtualMachineExtensionResponse)[vs[1].(int)]
	}).(VirtualMachineExtensionResponseOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentity struct {
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineIdentityInput is an input type that accepts VirtualMachineIdentityArgs and VirtualMachineIdentityOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityInput` via:
//
//          VirtualMachineIdentityArgs{...}
type VirtualMachineIdentityInput interface {
	pulumi.Input

	ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput
	ToVirtualMachineIdentityOutputWithContext(context.Context) VirtualMachineIdentityOutput
}

// Identity for the virtual machine.
type VirtualMachineIdentityArgs struct {
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type ResourceIdentityType `pulumi:"type"`
}

func (VirtualMachineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentity)(nil)).Elem()
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput {
	return i.ToVirtualMachineIdentityOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityOutputWithContext(ctx context.Context) VirtualMachineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityOutput)
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return i.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityOutput).ToVirtualMachineIdentityPtrOutputWithContext(ctx)
}

// VirtualMachineIdentityPtrInput is an input type that accepts VirtualMachineIdentityArgs, VirtualMachineIdentityPtr and VirtualMachineIdentityPtrOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityPtrInput` via:
//
//          VirtualMachineIdentityArgs{...}
//
//  or:
//
//          nil
type VirtualMachineIdentityPtrInput interface {
	pulumi.Input

	ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput
	ToVirtualMachineIdentityPtrOutputWithContext(context.Context) VirtualMachineIdentityPtrOutput
}

type virtualMachineIdentityPtrType VirtualMachineIdentityArgs

func VirtualMachineIdentityPtr(v *VirtualMachineIdentityArgs) VirtualMachineIdentityPtrInput {
	return (*virtualMachineIdentityPtrType)(v)
}

func (*virtualMachineIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentity)(nil)).Elem()
}

func (i *virtualMachineIdentityPtrType) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return i.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i *virtualMachineIdentityPtrType) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityPtrOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentityOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentity)(nil)).Elem()
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput {
	return o
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityOutputWithContext(ctx context.Context) VirtualMachineIdentityOutput {
	return o
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return o.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) *VirtualMachineIdentity {
		return &v
	}).(VirtualMachineIdentityPtrOutput)
}

// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineIdentityPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentity)(nil)).Elem()
}

func (o VirtualMachineIdentityPtrOutput) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return o
}

func (o VirtualMachineIdentityPtrOutput) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return o
}

func (o VirtualMachineIdentityPtrOutput) Elem() VirtualMachineIdentityOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) VirtualMachineIdentity { return *v }).(VirtualMachineIdentityOutput)
}

// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentityInvokeResponse struct {
	// The principal id of virtual machine identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the virtual machine.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineIdentityInvokeResponseInput is an input type that accepts VirtualMachineIdentityInvokeResponseArgs and VirtualMachineIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityInvokeResponseInput` via:
//
//          VirtualMachineIdentityInvokeResponseArgs{...}
type VirtualMachineIdentityInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineIdentityInvokeResponseOutput() VirtualMachineIdentityInvokeResponseOutput
	ToVirtualMachineIdentityInvokeResponseOutputWithContext(context.Context) VirtualMachineIdentityInvokeResponseOutput
}

// Identity for the virtual machine.
type VirtualMachineIdentityInvokeResponseArgs struct {
	// The principal id of virtual machine identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the virtual machine.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentityInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineIdentityInvokeResponseArgs) ToVirtualMachineIdentityInvokeResponseOutput() VirtualMachineIdentityInvokeResponseOutput {
	return i.ToVirtualMachineIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityInvokeResponseArgs) ToVirtualMachineIdentityInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityInvokeResponseOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentityInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineIdentityInvokeResponseOutput) ToVirtualMachineIdentityInvokeResponseOutput() VirtualMachineIdentityInvokeResponseOutput {
	return o
}

func (o VirtualMachineIdentityInvokeResponseOutput) ToVirtualMachineIdentityInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineIdentityInvokeResponseOutput {
	return o
}

// The principal id of virtual machine identity.
func (o VirtualMachineIdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineIdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the virtual machine.
func (o VirtualMachineIdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineIdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineIdentityInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentityInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentityResponse struct {
	// The principal id of virtual machine identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the virtual machine.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineIdentityResponseInput is an input type that accepts VirtualMachineIdentityResponseArgs and VirtualMachineIdentityResponseOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityResponseInput` via:
//
//          VirtualMachineIdentityResponseArgs{...}
type VirtualMachineIdentityResponseInput interface {
	pulumi.Input

	ToVirtualMachineIdentityResponseOutput() VirtualMachineIdentityResponseOutput
	ToVirtualMachineIdentityResponseOutputWithContext(context.Context) VirtualMachineIdentityResponseOutput
}

// Identity for the virtual machine.
type VirtualMachineIdentityResponseArgs struct {
	// The principal id of virtual machine identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the virtual machine.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentityResponse)(nil)).Elem()
}

func (i VirtualMachineIdentityResponseArgs) ToVirtualMachineIdentityResponseOutput() VirtualMachineIdentityResponseOutput {
	return i.ToVirtualMachineIdentityResponseOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityResponseArgs) ToVirtualMachineIdentityResponseOutputWithContext(ctx context.Context) VirtualMachineIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityResponseOutput)
}

func (i VirtualMachineIdentityResponseArgs) ToVirtualMachineIdentityResponsePtrOutput() VirtualMachineIdentityResponsePtrOutput {
	return i.ToVirtualMachineIdentityResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityResponseArgs) ToVirtualMachineIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityResponseOutput).ToVirtualMachineIdentityResponsePtrOutputWithContext(ctx)
}

// VirtualMachineIdentityResponsePtrInput is an input type that accepts VirtualMachineIdentityResponseArgs, VirtualMachineIdentityResponsePtr and VirtualMachineIdentityResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityResponsePtrInput` via:
//
//          VirtualMachineIdentityResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineIdentityResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineIdentityResponsePtrOutput() VirtualMachineIdentityResponsePtrOutput
	ToVirtualMachineIdentityResponsePtrOutputWithContext(context.Context) VirtualMachineIdentityResponsePtrOutput
}

type virtualMachineIdentityResponsePtrType VirtualMachineIdentityResponseArgs

func VirtualMachineIdentityResponsePtr(v *VirtualMachineIdentityResponseArgs) VirtualMachineIdentityResponsePtrInput {
	return (*virtualMachineIdentityResponsePtrType)(v)
}

func (*virtualMachineIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentityResponse)(nil)).Elem()
}

func (i *virtualMachineIdentityResponsePtrType) ToVirtualMachineIdentityResponsePtrOutput() VirtualMachineIdentityResponsePtrOutput {
	return i.ToVirtualMachineIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineIdentityResponsePtrType) ToVirtualMachineIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityResponsePtrOutput)
}

// Identity for the virtual machine.
type VirtualMachineIdentityResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentityResponse)(nil)).Elem()
}

func (o VirtualMachineIdentityResponseOutput) ToVirtualMachineIdentityResponseOutput() VirtualMachineIdentityResponseOutput {
	return o
}

func (o VirtualMachineIdentityResponseOutput) ToVirtualMachineIdentityResponseOutputWithContext(ctx context.Context) VirtualMachineIdentityResponseOutput {
	return o
}

func (o VirtualMachineIdentityResponseOutput) ToVirtualMachineIdentityResponsePtrOutput() VirtualMachineIdentityResponsePtrOutput {
	return o.ToVirtualMachineIdentityResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineIdentityResponseOutput) ToVirtualMachineIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineIdentityResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentityResponse) *VirtualMachineIdentityResponse {
		return &v
	}).(VirtualMachineIdentityResponsePtrOutput)
}

// The principal id of virtual machine identity.
func (o VirtualMachineIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the virtual machine.
func (o VirtualMachineIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentityResponse)(nil)).Elem()
}

func (o VirtualMachineIdentityResponsePtrOutput) ToVirtualMachineIdentityResponsePtrOutput() VirtualMachineIdentityResponsePtrOutput {
	return o
}

func (o VirtualMachineIdentityResponsePtrOutput) ToVirtualMachineIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineIdentityResponsePtrOutput {
	return o
}

func (o VirtualMachineIdentityResponsePtrOutput) Elem() VirtualMachineIdentityResponseOutput {
	return o.ApplyT(func(v *VirtualMachineIdentityResponse) VirtualMachineIdentityResponse { return *v }).(VirtualMachineIdentityResponseOutput)
}

// The principal id of virtual machine identity.
func (o VirtualMachineIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the virtual machine.
func (o VirtualMachineIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the virtual machine. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewInvokeResponse struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnosticsInstanceViewInvokeResponse `pulumi:"bootDiagnostics"`
	// The virtual machine disk information.
	Disks []DiskInstanceViewInvokeResponse `pulumi:"disks"`
	// The extensions information.
	Extensions []VirtualMachineExtensionInstanceViewInvokeResponse `pulumi:"extensions"`
	// Specifies the fault domain of the virtual machine.
	PlatformFaultDomain *int `pulumi:"platformFaultDomain"`
	// Specifies the update domain of the virtual machine.
	PlatformUpdateDomain *int `pulumi:"platformUpdateDomain"`
	// The Remote desktop certificate thumbprint.
	RdpThumbPrint *string `pulumi:"rdpThumbPrint"`
	// The resource status information.
	Statuses []InstanceViewStatusInvokeResponse `pulumi:"statuses"`
	// The VM Agent running on the virtual machine.
	VmAgent *VirtualMachineAgentInstanceViewInvokeResponse `pulumi:"vmAgent"`
}

// VirtualMachineInstanceViewInvokeResponseInput is an input type that accepts VirtualMachineInstanceViewInvokeResponseArgs and VirtualMachineInstanceViewInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineInstanceViewInvokeResponseInput` via:
//
//          VirtualMachineInstanceViewInvokeResponseArgs{...}
type VirtualMachineInstanceViewInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineInstanceViewInvokeResponseOutput() VirtualMachineInstanceViewInvokeResponseOutput
	ToVirtualMachineInstanceViewInvokeResponseOutputWithContext(context.Context) VirtualMachineInstanceViewInvokeResponseOutput
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewInvokeResponseArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsInstanceViewInvokeResponsePtrInput `pulumi:"bootDiagnostics"`
	// The virtual machine disk information.
	Disks DiskInstanceViewInvokeResponseArrayInput `pulumi:"disks"`
	// The extensions information.
	Extensions VirtualMachineExtensionInstanceViewInvokeResponseArrayInput `pulumi:"extensions"`
	// Specifies the fault domain of the virtual machine.
	PlatformFaultDomain pulumi.IntPtrInput `pulumi:"platformFaultDomain"`
	// Specifies the update domain of the virtual machine.
	PlatformUpdateDomain pulumi.IntPtrInput `pulumi:"platformUpdateDomain"`
	// The Remote desktop certificate thumbprint.
	RdpThumbPrint pulumi.StringPtrInput `pulumi:"rdpThumbPrint"`
	// The resource status information.
	Statuses InstanceViewStatusInvokeResponseArrayInput `pulumi:"statuses"`
	// The VM Agent running on the virtual machine.
	VmAgent VirtualMachineAgentInstanceViewInvokeResponsePtrInput `pulumi:"vmAgent"`
}

func (VirtualMachineInstanceViewInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceViewInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineInstanceViewInvokeResponseArgs) ToVirtualMachineInstanceViewInvokeResponseOutput() VirtualMachineInstanceViewInvokeResponseOutput {
	return i.ToVirtualMachineInstanceViewInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineInstanceViewInvokeResponseArgs) ToVirtualMachineInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceViewInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceViewInvokeResponseOutput)
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceViewInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceViewInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceViewInvokeResponseOutput) ToVirtualMachineInstanceViewInvokeResponseOutput() VirtualMachineInstanceViewInvokeResponseOutput {
	return o
}

func (o VirtualMachineInstanceViewInvokeResponseOutput) ToVirtualMachineInstanceViewInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceViewInvokeResponseOutput {
	return o
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o VirtualMachineInstanceViewInvokeResponseOutput) BootDiagnostics() BootDiagnosticsInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) *BootDiagnosticsInstanceViewInvokeResponse {
		return v.BootDiagnostics
	}).(BootDiagnosticsInstanceViewInvokeResponsePtrOutput)
}

// The virtual machine disk information.
func (o VirtualMachineInstanceViewInvokeResponseOutput) Disks() DiskInstanceViewInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) []DiskInstanceViewInvokeResponse { return v.Disks }).(DiskInstanceViewInvokeResponseArrayOutput)
}

// The extensions information.
func (o VirtualMachineInstanceViewInvokeResponseOutput) Extensions() VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) []VirtualMachineExtensionInstanceViewInvokeResponse {
		return v.Extensions
	}).(VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput)
}

// Specifies the fault domain of the virtual machine.
func (o VirtualMachineInstanceViewInvokeResponseOutput) PlatformFaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) *int { return v.PlatformFaultDomain }).(pulumi.IntPtrOutput)
}

// Specifies the update domain of the virtual machine.
func (o VirtualMachineInstanceViewInvokeResponseOutput) PlatformUpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) *int { return v.PlatformUpdateDomain }).(pulumi.IntPtrOutput)
}

// The Remote desktop certificate thumbprint.
func (o VirtualMachineInstanceViewInvokeResponseOutput) RdpThumbPrint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) *string { return v.RdpThumbPrint }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineInstanceViewInvokeResponseOutput) Statuses() InstanceViewStatusInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) []InstanceViewStatusInvokeResponse { return v.Statuses }).(InstanceViewStatusInvokeResponseArrayOutput)
}

// The VM Agent running on the virtual machine.
func (o VirtualMachineInstanceViewInvokeResponseOutput) VmAgent() VirtualMachineAgentInstanceViewInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewInvokeResponse) *VirtualMachineAgentInstanceViewInvokeResponse {
		return v.VmAgent
	}).(VirtualMachineAgentInstanceViewInvokeResponsePtrOutput)
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewResponse struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics *BootDiagnosticsInstanceViewResponse `pulumi:"bootDiagnostics"`
	// The virtual machine disk information.
	Disks []DiskInstanceViewResponse `pulumi:"disks"`
	// The extensions information.
	Extensions []VirtualMachineExtensionInstanceViewResponse `pulumi:"extensions"`
	// Specifies the fault domain of the virtual machine.
	PlatformFaultDomain *int `pulumi:"platformFaultDomain"`
	// Specifies the update domain of the virtual machine.
	PlatformUpdateDomain *int `pulumi:"platformUpdateDomain"`
	// The Remote desktop certificate thumbprint.
	RdpThumbPrint *string `pulumi:"rdpThumbPrint"`
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
	// The VM Agent running on the virtual machine.
	VmAgent *VirtualMachineAgentInstanceViewResponse `pulumi:"vmAgent"`
}

// VirtualMachineInstanceViewResponseInput is an input type that accepts VirtualMachineInstanceViewResponseArgs and VirtualMachineInstanceViewResponseOutput values.
// You can construct a concrete instance of `VirtualMachineInstanceViewResponseInput` via:
//
//          VirtualMachineInstanceViewResponseArgs{...}
type VirtualMachineInstanceViewResponseInput interface {
	pulumi.Input

	ToVirtualMachineInstanceViewResponseOutput() VirtualMachineInstanceViewResponseOutput
	ToVirtualMachineInstanceViewResponseOutputWithContext(context.Context) VirtualMachineInstanceViewResponseOutput
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewResponseArgs struct {
	// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
	BootDiagnostics BootDiagnosticsInstanceViewResponsePtrInput `pulumi:"bootDiagnostics"`
	// The virtual machine disk information.
	Disks DiskInstanceViewResponseArrayInput `pulumi:"disks"`
	// The extensions information.
	Extensions VirtualMachineExtensionInstanceViewResponseArrayInput `pulumi:"extensions"`
	// Specifies the fault domain of the virtual machine.
	PlatformFaultDomain pulumi.IntPtrInput `pulumi:"platformFaultDomain"`
	// Specifies the update domain of the virtual machine.
	PlatformUpdateDomain pulumi.IntPtrInput `pulumi:"platformUpdateDomain"`
	// The Remote desktop certificate thumbprint.
	RdpThumbPrint pulumi.StringPtrInput `pulumi:"rdpThumbPrint"`
	// The resource status information.
	Statuses InstanceViewStatusResponseArrayInput `pulumi:"statuses"`
	// The VM Agent running on the virtual machine.
	VmAgent VirtualMachineAgentInstanceViewResponsePtrInput `pulumi:"vmAgent"`
}

func (VirtualMachineInstanceViewResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceViewResponse)(nil)).Elem()
}

func (i VirtualMachineInstanceViewResponseArgs) ToVirtualMachineInstanceViewResponseOutput() VirtualMachineInstanceViewResponseOutput {
	return i.ToVirtualMachineInstanceViewResponseOutputWithContext(context.Background())
}

func (i VirtualMachineInstanceViewResponseArgs) ToVirtualMachineInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceViewResponseOutput)
}

func (i VirtualMachineInstanceViewResponseArgs) ToVirtualMachineInstanceViewResponsePtrOutput() VirtualMachineInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstanceViewResponseArgs) ToVirtualMachineInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceViewResponseOutput).ToVirtualMachineInstanceViewResponsePtrOutputWithContext(ctx)
}

// VirtualMachineInstanceViewResponsePtrInput is an input type that accepts VirtualMachineInstanceViewResponseArgs, VirtualMachineInstanceViewResponsePtr and VirtualMachineInstanceViewResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstanceViewResponsePtrInput` via:
//
//          VirtualMachineInstanceViewResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineInstanceViewResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstanceViewResponsePtrOutput() VirtualMachineInstanceViewResponsePtrOutput
	ToVirtualMachineInstanceViewResponsePtrOutputWithContext(context.Context) VirtualMachineInstanceViewResponsePtrOutput
}

type virtualMachineInstanceViewResponsePtrType VirtualMachineInstanceViewResponseArgs

func VirtualMachineInstanceViewResponsePtr(v *VirtualMachineInstanceViewResponseArgs) VirtualMachineInstanceViewResponsePtrInput {
	return (*virtualMachineInstanceViewResponsePtrType)(v)
}

func (*virtualMachineInstanceViewResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstanceViewResponse)(nil)).Elem()
}

func (i *virtualMachineInstanceViewResponsePtrType) ToVirtualMachineInstanceViewResponsePtrOutput() VirtualMachineInstanceViewResponsePtrOutput {
	return i.ToVirtualMachineInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstanceViewResponsePtrType) ToVirtualMachineInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceViewResponsePtrOutput)
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponseOutput() VirtualMachineInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponsePtrOutput() VirtualMachineInstanceViewResponsePtrOutput {
	return o.ToVirtualMachineInstanceViewResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *VirtualMachineInstanceViewResponse {
		return &v
	}).(VirtualMachineInstanceViewResponsePtrOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o VirtualMachineInstanceViewResponseOutput) BootDiagnostics() BootDiagnosticsInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *BootDiagnosticsInstanceViewResponse {
		return v.BootDiagnostics
	}).(BootDiagnosticsInstanceViewResponsePtrOutput)
}

// The virtual machine disk information.
func (o VirtualMachineInstanceViewResponseOutput) Disks() DiskInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) []DiskInstanceViewResponse { return v.Disks }).(DiskInstanceViewResponseArrayOutput)
}

// The extensions information.
func (o VirtualMachineInstanceViewResponseOutput) Extensions() VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) []VirtualMachineExtensionInstanceViewResponse {
		return v.Extensions
	}).(VirtualMachineExtensionInstanceViewResponseArrayOutput)
}

// Specifies the fault domain of the virtual machine.
func (o VirtualMachineInstanceViewResponseOutput) PlatformFaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *int { return v.PlatformFaultDomain }).(pulumi.IntPtrOutput)
}

// Specifies the update domain of the virtual machine.
func (o VirtualMachineInstanceViewResponseOutput) PlatformUpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *int { return v.PlatformUpdateDomain }).(pulumi.IntPtrOutput)
}

// The Remote desktop certificate thumbprint.
func (o VirtualMachineInstanceViewResponseOutput) RdpThumbPrint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *string { return v.RdpThumbPrint }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineInstanceViewResponseOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// The VM Agent running on the virtual machine.
func (o VirtualMachineInstanceViewResponseOutput) VmAgent() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *VirtualMachineAgentInstanceViewResponse { return v.VmAgent }).(VirtualMachineAgentInstanceViewResponsePtrOutput)
}

type VirtualMachineInstanceViewResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceViewResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceViewResponsePtrOutput) ToVirtualMachineInstanceViewResponsePtrOutput() VirtualMachineInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineInstanceViewResponsePtrOutput) ToVirtualMachineInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineInstanceViewResponsePtrOutput) Elem() VirtualMachineInstanceViewResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) VirtualMachineInstanceViewResponse { return *v }).(VirtualMachineInstanceViewResponseOutput)
}

// Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor.
func (o VirtualMachineInstanceViewResponsePtrOutput) BootDiagnostics() BootDiagnosticsInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) *BootDiagnosticsInstanceViewResponse {
		if v == nil {
			return nil
		}
		return v.BootDiagnostics
	}).(BootDiagnosticsInstanceViewResponsePtrOutput)
}

// The virtual machine disk information.
func (o VirtualMachineInstanceViewResponsePtrOutput) Disks() DiskInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) []DiskInstanceViewResponse {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(DiskInstanceViewResponseArrayOutput)
}

// The extensions information.
func (o VirtualMachineInstanceViewResponsePtrOutput) Extensions() VirtualMachineExtensionInstanceViewResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) []VirtualMachineExtensionInstanceViewResponse {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineExtensionInstanceViewResponseArrayOutput)
}

// Specifies the fault domain of the virtual machine.
func (o VirtualMachineInstanceViewResponsePtrOutput) PlatformFaultDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) *int {
		if v == nil {
			return nil
		}
		return v.PlatformFaultDomain
	}).(pulumi.IntPtrOutput)
}

// Specifies the update domain of the virtual machine.
func (o VirtualMachineInstanceViewResponsePtrOutput) PlatformUpdateDomain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) *int {
		if v == nil {
			return nil
		}
		return v.PlatformUpdateDomain
	}).(pulumi.IntPtrOutput)
}

// The Remote desktop certificate thumbprint.
func (o VirtualMachineInstanceViewResponsePtrOutput) RdpThumbPrint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.RdpThumbPrint
	}).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o VirtualMachineInstanceViewResponsePtrOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) []InstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusResponseArrayOutput)
}

// The VM Agent running on the virtual machine.
func (o VirtualMachineInstanceViewResponsePtrOutput) VmAgent() VirtualMachineAgentInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceViewResponse) *VirtualMachineAgentInstanceViewResponse {
		if v == nil {
			return nil
		}
		return v.VmAgent
	}).(VirtualMachineAgentInstanceViewResponsePtrOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtension struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// The type of the extension handler.
	Type *string `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineScaleSetExtensionInput is an input type that accepts VirtualMachineScaleSetExtensionArgs and VirtualMachineScaleSetExtensionOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionInput` via:
//
//          VirtualMachineScaleSetExtensionArgs{...}
type VirtualMachineScaleSetExtensionInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput
	ToVirtualMachineScaleSetExtensionOutputWithContext(context.Context) VirtualMachineScaleSetExtensionOutput
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionArgs struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// The type of the extension handler.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineScaleSetExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionArgs) ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput {
	return i.ToVirtualMachineScaleSetExtensionOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionArgs) ToVirtualMachineScaleSetExtensionOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionOutput)
}

// VirtualMachineScaleSetExtensionArrayInput is an input type that accepts VirtualMachineScaleSetExtensionArray and VirtualMachineScaleSetExtensionArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionArrayInput` via:
//
//          VirtualMachineScaleSetExtensionArray{ VirtualMachineScaleSetExtensionArgs{...} }
type VirtualMachineScaleSetExtensionArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput
	ToVirtualMachineScaleSetExtensionArrayOutputWithContext(context.Context) VirtualMachineScaleSetExtensionArrayOutput
}

type VirtualMachineScaleSetExtensionArray []VirtualMachineScaleSetExtensionInput

func (VirtualMachineScaleSetExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionArray) ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput {
	return i.ToVirtualMachineScaleSetExtensionArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionArray) ToVirtualMachineScaleSetExtensionArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionArrayOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionOutput) ToVirtualMachineScaleSetExtensionOutput() VirtualMachineScaleSetExtensionOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionOutput) ToVirtualMachineScaleSetExtensionOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionOutput {
	return o
}

// Whether the extension handler should be automatically upgraded across minor versions.
func (o VirtualMachineScaleSetExtensionOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Resource Id
func (o VirtualMachineScaleSetExtensionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the extension.
func (o VirtualMachineScaleSetExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Json formatted protected settings for the extension.
func (o VirtualMachineScaleSetExtensionOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// The type of the extension handler.
func (o VirtualMachineScaleSetExtensionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The type version of the extension handler.
func (o VirtualMachineScaleSetExtensionOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtension) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtension)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionArrayOutput) ToVirtualMachineScaleSetExtensionArrayOutput() VirtualMachineScaleSetExtensionArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionArrayOutput) ToVirtualMachineScaleSetExtensionArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetExtension {
		return vs[0].([]VirtualMachineScaleSetExtension)[vs[1].(int)]
	}).(VirtualMachineScaleSetExtensionOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionInvokeResponse struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// The type of the extension handler.
	Type *string `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineScaleSetExtensionInvokeResponseInput is an input type that accepts VirtualMachineScaleSetExtensionInvokeResponseArgs and VirtualMachineScaleSetExtensionInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionInvokeResponseInput` via:
//
//          VirtualMachineScaleSetExtensionInvokeResponseArgs{...}
type VirtualMachineScaleSetExtensionInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionInvokeResponseOutput() VirtualMachineScaleSetExtensionInvokeResponseOutput
	ToVirtualMachineScaleSetExtensionInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetExtensionInvokeResponseOutput
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionInvokeResponseArgs struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// The type of the extension handler.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineScaleSetExtensionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionInvokeResponseArgs) ToVirtualMachineScaleSetExtensionInvokeResponseOutput() VirtualMachineScaleSetExtensionInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetExtensionInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionInvokeResponseArgs) ToVirtualMachineScaleSetExtensionInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionInvokeResponseOutput)
}

// VirtualMachineScaleSetExtensionInvokeResponseArrayInput is an input type that accepts VirtualMachineScaleSetExtensionInvokeResponseArray and VirtualMachineScaleSetExtensionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionInvokeResponseArrayInput` via:
//
//          VirtualMachineScaleSetExtensionInvokeResponseArray{ VirtualMachineScaleSetExtensionInvokeResponseArgs{...} }
type VirtualMachineScaleSetExtensionInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutput() VirtualMachineScaleSetExtensionInvokeResponseArrayOutput
	ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetExtensionInvokeResponseArrayOutput
}

type VirtualMachineScaleSetExtensionInvokeResponseArray []VirtualMachineScaleSetExtensionInvokeResponseInput

func (VirtualMachineScaleSetExtensionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtensionInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionInvokeResponseArray) ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutput() VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return i.ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionInvokeResponseArray) ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionInvokeResponseArrayOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) ToVirtualMachineScaleSetExtensionInvokeResponseOutput() VirtualMachineScaleSetExtensionInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) ToVirtualMachineScaleSetExtensionInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionInvokeResponseOutput {
	return o
}

// Whether the extension handler should be automatically upgraded across minor versions.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Resource Id
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the extension.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Json formatted protected settings for the extension.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// The type of the extension handler.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The type version of the extension handler.
func (o VirtualMachineScaleSetExtensionInvokeResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionInvokeResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtensionInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionInvokeResponseArrayOutput) ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutput() VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionInvokeResponseArrayOutput) ToVirtualMachineScaleSetExtensionInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetExtensionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetExtensionInvokeResponse {
		return vs[0].([]VirtualMachineScaleSetExtensionInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetExtensionInvokeResponseOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfile struct {
	// The virtual machine scale set child extension resources.
	Extensions []VirtualMachineScaleSetExtension `pulumi:"extensions"`
}

// VirtualMachineScaleSetExtensionProfileInput is an input type that accepts VirtualMachineScaleSetExtensionProfileArgs and VirtualMachineScaleSetExtensionProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileInput` via:
//
//          VirtualMachineScaleSetExtensionProfileArgs{...}
type VirtualMachineScaleSetExtensionProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput
	ToVirtualMachineScaleSetExtensionProfileOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileOutput
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileArgs struct {
	// The virtual machine scale set child extension resources.
	Extensions VirtualMachineScaleSetExtensionArrayInput `pulumi:"extensions"`
}

func (VirtualMachineScaleSetExtensionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileOutput)
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileArgs) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileOutput).ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetExtensionProfilePtrInput is an input type that accepts VirtualMachineScaleSetExtensionProfileArgs, VirtualMachineScaleSetExtensionProfilePtr and VirtualMachineScaleSetExtensionProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfilePtrInput` via:
//
//          VirtualMachineScaleSetExtensionProfileArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetExtensionProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput
	ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput
}

type virtualMachineScaleSetExtensionProfilePtrType VirtualMachineScaleSetExtensionProfileArgs

func VirtualMachineScaleSetExtensionProfilePtr(v *VirtualMachineScaleSetExtensionProfileArgs) VirtualMachineScaleSetExtensionProfilePtrInput {
	return (*virtualMachineScaleSetExtensionProfilePtrType)(v)
}

func (*virtualMachineScaleSetExtensionProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetExtensionProfilePtrType) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetExtensionProfilePtrType) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfileOutput() VirtualMachineScaleSetExtensionProfileOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetExtensionProfileOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfile) *VirtualMachineScaleSetExtensionProfile {
		return &v
	}).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileOutput) Extensions() VirtualMachineScaleSetExtensionArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfile) []VirtualMachineScaleSetExtension { return v.Extensions }).(VirtualMachineScaleSetExtensionArrayOutput)
}

type VirtualMachineScaleSetExtensionProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutput() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) ToVirtualMachineScaleSetExtensionProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfilePtrOutput) Elem() VirtualMachineScaleSetExtensionProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfile) VirtualMachineScaleSetExtensionProfile { return *v }).(VirtualMachineScaleSetExtensionProfileOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfilePtrOutput) Extensions() VirtualMachineScaleSetExtensionArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfile) []VirtualMachineScaleSetExtension {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionArrayOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileInvokeResponse struct {
	// The virtual machine scale set child extension resources.
	Extensions []VirtualMachineScaleSetExtensionInvokeResponse `pulumi:"extensions"`
}

// VirtualMachineScaleSetExtensionProfileInvokeResponseInput is an input type that accepts VirtualMachineScaleSetExtensionProfileInvokeResponseArgs and VirtualMachineScaleSetExtensionProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileInvokeResponseInput` via:
//
//          VirtualMachineScaleSetExtensionProfileInvokeResponseArgs{...}
type VirtualMachineScaleSetExtensionProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutput() VirtualMachineScaleSetExtensionProfileInvokeResponseOutput
	ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponseOutput
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileInvokeResponseArgs struct {
	// The virtual machine scale set child extension resources.
	Extensions VirtualMachineScaleSetExtensionInvokeResponseArrayInput `pulumi:"extensions"`
}

func (VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutput() VirtualMachineScaleSetExtensionProfileInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileInvokeResponseOutput)
}

func (i VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileInvokeResponseOutput).ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetExtensionProfileInvokeResponsePtrInput is an input type that accepts VirtualMachineScaleSetExtensionProfileInvokeResponseArgs, VirtualMachineScaleSetExtensionProfileInvokeResponsePtr and VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileInvokeResponsePtrInput` via:
//
//          VirtualMachineScaleSetExtensionProfileInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetExtensionProfileInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput
	ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput
}

type virtualMachineScaleSetExtensionProfileInvokeResponsePtrType VirtualMachineScaleSetExtensionProfileInvokeResponseArgs

func VirtualMachineScaleSetExtensionProfileInvokeResponsePtr(v *VirtualMachineScaleSetExtensionProfileInvokeResponseArgs) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrInput {
	return (*virtualMachineScaleSetExtensionProfileInvokeResponsePtrType)(v)
}

func (*virtualMachineScaleSetExtensionProfileInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfileInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetExtensionProfileInvokeResponsePtrType) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetExtensionProfileInvokeResponsePtrType) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutput() VirtualMachineScaleSetExtensionProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return o.ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileInvokeResponse) *VirtualMachineScaleSetExtensionProfileInvokeResponse {
		return &v
	}).(VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileInvokeResponseOutput) Extensions() VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileInvokeResponse) []VirtualMachineScaleSetExtensionInvokeResponse {
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionInvokeResponseArrayOutput)
}

type VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput) Elem() VirtualMachineScaleSetExtensionProfileInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileInvokeResponse) VirtualMachineScaleSetExtensionProfileInvokeResponse {
		return *v
	}).(VirtualMachineScaleSetExtensionProfileInvokeResponseOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput) Extensions() VirtualMachineScaleSetExtensionInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileInvokeResponse) []VirtualMachineScaleSetExtensionInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionInvokeResponseArrayOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileResponse struct {
	// The virtual machine scale set child extension resources.
	Extensions []VirtualMachineScaleSetExtensionResponse `pulumi:"extensions"`
}

// VirtualMachineScaleSetExtensionProfileResponseInput is an input type that accepts VirtualMachineScaleSetExtensionProfileResponseArgs and VirtualMachineScaleSetExtensionProfileResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileResponseInput` via:
//
//          VirtualMachineScaleSetExtensionProfileResponseArgs{...}
type VirtualMachineScaleSetExtensionProfileResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileResponseOutput() VirtualMachineScaleSetExtensionProfileResponseOutput
	ToVirtualMachineScaleSetExtensionProfileResponseOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileResponseOutput
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileResponseArgs struct {
	// The virtual machine scale set child extension resources.
	Extensions VirtualMachineScaleSetExtensionResponseArrayInput `pulumi:"extensions"`
}

func (VirtualMachineScaleSetExtensionProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionProfileResponseArgs) ToVirtualMachineScaleSetExtensionProfileResponseOutput() VirtualMachineScaleSetExtensionProfileResponseOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileResponseArgs) ToVirtualMachineScaleSetExtensionProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileResponseOutput)
}

func (i VirtualMachineScaleSetExtensionProfileResponseArgs) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionProfileResponseArgs) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileResponseOutput).ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetExtensionProfileResponsePtrInput is an input type that accepts VirtualMachineScaleSetExtensionProfileResponseArgs, VirtualMachineScaleSetExtensionProfileResponsePtr and VirtualMachineScaleSetExtensionProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionProfileResponsePtrInput` via:
//
//          VirtualMachineScaleSetExtensionProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetExtensionProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput
	ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput
}

type virtualMachineScaleSetExtensionProfileResponsePtrType VirtualMachineScaleSetExtensionProfileResponseArgs

func VirtualMachineScaleSetExtensionProfileResponsePtr(v *VirtualMachineScaleSetExtensionProfileResponseArgs) VirtualMachineScaleSetExtensionProfileResponsePtrInput {
	return (*virtualMachineScaleSetExtensionProfileResponsePtrType)(v)
}

func (*virtualMachineScaleSetExtensionProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetExtensionProfileResponsePtrType) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetExtensionProfileResponsePtrType) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionProfileResponsePtrOutput)
}

// Describes a virtual machine scale set extension profile.
type VirtualMachineScaleSetExtensionProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponseOutput() VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o.ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetExtensionProfileResponseOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileResponse) *VirtualMachineScaleSetExtensionProfileResponse {
		return &v
	}).(VirtualMachineScaleSetExtensionProfileResponsePtrOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileResponseOutput) Extensions() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionProfileResponse) []VirtualMachineScaleSetExtensionResponse {
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionResponseArrayOutput)
}

type VirtualMachineScaleSetExtensionProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetExtensionProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutput() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) ToVirtualMachineScaleSetExtensionProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) Elem() VirtualMachineScaleSetExtensionProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileResponse) VirtualMachineScaleSetExtensionProfileResponse {
		return *v
	}).(VirtualMachineScaleSetExtensionProfileResponseOutput)
}

// The virtual machine scale set child extension resources.
func (o VirtualMachineScaleSetExtensionProfileResponsePtrOutput) Extensions() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetExtensionProfileResponse) []VirtualMachineScaleSetExtensionResponse {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(VirtualMachineScaleSetExtensionResponseArrayOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionResponse struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings interface{} `pulumi:"settings"`
	// The type of the extension handler.
	Type *string `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// VirtualMachineScaleSetExtensionResponseInput is an input type that accepts VirtualMachineScaleSetExtensionResponseArgs and VirtualMachineScaleSetExtensionResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionResponseInput` via:
//
//          VirtualMachineScaleSetExtensionResponseArgs{...}
type VirtualMachineScaleSetExtensionResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionResponseOutput() VirtualMachineScaleSetExtensionResponseOutput
	ToVirtualMachineScaleSetExtensionResponseOutputWithContext(context.Context) VirtualMachineScaleSetExtensionResponseOutput
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionResponseArgs struct {
	// Whether the extension handler should be automatically upgraded across minor versions.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Json formatted protected settings for the extension.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Json formatted public settings for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// The type of the extension handler.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The type version of the extension handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (VirtualMachineScaleSetExtensionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionResponseArgs) ToVirtualMachineScaleSetExtensionResponseOutput() VirtualMachineScaleSetExtensionResponseOutput {
	return i.ToVirtualMachineScaleSetExtensionResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionResponseArgs) ToVirtualMachineScaleSetExtensionResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionResponseOutput)
}

// VirtualMachineScaleSetExtensionResponseArrayInput is an input type that accepts VirtualMachineScaleSetExtensionResponseArray and VirtualMachineScaleSetExtensionResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetExtensionResponseArrayInput` via:
//
//          VirtualMachineScaleSetExtensionResponseArray{ VirtualMachineScaleSetExtensionResponseArgs{...} }
type VirtualMachineScaleSetExtensionResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetExtensionResponseArrayOutput() VirtualMachineScaleSetExtensionResponseArrayOutput
	ToVirtualMachineScaleSetExtensionResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetExtensionResponseArrayOutput
}

type VirtualMachineScaleSetExtensionResponseArray []VirtualMachineScaleSetExtensionResponseInput

func (VirtualMachineScaleSetExtensionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetExtensionResponseArray) ToVirtualMachineScaleSetExtensionResponseArrayOutput() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return i.ToVirtualMachineScaleSetExtensionResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetExtensionResponseArray) ToVirtualMachineScaleSetExtensionResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetExtensionResponseArrayOutput)
}

// Describes a Virtual Machine Scale Set Extension.
type VirtualMachineScaleSetExtensionResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionResponseOutput) ToVirtualMachineScaleSetExtensionResponseOutput() VirtualMachineScaleSetExtensionResponseOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseOutput) ToVirtualMachineScaleSetExtensionResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseOutput {
	return o
}

// Whether the extension handler should be automatically upgraded across minor versions.
func (o VirtualMachineScaleSetExtensionResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Resource Id
func (o VirtualMachineScaleSetExtensionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the extension.
func (o VirtualMachineScaleSetExtensionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Json formatted protected settings for the extension.
func (o VirtualMachineScaleSetExtensionResponseOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// The provisioning state, which only appears in the response.
func (o VirtualMachineScaleSetExtensionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o VirtualMachineScaleSetExtensionResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Json formatted public settings for the extension.
func (o VirtualMachineScaleSetExtensionResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// The type of the extension handler.
func (o VirtualMachineScaleSetExtensionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The type version of the extension handler.
func (o VirtualMachineScaleSetExtensionResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetExtensionResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetExtensionResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) ToVirtualMachineScaleSetExtensionResponseArrayOutput() VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) ToVirtualMachineScaleSetExtensionResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetExtensionResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetExtensionResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetExtensionResponse {
		return vs[0].([]VirtualMachineScaleSetExtensionResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetExtensionResponseOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfiguration struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools []SubResource `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools []SubResource `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools []SubResource `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name string `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReference `pulumi:"subnet"`
}

// VirtualMachineScaleSetIPConfigurationInput is an input type that accepts VirtualMachineScaleSetIPConfigurationArgs and VirtualMachineScaleSetIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationInput` via:
//
//          VirtualMachineScaleSetIPConfigurationArgs{...}
type VirtualMachineScaleSetIPConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput
	ToVirtualMachineScaleSetIPConfigurationOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationOutput
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationArgs struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools SubResourceArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools SubResourceArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools SubResourceArrayInput `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReferenceInput `pulumi:"subnet"`
}

func (VirtualMachineScaleSetIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationArgs) ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationArgs) ToVirtualMachineScaleSetIPConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationOutput)
}

// VirtualMachineScaleSetIPConfigurationArrayInput is an input type that accepts VirtualMachineScaleSetIPConfigurationArray and VirtualMachineScaleSetIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationArrayInput` via:
//
//          VirtualMachineScaleSetIPConfigurationArray{ VirtualMachineScaleSetIPConfigurationArgs{...} }
type VirtualMachineScaleSetIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput
	ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput
}

type VirtualMachineScaleSetIPConfigurationArray []VirtualMachineScaleSetIPConfigurationInput

func (VirtualMachineScaleSetIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationArray) ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationArray) ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationOutput) ToVirtualMachineScaleSetIPConfigurationOutput() VirtualMachineScaleSetIPConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationOutput) ToVirtualMachineScaleSetIPConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationOutput {
	return o
}

// The application gateway backend address pools.
func (o VirtualMachineScaleSetIPConfigurationOutput) ApplicationGatewayBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) []SubResource {
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceArrayOutput)
}

// Resource Id
func (o VirtualMachineScaleSetIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The load balancer backend address pools.
func (o VirtualMachineScaleSetIPConfigurationOutput) LoadBalancerBackendAddressPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) []SubResource { return v.LoadBalancerBackendAddressPools }).(SubResourceArrayOutput)
}

// The load balancer inbound nat pools.
func (o VirtualMachineScaleSetIPConfigurationOutput) LoadBalancerInboundNatPools() SubResourceArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) []SubResource { return v.LoadBalancerInboundNatPools }).(SubResourceArrayOutput)
}

// The IP configuration name.
func (o VirtualMachineScaleSetIPConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The subnet.
func (o VirtualMachineScaleSetIPConfigurationOutput) Subnet() ApiEntityReferenceOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfiguration) ApiEntityReference { return v.Subnet }).(ApiEntityReferenceOutput)
}

type VirtualMachineScaleSetIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) ToVirtualMachineScaleSetIPConfigurationArrayOutput() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) ToVirtualMachineScaleSetIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIPConfiguration {
		return vs[0].([]VirtualMachineScaleSetIPConfiguration)[vs[1].(int)]
	}).(VirtualMachineScaleSetIPConfigurationOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationInvokeResponse struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools []SubResourceInvokeResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools []SubResourceInvokeResponse `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools []SubResourceInvokeResponse `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name string `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReferenceInvokeResponse `pulumi:"subnet"`
}

// VirtualMachineScaleSetIPConfigurationInvokeResponseInput is an input type that accepts VirtualMachineScaleSetIPConfigurationInvokeResponseArgs and VirtualMachineScaleSetIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationInvokeResponseInput` via:
//
//          VirtualMachineScaleSetIPConfigurationInvokeResponseArgs{...}
type VirtualMachineScaleSetIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseOutput
	ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseOutput
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationInvokeResponseArgs struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools SubResourceInvokeResponseArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools SubResourceInvokeResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools SubResourceInvokeResponseArrayInput `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReferenceInvokeResponseInput `pulumi:"subnet"`
}

func (VirtualMachineScaleSetIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationInvokeResponseArgs) ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationInvokeResponseArgs) ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationInvokeResponseOutput)
}

// VirtualMachineScaleSetIPConfigurationInvokeResponseArrayInput is an input type that accepts VirtualMachineScaleSetIPConfigurationInvokeResponseArray and VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationInvokeResponseArrayInput` via:
//
//          VirtualMachineScaleSetIPConfigurationInvokeResponseArray{ VirtualMachineScaleSetIPConfigurationInvokeResponseArgs{...} }
type VirtualMachineScaleSetIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput
	ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput
}

type VirtualMachineScaleSetIPConfigurationInvokeResponseArray []VirtualMachineScaleSetIPConfigurationInvokeResponseInput

func (VirtualMachineScaleSetIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationInvokeResponseArray) ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationInvokeResponseArray) ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) ToVirtualMachineScaleSetIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseOutput {
	return o
}

// The application gateway backend address pools.
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) ApplicationGatewayBackendAddressPools() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) []SubResourceInvokeResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceInvokeResponseArrayOutput)
}

// Resource Id
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The load balancer backend address pools.
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) LoadBalancerBackendAddressPools() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) []SubResourceInvokeResponse {
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceInvokeResponseArrayOutput)
}

// The load balancer inbound nat pools.
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) LoadBalancerInboundNatPools() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) []SubResourceInvokeResponse {
		return v.LoadBalancerInboundNatPools
	}).(SubResourceInvokeResponseArrayOutput)
}

// The IP configuration name.
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The subnet.
func (o VirtualMachineScaleSetIPConfigurationInvokeResponseOutput) Subnet() ApiEntityReferenceInvokeResponseOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationInvokeResponse) ApiEntityReferenceInvokeResponse {
		return v.Subnet
	}).(ApiEntityReferenceInvokeResponseOutput)
}

type VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIPConfigurationInvokeResponse {
		return vs[0].([]VirtualMachineScaleSetIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetIPConfigurationInvokeResponseOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationResponse struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools []SubResourceResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id *string `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools []SubResourceResponse `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools []SubResourceResponse `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name string `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReferenceResponse `pulumi:"subnet"`
}

// VirtualMachineScaleSetIPConfigurationResponseInput is an input type that accepts VirtualMachineScaleSetIPConfigurationResponseArgs and VirtualMachineScaleSetIPConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationResponseInput` via:
//
//          VirtualMachineScaleSetIPConfigurationResponseArgs{...}
type VirtualMachineScaleSetIPConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationResponseOutput() VirtualMachineScaleSetIPConfigurationResponseOutput
	ToVirtualMachineScaleSetIPConfigurationResponseOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationResponseOutput
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationResponseArgs struct {
	// The application gateway backend address pools.
	ApplicationGatewayBackendAddressPools SubResourceResponseArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The load balancer backend address pools.
	LoadBalancerBackendAddressPools SubResourceResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// The load balancer inbound nat pools.
	LoadBalancerInboundNatPools SubResourceResponseArrayInput `pulumi:"loadBalancerInboundNatPools"`
	// The IP configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// The subnet.
	Subnet ApiEntityReferenceResponseInput `pulumi:"subnet"`
}

func (VirtualMachineScaleSetIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationResponseArgs) ToVirtualMachineScaleSetIPConfigurationResponseOutput() VirtualMachineScaleSetIPConfigurationResponseOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationResponseArgs) ToVirtualMachineScaleSetIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationResponseOutput)
}

// VirtualMachineScaleSetIPConfigurationResponseArrayInput is an input type that accepts VirtualMachineScaleSetIPConfigurationResponseArray and VirtualMachineScaleSetIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIPConfigurationResponseArrayInput` via:
//
//          VirtualMachineScaleSetIPConfigurationResponseArray{ VirtualMachineScaleSetIPConfigurationResponseArgs{...} }
type VirtualMachineScaleSetIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIPConfigurationResponseArrayOutput() VirtualMachineScaleSetIPConfigurationResponseArrayOutput
	ToVirtualMachineScaleSetIPConfigurationResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetIPConfigurationResponseArrayOutput
}

type VirtualMachineScaleSetIPConfigurationResponseArray []VirtualMachineScaleSetIPConfigurationResponseInput

func (VirtualMachineScaleSetIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIPConfigurationResponseArray) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutput() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return i.ToVirtualMachineScaleSetIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIPConfigurationResponseArray) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIPConfigurationResponseArrayOutput)
}

// Describes a virtual machine scale set network profile's IP configuration.
type VirtualMachineScaleSetIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationResponseOutput) ToVirtualMachineScaleSetIPConfigurationResponseOutput() VirtualMachineScaleSetIPConfigurationResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseOutput) ToVirtualMachineScaleSetIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseOutput {
	return o
}

// The application gateway backend address pools.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) []SubResourceResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// Resource Id
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The load balancer backend address pools.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) []SubResourceResponse {
		return v.LoadBalancerBackendAddressPools
	}).(SubResourceResponseArrayOutput)
}

// The load balancer inbound nat pools.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) LoadBalancerInboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) []SubResourceResponse {
		return v.LoadBalancerInboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// The IP configuration name.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The subnet.
func (o VirtualMachineScaleSetIPConfigurationResponseOutput) Subnet() ApiEntityReferenceResponseOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIPConfigurationResponse) ApiEntityReferenceResponse { return v.Subnet }).(ApiEntityReferenceResponseOutput)
}

type VirtualMachineScaleSetIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutput() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) ToVirtualMachineScaleSetIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetIPConfigurationResponse {
		return vs[0].([]VirtualMachineScaleSetIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetIPConfigurationResponseOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentity struct {
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineScaleSetIdentityInput is an input type that accepts VirtualMachineScaleSetIdentityArgs and VirtualMachineScaleSetIdentityOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIdentityInput` via:
//
//          VirtualMachineScaleSetIdentityArgs{...}
type VirtualMachineScaleSetIdentityInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIdentityOutput() VirtualMachineScaleSetIdentityOutput
	ToVirtualMachineScaleSetIdentityOutputWithContext(context.Context) VirtualMachineScaleSetIdentityOutput
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityArgs struct {
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type ResourceIdentityType `pulumi:"type"`
}

func (VirtualMachineScaleSetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i VirtualMachineScaleSetIdentityArgs) ToVirtualMachineScaleSetIdentityOutput() VirtualMachineScaleSetIdentityOutput {
	return i.ToVirtualMachineScaleSetIdentityOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIdentityArgs) ToVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityOutput)
}

func (i VirtualMachineScaleSetIdentityArgs) ToVirtualMachineScaleSetIdentityPtrOutput() VirtualMachineScaleSetIdentityPtrOutput {
	return i.ToVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIdentityArgs) ToVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityOutput).ToVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetIdentityPtrInput is an input type that accepts VirtualMachineScaleSetIdentityArgs, VirtualMachineScaleSetIdentityPtr and VirtualMachineScaleSetIdentityPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIdentityPtrInput` via:
//
//          VirtualMachineScaleSetIdentityArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetIdentityPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIdentityPtrOutput() VirtualMachineScaleSetIdentityPtrOutput
	ToVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Context) VirtualMachineScaleSetIdentityPtrOutput
}

type virtualMachineScaleSetIdentityPtrType VirtualMachineScaleSetIdentityArgs

func VirtualMachineScaleSetIdentityPtr(v *VirtualMachineScaleSetIdentityArgs) VirtualMachineScaleSetIdentityPtrInput {
	return (*virtualMachineScaleSetIdentityPtrType)(v)
}

func (*virtualMachineScaleSetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i *virtualMachineScaleSetIdentityPtrType) ToVirtualMachineScaleSetIdentityPtrOutput() VirtualMachineScaleSetIdentityPtrOutput {
	return i.ToVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetIdentityPtrType) ToVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityPtrOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o VirtualMachineScaleSetIdentityOutput) ToVirtualMachineScaleSetIdentityOutput() VirtualMachineScaleSetIdentityOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityOutput) ToVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityOutput) ToVirtualMachineScaleSetIdentityPtrOutput() VirtualMachineScaleSetIdentityPtrOutput {
	return o.ToVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetIdentityOutput) ToVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentity) *VirtualMachineScaleSetIdentity {
		return &v
	}).(VirtualMachineScaleSetIdentityPtrOutput)
}

// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineScaleSetIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetIdentityPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o VirtualMachineScaleSetIdentityPtrOutput) ToVirtualMachineScaleSetIdentityPtrOutput() VirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityPtrOutput) ToVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityPtrOutput) Elem() VirtualMachineScaleSetIdentityOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentity) VirtualMachineScaleSetIdentity { return *v }).(VirtualMachineScaleSetIdentityOutput)
}

// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineScaleSetIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityInvokeResponse struct {
	// The principal id of virtual machine scale set identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the virtual machine scale set.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineScaleSetIdentityInvokeResponseInput is an input type that accepts VirtualMachineScaleSetIdentityInvokeResponseArgs and VirtualMachineScaleSetIdentityInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIdentityInvokeResponseInput` via:
//
//          VirtualMachineScaleSetIdentityInvokeResponseArgs{...}
type VirtualMachineScaleSetIdentityInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIdentityInvokeResponseOutput() VirtualMachineScaleSetIdentityInvokeResponseOutput
	ToVirtualMachineScaleSetIdentityInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetIdentityInvokeResponseOutput
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityInvokeResponseArgs struct {
	// The principal id of virtual machine scale set identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the virtual machine scale set.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineScaleSetIdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentityInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIdentityInvokeResponseArgs) ToVirtualMachineScaleSetIdentityInvokeResponseOutput() VirtualMachineScaleSetIdentityInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIdentityInvokeResponseArgs) ToVirtualMachineScaleSetIdentityInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityInvokeResponseOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentityInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIdentityInvokeResponseOutput) ToVirtualMachineScaleSetIdentityInvokeResponseOutput() VirtualMachineScaleSetIdentityInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityInvokeResponseOutput) ToVirtualMachineScaleSetIdentityInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityInvokeResponseOutput {
	return o
}

// The principal id of virtual machine scale set identity.
func (o VirtualMachineScaleSetIdentityInvokeResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityInvokeResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the virtual machine scale set.
func (o VirtualMachineScaleSetIdentityInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineScaleSetIdentityInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityResponse struct {
	// The principal id of virtual machine scale set identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id associated with the virtual machine scale set.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type *string `pulumi:"type"`
}

// VirtualMachineScaleSetIdentityResponseInput is an input type that accepts VirtualMachineScaleSetIdentityResponseArgs and VirtualMachineScaleSetIdentityResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIdentityResponseInput` via:
//
//          VirtualMachineScaleSetIdentityResponseArgs{...}
type VirtualMachineScaleSetIdentityResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIdentityResponseOutput() VirtualMachineScaleSetIdentityResponseOutput
	ToVirtualMachineScaleSetIdentityResponseOutputWithContext(context.Context) VirtualMachineScaleSetIdentityResponseOutput
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityResponseArgs struct {
	// The principal id of virtual machine scale set identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id associated with the virtual machine scale set.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VirtualMachineScaleSetIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentityResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetIdentityResponseArgs) ToVirtualMachineScaleSetIdentityResponseOutput() VirtualMachineScaleSetIdentityResponseOutput {
	return i.ToVirtualMachineScaleSetIdentityResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIdentityResponseArgs) ToVirtualMachineScaleSetIdentityResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityResponseOutput)
}

func (i VirtualMachineScaleSetIdentityResponseArgs) ToVirtualMachineScaleSetIdentityResponsePtrOutput() VirtualMachineScaleSetIdentityResponsePtrOutput {
	return i.ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetIdentityResponseArgs) ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityResponseOutput).ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetIdentityResponsePtrInput is an input type that accepts VirtualMachineScaleSetIdentityResponseArgs, VirtualMachineScaleSetIdentityResponsePtr and VirtualMachineScaleSetIdentityResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetIdentityResponsePtrInput` via:
//
//          VirtualMachineScaleSetIdentityResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetIdentityResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetIdentityResponsePtrOutput() VirtualMachineScaleSetIdentityResponsePtrOutput
	ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetIdentityResponsePtrOutput
}

type virtualMachineScaleSetIdentityResponsePtrType VirtualMachineScaleSetIdentityResponseArgs

func VirtualMachineScaleSetIdentityResponsePtr(v *VirtualMachineScaleSetIdentityResponseArgs) VirtualMachineScaleSetIdentityResponsePtrInput {
	return (*virtualMachineScaleSetIdentityResponsePtrType)(v)
}

func (*virtualMachineScaleSetIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIdentityResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetIdentityResponsePtrType) ToVirtualMachineScaleSetIdentityResponsePtrOutput() VirtualMachineScaleSetIdentityResponsePtrOutput {
	return i.ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetIdentityResponsePtrType) ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetIdentityResponsePtrOutput)
}

// Identity for the virtual machine scale set.
type VirtualMachineScaleSetIdentityResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetIdentityResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIdentityResponseOutput) ToVirtualMachineScaleSetIdentityResponseOutput() VirtualMachineScaleSetIdentityResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityResponseOutput) ToVirtualMachineScaleSetIdentityResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponseOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityResponseOutput) ToVirtualMachineScaleSetIdentityResponsePtrOutput() VirtualMachineScaleSetIdentityResponsePtrOutput {
	return o.ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetIdentityResponseOutput) ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityResponse) *VirtualMachineScaleSetIdentityResponse {
		return &v
	}).(VirtualMachineScaleSetIdentityResponsePtrOutput)
}

// The principal id of virtual machine scale set identity.
func (o VirtualMachineScaleSetIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id associated with the virtual machine scale set.
func (o VirtualMachineScaleSetIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineScaleSetIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VirtualMachineScaleSetIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetIdentityResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetIdentityResponsePtrOutput) ToVirtualMachineScaleSetIdentityResponsePtrOutput() VirtualMachineScaleSetIdentityResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityResponsePtrOutput) ToVirtualMachineScaleSetIdentityResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetIdentityResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetIdentityResponsePtrOutput) Elem() VirtualMachineScaleSetIdentityResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentityResponse) VirtualMachineScaleSetIdentityResponse { return *v }).(VirtualMachineScaleSetIdentityResponseOutput)
}

// The principal id of virtual machine scale set identity.
func (o VirtualMachineScaleSetIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id associated with the virtual machine scale set.
func (o VirtualMachineScaleSetIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the virtual machine scale set. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
func (o VirtualMachineScaleSetIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfiguration struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations []VirtualMachineScaleSetIPConfiguration `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name string `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary *bool `pulumi:"primary"`
}

// VirtualMachineScaleSetNetworkConfigurationInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationArgs and VirtualMachineScaleSetNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationArgs{...}
type VirtualMachineScaleSetNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput
	ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationOutput
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations VirtualMachineScaleSetIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (VirtualMachineScaleSetNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationArgs) ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationArgs) ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationOutput)
}

// VirtualMachineScaleSetNetworkConfigurationArrayInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationArray and VirtualMachineScaleSetNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationArrayInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationArray{ VirtualMachineScaleSetNetworkConfigurationArgs{...} }
type VirtualMachineScaleSetNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput
	ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput
}

type VirtualMachineScaleSetNetworkConfigurationArray []VirtualMachineScaleSetNetworkConfigurationInput

func (VirtualMachineScaleSetNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationArray) ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationArray) ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationOutput) ToVirtualMachineScaleSetNetworkConfigurationOutput() VirtualMachineScaleSetNetworkConfigurationOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationOutput) ToVirtualMachineScaleSetNetworkConfigurationOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationOutput {
	return o
}

// Resource Id
func (o VirtualMachineScaleSetNetworkConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine scale set IP Configuration.
func (o VirtualMachineScaleSetNetworkConfigurationOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) []VirtualMachineScaleSetIPConfiguration {
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationArrayOutput)
}

// The network configuration name.
func (o VirtualMachineScaleSetNetworkConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Whether this is a primary NIC on a virtual machine.
func (o VirtualMachineScaleSetNetworkConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfiguration)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationArrayOutput() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetNetworkConfiguration {
		return vs[0].([]VirtualMachineScaleSetNetworkConfiguration)[vs[1].(int)]
	}).(VirtualMachineScaleSetNetworkConfigurationOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationInvokeResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations []VirtualMachineScaleSetIPConfigurationInvokeResponse `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name string `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary *bool `pulumi:"primary"`
}

// VirtualMachineScaleSetNetworkConfigurationInvokeResponseInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs and VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationInvokeResponseInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs{...}
type VirtualMachineScaleSetNetworkConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput
	ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations VirtualMachineScaleSetIPConfigurationInvokeResponseArrayInput `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput)
}

// VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray and VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray{ VirtualMachineScaleSetNetworkConfigurationInvokeResponseArgs{...} }
type VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput
	ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput
}

type VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray []VirtualMachineScaleSetNetworkConfigurationInvokeResponseInput

func (VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationInvokeResponseArray) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput {
	return o
}

// Resource Id
func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine scale set IP Configuration.
func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationInvokeResponse) []VirtualMachineScaleSetIPConfigurationInvokeResponse {
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput)
}

// The network configuration name.
func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Whether this is a primary NIC on a virtual machine.
func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationInvokeResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetNetworkConfigurationInvokeResponse {
		return vs[0].([]VirtualMachineScaleSetNetworkConfigurationInvokeResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations []VirtualMachineScaleSetIPConfigurationResponse `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name string `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary *bool `pulumi:"primary"`
}

// VirtualMachineScaleSetNetworkConfigurationResponseInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationResponseArgs and VirtualMachineScaleSetNetworkConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationResponseInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationResponseArgs{...}
type VirtualMachineScaleSetNetworkConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationResponseOutput() VirtualMachineScaleSetNetworkConfigurationResponseOutput
	ToVirtualMachineScaleSetNetworkConfigurationResponseOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationResponseOutput
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationResponseArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine scale set IP Configuration.
	IpConfigurations VirtualMachineScaleSetIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The network configuration name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether this is a primary NIC on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (VirtualMachineScaleSetNetworkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationResponseArgs) ToVirtualMachineScaleSetNetworkConfigurationResponseOutput() VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationResponseArgs) ToVirtualMachineScaleSetNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationResponseOutput)
}

// VirtualMachineScaleSetNetworkConfigurationResponseArrayInput is an input type that accepts VirtualMachineScaleSetNetworkConfigurationResponseArray and VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkConfigurationResponseArrayInput` via:
//
//          VirtualMachineScaleSetNetworkConfigurationResponseArray{ VirtualMachineScaleSetNetworkConfigurationResponseArgs{...} }
type VirtualMachineScaleSetNetworkConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput
	ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutputWithContext(context.Context) VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput
}

type VirtualMachineScaleSetNetworkConfigurationResponseArray []VirtualMachineScaleSetNetworkConfigurationResponseInput

func (VirtualMachineScaleSetNetworkConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkConfigurationResponseArray) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return i.ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkConfigurationResponseArray) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput)
}

// Describes a virtual machine scale set network profile's network configurations.
type VirtualMachineScaleSetNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseOutput() VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return o
}

// Resource Id
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine scale set IP Configuration.
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) IpConfigurations() VirtualMachineScaleSetIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) []VirtualMachineScaleSetIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualMachineScaleSetIPConfigurationResponseArrayOutput)
}

// The network configuration name.
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Whether this is a primary NIC on a virtual machine.
func (o VirtualMachineScaleSetNetworkConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineScaleSetNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutput() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) ToVirtualMachineScaleSetNetworkConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineScaleSetNetworkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineScaleSetNetworkConfigurationResponse {
		return vs[0].([]VirtualMachineScaleSetNetworkConfigurationResponse)[vs[1].(int)]
	}).(VirtualMachineScaleSetNetworkConfigurationResponseOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfile struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfiguration `pulumi:"networkInterfaceConfigurations"`
}

// VirtualMachineScaleSetNetworkProfileInput is an input type that accepts VirtualMachineScaleSetNetworkProfileArgs and VirtualMachineScaleSetNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileInput` via:
//
//          VirtualMachineScaleSetNetworkProfileArgs{...}
type VirtualMachineScaleSetNetworkProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput
	ToVirtualMachineScaleSetNetworkProfileOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileOutput
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileArgs struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations VirtualMachineScaleSetNetworkConfigurationArrayInput `pulumi:"networkInterfaceConfigurations"`
}

func (VirtualMachineScaleSetNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileOutput)
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileArgs) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileOutput).ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkProfilePtrInput is an input type that accepts VirtualMachineScaleSetNetworkProfileArgs, VirtualMachineScaleSetNetworkProfilePtr and VirtualMachineScaleSetNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfilePtrInput` via:
//
//          VirtualMachineScaleSetNetworkProfileArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput
	ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput
}

type virtualMachineScaleSetNetworkProfilePtrType VirtualMachineScaleSetNetworkProfileArgs

func VirtualMachineScaleSetNetworkProfilePtr(v *VirtualMachineScaleSetNetworkProfileArgs) VirtualMachineScaleSetNetworkProfilePtrInput {
	return (*virtualMachineScaleSetNetworkProfilePtrType)(v)
}

func (*virtualMachineScaleSetNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkProfilePtrType) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkProfilePtrType) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfileOutput() VirtualMachineScaleSetNetworkProfileOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkProfileOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfile) *VirtualMachineScaleSetNetworkProfile {
		return &v
	}).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfile) []VirtualMachineScaleSetNetworkConfiguration {
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

type VirtualMachineScaleSetNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutput() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) ToVirtualMachineScaleSetNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfilePtrOutput) Elem() VirtualMachineScaleSetNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) VirtualMachineScaleSetNetworkProfile { return *v }).(VirtualMachineScaleSetNetworkProfileOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfilePtrOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfile) []VirtualMachineScaleSetNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationArrayOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileInvokeResponse struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfigurationInvokeResponse `pulumi:"networkInterfaceConfigurations"`
}

// VirtualMachineScaleSetNetworkProfileInvokeResponseInput is an input type that accepts VirtualMachineScaleSetNetworkProfileInvokeResponseArgs and VirtualMachineScaleSetNetworkProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileInvokeResponseInput` via:
//
//          VirtualMachineScaleSetNetworkProfileInvokeResponseArgs{...}
type VirtualMachineScaleSetNetworkProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutput() VirtualMachineScaleSetNetworkProfileInvokeResponseOutput
	ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponseOutput
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileInvokeResponseArgs struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayInput `pulumi:"networkInterfaceConfigurations"`
}

func (VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutput() VirtualMachineScaleSetNetworkProfileInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileInvokeResponseOutput)
}

func (i VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileInvokeResponseOutput).ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkProfileInvokeResponsePtrInput is an input type that accepts VirtualMachineScaleSetNetworkProfileInvokeResponseArgs, VirtualMachineScaleSetNetworkProfileInvokeResponsePtr and VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileInvokeResponsePtrInput` via:
//
//          VirtualMachineScaleSetNetworkProfileInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetNetworkProfileInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput
	ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput
}

type virtualMachineScaleSetNetworkProfileInvokeResponsePtrType VirtualMachineScaleSetNetworkProfileInvokeResponseArgs

func VirtualMachineScaleSetNetworkProfileInvokeResponsePtr(v *VirtualMachineScaleSetNetworkProfileInvokeResponseArgs) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrInput {
	return (*virtualMachineScaleSetNetworkProfileInvokeResponsePtrType)(v)
}

func (*virtualMachineScaleSetNetworkProfileInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfileInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkProfileInvokeResponsePtrType) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkProfileInvokeResponsePtrType) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutput() VirtualMachineScaleSetNetworkProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return o.ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileInvokeResponse) *VirtualMachineScaleSetNetworkProfileInvokeResponse {
		return &v
	}).(VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileInvokeResponseOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileInvokeResponse) []VirtualMachineScaleSetNetworkConfigurationInvokeResponse {
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput)
}

type VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput) Elem() VirtualMachineScaleSetNetworkProfileInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileInvokeResponse) VirtualMachineScaleSetNetworkProfileInvokeResponse {
		return *v
	}).(VirtualMachineScaleSetNetworkProfileInvokeResponseOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileInvokeResponse) []VirtualMachineScaleSetNetworkConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileResponse struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations []VirtualMachineScaleSetNetworkConfigurationResponse `pulumi:"networkInterfaceConfigurations"`
}

// VirtualMachineScaleSetNetworkProfileResponseInput is an input type that accepts VirtualMachineScaleSetNetworkProfileResponseArgs and VirtualMachineScaleSetNetworkProfileResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileResponseInput` via:
//
//          VirtualMachineScaleSetNetworkProfileResponseArgs{...}
type VirtualMachineScaleSetNetworkProfileResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileResponseOutput() VirtualMachineScaleSetNetworkProfileResponseOutput
	ToVirtualMachineScaleSetNetworkProfileResponseOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileResponseOutput
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileResponseArgs struct {
	// The list of network configurations.
	NetworkInterfaceConfigurations VirtualMachineScaleSetNetworkConfigurationResponseArrayInput `pulumi:"networkInterfaceConfigurations"`
}

func (VirtualMachineScaleSetNetworkProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetNetworkProfileResponseArgs) ToVirtualMachineScaleSetNetworkProfileResponseOutput() VirtualMachineScaleSetNetworkProfileResponseOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileResponseArgs) ToVirtualMachineScaleSetNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileResponseOutput)
}

func (i VirtualMachineScaleSetNetworkProfileResponseArgs) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetNetworkProfileResponseArgs) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileResponseOutput).ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetNetworkProfileResponsePtrInput is an input type that accepts VirtualMachineScaleSetNetworkProfileResponseArgs, VirtualMachineScaleSetNetworkProfileResponsePtr and VirtualMachineScaleSetNetworkProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetNetworkProfileResponsePtrInput` via:
//
//          VirtualMachineScaleSetNetworkProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetNetworkProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput
	ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput
}

type virtualMachineScaleSetNetworkProfileResponsePtrType VirtualMachineScaleSetNetworkProfileResponseArgs

func VirtualMachineScaleSetNetworkProfileResponsePtr(v *VirtualMachineScaleSetNetworkProfileResponseArgs) VirtualMachineScaleSetNetworkProfileResponsePtrInput {
	return (*virtualMachineScaleSetNetworkProfileResponsePtrType)(v)
}

func (*virtualMachineScaleSetNetworkProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetNetworkProfileResponsePtrType) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetNetworkProfileResponsePtrType) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetNetworkProfileResponsePtrOutput)
}

// Describes a virtual machine scale set network profile.
type VirtualMachineScaleSetNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponseOutput() VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o.ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetNetworkProfileResponseOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileResponse) *VirtualMachineScaleSetNetworkProfileResponse {
		return &v
	}).(VirtualMachineScaleSetNetworkProfileResponsePtrOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileResponseOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetNetworkProfileResponse) []VirtualMachineScaleSetNetworkConfigurationResponse {
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput)
}

type VirtualMachineScaleSetNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutput() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) ToVirtualMachineScaleSetNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) Elem() VirtualMachineScaleSetNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) VirtualMachineScaleSetNetworkProfileResponse {
		return *v
	}).(VirtualMachineScaleSetNetworkProfileResponseOutput)
}

// The list of network configurations.
func (o VirtualMachineScaleSetNetworkProfileResponsePtrOutput) NetworkInterfaceConfigurations() VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetNetworkProfileResponse) []VirtualMachineScaleSetNetworkConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceConfigurations
	}).(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDisk struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image *VirtualHardDisk `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers []string `pulumi:"vhdContainers"`
}

// VirtualMachineScaleSetOSDiskInput is an input type that accepts VirtualMachineScaleSetOSDiskArgs and VirtualMachineScaleSetOSDiskOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskInput` via:
//
//          VirtualMachineScaleSetOSDiskArgs{...}
type VirtualMachineScaleSetOSDiskInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput
	ToVirtualMachineScaleSetOSDiskOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskOutput
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching CachingTypes `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption DiskCreateOptionTypes `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image VirtualHardDiskPtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType OperatingSystemTypes `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers pulumi.StringArrayInput `pulumi:"vhdContainers"`
}

func (VirtualMachineScaleSetOSDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput {
	return i.ToVirtualMachineScaleSetOSDiskOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskOutput)
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskArgs) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskOutput).ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSDiskPtrInput is an input type that accepts VirtualMachineScaleSetOSDiskArgs, VirtualMachineScaleSetOSDiskPtr and VirtualMachineScaleSetOSDiskPtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskPtrInput` via:
//
//          VirtualMachineScaleSetOSDiskArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSDiskPtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput
	ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskPtrOutput
}

type virtualMachineScaleSetOSDiskPtrType VirtualMachineScaleSetOSDiskArgs

func VirtualMachineScaleSetOSDiskPtr(v *VirtualMachineScaleSetOSDiskArgs) VirtualMachineScaleSetOSDiskPtrInput {
	return (*virtualMachineScaleSetOSDiskPtrType)(v)
}

func (*virtualMachineScaleSetOSDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSDiskPtrType) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSDiskPtrType) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskOutput() VirtualMachineScaleSetOSDiskOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSDiskOutput) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *VirtualMachineScaleSetOSDisk {
		return &v
	}).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *VirtualHardDisk { return v.Image }).(VirtualHardDiskPtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDisk) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

type VirtualMachineScaleSetOSDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDisk)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) ToVirtualMachineScaleSetOSDiskPtrOutput() VirtualMachineScaleSetOSDiskPtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) ToVirtualMachineScaleSetOSDiskPtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskPtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskPtrOutput) Elem() VirtualMachineScaleSetOSDiskOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) VirtualMachineScaleSetOSDisk { return *v }).(VirtualMachineScaleSetOSDiskOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskPtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskPtrOutput) Image() VirtualHardDiskPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *VirtualHardDisk {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskPtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskPtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDisk) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskInvokeResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image *VirtualHardDiskInvokeResponse `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers []string `pulumi:"vhdContainers"`
}

// VirtualMachineScaleSetOSDiskInvokeResponseInput is an input type that accepts VirtualMachineScaleSetOSDiskInvokeResponseArgs and VirtualMachineScaleSetOSDiskInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskInvokeResponseInput` via:
//
//          VirtualMachineScaleSetOSDiskInvokeResponseArgs{...}
type VirtualMachineScaleSetOSDiskInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskInvokeResponseOutput() VirtualMachineScaleSetOSDiskInvokeResponseOutput
	ToVirtualMachineScaleSetOSDiskInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskInvokeResponseOutput
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskInvokeResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image VirtualHardDiskInvokeResponsePtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers pulumi.StringArrayInput `pulumi:"vhdContainers"`
}

func (VirtualMachineScaleSetOSDiskInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDiskInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSDiskInvokeResponseArgs) ToVirtualMachineScaleSetOSDiskInvokeResponseOutput() VirtualMachineScaleSetOSDiskInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetOSDiskInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskInvokeResponseArgs) ToVirtualMachineScaleSetOSDiskInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskInvokeResponseOutput)
}

func (i VirtualMachineScaleSetOSDiskInvokeResponseArgs) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutput() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskInvokeResponseArgs) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskInvokeResponseOutput).ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSDiskInvokeResponsePtrInput is an input type that accepts VirtualMachineScaleSetOSDiskInvokeResponseArgs, VirtualMachineScaleSetOSDiskInvokeResponsePtr and VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskInvokeResponsePtrInput` via:
//
//          VirtualMachineScaleSetOSDiskInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSDiskInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutput() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput
	ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput
}

type virtualMachineScaleSetOSDiskInvokeResponsePtrType VirtualMachineScaleSetOSDiskInvokeResponseArgs

func VirtualMachineScaleSetOSDiskInvokeResponsePtr(v *VirtualMachineScaleSetOSDiskInvokeResponseArgs) VirtualMachineScaleSetOSDiskInvokeResponsePtrInput {
	return (*virtualMachineScaleSetOSDiskInvokeResponsePtrType)(v)
}

func (*virtualMachineScaleSetOSDiskInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDiskInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSDiskInvokeResponsePtrType) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutput() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSDiskInvokeResponsePtrType) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDiskInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) ToVirtualMachineScaleSetOSDiskInvokeResponseOutput() VirtualMachineScaleSetOSDiskInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) ToVirtualMachineScaleSetOSDiskInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutput() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o.ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) *VirtualMachineScaleSetOSDiskInvokeResponse {
		return &v
	}).(VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) Image() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) *VirtualHardDiskInvokeResponse { return v.Image }).(VirtualHardDiskInvokeResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskInvokeResponseOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskInvokeResponse) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

type VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDiskInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutput() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) ToVirtualMachineScaleSetOSDiskInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) Elem() VirtualMachineScaleSetOSDiskInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) VirtualMachineScaleSetOSDiskInvokeResponse {
		return *v
	}).(VirtualMachineScaleSetOSDiskInvokeResponseOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) Image() VirtualHardDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) *VirtualHardDiskInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskInvokeResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskResponse struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption string `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image *VirtualHardDiskResponse `pulumi:"image"`
	// The disk name.
	Name string `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType *string `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers []string `pulumi:"vhdContainers"`
}

// VirtualMachineScaleSetOSDiskResponseInput is an input type that accepts VirtualMachineScaleSetOSDiskResponseArgs and VirtualMachineScaleSetOSDiskResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskResponseInput` via:
//
//          VirtualMachineScaleSetOSDiskResponseArgs{...}
type VirtualMachineScaleSetOSDiskResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskResponseOutput() VirtualMachineScaleSetOSDiskResponseOutput
	ToVirtualMachineScaleSetOSDiskResponseOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskResponseOutput
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskResponseArgs struct {
	// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
	Image VirtualHardDiskResponsePtrInput `pulumi:"image"`
	// The disk name.
	Name pulumi.StringInput `pulumi:"name"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The list of virtual hard disk container uris.
	VhdContainers pulumi.StringArrayInput `pulumi:"vhdContainers"`
}

func (VirtualMachineScaleSetOSDiskResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSDiskResponseArgs) ToVirtualMachineScaleSetOSDiskResponseOutput() VirtualMachineScaleSetOSDiskResponseOutput {
	return i.ToVirtualMachineScaleSetOSDiskResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskResponseArgs) ToVirtualMachineScaleSetOSDiskResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskResponseOutput)
}

func (i VirtualMachineScaleSetOSDiskResponseArgs) ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSDiskResponseArgs) ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskResponseOutput).ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSDiskResponsePtrInput is an input type that accepts VirtualMachineScaleSetOSDiskResponseArgs, VirtualMachineScaleSetOSDiskResponsePtr and VirtualMachineScaleSetOSDiskResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSDiskResponsePtrInput` via:
//
//          VirtualMachineScaleSetOSDiskResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSDiskResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput
	ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput
}

type virtualMachineScaleSetOSDiskResponsePtrType VirtualMachineScaleSetOSDiskResponseArgs

func VirtualMachineScaleSetOSDiskResponsePtr(v *VirtualMachineScaleSetOSDiskResponseArgs) VirtualMachineScaleSetOSDiskResponsePtrInput {
	return (*virtualMachineScaleSetOSDiskResponsePtrType)(v)
}

func (*virtualMachineScaleSetOSDiskResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSDiskResponsePtrType) ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSDiskResponsePtrType) ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

// Describes a virtual machine scale set operating system disk.
type VirtualMachineScaleSetOSDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponseOutput() VirtualMachineScaleSetOSDiskResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSDiskResponseOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *VirtualMachineScaleSetOSDiskResponse {
		return &v
	}).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskResponseOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskResponseOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) string { return v.CreateOption }).(pulumi.StringOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskResponseOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *VirtualHardDiskResponse { return v.Image }).(VirtualHardDiskResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) string { return v.Name }).(pulumi.StringOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskResponseOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSDiskResponse) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

type VirtualMachineScaleSetOSDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSDiskResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutput() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) ToVirtualMachineScaleSetOSDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Elem() VirtualMachineScaleSetOSDiskResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) VirtualMachineScaleSetOSDiskResponse { return *v }).(VirtualMachineScaleSetOSDiskResponseOutput)
}

// Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Image() VirtualHardDiskResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *VirtualHardDiskResponse {
		if v == nil {
			return nil
		}
		return v.Image
	}).(VirtualHardDiskResponsePtrOutput)
}

// The disk name.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The list of virtual hard disk container uris.
func (o VirtualMachineScaleSetOSDiskResponsePtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSDiskResponse) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfile struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix *string `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData *string `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration *LinuxConfiguration `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets []VaultSecretGroup `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration *WindowsConfiguration `pulumi:"windowsConfiguration"`
}

// VirtualMachineScaleSetOSProfileInput is an input type that accepts VirtualMachineScaleSetOSProfileArgs and VirtualMachineScaleSetOSProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileInput` via:
//
//          VirtualMachineScaleSetOSProfileArgs{...}
type VirtualMachineScaleSetOSProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput
	ToVirtualMachineScaleSetOSProfileOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileOutput
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix pulumi.StringPtrInput `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration LinuxConfigurationPtrInput `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets VaultSecretGroupArrayInput `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration WindowsConfigurationPtrInput `pulumi:"windowsConfiguration"`
}

func (VirtualMachineScaleSetOSProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput {
	return i.ToVirtualMachineScaleSetOSProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileOutput)
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileArgs) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileOutput).ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSProfilePtrInput is an input type that accepts VirtualMachineScaleSetOSProfileArgs, VirtualMachineScaleSetOSProfilePtr and VirtualMachineScaleSetOSProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfilePtrInput` via:
//
//          VirtualMachineScaleSetOSProfileArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput
	ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSProfilePtrOutput
}

type virtualMachineScaleSetOSProfilePtrType VirtualMachineScaleSetOSProfileArgs

func VirtualMachineScaleSetOSProfilePtr(v *VirtualMachineScaleSetOSProfileArgs) VirtualMachineScaleSetOSProfilePtrInput {
	return (*virtualMachineScaleSetOSProfilePtrType)(v)
}

func (*virtualMachineScaleSetOSProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSProfilePtrType) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSProfilePtrType) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfileOutput() VirtualMachineScaleSetOSProfileOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSProfileOutput) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *VirtualMachineScaleSetOSProfile {
		return &v
	}).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfileOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.ComputerNamePrefix }).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfileOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *LinuxConfiguration { return v.LinuxConfiguration }).(LinuxConfigurationPtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfileOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) []VaultSecretGroup { return v.Secrets }).(VaultSecretGroupArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfile) *WindowsConfiguration { return v.WindowsConfiguration }).(WindowsConfigurationPtrOutput)
}

type VirtualMachineScaleSetOSProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) ToVirtualMachineScaleSetOSProfilePtrOutput() VirtualMachineScaleSetOSProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) ToVirtualMachineScaleSetOSProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfilePtrOutput) Elem() VirtualMachineScaleSetOSProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) VirtualMachineScaleSetOSProfile { return *v }).(VirtualMachineScaleSetOSProfileOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfilePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfilePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfilePtrOutput) LinuxConfiguration() LinuxConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *LinuxConfiguration {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationPtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfilePtrOutput) Secrets() VaultSecretGroupArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) []VaultSecretGroup {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfilePtrOutput) WindowsConfiguration() WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfile) *WindowsConfiguration {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationPtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileInvokeResponse struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix *string `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData *string `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration *LinuxConfigurationInvokeResponse `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets []VaultSecretGroupInvokeResponse `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration *WindowsConfigurationInvokeResponse `pulumi:"windowsConfiguration"`
}

// VirtualMachineScaleSetOSProfileInvokeResponseInput is an input type that accepts VirtualMachineScaleSetOSProfileInvokeResponseArgs and VirtualMachineScaleSetOSProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileInvokeResponseInput` via:
//
//          VirtualMachineScaleSetOSProfileInvokeResponseArgs{...}
type VirtualMachineScaleSetOSProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileInvokeResponseOutput() VirtualMachineScaleSetOSProfileInvokeResponseOutput
	ToVirtualMachineScaleSetOSProfileInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileInvokeResponseOutput
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileInvokeResponseArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix pulumi.StringPtrInput `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration LinuxConfigurationInvokeResponsePtrInput `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets VaultSecretGroupInvokeResponseArrayInput `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration WindowsConfigurationInvokeResponsePtrInput `pulumi:"windowsConfiguration"`
}

func (VirtualMachineScaleSetOSProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSProfileInvokeResponseArgs) ToVirtualMachineScaleSetOSProfileInvokeResponseOutput() VirtualMachineScaleSetOSProfileInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetOSProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileInvokeResponseArgs) ToVirtualMachineScaleSetOSProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileInvokeResponseOutput)
}

func (i VirtualMachineScaleSetOSProfileInvokeResponseArgs) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutput() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileInvokeResponseArgs) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileInvokeResponseOutput).ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSProfileInvokeResponsePtrInput is an input type that accepts VirtualMachineScaleSetOSProfileInvokeResponseArgs, VirtualMachineScaleSetOSProfileInvokeResponsePtr and VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileInvokeResponsePtrInput` via:
//
//          VirtualMachineScaleSetOSProfileInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSProfileInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutput() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput
	ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput
}

type virtualMachineScaleSetOSProfileInvokeResponsePtrType VirtualMachineScaleSetOSProfileInvokeResponseArgs

func VirtualMachineScaleSetOSProfileInvokeResponsePtr(v *VirtualMachineScaleSetOSProfileInvokeResponseArgs) VirtualMachineScaleSetOSProfileInvokeResponsePtrInput {
	return (*virtualMachineScaleSetOSProfileInvokeResponsePtrType)(v)
}

func (*virtualMachineScaleSetOSProfileInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfileInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSProfileInvokeResponsePtrType) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutput() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSProfileInvokeResponsePtrType) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) ToVirtualMachineScaleSetOSProfileInvokeResponseOutput() VirtualMachineScaleSetOSProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) ToVirtualMachineScaleSetOSProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutput() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return o.ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *VirtualMachineScaleSetOSProfileInvokeResponse {
		return &v
	}).(VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *string { return v.ComputerNamePrefix }).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) LinuxConfiguration() LinuxConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *LinuxConfigurationInvokeResponse {
		return v.LinuxConfiguration
	}).(LinuxConfigurationInvokeResponsePtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) Secrets() VaultSecretGroupInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) []VaultSecretGroupInvokeResponse {
		return v.Secrets
	}).(VaultSecretGroupInvokeResponseArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileInvokeResponseOutput) WindowsConfiguration() WindowsConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileInvokeResponse) *WindowsConfigurationInvokeResponse {
		return v.WindowsConfiguration
	}).(WindowsConfigurationInvokeResponsePtrOutput)
}

type VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutput() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetOSProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) Elem() VirtualMachineScaleSetOSProfileInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) VirtualMachineScaleSetOSProfileInvokeResponse {
		return *v
	}).(VirtualMachineScaleSetOSProfileInvokeResponseOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) LinuxConfiguration() LinuxConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *LinuxConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationInvokeResponsePtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) Secrets() VaultSecretGroupInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) []VaultSecretGroupInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupInvokeResponseArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput) WindowsConfiguration() WindowsConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileInvokeResponse) *WindowsConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileResponse struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername *string `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix *string `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData *string `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration *LinuxConfigurationResponse `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets []VaultSecretGroupResponse `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration *WindowsConfigurationResponse `pulumi:"windowsConfiguration"`
}

// VirtualMachineScaleSetOSProfileResponseInput is an input type that accepts VirtualMachineScaleSetOSProfileResponseArgs and VirtualMachineScaleSetOSProfileResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileResponseInput` via:
//
//          VirtualMachineScaleSetOSProfileResponseArgs{...}
type VirtualMachineScaleSetOSProfileResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileResponseOutput() VirtualMachineScaleSetOSProfileResponseOutput
	ToVirtualMachineScaleSetOSProfileResponseOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileResponseOutput
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileResponseArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
	ComputerNamePrefix pulumi.StringPtrInput `pulumi:"computerNamePrefix"`
	// A base-64 encoded string of custom data.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
	// The Linux Configuration of the OS profile.
	LinuxConfiguration LinuxConfigurationResponsePtrInput `pulumi:"linuxConfiguration"`
	// The List of certificates for addition to the VM.
	Secrets VaultSecretGroupResponseArrayInput `pulumi:"secrets"`
	// The Windows Configuration of the OS profile.
	WindowsConfiguration WindowsConfigurationResponsePtrInput `pulumi:"windowsConfiguration"`
}

func (VirtualMachineScaleSetOSProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetOSProfileResponseArgs) ToVirtualMachineScaleSetOSProfileResponseOutput() VirtualMachineScaleSetOSProfileResponseOutput {
	return i.ToVirtualMachineScaleSetOSProfileResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileResponseArgs) ToVirtualMachineScaleSetOSProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileResponseOutput)
}

func (i VirtualMachineScaleSetOSProfileResponseArgs) ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetOSProfileResponseArgs) ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileResponseOutput).ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetOSProfileResponsePtrInput is an input type that accepts VirtualMachineScaleSetOSProfileResponseArgs, VirtualMachineScaleSetOSProfileResponsePtr and VirtualMachineScaleSetOSProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetOSProfileResponsePtrInput` via:
//
//          VirtualMachineScaleSetOSProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetOSProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput
	ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput
}

type virtualMachineScaleSetOSProfileResponsePtrType VirtualMachineScaleSetOSProfileResponseArgs

func VirtualMachineScaleSetOSProfileResponsePtr(v *VirtualMachineScaleSetOSProfileResponseArgs) VirtualMachineScaleSetOSProfileResponsePtrInput {
	return (*virtualMachineScaleSetOSProfileResponsePtrType)(v)
}

func (*virtualMachineScaleSetOSProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetOSProfileResponsePtrType) ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetOSProfileResponsePtrType) ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetOSProfileResponsePtrOutput)
}

// Describes a virtual machine scale set OS profile.
type VirtualMachineScaleSetOSProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponseOutput() VirtualMachineScaleSetOSProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o.ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetOSProfileResponseOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *VirtualMachineScaleSetOSProfileResponse {
		return &v
	}).(VirtualMachineScaleSetOSProfileResponsePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfileResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfileResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileResponseOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.ComputerNamePrefix }).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfileResponseOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileResponseOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *LinuxConfigurationResponse {
		return v.LinuxConfiguration
	}).(LinuxConfigurationResponsePtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfileResponseOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) []VaultSecretGroupResponse { return v.Secrets }).(VaultSecretGroupResponseArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileResponseOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetOSProfileResponse) *WindowsConfigurationResponse {
		return v.WindowsConfiguration
	}).(WindowsConfigurationResponsePtrOutput)
}

type VirtualMachineScaleSetOSProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetOSProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetOSProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutput() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ToVirtualMachineScaleSetOSProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) Elem() VirtualMachineScaleSetOSProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) VirtualMachineScaleSetOSProfileResponse { return *v }).(VirtualMachineScaleSetOSProfileResponseOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// A base-64 encoded string of custom data.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

// The Linux Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) LinuxConfiguration() LinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *LinuxConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(LinuxConfigurationResponsePtrOutput)
}

// The List of certificates for addition to the VM.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) Secrets() VaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) []VaultSecretGroupResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(VaultSecretGroupResponseArrayOutput)
}

// The Windows Configuration of the OS profile.
func (o VirtualMachineScaleSetOSProfileResponsePtrOutput) WindowsConfiguration() WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetOSProfileResponse) *WindowsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(WindowsConfigurationResponsePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfile struct {
	// The image reference.
	ImageReference *ImageReference `pulumi:"imageReference"`
	// The OS disk.
	OsDisk *VirtualMachineScaleSetOSDisk `pulumi:"osDisk"`
}

// VirtualMachineScaleSetStorageProfileInput is an input type that accepts VirtualMachineScaleSetStorageProfileArgs and VirtualMachineScaleSetStorageProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileInput` via:
//
//          VirtualMachineScaleSetStorageProfileArgs{...}
type VirtualMachineScaleSetStorageProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput
	ToVirtualMachineScaleSetStorageProfileOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileOutput
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileArgs struct {
	// The image reference.
	ImageReference ImageReferencePtrInput `pulumi:"imageReference"`
	// The OS disk.
	OsDisk VirtualMachineScaleSetOSDiskPtrInput `pulumi:"osDisk"`
}

func (VirtualMachineScaleSetStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput {
	return i.ToVirtualMachineScaleSetStorageProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileOutput)
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileArgs) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileOutput).ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetStorageProfilePtrInput is an input type that accepts VirtualMachineScaleSetStorageProfileArgs, VirtualMachineScaleSetStorageProfilePtr and VirtualMachineScaleSetStorageProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfilePtrInput` via:
//
//          VirtualMachineScaleSetStorageProfileArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetStorageProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput
	ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfilePtrOutput
}

type virtualMachineScaleSetStorageProfilePtrType VirtualMachineScaleSetStorageProfileArgs

func VirtualMachineScaleSetStorageProfilePtr(v *VirtualMachineScaleSetStorageProfileArgs) VirtualMachineScaleSetStorageProfilePtrInput {
	return (*virtualMachineScaleSetStorageProfilePtrType)(v)
}

func (*virtualMachineScaleSetStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetStorageProfilePtrType) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetStorageProfilePtrType) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfileOutput() VirtualMachineScaleSetStorageProfileOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetStorageProfileOutput) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetStorageProfile {
		return &v
	}).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfileOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *ImageReference { return v.ImageReference }).(ImageReferencePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfileOutput) OsDisk() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetOSDisk { return v.OsDisk }).(VirtualMachineScaleSetOSDiskPtrOutput)
}

type VirtualMachineScaleSetStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) ToVirtualMachineScaleSetStorageProfilePtrOutput() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) ToVirtualMachineScaleSetStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfilePtrOutput) Elem() VirtualMachineScaleSetStorageProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) VirtualMachineScaleSetStorageProfile { return *v }).(VirtualMachineScaleSetStorageProfileOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfilePtrOutput) ImageReference() ImageReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) *ImageReference {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferencePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfilePtrOutput) OsDisk() VirtualMachineScaleSetOSDiskPtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfile) *VirtualMachineScaleSetOSDisk {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskPtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileInvokeResponse struct {
	// The image reference.
	ImageReference *ImageReferenceInvokeResponse `pulumi:"imageReference"`
	// The OS disk.
	OsDisk *VirtualMachineScaleSetOSDiskInvokeResponse `pulumi:"osDisk"`
}

// VirtualMachineScaleSetStorageProfileInvokeResponseInput is an input type that accepts VirtualMachineScaleSetStorageProfileInvokeResponseArgs and VirtualMachineScaleSetStorageProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileInvokeResponseInput` via:
//
//          VirtualMachineScaleSetStorageProfileInvokeResponseArgs{...}
type VirtualMachineScaleSetStorageProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileInvokeResponseOutput() VirtualMachineScaleSetStorageProfileInvokeResponseOutput
	ToVirtualMachineScaleSetStorageProfileInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileInvokeResponseOutput
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileInvokeResponseArgs struct {
	// The image reference.
	ImageReference ImageReferenceInvokeResponsePtrInput `pulumi:"imageReference"`
	// The OS disk.
	OsDisk VirtualMachineScaleSetOSDiskInvokeResponsePtrInput `pulumi:"osDisk"`
}

func (VirtualMachineScaleSetStorageProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetStorageProfileInvokeResponseArgs) ToVirtualMachineScaleSetStorageProfileInvokeResponseOutput() VirtualMachineScaleSetStorageProfileInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetStorageProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileInvokeResponseArgs) ToVirtualMachineScaleSetStorageProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileInvokeResponseOutput)
}

func (i VirtualMachineScaleSetStorageProfileInvokeResponseArgs) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileInvokeResponseArgs) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileInvokeResponseOutput).ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetStorageProfileInvokeResponsePtrInput is an input type that accepts VirtualMachineScaleSetStorageProfileInvokeResponseArgs, VirtualMachineScaleSetStorageProfileInvokeResponsePtr and VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileInvokeResponsePtrInput` via:
//
//          VirtualMachineScaleSetStorageProfileInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetStorageProfileInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput
	ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput
}

type virtualMachineScaleSetStorageProfileInvokeResponsePtrType VirtualMachineScaleSetStorageProfileInvokeResponseArgs

func VirtualMachineScaleSetStorageProfileInvokeResponsePtr(v *VirtualMachineScaleSetStorageProfileInvokeResponseArgs) VirtualMachineScaleSetStorageProfileInvokeResponsePtrInput {
	return (*virtualMachineScaleSetStorageProfileInvokeResponsePtrType)(v)
}

func (*virtualMachineScaleSetStorageProfileInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfileInvokeResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetStorageProfileInvokeResponsePtrType) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetStorageProfileInvokeResponsePtrType) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponseOutput() VirtualMachineScaleSetStorageProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return o.ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileInvokeResponse) *VirtualMachineScaleSetStorageProfileInvokeResponse {
		return &v
	}).(VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) ImageReference() ImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileInvokeResponse) *ImageReferenceInvokeResponse {
		return v.ImageReference
	}).(ImageReferenceInvokeResponsePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfileInvokeResponseOutput) OsDisk() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileInvokeResponse) *VirtualMachineScaleSetOSDiskInvokeResponse {
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput)
}

type VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) Elem() VirtualMachineScaleSetStorageProfileInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileInvokeResponse) VirtualMachineScaleSetStorageProfileInvokeResponse {
		return *v
	}).(VirtualMachineScaleSetStorageProfileInvokeResponseOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) ImageReference() ImageReferenceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileInvokeResponse) *ImageReferenceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferenceInvokeResponsePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput) OsDisk() VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileInvokeResponse) *VirtualMachineScaleSetOSDiskInvokeResponse {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileResponse struct {
	// The image reference.
	ImageReference *ImageReferenceResponse `pulumi:"imageReference"`
	// The OS disk.
	OsDisk *VirtualMachineScaleSetOSDiskResponse `pulumi:"osDisk"`
}

// VirtualMachineScaleSetStorageProfileResponseInput is an input type that accepts VirtualMachineScaleSetStorageProfileResponseArgs and VirtualMachineScaleSetStorageProfileResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileResponseInput` via:
//
//          VirtualMachineScaleSetStorageProfileResponseArgs{...}
type VirtualMachineScaleSetStorageProfileResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileResponseOutput() VirtualMachineScaleSetStorageProfileResponseOutput
	ToVirtualMachineScaleSetStorageProfileResponseOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileResponseOutput
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileResponseArgs struct {
	// The image reference.
	ImageReference ImageReferenceResponsePtrInput `pulumi:"imageReference"`
	// The OS disk.
	OsDisk VirtualMachineScaleSetOSDiskResponsePtrInput `pulumi:"osDisk"`
}

func (VirtualMachineScaleSetStorageProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetStorageProfileResponseArgs) ToVirtualMachineScaleSetStorageProfileResponseOutput() VirtualMachineScaleSetStorageProfileResponseOutput {
	return i.ToVirtualMachineScaleSetStorageProfileResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileResponseArgs) ToVirtualMachineScaleSetStorageProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileResponseOutput)
}

func (i VirtualMachineScaleSetStorageProfileResponseArgs) ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetStorageProfileResponseArgs) ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileResponseOutput).ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetStorageProfileResponsePtrInput is an input type that accepts VirtualMachineScaleSetStorageProfileResponseArgs, VirtualMachineScaleSetStorageProfileResponsePtr and VirtualMachineScaleSetStorageProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetStorageProfileResponsePtrInput` via:
//
//          VirtualMachineScaleSetStorageProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetStorageProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput
	ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput
}

type virtualMachineScaleSetStorageProfileResponsePtrType VirtualMachineScaleSetStorageProfileResponseArgs

func VirtualMachineScaleSetStorageProfileResponsePtr(v *VirtualMachineScaleSetStorageProfileResponseArgs) VirtualMachineScaleSetStorageProfileResponsePtrInput {
	return (*virtualMachineScaleSetStorageProfileResponsePtrType)(v)
}

func (*virtualMachineScaleSetStorageProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetStorageProfileResponsePtrType) ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetStorageProfileResponsePtrType) ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetStorageProfileResponsePtrOutput)
}

// Describes a virtual machine scale set storage profile.
type VirtualMachineScaleSetStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponseOutput() VirtualMachineScaleSetStorageProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o.ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetStorageProfileResponseOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *VirtualMachineScaleSetStorageProfileResponse {
		return &v
	}).(VirtualMachineScaleSetStorageProfileResponsePtrOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfileResponseOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *ImageReferenceResponse { return v.ImageReference }).(ImageReferenceResponsePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfileResponseOutput) OsDisk() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetStorageProfileResponse) *VirtualMachineScaleSetOSDiskResponse {
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

type VirtualMachineScaleSetStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutput() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ToVirtualMachineScaleSetStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) Elem() VirtualMachineScaleSetStorageProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) VirtualMachineScaleSetStorageProfileResponse {
		return *v
	}).(VirtualMachineScaleSetStorageProfileResponseOutput)
}

// The image reference.
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) ImageReference() ImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) *ImageReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageReferenceResponsePtrOutput)
}

// The OS disk.
func (o VirtualMachineScaleSetStorageProfileResponsePtrOutput) OsDisk() VirtualMachineScaleSetOSDiskResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetStorageProfileResponse) *VirtualMachineScaleSetOSDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineScaleSetOSDiskResponsePtrOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfile struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile *VirtualMachineScaleSetExtensionProfile `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile *VirtualMachineScaleSetNetworkProfile `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile *VirtualMachineScaleSetOSProfile `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile *VirtualMachineScaleSetStorageProfile `pulumi:"storageProfile"`
}

// VirtualMachineScaleSetVMProfileInput is an input type that accepts VirtualMachineScaleSetVMProfileArgs and VirtualMachineScaleSetVMProfileOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetVMProfileInput` via:
//
//          VirtualMachineScaleSetVMProfileArgs{...}
type VirtualMachineScaleSetVMProfileInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetVMProfileOutput() VirtualMachineScaleSetVMProfileOutput
	ToVirtualMachineScaleSetVMProfileOutputWithContext(context.Context) VirtualMachineScaleSetVMProfileOutput
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileArgs struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile VirtualMachineScaleSetExtensionProfilePtrInput `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile VirtualMachineScaleSetNetworkProfilePtrInput `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile VirtualMachineScaleSetOSProfilePtrInput `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile VirtualMachineScaleSetStorageProfilePtrInput `pulumi:"storageProfile"`
}

func (VirtualMachineScaleSetVMProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfile)(nil)).Elem()
}

func (i VirtualMachineScaleSetVMProfileArgs) ToVirtualMachineScaleSetVMProfileOutput() VirtualMachineScaleSetVMProfileOutput {
	return i.ToVirtualMachineScaleSetVMProfileOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetVMProfileArgs) ToVirtualMachineScaleSetVMProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileOutput)
}

func (i VirtualMachineScaleSetVMProfileArgs) ToVirtualMachineScaleSetVMProfilePtrOutput() VirtualMachineScaleSetVMProfilePtrOutput {
	return i.ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetVMProfileArgs) ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileOutput).ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetVMProfilePtrInput is an input type that accepts VirtualMachineScaleSetVMProfileArgs, VirtualMachineScaleSetVMProfilePtr and VirtualMachineScaleSetVMProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetVMProfilePtrInput` via:
//
//          VirtualMachineScaleSetVMProfileArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetVMProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetVMProfilePtrOutput() VirtualMachineScaleSetVMProfilePtrOutput
	ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(context.Context) VirtualMachineScaleSetVMProfilePtrOutput
}

type virtualMachineScaleSetVMProfilePtrType VirtualMachineScaleSetVMProfileArgs

func VirtualMachineScaleSetVMProfilePtr(v *VirtualMachineScaleSetVMProfileArgs) VirtualMachineScaleSetVMProfilePtrInput {
	return (*virtualMachineScaleSetVMProfilePtrType)(v)
}

func (*virtualMachineScaleSetVMProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetVMProfile)(nil)).Elem()
}

func (i *virtualMachineScaleSetVMProfilePtrType) ToVirtualMachineScaleSetVMProfilePtrOutput() VirtualMachineScaleSetVMProfilePtrOutput {
	return i.ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetVMProfilePtrType) ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfilePtrOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetVMProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetVMProfileOutput) ToVirtualMachineScaleSetVMProfileOutput() VirtualMachineScaleSetVMProfileOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileOutput) ToVirtualMachineScaleSetVMProfileOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileOutput) ToVirtualMachineScaleSetVMProfilePtrOutput() VirtualMachineScaleSetVMProfilePtrOutput {
	return o.ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetVMProfileOutput) ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetVMProfile {
		return &v
	}).(VirtualMachineScaleSetVMProfilePtrOutput)
}

// The virtual machine scale set extension profile.
func (o VirtualMachineScaleSetVMProfileOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetExtensionProfile {
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// The virtual machine scale set network profile.
func (o VirtualMachineScaleSetVMProfileOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetNetworkProfile { return v.NetworkProfile }).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// The virtual machine scale set OS profile.
func (o VirtualMachineScaleSetVMProfileOutput) OsProfile() VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetOSProfile { return v.OsProfile }).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// The virtual machine scale set storage profile.
func (o VirtualMachineScaleSetVMProfileOutput) StorageProfile() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetStorageProfile { return v.StorageProfile }).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

type VirtualMachineScaleSetVMProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetVMProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetVMProfile)(nil)).Elem()
}

func (o VirtualMachineScaleSetVMProfilePtrOutput) ToVirtualMachineScaleSetVMProfilePtrOutput() VirtualMachineScaleSetVMProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfilePtrOutput) ToVirtualMachineScaleSetVMProfilePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfilePtrOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfilePtrOutput) Elem() VirtualMachineScaleSetVMProfileOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfile) VirtualMachineScaleSetVMProfile { return *v }).(VirtualMachineScaleSetVMProfileOutput)
}

// The virtual machine scale set extension profile.
func (o VirtualMachineScaleSetVMProfilePtrOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetExtensionProfile {
		if v == nil {
			return nil
		}
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfilePtrOutput)
}

// The virtual machine scale set network profile.
func (o VirtualMachineScaleSetVMProfilePtrOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetNetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(VirtualMachineScaleSetNetworkProfilePtrOutput)
}

// The virtual machine scale set OS profile.
func (o VirtualMachineScaleSetVMProfilePtrOutput) OsProfile() VirtualMachineScaleSetOSProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetOSProfile {
		if v == nil {
			return nil
		}
		return v.OsProfile
	}).(VirtualMachineScaleSetOSProfilePtrOutput)
}

// The virtual machine scale set storage profile.
func (o VirtualMachineScaleSetVMProfilePtrOutput) StorageProfile() VirtualMachineScaleSetStorageProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfile) *VirtualMachineScaleSetStorageProfile {
		if v == nil {
			return nil
		}
		return v.StorageProfile
	}).(VirtualMachineScaleSetStorageProfilePtrOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileInvokeResponse struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile *VirtualMachineScaleSetExtensionProfileInvokeResponse `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile *VirtualMachineScaleSetNetworkProfileInvokeResponse `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile *VirtualMachineScaleSetOSProfileInvokeResponse `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile *VirtualMachineScaleSetStorageProfileInvokeResponse `pulumi:"storageProfile"`
}

// VirtualMachineScaleSetVMProfileInvokeResponseInput is an input type that accepts VirtualMachineScaleSetVMProfileInvokeResponseArgs and VirtualMachineScaleSetVMProfileInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetVMProfileInvokeResponseInput` via:
//
//          VirtualMachineScaleSetVMProfileInvokeResponseArgs{...}
type VirtualMachineScaleSetVMProfileInvokeResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetVMProfileInvokeResponseOutput() VirtualMachineScaleSetVMProfileInvokeResponseOutput
	ToVirtualMachineScaleSetVMProfileInvokeResponseOutputWithContext(context.Context) VirtualMachineScaleSetVMProfileInvokeResponseOutput
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileInvokeResponseArgs struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile VirtualMachineScaleSetExtensionProfileInvokeResponsePtrInput `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile VirtualMachineScaleSetNetworkProfileInvokeResponsePtrInput `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile VirtualMachineScaleSetOSProfileInvokeResponsePtrInput `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile VirtualMachineScaleSetStorageProfileInvokeResponsePtrInput `pulumi:"storageProfile"`
}

func (VirtualMachineScaleSetVMProfileInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfileInvokeResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetVMProfileInvokeResponseArgs) ToVirtualMachineScaleSetVMProfileInvokeResponseOutput() VirtualMachineScaleSetVMProfileInvokeResponseOutput {
	return i.ToVirtualMachineScaleSetVMProfileInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetVMProfileInvokeResponseArgs) ToVirtualMachineScaleSetVMProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileInvokeResponseOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetVMProfileInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfileInvokeResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) ToVirtualMachineScaleSetVMProfileInvokeResponseOutput() VirtualMachineScaleSetVMProfileInvokeResponseOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) ToVirtualMachineScaleSetVMProfileInvokeResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileInvokeResponseOutput {
	return o
}

// The virtual machine scale set extension profile.
func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileInvokeResponse) *VirtualMachineScaleSetExtensionProfileInvokeResponse {
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput)
}

// The virtual machine scale set network profile.
func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileInvokeResponse) *VirtualMachineScaleSetNetworkProfileInvokeResponse {
		return v.NetworkProfile
	}).(VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput)
}

// The virtual machine scale set OS profile.
func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) OsProfile() VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileInvokeResponse) *VirtualMachineScaleSetOSProfileInvokeResponse {
		return v.OsProfile
	}).(VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput)
}

// The virtual machine scale set storage profile.
func (o VirtualMachineScaleSetVMProfileInvokeResponseOutput) StorageProfile() VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileInvokeResponse) *VirtualMachineScaleSetStorageProfileInvokeResponse {
		return v.StorageProfile
	}).(VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileResponse struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile *VirtualMachineScaleSetExtensionProfileResponse `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile *VirtualMachineScaleSetNetworkProfileResponse `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile *VirtualMachineScaleSetOSProfileResponse `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile *VirtualMachineScaleSetStorageProfileResponse `pulumi:"storageProfile"`
}

// VirtualMachineScaleSetVMProfileResponseInput is an input type that accepts VirtualMachineScaleSetVMProfileResponseArgs and VirtualMachineScaleSetVMProfileResponseOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetVMProfileResponseInput` via:
//
//          VirtualMachineScaleSetVMProfileResponseArgs{...}
type VirtualMachineScaleSetVMProfileResponseInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetVMProfileResponseOutput() VirtualMachineScaleSetVMProfileResponseOutput
	ToVirtualMachineScaleSetVMProfileResponseOutputWithContext(context.Context) VirtualMachineScaleSetVMProfileResponseOutput
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileResponseArgs struct {
	// The virtual machine scale set extension profile.
	ExtensionProfile VirtualMachineScaleSetExtensionProfileResponsePtrInput `pulumi:"extensionProfile"`
	// The virtual machine scale set network profile.
	NetworkProfile VirtualMachineScaleSetNetworkProfileResponsePtrInput `pulumi:"networkProfile"`
	// The virtual machine scale set OS profile.
	OsProfile VirtualMachineScaleSetOSProfileResponsePtrInput `pulumi:"osProfile"`
	// The virtual machine scale set storage profile.
	StorageProfile VirtualMachineScaleSetStorageProfileResponsePtrInput `pulumi:"storageProfile"`
}

func (VirtualMachineScaleSetVMProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfileResponse)(nil)).Elem()
}

func (i VirtualMachineScaleSetVMProfileResponseArgs) ToVirtualMachineScaleSetVMProfileResponseOutput() VirtualMachineScaleSetVMProfileResponseOutput {
	return i.ToVirtualMachineScaleSetVMProfileResponseOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetVMProfileResponseArgs) ToVirtualMachineScaleSetVMProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileResponseOutput)
}

func (i VirtualMachineScaleSetVMProfileResponseArgs) ToVirtualMachineScaleSetVMProfileResponsePtrOutput() VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(context.Background())
}

func (i VirtualMachineScaleSetVMProfileResponseArgs) ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileResponseOutput).ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(ctx)
}

// VirtualMachineScaleSetVMProfileResponsePtrInput is an input type that accepts VirtualMachineScaleSetVMProfileResponseArgs, VirtualMachineScaleSetVMProfileResponsePtr and VirtualMachineScaleSetVMProfileResponsePtrOutput values.
// You can construct a concrete instance of `VirtualMachineScaleSetVMProfileResponsePtrInput` via:
//
//          VirtualMachineScaleSetVMProfileResponseArgs{...}
//
//  or:
//
//          nil
type VirtualMachineScaleSetVMProfileResponsePtrInput interface {
	pulumi.Input

	ToVirtualMachineScaleSetVMProfileResponsePtrOutput() VirtualMachineScaleSetVMProfileResponsePtrOutput
	ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(context.Context) VirtualMachineScaleSetVMProfileResponsePtrOutput
}

type virtualMachineScaleSetVMProfileResponsePtrType VirtualMachineScaleSetVMProfileResponseArgs

func VirtualMachineScaleSetVMProfileResponsePtr(v *VirtualMachineScaleSetVMProfileResponseArgs) VirtualMachineScaleSetVMProfileResponsePtrInput {
	return (*virtualMachineScaleSetVMProfileResponsePtrType)(v)
}

func (*virtualMachineScaleSetVMProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetVMProfileResponse)(nil)).Elem()
}

func (i *virtualMachineScaleSetVMProfileResponsePtrType) ToVirtualMachineScaleSetVMProfileResponsePtrOutput() VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return i.ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(context.Background())
}

func (i *virtualMachineScaleSetVMProfileResponsePtrType) ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineScaleSetVMProfileResponsePtrOutput)
}

// Describes a virtual machine scale set virtual machine profile.
type VirtualMachineScaleSetVMProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetVMProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineScaleSetVMProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetVMProfileResponseOutput) ToVirtualMachineScaleSetVMProfileResponseOutput() VirtualMachineScaleSetVMProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileResponseOutput) ToVirtualMachineScaleSetVMProfileResponseOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponseOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileResponseOutput) ToVirtualMachineScaleSetVMProfileResponsePtrOutput() VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return o.ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(context.Background())
}

func (o VirtualMachineScaleSetVMProfileResponseOutput) ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetVMProfileResponse {
		return &v
	}).(VirtualMachineScaleSetVMProfileResponsePtrOutput)
}

// The virtual machine scale set extension profile.
func (o VirtualMachineScaleSetVMProfileResponseOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetExtensionProfileResponse {
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfileResponsePtrOutput)
}

// The virtual machine scale set network profile.
func (o VirtualMachineScaleSetVMProfileResponseOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetNetworkProfileResponse {
		return v.NetworkProfile
	}).(VirtualMachineScaleSetNetworkProfileResponsePtrOutput)
}

// The virtual machine scale set OS profile.
func (o VirtualMachineScaleSetVMProfileResponseOutput) OsProfile() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetOSProfileResponse {
		return v.OsProfile
	}).(VirtualMachineScaleSetOSProfileResponsePtrOutput)
}

// The virtual machine scale set storage profile.
func (o VirtualMachineScaleSetVMProfileResponseOutput) StorageProfile() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetStorageProfileResponse {
		return v.StorageProfile
	}).(VirtualMachineScaleSetStorageProfileResponsePtrOutput)
}

type VirtualMachineScaleSetVMProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineScaleSetVMProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineScaleSetVMProfileResponse)(nil)).Elem()
}

func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) ToVirtualMachineScaleSetVMProfileResponsePtrOutput() VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) ToVirtualMachineScaleSetVMProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineScaleSetVMProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) Elem() VirtualMachineScaleSetVMProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfileResponse) VirtualMachineScaleSetVMProfileResponse { return *v }).(VirtualMachineScaleSetVMProfileResponseOutput)
}

// The virtual machine scale set extension profile.
func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) ExtensionProfile() VirtualMachineScaleSetExtensionProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetExtensionProfileResponse {
		if v == nil {
			return nil
		}
		return v.ExtensionProfile
	}).(VirtualMachineScaleSetExtensionProfileResponsePtrOutput)
}

// The virtual machine scale set network profile.
func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) NetworkProfile() VirtualMachineScaleSetNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetNetworkProfileResponse {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(VirtualMachineScaleSetNetworkProfileResponsePtrOutput)
}

// The virtual machine scale set OS profile.
func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) OsProfile() VirtualMachineScaleSetOSProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetOSProfileResponse {
		if v == nil {
			return nil
		}
		return v.OsProfile
	}).(VirtualMachineScaleSetOSProfileResponsePtrOutput)
}

// The virtual machine scale set storage profile.
func (o VirtualMachineScaleSetVMProfileResponsePtrOutput) StorageProfile() VirtualMachineScaleSetStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineScaleSetVMProfileResponse) *VirtualMachineScaleSetStorageProfileResponse {
		if v == nil {
			return nil
		}
		return v.StorageProfile
	}).(VirtualMachineScaleSetStorageProfileResponsePtrOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfiguration struct {
	// The list of Windows Remote Management listeners
	Listeners []WinRMListener `pulumi:"listeners"`
}

// WinRMConfigurationInput is an input type that accepts WinRMConfigurationArgs and WinRMConfigurationOutput values.
// You can construct a concrete instance of `WinRMConfigurationInput` via:
//
//          WinRMConfigurationArgs{...}
type WinRMConfigurationInput interface {
	pulumi.Input

	ToWinRMConfigurationOutput() WinRMConfigurationOutput
	ToWinRMConfigurationOutputWithContext(context.Context) WinRMConfigurationOutput
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationArgs struct {
	// The list of Windows Remote Management listeners
	Listeners WinRMListenerArrayInput `pulumi:"listeners"`
}

func (WinRMConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfiguration)(nil)).Elem()
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationOutput() WinRMConfigurationOutput {
	return i.ToWinRMConfigurationOutputWithContext(context.Background())
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationOutputWithContext(ctx context.Context) WinRMConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationOutput)
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return i.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (i WinRMConfigurationArgs) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationOutput).ToWinRMConfigurationPtrOutputWithContext(ctx)
}

// WinRMConfigurationPtrInput is an input type that accepts WinRMConfigurationArgs, WinRMConfigurationPtr and WinRMConfigurationPtrOutput values.
// You can construct a concrete instance of `WinRMConfigurationPtrInput` via:
//
//          WinRMConfigurationArgs{...}
//
//  or:
//
//          nil
type WinRMConfigurationPtrInput interface {
	pulumi.Input

	ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput
	ToWinRMConfigurationPtrOutputWithContext(context.Context) WinRMConfigurationPtrOutput
}

type winRMConfigurationPtrType WinRMConfigurationArgs

func WinRMConfigurationPtr(v *WinRMConfigurationArgs) WinRMConfigurationPtrInput {
	return (*winRMConfigurationPtrType)(v)
}

func (*winRMConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfiguration)(nil)).Elem()
}

func (i *winRMConfigurationPtrType) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return i.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (i *winRMConfigurationPtrType) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationPtrOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfiguration)(nil)).Elem()
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationOutput() WinRMConfigurationOutput {
	return o
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationOutputWithContext(ctx context.Context) WinRMConfigurationOutput {
	return o
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return o.ToWinRMConfigurationPtrOutputWithContext(context.Background())
}

func (o WinRMConfigurationOutput) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return o.ApplyT(func(v WinRMConfiguration) *WinRMConfiguration {
		return &v
	}).(WinRMConfigurationPtrOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationOutput) Listeners() WinRMListenerArrayOutput {
	return o.ApplyT(func(v WinRMConfiguration) []WinRMListener { return v.Listeners }).(WinRMListenerArrayOutput)
}

type WinRMConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfiguration)(nil)).Elem()
}

func (o WinRMConfigurationPtrOutput) ToWinRMConfigurationPtrOutput() WinRMConfigurationPtrOutput {
	return o
}

func (o WinRMConfigurationPtrOutput) ToWinRMConfigurationPtrOutputWithContext(ctx context.Context) WinRMConfigurationPtrOutput {
	return o
}

func (o WinRMConfigurationPtrOutput) Elem() WinRMConfigurationOutput {
	return o.ApplyT(func(v *WinRMConfiguration) WinRMConfiguration { return *v }).(WinRMConfigurationOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationPtrOutput) Listeners() WinRMListenerArrayOutput {
	return o.ApplyT(func(v *WinRMConfiguration) []WinRMListener {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(WinRMListenerArrayOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationInvokeResponse struct {
	// The list of Windows Remote Management listeners
	Listeners []WinRMListenerInvokeResponse `pulumi:"listeners"`
}

// WinRMConfigurationInvokeResponseInput is an input type that accepts WinRMConfigurationInvokeResponseArgs and WinRMConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `WinRMConfigurationInvokeResponseInput` via:
//
//          WinRMConfigurationInvokeResponseArgs{...}
type WinRMConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToWinRMConfigurationInvokeResponseOutput() WinRMConfigurationInvokeResponseOutput
	ToWinRMConfigurationInvokeResponseOutputWithContext(context.Context) WinRMConfigurationInvokeResponseOutput
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationInvokeResponseArgs struct {
	// The list of Windows Remote Management listeners
	Listeners WinRMListenerInvokeResponseArrayInput `pulumi:"listeners"`
}

func (WinRMConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfigurationInvokeResponse)(nil)).Elem()
}

func (i WinRMConfigurationInvokeResponseArgs) ToWinRMConfigurationInvokeResponseOutput() WinRMConfigurationInvokeResponseOutput {
	return i.ToWinRMConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i WinRMConfigurationInvokeResponseArgs) ToWinRMConfigurationInvokeResponseOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationInvokeResponseOutput)
}

func (i WinRMConfigurationInvokeResponseArgs) ToWinRMConfigurationInvokeResponsePtrOutput() WinRMConfigurationInvokeResponsePtrOutput {
	return i.ToWinRMConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i WinRMConfigurationInvokeResponseArgs) ToWinRMConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationInvokeResponseOutput).ToWinRMConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// WinRMConfigurationInvokeResponsePtrInput is an input type that accepts WinRMConfigurationInvokeResponseArgs, WinRMConfigurationInvokeResponsePtr and WinRMConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `WinRMConfigurationInvokeResponsePtrInput` via:
//
//          WinRMConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type WinRMConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToWinRMConfigurationInvokeResponsePtrOutput() WinRMConfigurationInvokeResponsePtrOutput
	ToWinRMConfigurationInvokeResponsePtrOutputWithContext(context.Context) WinRMConfigurationInvokeResponsePtrOutput
}

type winRMConfigurationInvokeResponsePtrType WinRMConfigurationInvokeResponseArgs

func WinRMConfigurationInvokeResponsePtr(v *WinRMConfigurationInvokeResponseArgs) WinRMConfigurationInvokeResponsePtrInput {
	return (*winRMConfigurationInvokeResponsePtrType)(v)
}

func (*winRMConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfigurationInvokeResponse)(nil)).Elem()
}

func (i *winRMConfigurationInvokeResponsePtrType) ToWinRMConfigurationInvokeResponsePtrOutput() WinRMConfigurationInvokeResponsePtrOutput {
	return i.ToWinRMConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *winRMConfigurationInvokeResponsePtrType) ToWinRMConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationInvokeResponsePtrOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfigurationInvokeResponse)(nil)).Elem()
}

func (o WinRMConfigurationInvokeResponseOutput) ToWinRMConfigurationInvokeResponseOutput() WinRMConfigurationInvokeResponseOutput {
	return o
}

func (o WinRMConfigurationInvokeResponseOutput) ToWinRMConfigurationInvokeResponseOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponseOutput {
	return o
}

func (o WinRMConfigurationInvokeResponseOutput) ToWinRMConfigurationInvokeResponsePtrOutput() WinRMConfigurationInvokeResponsePtrOutput {
	return o.ToWinRMConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o WinRMConfigurationInvokeResponseOutput) ToWinRMConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v WinRMConfigurationInvokeResponse) *WinRMConfigurationInvokeResponse {
		return &v
	}).(WinRMConfigurationInvokeResponsePtrOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationInvokeResponseOutput) Listeners() WinRMListenerInvokeResponseArrayOutput {
	return o.ApplyT(func(v WinRMConfigurationInvokeResponse) []WinRMListenerInvokeResponse { return v.Listeners }).(WinRMListenerInvokeResponseArrayOutput)
}

type WinRMConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfigurationInvokeResponse)(nil)).Elem()
}

func (o WinRMConfigurationInvokeResponsePtrOutput) ToWinRMConfigurationInvokeResponsePtrOutput() WinRMConfigurationInvokeResponsePtrOutput {
	return o
}

func (o WinRMConfigurationInvokeResponsePtrOutput) ToWinRMConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationInvokeResponsePtrOutput {
	return o
}

func (o WinRMConfigurationInvokeResponsePtrOutput) Elem() WinRMConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *WinRMConfigurationInvokeResponse) WinRMConfigurationInvokeResponse { return *v }).(WinRMConfigurationInvokeResponseOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationInvokeResponsePtrOutput) Listeners() WinRMListenerInvokeResponseArrayOutput {
	return o.ApplyT(func(v *WinRMConfigurationInvokeResponse) []WinRMListenerInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(WinRMListenerInvokeResponseArrayOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationResponse struct {
	// The list of Windows Remote Management listeners
	Listeners []WinRMListenerResponse `pulumi:"listeners"`
}

// WinRMConfigurationResponseInput is an input type that accepts WinRMConfigurationResponseArgs and WinRMConfigurationResponseOutput values.
// You can construct a concrete instance of `WinRMConfigurationResponseInput` via:
//
//          WinRMConfigurationResponseArgs{...}
type WinRMConfigurationResponseInput interface {
	pulumi.Input

	ToWinRMConfigurationResponseOutput() WinRMConfigurationResponseOutput
	ToWinRMConfigurationResponseOutputWithContext(context.Context) WinRMConfigurationResponseOutput
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationResponseArgs struct {
	// The list of Windows Remote Management listeners
	Listeners WinRMListenerResponseArrayInput `pulumi:"listeners"`
}

func (WinRMConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfigurationResponse)(nil)).Elem()
}

func (i WinRMConfigurationResponseArgs) ToWinRMConfigurationResponseOutput() WinRMConfigurationResponseOutput {
	return i.ToWinRMConfigurationResponseOutputWithContext(context.Background())
}

func (i WinRMConfigurationResponseArgs) ToWinRMConfigurationResponseOutputWithContext(ctx context.Context) WinRMConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationResponseOutput)
}

func (i WinRMConfigurationResponseArgs) ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput {
	return i.ToWinRMConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i WinRMConfigurationResponseArgs) ToWinRMConfigurationResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationResponseOutput).ToWinRMConfigurationResponsePtrOutputWithContext(ctx)
}

// WinRMConfigurationResponsePtrInput is an input type that accepts WinRMConfigurationResponseArgs, WinRMConfigurationResponsePtr and WinRMConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `WinRMConfigurationResponsePtrInput` via:
//
//          WinRMConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type WinRMConfigurationResponsePtrInput interface {
	pulumi.Input

	ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput
	ToWinRMConfigurationResponsePtrOutputWithContext(context.Context) WinRMConfigurationResponsePtrOutput
}

type winRMConfigurationResponsePtrType WinRMConfigurationResponseArgs

func WinRMConfigurationResponsePtr(v *WinRMConfigurationResponseArgs) WinRMConfigurationResponsePtrInput {
	return (*winRMConfigurationResponsePtrType)(v)
}

func (*winRMConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfigurationResponse)(nil)).Elem()
}

func (i *winRMConfigurationResponsePtrType) ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput {
	return i.ToWinRMConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *winRMConfigurationResponsePtrType) ToWinRMConfigurationResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMConfigurationResponsePtrOutput)
}

// Describes Windows Remote Management configuration of the VM
type WinRMConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMConfigurationResponse)(nil)).Elem()
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponseOutput() WinRMConfigurationResponseOutput {
	return o
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponseOutputWithContext(ctx context.Context) WinRMConfigurationResponseOutput {
	return o
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput {
	return o.ToWinRMConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o WinRMConfigurationResponseOutput) ToWinRMConfigurationResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WinRMConfigurationResponse) *WinRMConfigurationResponse {
		return &v
	}).(WinRMConfigurationResponsePtrOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationResponseOutput) Listeners() WinRMListenerResponseArrayOutput {
	return o.ApplyT(func(v WinRMConfigurationResponse) []WinRMListenerResponse { return v.Listeners }).(WinRMListenerResponseArrayOutput)
}

type WinRMConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WinRMConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WinRMConfigurationResponse)(nil)).Elem()
}

func (o WinRMConfigurationResponsePtrOutput) ToWinRMConfigurationResponsePtrOutput() WinRMConfigurationResponsePtrOutput {
	return o
}

func (o WinRMConfigurationResponsePtrOutput) ToWinRMConfigurationResponsePtrOutputWithContext(ctx context.Context) WinRMConfigurationResponsePtrOutput {
	return o
}

func (o WinRMConfigurationResponsePtrOutput) Elem() WinRMConfigurationResponseOutput {
	return o.ApplyT(func(v *WinRMConfigurationResponse) WinRMConfigurationResponse { return *v }).(WinRMConfigurationResponseOutput)
}

// The list of Windows Remote Management listeners
func (o WinRMConfigurationResponsePtrOutput) Listeners() WinRMListenerResponseArrayOutput {
	return o.ApplyT(func(v *WinRMConfigurationResponse) []WinRMListenerResponse {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(WinRMListenerResponseArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListener struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol *string `pulumi:"protocol"`
}

// WinRMListenerInput is an input type that accepts WinRMListenerArgs and WinRMListenerOutput values.
// You can construct a concrete instance of `WinRMListenerInput` via:
//
//          WinRMListenerArgs{...}
type WinRMListenerInput interface {
	pulumi.Input

	ToWinRMListenerOutput() WinRMListenerOutput
	ToWinRMListenerOutputWithContext(context.Context) WinRMListenerOutput
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerArgs struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol ProtocolTypes `pulumi:"protocol"`
}

func (WinRMListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListener)(nil)).Elem()
}

func (i WinRMListenerArgs) ToWinRMListenerOutput() WinRMListenerOutput {
	return i.ToWinRMListenerOutputWithContext(context.Background())
}

func (i WinRMListenerArgs) ToWinRMListenerOutputWithContext(ctx context.Context) WinRMListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerOutput)
}

// WinRMListenerArrayInput is an input type that accepts WinRMListenerArray and WinRMListenerArrayOutput values.
// You can construct a concrete instance of `WinRMListenerArrayInput` via:
//
//          WinRMListenerArray{ WinRMListenerArgs{...} }
type WinRMListenerArrayInput interface {
	pulumi.Input

	ToWinRMListenerArrayOutput() WinRMListenerArrayOutput
	ToWinRMListenerArrayOutputWithContext(context.Context) WinRMListenerArrayOutput
}

type WinRMListenerArray []WinRMListenerInput

func (WinRMListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListener)(nil)).Elem()
}

func (i WinRMListenerArray) ToWinRMListenerArrayOutput() WinRMListenerArrayOutput {
	return i.ToWinRMListenerArrayOutputWithContext(context.Background())
}

func (i WinRMListenerArray) ToWinRMListenerArrayOutputWithContext(ctx context.Context) WinRMListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerOutput struct{ *pulumi.OutputState }

func (WinRMListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListener)(nil)).Elem()
}

func (o WinRMListenerOutput) ToWinRMListenerOutput() WinRMListenerOutput {
	return o
}

func (o WinRMListenerOutput) ToWinRMListenerOutputWithContext(ctx context.Context) WinRMListenerOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o WinRMListenerOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListener) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
func (o WinRMListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WinRMListenerArrayOutput struct{ *pulumi.OutputState }

func (WinRMListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListener)(nil)).Elem()
}

func (o WinRMListenerArrayOutput) ToWinRMListenerArrayOutput() WinRMListenerArrayOutput {
	return o
}

func (o WinRMListenerArrayOutput) ToWinRMListenerArrayOutputWithContext(ctx context.Context) WinRMListenerArrayOutput {
	return o
}

func (o WinRMListenerArrayOutput) Index(i pulumi.IntInput) WinRMListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WinRMListener {
		return vs[0].([]WinRMListener)[vs[1].(int)]
	}).(WinRMListenerOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerInvokeResponse struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol *string `pulumi:"protocol"`
}

// WinRMListenerInvokeResponseInput is an input type that accepts WinRMListenerInvokeResponseArgs and WinRMListenerInvokeResponseOutput values.
// You can construct a concrete instance of `WinRMListenerInvokeResponseInput` via:
//
//          WinRMListenerInvokeResponseArgs{...}
type WinRMListenerInvokeResponseInput interface {
	pulumi.Input

	ToWinRMListenerInvokeResponseOutput() WinRMListenerInvokeResponseOutput
	ToWinRMListenerInvokeResponseOutputWithContext(context.Context) WinRMListenerInvokeResponseOutput
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerInvokeResponseArgs struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WinRMListenerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListenerInvokeResponse)(nil)).Elem()
}

func (i WinRMListenerInvokeResponseArgs) ToWinRMListenerInvokeResponseOutput() WinRMListenerInvokeResponseOutput {
	return i.ToWinRMListenerInvokeResponseOutputWithContext(context.Background())
}

func (i WinRMListenerInvokeResponseArgs) ToWinRMListenerInvokeResponseOutputWithContext(ctx context.Context) WinRMListenerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerInvokeResponseOutput)
}

// WinRMListenerInvokeResponseArrayInput is an input type that accepts WinRMListenerInvokeResponseArray and WinRMListenerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `WinRMListenerInvokeResponseArrayInput` via:
//
//          WinRMListenerInvokeResponseArray{ WinRMListenerInvokeResponseArgs{...} }
type WinRMListenerInvokeResponseArrayInput interface {
	pulumi.Input

	ToWinRMListenerInvokeResponseArrayOutput() WinRMListenerInvokeResponseArrayOutput
	ToWinRMListenerInvokeResponseArrayOutputWithContext(context.Context) WinRMListenerInvokeResponseArrayOutput
}

type WinRMListenerInvokeResponseArray []WinRMListenerInvokeResponseInput

func (WinRMListenerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListenerInvokeResponse)(nil)).Elem()
}

func (i WinRMListenerInvokeResponseArray) ToWinRMListenerInvokeResponseArrayOutput() WinRMListenerInvokeResponseArrayOutput {
	return i.ToWinRMListenerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i WinRMListenerInvokeResponseArray) ToWinRMListenerInvokeResponseArrayOutputWithContext(ctx context.Context) WinRMListenerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerInvokeResponseArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerInvokeResponseOutput struct{ *pulumi.OutputState }

func (WinRMListenerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListenerInvokeResponse)(nil)).Elem()
}

func (o WinRMListenerInvokeResponseOutput) ToWinRMListenerInvokeResponseOutput() WinRMListenerInvokeResponseOutput {
	return o
}

func (o WinRMListenerInvokeResponseOutput) ToWinRMListenerInvokeResponseOutputWithContext(ctx context.Context) WinRMListenerInvokeResponseOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o WinRMListenerInvokeResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerInvokeResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
func (o WinRMListenerInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WinRMListenerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (WinRMListenerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListenerInvokeResponse)(nil)).Elem()
}

func (o WinRMListenerInvokeResponseArrayOutput) ToWinRMListenerInvokeResponseArrayOutput() WinRMListenerInvokeResponseArrayOutput {
	return o
}

func (o WinRMListenerInvokeResponseArrayOutput) ToWinRMListenerInvokeResponseArrayOutputWithContext(ctx context.Context) WinRMListenerInvokeResponseArrayOutput {
	return o
}

func (o WinRMListenerInvokeResponseArrayOutput) Index(i pulumi.IntInput) WinRMListenerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WinRMListenerInvokeResponse {
		return vs[0].([]WinRMListenerInvokeResponse)[vs[1].(int)]
	}).(WinRMListenerInvokeResponseOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerResponse struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol *string `pulumi:"protocol"`
}

// WinRMListenerResponseInput is an input type that accepts WinRMListenerResponseArgs and WinRMListenerResponseOutput values.
// You can construct a concrete instance of `WinRMListenerResponseInput` via:
//
//          WinRMListenerResponseArgs{...}
type WinRMListenerResponseInput interface {
	pulumi.Input

	ToWinRMListenerResponseOutput() WinRMListenerResponseOutput
	ToWinRMListenerResponseOutputWithContext(context.Context) WinRMListenerResponseOutput
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerResponseArgs struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (WinRMListenerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListenerResponse)(nil)).Elem()
}

func (i WinRMListenerResponseArgs) ToWinRMListenerResponseOutput() WinRMListenerResponseOutput {
	return i.ToWinRMListenerResponseOutputWithContext(context.Background())
}

func (i WinRMListenerResponseArgs) ToWinRMListenerResponseOutputWithContext(ctx context.Context) WinRMListenerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerResponseOutput)
}

// WinRMListenerResponseArrayInput is an input type that accepts WinRMListenerResponseArray and WinRMListenerResponseArrayOutput values.
// You can construct a concrete instance of `WinRMListenerResponseArrayInput` via:
//
//          WinRMListenerResponseArray{ WinRMListenerResponseArgs{...} }
type WinRMListenerResponseArrayInput interface {
	pulumi.Input

	ToWinRMListenerResponseArrayOutput() WinRMListenerResponseArrayOutput
	ToWinRMListenerResponseArrayOutputWithContext(context.Context) WinRMListenerResponseArrayOutput
}

type WinRMListenerResponseArray []WinRMListenerResponseInput

func (WinRMListenerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListenerResponse)(nil)).Elem()
}

func (i WinRMListenerResponseArray) ToWinRMListenerResponseArrayOutput() WinRMListenerResponseArrayOutput {
	return i.ToWinRMListenerResponseArrayOutputWithContext(context.Background())
}

func (i WinRMListenerResponseArray) ToWinRMListenerResponseArrayOutputWithContext(ctx context.Context) WinRMListenerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WinRMListenerResponseArrayOutput)
}

// Describes Protocol and thumbprint of Windows Remote Management listener
type WinRMListenerResponseOutput struct{ *pulumi.OutputState }

func (WinRMListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WinRMListenerResponse)(nil)).Elem()
}

func (o WinRMListenerResponseOutput) ToWinRMListenerResponseOutput() WinRMListenerResponseOutput {
	return o
}

func (o WinRMListenerResponseOutput) ToWinRMListenerResponseOutputWithContext(ctx context.Context) WinRMListenerResponseOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
func (o WinRMListenerResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
func (o WinRMListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WinRMListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type WinRMListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (WinRMListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WinRMListenerResponse)(nil)).Elem()
}

func (o WinRMListenerResponseArrayOutput) ToWinRMListenerResponseArrayOutput() WinRMListenerResponseArrayOutput {
	return o
}

func (o WinRMListenerResponseArrayOutput) ToWinRMListenerResponseArrayOutputWithContext(ctx context.Context) WinRMListenerResponseArrayOutput {
	return o
}

func (o WinRMListenerResponseArrayOutput) Index(i pulumi.IntInput) WinRMListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WinRMListenerResponse {
		return vs[0].([]WinRMListenerResponse)[vs[1].(int)]
	}).(WinRMListenerResponseOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfiguration struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent []AdditionalUnattendContent `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM *WinRMConfiguration `pulumi:"winRM"`
}

// WindowsConfigurationInput is an input type that accepts WindowsConfigurationArgs and WindowsConfigurationOutput values.
// You can construct a concrete instance of `WindowsConfigurationInput` via:
//
//          WindowsConfigurationArgs{...}
type WindowsConfigurationInput interface {
	pulumi.Input

	ToWindowsConfigurationOutput() WindowsConfigurationOutput
	ToWindowsConfigurationOutputWithContext(context.Context) WindowsConfigurationOutput
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationArgs struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent AdditionalUnattendContentArrayInput `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM WinRMConfigurationPtrInput `pulumi:"winRM"`
}

func (WindowsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfiguration)(nil)).Elem()
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationOutput() WindowsConfigurationOutput {
	return i.ToWindowsConfigurationOutputWithContext(context.Background())
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationOutputWithContext(ctx context.Context) WindowsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationOutput)
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return i.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i WindowsConfigurationArgs) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationOutput).ToWindowsConfigurationPtrOutputWithContext(ctx)
}

// WindowsConfigurationPtrInput is an input type that accepts WindowsConfigurationArgs, WindowsConfigurationPtr and WindowsConfigurationPtrOutput values.
// You can construct a concrete instance of `WindowsConfigurationPtrInput` via:
//
//          WindowsConfigurationArgs{...}
//
//  or:
//
//          nil
type WindowsConfigurationPtrInput interface {
	pulumi.Input

	ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput
	ToWindowsConfigurationPtrOutputWithContext(context.Context) WindowsConfigurationPtrOutput
}

type windowsConfigurationPtrType WindowsConfigurationArgs

func WindowsConfigurationPtr(v *WindowsConfigurationArgs) WindowsConfigurationPtrInput {
	return (*windowsConfigurationPtrType)(v)
}

func (*windowsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfiguration)(nil)).Elem()
}

func (i *windowsConfigurationPtrType) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return i.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i *windowsConfigurationPtrType) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationPtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfiguration)(nil)).Elem()
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationOutput() WindowsConfigurationOutput {
	return o
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationOutputWithContext(ctx context.Context) WindowsConfigurationOutput {
	return o
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return o.ToWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (o WindowsConfigurationOutput) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *WindowsConfiguration {
		return &v
	}).(WindowsConfigurationPtrOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationOutput) AdditionalUnattendContent() AdditionalUnattendContentArrayOutput {
	return o.ApplyT(func(v WindowsConfiguration) []AdditionalUnattendContent { return v.AdditionalUnattendContent }).(AdditionalUnattendContentArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationOutput) WinRM() WinRMConfigurationPtrOutput {
	return o.ApplyT(func(v WindowsConfiguration) *WinRMConfiguration { return v.WinRM }).(WinRMConfigurationPtrOutput)
}

type WindowsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfiguration)(nil)).Elem()
}

func (o WindowsConfigurationPtrOutput) ToWindowsConfigurationPtrOutput() WindowsConfigurationPtrOutput {
	return o
}

func (o WindowsConfigurationPtrOutput) ToWindowsConfigurationPtrOutputWithContext(ctx context.Context) WindowsConfigurationPtrOutput {
	return o
}

func (o WindowsConfigurationPtrOutput) Elem() WindowsConfigurationOutput {
	return o.ApplyT(func(v *WindowsConfiguration) WindowsConfiguration { return *v }).(WindowsConfigurationOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationPtrOutput) AdditionalUnattendContent() AdditionalUnattendContentArrayOutput {
	return o.ApplyT(func(v *WindowsConfiguration) []AdditionalUnattendContent {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationPtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationPtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationPtrOutput) WinRM() WinRMConfigurationPtrOutput {
	return o.ApplyT(func(v *WindowsConfiguration) *WinRMConfiguration {
		if v == nil {
			return nil
		}
		return v.WinRM
	}).(WinRMConfigurationPtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationInvokeResponse struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent []AdditionalUnattendContentInvokeResponse `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM *WinRMConfigurationInvokeResponse `pulumi:"winRM"`
}

// WindowsConfigurationInvokeResponseInput is an input type that accepts WindowsConfigurationInvokeResponseArgs and WindowsConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `WindowsConfigurationInvokeResponseInput` via:
//
//          WindowsConfigurationInvokeResponseArgs{...}
type WindowsConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToWindowsConfigurationInvokeResponseOutput() WindowsConfigurationInvokeResponseOutput
	ToWindowsConfigurationInvokeResponseOutputWithContext(context.Context) WindowsConfigurationInvokeResponseOutput
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationInvokeResponseArgs struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent AdditionalUnattendContentInvokeResponseArrayInput `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM WinRMConfigurationInvokeResponsePtrInput `pulumi:"winRM"`
}

func (WindowsConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfigurationInvokeResponse)(nil)).Elem()
}

func (i WindowsConfigurationInvokeResponseArgs) ToWindowsConfigurationInvokeResponseOutput() WindowsConfigurationInvokeResponseOutput {
	return i.ToWindowsConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i WindowsConfigurationInvokeResponseArgs) ToWindowsConfigurationInvokeResponseOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationInvokeResponseOutput)
}

func (i WindowsConfigurationInvokeResponseArgs) ToWindowsConfigurationInvokeResponsePtrOutput() WindowsConfigurationInvokeResponsePtrOutput {
	return i.ToWindowsConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i WindowsConfigurationInvokeResponseArgs) ToWindowsConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationInvokeResponseOutput).ToWindowsConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// WindowsConfigurationInvokeResponsePtrInput is an input type that accepts WindowsConfigurationInvokeResponseArgs, WindowsConfigurationInvokeResponsePtr and WindowsConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `WindowsConfigurationInvokeResponsePtrInput` via:
//
//          WindowsConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type WindowsConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToWindowsConfigurationInvokeResponsePtrOutput() WindowsConfigurationInvokeResponsePtrOutput
	ToWindowsConfigurationInvokeResponsePtrOutputWithContext(context.Context) WindowsConfigurationInvokeResponsePtrOutput
}

type windowsConfigurationInvokeResponsePtrType WindowsConfigurationInvokeResponseArgs

func WindowsConfigurationInvokeResponsePtr(v *WindowsConfigurationInvokeResponseArgs) WindowsConfigurationInvokeResponsePtrInput {
	return (*windowsConfigurationInvokeResponsePtrType)(v)
}

func (*windowsConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfigurationInvokeResponse)(nil)).Elem()
}

func (i *windowsConfigurationInvokeResponsePtrType) ToWindowsConfigurationInvokeResponsePtrOutput() WindowsConfigurationInvokeResponsePtrOutput {
	return i.ToWindowsConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *windowsConfigurationInvokeResponsePtrType) ToWindowsConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationInvokeResponsePtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfigurationInvokeResponse)(nil)).Elem()
}

func (o WindowsConfigurationInvokeResponseOutput) ToWindowsConfigurationInvokeResponseOutput() WindowsConfigurationInvokeResponseOutput {
	return o
}

func (o WindowsConfigurationInvokeResponseOutput) ToWindowsConfigurationInvokeResponseOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponseOutput {
	return o
}

func (o WindowsConfigurationInvokeResponseOutput) ToWindowsConfigurationInvokeResponsePtrOutput() WindowsConfigurationInvokeResponsePtrOutput {
	return o.ToWindowsConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o WindowsConfigurationInvokeResponseOutput) ToWindowsConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) *WindowsConfigurationInvokeResponse {
		return &v
	}).(WindowsConfigurationInvokeResponsePtrOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationInvokeResponseOutput) AdditionalUnattendContent() AdditionalUnattendContentInvokeResponseArrayOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) []AdditionalUnattendContentInvokeResponse {
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentInvokeResponseArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationInvokeResponseOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationInvokeResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationInvokeResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationInvokeResponseOutput) WinRM() WinRMConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationInvokeResponse) *WinRMConfigurationInvokeResponse { return v.WinRM }).(WinRMConfigurationInvokeResponsePtrOutput)
}

type WindowsConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfigurationInvokeResponse)(nil)).Elem()
}

func (o WindowsConfigurationInvokeResponsePtrOutput) ToWindowsConfigurationInvokeResponsePtrOutput() WindowsConfigurationInvokeResponsePtrOutput {
	return o
}

func (o WindowsConfigurationInvokeResponsePtrOutput) ToWindowsConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationInvokeResponsePtrOutput {
	return o
}

func (o WindowsConfigurationInvokeResponsePtrOutput) Elem() WindowsConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) WindowsConfigurationInvokeResponse { return *v }).(WindowsConfigurationInvokeResponseOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationInvokeResponsePtrOutput) AdditionalUnattendContent() AdditionalUnattendContentInvokeResponseArrayOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) []AdditionalUnattendContentInvokeResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentInvokeResponseArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationInvokeResponsePtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationInvokeResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationInvokeResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationInvokeResponsePtrOutput) WinRM() WinRMConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationInvokeResponse) *WinRMConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.WinRM
	}).(WinRMConfigurationInvokeResponsePtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationResponse struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent []AdditionalUnattendContentResponse `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM *WinRMConfigurationResponse `pulumi:"winRM"`
}

// WindowsConfigurationResponseInput is an input type that accepts WindowsConfigurationResponseArgs and WindowsConfigurationResponseOutput values.
// You can construct a concrete instance of `WindowsConfigurationResponseInput` via:
//
//          WindowsConfigurationResponseArgs{...}
type WindowsConfigurationResponseInput interface {
	pulumi.Input

	ToWindowsConfigurationResponseOutput() WindowsConfigurationResponseOutput
	ToWindowsConfigurationResponseOutputWithContext(context.Context) WindowsConfigurationResponseOutput
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationResponseArgs struct {
	// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
	AdditionalUnattendContent AdditionalUnattendContentResponseArrayInput `pulumi:"additionalUnattendContent"`
	// Indicates whether virtual machine is enabled for automatic updates.
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
	WinRM WinRMConfigurationResponsePtrInput `pulumi:"winRM"`
}

func (WindowsConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfigurationResponse)(nil)).Elem()
}

func (i WindowsConfigurationResponseArgs) ToWindowsConfigurationResponseOutput() WindowsConfigurationResponseOutput {
	return i.ToWindowsConfigurationResponseOutputWithContext(context.Background())
}

func (i WindowsConfigurationResponseArgs) ToWindowsConfigurationResponseOutputWithContext(ctx context.Context) WindowsConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationResponseOutput)
}

func (i WindowsConfigurationResponseArgs) ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput {
	return i.ToWindowsConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i WindowsConfigurationResponseArgs) ToWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationResponseOutput).ToWindowsConfigurationResponsePtrOutputWithContext(ctx)
}

// WindowsConfigurationResponsePtrInput is an input type that accepts WindowsConfigurationResponseArgs, WindowsConfigurationResponsePtr and WindowsConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `WindowsConfigurationResponsePtrInput` via:
//
//          WindowsConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type WindowsConfigurationResponsePtrInput interface {
	pulumi.Input

	ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput
	ToWindowsConfigurationResponsePtrOutputWithContext(context.Context) WindowsConfigurationResponsePtrOutput
}

type windowsConfigurationResponsePtrType WindowsConfigurationResponseArgs

func WindowsConfigurationResponsePtr(v *WindowsConfigurationResponseArgs) WindowsConfigurationResponsePtrInput {
	return (*windowsConfigurationResponsePtrType)(v)
}

func (*windowsConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfigurationResponse)(nil)).Elem()
}

func (i *windowsConfigurationResponsePtrType) ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput {
	return i.ToWindowsConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *windowsConfigurationResponsePtrType) ToWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsConfigurationResponsePtrOutput)
}

// Specifies Windows operating system settings on the virtual machine.
type WindowsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsConfigurationResponse)(nil)).Elem()
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponseOutput() WindowsConfigurationResponseOutput {
	return o
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponseOutputWithContext(ctx context.Context) WindowsConfigurationResponseOutput {
	return o
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput {
	return o.ToWindowsConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o WindowsConfigurationResponseOutput) ToWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *WindowsConfigurationResponse {
		return &v
	}).(WindowsConfigurationResponsePtrOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationResponseOutput) AdditionalUnattendContent() AdditionalUnattendContentResponseArrayOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) []AdditionalUnattendContentResponse {
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentResponseArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationResponseOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationResponseOutput) WinRM() WinRMConfigurationResponsePtrOutput {
	return o.ApplyT(func(v WindowsConfigurationResponse) *WinRMConfigurationResponse { return v.WinRM }).(WinRMConfigurationResponsePtrOutput)
}

type WindowsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsConfigurationResponse)(nil)).Elem()
}

func (o WindowsConfigurationResponsePtrOutput) ToWindowsConfigurationResponsePtrOutput() WindowsConfigurationResponsePtrOutput {
	return o
}

func (o WindowsConfigurationResponsePtrOutput) ToWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) WindowsConfigurationResponsePtrOutput {
	return o
}

func (o WindowsConfigurationResponsePtrOutput) Elem() WindowsConfigurationResponseOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) WindowsConfigurationResponse { return *v }).(WindowsConfigurationResponseOutput)
}

// Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
func (o WindowsConfigurationResponsePtrOutput) AdditionalUnattendContent() AdditionalUnattendContentResponseArrayOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) []AdditionalUnattendContentResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendContent
	}).(AdditionalUnattendContentResponseArrayOutput)
}

// Indicates whether virtual machine is enabled for automatic updates.
func (o WindowsConfigurationResponsePtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
func (o WindowsConfigurationResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time"
func (o WindowsConfigurationResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
func (o WindowsConfigurationResponsePtrOutput) WinRM() WinRMConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *WindowsConfigurationResponse) *WinRMConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WinRM
	}).(WinRMConfigurationResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalUnattendContentOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentArrayOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentInvokeResponseOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentResponseOutput{})
	pulumi.RegisterOutputType(AdditionalUnattendContentResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApiEntityReferenceResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInstanceViewInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInstanceViewResponsePtrOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInvokeResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(BootDiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(DataDiskOutput{})
	pulumi.RegisterOutputType(DataDiskArrayOutput{})
	pulumi.RegisterOutputType(DataDiskInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataDiskInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DataDiskResponseOutput{})
	pulumi.RegisterOutputType(DataDiskResponseArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfilePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsResponseOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DiskInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(DiskInstanceViewInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(DiskInstanceViewResponseArrayOutput{})
	pulumi.RegisterOutputType(HardwareProfileOutput{})
	pulumi.RegisterOutputType(HardwareProfilePtrOutput{})
	pulumi.RegisterOutputType(HardwareProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponseOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceOutput{})
	pulumi.RegisterOutputType(ImageReferencePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(ImageReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(ImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusArrayOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusInvokeResponseOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusResponseOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferencePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultSecretReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LinuxConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskOutput{})
	pulumi.RegisterOutputType(OSDiskPtrOutput{})
	pulumi.RegisterOutputType(OSDiskInvokeResponseOutput{})
	pulumi.RegisterOutputType(OSDiskInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskResponseOutput{})
	pulumi.RegisterOutputType(OSDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(OSProfileOutput{})
	pulumi.RegisterOutputType(OSProfilePtrOutput{})
	pulumi.RegisterOutputType(OSProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(OSProfileResponseOutput{})
	pulumi.RegisterOutputType(OSProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PlanInvokeResponseOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationOutput{})
	pulumi.RegisterOutputType(SshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(SshConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SshPublicKeyOutput{})
	pulumi.RegisterOutputType(SshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(SshPublicKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(SshPublicKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(UpgradePolicyOutput{})
	pulumi.RegisterOutputType(UpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(UpgradePolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(UpgradePolicyResponseOutput{})
	pulumi.RegisterOutputType(UpgradePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(VaultCertificateOutput{})
	pulumi.RegisterOutputType(VaultCertificateArrayOutput{})
	pulumi.RegisterOutputType(VaultCertificateInvokeResponseOutput{})
	pulumi.RegisterOutputType(VaultCertificateInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VaultCertificateResponseOutput{})
	pulumi.RegisterOutputType(VaultCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupArrayOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupInvokeResponseOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupResponseOutput{})
	pulumi.RegisterOutputType(VaultSecretGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskPtrOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAgentInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineAgentInstanceViewInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAgentInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineAgentInstanceViewResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionHandlerInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionHandlerInstanceViewInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionHandlerInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionHandlerInstanceViewResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInstanceViewResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceViewInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceViewResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIdentityOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIdentityPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIdentityResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetOSProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetVMProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetVMProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetVMProfileInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetVMProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineScaleSetVMProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WinRMConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(WinRMListenerOutput{})
	pulumi.RegisterOutputType(WinRMListenerArrayOutput{})
	pulumi.RegisterOutputType(WinRMListenerInvokeResponseOutput{})
	pulumi.RegisterOutputType(WinRMListenerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(WinRMListenerResponseOutput{})
	pulumi.RegisterOutputType(WinRMListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(WindowsConfigurationResponsePtrOutput{})
}
