// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Restore Point details.
type RestorePoint struct {
	pulumi.CustomResourceState

	// Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.
	ConsistencyMode pulumi.StringOutput `pulumi:"consistencyMode"`
	// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
	ExcludeDisks ApiEntityReferenceResponseArrayOutput `pulumi:"excludeDisks"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets the provisioning details set by the server during Create restore point operation.
	ProvisioningDetails RestorePointProvisioningDetailsResponseOutput `pulumi:"provisioningDetails"`
	// Gets the provisioning state of the restore point.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Gets the details of the VM captured at the time of the restore point creation.
	SourceMetadata RestorePointSourceMetadataResponseOutput `pulumi:"sourceMetadata"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRestorePoint registers a new resource with the given unique name, arguments, and options.
func NewRestorePoint(ctx *pulumi.Context,
	name string, args *RestorePointArgs, opts ...pulumi.ResourceOption) (*RestorePoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RestorePointCollectionName == nil {
		return nil, errors.New("invalid value for required argument 'RestorePointCollectionName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:compute/v20210701:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-native:compute:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210301:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20210301:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210401:RestorePoint"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20210401:RestorePoint"),
		},
	})
	opts = append(opts, aliases)
	var resource RestorePoint
	err := ctx.RegisterResource("azure-native:compute/v20210701:RestorePoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePoint gets an existing RestorePoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePointState, opts ...pulumi.ResourceOption) (*RestorePoint, error) {
	var resource RestorePoint
	err := ctx.ReadResource("azure-native:compute/v20210701:RestorePoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePoint resources.
type restorePointState struct {
}

type RestorePointState struct {
}

func (RestorePointState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointState)(nil)).Elem()
}

type restorePointArgs struct {
	// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
	ExcludeDisks []ApiEntityReference `pulumi:"excludeDisks"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the restore point collection.
	RestorePointCollectionName string `pulumi:"restorePointCollectionName"`
	// The name of the restore point.
	RestorePointName *string `pulumi:"restorePointName"`
}

// The set of arguments for constructing a RestorePoint resource.
type RestorePointArgs struct {
	// List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
	ExcludeDisks ApiEntityReferenceArrayInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the restore point collection.
	RestorePointCollectionName pulumi.StringInput
	// The name of the restore point.
	RestorePointName pulumi.StringPtrInput
}

func (RestorePointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointArgs)(nil)).Elem()
}

type RestorePointInput interface {
	pulumi.Input

	ToRestorePointOutput() RestorePointOutput
	ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput
}

func (*RestorePoint) ElementType() reflect.Type {
	return reflect.TypeOf((*RestorePoint)(nil))
}

func (i *RestorePoint) ToRestorePointOutput() RestorePointOutput {
	return i.ToRestorePointOutputWithContext(context.Background())
}

func (i *RestorePoint) ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointOutput)
}

type RestorePointOutput struct{ *pulumi.OutputState }

func (RestorePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestorePoint)(nil))
}

func (o RestorePointOutput) ToRestorePointOutput() RestorePointOutput {
	return o
}

func (o RestorePointOutput) ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RestorePointOutput{})
}
