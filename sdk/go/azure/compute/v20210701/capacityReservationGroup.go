// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CapacityReservationGroup struct {
	pulumi.CustomResourceState

	CapacityReservations      SubResourceReadOnlyResponseArrayOutput             `pulumi:"capacityReservations"`
	InstanceView              CapacityReservationGroupInstanceViewResponseOutput `pulumi:"instanceView"`
	Location                  pulumi.StringOutput                                `pulumi:"location"`
	Name                      pulumi.StringOutput                                `pulumi:"name"`
	Tags                      pulumi.StringMapOutput                             `pulumi:"tags"`
	Type                      pulumi.StringOutput                                `pulumi:"type"`
	VirtualMachinesAssociated SubResourceReadOnlyResponseArrayOutput             `pulumi:"virtualMachinesAssociated"`
	Zones                     pulumi.StringArrayOutput                           `pulumi:"zones"`
}

// NewCapacityReservationGroup registers a new resource with the given unique name, arguments, and options.
func NewCapacityReservationGroup(ctx *pulumi.Context,
	name string, args *CapacityReservationGroupArgs, opts ...pulumi.ResourceOption) (*CapacityReservationGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:compute/v20210701:CapacityReservationGroup"),
		},
		{
			Type: pulumi.String("azure-native:compute:CapacityReservationGroup"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute:CapacityReservationGroup"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210401:CapacityReservationGroup"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20210401:CapacityReservationGroup"),
		},
	})
	opts = append(opts, aliases)
	var resource CapacityReservationGroup
	err := ctx.RegisterResource("azure-native:compute/v20210701:CapacityReservationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityReservationGroup gets an existing CapacityReservationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityReservationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityReservationGroupState, opts ...pulumi.ResourceOption) (*CapacityReservationGroup, error) {
	var resource CapacityReservationGroup
	err := ctx.ReadResource("azure-native:compute/v20210701:CapacityReservationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityReservationGroup resources.
type capacityReservationGroupState struct {
}

type CapacityReservationGroupState struct {
}

func (CapacityReservationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationGroupState)(nil)).Elem()
}

type capacityReservationGroupArgs struct {
	CapacityReservationGroupName *string           `pulumi:"capacityReservationGroupName"`
	Location                     *string           `pulumi:"location"`
	ResourceGroupName            string            `pulumi:"resourceGroupName"`
	Tags                         map[string]string `pulumi:"tags"`
	Zones                        []string          `pulumi:"zones"`
}

// The set of arguments for constructing a CapacityReservationGroup resource.
type CapacityReservationGroupArgs struct {
	CapacityReservationGroupName pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	ResourceGroupName            pulumi.StringInput
	Tags                         pulumi.StringMapInput
	Zones                        pulumi.StringArrayInput
}

func (CapacityReservationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationGroupArgs)(nil)).Elem()
}

type CapacityReservationGroupInput interface {
	pulumi.Input

	ToCapacityReservationGroupOutput() CapacityReservationGroupOutput
	ToCapacityReservationGroupOutputWithContext(ctx context.Context) CapacityReservationGroupOutput
}

func (*CapacityReservationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationGroup)(nil))
}

func (i *CapacityReservationGroup) ToCapacityReservationGroupOutput() CapacityReservationGroupOutput {
	return i.ToCapacityReservationGroupOutputWithContext(context.Background())
}

func (i *CapacityReservationGroup) ToCapacityReservationGroupOutputWithContext(ctx context.Context) CapacityReservationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationGroupOutput)
}

type CapacityReservationGroupOutput struct{ *pulumi.OutputState }

func (CapacityReservationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityReservationGroup)(nil))
}

func (o CapacityReservationGroupOutput) ToCapacityReservationGroupOutput() CapacityReservationGroupOutput {
	return o
}

func (o CapacityReservationGroupOutput) ToCapacityReservationGroupOutputWithContext(ctx context.Context) CapacityReservationGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CapacityReservationGroupOutput{})
}
