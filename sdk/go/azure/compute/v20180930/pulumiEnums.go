// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180930

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This enumerates the possible sources of a disk's creation.
type DiskCreateOption string

const (
	DiskCreateOptionEmpty     = DiskCreateOption("Empty")
	DiskCreateOptionAttach    = DiskCreateOption("Attach")
	DiskCreateOptionFromImage = DiskCreateOption("FromImage")
	DiskCreateOptionImport    = DiskCreateOption("Import")
	DiskCreateOptionCopy      = DiskCreateOption("Copy")
	DiskCreateOptionRestore   = DiskCreateOption("Restore")
	DiskCreateOptionUpload    = DiskCreateOption("Upload")
)

func (DiskCreateOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOption)(nil)).Elem()
}

func (e DiskCreateOption) ToDiskCreateOptionOutput() DiskCreateOptionOutput {
	return pulumi.ToOutput(e).(DiskCreateOptionOutput)
}

func (e DiskCreateOption) ToDiskCreateOptionOutputWithContext(ctx context.Context) DiskCreateOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskCreateOptionOutput)
}

func (e DiskCreateOption) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return e.ToDiskCreateOptionPtrOutputWithContext(context.Background())
}

func (e DiskCreateOption) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return DiskCreateOption(e).ToDiskCreateOptionOutputWithContext(ctx).ToDiskCreateOptionPtrOutputWithContext(ctx)
}

func (e DiskCreateOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskCreateOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskCreateOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskCreateOptionOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskCreateOption)(nil)).Elem()
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionOutput() DiskCreateOptionOutput {
	return o
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionOutputWithContext(ctx context.Context) DiskCreateOptionOutput {
	return o
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return o.ToDiskCreateOptionPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskCreateOption) *DiskCreateOption {
		return &v
	}).(DiskCreateOptionPtrOutput)
}

func (o DiskCreateOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskCreateOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskCreateOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskCreateOptionPtrOutput struct{ *pulumi.OutputState }

func (DiskCreateOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskCreateOption)(nil)).Elem()
}

func (o DiskCreateOptionPtrOutput) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return o
}

func (o DiskCreateOptionPtrOutput) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return o
}

func (o DiskCreateOptionPtrOutput) Elem() DiskCreateOptionOutput {
	return o.ApplyT(func(v *DiskCreateOption) DiskCreateOption {
		if v != nil {
			return *v
		}
		var ret DiskCreateOption
		return ret
	}).(DiskCreateOptionOutput)
}

func (o DiskCreateOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskCreateOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskCreateOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskCreateOptionInput is an input type that accepts DiskCreateOptionArgs and DiskCreateOptionOutput values.
// You can construct a concrete instance of `DiskCreateOptionInput` via:
//
//          DiskCreateOptionArgs{...}
type DiskCreateOptionInput interface {
	pulumi.Input

	ToDiskCreateOptionOutput() DiskCreateOptionOutput
	ToDiskCreateOptionOutputWithContext(context.Context) DiskCreateOptionOutput
}

var diskCreateOptionPtrType = reflect.TypeOf((**DiskCreateOption)(nil)).Elem()

type DiskCreateOptionPtrInput interface {
	pulumi.Input

	ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput
	ToDiskCreateOptionPtrOutputWithContext(context.Context) DiskCreateOptionPtrOutput
}

type diskCreateOptionPtr string

func DiskCreateOptionPtr(v string) DiskCreateOptionPtrInput {
	return (*diskCreateOptionPtr)(&v)
}

func (*diskCreateOptionPtr) ElementType() reflect.Type {
	return diskCreateOptionPtrType
}

func (in *diskCreateOptionPtr) ToDiskCreateOptionPtrOutput() DiskCreateOptionPtrOutput {
	return pulumi.ToOutput(in).(DiskCreateOptionPtrOutput)
}

func (in *diskCreateOptionPtr) ToDiskCreateOptionPtrOutputWithContext(ctx context.Context) DiskCreateOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskCreateOptionPtrOutput)
}

// The sku name.
type DiskStorageAccountTypes string

const (
	DiskStorageAccountTypes_Standard_LRS    = DiskStorageAccountTypes("Standard_LRS")
	DiskStorageAccountTypes_Premium_LRS     = DiskStorageAccountTypes("Premium_LRS")
	DiskStorageAccountTypes_StandardSSD_LRS = DiskStorageAccountTypes("StandardSSD_LRS")
	DiskStorageAccountTypes_UltraSSD_LRS    = DiskStorageAccountTypes("UltraSSD_LRS")
)

func (DiskStorageAccountTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageAccountTypes)(nil)).Elem()
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput {
	return pulumi.ToOutput(e).(DiskStorageAccountTypesOutput)
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesOutputWithContext(ctx context.Context) DiskStorageAccountTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskStorageAccountTypesOutput)
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return e.ToDiskStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (e DiskStorageAccountTypes) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return DiskStorageAccountTypes(e).ToDiskStorageAccountTypesOutputWithContext(ctx).ToDiskStorageAccountTypesPtrOutputWithContext(ctx)
}

func (e DiskStorageAccountTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageAccountTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageAccountTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskStorageAccountTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskStorageAccountTypesOutput struct{ *pulumi.OutputState }

func (DiskStorageAccountTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageAccountTypes)(nil)).Elem()
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput {
	return o
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesOutputWithContext(ctx context.Context) DiskStorageAccountTypesOutput {
	return o
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return o.ToDiskStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskStorageAccountTypes) *DiskStorageAccountTypes {
		return &v
	}).(DiskStorageAccountTypesPtrOutput)
}

func (o DiskStorageAccountTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageAccountTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskStorageAccountTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageAccountTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskStorageAccountTypesPtrOutput struct{ *pulumi.OutputState }

func (DiskStorageAccountTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskStorageAccountTypes)(nil)).Elem()
}

func (o DiskStorageAccountTypesPtrOutput) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return o
}

func (o DiskStorageAccountTypesPtrOutput) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return o
}

func (o DiskStorageAccountTypesPtrOutput) Elem() DiskStorageAccountTypesOutput {
	return o.ApplyT(func(v *DiskStorageAccountTypes) DiskStorageAccountTypes {
		if v != nil {
			return *v
		}
		var ret DiskStorageAccountTypes
		return ret
	}).(DiskStorageAccountTypesOutput)
}

func (o DiskStorageAccountTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageAccountTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskStorageAccountTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskStorageAccountTypesInput is an input type that accepts DiskStorageAccountTypesArgs and DiskStorageAccountTypesOutput values.
// You can construct a concrete instance of `DiskStorageAccountTypesInput` via:
//
//          DiskStorageAccountTypesArgs{...}
type DiskStorageAccountTypesInput interface {
	pulumi.Input

	ToDiskStorageAccountTypesOutput() DiskStorageAccountTypesOutput
	ToDiskStorageAccountTypesOutputWithContext(context.Context) DiskStorageAccountTypesOutput
}

var diskStorageAccountTypesPtrType = reflect.TypeOf((**DiskStorageAccountTypes)(nil)).Elem()

type DiskStorageAccountTypesPtrInput interface {
	pulumi.Input

	ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput
	ToDiskStorageAccountTypesPtrOutputWithContext(context.Context) DiskStorageAccountTypesPtrOutput
}

type diskStorageAccountTypesPtr string

func DiskStorageAccountTypesPtr(v string) DiskStorageAccountTypesPtrInput {
	return (*diskStorageAccountTypesPtr)(&v)
}

func (*diskStorageAccountTypesPtr) ElementType() reflect.Type {
	return diskStorageAccountTypesPtrType
}

func (in *diskStorageAccountTypesPtr) ToDiskStorageAccountTypesPtrOutput() DiskStorageAccountTypesPtrOutput {
	return pulumi.ToOutput(in).(DiskStorageAccountTypesPtrOutput)
}

func (in *diskStorageAccountTypesPtr) ToDiskStorageAccountTypesPtrOutputWithContext(ctx context.Context) DiskStorageAccountTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskStorageAccountTypesPtrOutput)
}

// The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
type HyperVGeneration string

const (
	HyperVGenerationV1 = HyperVGeneration("V1")
	HyperVGenerationV2 = HyperVGeneration("V2")
)

func (HyperVGeneration) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (e HyperVGeneration) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return pulumi.ToOutput(e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return e.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return HyperVGeneration(e).ToHyperVGenerationOutputWithContext(ctx).ToHyperVGenerationPtrOutputWithContext(ctx)
}

func (e HyperVGeneration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HyperVGenerationOutput struct{ *pulumi.OutputState }

func (HyperVGenerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVGeneration) *HyperVGeneration {
		return &v
	}).(HyperVGenerationPtrOutput)
}

func (o HyperVGenerationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HyperVGenerationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HyperVGenerationPtrOutput struct{ *pulumi.OutputState }

func (HyperVGenerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) Elem() HyperVGenerationOutput {
	return o.ApplyT(func(v *HyperVGeneration) HyperVGeneration {
		if v != nil {
			return *v
		}
		var ret HyperVGeneration
		return ret
	}).(HyperVGenerationOutput)
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HyperVGeneration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HyperVGenerationInput is an input type that accepts HyperVGenerationArgs and HyperVGenerationOutput values.
// You can construct a concrete instance of `HyperVGenerationInput` via:
//
//          HyperVGenerationArgs{...}
type HyperVGenerationInput interface {
	pulumi.Input

	ToHyperVGenerationOutput() HyperVGenerationOutput
	ToHyperVGenerationOutputWithContext(context.Context) HyperVGenerationOutput
}

var hyperVGenerationPtrType = reflect.TypeOf((**HyperVGeneration)(nil)).Elem()

type HyperVGenerationPtrInput interface {
	pulumi.Input

	ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput
	ToHyperVGenerationPtrOutputWithContext(context.Context) HyperVGenerationPtrOutput
}

type hyperVGenerationPtr string

func HyperVGenerationPtr(v string) HyperVGenerationPtrInput {
	return (*hyperVGenerationPtr)(&v)
}

func (*hyperVGenerationPtr) ElementType() reflect.Type {
	return hyperVGenerationPtrType
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return pulumi.ToOutput(in).(HyperVGenerationPtrOutput)
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HyperVGenerationPtrOutput)
}

// The Operating System type.
type OperatingSystemTypes string

const (
	OperatingSystemTypesWindows = OperatingSystemTypes("Windows")
	OperatingSystemTypesLinux   = OperatingSystemTypes("Linux")
)

func (OperatingSystemTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return e.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return OperatingSystemTypes(e).ToOperatingSystemTypesOutputWithContext(ctx).ToOperatingSystemTypesPtrOutputWithContext(ctx)
}

func (e OperatingSystemTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypesOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemTypes) *OperatingSystemTypes {
		return &v
	}).(OperatingSystemTypesPtrOutput)
}

func (o OperatingSystemTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypesPtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) Elem() OperatingSystemTypesOutput {
	return o.ApplyT(func(v *OperatingSystemTypes) OperatingSystemTypes {
		if v != nil {
			return *v
		}
		var ret OperatingSystemTypes
		return ret
	}).(OperatingSystemTypesOutput)
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypesInput is an input type that accepts OperatingSystemTypesArgs and OperatingSystemTypesOutput values.
// You can construct a concrete instance of `OperatingSystemTypesInput` via:
//
//          OperatingSystemTypesArgs{...}
type OperatingSystemTypesInput interface {
	pulumi.Input

	ToOperatingSystemTypesOutput() OperatingSystemTypesOutput
	ToOperatingSystemTypesOutputWithContext(context.Context) OperatingSystemTypesOutput
}

var operatingSystemTypesPtrType = reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()

type OperatingSystemTypesPtrInput interface {
	pulumi.Input

	ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput
	ToOperatingSystemTypesPtrOutputWithContext(context.Context) OperatingSystemTypesPtrOutput
}

type operatingSystemTypesPtr string

func OperatingSystemTypesPtr(v string) OperatingSystemTypesPtrInput {
	return (*operatingSystemTypesPtr)(&v)
}

func (*operatingSystemTypesPtr) ElementType() reflect.Type {
	return operatingSystemTypesPtrType
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypesPtrOutput)
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypesPtrOutput)
}

// The sku name.
type SnapshotStorageAccountTypes string

const (
	SnapshotStorageAccountTypes_Standard_LRS = SnapshotStorageAccountTypes("Standard_LRS")
	SnapshotStorageAccountTypes_Premium_LRS  = SnapshotStorageAccountTypes("Premium_LRS")
	SnapshotStorageAccountTypes_Standard_ZRS = SnapshotStorageAccountTypes("Standard_ZRS")
)

func (SnapshotStorageAccountTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStorageAccountTypes)(nil)).Elem()
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput {
	return pulumi.ToOutput(e).(SnapshotStorageAccountTypesOutput)
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SnapshotStorageAccountTypesOutput)
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return e.ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (e SnapshotStorageAccountTypes) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return SnapshotStorageAccountTypes(e).ToSnapshotStorageAccountTypesOutputWithContext(ctx).ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx)
}

func (e SnapshotStorageAccountTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStorageAccountTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotStorageAccountTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SnapshotStorageAccountTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SnapshotStorageAccountTypesOutput struct{ *pulumi.OutputState }

func (SnapshotStorageAccountTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotStorageAccountTypes)(nil)).Elem()
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput {
	return o
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesOutput {
	return o
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return o.ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotStorageAccountTypes) *SnapshotStorageAccountTypes {
		return &v
	}).(SnapshotStorageAccountTypesPtrOutput)
}

func (o SnapshotStorageAccountTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStorageAccountTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotStorageAccountTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotStorageAccountTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotStorageAccountTypesPtrOutput struct{ *pulumi.OutputState }

func (SnapshotStorageAccountTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotStorageAccountTypes)(nil)).Elem()
}

func (o SnapshotStorageAccountTypesPtrOutput) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return o
}

func (o SnapshotStorageAccountTypesPtrOutput) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return o
}

func (o SnapshotStorageAccountTypesPtrOutput) Elem() SnapshotStorageAccountTypesOutput {
	return o.ApplyT(func(v *SnapshotStorageAccountTypes) SnapshotStorageAccountTypes {
		if v != nil {
			return *v
		}
		var ret SnapshotStorageAccountTypes
		return ret
	}).(SnapshotStorageAccountTypesOutput)
}

func (o SnapshotStorageAccountTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotStorageAccountTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotStorageAccountTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SnapshotStorageAccountTypesInput is an input type that accepts SnapshotStorageAccountTypesArgs and SnapshotStorageAccountTypesOutput values.
// You can construct a concrete instance of `SnapshotStorageAccountTypesInput` via:
//
//          SnapshotStorageAccountTypesArgs{...}
type SnapshotStorageAccountTypesInput interface {
	pulumi.Input

	ToSnapshotStorageAccountTypesOutput() SnapshotStorageAccountTypesOutput
	ToSnapshotStorageAccountTypesOutputWithContext(context.Context) SnapshotStorageAccountTypesOutput
}

var snapshotStorageAccountTypesPtrType = reflect.TypeOf((**SnapshotStorageAccountTypes)(nil)).Elem()

type SnapshotStorageAccountTypesPtrInput interface {
	pulumi.Input

	ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput
	ToSnapshotStorageAccountTypesPtrOutputWithContext(context.Context) SnapshotStorageAccountTypesPtrOutput
}

type snapshotStorageAccountTypesPtr string

func SnapshotStorageAccountTypesPtr(v string) SnapshotStorageAccountTypesPtrInput {
	return (*snapshotStorageAccountTypesPtr)(&v)
}

func (*snapshotStorageAccountTypesPtr) ElementType() reflect.Type {
	return snapshotStorageAccountTypesPtrType
}

func (in *snapshotStorageAccountTypesPtr) ToSnapshotStorageAccountTypesPtrOutput() SnapshotStorageAccountTypesPtrOutput {
	return pulumi.ToOutput(in).(SnapshotStorageAccountTypesPtrOutput)
}

func (in *snapshotStorageAccountTypesPtr) ToSnapshotStorageAccountTypesPtrOutputWithContext(ctx context.Context) SnapshotStorageAccountTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SnapshotStorageAccountTypesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DiskCreateOptionOutput{})
	pulumi.RegisterOutputType(DiskCreateOptionPtrOutput{})
	pulumi.RegisterOutputType(DiskStorageAccountTypesOutput{})
	pulumi.RegisterOutputType(DiskStorageAccountTypesPtrOutput{})
	pulumi.RegisterOutputType(HyperVGenerationOutput{})
	pulumi.RegisterOutputType(HyperVGenerationPtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesPtrOutput{})
	pulumi.RegisterOutputType(SnapshotStorageAccountTypesOutput{})
	pulumi.RegisterOutputType(SnapshotStorageAccountTypesPtrOutput{})
}
