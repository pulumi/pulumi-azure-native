// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220404

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Describes a cloud service extension profile.
type CloudServiceExtensionProfile struct {
	// List of extensions for the cloud service.
	Extensions []Extension `pulumi:"extensions"`
}

// CloudServiceExtensionProfileInput is an input type that accepts CloudServiceExtensionProfileArgs and CloudServiceExtensionProfileOutput values.
// You can construct a concrete instance of `CloudServiceExtensionProfileInput` via:
//
//	CloudServiceExtensionProfileArgs{...}
type CloudServiceExtensionProfileInput interface {
	pulumi.Input

	ToCloudServiceExtensionProfileOutput() CloudServiceExtensionProfileOutput
	ToCloudServiceExtensionProfileOutputWithContext(context.Context) CloudServiceExtensionProfileOutput
}

// Describes a cloud service extension profile.
type CloudServiceExtensionProfileArgs struct {
	// List of extensions for the cloud service.
	Extensions ExtensionArrayInput `pulumi:"extensions"`
}

func (CloudServiceExtensionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionProfile)(nil)).Elem()
}

func (i CloudServiceExtensionProfileArgs) ToCloudServiceExtensionProfileOutput() CloudServiceExtensionProfileOutput {
	return i.ToCloudServiceExtensionProfileOutputWithContext(context.Background())
}

func (i CloudServiceExtensionProfileArgs) ToCloudServiceExtensionProfileOutputWithContext(ctx context.Context) CloudServiceExtensionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionProfileOutput)
}

func (i CloudServiceExtensionProfileArgs) ToCloudServiceExtensionProfilePtrOutput() CloudServiceExtensionProfilePtrOutput {
	return i.ToCloudServiceExtensionProfilePtrOutputWithContext(context.Background())
}

func (i CloudServiceExtensionProfileArgs) ToCloudServiceExtensionProfilePtrOutputWithContext(ctx context.Context) CloudServiceExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionProfileOutput).ToCloudServiceExtensionProfilePtrOutputWithContext(ctx)
}

// CloudServiceExtensionProfilePtrInput is an input type that accepts CloudServiceExtensionProfileArgs, CloudServiceExtensionProfilePtr and CloudServiceExtensionProfilePtrOutput values.
// You can construct a concrete instance of `CloudServiceExtensionProfilePtrInput` via:
//
//	        CloudServiceExtensionProfileArgs{...}
//
//	or:
//
//	        nil
type CloudServiceExtensionProfilePtrInput interface {
	pulumi.Input

	ToCloudServiceExtensionProfilePtrOutput() CloudServiceExtensionProfilePtrOutput
	ToCloudServiceExtensionProfilePtrOutputWithContext(context.Context) CloudServiceExtensionProfilePtrOutput
}

type cloudServiceExtensionProfilePtrType CloudServiceExtensionProfileArgs

func CloudServiceExtensionProfilePtr(v *CloudServiceExtensionProfileArgs) CloudServiceExtensionProfilePtrInput {
	return (*cloudServiceExtensionProfilePtrType)(v)
}

func (*cloudServiceExtensionProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionProfile)(nil)).Elem()
}

func (i *cloudServiceExtensionProfilePtrType) ToCloudServiceExtensionProfilePtrOutput() CloudServiceExtensionProfilePtrOutput {
	return i.ToCloudServiceExtensionProfilePtrOutputWithContext(context.Background())
}

func (i *cloudServiceExtensionProfilePtrType) ToCloudServiceExtensionProfilePtrOutputWithContext(ctx context.Context) CloudServiceExtensionProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionProfilePtrOutput)
}

// Describes a cloud service extension profile.
type CloudServiceExtensionProfileOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionProfile)(nil)).Elem()
}

func (o CloudServiceExtensionProfileOutput) ToCloudServiceExtensionProfileOutput() CloudServiceExtensionProfileOutput {
	return o
}

func (o CloudServiceExtensionProfileOutput) ToCloudServiceExtensionProfileOutputWithContext(ctx context.Context) CloudServiceExtensionProfileOutput {
	return o
}

func (o CloudServiceExtensionProfileOutput) ToCloudServiceExtensionProfilePtrOutput() CloudServiceExtensionProfilePtrOutput {
	return o.ToCloudServiceExtensionProfilePtrOutputWithContext(context.Background())
}

func (o CloudServiceExtensionProfileOutput) ToCloudServiceExtensionProfilePtrOutputWithContext(ctx context.Context) CloudServiceExtensionProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceExtensionProfile) *CloudServiceExtensionProfile {
		return &v
	}).(CloudServiceExtensionProfilePtrOutput)
}

// List of extensions for the cloud service.
func (o CloudServiceExtensionProfileOutput) Extensions() ExtensionArrayOutput {
	return o.ApplyT(func(v CloudServiceExtensionProfile) []Extension { return v.Extensions }).(ExtensionArrayOutput)
}

type CloudServiceExtensionProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionProfile)(nil)).Elem()
}

func (o CloudServiceExtensionProfilePtrOutput) ToCloudServiceExtensionProfilePtrOutput() CloudServiceExtensionProfilePtrOutput {
	return o
}

func (o CloudServiceExtensionProfilePtrOutput) ToCloudServiceExtensionProfilePtrOutputWithContext(ctx context.Context) CloudServiceExtensionProfilePtrOutput {
	return o
}

func (o CloudServiceExtensionProfilePtrOutput) Elem() CloudServiceExtensionProfileOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProfile) CloudServiceExtensionProfile {
		if v != nil {
			return *v
		}
		var ret CloudServiceExtensionProfile
		return ret
	}).(CloudServiceExtensionProfileOutput)
}

// List of extensions for the cloud service.
func (o CloudServiceExtensionProfilePtrOutput) Extensions() ExtensionArrayOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProfile) []Extension {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(ExtensionArrayOutput)
}

// Describes a cloud service extension profile.
type CloudServiceExtensionProfileResponse struct {
	// List of extensions for the cloud service.
	Extensions []ExtensionResponse `pulumi:"extensions"`
}

// Describes a cloud service extension profile.
type CloudServiceExtensionProfileResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionProfileResponse)(nil)).Elem()
}

func (o CloudServiceExtensionProfileResponseOutput) ToCloudServiceExtensionProfileResponseOutput() CloudServiceExtensionProfileResponseOutput {
	return o
}

func (o CloudServiceExtensionProfileResponseOutput) ToCloudServiceExtensionProfileResponseOutputWithContext(ctx context.Context) CloudServiceExtensionProfileResponseOutput {
	return o
}

// List of extensions for the cloud service.
func (o CloudServiceExtensionProfileResponseOutput) Extensions() ExtensionResponseArrayOutput {
	return o.ApplyT(func(v CloudServiceExtensionProfileResponse) []ExtensionResponse { return v.Extensions }).(ExtensionResponseArrayOutput)
}

type CloudServiceExtensionProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionProfileResponse)(nil)).Elem()
}

func (o CloudServiceExtensionProfileResponsePtrOutput) ToCloudServiceExtensionProfileResponsePtrOutput() CloudServiceExtensionProfileResponsePtrOutput {
	return o
}

func (o CloudServiceExtensionProfileResponsePtrOutput) ToCloudServiceExtensionProfileResponsePtrOutputWithContext(ctx context.Context) CloudServiceExtensionProfileResponsePtrOutput {
	return o
}

func (o CloudServiceExtensionProfileResponsePtrOutput) Elem() CloudServiceExtensionProfileResponseOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProfileResponse) CloudServiceExtensionProfileResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceExtensionProfileResponse
		return ret
	}).(CloudServiceExtensionProfileResponseOutput)
}

// List of extensions for the cloud service.
func (o CloudServiceExtensionProfileResponsePtrOutput) Extensions() ExtensionResponseArrayOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProfileResponse) []ExtensionResponse {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(ExtensionResponseArrayOutput)
}

// Extension Properties.
type CloudServiceExtensionProperties struct {
	// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Tag to force apply the provided public and protected settings.
	// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
	// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
	// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
	// it is up to handler implementation whether to re-run it or not
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// Protected settings for the extension which are encrypted before sent to the role instance.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
	ProtectedSettingsFromKeyVault *CloudServiceVaultAndSecretReference `pulumi:"protectedSettingsFromKeyVault"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
	RolesAppliedTo []string `pulumi:"rolesAppliedTo"`
	// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
	Settings interface{} `pulumi:"settings"`
	// Specifies the type of the extension.
	Type *string `pulumi:"type"`
	// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// CloudServiceExtensionPropertiesInput is an input type that accepts CloudServiceExtensionPropertiesArgs and CloudServiceExtensionPropertiesOutput values.
// You can construct a concrete instance of `CloudServiceExtensionPropertiesInput` via:
//
//	CloudServiceExtensionPropertiesArgs{...}
type CloudServiceExtensionPropertiesInput interface {
	pulumi.Input

	ToCloudServiceExtensionPropertiesOutput() CloudServiceExtensionPropertiesOutput
	ToCloudServiceExtensionPropertiesOutputWithContext(context.Context) CloudServiceExtensionPropertiesOutput
}

// Extension Properties.
type CloudServiceExtensionPropertiesArgs struct {
	// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Tag to force apply the provided public and protected settings.
	// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
	// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
	// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
	// it is up to handler implementation whether to re-run it or not
	ForceUpdateTag pulumi.StringPtrInput `pulumi:"forceUpdateTag"`
	// Protected settings for the extension which are encrypted before sent to the role instance.
	ProtectedSettings pulumi.Input `pulumi:"protectedSettings"`
	// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
	ProtectedSettingsFromKeyVault CloudServiceVaultAndSecretReferencePtrInput `pulumi:"protectedSettingsFromKeyVault"`
	// The name of the extension handler publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
	RolesAppliedTo pulumi.StringArrayInput `pulumi:"rolesAppliedTo"`
	// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
	Settings pulumi.Input `pulumi:"settings"`
	// Specifies the type of the extension.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (CloudServiceExtensionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionProperties)(nil)).Elem()
}

func (i CloudServiceExtensionPropertiesArgs) ToCloudServiceExtensionPropertiesOutput() CloudServiceExtensionPropertiesOutput {
	return i.ToCloudServiceExtensionPropertiesOutputWithContext(context.Background())
}

func (i CloudServiceExtensionPropertiesArgs) ToCloudServiceExtensionPropertiesOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionPropertiesOutput)
}

func (i CloudServiceExtensionPropertiesArgs) ToCloudServiceExtensionPropertiesPtrOutput() CloudServiceExtensionPropertiesPtrOutput {
	return i.ToCloudServiceExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (i CloudServiceExtensionPropertiesArgs) ToCloudServiceExtensionPropertiesPtrOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionPropertiesOutput).ToCloudServiceExtensionPropertiesPtrOutputWithContext(ctx)
}

// CloudServiceExtensionPropertiesPtrInput is an input type that accepts CloudServiceExtensionPropertiesArgs, CloudServiceExtensionPropertiesPtr and CloudServiceExtensionPropertiesPtrOutput values.
// You can construct a concrete instance of `CloudServiceExtensionPropertiesPtrInput` via:
//
//	        CloudServiceExtensionPropertiesArgs{...}
//
//	or:
//
//	        nil
type CloudServiceExtensionPropertiesPtrInput interface {
	pulumi.Input

	ToCloudServiceExtensionPropertiesPtrOutput() CloudServiceExtensionPropertiesPtrOutput
	ToCloudServiceExtensionPropertiesPtrOutputWithContext(context.Context) CloudServiceExtensionPropertiesPtrOutput
}

type cloudServiceExtensionPropertiesPtrType CloudServiceExtensionPropertiesArgs

func CloudServiceExtensionPropertiesPtr(v *CloudServiceExtensionPropertiesArgs) CloudServiceExtensionPropertiesPtrInput {
	return (*cloudServiceExtensionPropertiesPtrType)(v)
}

func (*cloudServiceExtensionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionProperties)(nil)).Elem()
}

func (i *cloudServiceExtensionPropertiesPtrType) ToCloudServiceExtensionPropertiesPtrOutput() CloudServiceExtensionPropertiesPtrOutput {
	return i.ToCloudServiceExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (i *cloudServiceExtensionPropertiesPtrType) ToCloudServiceExtensionPropertiesPtrOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceExtensionPropertiesPtrOutput)
}

// Extension Properties.
type CloudServiceExtensionPropertiesOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionProperties)(nil)).Elem()
}

func (o CloudServiceExtensionPropertiesOutput) ToCloudServiceExtensionPropertiesOutput() CloudServiceExtensionPropertiesOutput {
	return o
}

func (o CloudServiceExtensionPropertiesOutput) ToCloudServiceExtensionPropertiesOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesOutput {
	return o
}

func (o CloudServiceExtensionPropertiesOutput) ToCloudServiceExtensionPropertiesPtrOutput() CloudServiceExtensionPropertiesPtrOutput {
	return o.ToCloudServiceExtensionPropertiesPtrOutputWithContext(context.Background())
}

func (o CloudServiceExtensionPropertiesOutput) ToCloudServiceExtensionPropertiesPtrOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceExtensionProperties) *CloudServiceExtensionProperties {
		return &v
	}).(CloudServiceExtensionPropertiesPtrOutput)
}

// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
func (o CloudServiceExtensionPropertiesOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Tag to force apply the provided public and protected settings.
// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
// it is up to handler implementation whether to re-run it or not
func (o CloudServiceExtensionPropertiesOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// Protected settings for the extension which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesOutput) ProtectedSettingsFromKeyVault() CloudServiceVaultAndSecretReferencePtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *CloudServiceVaultAndSecretReference {
		return v.ProtectedSettingsFromKeyVault
	}).(CloudServiceVaultAndSecretReferencePtrOutput)
}

// The name of the extension handler publisher.
func (o CloudServiceExtensionPropertiesOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
func (o CloudServiceExtensionPropertiesOutput) RolesAppliedTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) []string { return v.RolesAppliedTo }).(pulumi.StringArrayOutput)
}

// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
func (o CloudServiceExtensionPropertiesOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Specifies the type of the extension.
func (o CloudServiceExtensionPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
func (o CloudServiceExtensionPropertiesOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionProperties) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type CloudServiceExtensionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionProperties)(nil)).Elem()
}

func (o CloudServiceExtensionPropertiesPtrOutput) ToCloudServiceExtensionPropertiesPtrOutput() CloudServiceExtensionPropertiesPtrOutput {
	return o
}

func (o CloudServiceExtensionPropertiesPtrOutput) ToCloudServiceExtensionPropertiesPtrOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesPtrOutput {
	return o
}

func (o CloudServiceExtensionPropertiesPtrOutput) Elem() CloudServiceExtensionPropertiesOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) CloudServiceExtensionProperties {
		if v != nil {
			return *v
		}
		var ret CloudServiceExtensionProperties
		return ret
	}).(CloudServiceExtensionPropertiesOutput)
}

// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
func (o CloudServiceExtensionPropertiesPtrOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgradeMinorVersion
	}).(pulumi.BoolPtrOutput)
}

// Tag to force apply the provided public and protected settings.
// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
// it is up to handler implementation whether to re-run it or not
func (o CloudServiceExtensionPropertiesPtrOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ForceUpdateTag
	}).(pulumi.StringPtrOutput)
}

// Protected settings for the extension which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesPtrOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProtectedSettings
	}).(pulumi.AnyOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesPtrOutput) ProtectedSettingsFromKeyVault() CloudServiceVaultAndSecretReferencePtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *CloudServiceVaultAndSecretReference {
		if v == nil {
			return nil
		}
		return v.ProtectedSettingsFromKeyVault
	}).(CloudServiceVaultAndSecretReferencePtrOutput)
}

// The name of the extension handler publisher.
func (o CloudServiceExtensionPropertiesPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
func (o CloudServiceExtensionPropertiesPtrOutput) RolesAppliedTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) []string {
		if v == nil {
			return nil
		}
		return v.RolesAppliedTo
	}).(pulumi.StringArrayOutput)
}

// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
func (o CloudServiceExtensionPropertiesPtrOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.AnyOutput)
}

// Specifies the type of the extension.
func (o CloudServiceExtensionPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
func (o CloudServiceExtensionPropertiesPtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionProperties) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

// Extension Properties.
type CloudServiceExtensionPropertiesResponse struct {
	// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Tag to force apply the provided public and protected settings.
	// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
	// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
	// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
	// it is up to handler implementation whether to re-run it or not
	ForceUpdateTag *string `pulumi:"forceUpdateTag"`
	// Protected settings for the extension which are encrypted before sent to the role instance.
	ProtectedSettings interface{} `pulumi:"protectedSettings"`
	// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
	ProtectedSettingsFromKeyVault *CloudServiceVaultAndSecretReferenceResponse `pulumi:"protectedSettingsFromKeyVault"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the extension handler publisher.
	Publisher *string `pulumi:"publisher"`
	// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
	RolesAppliedTo []string `pulumi:"rolesAppliedTo"`
	// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
	Settings interface{} `pulumi:"settings"`
	// Specifies the type of the extension.
	Type *string `pulumi:"type"`
	// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// Extension Properties.
type CloudServiceExtensionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceExtensionPropertiesResponse)(nil)).Elem()
}

func (o CloudServiceExtensionPropertiesResponseOutput) ToCloudServiceExtensionPropertiesResponseOutput() CloudServiceExtensionPropertiesResponseOutput {
	return o
}

func (o CloudServiceExtensionPropertiesResponseOutput) ToCloudServiceExtensionPropertiesResponseOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesResponseOutput {
	return o
}

// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
func (o CloudServiceExtensionPropertiesResponseOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Tag to force apply the provided public and protected settings.
// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
// it is up to handler implementation whether to re-run it or not
func (o CloudServiceExtensionPropertiesResponseOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *string { return v.ForceUpdateTag }).(pulumi.StringPtrOutput)
}

// Protected settings for the extension which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesResponseOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) interface{} { return v.ProtectedSettings }).(pulumi.AnyOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesResponseOutput) ProtectedSettingsFromKeyVault() CloudServiceVaultAndSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *CloudServiceVaultAndSecretReferenceResponse {
		return v.ProtectedSettingsFromKeyVault
	}).(CloudServiceVaultAndSecretReferenceResponsePtrOutput)
}

// The provisioning state, which only appears in the response.
func (o CloudServiceExtensionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.
func (o CloudServiceExtensionPropertiesResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
func (o CloudServiceExtensionPropertiesResponseOutput) RolesAppliedTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) []string { return v.RolesAppliedTo }).(pulumi.StringArrayOutput)
}

// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
func (o CloudServiceExtensionPropertiesResponseOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// Specifies the type of the extension.
func (o CloudServiceExtensionPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
func (o CloudServiceExtensionPropertiesResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceExtensionPropertiesResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type CloudServiceExtensionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceExtensionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceExtensionPropertiesResponse)(nil)).Elem()
}

func (o CloudServiceExtensionPropertiesResponsePtrOutput) ToCloudServiceExtensionPropertiesResponsePtrOutput() CloudServiceExtensionPropertiesResponsePtrOutput {
	return o
}

func (o CloudServiceExtensionPropertiesResponsePtrOutput) ToCloudServiceExtensionPropertiesResponsePtrOutputWithContext(ctx context.Context) CloudServiceExtensionPropertiesResponsePtrOutput {
	return o
}

func (o CloudServiceExtensionPropertiesResponsePtrOutput) Elem() CloudServiceExtensionPropertiesResponseOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) CloudServiceExtensionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceExtensionPropertiesResponse
		return ret
	}).(CloudServiceExtensionPropertiesResponseOutput)
}

// Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgradeMinorVersion
	}).(pulumi.BoolPtrOutput)
}

// Tag to force apply the provided public and protected settings.
// Changing the tag value allows for re-running the extension without changing any of the public or protected settings.
// If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.
// If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and
// it is up to handler implementation whether to re-run it or not
func (o CloudServiceExtensionPropertiesResponsePtrOutput) ForceUpdateTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ForceUpdateTag
	}).(pulumi.StringPtrOutput)
}

// Protected settings for the extension which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) ProtectedSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProtectedSettings
	}).(pulumi.AnyOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) ProtectedSettingsFromKeyVault() CloudServiceVaultAndSecretReferenceResponsePtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *CloudServiceVaultAndSecretReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedSettingsFromKeyVault
	}).(CloudServiceVaultAndSecretReferenceResponsePtrOutput)
}

// The provisioning state, which only appears in the response.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The name of the extension handler publisher.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) RolesAppliedTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.RolesAppliedTo
	}).(pulumi.StringArrayOutput)
}

// Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.AnyOutput)
}

// Specifies the type of the extension.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
func (o CloudServiceExtensionPropertiesResponsePtrOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceExtensionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TypeHandlerVersion
	}).(pulumi.StringPtrOutput)
}

// Network Profile for the cloud service.
type CloudServiceNetworkProfile struct {
	// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
	LoadBalancerConfigurations []LoadBalancerConfiguration `pulumi:"loadBalancerConfigurations"`
	// Slot type for the cloud service.
	// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
	// If not specified, the default value is Production.
	SlotType *string `pulumi:"slotType"`
	// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
	SwappableCloudService *SubResource `pulumi:"swappableCloudService"`
}

// CloudServiceNetworkProfileInput is an input type that accepts CloudServiceNetworkProfileArgs and CloudServiceNetworkProfileOutput values.
// You can construct a concrete instance of `CloudServiceNetworkProfileInput` via:
//
//	CloudServiceNetworkProfileArgs{...}
type CloudServiceNetworkProfileInput interface {
	pulumi.Input

	ToCloudServiceNetworkProfileOutput() CloudServiceNetworkProfileOutput
	ToCloudServiceNetworkProfileOutputWithContext(context.Context) CloudServiceNetworkProfileOutput
}

// Network Profile for the cloud service.
type CloudServiceNetworkProfileArgs struct {
	// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
	LoadBalancerConfigurations LoadBalancerConfigurationArrayInput `pulumi:"loadBalancerConfigurations"`
	// Slot type for the cloud service.
	// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
	// If not specified, the default value is Production.
	SlotType pulumi.StringPtrInput `pulumi:"slotType"`
	// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
	SwappableCloudService SubResourcePtrInput `pulumi:"swappableCloudService"`
}

func (CloudServiceNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceNetworkProfile)(nil)).Elem()
}

func (i CloudServiceNetworkProfileArgs) ToCloudServiceNetworkProfileOutput() CloudServiceNetworkProfileOutput {
	return i.ToCloudServiceNetworkProfileOutputWithContext(context.Background())
}

func (i CloudServiceNetworkProfileArgs) ToCloudServiceNetworkProfileOutputWithContext(ctx context.Context) CloudServiceNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceNetworkProfileOutput)
}

func (i CloudServiceNetworkProfileArgs) ToCloudServiceNetworkProfilePtrOutput() CloudServiceNetworkProfilePtrOutput {
	return i.ToCloudServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i CloudServiceNetworkProfileArgs) ToCloudServiceNetworkProfilePtrOutputWithContext(ctx context.Context) CloudServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceNetworkProfileOutput).ToCloudServiceNetworkProfilePtrOutputWithContext(ctx)
}

// CloudServiceNetworkProfilePtrInput is an input type that accepts CloudServiceNetworkProfileArgs, CloudServiceNetworkProfilePtr and CloudServiceNetworkProfilePtrOutput values.
// You can construct a concrete instance of `CloudServiceNetworkProfilePtrInput` via:
//
//	        CloudServiceNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type CloudServiceNetworkProfilePtrInput interface {
	pulumi.Input

	ToCloudServiceNetworkProfilePtrOutput() CloudServiceNetworkProfilePtrOutput
	ToCloudServiceNetworkProfilePtrOutputWithContext(context.Context) CloudServiceNetworkProfilePtrOutput
}

type cloudServiceNetworkProfilePtrType CloudServiceNetworkProfileArgs

func CloudServiceNetworkProfilePtr(v *CloudServiceNetworkProfileArgs) CloudServiceNetworkProfilePtrInput {
	return (*cloudServiceNetworkProfilePtrType)(v)
}

func (*cloudServiceNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceNetworkProfile)(nil)).Elem()
}

func (i *cloudServiceNetworkProfilePtrType) ToCloudServiceNetworkProfilePtrOutput() CloudServiceNetworkProfilePtrOutput {
	return i.ToCloudServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *cloudServiceNetworkProfilePtrType) ToCloudServiceNetworkProfilePtrOutputWithContext(ctx context.Context) CloudServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceNetworkProfilePtrOutput)
}

// Network Profile for the cloud service.
type CloudServiceNetworkProfileOutput struct{ *pulumi.OutputState }

func (CloudServiceNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceNetworkProfile)(nil)).Elem()
}

func (o CloudServiceNetworkProfileOutput) ToCloudServiceNetworkProfileOutput() CloudServiceNetworkProfileOutput {
	return o
}

func (o CloudServiceNetworkProfileOutput) ToCloudServiceNetworkProfileOutputWithContext(ctx context.Context) CloudServiceNetworkProfileOutput {
	return o
}

func (o CloudServiceNetworkProfileOutput) ToCloudServiceNetworkProfilePtrOutput() CloudServiceNetworkProfilePtrOutput {
	return o.ToCloudServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (o CloudServiceNetworkProfileOutput) ToCloudServiceNetworkProfilePtrOutputWithContext(ctx context.Context) CloudServiceNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceNetworkProfile) *CloudServiceNetworkProfile {
		return &v
	}).(CloudServiceNetworkProfilePtrOutput)
}

// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
func (o CloudServiceNetworkProfileOutput) LoadBalancerConfigurations() LoadBalancerConfigurationArrayOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfile) []LoadBalancerConfiguration { return v.LoadBalancerConfigurations }).(LoadBalancerConfigurationArrayOutput)
}

// Slot type for the cloud service.
// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
// If not specified, the default value is Production.
func (o CloudServiceNetworkProfileOutput) SlotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfile) *string { return v.SlotType }).(pulumi.StringPtrOutput)
}

// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
func (o CloudServiceNetworkProfileOutput) SwappableCloudService() SubResourcePtrOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfile) *SubResource { return v.SwappableCloudService }).(SubResourcePtrOutput)
}

type CloudServiceNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceNetworkProfile)(nil)).Elem()
}

func (o CloudServiceNetworkProfilePtrOutput) ToCloudServiceNetworkProfilePtrOutput() CloudServiceNetworkProfilePtrOutput {
	return o
}

func (o CloudServiceNetworkProfilePtrOutput) ToCloudServiceNetworkProfilePtrOutputWithContext(ctx context.Context) CloudServiceNetworkProfilePtrOutput {
	return o
}

func (o CloudServiceNetworkProfilePtrOutput) Elem() CloudServiceNetworkProfileOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfile) CloudServiceNetworkProfile {
		if v != nil {
			return *v
		}
		var ret CloudServiceNetworkProfile
		return ret
	}).(CloudServiceNetworkProfileOutput)
}

// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
func (o CloudServiceNetworkProfilePtrOutput) LoadBalancerConfigurations() LoadBalancerConfigurationArrayOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfile) []LoadBalancerConfiguration {
		if v == nil {
			return nil
		}
		return v.LoadBalancerConfigurations
	}).(LoadBalancerConfigurationArrayOutput)
}

// Slot type for the cloud service.
// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
// If not specified, the default value is Production.
func (o CloudServiceNetworkProfilePtrOutput) SlotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.SlotType
	}).(pulumi.StringPtrOutput)
}

// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
func (o CloudServiceNetworkProfilePtrOutput) SwappableCloudService() SubResourcePtrOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfile) *SubResource {
		if v == nil {
			return nil
		}
		return v.SwappableCloudService
	}).(SubResourcePtrOutput)
}

// Network Profile for the cloud service.
type CloudServiceNetworkProfileResponse struct {
	// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
	LoadBalancerConfigurations []LoadBalancerConfigurationResponse `pulumi:"loadBalancerConfigurations"`
	// Slot type for the cloud service.
	// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
	// If not specified, the default value is Production.
	SlotType *string `pulumi:"slotType"`
	// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
	SwappableCloudService *SubResourceResponse `pulumi:"swappableCloudService"`
}

// Network Profile for the cloud service.
type CloudServiceNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceNetworkProfileResponse)(nil)).Elem()
}

func (o CloudServiceNetworkProfileResponseOutput) ToCloudServiceNetworkProfileResponseOutput() CloudServiceNetworkProfileResponseOutput {
	return o
}

func (o CloudServiceNetworkProfileResponseOutput) ToCloudServiceNetworkProfileResponseOutputWithContext(ctx context.Context) CloudServiceNetworkProfileResponseOutput {
	return o
}

// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
func (o CloudServiceNetworkProfileResponseOutput) LoadBalancerConfigurations() LoadBalancerConfigurationResponseArrayOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfileResponse) []LoadBalancerConfigurationResponse {
		return v.LoadBalancerConfigurations
	}).(LoadBalancerConfigurationResponseArrayOutput)
}

// Slot type for the cloud service.
// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
// If not specified, the default value is Production.
func (o CloudServiceNetworkProfileResponseOutput) SlotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfileResponse) *string { return v.SlotType }).(pulumi.StringPtrOutput)
}

// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
func (o CloudServiceNetworkProfileResponseOutput) SwappableCloudService() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v CloudServiceNetworkProfileResponse) *SubResourceResponse { return v.SwappableCloudService }).(SubResourceResponsePtrOutput)
}

type CloudServiceNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceNetworkProfileResponse)(nil)).Elem()
}

func (o CloudServiceNetworkProfileResponsePtrOutput) ToCloudServiceNetworkProfileResponsePtrOutput() CloudServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o CloudServiceNetworkProfileResponsePtrOutput) ToCloudServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) CloudServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o CloudServiceNetworkProfileResponsePtrOutput) Elem() CloudServiceNetworkProfileResponseOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfileResponse) CloudServiceNetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceNetworkProfileResponse
		return ret
	}).(CloudServiceNetworkProfileResponseOutput)
}

// List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
func (o CloudServiceNetworkProfileResponsePtrOutput) LoadBalancerConfigurations() LoadBalancerConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfileResponse) []LoadBalancerConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerConfigurations
	}).(LoadBalancerConfigurationResponseArrayOutput)
}

// Slot type for the cloud service.
// Possible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />
// If not specified, the default value is Production.
func (o CloudServiceNetworkProfileResponsePtrOutput) SlotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SlotType
	}).(pulumi.StringPtrOutput)
}

// The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
func (o CloudServiceNetworkProfileResponsePtrOutput) SwappableCloudService() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *CloudServiceNetworkProfileResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.SwappableCloudService
	}).(SubResourceResponsePtrOutput)
}

// Describes the OS profile for the cloud service.
type CloudServiceOsProfile struct {
	// Specifies set of certificates that should be installed onto the role instances.
	Secrets []CloudServiceVaultSecretGroup `pulumi:"secrets"`
}

// CloudServiceOsProfileInput is an input type that accepts CloudServiceOsProfileArgs and CloudServiceOsProfileOutput values.
// You can construct a concrete instance of `CloudServiceOsProfileInput` via:
//
//	CloudServiceOsProfileArgs{...}
type CloudServiceOsProfileInput interface {
	pulumi.Input

	ToCloudServiceOsProfileOutput() CloudServiceOsProfileOutput
	ToCloudServiceOsProfileOutputWithContext(context.Context) CloudServiceOsProfileOutput
}

// Describes the OS profile for the cloud service.
type CloudServiceOsProfileArgs struct {
	// Specifies set of certificates that should be installed onto the role instances.
	Secrets CloudServiceVaultSecretGroupArrayInput `pulumi:"secrets"`
}

func (CloudServiceOsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceOsProfile)(nil)).Elem()
}

func (i CloudServiceOsProfileArgs) ToCloudServiceOsProfileOutput() CloudServiceOsProfileOutput {
	return i.ToCloudServiceOsProfileOutputWithContext(context.Background())
}

func (i CloudServiceOsProfileArgs) ToCloudServiceOsProfileOutputWithContext(ctx context.Context) CloudServiceOsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceOsProfileOutput)
}

func (i CloudServiceOsProfileArgs) ToCloudServiceOsProfilePtrOutput() CloudServiceOsProfilePtrOutput {
	return i.ToCloudServiceOsProfilePtrOutputWithContext(context.Background())
}

func (i CloudServiceOsProfileArgs) ToCloudServiceOsProfilePtrOutputWithContext(ctx context.Context) CloudServiceOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceOsProfileOutput).ToCloudServiceOsProfilePtrOutputWithContext(ctx)
}

// CloudServiceOsProfilePtrInput is an input type that accepts CloudServiceOsProfileArgs, CloudServiceOsProfilePtr and CloudServiceOsProfilePtrOutput values.
// You can construct a concrete instance of `CloudServiceOsProfilePtrInput` via:
//
//	        CloudServiceOsProfileArgs{...}
//
//	or:
//
//	        nil
type CloudServiceOsProfilePtrInput interface {
	pulumi.Input

	ToCloudServiceOsProfilePtrOutput() CloudServiceOsProfilePtrOutput
	ToCloudServiceOsProfilePtrOutputWithContext(context.Context) CloudServiceOsProfilePtrOutput
}

type cloudServiceOsProfilePtrType CloudServiceOsProfileArgs

func CloudServiceOsProfilePtr(v *CloudServiceOsProfileArgs) CloudServiceOsProfilePtrInput {
	return (*cloudServiceOsProfilePtrType)(v)
}

func (*cloudServiceOsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceOsProfile)(nil)).Elem()
}

func (i *cloudServiceOsProfilePtrType) ToCloudServiceOsProfilePtrOutput() CloudServiceOsProfilePtrOutput {
	return i.ToCloudServiceOsProfilePtrOutputWithContext(context.Background())
}

func (i *cloudServiceOsProfilePtrType) ToCloudServiceOsProfilePtrOutputWithContext(ctx context.Context) CloudServiceOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceOsProfilePtrOutput)
}

// Describes the OS profile for the cloud service.
type CloudServiceOsProfileOutput struct{ *pulumi.OutputState }

func (CloudServiceOsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceOsProfile)(nil)).Elem()
}

func (o CloudServiceOsProfileOutput) ToCloudServiceOsProfileOutput() CloudServiceOsProfileOutput {
	return o
}

func (o CloudServiceOsProfileOutput) ToCloudServiceOsProfileOutputWithContext(ctx context.Context) CloudServiceOsProfileOutput {
	return o
}

func (o CloudServiceOsProfileOutput) ToCloudServiceOsProfilePtrOutput() CloudServiceOsProfilePtrOutput {
	return o.ToCloudServiceOsProfilePtrOutputWithContext(context.Background())
}

func (o CloudServiceOsProfileOutput) ToCloudServiceOsProfilePtrOutputWithContext(ctx context.Context) CloudServiceOsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceOsProfile) *CloudServiceOsProfile {
		return &v
	}).(CloudServiceOsProfilePtrOutput)
}

// Specifies set of certificates that should be installed onto the role instances.
func (o CloudServiceOsProfileOutput) Secrets() CloudServiceVaultSecretGroupArrayOutput {
	return o.ApplyT(func(v CloudServiceOsProfile) []CloudServiceVaultSecretGroup { return v.Secrets }).(CloudServiceVaultSecretGroupArrayOutput)
}

type CloudServiceOsProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceOsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceOsProfile)(nil)).Elem()
}

func (o CloudServiceOsProfilePtrOutput) ToCloudServiceOsProfilePtrOutput() CloudServiceOsProfilePtrOutput {
	return o
}

func (o CloudServiceOsProfilePtrOutput) ToCloudServiceOsProfilePtrOutputWithContext(ctx context.Context) CloudServiceOsProfilePtrOutput {
	return o
}

func (o CloudServiceOsProfilePtrOutput) Elem() CloudServiceOsProfileOutput {
	return o.ApplyT(func(v *CloudServiceOsProfile) CloudServiceOsProfile {
		if v != nil {
			return *v
		}
		var ret CloudServiceOsProfile
		return ret
	}).(CloudServiceOsProfileOutput)
}

// Specifies set of certificates that should be installed onto the role instances.
func (o CloudServiceOsProfilePtrOutput) Secrets() CloudServiceVaultSecretGroupArrayOutput {
	return o.ApplyT(func(v *CloudServiceOsProfile) []CloudServiceVaultSecretGroup {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(CloudServiceVaultSecretGroupArrayOutput)
}

// Describes the OS profile for the cloud service.
type CloudServiceOsProfileResponse struct {
	// Specifies set of certificates that should be installed onto the role instances.
	Secrets []CloudServiceVaultSecretGroupResponse `pulumi:"secrets"`
}

// Describes the OS profile for the cloud service.
type CloudServiceOsProfileResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceOsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceOsProfileResponse)(nil)).Elem()
}

func (o CloudServiceOsProfileResponseOutput) ToCloudServiceOsProfileResponseOutput() CloudServiceOsProfileResponseOutput {
	return o
}

func (o CloudServiceOsProfileResponseOutput) ToCloudServiceOsProfileResponseOutputWithContext(ctx context.Context) CloudServiceOsProfileResponseOutput {
	return o
}

// Specifies set of certificates that should be installed onto the role instances.
func (o CloudServiceOsProfileResponseOutput) Secrets() CloudServiceVaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v CloudServiceOsProfileResponse) []CloudServiceVaultSecretGroupResponse { return v.Secrets }).(CloudServiceVaultSecretGroupResponseArrayOutput)
}

type CloudServiceOsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceOsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceOsProfileResponse)(nil)).Elem()
}

func (o CloudServiceOsProfileResponsePtrOutput) ToCloudServiceOsProfileResponsePtrOutput() CloudServiceOsProfileResponsePtrOutput {
	return o
}

func (o CloudServiceOsProfileResponsePtrOutput) ToCloudServiceOsProfileResponsePtrOutputWithContext(ctx context.Context) CloudServiceOsProfileResponsePtrOutput {
	return o
}

func (o CloudServiceOsProfileResponsePtrOutput) Elem() CloudServiceOsProfileResponseOutput {
	return o.ApplyT(func(v *CloudServiceOsProfileResponse) CloudServiceOsProfileResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceOsProfileResponse
		return ret
	}).(CloudServiceOsProfileResponseOutput)
}

// Specifies set of certificates that should be installed onto the role instances.
func (o CloudServiceOsProfileResponsePtrOutput) Secrets() CloudServiceVaultSecretGroupResponseArrayOutput {
	return o.ApplyT(func(v *CloudServiceOsProfileResponse) []CloudServiceVaultSecretGroupResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(CloudServiceVaultSecretGroupResponseArrayOutput)
}

// Cloud service properties
type CloudServiceProperties struct {
	// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
	// The default value is `false`.
	AllowModelOverride *bool `pulumi:"allowModelOverride"`
	// Specifies the XML service configuration (.cscfg) for the cloud service.
	Configuration *string `pulumi:"configuration"`
	// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	ConfigurationUrl *string `pulumi:"configurationUrl"`
	// Describes a cloud service extension profile.
	ExtensionProfile *CloudServiceExtensionProfile `pulumi:"extensionProfile"`
	// Network Profile for the cloud service.
	NetworkProfile *CloudServiceNetworkProfile `pulumi:"networkProfile"`
	// Describes the OS profile for the cloud service.
	OsProfile *CloudServiceOsProfile `pulumi:"osProfile"`
	// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	PackageUrl *string `pulumi:"packageUrl"`
	// Describes the role profile for the cloud service.
	RoleProfile *CloudServiceRoleProfile `pulumi:"roleProfile"`
	// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
	// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
	StartCloudService *bool `pulumi:"startCloudService"`
	// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
	// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
	// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
	UpgradeMode *string `pulumi:"upgradeMode"`
}

// CloudServicePropertiesInput is an input type that accepts CloudServicePropertiesArgs and CloudServicePropertiesOutput values.
// You can construct a concrete instance of `CloudServicePropertiesInput` via:
//
//	CloudServicePropertiesArgs{...}
type CloudServicePropertiesInput interface {
	pulumi.Input

	ToCloudServicePropertiesOutput() CloudServicePropertiesOutput
	ToCloudServicePropertiesOutputWithContext(context.Context) CloudServicePropertiesOutput
}

// Cloud service properties
type CloudServicePropertiesArgs struct {
	// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
	// The default value is `false`.
	AllowModelOverride pulumi.BoolPtrInput `pulumi:"allowModelOverride"`
	// Specifies the XML service configuration (.cscfg) for the cloud service.
	Configuration pulumi.StringPtrInput `pulumi:"configuration"`
	// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	ConfigurationUrl pulumi.StringPtrInput `pulumi:"configurationUrl"`
	// Describes a cloud service extension profile.
	ExtensionProfile CloudServiceExtensionProfilePtrInput `pulumi:"extensionProfile"`
	// Network Profile for the cloud service.
	NetworkProfile CloudServiceNetworkProfilePtrInput `pulumi:"networkProfile"`
	// Describes the OS profile for the cloud service.
	OsProfile CloudServiceOsProfilePtrInput `pulumi:"osProfile"`
	// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	PackageUrl pulumi.StringPtrInput `pulumi:"packageUrl"`
	// Describes the role profile for the cloud service.
	RoleProfile CloudServiceRoleProfilePtrInput `pulumi:"roleProfile"`
	// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
	// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
	StartCloudService pulumi.BoolPtrInput `pulumi:"startCloudService"`
	// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
	// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
	// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
	UpgradeMode pulumi.StringPtrInput `pulumi:"upgradeMode"`
}

func (CloudServicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceProperties)(nil)).Elem()
}

func (i CloudServicePropertiesArgs) ToCloudServicePropertiesOutput() CloudServicePropertiesOutput {
	return i.ToCloudServicePropertiesOutputWithContext(context.Background())
}

func (i CloudServicePropertiesArgs) ToCloudServicePropertiesOutputWithContext(ctx context.Context) CloudServicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServicePropertiesOutput)
}

func (i CloudServicePropertiesArgs) ToCloudServicePropertiesPtrOutput() CloudServicePropertiesPtrOutput {
	return i.ToCloudServicePropertiesPtrOutputWithContext(context.Background())
}

func (i CloudServicePropertiesArgs) ToCloudServicePropertiesPtrOutputWithContext(ctx context.Context) CloudServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServicePropertiesOutput).ToCloudServicePropertiesPtrOutputWithContext(ctx)
}

// CloudServicePropertiesPtrInput is an input type that accepts CloudServicePropertiesArgs, CloudServicePropertiesPtr and CloudServicePropertiesPtrOutput values.
// You can construct a concrete instance of `CloudServicePropertiesPtrInput` via:
//
//	        CloudServicePropertiesArgs{...}
//
//	or:
//
//	        nil
type CloudServicePropertiesPtrInput interface {
	pulumi.Input

	ToCloudServicePropertiesPtrOutput() CloudServicePropertiesPtrOutput
	ToCloudServicePropertiesPtrOutputWithContext(context.Context) CloudServicePropertiesPtrOutput
}

type cloudServicePropertiesPtrType CloudServicePropertiesArgs

func CloudServicePropertiesPtr(v *CloudServicePropertiesArgs) CloudServicePropertiesPtrInput {
	return (*cloudServicePropertiesPtrType)(v)
}

func (*cloudServicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceProperties)(nil)).Elem()
}

func (i *cloudServicePropertiesPtrType) ToCloudServicePropertiesPtrOutput() CloudServicePropertiesPtrOutput {
	return i.ToCloudServicePropertiesPtrOutputWithContext(context.Background())
}

func (i *cloudServicePropertiesPtrType) ToCloudServicePropertiesPtrOutputWithContext(ctx context.Context) CloudServicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServicePropertiesPtrOutput)
}

// Cloud service properties
type CloudServicePropertiesOutput struct{ *pulumi.OutputState }

func (CloudServicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceProperties)(nil)).Elem()
}

func (o CloudServicePropertiesOutput) ToCloudServicePropertiesOutput() CloudServicePropertiesOutput {
	return o
}

func (o CloudServicePropertiesOutput) ToCloudServicePropertiesOutputWithContext(ctx context.Context) CloudServicePropertiesOutput {
	return o
}

func (o CloudServicePropertiesOutput) ToCloudServicePropertiesPtrOutput() CloudServicePropertiesPtrOutput {
	return o.ToCloudServicePropertiesPtrOutputWithContext(context.Background())
}

func (o CloudServicePropertiesOutput) ToCloudServicePropertiesPtrOutputWithContext(ctx context.Context) CloudServicePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceProperties) *CloudServiceProperties {
		return &v
	}).(CloudServicePropertiesPtrOutput)
}

// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
// The default value is `false`.
func (o CloudServicePropertiesOutput) AllowModelOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *bool { return v.AllowModelOverride }).(pulumi.BoolPtrOutput)
}

// Specifies the XML service configuration (.cscfg) for the cloud service.
func (o CloudServicePropertiesOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesOutput) ConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *string { return v.ConfigurationUrl }).(pulumi.StringPtrOutput)
}

// Describes a cloud service extension profile.
func (o CloudServicePropertiesOutput) ExtensionProfile() CloudServiceExtensionProfilePtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *CloudServiceExtensionProfile { return v.ExtensionProfile }).(CloudServiceExtensionProfilePtrOutput)
}

// Network Profile for the cloud service.
func (o CloudServicePropertiesOutput) NetworkProfile() CloudServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *CloudServiceNetworkProfile { return v.NetworkProfile }).(CloudServiceNetworkProfilePtrOutput)
}

// Describes the OS profile for the cloud service.
func (o CloudServicePropertiesOutput) OsProfile() CloudServiceOsProfilePtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *CloudServiceOsProfile { return v.OsProfile }).(CloudServiceOsProfilePtrOutput)
}

// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesOutput) PackageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *string { return v.PackageUrl }).(pulumi.StringPtrOutput)
}

// Describes the role profile for the cloud service.
func (o CloudServicePropertiesOutput) RoleProfile() CloudServiceRoleProfilePtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *CloudServiceRoleProfile { return v.RoleProfile }).(CloudServiceRoleProfilePtrOutput)
}

// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
func (o CloudServicePropertiesOutput) StartCloudService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *bool { return v.StartCloudService }).(pulumi.BoolPtrOutput)
}

// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
func (o CloudServicePropertiesOutput) UpgradeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceProperties) *string { return v.UpgradeMode }).(pulumi.StringPtrOutput)
}

type CloudServicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CloudServicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceProperties)(nil)).Elem()
}

func (o CloudServicePropertiesPtrOutput) ToCloudServicePropertiesPtrOutput() CloudServicePropertiesPtrOutput {
	return o
}

func (o CloudServicePropertiesPtrOutput) ToCloudServicePropertiesPtrOutputWithContext(ctx context.Context) CloudServicePropertiesPtrOutput {
	return o
}

func (o CloudServicePropertiesPtrOutput) Elem() CloudServicePropertiesOutput {
	return o.ApplyT(func(v *CloudServiceProperties) CloudServiceProperties {
		if v != nil {
			return *v
		}
		var ret CloudServiceProperties
		return ret
	}).(CloudServicePropertiesOutput)
}

// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
// The default value is `false`.
func (o CloudServicePropertiesPtrOutput) AllowModelOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AllowModelOverride
	}).(pulumi.BoolPtrOutput)
}

// Specifies the XML service configuration (.cscfg) for the cloud service.
func (o CloudServicePropertiesPtrOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.StringPtrOutput)
}

// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesPtrOutput) ConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationUrl
	}).(pulumi.StringPtrOutput)
}

// Describes a cloud service extension profile.
func (o CloudServicePropertiesPtrOutput) ExtensionProfile() CloudServiceExtensionProfilePtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *CloudServiceExtensionProfile {
		if v == nil {
			return nil
		}
		return v.ExtensionProfile
	}).(CloudServiceExtensionProfilePtrOutput)
}

// Network Profile for the cloud service.
func (o CloudServicePropertiesPtrOutput) NetworkProfile() CloudServiceNetworkProfilePtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *CloudServiceNetworkProfile {
		if v == nil {
			return nil
		}
		return v.NetworkProfile
	}).(CloudServiceNetworkProfilePtrOutput)
}

// Describes the OS profile for the cloud service.
func (o CloudServicePropertiesPtrOutput) OsProfile() CloudServiceOsProfilePtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *CloudServiceOsProfile {
		if v == nil {
			return nil
		}
		return v.OsProfile
	}).(CloudServiceOsProfilePtrOutput)
}

// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesPtrOutput) PackageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *string {
		if v == nil {
			return nil
		}
		return v.PackageUrl
	}).(pulumi.StringPtrOutput)
}

// Describes the role profile for the cloud service.
func (o CloudServicePropertiesPtrOutput) RoleProfile() CloudServiceRoleProfilePtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *CloudServiceRoleProfile {
		if v == nil {
			return nil
		}
		return v.RoleProfile
	}).(CloudServiceRoleProfilePtrOutput)
}

// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
func (o CloudServicePropertiesPtrOutput) StartCloudService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.StartCloudService
	}).(pulumi.BoolPtrOutput)
}

// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
func (o CloudServicePropertiesPtrOutput) UpgradeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceProperties) *string {
		if v == nil {
			return nil
		}
		return v.UpgradeMode
	}).(pulumi.StringPtrOutput)
}

// Cloud service properties
type CloudServicePropertiesResponse struct {
	// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
	// The default value is `false`.
	AllowModelOverride *bool `pulumi:"allowModelOverride"`
	// Specifies the XML service configuration (.cscfg) for the cloud service.
	Configuration *string `pulumi:"configuration"`
	// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	ConfigurationUrl *string `pulumi:"configurationUrl"`
	// Describes a cloud service extension profile.
	ExtensionProfile *CloudServiceExtensionProfileResponse `pulumi:"extensionProfile"`
	// Network Profile for the cloud service.
	NetworkProfile *CloudServiceNetworkProfileResponse `pulumi:"networkProfile"`
	// Describes the OS profile for the cloud service.
	OsProfile *CloudServiceOsProfileResponse `pulumi:"osProfile"`
	// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
	// This is a write-only property and is not returned in GET calls.
	PackageUrl *string `pulumi:"packageUrl"`
	// The provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Describes the role profile for the cloud service.
	RoleProfile *CloudServiceRoleProfileResponse `pulumi:"roleProfile"`
	// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
	// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
	StartCloudService *bool `pulumi:"startCloudService"`
	// The unique identifier for the cloud service.
	UniqueId string `pulumi:"uniqueId"`
	// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
	// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
	// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
	UpgradeMode *string `pulumi:"upgradeMode"`
}

// Cloud service properties
type CloudServicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CloudServicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServicePropertiesResponse)(nil)).Elem()
}

func (o CloudServicePropertiesResponseOutput) ToCloudServicePropertiesResponseOutput() CloudServicePropertiesResponseOutput {
	return o
}

func (o CloudServicePropertiesResponseOutput) ToCloudServicePropertiesResponseOutputWithContext(ctx context.Context) CloudServicePropertiesResponseOutput {
	return o
}

// (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.
// The default value is `false`.
func (o CloudServicePropertiesResponseOutput) AllowModelOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *bool { return v.AllowModelOverride }).(pulumi.BoolPtrOutput)
}

// Specifies the XML service configuration (.cscfg) for the cloud service.
func (o CloudServicePropertiesResponseOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesResponseOutput) ConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *string { return v.ConfigurationUrl }).(pulumi.StringPtrOutput)
}

// Describes a cloud service extension profile.
func (o CloudServicePropertiesResponseOutput) ExtensionProfile() CloudServiceExtensionProfileResponsePtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *CloudServiceExtensionProfileResponse {
		return v.ExtensionProfile
	}).(CloudServiceExtensionProfileResponsePtrOutput)
}

// Network Profile for the cloud service.
func (o CloudServicePropertiesResponseOutput) NetworkProfile() CloudServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *CloudServiceNetworkProfileResponse { return v.NetworkProfile }).(CloudServiceNetworkProfileResponsePtrOutput)
}

// Describes the OS profile for the cloud service.
func (o CloudServicePropertiesResponseOutput) OsProfile() CloudServiceOsProfileResponsePtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *CloudServiceOsProfileResponse { return v.OsProfile }).(CloudServiceOsProfileResponsePtrOutput)
}

// Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.
// This is a write-only property and is not returned in GET calls.
func (o CloudServicePropertiesResponseOutput) PackageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *string { return v.PackageUrl }).(pulumi.StringPtrOutput)
}

// The provisioning state, which only appears in the response.
func (o CloudServicePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Describes the role profile for the cloud service.
func (o CloudServicePropertiesResponseOutput) RoleProfile() CloudServiceRoleProfileResponsePtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *CloudServiceRoleProfileResponse { return v.RoleProfile }).(CloudServiceRoleProfileResponsePtrOutput)
}

// (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.
// If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.
func (o CloudServicePropertiesResponseOutput) StartCloudService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *bool { return v.StartCloudService }).(pulumi.BoolPtrOutput)
}

// The unique identifier for the cloud service.
func (o CloudServicePropertiesResponseOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) string { return v.UniqueId }).(pulumi.StringOutput)
}

// Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.
// Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />
// If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.
func (o CloudServicePropertiesResponseOutput) UpgradeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServicePropertiesResponse) *string { return v.UpgradeMode }).(pulumi.StringPtrOutput)
}

// Describes the role profile for the cloud service.
type CloudServiceRoleProfile struct {
	// List of roles for the cloud service.
	Roles []CloudServiceRoleProfileProperties `pulumi:"roles"`
}

// CloudServiceRoleProfileInput is an input type that accepts CloudServiceRoleProfileArgs and CloudServiceRoleProfileOutput values.
// You can construct a concrete instance of `CloudServiceRoleProfileInput` via:
//
//	CloudServiceRoleProfileArgs{...}
type CloudServiceRoleProfileInput interface {
	pulumi.Input

	ToCloudServiceRoleProfileOutput() CloudServiceRoleProfileOutput
	ToCloudServiceRoleProfileOutputWithContext(context.Context) CloudServiceRoleProfileOutput
}

// Describes the role profile for the cloud service.
type CloudServiceRoleProfileArgs struct {
	// List of roles for the cloud service.
	Roles CloudServiceRoleProfilePropertiesArrayInput `pulumi:"roles"`
}

func (CloudServiceRoleProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfile)(nil)).Elem()
}

func (i CloudServiceRoleProfileArgs) ToCloudServiceRoleProfileOutput() CloudServiceRoleProfileOutput {
	return i.ToCloudServiceRoleProfileOutputWithContext(context.Background())
}

func (i CloudServiceRoleProfileArgs) ToCloudServiceRoleProfileOutputWithContext(ctx context.Context) CloudServiceRoleProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleProfileOutput)
}

func (i CloudServiceRoleProfileArgs) ToCloudServiceRoleProfilePtrOutput() CloudServiceRoleProfilePtrOutput {
	return i.ToCloudServiceRoleProfilePtrOutputWithContext(context.Background())
}

func (i CloudServiceRoleProfileArgs) ToCloudServiceRoleProfilePtrOutputWithContext(ctx context.Context) CloudServiceRoleProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleProfileOutput).ToCloudServiceRoleProfilePtrOutputWithContext(ctx)
}

// CloudServiceRoleProfilePtrInput is an input type that accepts CloudServiceRoleProfileArgs, CloudServiceRoleProfilePtr and CloudServiceRoleProfilePtrOutput values.
// You can construct a concrete instance of `CloudServiceRoleProfilePtrInput` via:
//
//	        CloudServiceRoleProfileArgs{...}
//
//	or:
//
//	        nil
type CloudServiceRoleProfilePtrInput interface {
	pulumi.Input

	ToCloudServiceRoleProfilePtrOutput() CloudServiceRoleProfilePtrOutput
	ToCloudServiceRoleProfilePtrOutputWithContext(context.Context) CloudServiceRoleProfilePtrOutput
}

type cloudServiceRoleProfilePtrType CloudServiceRoleProfileArgs

func CloudServiceRoleProfilePtr(v *CloudServiceRoleProfileArgs) CloudServiceRoleProfilePtrInput {
	return (*cloudServiceRoleProfilePtrType)(v)
}

func (*cloudServiceRoleProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleProfile)(nil)).Elem()
}

func (i *cloudServiceRoleProfilePtrType) ToCloudServiceRoleProfilePtrOutput() CloudServiceRoleProfilePtrOutput {
	return i.ToCloudServiceRoleProfilePtrOutputWithContext(context.Background())
}

func (i *cloudServiceRoleProfilePtrType) ToCloudServiceRoleProfilePtrOutputWithContext(ctx context.Context) CloudServiceRoleProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleProfilePtrOutput)
}

// Describes the role profile for the cloud service.
type CloudServiceRoleProfileOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfile)(nil)).Elem()
}

func (o CloudServiceRoleProfileOutput) ToCloudServiceRoleProfileOutput() CloudServiceRoleProfileOutput {
	return o
}

func (o CloudServiceRoleProfileOutput) ToCloudServiceRoleProfileOutputWithContext(ctx context.Context) CloudServiceRoleProfileOutput {
	return o
}

func (o CloudServiceRoleProfileOutput) ToCloudServiceRoleProfilePtrOutput() CloudServiceRoleProfilePtrOutput {
	return o.ToCloudServiceRoleProfilePtrOutputWithContext(context.Background())
}

func (o CloudServiceRoleProfileOutput) ToCloudServiceRoleProfilePtrOutputWithContext(ctx context.Context) CloudServiceRoleProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceRoleProfile) *CloudServiceRoleProfile {
		return &v
	}).(CloudServiceRoleProfilePtrOutput)
}

// List of roles for the cloud service.
func (o CloudServiceRoleProfileOutput) Roles() CloudServiceRoleProfilePropertiesArrayOutput {
	return o.ApplyT(func(v CloudServiceRoleProfile) []CloudServiceRoleProfileProperties { return v.Roles }).(CloudServiceRoleProfilePropertiesArrayOutput)
}

type CloudServiceRoleProfilePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleProfile)(nil)).Elem()
}

func (o CloudServiceRoleProfilePtrOutput) ToCloudServiceRoleProfilePtrOutput() CloudServiceRoleProfilePtrOutput {
	return o
}

func (o CloudServiceRoleProfilePtrOutput) ToCloudServiceRoleProfilePtrOutputWithContext(ctx context.Context) CloudServiceRoleProfilePtrOutput {
	return o
}

func (o CloudServiceRoleProfilePtrOutput) Elem() CloudServiceRoleProfileOutput {
	return o.ApplyT(func(v *CloudServiceRoleProfile) CloudServiceRoleProfile {
		if v != nil {
			return *v
		}
		var ret CloudServiceRoleProfile
		return ret
	}).(CloudServiceRoleProfileOutput)
}

// List of roles for the cloud service.
func (o CloudServiceRoleProfilePtrOutput) Roles() CloudServiceRoleProfilePropertiesArrayOutput {
	return o.ApplyT(func(v *CloudServiceRoleProfile) []CloudServiceRoleProfileProperties {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(CloudServiceRoleProfilePropertiesArrayOutput)
}

// Describes the role properties.
type CloudServiceRoleProfileProperties struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// Describes the cloud service role sku.
	Sku *CloudServiceRoleSku `pulumi:"sku"`
}

// CloudServiceRoleProfilePropertiesInput is an input type that accepts CloudServiceRoleProfilePropertiesArgs and CloudServiceRoleProfilePropertiesOutput values.
// You can construct a concrete instance of `CloudServiceRoleProfilePropertiesInput` via:
//
//	CloudServiceRoleProfilePropertiesArgs{...}
type CloudServiceRoleProfilePropertiesInput interface {
	pulumi.Input

	ToCloudServiceRoleProfilePropertiesOutput() CloudServiceRoleProfilePropertiesOutput
	ToCloudServiceRoleProfilePropertiesOutputWithContext(context.Context) CloudServiceRoleProfilePropertiesOutput
}

// Describes the role properties.
type CloudServiceRoleProfilePropertiesArgs struct {
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes the cloud service role sku.
	Sku CloudServiceRoleSkuPtrInput `pulumi:"sku"`
}

func (CloudServiceRoleProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfileProperties)(nil)).Elem()
}

func (i CloudServiceRoleProfilePropertiesArgs) ToCloudServiceRoleProfilePropertiesOutput() CloudServiceRoleProfilePropertiesOutput {
	return i.ToCloudServiceRoleProfilePropertiesOutputWithContext(context.Background())
}

func (i CloudServiceRoleProfilePropertiesArgs) ToCloudServiceRoleProfilePropertiesOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleProfilePropertiesOutput)
}

// CloudServiceRoleProfilePropertiesArrayInput is an input type that accepts CloudServiceRoleProfilePropertiesArray and CloudServiceRoleProfilePropertiesArrayOutput values.
// You can construct a concrete instance of `CloudServiceRoleProfilePropertiesArrayInput` via:
//
//	CloudServiceRoleProfilePropertiesArray{ CloudServiceRoleProfilePropertiesArgs{...} }
type CloudServiceRoleProfilePropertiesArrayInput interface {
	pulumi.Input

	ToCloudServiceRoleProfilePropertiesArrayOutput() CloudServiceRoleProfilePropertiesArrayOutput
	ToCloudServiceRoleProfilePropertiesArrayOutputWithContext(context.Context) CloudServiceRoleProfilePropertiesArrayOutput
}

type CloudServiceRoleProfilePropertiesArray []CloudServiceRoleProfilePropertiesInput

func (CloudServiceRoleProfilePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceRoleProfileProperties)(nil)).Elem()
}

func (i CloudServiceRoleProfilePropertiesArray) ToCloudServiceRoleProfilePropertiesArrayOutput() CloudServiceRoleProfilePropertiesArrayOutput {
	return i.ToCloudServiceRoleProfilePropertiesArrayOutputWithContext(context.Background())
}

func (i CloudServiceRoleProfilePropertiesArray) ToCloudServiceRoleProfilePropertiesArrayOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleProfilePropertiesArrayOutput)
}

// Describes the role properties.
type CloudServiceRoleProfilePropertiesOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfileProperties)(nil)).Elem()
}

func (o CloudServiceRoleProfilePropertiesOutput) ToCloudServiceRoleProfilePropertiesOutput() CloudServiceRoleProfilePropertiesOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesOutput) ToCloudServiceRoleProfilePropertiesOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesOutput {
	return o
}

// Resource name.
func (o CloudServiceRoleProfilePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleProfileProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the cloud service role sku.
func (o CloudServiceRoleProfilePropertiesOutput) Sku() CloudServiceRoleSkuPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleProfileProperties) *CloudServiceRoleSku { return v.Sku }).(CloudServiceRoleSkuPtrOutput)
}

type CloudServiceRoleProfilePropertiesArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfilePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceRoleProfileProperties)(nil)).Elem()
}

func (o CloudServiceRoleProfilePropertiesArrayOutput) ToCloudServiceRoleProfilePropertiesArrayOutput() CloudServiceRoleProfilePropertiesArrayOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesArrayOutput) ToCloudServiceRoleProfilePropertiesArrayOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesArrayOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesArrayOutput) Index(i pulumi.IntInput) CloudServiceRoleProfilePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceRoleProfileProperties {
		return vs[0].([]CloudServiceRoleProfileProperties)[vs[1].(int)]
	}).(CloudServiceRoleProfilePropertiesOutput)
}

// Describes the role properties.
type CloudServiceRoleProfilePropertiesResponse struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// Describes the cloud service role sku.
	Sku *CloudServiceRoleSkuResponse `pulumi:"sku"`
}

// Describes the role properties.
type CloudServiceRoleProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfilePropertiesResponse)(nil)).Elem()
}

func (o CloudServiceRoleProfilePropertiesResponseOutput) ToCloudServiceRoleProfilePropertiesResponseOutput() CloudServiceRoleProfilePropertiesResponseOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesResponseOutput) ToCloudServiceRoleProfilePropertiesResponseOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesResponseOutput {
	return o
}

// Resource name.
func (o CloudServiceRoleProfilePropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleProfilePropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes the cloud service role sku.
func (o CloudServiceRoleProfilePropertiesResponseOutput) Sku() CloudServiceRoleSkuResponsePtrOutput {
	return o.ApplyT(func(v CloudServiceRoleProfilePropertiesResponse) *CloudServiceRoleSkuResponse { return v.Sku }).(CloudServiceRoleSkuResponsePtrOutput)
}

type CloudServiceRoleProfilePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfilePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceRoleProfilePropertiesResponse)(nil)).Elem()
}

func (o CloudServiceRoleProfilePropertiesResponseArrayOutput) ToCloudServiceRoleProfilePropertiesResponseArrayOutput() CloudServiceRoleProfilePropertiesResponseArrayOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesResponseArrayOutput) ToCloudServiceRoleProfilePropertiesResponseArrayOutputWithContext(ctx context.Context) CloudServiceRoleProfilePropertiesResponseArrayOutput {
	return o
}

func (o CloudServiceRoleProfilePropertiesResponseArrayOutput) Index(i pulumi.IntInput) CloudServiceRoleProfilePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceRoleProfilePropertiesResponse {
		return vs[0].([]CloudServiceRoleProfilePropertiesResponse)[vs[1].(int)]
	}).(CloudServiceRoleProfilePropertiesResponseOutput)
}

// Describes the role profile for the cloud service.
type CloudServiceRoleProfileResponse struct {
	// List of roles for the cloud service.
	Roles []CloudServiceRoleProfilePropertiesResponse `pulumi:"roles"`
}

// Describes the role profile for the cloud service.
type CloudServiceRoleProfileResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleProfileResponse)(nil)).Elem()
}

func (o CloudServiceRoleProfileResponseOutput) ToCloudServiceRoleProfileResponseOutput() CloudServiceRoleProfileResponseOutput {
	return o
}

func (o CloudServiceRoleProfileResponseOutput) ToCloudServiceRoleProfileResponseOutputWithContext(ctx context.Context) CloudServiceRoleProfileResponseOutput {
	return o
}

// List of roles for the cloud service.
func (o CloudServiceRoleProfileResponseOutput) Roles() CloudServiceRoleProfilePropertiesResponseArrayOutput {
	return o.ApplyT(func(v CloudServiceRoleProfileResponse) []CloudServiceRoleProfilePropertiesResponse { return v.Roles }).(CloudServiceRoleProfilePropertiesResponseArrayOutput)
}

type CloudServiceRoleProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleProfileResponse)(nil)).Elem()
}

func (o CloudServiceRoleProfileResponsePtrOutput) ToCloudServiceRoleProfileResponsePtrOutput() CloudServiceRoleProfileResponsePtrOutput {
	return o
}

func (o CloudServiceRoleProfileResponsePtrOutput) ToCloudServiceRoleProfileResponsePtrOutputWithContext(ctx context.Context) CloudServiceRoleProfileResponsePtrOutput {
	return o
}

func (o CloudServiceRoleProfileResponsePtrOutput) Elem() CloudServiceRoleProfileResponseOutput {
	return o.ApplyT(func(v *CloudServiceRoleProfileResponse) CloudServiceRoleProfileResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceRoleProfileResponse
		return ret
	}).(CloudServiceRoleProfileResponseOutput)
}

// List of roles for the cloud service.
func (o CloudServiceRoleProfileResponsePtrOutput) Roles() CloudServiceRoleProfilePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *CloudServiceRoleProfileResponse) []CloudServiceRoleProfilePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(CloudServiceRoleProfilePropertiesResponseArrayOutput)
}

// Describes the cloud service role sku.
type CloudServiceRoleSku struct {
	// Specifies the number of role instances in the cloud service.
	Capacity *float64 `pulumi:"capacity"`
	// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
	Name *string `pulumi:"name"`
	// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
	Tier *string `pulumi:"tier"`
}

// CloudServiceRoleSkuInput is an input type that accepts CloudServiceRoleSkuArgs and CloudServiceRoleSkuOutput values.
// You can construct a concrete instance of `CloudServiceRoleSkuInput` via:
//
//	CloudServiceRoleSkuArgs{...}
type CloudServiceRoleSkuInput interface {
	pulumi.Input

	ToCloudServiceRoleSkuOutput() CloudServiceRoleSkuOutput
	ToCloudServiceRoleSkuOutputWithContext(context.Context) CloudServiceRoleSkuOutput
}

// Describes the cloud service role sku.
type CloudServiceRoleSkuArgs struct {
	// Specifies the number of role instances in the cloud service.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (CloudServiceRoleSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleSku)(nil)).Elem()
}

func (i CloudServiceRoleSkuArgs) ToCloudServiceRoleSkuOutput() CloudServiceRoleSkuOutput {
	return i.ToCloudServiceRoleSkuOutputWithContext(context.Background())
}

func (i CloudServiceRoleSkuArgs) ToCloudServiceRoleSkuOutputWithContext(ctx context.Context) CloudServiceRoleSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleSkuOutput)
}

func (i CloudServiceRoleSkuArgs) ToCloudServiceRoleSkuPtrOutput() CloudServiceRoleSkuPtrOutput {
	return i.ToCloudServiceRoleSkuPtrOutputWithContext(context.Background())
}

func (i CloudServiceRoleSkuArgs) ToCloudServiceRoleSkuPtrOutputWithContext(ctx context.Context) CloudServiceRoleSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleSkuOutput).ToCloudServiceRoleSkuPtrOutputWithContext(ctx)
}

// CloudServiceRoleSkuPtrInput is an input type that accepts CloudServiceRoleSkuArgs, CloudServiceRoleSkuPtr and CloudServiceRoleSkuPtrOutput values.
// You can construct a concrete instance of `CloudServiceRoleSkuPtrInput` via:
//
//	        CloudServiceRoleSkuArgs{...}
//
//	or:
//
//	        nil
type CloudServiceRoleSkuPtrInput interface {
	pulumi.Input

	ToCloudServiceRoleSkuPtrOutput() CloudServiceRoleSkuPtrOutput
	ToCloudServiceRoleSkuPtrOutputWithContext(context.Context) CloudServiceRoleSkuPtrOutput
}

type cloudServiceRoleSkuPtrType CloudServiceRoleSkuArgs

func CloudServiceRoleSkuPtr(v *CloudServiceRoleSkuArgs) CloudServiceRoleSkuPtrInput {
	return (*cloudServiceRoleSkuPtrType)(v)
}

func (*cloudServiceRoleSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleSku)(nil)).Elem()
}

func (i *cloudServiceRoleSkuPtrType) ToCloudServiceRoleSkuPtrOutput() CloudServiceRoleSkuPtrOutput {
	return i.ToCloudServiceRoleSkuPtrOutputWithContext(context.Background())
}

func (i *cloudServiceRoleSkuPtrType) ToCloudServiceRoleSkuPtrOutputWithContext(ctx context.Context) CloudServiceRoleSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceRoleSkuPtrOutput)
}

// Describes the cloud service role sku.
type CloudServiceRoleSkuOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleSku)(nil)).Elem()
}

func (o CloudServiceRoleSkuOutput) ToCloudServiceRoleSkuOutput() CloudServiceRoleSkuOutput {
	return o
}

func (o CloudServiceRoleSkuOutput) ToCloudServiceRoleSkuOutputWithContext(ctx context.Context) CloudServiceRoleSkuOutput {
	return o
}

func (o CloudServiceRoleSkuOutput) ToCloudServiceRoleSkuPtrOutput() CloudServiceRoleSkuPtrOutput {
	return o.ToCloudServiceRoleSkuPtrOutputWithContext(context.Background())
}

func (o CloudServiceRoleSkuOutput) ToCloudServiceRoleSkuPtrOutputWithContext(ctx context.Context) CloudServiceRoleSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceRoleSku) *CloudServiceRoleSku {
		return &v
	}).(CloudServiceRoleSkuPtrOutput)
}

// Specifies the number of role instances in the cloud service.
func (o CloudServiceRoleSkuOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSku) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
func (o CloudServiceRoleSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
func (o CloudServiceRoleSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type CloudServiceRoleSkuPtrOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleSku)(nil)).Elem()
}

func (o CloudServiceRoleSkuPtrOutput) ToCloudServiceRoleSkuPtrOutput() CloudServiceRoleSkuPtrOutput {
	return o
}

func (o CloudServiceRoleSkuPtrOutput) ToCloudServiceRoleSkuPtrOutputWithContext(ctx context.Context) CloudServiceRoleSkuPtrOutput {
	return o
}

func (o CloudServiceRoleSkuPtrOutput) Elem() CloudServiceRoleSkuOutput {
	return o.ApplyT(func(v *CloudServiceRoleSku) CloudServiceRoleSku {
		if v != nil {
			return *v
		}
		var ret CloudServiceRoleSku
		return ret
	}).(CloudServiceRoleSkuOutput)
}

// Specifies the number of role instances in the cloud service.
func (o CloudServiceRoleSkuPtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSku) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
func (o CloudServiceRoleSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
func (o CloudServiceRoleSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Describes the cloud service role sku.
type CloudServiceRoleSkuResponse struct {
	// Specifies the number of role instances in the cloud service.
	Capacity *float64 `pulumi:"capacity"`
	// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
	Name *string `pulumi:"name"`
	// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
	Tier *string `pulumi:"tier"`
}

// Describes the cloud service role sku.
type CloudServiceRoleSkuResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceRoleSkuResponse)(nil)).Elem()
}

func (o CloudServiceRoleSkuResponseOutput) ToCloudServiceRoleSkuResponseOutput() CloudServiceRoleSkuResponseOutput {
	return o
}

func (o CloudServiceRoleSkuResponseOutput) ToCloudServiceRoleSkuResponseOutputWithContext(ctx context.Context) CloudServiceRoleSkuResponseOutput {
	return o
}

// Specifies the number of role instances in the cloud service.
func (o CloudServiceRoleSkuResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSkuResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
func (o CloudServiceRoleSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
func (o CloudServiceRoleSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceRoleSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type CloudServiceRoleSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceRoleSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceRoleSkuResponse)(nil)).Elem()
}

func (o CloudServiceRoleSkuResponsePtrOutput) ToCloudServiceRoleSkuResponsePtrOutput() CloudServiceRoleSkuResponsePtrOutput {
	return o
}

func (o CloudServiceRoleSkuResponsePtrOutput) ToCloudServiceRoleSkuResponsePtrOutputWithContext(ctx context.Context) CloudServiceRoleSkuResponsePtrOutput {
	return o
}

func (o CloudServiceRoleSkuResponsePtrOutput) Elem() CloudServiceRoleSkuResponseOutput {
	return o.ApplyT(func(v *CloudServiceRoleSkuResponse) CloudServiceRoleSkuResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceRoleSkuResponse
		return ret
	}).(CloudServiceRoleSkuResponseOutput)
}

// Specifies the number of role instances in the cloud service.
func (o CloudServiceRoleSkuResponsePtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSkuResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.
func (o CloudServiceRoleSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
func (o CloudServiceRoleSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceRoleSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
type CloudServiceVaultAndSecretReference struct {
	// Secret URL which contains the protected settings of the extension
	SecretUrl *string `pulumi:"secretUrl"`
	// The ARM Resource ID of the Key Vault
	SourceVault *SubResource `pulumi:"sourceVault"`
}

// CloudServiceVaultAndSecretReferenceInput is an input type that accepts CloudServiceVaultAndSecretReferenceArgs and CloudServiceVaultAndSecretReferenceOutput values.
// You can construct a concrete instance of `CloudServiceVaultAndSecretReferenceInput` via:
//
//	CloudServiceVaultAndSecretReferenceArgs{...}
type CloudServiceVaultAndSecretReferenceInput interface {
	pulumi.Input

	ToCloudServiceVaultAndSecretReferenceOutput() CloudServiceVaultAndSecretReferenceOutput
	ToCloudServiceVaultAndSecretReferenceOutputWithContext(context.Context) CloudServiceVaultAndSecretReferenceOutput
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
type CloudServiceVaultAndSecretReferenceArgs struct {
	// Secret URL which contains the protected settings of the extension
	SecretUrl pulumi.StringPtrInput `pulumi:"secretUrl"`
	// The ARM Resource ID of the Key Vault
	SourceVault SubResourcePtrInput `pulumi:"sourceVault"`
}

func (CloudServiceVaultAndSecretReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultAndSecretReference)(nil)).Elem()
}

func (i CloudServiceVaultAndSecretReferenceArgs) ToCloudServiceVaultAndSecretReferenceOutput() CloudServiceVaultAndSecretReferenceOutput {
	return i.ToCloudServiceVaultAndSecretReferenceOutputWithContext(context.Background())
}

func (i CloudServiceVaultAndSecretReferenceArgs) ToCloudServiceVaultAndSecretReferenceOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultAndSecretReferenceOutput)
}

func (i CloudServiceVaultAndSecretReferenceArgs) ToCloudServiceVaultAndSecretReferencePtrOutput() CloudServiceVaultAndSecretReferencePtrOutput {
	return i.ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(context.Background())
}

func (i CloudServiceVaultAndSecretReferenceArgs) ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultAndSecretReferenceOutput).ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(ctx)
}

// CloudServiceVaultAndSecretReferencePtrInput is an input type that accepts CloudServiceVaultAndSecretReferenceArgs, CloudServiceVaultAndSecretReferencePtr and CloudServiceVaultAndSecretReferencePtrOutput values.
// You can construct a concrete instance of `CloudServiceVaultAndSecretReferencePtrInput` via:
//
//	        CloudServiceVaultAndSecretReferenceArgs{...}
//
//	or:
//
//	        nil
type CloudServiceVaultAndSecretReferencePtrInput interface {
	pulumi.Input

	ToCloudServiceVaultAndSecretReferencePtrOutput() CloudServiceVaultAndSecretReferencePtrOutput
	ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(context.Context) CloudServiceVaultAndSecretReferencePtrOutput
}

type cloudServiceVaultAndSecretReferencePtrType CloudServiceVaultAndSecretReferenceArgs

func CloudServiceVaultAndSecretReferencePtr(v *CloudServiceVaultAndSecretReferenceArgs) CloudServiceVaultAndSecretReferencePtrInput {
	return (*cloudServiceVaultAndSecretReferencePtrType)(v)
}

func (*cloudServiceVaultAndSecretReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceVaultAndSecretReference)(nil)).Elem()
}

func (i *cloudServiceVaultAndSecretReferencePtrType) ToCloudServiceVaultAndSecretReferencePtrOutput() CloudServiceVaultAndSecretReferencePtrOutput {
	return i.ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(context.Background())
}

func (i *cloudServiceVaultAndSecretReferencePtrType) ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultAndSecretReferencePtrOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
type CloudServiceVaultAndSecretReferenceOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultAndSecretReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultAndSecretReference)(nil)).Elem()
}

func (o CloudServiceVaultAndSecretReferenceOutput) ToCloudServiceVaultAndSecretReferenceOutput() CloudServiceVaultAndSecretReferenceOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferenceOutput) ToCloudServiceVaultAndSecretReferenceOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferenceOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferenceOutput) ToCloudServiceVaultAndSecretReferencePtrOutput() CloudServiceVaultAndSecretReferencePtrOutput {
	return o.ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(context.Background())
}

func (o CloudServiceVaultAndSecretReferenceOutput) ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServiceVaultAndSecretReference) *CloudServiceVaultAndSecretReference {
		return &v
	}).(CloudServiceVaultAndSecretReferencePtrOutput)
}

// Secret URL which contains the protected settings of the extension
func (o CloudServiceVaultAndSecretReferenceOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceVaultAndSecretReference) *string { return v.SecretUrl }).(pulumi.StringPtrOutput)
}

// The ARM Resource ID of the Key Vault
func (o CloudServiceVaultAndSecretReferenceOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v CloudServiceVaultAndSecretReference) *SubResource { return v.SourceVault }).(SubResourcePtrOutput)
}

type CloudServiceVaultAndSecretReferencePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultAndSecretReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceVaultAndSecretReference)(nil)).Elem()
}

func (o CloudServiceVaultAndSecretReferencePtrOutput) ToCloudServiceVaultAndSecretReferencePtrOutput() CloudServiceVaultAndSecretReferencePtrOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferencePtrOutput) ToCloudServiceVaultAndSecretReferencePtrOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferencePtrOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferencePtrOutput) Elem() CloudServiceVaultAndSecretReferenceOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReference) CloudServiceVaultAndSecretReference {
		if v != nil {
			return *v
		}
		var ret CloudServiceVaultAndSecretReference
		return ret
	}).(CloudServiceVaultAndSecretReferenceOutput)
}

// Secret URL which contains the protected settings of the extension
func (o CloudServiceVaultAndSecretReferencePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReference) *string {
		if v == nil {
			return nil
		}
		return v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The ARM Resource ID of the Key Vault
func (o CloudServiceVaultAndSecretReferencePtrOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReference) *SubResource {
		if v == nil {
			return nil
		}
		return v.SourceVault
	}).(SubResourcePtrOutput)
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
type CloudServiceVaultAndSecretReferenceResponse struct {
	// Secret URL which contains the protected settings of the extension
	SecretUrl *string `pulumi:"secretUrl"`
	// The ARM Resource ID of the Key Vault
	SourceVault *SubResourceResponse `pulumi:"sourceVault"`
}

// Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
type CloudServiceVaultAndSecretReferenceResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultAndSecretReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultAndSecretReferenceResponse)(nil)).Elem()
}

func (o CloudServiceVaultAndSecretReferenceResponseOutput) ToCloudServiceVaultAndSecretReferenceResponseOutput() CloudServiceVaultAndSecretReferenceResponseOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferenceResponseOutput) ToCloudServiceVaultAndSecretReferenceResponseOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferenceResponseOutput {
	return o
}

// Secret URL which contains the protected settings of the extension
func (o CloudServiceVaultAndSecretReferenceResponseOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceVaultAndSecretReferenceResponse) *string { return v.SecretUrl }).(pulumi.StringPtrOutput)
}

// The ARM Resource ID of the Key Vault
func (o CloudServiceVaultAndSecretReferenceResponseOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v CloudServiceVaultAndSecretReferenceResponse) *SubResourceResponse { return v.SourceVault }).(SubResourceResponsePtrOutput)
}

type CloudServiceVaultAndSecretReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultAndSecretReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServiceVaultAndSecretReferenceResponse)(nil)).Elem()
}

func (o CloudServiceVaultAndSecretReferenceResponsePtrOutput) ToCloudServiceVaultAndSecretReferenceResponsePtrOutput() CloudServiceVaultAndSecretReferenceResponsePtrOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferenceResponsePtrOutput) ToCloudServiceVaultAndSecretReferenceResponsePtrOutputWithContext(ctx context.Context) CloudServiceVaultAndSecretReferenceResponsePtrOutput {
	return o
}

func (o CloudServiceVaultAndSecretReferenceResponsePtrOutput) Elem() CloudServiceVaultAndSecretReferenceResponseOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReferenceResponse) CloudServiceVaultAndSecretReferenceResponse {
		if v != nil {
			return *v
		}
		var ret CloudServiceVaultAndSecretReferenceResponse
		return ret
	}).(CloudServiceVaultAndSecretReferenceResponseOutput)
}

// Secret URL which contains the protected settings of the extension
func (o CloudServiceVaultAndSecretReferenceResponsePtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The ARM Resource ID of the Key Vault
func (o CloudServiceVaultAndSecretReferenceResponsePtrOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *CloudServiceVaultAndSecretReferenceResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.SourceVault
	}).(SubResourceResponsePtrOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
type CloudServiceVaultCertificate struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret.
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// CloudServiceVaultCertificateInput is an input type that accepts CloudServiceVaultCertificateArgs and CloudServiceVaultCertificateOutput values.
// You can construct a concrete instance of `CloudServiceVaultCertificateInput` via:
//
//	CloudServiceVaultCertificateArgs{...}
type CloudServiceVaultCertificateInput interface {
	pulumi.Input

	ToCloudServiceVaultCertificateOutput() CloudServiceVaultCertificateOutput
	ToCloudServiceVaultCertificateOutputWithContext(context.Context) CloudServiceVaultCertificateOutput
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
type CloudServiceVaultCertificateArgs struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret.
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
}

func (CloudServiceVaultCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultCertificate)(nil)).Elem()
}

func (i CloudServiceVaultCertificateArgs) ToCloudServiceVaultCertificateOutput() CloudServiceVaultCertificateOutput {
	return i.ToCloudServiceVaultCertificateOutputWithContext(context.Background())
}

func (i CloudServiceVaultCertificateArgs) ToCloudServiceVaultCertificateOutputWithContext(ctx context.Context) CloudServiceVaultCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultCertificateOutput)
}

// CloudServiceVaultCertificateArrayInput is an input type that accepts CloudServiceVaultCertificateArray and CloudServiceVaultCertificateArrayOutput values.
// You can construct a concrete instance of `CloudServiceVaultCertificateArrayInput` via:
//
//	CloudServiceVaultCertificateArray{ CloudServiceVaultCertificateArgs{...} }
type CloudServiceVaultCertificateArrayInput interface {
	pulumi.Input

	ToCloudServiceVaultCertificateArrayOutput() CloudServiceVaultCertificateArrayOutput
	ToCloudServiceVaultCertificateArrayOutputWithContext(context.Context) CloudServiceVaultCertificateArrayOutput
}

type CloudServiceVaultCertificateArray []CloudServiceVaultCertificateInput

func (CloudServiceVaultCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultCertificate)(nil)).Elem()
}

func (i CloudServiceVaultCertificateArray) ToCloudServiceVaultCertificateArrayOutput() CloudServiceVaultCertificateArrayOutput {
	return i.ToCloudServiceVaultCertificateArrayOutputWithContext(context.Background())
}

func (i CloudServiceVaultCertificateArray) ToCloudServiceVaultCertificateArrayOutputWithContext(ctx context.Context) CloudServiceVaultCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultCertificateArrayOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
type CloudServiceVaultCertificateOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultCertificate)(nil)).Elem()
}

func (o CloudServiceVaultCertificateOutput) ToCloudServiceVaultCertificateOutput() CloudServiceVaultCertificateOutput {
	return o
}

func (o CloudServiceVaultCertificateOutput) ToCloudServiceVaultCertificateOutputWithContext(ctx context.Context) CloudServiceVaultCertificateOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret.
func (o CloudServiceVaultCertificateOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceVaultCertificate) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type CloudServiceVaultCertificateArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultCertificate)(nil)).Elem()
}

func (o CloudServiceVaultCertificateArrayOutput) ToCloudServiceVaultCertificateArrayOutput() CloudServiceVaultCertificateArrayOutput {
	return o
}

func (o CloudServiceVaultCertificateArrayOutput) ToCloudServiceVaultCertificateArrayOutputWithContext(ctx context.Context) CloudServiceVaultCertificateArrayOutput {
	return o
}

func (o CloudServiceVaultCertificateArrayOutput) Index(i pulumi.IntInput) CloudServiceVaultCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceVaultCertificate {
		return vs[0].([]CloudServiceVaultCertificate)[vs[1].(int)]
	}).(CloudServiceVaultCertificateOutput)
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
type CloudServiceVaultCertificateResponse struct {
	// This is the URL of a certificate that has been uploaded to Key Vault as a secret.
	CertificateUrl *string `pulumi:"certificateUrl"`
}

// Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
type CloudServiceVaultCertificateResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultCertificateResponse)(nil)).Elem()
}

func (o CloudServiceVaultCertificateResponseOutput) ToCloudServiceVaultCertificateResponseOutput() CloudServiceVaultCertificateResponseOutput {
	return o
}

func (o CloudServiceVaultCertificateResponseOutput) ToCloudServiceVaultCertificateResponseOutputWithContext(ctx context.Context) CloudServiceVaultCertificateResponseOutput {
	return o
}

// This is the URL of a certificate that has been uploaded to Key Vault as a secret.
func (o CloudServiceVaultCertificateResponseOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServiceVaultCertificateResponse) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

type CloudServiceVaultCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultCertificateResponse)(nil)).Elem()
}

func (o CloudServiceVaultCertificateResponseArrayOutput) ToCloudServiceVaultCertificateResponseArrayOutput() CloudServiceVaultCertificateResponseArrayOutput {
	return o
}

func (o CloudServiceVaultCertificateResponseArrayOutput) ToCloudServiceVaultCertificateResponseArrayOutputWithContext(ctx context.Context) CloudServiceVaultCertificateResponseArrayOutput {
	return o
}

func (o CloudServiceVaultCertificateResponseArrayOutput) Index(i pulumi.IntInput) CloudServiceVaultCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceVaultCertificateResponse {
		return vs[0].([]CloudServiceVaultCertificateResponse)[vs[1].(int)]
	}).(CloudServiceVaultCertificateResponseOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type CloudServiceVaultSecretGroup struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault *SubResource `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []CloudServiceVaultCertificate `pulumi:"vaultCertificates"`
}

// CloudServiceVaultSecretGroupInput is an input type that accepts CloudServiceVaultSecretGroupArgs and CloudServiceVaultSecretGroupOutput values.
// You can construct a concrete instance of `CloudServiceVaultSecretGroupInput` via:
//
//	CloudServiceVaultSecretGroupArgs{...}
type CloudServiceVaultSecretGroupInput interface {
	pulumi.Input

	ToCloudServiceVaultSecretGroupOutput() CloudServiceVaultSecretGroupOutput
	ToCloudServiceVaultSecretGroupOutputWithContext(context.Context) CloudServiceVaultSecretGroupOutput
}

// Describes a set of certificates which are all in the same Key Vault.
type CloudServiceVaultSecretGroupArgs struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault SubResourcePtrInput `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates CloudServiceVaultCertificateArrayInput `pulumi:"vaultCertificates"`
}

func (CloudServiceVaultSecretGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultSecretGroup)(nil)).Elem()
}

func (i CloudServiceVaultSecretGroupArgs) ToCloudServiceVaultSecretGroupOutput() CloudServiceVaultSecretGroupOutput {
	return i.ToCloudServiceVaultSecretGroupOutputWithContext(context.Background())
}

func (i CloudServiceVaultSecretGroupArgs) ToCloudServiceVaultSecretGroupOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultSecretGroupOutput)
}

// CloudServiceVaultSecretGroupArrayInput is an input type that accepts CloudServiceVaultSecretGroupArray and CloudServiceVaultSecretGroupArrayOutput values.
// You can construct a concrete instance of `CloudServiceVaultSecretGroupArrayInput` via:
//
//	CloudServiceVaultSecretGroupArray{ CloudServiceVaultSecretGroupArgs{...} }
type CloudServiceVaultSecretGroupArrayInput interface {
	pulumi.Input

	ToCloudServiceVaultSecretGroupArrayOutput() CloudServiceVaultSecretGroupArrayOutput
	ToCloudServiceVaultSecretGroupArrayOutputWithContext(context.Context) CloudServiceVaultSecretGroupArrayOutput
}

type CloudServiceVaultSecretGroupArray []CloudServiceVaultSecretGroupInput

func (CloudServiceVaultSecretGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultSecretGroup)(nil)).Elem()
}

func (i CloudServiceVaultSecretGroupArray) ToCloudServiceVaultSecretGroupArrayOutput() CloudServiceVaultSecretGroupArrayOutput {
	return i.ToCloudServiceVaultSecretGroupArrayOutputWithContext(context.Background())
}

func (i CloudServiceVaultSecretGroupArray) ToCloudServiceVaultSecretGroupArrayOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServiceVaultSecretGroupArrayOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type CloudServiceVaultSecretGroupOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultSecretGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultSecretGroup)(nil)).Elem()
}

func (o CloudServiceVaultSecretGroupOutput) ToCloudServiceVaultSecretGroupOutput() CloudServiceVaultSecretGroupOutput {
	return o
}

func (o CloudServiceVaultSecretGroupOutput) ToCloudServiceVaultSecretGroupOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
func (o CloudServiceVaultSecretGroupOutput) SourceVault() SubResourcePtrOutput {
	return o.ApplyT(func(v CloudServiceVaultSecretGroup) *SubResource { return v.SourceVault }).(SubResourcePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o CloudServiceVaultSecretGroupOutput) VaultCertificates() CloudServiceVaultCertificateArrayOutput {
	return o.ApplyT(func(v CloudServiceVaultSecretGroup) []CloudServiceVaultCertificate { return v.VaultCertificates }).(CloudServiceVaultCertificateArrayOutput)
}

type CloudServiceVaultSecretGroupArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultSecretGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultSecretGroup)(nil)).Elem()
}

func (o CloudServiceVaultSecretGroupArrayOutput) ToCloudServiceVaultSecretGroupArrayOutput() CloudServiceVaultSecretGroupArrayOutput {
	return o
}

func (o CloudServiceVaultSecretGroupArrayOutput) ToCloudServiceVaultSecretGroupArrayOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupArrayOutput {
	return o
}

func (o CloudServiceVaultSecretGroupArrayOutput) Index(i pulumi.IntInput) CloudServiceVaultSecretGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceVaultSecretGroup {
		return vs[0].([]CloudServiceVaultSecretGroup)[vs[1].(int)]
	}).(CloudServiceVaultSecretGroupOutput)
}

// Describes a set of certificates which are all in the same Key Vault.
type CloudServiceVaultSecretGroupResponse struct {
	// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
	SourceVault *SubResourceResponse `pulumi:"sourceVault"`
	// The list of key vault references in SourceVault which contain certificates.
	VaultCertificates []CloudServiceVaultCertificateResponse `pulumi:"vaultCertificates"`
}

// Describes a set of certificates which are all in the same Key Vault.
type CloudServiceVaultSecretGroupResponseOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultSecretGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServiceVaultSecretGroupResponse)(nil)).Elem()
}

func (o CloudServiceVaultSecretGroupResponseOutput) ToCloudServiceVaultSecretGroupResponseOutput() CloudServiceVaultSecretGroupResponseOutput {
	return o
}

func (o CloudServiceVaultSecretGroupResponseOutput) ToCloudServiceVaultSecretGroupResponseOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupResponseOutput {
	return o
}

// The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
func (o CloudServiceVaultSecretGroupResponseOutput) SourceVault() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v CloudServiceVaultSecretGroupResponse) *SubResourceResponse { return v.SourceVault }).(SubResourceResponsePtrOutput)
}

// The list of key vault references in SourceVault which contain certificates.
func (o CloudServiceVaultSecretGroupResponseOutput) VaultCertificates() CloudServiceVaultCertificateResponseArrayOutput {
	return o.ApplyT(func(v CloudServiceVaultSecretGroupResponse) []CloudServiceVaultCertificateResponse {
		return v.VaultCertificates
	}).(CloudServiceVaultCertificateResponseArrayOutput)
}

type CloudServiceVaultSecretGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudServiceVaultSecretGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServiceVaultSecretGroupResponse)(nil)).Elem()
}

func (o CloudServiceVaultSecretGroupResponseArrayOutput) ToCloudServiceVaultSecretGroupResponseArrayOutput() CloudServiceVaultSecretGroupResponseArrayOutput {
	return o
}

func (o CloudServiceVaultSecretGroupResponseArrayOutput) ToCloudServiceVaultSecretGroupResponseArrayOutputWithContext(ctx context.Context) CloudServiceVaultSecretGroupResponseArrayOutput {
	return o
}

func (o CloudServiceVaultSecretGroupResponseArrayOutput) Index(i pulumi.IntInput) CloudServiceVaultSecretGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServiceVaultSecretGroupResponse {
		return vs[0].([]CloudServiceVaultSecretGroupResponse)[vs[1].(int)]
	}).(CloudServiceVaultSecretGroupResponseOutput)
}

// Describes a cloud service Extension.
type Extension struct {
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Extension Properties.
	Properties *CloudServiceExtensionProperties `pulumi:"properties"`
}

// ExtensionInput is an input type that accepts ExtensionArgs and ExtensionOutput values.
// You can construct a concrete instance of `ExtensionInput` via:
//
//	ExtensionArgs{...}
type ExtensionInput interface {
	pulumi.Input

	ToExtensionOutput() ExtensionOutput
	ToExtensionOutputWithContext(context.Context) ExtensionOutput
}

// Describes a cloud service Extension.
type ExtensionArgs struct {
	// The name of the extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Extension Properties.
	Properties CloudServiceExtensionPropertiesPtrInput `pulumi:"properties"`
}

func (ExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Extension)(nil)).Elem()
}

func (i ExtensionArgs) ToExtensionOutput() ExtensionOutput {
	return i.ToExtensionOutputWithContext(context.Background())
}

func (i ExtensionArgs) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionOutput)
}

// ExtensionArrayInput is an input type that accepts ExtensionArray and ExtensionArrayOutput values.
// You can construct a concrete instance of `ExtensionArrayInput` via:
//
//	ExtensionArray{ ExtensionArgs{...} }
type ExtensionArrayInput interface {
	pulumi.Input

	ToExtensionArrayOutput() ExtensionArrayOutput
	ToExtensionArrayOutputWithContext(context.Context) ExtensionArrayOutput
}

type ExtensionArray []ExtensionInput

func (ExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Extension)(nil)).Elem()
}

func (i ExtensionArray) ToExtensionArrayOutput() ExtensionArrayOutput {
	return i.ToExtensionArrayOutputWithContext(context.Background())
}

func (i ExtensionArray) ToExtensionArrayOutputWithContext(ctx context.Context) ExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionArrayOutput)
}

// Describes a cloud service Extension.
type ExtensionOutput struct{ *pulumi.OutputState }

func (ExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Extension)(nil)).Elem()
}

func (o ExtensionOutput) ToExtensionOutput() ExtensionOutput {
	return o
}

func (o ExtensionOutput) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return o
}

// The name of the extension.
func (o ExtensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Extension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Extension Properties.
func (o ExtensionOutput) Properties() CloudServiceExtensionPropertiesPtrOutput {
	return o.ApplyT(func(v Extension) *CloudServiceExtensionProperties { return v.Properties }).(CloudServiceExtensionPropertiesPtrOutput)
}

type ExtensionArrayOutput struct{ *pulumi.OutputState }

func (ExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Extension)(nil)).Elem()
}

func (o ExtensionArrayOutput) ToExtensionArrayOutput() ExtensionArrayOutput {
	return o
}

func (o ExtensionArrayOutput) ToExtensionArrayOutputWithContext(ctx context.Context) ExtensionArrayOutput {
	return o
}

func (o ExtensionArrayOutput) Index(i pulumi.IntInput) ExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Extension {
		return vs[0].([]Extension)[vs[1].(int)]
	}).(ExtensionOutput)
}

// Describes a cloud service Extension.
type ExtensionResponse struct {
	// The name of the extension.
	Name *string `pulumi:"name"`
	// Extension Properties.
	Properties *CloudServiceExtensionPropertiesResponse `pulumi:"properties"`
}

// Describes a cloud service Extension.
type ExtensionResponseOutput struct{ *pulumi.OutputState }

func (ExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionResponse)(nil)).Elem()
}

func (o ExtensionResponseOutput) ToExtensionResponseOutput() ExtensionResponseOutput {
	return o
}

func (o ExtensionResponseOutput) ToExtensionResponseOutputWithContext(ctx context.Context) ExtensionResponseOutput {
	return o
}

// The name of the extension.
func (o ExtensionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Extension Properties.
func (o ExtensionResponseOutput) Properties() CloudServiceExtensionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExtensionResponse) *CloudServiceExtensionPropertiesResponse { return v.Properties }).(CloudServiceExtensionPropertiesResponsePtrOutput)
}

type ExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionResponse)(nil)).Elem()
}

func (o ExtensionResponseArrayOutput) ToExtensionResponseArrayOutput() ExtensionResponseArrayOutput {
	return o
}

func (o ExtensionResponseArrayOutput) ToExtensionResponseArrayOutputWithContext(ctx context.Context) ExtensionResponseArrayOutput {
	return o
}

func (o ExtensionResponseArrayOutput) Index(i pulumi.IntInput) ExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionResponse {
		return vs[0].([]ExtensionResponse)[vs[1].(int)]
	}).(ExtensionResponseOutput)
}

// Describes the load balancer configuration.
type LoadBalancerConfiguration struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// The name of the Load balancer
	Name string `pulumi:"name"`
	// Properties of the load balancer configuration.
	Properties LoadBalancerConfigurationProperties `pulumi:"properties"`
}

// LoadBalancerConfigurationInput is an input type that accepts LoadBalancerConfigurationArgs and LoadBalancerConfigurationOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationInput` via:
//
//	LoadBalancerConfigurationArgs{...}
type LoadBalancerConfigurationInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput
	ToLoadBalancerConfigurationOutputWithContext(context.Context) LoadBalancerConfigurationOutput
}

// Describes the load balancer configuration.
type LoadBalancerConfigurationArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Load balancer
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the load balancer configuration.
	Properties LoadBalancerConfigurationPropertiesInput `pulumi:"properties"`
}

func (LoadBalancerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfiguration)(nil)).Elem()
}

func (i LoadBalancerConfigurationArgs) ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput {
	return i.ToLoadBalancerConfigurationOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationArgs) ToLoadBalancerConfigurationOutputWithContext(ctx context.Context) LoadBalancerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationOutput)
}

// LoadBalancerConfigurationArrayInput is an input type that accepts LoadBalancerConfigurationArray and LoadBalancerConfigurationArrayOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationArrayInput` via:
//
//	LoadBalancerConfigurationArray{ LoadBalancerConfigurationArgs{...} }
type LoadBalancerConfigurationArrayInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput
	ToLoadBalancerConfigurationArrayOutputWithContext(context.Context) LoadBalancerConfigurationArrayOutput
}

type LoadBalancerConfigurationArray []LoadBalancerConfigurationInput

func (LoadBalancerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfiguration)(nil)).Elem()
}

func (i LoadBalancerConfigurationArray) ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput {
	return i.ToLoadBalancerConfigurationArrayOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationArray) ToLoadBalancerConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationArrayOutput)
}

// Describes the load balancer configuration.
type LoadBalancerConfigurationOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfiguration)(nil)).Elem()
}

func (o LoadBalancerConfigurationOutput) ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput {
	return o
}

func (o LoadBalancerConfigurationOutput) ToLoadBalancerConfigurationOutputWithContext(ctx context.Context) LoadBalancerConfigurationOutput {
	return o
}

// Resource Id
func (o LoadBalancerConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Load balancer
func (o LoadBalancerConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the load balancer configuration.
func (o LoadBalancerConfigurationOutput) Properties() LoadBalancerConfigurationPropertiesOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) LoadBalancerConfigurationProperties { return v.Properties }).(LoadBalancerConfigurationPropertiesOutput)
}

type LoadBalancerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfiguration)(nil)).Elem()
}

func (o LoadBalancerConfigurationArrayOutput) ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput {
	return o
}

func (o LoadBalancerConfigurationArrayOutput) ToLoadBalancerConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationArrayOutput {
	return o
}

func (o LoadBalancerConfigurationArrayOutput) Index(i pulumi.IntInput) LoadBalancerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerConfiguration {
		return vs[0].([]LoadBalancerConfiguration)[vs[1].(int)]
	}).(LoadBalancerConfigurationOutput)
}

// Describes the properties of the load balancer configuration.
type LoadBalancerConfigurationProperties struct {
	// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
	FrontendIPConfigurations []LoadBalancerFrontendIPConfiguration `pulumi:"frontendIPConfigurations"`
}

// LoadBalancerConfigurationPropertiesInput is an input type that accepts LoadBalancerConfigurationPropertiesArgs and LoadBalancerConfigurationPropertiesOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationPropertiesInput` via:
//
//	LoadBalancerConfigurationPropertiesArgs{...}
type LoadBalancerConfigurationPropertiesInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationPropertiesOutput() LoadBalancerConfigurationPropertiesOutput
	ToLoadBalancerConfigurationPropertiesOutputWithContext(context.Context) LoadBalancerConfigurationPropertiesOutput
}

// Describes the properties of the load balancer configuration.
type LoadBalancerConfigurationPropertiesArgs struct {
	// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
	FrontendIPConfigurations LoadBalancerFrontendIPConfigurationArrayInput `pulumi:"frontendIPConfigurations"`
}

func (LoadBalancerConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationProperties)(nil)).Elem()
}

func (i LoadBalancerConfigurationPropertiesArgs) ToLoadBalancerConfigurationPropertiesOutput() LoadBalancerConfigurationPropertiesOutput {
	return i.ToLoadBalancerConfigurationPropertiesOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationPropertiesArgs) ToLoadBalancerConfigurationPropertiesOutputWithContext(ctx context.Context) LoadBalancerConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationPropertiesOutput)
}

// Describes the properties of the load balancer configuration.
type LoadBalancerConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationProperties)(nil)).Elem()
}

func (o LoadBalancerConfigurationPropertiesOutput) ToLoadBalancerConfigurationPropertiesOutput() LoadBalancerConfigurationPropertiesOutput {
	return o
}

func (o LoadBalancerConfigurationPropertiesOutput) ToLoadBalancerConfigurationPropertiesOutputWithContext(ctx context.Context) LoadBalancerConfigurationPropertiesOutput {
	return o
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
func (o LoadBalancerConfigurationPropertiesOutput) FrontendIPConfigurations() LoadBalancerFrontendIPConfigurationArrayOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationProperties) []LoadBalancerFrontendIPConfiguration {
		return v.FrontendIPConfigurations
	}).(LoadBalancerFrontendIPConfigurationArrayOutput)
}

// Describes the properties of the load balancer configuration.
type LoadBalancerConfigurationPropertiesResponse struct {
	// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
	FrontendIPConfigurations []LoadBalancerFrontendIPConfigurationResponse `pulumi:"frontendIPConfigurations"`
}

// Describes the properties of the load balancer configuration.
type LoadBalancerConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationPropertiesResponse)(nil)).Elem()
}

func (o LoadBalancerConfigurationPropertiesResponseOutput) ToLoadBalancerConfigurationPropertiesResponseOutput() LoadBalancerConfigurationPropertiesResponseOutput {
	return o
}

func (o LoadBalancerConfigurationPropertiesResponseOutput) ToLoadBalancerConfigurationPropertiesResponseOutputWithContext(ctx context.Context) LoadBalancerConfigurationPropertiesResponseOutput {
	return o
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
func (o LoadBalancerConfigurationPropertiesResponseOutput) FrontendIPConfigurations() LoadBalancerFrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationPropertiesResponse) []LoadBalancerFrontendIPConfigurationResponse {
		return v.FrontendIPConfigurations
	}).(LoadBalancerFrontendIPConfigurationResponseArrayOutput)
}

// Describes the load balancer configuration.
type LoadBalancerConfigurationResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
	// The name of the Load balancer
	Name string `pulumi:"name"`
	// Properties of the load balancer configuration.
	Properties LoadBalancerConfigurationPropertiesResponse `pulumi:"properties"`
}

// Describes the load balancer configuration.
type LoadBalancerConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerConfigurationResponseOutput) ToLoadBalancerConfigurationResponseOutput() LoadBalancerConfigurationResponseOutput {
	return o
}

func (o LoadBalancerConfigurationResponseOutput) ToLoadBalancerConfigurationResponseOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseOutput {
	return o
}

// Resource Id
func (o LoadBalancerConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Load balancer
func (o LoadBalancerConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the load balancer configuration.
func (o LoadBalancerConfigurationResponseOutput) Properties() LoadBalancerConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) LoadBalancerConfigurationPropertiesResponse {
		return v.Properties
	}).(LoadBalancerConfigurationPropertiesResponseOutput)
}

type LoadBalancerConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerConfigurationResponseArrayOutput) ToLoadBalancerConfigurationResponseArrayOutput() LoadBalancerConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerConfigurationResponseArrayOutput) ToLoadBalancerConfigurationResponseArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerConfigurationResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerConfigurationResponse {
		return vs[0].([]LoadBalancerConfigurationResponse)[vs[1].(int)]
	}).(LoadBalancerConfigurationResponseOutput)
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
type LoadBalancerFrontendIPConfiguration struct {
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name string `pulumi:"name"`
	// Properties of load balancer frontend ip configuration.
	Properties LoadBalancerFrontendIPConfigurationProperties `pulumi:"properties"`
}

// LoadBalancerFrontendIPConfigurationInput is an input type that accepts LoadBalancerFrontendIPConfigurationArgs and LoadBalancerFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `LoadBalancerFrontendIPConfigurationInput` via:
//
//	LoadBalancerFrontendIPConfigurationArgs{...}
type LoadBalancerFrontendIPConfigurationInput interface {
	pulumi.Input

	ToLoadBalancerFrontendIPConfigurationOutput() LoadBalancerFrontendIPConfigurationOutput
	ToLoadBalancerFrontendIPConfigurationOutputWithContext(context.Context) LoadBalancerFrontendIPConfigurationOutput
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
type LoadBalancerFrontendIPConfigurationArgs struct {
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of load balancer frontend ip configuration.
	Properties LoadBalancerFrontendIPConfigurationPropertiesInput `pulumi:"properties"`
}

func (LoadBalancerFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfiguration)(nil)).Elem()
}

func (i LoadBalancerFrontendIPConfigurationArgs) ToLoadBalancerFrontendIPConfigurationOutput() LoadBalancerFrontendIPConfigurationOutput {
	return i.ToLoadBalancerFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i LoadBalancerFrontendIPConfigurationArgs) ToLoadBalancerFrontendIPConfigurationOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerFrontendIPConfigurationOutput)
}

// LoadBalancerFrontendIPConfigurationArrayInput is an input type that accepts LoadBalancerFrontendIPConfigurationArray and LoadBalancerFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `LoadBalancerFrontendIPConfigurationArrayInput` via:
//
//	LoadBalancerFrontendIPConfigurationArray{ LoadBalancerFrontendIPConfigurationArgs{...} }
type LoadBalancerFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToLoadBalancerFrontendIPConfigurationArrayOutput() LoadBalancerFrontendIPConfigurationArrayOutput
	ToLoadBalancerFrontendIPConfigurationArrayOutputWithContext(context.Context) LoadBalancerFrontendIPConfigurationArrayOutput
}

type LoadBalancerFrontendIPConfigurationArray []LoadBalancerFrontendIPConfigurationInput

func (LoadBalancerFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerFrontendIPConfiguration)(nil)).Elem()
}

func (i LoadBalancerFrontendIPConfigurationArray) ToLoadBalancerFrontendIPConfigurationArrayOutput() LoadBalancerFrontendIPConfigurationArrayOutput {
	return i.ToLoadBalancerFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i LoadBalancerFrontendIPConfigurationArray) ToLoadBalancerFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerFrontendIPConfigurationArrayOutput)
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
type LoadBalancerFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfiguration)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationOutput) ToLoadBalancerFrontendIPConfigurationOutput() LoadBalancerFrontendIPConfigurationOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationOutput) ToLoadBalancerFrontendIPConfigurationOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationOutput {
	return o
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o LoadBalancerFrontendIPConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of load balancer frontend ip configuration.
func (o LoadBalancerFrontendIPConfigurationOutput) Properties() LoadBalancerFrontendIPConfigurationPropertiesOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfiguration) LoadBalancerFrontendIPConfigurationProperties {
		return v.Properties
	}).(LoadBalancerFrontendIPConfigurationPropertiesOutput)
}

type LoadBalancerFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerFrontendIPConfiguration)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationArrayOutput) ToLoadBalancerFrontendIPConfigurationArrayOutput() LoadBalancerFrontendIPConfigurationArrayOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationArrayOutput) ToLoadBalancerFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationArrayOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) LoadBalancerFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerFrontendIPConfiguration {
		return vs[0].([]LoadBalancerFrontendIPConfiguration)[vs[1].(int)]
	}).(LoadBalancerFrontendIPConfigurationOutput)
}

// Describes a cloud service IP Configuration
type LoadBalancerFrontendIPConfigurationProperties struct {
	// The virtual network private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The reference to the public ip address resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference to the virtual network subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// LoadBalancerFrontendIPConfigurationPropertiesInput is an input type that accepts LoadBalancerFrontendIPConfigurationPropertiesArgs and LoadBalancerFrontendIPConfigurationPropertiesOutput values.
// You can construct a concrete instance of `LoadBalancerFrontendIPConfigurationPropertiesInput` via:
//
//	LoadBalancerFrontendIPConfigurationPropertiesArgs{...}
type LoadBalancerFrontendIPConfigurationPropertiesInput interface {
	pulumi.Input

	ToLoadBalancerFrontendIPConfigurationPropertiesOutput() LoadBalancerFrontendIPConfigurationPropertiesOutput
	ToLoadBalancerFrontendIPConfigurationPropertiesOutputWithContext(context.Context) LoadBalancerFrontendIPConfigurationPropertiesOutput
}

// Describes a cloud service IP Configuration
type LoadBalancerFrontendIPConfigurationPropertiesArgs struct {
	// The virtual network private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The reference to the public ip address resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference to the virtual network subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (LoadBalancerFrontendIPConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfigurationProperties)(nil)).Elem()
}

func (i LoadBalancerFrontendIPConfigurationPropertiesArgs) ToLoadBalancerFrontendIPConfigurationPropertiesOutput() LoadBalancerFrontendIPConfigurationPropertiesOutput {
	return i.ToLoadBalancerFrontendIPConfigurationPropertiesOutputWithContext(context.Background())
}

func (i LoadBalancerFrontendIPConfigurationPropertiesArgs) ToLoadBalancerFrontendIPConfigurationPropertiesOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerFrontendIPConfigurationPropertiesOutput)
}

// Describes a cloud service IP Configuration
type LoadBalancerFrontendIPConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfigurationProperties)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationPropertiesOutput) ToLoadBalancerFrontendIPConfigurationPropertiesOutput() LoadBalancerFrontendIPConfigurationPropertiesOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationPropertiesOutput) ToLoadBalancerFrontendIPConfigurationPropertiesOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationPropertiesOutput {
	return o
}

// The virtual network private IP address of the IP configuration.
func (o LoadBalancerFrontendIPConfigurationPropertiesOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationProperties) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The reference to the public ip address resource.
func (o LoadBalancerFrontendIPConfigurationPropertiesOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationProperties) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference to the virtual network subnet resource.
func (o LoadBalancerFrontendIPConfigurationPropertiesOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationProperties) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

// Describes a cloud service IP Configuration
type LoadBalancerFrontendIPConfigurationPropertiesResponse struct {
	// The virtual network private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The reference to the public ip address resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference to the virtual network subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// Describes a cloud service IP Configuration
type LoadBalancerFrontendIPConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) ToLoadBalancerFrontendIPConfigurationPropertiesResponseOutput() LoadBalancerFrontendIPConfigurationPropertiesResponseOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) ToLoadBalancerFrontendIPConfigurationPropertiesResponseOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationPropertiesResponseOutput {
	return o
}

// The virtual network private IP address of the IP configuration.
func (o LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationPropertiesResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The reference to the public ip address resource.
func (o LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationPropertiesResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// The reference to the virtual network subnet resource.
func (o LoadBalancerFrontendIPConfigurationPropertiesResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationPropertiesResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
type LoadBalancerFrontendIPConfigurationResponse struct {
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name string `pulumi:"name"`
	// Properties of load balancer frontend ip configuration.
	Properties LoadBalancerFrontendIPConfigurationPropertiesResponse `pulumi:"properties"`
}

// Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
type LoadBalancerFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationResponseOutput) ToLoadBalancerFrontendIPConfigurationResponseOutput() LoadBalancerFrontendIPConfigurationResponseOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationResponseOutput) ToLoadBalancerFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationResponseOutput {
	return o
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o LoadBalancerFrontendIPConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of load balancer frontend ip configuration.
func (o LoadBalancerFrontendIPConfigurationResponseOutput) Properties() LoadBalancerFrontendIPConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v LoadBalancerFrontendIPConfigurationResponse) LoadBalancerFrontendIPConfigurationPropertiesResponse {
		return v.Properties
	}).(LoadBalancerFrontendIPConfigurationPropertiesResponseOutput)
}

type LoadBalancerFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerFrontendIPConfigurationResponseArrayOutput) ToLoadBalancerFrontendIPConfigurationResponseArrayOutput() LoadBalancerFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationResponseArrayOutput) ToLoadBalancerFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) LoadBalancerFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerFrontendIPConfigurationResponse {
		return vs[0].([]LoadBalancerFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(LoadBalancerFrontendIPConfigurationResponseOutput)
}

type SubResource struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

type SubResourceArgs struct {
	// Resource Id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource Id
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Resource Id
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponse struct {
	// Resource Id
	Id *string `pulumi:"id"`
}

type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource Id
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource Id
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The system meta data relating to this resource.
type SystemDataResponse struct {
	// Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.
	CreatedAt string `pulumi:"createdAt"`
	// Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.
	LastModifiedAt string `pulumi:"lastModifiedAt"`
}

// The system meta data relating to this resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v SystemDataResponse) string { return v.LastModifiedAt }).(pulumi.StringOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse {
		if v != nil {
			return *v
		}
		var ret SystemDataResponse
		return ret
	}).(SystemDataResponseOutput)
}

// Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudServiceExtensionProfileOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionProfileResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionPropertiesOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceExtensionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceNetworkProfileOutput{})
	pulumi.RegisterOutputType(CloudServiceNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceOsProfileOutput{})
	pulumi.RegisterOutputType(CloudServiceOsProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceOsProfileResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceOsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServicePropertiesOutput{})
	pulumi.RegisterOutputType(CloudServicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloudServicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfileOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfilePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfilePropertiesOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfilePropertiesArrayOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfilePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfileResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleSkuOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleSkuPtrOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleSkuResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceRoleSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultAndSecretReferenceOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultAndSecretReferencePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultAndSecretReferenceResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultAndSecretReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultCertificateOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultCertificateArrayOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultCertificateResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultSecretGroupOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultSecretGroupArrayOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultSecretGroupResponseOutput{})
	pulumi.RegisterOutputType(CloudServiceVaultSecretGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtensionOutput{})
	pulumi.RegisterOutputType(ExtensionArrayOutput{})
	pulumi.RegisterOutputType(ExtensionResponseOutput{})
	pulumi.RegisterOutputType(ExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
}
