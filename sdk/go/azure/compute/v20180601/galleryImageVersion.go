// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GalleryImageVersion struct {
	pulumi.CustomResourceState

	Location          pulumi.StringOutput                                `pulumi:"location"`
	Name              pulumi.StringOutput                                `pulumi:"name"`
	ProvisioningState pulumi.StringOutput                                `pulumi:"provisioningState"`
	PublishingProfile GalleryImageVersionPublishingProfileResponseOutput `pulumi:"publishingProfile"`
	ReplicationStatus ReplicationStatusResponseOutput                    `pulumi:"replicationStatus"`
	StorageProfile    GalleryImageVersionStorageProfileResponseOutput    `pulumi:"storageProfile"`
	Tags              pulumi.StringMapOutput                             `pulumi:"tags"`
	Type              pulumi.StringOutput                                `pulumi:"type"`
}

// NewGalleryImageVersion registers a new resource with the given unique name, arguments, and options.
func NewGalleryImageVersion(ctx *pulumi.Context,
	name string, args *GalleryImageVersionArgs, opts ...pulumi.ResourceOption) (*GalleryImageVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GalleryImageName == nil {
		return nil, errors.New("invalid value for required argument 'GalleryImageName'")
	}
	if args.GalleryName == nil {
		return nil, errors.New("invalid value for required argument 'GalleryName'")
	}
	if args.PublishingProfile == nil {
		return nil, errors.New("invalid value for required argument 'PublishingProfile'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:compute/v20180601:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190301:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20190301:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190701:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20190701:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20191201:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20191201:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20200930:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20200930:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210701:GalleryImageVersion"),
		},
		{
			Type: pulumi.String("azure-nextgen:compute/v20210701:GalleryImageVersion"),
		},
	})
	opts = append(opts, aliases)
	var resource GalleryImageVersion
	err := ctx.RegisterResource("azure-native:compute/v20180601:GalleryImageVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGalleryImageVersion gets an existing GalleryImageVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGalleryImageVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GalleryImageVersionState, opts ...pulumi.ResourceOption) (*GalleryImageVersion, error) {
	var resource GalleryImageVersion
	err := ctx.ReadResource("azure-native:compute/v20180601:GalleryImageVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GalleryImageVersion resources.
type galleryImageVersionState struct {
}

type GalleryImageVersionState struct {
}

func (GalleryImageVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryImageVersionState)(nil)).Elem()
}

type galleryImageVersionArgs struct {
	GalleryImageName        string                               `pulumi:"galleryImageName"`
	GalleryImageVersionName *string                              `pulumi:"galleryImageVersionName"`
	GalleryName             string                               `pulumi:"galleryName"`
	Location                *string                              `pulumi:"location"`
	PublishingProfile       GalleryImageVersionPublishingProfile `pulumi:"publishingProfile"`
	ResourceGroupName       string                               `pulumi:"resourceGroupName"`
	Tags                    map[string]string                    `pulumi:"tags"`
}

// The set of arguments for constructing a GalleryImageVersion resource.
type GalleryImageVersionArgs struct {
	GalleryImageName        pulumi.StringInput
	GalleryImageVersionName pulumi.StringPtrInput
	GalleryName             pulumi.StringInput
	Location                pulumi.StringPtrInput
	PublishingProfile       GalleryImageVersionPublishingProfileInput
	ResourceGroupName       pulumi.StringInput
	Tags                    pulumi.StringMapInput
}

func (GalleryImageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryImageVersionArgs)(nil)).Elem()
}

type GalleryImageVersionInput interface {
	pulumi.Input

	ToGalleryImageVersionOutput() GalleryImageVersionOutput
	ToGalleryImageVersionOutputWithContext(ctx context.Context) GalleryImageVersionOutput
}

func (*GalleryImageVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersion)(nil))
}

func (i *GalleryImageVersion) ToGalleryImageVersionOutput() GalleryImageVersionOutput {
	return i.ToGalleryImageVersionOutputWithContext(context.Background())
}

func (i *GalleryImageVersion) ToGalleryImageVersionOutputWithContext(ctx context.Context) GalleryImageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionOutput)
}

type GalleryImageVersionOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersion)(nil))
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionOutput() GalleryImageVersionOutput {
	return o
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionOutputWithContext(ctx context.Context) GalleryImageVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GalleryImageVersionOutput{})
}
