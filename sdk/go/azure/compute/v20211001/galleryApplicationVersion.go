// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies information about the gallery Application Version that you want to create or update.
type GalleryApplicationVersion struct {
	pulumi.CustomResourceState

	// Resource location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state, which only appears in the response.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The publishing profile of a gallery image version.
	PublishingProfile GalleryApplicationVersionPublishingProfileResponseOutput `pulumi:"publishingProfile"`
	// This is the replication status of the gallery image version.
	ReplicationStatus ReplicationStatusResponseOutput `pulumi:"replicationStatus"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGalleryApplicationVersion registers a new resource with the given unique name, arguments, and options.
func NewGalleryApplicationVersion(ctx *pulumi.Context,
	name string, args *GalleryApplicationVersionArgs, opts ...pulumi.ResourceOption) (*GalleryApplicationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GalleryApplicationName == nil {
		return nil, errors.New("invalid value for required argument 'GalleryApplicationName'")
	}
	if args.GalleryName == nil {
		return nil, errors.New("invalid value for required argument 'GalleryName'")
	}
	if args.PublishingProfile == nil {
		return nil, errors.New("invalid value for required argument 'PublishingProfile'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:compute:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190301:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20190701:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20191201:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20200930:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20210701:GalleryApplicationVersion"),
		},
		{
			Type: pulumi.String("azure-native:compute/v20220103:GalleryApplicationVersion"),
		},
	})
	opts = append(opts, aliases)
	var resource GalleryApplicationVersion
	err := ctx.RegisterResource("azure-native:compute/v20211001:GalleryApplicationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGalleryApplicationVersion gets an existing GalleryApplicationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGalleryApplicationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GalleryApplicationVersionState, opts ...pulumi.ResourceOption) (*GalleryApplicationVersion, error) {
	var resource GalleryApplicationVersion
	err := ctx.ReadResource("azure-native:compute/v20211001:GalleryApplicationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GalleryApplicationVersion resources.
type galleryApplicationVersionState struct {
}

type GalleryApplicationVersionState struct {
}

func (GalleryApplicationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationVersionState)(nil)).Elem()
}

type galleryApplicationVersionArgs struct {
	// The name of the gallery Application Definition in which the Application Version is to be created.
	GalleryApplicationName string `pulumi:"galleryApplicationName"`
	// The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
	GalleryApplicationVersionName *string `pulumi:"galleryApplicationVersionName"`
	// The name of the Shared Application Gallery in which the Application Definition resides.
	GalleryName string `pulumi:"galleryName"`
	// Resource location
	Location *string `pulumi:"location"`
	// The publishing profile of a gallery image version.
	PublishingProfile GalleryApplicationVersionPublishingProfile `pulumi:"publishingProfile"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a GalleryApplicationVersion resource.
type GalleryApplicationVersionArgs struct {
	// The name of the gallery Application Definition in which the Application Version is to be created.
	GalleryApplicationName pulumi.StringInput
	// The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
	GalleryApplicationVersionName pulumi.StringPtrInput
	// The name of the Shared Application Gallery in which the Application Definition resides.
	GalleryName pulumi.StringInput
	// Resource location
	Location pulumi.StringPtrInput
	// The publishing profile of a gallery image version.
	PublishingProfile GalleryApplicationVersionPublishingProfileInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (GalleryApplicationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationVersionArgs)(nil)).Elem()
}

type GalleryApplicationVersionInput interface {
	pulumi.Input

	ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput
	ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput
}

func (*GalleryApplicationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersion)(nil)).Elem()
}

func (i *GalleryApplicationVersion) ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput {
	return i.ToGalleryApplicationVersionOutputWithContext(context.Background())
}

func (i *GalleryApplicationVersion) ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionOutput)
}

type GalleryApplicationVersionOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersion)(nil)).Elem()
}

func (o GalleryApplicationVersionOutput) ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput {
	return o
}

func (o GalleryApplicationVersionOutput) ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput {
	return o
}

// Resource location
func (o GalleryApplicationVersionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o GalleryApplicationVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state, which only appears in the response.
func (o GalleryApplicationVersionOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The publishing profile of a gallery image version.
func (o GalleryApplicationVersionOutput) PublishingProfile() GalleryApplicationVersionPublishingProfileResponseOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) GalleryApplicationVersionPublishingProfileResponseOutput {
		return v.PublishingProfile
	}).(GalleryApplicationVersionPublishingProfileResponseOutput)
}

// This is the replication status of the gallery image version.
func (o GalleryApplicationVersionOutput) ReplicationStatus() ReplicationStatusResponseOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) ReplicationStatusResponseOutput { return v.ReplicationStatus }).(ReplicationStatusResponseOutput)
}

// Resource tags
func (o GalleryApplicationVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o GalleryApplicationVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GalleryApplicationVersionOutput{})
}
