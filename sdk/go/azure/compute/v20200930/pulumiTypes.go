// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200930

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Contains encryption settings for a data disk image.
type DataDiskImageEncryption struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
}

// DataDiskImageEncryptionInput is an input type that accepts DataDiskImageEncryptionArgs and DataDiskImageEncryptionOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionInput` via:
//
//          DataDiskImageEncryptionArgs{...}
type DataDiskImageEncryptionInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput
	ToDataDiskImageEncryptionOutputWithContext(context.Context) DataDiskImageEncryptionOutput
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
}

func (DataDiskImageEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryption)(nil)).Elem()
}

func (i DataDiskImageEncryptionArgs) ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput {
	return i.ToDataDiskImageEncryptionOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionArgs) ToDataDiskImageEncryptionOutputWithContext(ctx context.Context) DataDiskImageEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionOutput)
}

// DataDiskImageEncryptionArrayInput is an input type that accepts DataDiskImageEncryptionArray and DataDiskImageEncryptionArrayOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionArrayInput` via:
//
//          DataDiskImageEncryptionArray{ DataDiskImageEncryptionArgs{...} }
type DataDiskImageEncryptionArrayInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput
	ToDataDiskImageEncryptionArrayOutputWithContext(context.Context) DataDiskImageEncryptionArrayOutput
}

type DataDiskImageEncryptionArray []DataDiskImageEncryptionInput

func (DataDiskImageEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryption)(nil)).Elem()
}

func (i DataDiskImageEncryptionArray) ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput {
	return i.ToDataDiskImageEncryptionArrayOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionArray) ToDataDiskImageEncryptionArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryption)(nil)).Elem()
}

func (o DataDiskImageEncryptionOutput) ToDataDiskImageEncryptionOutput() DataDiskImageEncryptionOutput {
	return o
}

func (o DataDiskImageEncryptionOutput) ToDataDiskImageEncryptionOutputWithContext(ctx context.Context) DataDiskImageEncryptionOutput {
	return o
}

// A relative URI containing the resource ID of the disk encryption set.
func (o DataDiskImageEncryptionOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskImageEncryption) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o DataDiskImageEncryptionOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageEncryption) int { return v.Lun }).(pulumi.IntOutput)
}

type DataDiskImageEncryptionArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryption)(nil)).Elem()
}

func (o DataDiskImageEncryptionArrayOutput) ToDataDiskImageEncryptionArrayOutput() DataDiskImageEncryptionArrayOutput {
	return o
}

func (o DataDiskImageEncryptionArrayOutput) ToDataDiskImageEncryptionArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionArrayOutput {
	return o
}

func (o DataDiskImageEncryptionArrayOutput) Index(i pulumi.IntInput) DataDiskImageEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageEncryption {
		return vs[0].([]DataDiskImageEncryption)[vs[1].(int)]
	}).(DataDiskImageEncryptionOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionResponse struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
}

// DataDiskImageEncryptionResponseInput is an input type that accepts DataDiskImageEncryptionResponseArgs and DataDiskImageEncryptionResponseOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionResponseInput` via:
//
//          DataDiskImageEncryptionResponseArgs{...}
type DataDiskImageEncryptionResponseInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionResponseOutput() DataDiskImageEncryptionResponseOutput
	ToDataDiskImageEncryptionResponseOutputWithContext(context.Context) DataDiskImageEncryptionResponseOutput
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionResponseArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
}

func (DataDiskImageEncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (i DataDiskImageEncryptionResponseArgs) ToDataDiskImageEncryptionResponseOutput() DataDiskImageEncryptionResponseOutput {
	return i.ToDataDiskImageEncryptionResponseOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionResponseArgs) ToDataDiskImageEncryptionResponseOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionResponseOutput)
}

// DataDiskImageEncryptionResponseArrayInput is an input type that accepts DataDiskImageEncryptionResponseArray and DataDiskImageEncryptionResponseArrayOutput values.
// You can construct a concrete instance of `DataDiskImageEncryptionResponseArrayInput` via:
//
//          DataDiskImageEncryptionResponseArray{ DataDiskImageEncryptionResponseArgs{...} }
type DataDiskImageEncryptionResponseArrayInput interface {
	pulumi.Input

	ToDataDiskImageEncryptionResponseArrayOutput() DataDiskImageEncryptionResponseArrayOutput
	ToDataDiskImageEncryptionResponseArrayOutputWithContext(context.Context) DataDiskImageEncryptionResponseArrayOutput
}

type DataDiskImageEncryptionResponseArray []DataDiskImageEncryptionResponseInput

func (DataDiskImageEncryptionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (i DataDiskImageEncryptionResponseArray) ToDataDiskImageEncryptionResponseArrayOutput() DataDiskImageEncryptionResponseArrayOutput {
	return i.ToDataDiskImageEncryptionResponseArrayOutputWithContext(context.Background())
}

func (i DataDiskImageEncryptionResponseArray) ToDataDiskImageEncryptionResponseArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataDiskImageEncryptionResponseArrayOutput)
}

// Contains encryption settings for a data disk image.
type DataDiskImageEncryptionResponseOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (o DataDiskImageEncryptionResponseOutput) ToDataDiskImageEncryptionResponseOutput() DataDiskImageEncryptionResponseOutput {
	return o
}

func (o DataDiskImageEncryptionResponseOutput) ToDataDiskImageEncryptionResponseOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseOutput {
	return o
}

// A relative URI containing the resource ID of the disk encryption set.
func (o DataDiskImageEncryptionResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataDiskImageEncryptionResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o DataDiskImageEncryptionResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DataDiskImageEncryptionResponse) int { return v.Lun }).(pulumi.IntOutput)
}

type DataDiskImageEncryptionResponseArrayOutput struct{ *pulumi.OutputState }

func (DataDiskImageEncryptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataDiskImageEncryptionResponse)(nil)).Elem()
}

func (o DataDiskImageEncryptionResponseArrayOutput) ToDataDiskImageEncryptionResponseArrayOutput() DataDiskImageEncryptionResponseArrayOutput {
	return o
}

func (o DataDiskImageEncryptionResponseArrayOutput) ToDataDiskImageEncryptionResponseArrayOutputWithContext(ctx context.Context) DataDiskImageEncryptionResponseArrayOutput {
	return o
}

func (o DataDiskImageEncryptionResponseArrayOutput) Index(i pulumi.IntInput) DataDiskImageEncryptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataDiskImageEncryptionResponse {
		return vs[0].([]DataDiskImageEncryptionResponse)[vs[1].(int)]
	}).(DataDiskImageEncryptionResponseOutput)
}

// Describes the disallowed disk types.
type Disallowed struct {
	// A list of disk types.
	DiskTypes []string `pulumi:"diskTypes"`
}

// DisallowedInput is an input type that accepts DisallowedArgs and DisallowedOutput values.
// You can construct a concrete instance of `DisallowedInput` via:
//
//          DisallowedArgs{...}
type DisallowedInput interface {
	pulumi.Input

	ToDisallowedOutput() DisallowedOutput
	ToDisallowedOutputWithContext(context.Context) DisallowedOutput
}

// Describes the disallowed disk types.
type DisallowedArgs struct {
	// A list of disk types.
	DiskTypes pulumi.StringArrayInput `pulumi:"diskTypes"`
}

func (DisallowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Disallowed)(nil)).Elem()
}

func (i DisallowedArgs) ToDisallowedOutput() DisallowedOutput {
	return i.ToDisallowedOutputWithContext(context.Background())
}

func (i DisallowedArgs) ToDisallowedOutputWithContext(ctx context.Context) DisallowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedOutput)
}

func (i DisallowedArgs) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return i.ToDisallowedPtrOutputWithContext(context.Background())
}

func (i DisallowedArgs) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedOutput).ToDisallowedPtrOutputWithContext(ctx)
}

// DisallowedPtrInput is an input type that accepts DisallowedArgs, DisallowedPtr and DisallowedPtrOutput values.
// You can construct a concrete instance of `DisallowedPtrInput` via:
//
//          DisallowedArgs{...}
//
//  or:
//
//          nil
type DisallowedPtrInput interface {
	pulumi.Input

	ToDisallowedPtrOutput() DisallowedPtrOutput
	ToDisallowedPtrOutputWithContext(context.Context) DisallowedPtrOutput
}

type disallowedPtrType DisallowedArgs

func DisallowedPtr(v *DisallowedArgs) DisallowedPtrInput {
	return (*disallowedPtrType)(v)
}

func (*disallowedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Disallowed)(nil)).Elem()
}

func (i *disallowedPtrType) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return i.ToDisallowedPtrOutputWithContext(context.Background())
}

func (i *disallowedPtrType) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedPtrOutput)
}

// Describes the disallowed disk types.
type DisallowedOutput struct{ *pulumi.OutputState }

func (DisallowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disallowed)(nil)).Elem()
}

func (o DisallowedOutput) ToDisallowedOutput() DisallowedOutput {
	return o
}

func (o DisallowedOutput) ToDisallowedOutputWithContext(ctx context.Context) DisallowedOutput {
	return o
}

func (o DisallowedOutput) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return o.ToDisallowedPtrOutputWithContext(context.Background())
}

func (o DisallowedOutput) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return o.ApplyT(func(v Disallowed) *Disallowed {
		return &v
	}).(DisallowedPtrOutput)
}

// A list of disk types.
func (o DisallowedOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Disallowed) []string { return v.DiskTypes }).(pulumi.StringArrayOutput)
}

type DisallowedPtrOutput struct{ *pulumi.OutputState }

func (DisallowedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Disallowed)(nil)).Elem()
}

func (o DisallowedPtrOutput) ToDisallowedPtrOutput() DisallowedPtrOutput {
	return o
}

func (o DisallowedPtrOutput) ToDisallowedPtrOutputWithContext(ctx context.Context) DisallowedPtrOutput {
	return o
}

func (o DisallowedPtrOutput) Elem() DisallowedOutput {
	return o.ApplyT(func(v *Disallowed) Disallowed { return *v }).(DisallowedOutput)
}

// A list of disk types.
func (o DisallowedPtrOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Disallowed) []string {
		if v == nil {
			return nil
		}
		return v.DiskTypes
	}).(pulumi.StringArrayOutput)
}

// Describes the disallowed disk types.
type DisallowedResponse struct {
	// A list of disk types.
	DiskTypes []string `pulumi:"diskTypes"`
}

// DisallowedResponseInput is an input type that accepts DisallowedResponseArgs and DisallowedResponseOutput values.
// You can construct a concrete instance of `DisallowedResponseInput` via:
//
//          DisallowedResponseArgs{...}
type DisallowedResponseInput interface {
	pulumi.Input

	ToDisallowedResponseOutput() DisallowedResponseOutput
	ToDisallowedResponseOutputWithContext(context.Context) DisallowedResponseOutput
}

// Describes the disallowed disk types.
type DisallowedResponseArgs struct {
	// A list of disk types.
	DiskTypes pulumi.StringArrayInput `pulumi:"diskTypes"`
}

func (DisallowedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisallowedResponse)(nil)).Elem()
}

func (i DisallowedResponseArgs) ToDisallowedResponseOutput() DisallowedResponseOutput {
	return i.ToDisallowedResponseOutputWithContext(context.Background())
}

func (i DisallowedResponseArgs) ToDisallowedResponseOutputWithContext(ctx context.Context) DisallowedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedResponseOutput)
}

func (i DisallowedResponseArgs) ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput {
	return i.ToDisallowedResponsePtrOutputWithContext(context.Background())
}

func (i DisallowedResponseArgs) ToDisallowedResponsePtrOutputWithContext(ctx context.Context) DisallowedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedResponseOutput).ToDisallowedResponsePtrOutputWithContext(ctx)
}

// DisallowedResponsePtrInput is an input type that accepts DisallowedResponseArgs, DisallowedResponsePtr and DisallowedResponsePtrOutput values.
// You can construct a concrete instance of `DisallowedResponsePtrInput` via:
//
//          DisallowedResponseArgs{...}
//
//  or:
//
//          nil
type DisallowedResponsePtrInput interface {
	pulumi.Input

	ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput
	ToDisallowedResponsePtrOutputWithContext(context.Context) DisallowedResponsePtrOutput
}

type disallowedResponsePtrType DisallowedResponseArgs

func DisallowedResponsePtr(v *DisallowedResponseArgs) DisallowedResponsePtrInput {
	return (*disallowedResponsePtrType)(v)
}

func (*disallowedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DisallowedResponse)(nil)).Elem()
}

func (i *disallowedResponsePtrType) ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput {
	return i.ToDisallowedResponsePtrOutputWithContext(context.Background())
}

func (i *disallowedResponsePtrType) ToDisallowedResponsePtrOutputWithContext(ctx context.Context) DisallowedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisallowedResponsePtrOutput)
}

// Describes the disallowed disk types.
type DisallowedResponseOutput struct{ *pulumi.OutputState }

func (DisallowedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisallowedResponse)(nil)).Elem()
}

func (o DisallowedResponseOutput) ToDisallowedResponseOutput() DisallowedResponseOutput {
	return o
}

func (o DisallowedResponseOutput) ToDisallowedResponseOutputWithContext(ctx context.Context) DisallowedResponseOutput {
	return o
}

func (o DisallowedResponseOutput) ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput {
	return o.ToDisallowedResponsePtrOutputWithContext(context.Background())
}

func (o DisallowedResponseOutput) ToDisallowedResponsePtrOutputWithContext(ctx context.Context) DisallowedResponsePtrOutput {
	return o.ApplyT(func(v DisallowedResponse) *DisallowedResponse {
		return &v
	}).(DisallowedResponsePtrOutput)
}

// A list of disk types.
func (o DisallowedResponseOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DisallowedResponse) []string { return v.DiskTypes }).(pulumi.StringArrayOutput)
}

type DisallowedResponsePtrOutput struct{ *pulumi.OutputState }

func (DisallowedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DisallowedResponse)(nil)).Elem()
}

func (o DisallowedResponsePtrOutput) ToDisallowedResponsePtrOutput() DisallowedResponsePtrOutput {
	return o
}

func (o DisallowedResponsePtrOutput) ToDisallowedResponsePtrOutputWithContext(ctx context.Context) DisallowedResponsePtrOutput {
	return o
}

func (o DisallowedResponsePtrOutput) Elem() DisallowedResponseOutput {
	return o.ApplyT(func(v *DisallowedResponse) DisallowedResponse { return *v }).(DisallowedResponseOutput)
}

// A list of disk types.
func (o DisallowedResponsePtrOutput) DiskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DisallowedResponse) []string {
		if v == nil {
			return nil
		}
		return v.DiskTypes
	}).(pulumi.StringArrayOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImages struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages []DataDiskImageEncryption `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage *OSDiskImageEncryption `pulumi:"osDiskImage"`
}

// EncryptionImagesInput is an input type that accepts EncryptionImagesArgs and EncryptionImagesOutput values.
// You can construct a concrete instance of `EncryptionImagesInput` via:
//
//          EncryptionImagesArgs{...}
type EncryptionImagesInput interface {
	pulumi.Input

	ToEncryptionImagesOutput() EncryptionImagesOutput
	ToEncryptionImagesOutputWithContext(context.Context) EncryptionImagesOutput
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesArgs struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages DataDiskImageEncryptionArrayInput `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage OSDiskImageEncryptionPtrInput `pulumi:"osDiskImage"`
}

func (EncryptionImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImages)(nil)).Elem()
}

func (i EncryptionImagesArgs) ToEncryptionImagesOutput() EncryptionImagesOutput {
	return i.ToEncryptionImagesOutputWithContext(context.Background())
}

func (i EncryptionImagesArgs) ToEncryptionImagesOutputWithContext(ctx context.Context) EncryptionImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesOutput)
}

func (i EncryptionImagesArgs) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return i.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (i EncryptionImagesArgs) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesOutput).ToEncryptionImagesPtrOutputWithContext(ctx)
}

// EncryptionImagesPtrInput is an input type that accepts EncryptionImagesArgs, EncryptionImagesPtr and EncryptionImagesPtrOutput values.
// You can construct a concrete instance of `EncryptionImagesPtrInput` via:
//
//          EncryptionImagesArgs{...}
//
//  or:
//
//          nil
type EncryptionImagesPtrInput interface {
	pulumi.Input

	ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput
	ToEncryptionImagesPtrOutputWithContext(context.Context) EncryptionImagesPtrOutput
}

type encryptionImagesPtrType EncryptionImagesArgs

func EncryptionImagesPtr(v *EncryptionImagesArgs) EncryptionImagesPtrInput {
	return (*encryptionImagesPtrType)(v)
}

func (*encryptionImagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImages)(nil)).Elem()
}

func (i *encryptionImagesPtrType) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return i.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (i *encryptionImagesPtrType) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesPtrOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesOutput struct{ *pulumi.OutputState }

func (EncryptionImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImages)(nil)).Elem()
}

func (o EncryptionImagesOutput) ToEncryptionImagesOutput() EncryptionImagesOutput {
	return o
}

func (o EncryptionImagesOutput) ToEncryptionImagesOutputWithContext(ctx context.Context) EncryptionImagesOutput {
	return o
}

func (o EncryptionImagesOutput) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return o.ToEncryptionImagesPtrOutputWithContext(context.Background())
}

func (o EncryptionImagesOutput) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return o.ApplyT(func(v EncryptionImages) *EncryptionImages {
		return &v
	}).(EncryptionImagesPtrOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesOutput) DataDiskImages() DataDiskImageEncryptionArrayOutput {
	return o.ApplyT(func(v EncryptionImages) []DataDiskImageEncryption { return v.DataDiskImages }).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesOutput) OsDiskImage() OSDiskImageEncryptionPtrOutput {
	return o.ApplyT(func(v EncryptionImages) *OSDiskImageEncryption { return v.OsDiskImage }).(OSDiskImageEncryptionPtrOutput)
}

type EncryptionImagesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionImagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImages)(nil)).Elem()
}

func (o EncryptionImagesPtrOutput) ToEncryptionImagesPtrOutput() EncryptionImagesPtrOutput {
	return o
}

func (o EncryptionImagesPtrOutput) ToEncryptionImagesPtrOutputWithContext(ctx context.Context) EncryptionImagesPtrOutput {
	return o
}

func (o EncryptionImagesPtrOutput) Elem() EncryptionImagesOutput {
	return o.ApplyT(func(v *EncryptionImages) EncryptionImages { return *v }).(EncryptionImagesOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesPtrOutput) DataDiskImages() DataDiskImageEncryptionArrayOutput {
	return o.ApplyT(func(v *EncryptionImages) []DataDiskImageEncryption {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(DataDiskImageEncryptionArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesPtrOutput) OsDiskImage() OSDiskImageEncryptionPtrOutput {
	return o.ApplyT(func(v *EncryptionImages) *OSDiskImageEncryption {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(OSDiskImageEncryptionPtrOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesResponse struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages []DataDiskImageEncryptionResponse `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage *OSDiskImageEncryptionResponse `pulumi:"osDiskImage"`
}

// EncryptionImagesResponseInput is an input type that accepts EncryptionImagesResponseArgs and EncryptionImagesResponseOutput values.
// You can construct a concrete instance of `EncryptionImagesResponseInput` via:
//
//          EncryptionImagesResponseArgs{...}
type EncryptionImagesResponseInput interface {
	pulumi.Input

	ToEncryptionImagesResponseOutput() EncryptionImagesResponseOutput
	ToEncryptionImagesResponseOutputWithContext(context.Context) EncryptionImagesResponseOutput
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesResponseArgs struct {
	// A list of encryption specifications for data disk images.
	DataDiskImages DataDiskImageEncryptionResponseArrayInput `pulumi:"dataDiskImages"`
	// Contains encryption settings for an OS disk image.
	OsDiskImage OSDiskImageEncryptionResponsePtrInput `pulumi:"osDiskImage"`
}

func (EncryptionImagesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImagesResponse)(nil)).Elem()
}

func (i EncryptionImagesResponseArgs) ToEncryptionImagesResponseOutput() EncryptionImagesResponseOutput {
	return i.ToEncryptionImagesResponseOutputWithContext(context.Background())
}

func (i EncryptionImagesResponseArgs) ToEncryptionImagesResponseOutputWithContext(ctx context.Context) EncryptionImagesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesResponseOutput)
}

func (i EncryptionImagesResponseArgs) ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput {
	return i.ToEncryptionImagesResponsePtrOutputWithContext(context.Background())
}

func (i EncryptionImagesResponseArgs) ToEncryptionImagesResponsePtrOutputWithContext(ctx context.Context) EncryptionImagesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesResponseOutput).ToEncryptionImagesResponsePtrOutputWithContext(ctx)
}

// EncryptionImagesResponsePtrInput is an input type that accepts EncryptionImagesResponseArgs, EncryptionImagesResponsePtr and EncryptionImagesResponsePtrOutput values.
// You can construct a concrete instance of `EncryptionImagesResponsePtrInput` via:
//
//          EncryptionImagesResponseArgs{...}
//
//  or:
//
//          nil
type EncryptionImagesResponsePtrInput interface {
	pulumi.Input

	ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput
	ToEncryptionImagesResponsePtrOutputWithContext(context.Context) EncryptionImagesResponsePtrOutput
}

type encryptionImagesResponsePtrType EncryptionImagesResponseArgs

func EncryptionImagesResponsePtr(v *EncryptionImagesResponseArgs) EncryptionImagesResponsePtrInput {
	return (*encryptionImagesResponsePtrType)(v)
}

func (*encryptionImagesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImagesResponse)(nil)).Elem()
}

func (i *encryptionImagesResponsePtrType) ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput {
	return i.ToEncryptionImagesResponsePtrOutputWithContext(context.Background())
}

func (i *encryptionImagesResponsePtrType) ToEncryptionImagesResponsePtrOutputWithContext(ctx context.Context) EncryptionImagesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionImagesResponsePtrOutput)
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
type EncryptionImagesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionImagesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionImagesResponse)(nil)).Elem()
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponseOutput() EncryptionImagesResponseOutput {
	return o
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponseOutputWithContext(ctx context.Context) EncryptionImagesResponseOutput {
	return o
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput {
	return o.ToEncryptionImagesResponsePtrOutputWithContext(context.Background())
}

func (o EncryptionImagesResponseOutput) ToEncryptionImagesResponsePtrOutputWithContext(ctx context.Context) EncryptionImagesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionImagesResponse) *EncryptionImagesResponse {
		return &v
	}).(EncryptionImagesResponsePtrOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesResponseOutput) DataDiskImages() DataDiskImageEncryptionResponseArrayOutput {
	return o.ApplyT(func(v EncryptionImagesResponse) []DataDiskImageEncryptionResponse { return v.DataDiskImages }).(DataDiskImageEncryptionResponseArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesResponseOutput) OsDiskImage() OSDiskImageEncryptionResponsePtrOutput {
	return o.ApplyT(func(v EncryptionImagesResponse) *OSDiskImageEncryptionResponse { return v.OsDiskImage }).(OSDiskImageEncryptionResponsePtrOutput)
}

type EncryptionImagesResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionImagesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionImagesResponse)(nil)).Elem()
}

func (o EncryptionImagesResponsePtrOutput) ToEncryptionImagesResponsePtrOutput() EncryptionImagesResponsePtrOutput {
	return o
}

func (o EncryptionImagesResponsePtrOutput) ToEncryptionImagesResponsePtrOutputWithContext(ctx context.Context) EncryptionImagesResponsePtrOutput {
	return o
}

func (o EncryptionImagesResponsePtrOutput) Elem() EncryptionImagesResponseOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) EncryptionImagesResponse { return *v }).(EncryptionImagesResponseOutput)
}

// A list of encryption specifications for data disk images.
func (o EncryptionImagesResponsePtrOutput) DataDiskImages() DataDiskImageEncryptionResponseArrayOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) []DataDiskImageEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(DataDiskImageEncryptionResponseArrayOutput)
}

// Contains encryption settings for an OS disk image.
func (o EncryptionImagesResponsePtrOutput) OsDiskImage() OSDiskImageEncryptionResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionImagesResponse) *OSDiskImageEncryptionResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(OSDiskImageEncryptionResponsePtrOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfile struct {
	// Optional. Whether or not this application reports health.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool               `pulumi:"excludeFromLatest"`
	ManageActions     *UserArtifactManage `pulumi:"manageActions"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSource `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegion `pulumi:"targetRegions"`
}

// GalleryApplicationVersionPublishingProfileInput is an input type that accepts GalleryApplicationVersionPublishingProfileArgs and GalleryApplicationVersionPublishingProfileOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionPublishingProfileInput` via:
//
//          GalleryApplicationVersionPublishingProfileArgs{...}
type GalleryApplicationVersionPublishingProfileInput interface {
	pulumi.Input

	ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput
	ToGalleryApplicationVersionPublishingProfileOutputWithContext(context.Context) GalleryApplicationVersionPublishingProfileOutput
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileArgs struct {
	// Optional. Whether or not this application reports health.
	EnableHealthCheck pulumi.BoolPtrInput `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput        `pulumi:"excludeFromLatest"`
	ManageActions     UserArtifactManagePtrInput `pulumi:"manageActions"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSourceInput `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionArrayInput `pulumi:"targetRegions"`
}

func (GalleryApplicationVersionPublishingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput {
	return i.ToGalleryApplicationVersionPublishingProfileOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileOutput)
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfilePtrOutput() GalleryApplicationVersionPublishingProfilePtrOutput {
	return i.ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionPublishingProfileArgs) ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileOutput).ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(ctx)
}

// GalleryApplicationVersionPublishingProfilePtrInput is an input type that accepts GalleryApplicationVersionPublishingProfileArgs, GalleryApplicationVersionPublishingProfilePtr and GalleryApplicationVersionPublishingProfilePtrOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionPublishingProfilePtrInput` via:
//
//          GalleryApplicationVersionPublishingProfileArgs{...}
//
//  or:
//
//          nil
type GalleryApplicationVersionPublishingProfilePtrInput interface {
	pulumi.Input

	ToGalleryApplicationVersionPublishingProfilePtrOutput() GalleryApplicationVersionPublishingProfilePtrOutput
	ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(context.Context) GalleryApplicationVersionPublishingProfilePtrOutput
}

type galleryApplicationVersionPublishingProfilePtrType GalleryApplicationVersionPublishingProfileArgs

func GalleryApplicationVersionPublishingProfilePtr(v *GalleryApplicationVersionPublishingProfileArgs) GalleryApplicationVersionPublishingProfilePtrInput {
	return (*galleryApplicationVersionPublishingProfilePtrType)(v)
}

func (*galleryApplicationVersionPublishingProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (i *galleryApplicationVersionPublishingProfilePtrType) ToGalleryApplicationVersionPublishingProfilePtrOutput() GalleryApplicationVersionPublishingProfilePtrOutput {
	return i.ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i *galleryApplicationVersionPublishingProfilePtrType) ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfilePtrOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfileOutput() GalleryApplicationVersionPublishingProfileOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfilePtrOutput() GalleryApplicationVersionPublishingProfilePtrOutput {
	return o.ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (o GalleryApplicationVersionPublishingProfileOutput) ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfilePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *GalleryApplicationVersionPublishingProfile {
		return &v
	}).(GalleryApplicationVersionPublishingProfilePtrOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfileOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *bool { return v.EnableHealthCheck }).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfileOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfileOutput) ManageActions() UserArtifactManagePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *UserArtifactManage { return v.ManageActions }).(UserArtifactManagePtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfileOutput) Source() UserArtifactSourceOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) UserArtifactSource { return v.Source }).(UserArtifactSourceOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfile) []TargetRegion { return v.TargetRegions }).(TargetRegionArrayOutput)
}

type GalleryApplicationVersionPublishingProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfilePtrOutput) ToGalleryApplicationVersionPublishingProfilePtrOutput() GalleryApplicationVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfilePtrOutput) ToGalleryApplicationVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfilePtrOutput) Elem() GalleryApplicationVersionPublishingProfileOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) GalleryApplicationVersionPublishingProfile {
		return *v
	}).(GalleryApplicationVersionPublishingProfileOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHealthCheck
	}).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfilePtrOutput) ManageActions() UserArtifactManagePtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *UserArtifactManage {
		if v == nil {
			return nil
		}
		return v.ManageActions
	}).(UserArtifactManagePtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) Source() UserArtifactSourcePtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *UserArtifactSource {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(UserArtifactSourcePtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfilePtrOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfile) []TargetRegion {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionArrayOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileResponse struct {
	// Optional. Whether or not this application reports health.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool                       `pulumi:"excludeFromLatest"`
	ManageActions     *UserArtifactManageResponse `pulumi:"manageActions"`
	// The timestamp for when the gallery image version is published.
	PublishedDate string `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSourceResponse `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegionResponse `pulumi:"targetRegions"`
}

// GalleryApplicationVersionPublishingProfileResponseInput is an input type that accepts GalleryApplicationVersionPublishingProfileResponseArgs and GalleryApplicationVersionPublishingProfileResponseOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionPublishingProfileResponseInput` via:
//
//          GalleryApplicationVersionPublishingProfileResponseArgs{...}
type GalleryApplicationVersionPublishingProfileResponseInput interface {
	pulumi.Input

	ToGalleryApplicationVersionPublishingProfileResponseOutput() GalleryApplicationVersionPublishingProfileResponseOutput
	ToGalleryApplicationVersionPublishingProfileResponseOutputWithContext(context.Context) GalleryApplicationVersionPublishingProfileResponseOutput
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileResponseArgs struct {
	// Optional. Whether or not this application reports health.
	EnableHealthCheck pulumi.BoolPtrInput `pulumi:"enableHealthCheck"`
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput                `pulumi:"excludeFromLatest"`
	ManageActions     UserArtifactManageResponsePtrInput `pulumi:"manageActions"`
	// The timestamp for when the gallery image version is published.
	PublishedDate pulumi.StringInput `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// The source image from which the Image Version is going to be created.
	Source UserArtifactSourceResponseInput `pulumi:"source"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionResponseArrayInput `pulumi:"targetRegions"`
}

func (GalleryApplicationVersionPublishingProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfileResponse)(nil)).Elem()
}

func (i GalleryApplicationVersionPublishingProfileResponseArgs) ToGalleryApplicationVersionPublishingProfileResponseOutput() GalleryApplicationVersionPublishingProfileResponseOutput {
	return i.ToGalleryApplicationVersionPublishingProfileResponseOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionPublishingProfileResponseArgs) ToGalleryApplicationVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileResponseOutput)
}

func (i GalleryApplicationVersionPublishingProfileResponseArgs) ToGalleryApplicationVersionPublishingProfileResponsePtrOutput() GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return i.ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionPublishingProfileResponseArgs) ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileResponseOutput).ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(ctx)
}

// GalleryApplicationVersionPublishingProfileResponsePtrInput is an input type that accepts GalleryApplicationVersionPublishingProfileResponseArgs, GalleryApplicationVersionPublishingProfileResponsePtr and GalleryApplicationVersionPublishingProfileResponsePtrOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionPublishingProfileResponsePtrInput` via:
//
//          GalleryApplicationVersionPublishingProfileResponseArgs{...}
//
//  or:
//
//          nil
type GalleryApplicationVersionPublishingProfileResponsePtrInput interface {
	pulumi.Input

	ToGalleryApplicationVersionPublishingProfileResponsePtrOutput() GalleryApplicationVersionPublishingProfileResponsePtrOutput
	ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(context.Context) GalleryApplicationVersionPublishingProfileResponsePtrOutput
}

type galleryApplicationVersionPublishingProfileResponsePtrType GalleryApplicationVersionPublishingProfileResponseArgs

func GalleryApplicationVersionPublishingProfileResponsePtr(v *GalleryApplicationVersionPublishingProfileResponseArgs) GalleryApplicationVersionPublishingProfileResponsePtrInput {
	return (*galleryApplicationVersionPublishingProfileResponsePtrType)(v)
}

func (*galleryApplicationVersionPublishingProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionPublishingProfileResponse)(nil)).Elem()
}

func (i *galleryApplicationVersionPublishingProfileResponsePtrType) ToGalleryApplicationVersionPublishingProfileResponsePtrOutput() GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return i.ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (i *galleryApplicationVersionPublishingProfileResponsePtrType) ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionPublishingProfileResponsePtrOutput)
}

// The publishing profile of a gallery image version.
type GalleryApplicationVersionPublishingProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryApplicationVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponseOutput() GalleryApplicationVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponsePtrOutput() GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return o.ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *GalleryApplicationVersionPublishingProfileResponse {
		return &v
	}).(GalleryApplicationVersionPublishingProfileResponsePtrOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *bool { return v.EnableHealthCheck }).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfileResponseOutput) ManageActions() UserArtifactManageResponsePtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *UserArtifactManageResponse {
		return v.ManageActions
	}).(UserArtifactManageResponsePtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) PublishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) string { return v.PublishedDate }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) Source() UserArtifactSourceResponseOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) UserArtifactSourceResponse { return v.Source }).(UserArtifactSourceResponseOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponseOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v GalleryApplicationVersionPublishingProfileResponse) []TargetRegionResponse {
		return v.TargetRegions
	}).(TargetRegionResponseArrayOutput)
}

type GalleryApplicationVersionPublishingProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionPublishingProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) ToGalleryApplicationVersionPublishingProfileResponsePtrOutput() GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) ToGalleryApplicationVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryApplicationVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) Elem() GalleryApplicationVersionPublishingProfileResponseOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) GalleryApplicationVersionPublishingProfileResponse {
		return *v
	}).(GalleryApplicationVersionPublishingProfileResponseOutput)
}

// Optional. Whether or not this application reports health.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHealthCheck
	}).(pulumi.BoolPtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) ManageActions() UserArtifactManageResponsePtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *UserArtifactManageResponse {
		if v == nil {
			return nil
		}
		return v.ManageActions
	}).(UserArtifactManageResponsePtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) PublishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublishedDate
	}).(pulumi.StringPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// The source image from which the Image Version is going to be created.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) Source() UserArtifactSourceResponsePtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *UserArtifactSourceResponse {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(UserArtifactSourceResponsePtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryApplicationVersionPublishingProfileResponsePtrOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v *GalleryApplicationVersionPublishingProfileResponse) []TargetRegionResponse {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionResponseArrayOutput)
}

// The gallery artifact version source.
type GalleryArtifactVersionSource struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri *string `pulumi:"uri"`
}

// GalleryArtifactVersionSourceInput is an input type that accepts GalleryArtifactVersionSourceArgs and GalleryArtifactVersionSourceOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionSourceInput` via:
//
//          GalleryArtifactVersionSourceArgs{...}
type GalleryArtifactVersionSourceInput interface {
	pulumi.Input

	ToGalleryArtifactVersionSourceOutput() GalleryArtifactVersionSourceOutput
	ToGalleryArtifactVersionSourceOutputWithContext(context.Context) GalleryArtifactVersionSourceOutput
}

// The gallery artifact version source.
type GalleryArtifactVersionSourceArgs struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GalleryArtifactVersionSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionSource)(nil)).Elem()
}

func (i GalleryArtifactVersionSourceArgs) ToGalleryArtifactVersionSourceOutput() GalleryArtifactVersionSourceOutput {
	return i.ToGalleryArtifactVersionSourceOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionSourceArgs) ToGalleryArtifactVersionSourceOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourceOutput)
}

func (i GalleryArtifactVersionSourceArgs) ToGalleryArtifactVersionSourcePtrOutput() GalleryArtifactVersionSourcePtrOutput {
	return i.ToGalleryArtifactVersionSourcePtrOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionSourceArgs) ToGalleryArtifactVersionSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourceOutput).ToGalleryArtifactVersionSourcePtrOutputWithContext(ctx)
}

// GalleryArtifactVersionSourcePtrInput is an input type that accepts GalleryArtifactVersionSourceArgs, GalleryArtifactVersionSourcePtr and GalleryArtifactVersionSourcePtrOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionSourcePtrInput` via:
//
//          GalleryArtifactVersionSourceArgs{...}
//
//  or:
//
//          nil
type GalleryArtifactVersionSourcePtrInput interface {
	pulumi.Input

	ToGalleryArtifactVersionSourcePtrOutput() GalleryArtifactVersionSourcePtrOutput
	ToGalleryArtifactVersionSourcePtrOutputWithContext(context.Context) GalleryArtifactVersionSourcePtrOutput
}

type galleryArtifactVersionSourcePtrType GalleryArtifactVersionSourceArgs

func GalleryArtifactVersionSourcePtr(v *GalleryArtifactVersionSourceArgs) GalleryArtifactVersionSourcePtrInput {
	return (*galleryArtifactVersionSourcePtrType)(v)
}

func (*galleryArtifactVersionSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionSource)(nil)).Elem()
}

func (i *galleryArtifactVersionSourcePtrType) ToGalleryArtifactVersionSourcePtrOutput() GalleryArtifactVersionSourcePtrOutput {
	return i.ToGalleryArtifactVersionSourcePtrOutputWithContext(context.Background())
}

func (i *galleryArtifactVersionSourcePtrType) ToGalleryArtifactVersionSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourcePtrOutput)
}

// The gallery artifact version source.
type GalleryArtifactVersionSourceOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionSource)(nil)).Elem()
}

func (o GalleryArtifactVersionSourceOutput) ToGalleryArtifactVersionSourceOutput() GalleryArtifactVersionSourceOutput {
	return o
}

func (o GalleryArtifactVersionSourceOutput) ToGalleryArtifactVersionSourceOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceOutput {
	return o
}

func (o GalleryArtifactVersionSourceOutput) ToGalleryArtifactVersionSourcePtrOutput() GalleryArtifactVersionSourcePtrOutput {
	return o.ToGalleryArtifactVersionSourcePtrOutputWithContext(context.Background())
}

func (o GalleryArtifactVersionSourceOutput) ToGalleryArtifactVersionSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSource) *GalleryArtifactVersionSource {
		return &v
	}).(GalleryArtifactVersionSourcePtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryArtifactVersionSourceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSource) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GalleryArtifactVersionSourcePtrOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionSource)(nil)).Elem()
}

func (o GalleryArtifactVersionSourcePtrOutput) ToGalleryArtifactVersionSourcePtrOutput() GalleryArtifactVersionSourcePtrOutput {
	return o
}

func (o GalleryArtifactVersionSourcePtrOutput) ToGalleryArtifactVersionSourcePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourcePtrOutput {
	return o
}

func (o GalleryArtifactVersionSourcePtrOutput) Elem() GalleryArtifactVersionSourceOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSource) GalleryArtifactVersionSource { return *v }).(GalleryArtifactVersionSourceOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryArtifactVersionSourcePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSource) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The gallery artifact version source.
type GalleryArtifactVersionSourceResponse struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id *string `pulumi:"id"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri *string `pulumi:"uri"`
}

// GalleryArtifactVersionSourceResponseInput is an input type that accepts GalleryArtifactVersionSourceResponseArgs and GalleryArtifactVersionSourceResponseOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionSourceResponseInput` via:
//
//          GalleryArtifactVersionSourceResponseArgs{...}
type GalleryArtifactVersionSourceResponseInput interface {
	pulumi.Input

	ToGalleryArtifactVersionSourceResponseOutput() GalleryArtifactVersionSourceResponseOutput
	ToGalleryArtifactVersionSourceResponseOutputWithContext(context.Context) GalleryArtifactVersionSourceResponseOutput
}

// The gallery artifact version source.
type GalleryArtifactVersionSourceResponseArgs struct {
	// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (GalleryArtifactVersionSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionSourceResponse)(nil)).Elem()
}

func (i GalleryArtifactVersionSourceResponseArgs) ToGalleryArtifactVersionSourceResponseOutput() GalleryArtifactVersionSourceResponseOutput {
	return i.ToGalleryArtifactVersionSourceResponseOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionSourceResponseArgs) ToGalleryArtifactVersionSourceResponseOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourceResponseOutput)
}

func (i GalleryArtifactVersionSourceResponseArgs) ToGalleryArtifactVersionSourceResponsePtrOutput() GalleryArtifactVersionSourceResponsePtrOutput {
	return i.ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(context.Background())
}

func (i GalleryArtifactVersionSourceResponseArgs) ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourceResponseOutput).ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(ctx)
}

// GalleryArtifactVersionSourceResponsePtrInput is an input type that accepts GalleryArtifactVersionSourceResponseArgs, GalleryArtifactVersionSourceResponsePtr and GalleryArtifactVersionSourceResponsePtrOutput values.
// You can construct a concrete instance of `GalleryArtifactVersionSourceResponsePtrInput` via:
//
//          GalleryArtifactVersionSourceResponseArgs{...}
//
//  or:
//
//          nil
type GalleryArtifactVersionSourceResponsePtrInput interface {
	pulumi.Input

	ToGalleryArtifactVersionSourceResponsePtrOutput() GalleryArtifactVersionSourceResponsePtrOutput
	ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(context.Context) GalleryArtifactVersionSourceResponsePtrOutput
}

type galleryArtifactVersionSourceResponsePtrType GalleryArtifactVersionSourceResponseArgs

func GalleryArtifactVersionSourceResponsePtr(v *GalleryArtifactVersionSourceResponseArgs) GalleryArtifactVersionSourceResponsePtrInput {
	return (*galleryArtifactVersionSourceResponsePtrType)(v)
}

func (*galleryArtifactVersionSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionSourceResponse)(nil)).Elem()
}

func (i *galleryArtifactVersionSourceResponsePtrType) ToGalleryArtifactVersionSourceResponsePtrOutput() GalleryArtifactVersionSourceResponsePtrOutput {
	return i.ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(context.Background())
}

func (i *galleryArtifactVersionSourceResponsePtrType) ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryArtifactVersionSourceResponsePtrOutput)
}

// The gallery artifact version source.
type GalleryArtifactVersionSourceResponseOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryArtifactVersionSourceResponse)(nil)).Elem()
}

func (o GalleryArtifactVersionSourceResponseOutput) ToGalleryArtifactVersionSourceResponseOutput() GalleryArtifactVersionSourceResponseOutput {
	return o
}

func (o GalleryArtifactVersionSourceResponseOutput) ToGalleryArtifactVersionSourceResponseOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponseOutput {
	return o
}

func (o GalleryArtifactVersionSourceResponseOutput) ToGalleryArtifactVersionSourceResponsePtrOutput() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(context.Background())
}

func (o GalleryArtifactVersionSourceResponseOutput) ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSourceResponse) *GalleryArtifactVersionSourceResponse {
		return &v
	}).(GalleryArtifactVersionSourceResponsePtrOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionSourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryArtifactVersionSourceResponseOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryArtifactVersionSourceResponse) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type GalleryArtifactVersionSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryArtifactVersionSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryArtifactVersionSourceResponse)(nil)).Elem()
}

func (o GalleryArtifactVersionSourceResponsePtrOutput) ToGalleryArtifactVersionSourceResponsePtrOutput() GalleryArtifactVersionSourceResponsePtrOutput {
	return o
}

func (o GalleryArtifactVersionSourceResponsePtrOutput) ToGalleryArtifactVersionSourceResponsePtrOutputWithContext(ctx context.Context) GalleryArtifactVersionSourceResponsePtrOutput {
	return o
}

func (o GalleryArtifactVersionSourceResponsePtrOutput) Elem() GalleryArtifactVersionSourceResponseOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSourceResponse) GalleryArtifactVersionSourceResponse { return *v }).(GalleryArtifactVersionSourceResponseOutput)
}

// The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource.
func (o GalleryArtifactVersionSourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
func (o GalleryArtifactVersionSourceResponsePtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryArtifactVersionSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// This is the data disk image.
type GalleryDataDiskImage struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSource `pulumi:"source"`
}

// GalleryDataDiskImageInput is an input type that accepts GalleryDataDiskImageArgs and GalleryDataDiskImageOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageInput` via:
//
//          GalleryDataDiskImageArgs{...}
type GalleryDataDiskImageInput interface {
	pulumi.Input

	ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput
	ToGalleryDataDiskImageOutputWithContext(context.Context) GalleryDataDiskImageOutput
}

// This is the data disk image.
type GalleryDataDiskImageArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourcePtrInput `pulumi:"source"`
}

func (GalleryDataDiskImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImage)(nil)).Elem()
}

func (i GalleryDataDiskImageArgs) ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput {
	return i.ToGalleryDataDiskImageOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageArgs) ToGalleryDataDiskImageOutputWithContext(ctx context.Context) GalleryDataDiskImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageOutput)
}

// GalleryDataDiskImageArrayInput is an input type that accepts GalleryDataDiskImageArray and GalleryDataDiskImageArrayOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageArrayInput` via:
//
//          GalleryDataDiskImageArray{ GalleryDataDiskImageArgs{...} }
type GalleryDataDiskImageArrayInput interface {
	pulumi.Input

	ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput
	ToGalleryDataDiskImageArrayOutputWithContext(context.Context) GalleryDataDiskImageArrayOutput
}

type GalleryDataDiskImageArray []GalleryDataDiskImageInput

func (GalleryDataDiskImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImage)(nil)).Elem()
}

func (i GalleryDataDiskImageArray) ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput {
	return i.ToGalleryDataDiskImageArrayOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageArray) ToGalleryDataDiskImageArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageArrayOutput)
}

// This is the data disk image.
type GalleryDataDiskImageOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImage)(nil)).Elem()
}

func (o GalleryDataDiskImageOutput) ToGalleryDataDiskImageOutput() GalleryDataDiskImageOutput {
	return o
}

func (o GalleryDataDiskImageOutput) ToGalleryDataDiskImageOutputWithContext(ctx context.Context) GalleryDataDiskImageOutput {
	return o
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryDataDiskImageOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o GalleryDataDiskImageOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) int { return v.Lun }).(pulumi.IntOutput)
}

// The gallery artifact version source.
func (o GalleryDataDiskImageOutput) Source() GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImage) *GalleryArtifactVersionSource { return v.Source }).(GalleryArtifactVersionSourcePtrOutput)
}

type GalleryDataDiskImageArrayOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImage)(nil)).Elem()
}

func (o GalleryDataDiskImageArrayOutput) ToGalleryDataDiskImageArrayOutput() GalleryDataDiskImageArrayOutput {
	return o
}

func (o GalleryDataDiskImageArrayOutput) ToGalleryDataDiskImageArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageArrayOutput {
	return o
}

func (o GalleryDataDiskImageArrayOutput) Index(i pulumi.IntInput) GalleryDataDiskImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryDataDiskImage {
		return vs[0].([]GalleryDataDiskImage)[vs[1].(int)]
	}).(GalleryDataDiskImageOutput)
}

// This is the data disk image.
type GalleryDataDiskImageResponse struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun int `pulumi:"lun"`
	// This property indicates the size of the VHD to be created.
	SizeInGB int `pulumi:"sizeInGB"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSourceResponse `pulumi:"source"`
}

// GalleryDataDiskImageResponseInput is an input type that accepts GalleryDataDiskImageResponseArgs and GalleryDataDiskImageResponseOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageResponseInput` via:
//
//          GalleryDataDiskImageResponseArgs{...}
type GalleryDataDiskImageResponseInput interface {
	pulumi.Input

	ToGalleryDataDiskImageResponseOutput() GalleryDataDiskImageResponseOutput
	ToGalleryDataDiskImageResponseOutputWithContext(context.Context) GalleryDataDiskImageResponseOutput
}

// This is the data disk image.
type GalleryDataDiskImageResponseArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
	// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// This property indicates the size of the VHD to be created.
	SizeInGB pulumi.IntInput `pulumi:"sizeInGB"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourceResponsePtrInput `pulumi:"source"`
}

func (GalleryDataDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImageResponse)(nil)).Elem()
}

func (i GalleryDataDiskImageResponseArgs) ToGalleryDataDiskImageResponseOutput() GalleryDataDiskImageResponseOutput {
	return i.ToGalleryDataDiskImageResponseOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageResponseArgs) ToGalleryDataDiskImageResponseOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageResponseOutput)
}

// GalleryDataDiskImageResponseArrayInput is an input type that accepts GalleryDataDiskImageResponseArray and GalleryDataDiskImageResponseArrayOutput values.
// You can construct a concrete instance of `GalleryDataDiskImageResponseArrayInput` via:
//
//          GalleryDataDiskImageResponseArray{ GalleryDataDiskImageResponseArgs{...} }
type GalleryDataDiskImageResponseArrayInput interface {
	pulumi.Input

	ToGalleryDataDiskImageResponseArrayOutput() GalleryDataDiskImageResponseArrayOutput
	ToGalleryDataDiskImageResponseArrayOutputWithContext(context.Context) GalleryDataDiskImageResponseArrayOutput
}

type GalleryDataDiskImageResponseArray []GalleryDataDiskImageResponseInput

func (GalleryDataDiskImageResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImageResponse)(nil)).Elem()
}

func (i GalleryDataDiskImageResponseArray) ToGalleryDataDiskImageResponseArrayOutput() GalleryDataDiskImageResponseArrayOutput {
	return i.ToGalleryDataDiskImageResponseArrayOutputWithContext(context.Background())
}

func (i GalleryDataDiskImageResponseArray) ToGalleryDataDiskImageResponseArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryDataDiskImageResponseArrayOutput)
}

// This is the data disk image.
type GalleryDataDiskImageResponseOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryDataDiskImageResponse)(nil)).Elem()
}

func (o GalleryDataDiskImageResponseOutput) ToGalleryDataDiskImageResponseOutput() GalleryDataDiskImageResponseOutput {
	return o
}

func (o GalleryDataDiskImageResponseOutput) ToGalleryDataDiskImageResponseOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseOutput {
	return o
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryDataDiskImageResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
func (o GalleryDataDiskImageResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryDataDiskImageResponseOutput) SizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) int { return v.SizeInGB }).(pulumi.IntOutput)
}

// The gallery artifact version source.
func (o GalleryDataDiskImageResponseOutput) Source() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryDataDiskImageResponse) *GalleryArtifactVersionSourceResponse { return v.Source }).(GalleryArtifactVersionSourceResponsePtrOutput)
}

type GalleryDataDiskImageResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryDataDiskImageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryDataDiskImageResponse)(nil)).Elem()
}

func (o GalleryDataDiskImageResponseArrayOutput) ToGalleryDataDiskImageResponseArrayOutput() GalleryDataDiskImageResponseArrayOutput {
	return o
}

func (o GalleryDataDiskImageResponseArrayOutput) ToGalleryDataDiskImageResponseArrayOutputWithContext(ctx context.Context) GalleryDataDiskImageResponseArrayOutput {
	return o
}

func (o GalleryDataDiskImageResponseArrayOutput) Index(i pulumi.IntInput) GalleryDataDiskImageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryDataDiskImageResponse {
		return vs[0].([]GalleryDataDiskImageResponse)[vs[1].(int)]
	}).(GalleryDataDiskImageResponseOutput)
}

// Describes the gallery unique name.
type GalleryIdentifierResponse struct {
	// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
	UniqueName string `pulumi:"uniqueName"`
}

// GalleryIdentifierResponseInput is an input type that accepts GalleryIdentifierResponseArgs and GalleryIdentifierResponseOutput values.
// You can construct a concrete instance of `GalleryIdentifierResponseInput` via:
//
//          GalleryIdentifierResponseArgs{...}
type GalleryIdentifierResponseInput interface {
	pulumi.Input

	ToGalleryIdentifierResponseOutput() GalleryIdentifierResponseOutput
	ToGalleryIdentifierResponseOutputWithContext(context.Context) GalleryIdentifierResponseOutput
}

// Describes the gallery unique name.
type GalleryIdentifierResponseArgs struct {
	// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
	UniqueName pulumi.StringInput `pulumi:"uniqueName"`
}

func (GalleryIdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryIdentifierResponse)(nil)).Elem()
}

func (i GalleryIdentifierResponseArgs) ToGalleryIdentifierResponseOutput() GalleryIdentifierResponseOutput {
	return i.ToGalleryIdentifierResponseOutputWithContext(context.Background())
}

func (i GalleryIdentifierResponseArgs) ToGalleryIdentifierResponseOutputWithContext(ctx context.Context) GalleryIdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryIdentifierResponseOutput)
}

func (i GalleryIdentifierResponseArgs) ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput {
	return i.ToGalleryIdentifierResponsePtrOutputWithContext(context.Background())
}

func (i GalleryIdentifierResponseArgs) ToGalleryIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryIdentifierResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryIdentifierResponseOutput).ToGalleryIdentifierResponsePtrOutputWithContext(ctx)
}

// GalleryIdentifierResponsePtrInput is an input type that accepts GalleryIdentifierResponseArgs, GalleryIdentifierResponsePtr and GalleryIdentifierResponsePtrOutput values.
// You can construct a concrete instance of `GalleryIdentifierResponsePtrInput` via:
//
//          GalleryIdentifierResponseArgs{...}
//
//  or:
//
//          nil
type GalleryIdentifierResponsePtrInput interface {
	pulumi.Input

	ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput
	ToGalleryIdentifierResponsePtrOutputWithContext(context.Context) GalleryIdentifierResponsePtrOutput
}

type galleryIdentifierResponsePtrType GalleryIdentifierResponseArgs

func GalleryIdentifierResponsePtr(v *GalleryIdentifierResponseArgs) GalleryIdentifierResponsePtrInput {
	return (*galleryIdentifierResponsePtrType)(v)
}

func (*galleryIdentifierResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryIdentifierResponse)(nil)).Elem()
}

func (i *galleryIdentifierResponsePtrType) ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput {
	return i.ToGalleryIdentifierResponsePtrOutputWithContext(context.Background())
}

func (i *galleryIdentifierResponsePtrType) ToGalleryIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryIdentifierResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryIdentifierResponsePtrOutput)
}

// Describes the gallery unique name.
type GalleryIdentifierResponseOutput struct{ *pulumi.OutputState }

func (GalleryIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryIdentifierResponse)(nil)).Elem()
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponseOutput() GalleryIdentifierResponseOutput {
	return o
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponseOutputWithContext(ctx context.Context) GalleryIdentifierResponseOutput {
	return o
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput {
	return o.ToGalleryIdentifierResponsePtrOutputWithContext(context.Background())
}

func (o GalleryIdentifierResponseOutput) ToGalleryIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryIdentifierResponsePtrOutput {
	return o.ApplyT(func(v GalleryIdentifierResponse) *GalleryIdentifierResponse {
		return &v
	}).(GalleryIdentifierResponsePtrOutput)
}

// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
func (o GalleryIdentifierResponseOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryIdentifierResponse) string { return v.UniqueName }).(pulumi.StringOutput)
}

type GalleryIdentifierResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryIdentifierResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryIdentifierResponse)(nil)).Elem()
}

func (o GalleryIdentifierResponsePtrOutput) ToGalleryIdentifierResponsePtrOutput() GalleryIdentifierResponsePtrOutput {
	return o
}

func (o GalleryIdentifierResponsePtrOutput) ToGalleryIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryIdentifierResponsePtrOutput {
	return o
}

func (o GalleryIdentifierResponsePtrOutput) Elem() GalleryIdentifierResponseOutput {
	return o.ApplyT(func(v *GalleryIdentifierResponse) GalleryIdentifierResponse { return *v }).(GalleryIdentifierResponseOutput)
}

// The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
func (o GalleryIdentifierResponsePtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// A feature for gallery image.
type GalleryImageFeature struct {
	// The name of the gallery image feature.
	Name *string `pulumi:"name"`
	// The value of the gallery image feature.
	Value *string `pulumi:"value"`
}

// GalleryImageFeatureInput is an input type that accepts GalleryImageFeatureArgs and GalleryImageFeatureOutput values.
// You can construct a concrete instance of `GalleryImageFeatureInput` via:
//
//          GalleryImageFeatureArgs{...}
type GalleryImageFeatureInput interface {
	pulumi.Input

	ToGalleryImageFeatureOutput() GalleryImageFeatureOutput
	ToGalleryImageFeatureOutputWithContext(context.Context) GalleryImageFeatureOutput
}

// A feature for gallery image.
type GalleryImageFeatureArgs struct {
	// The name of the gallery image feature.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the gallery image feature.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GalleryImageFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeature)(nil)).Elem()
}

func (i GalleryImageFeatureArgs) ToGalleryImageFeatureOutput() GalleryImageFeatureOutput {
	return i.ToGalleryImageFeatureOutputWithContext(context.Background())
}

func (i GalleryImageFeatureArgs) ToGalleryImageFeatureOutputWithContext(ctx context.Context) GalleryImageFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureOutput)
}

// GalleryImageFeatureArrayInput is an input type that accepts GalleryImageFeatureArray and GalleryImageFeatureArrayOutput values.
// You can construct a concrete instance of `GalleryImageFeatureArrayInput` via:
//
//          GalleryImageFeatureArray{ GalleryImageFeatureArgs{...} }
type GalleryImageFeatureArrayInput interface {
	pulumi.Input

	ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput
	ToGalleryImageFeatureArrayOutputWithContext(context.Context) GalleryImageFeatureArrayOutput
}

type GalleryImageFeatureArray []GalleryImageFeatureInput

func (GalleryImageFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeature)(nil)).Elem()
}

func (i GalleryImageFeatureArray) ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput {
	return i.ToGalleryImageFeatureArrayOutputWithContext(context.Background())
}

func (i GalleryImageFeatureArray) ToGalleryImageFeatureArrayOutputWithContext(ctx context.Context) GalleryImageFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureArrayOutput)
}

// A feature for gallery image.
type GalleryImageFeatureOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeature)(nil)).Elem()
}

func (o GalleryImageFeatureOutput) ToGalleryImageFeatureOutput() GalleryImageFeatureOutput {
	return o
}

func (o GalleryImageFeatureOutput) ToGalleryImageFeatureOutputWithContext(ctx context.Context) GalleryImageFeatureOutput {
	return o
}

// The name of the gallery image feature.
func (o GalleryImageFeatureOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeature) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the gallery image feature.
func (o GalleryImageFeatureOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeature) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GalleryImageFeatureArrayOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeature)(nil)).Elem()
}

func (o GalleryImageFeatureArrayOutput) ToGalleryImageFeatureArrayOutput() GalleryImageFeatureArrayOutput {
	return o
}

func (o GalleryImageFeatureArrayOutput) ToGalleryImageFeatureArrayOutputWithContext(ctx context.Context) GalleryImageFeatureArrayOutput {
	return o
}

func (o GalleryImageFeatureArrayOutput) Index(i pulumi.IntInput) GalleryImageFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryImageFeature {
		return vs[0].([]GalleryImageFeature)[vs[1].(int)]
	}).(GalleryImageFeatureOutput)
}

// A feature for gallery image.
type GalleryImageFeatureResponse struct {
	// The name of the gallery image feature.
	Name *string `pulumi:"name"`
	// The value of the gallery image feature.
	Value *string `pulumi:"value"`
}

// GalleryImageFeatureResponseInput is an input type that accepts GalleryImageFeatureResponseArgs and GalleryImageFeatureResponseOutput values.
// You can construct a concrete instance of `GalleryImageFeatureResponseInput` via:
//
//          GalleryImageFeatureResponseArgs{...}
type GalleryImageFeatureResponseInput interface {
	pulumi.Input

	ToGalleryImageFeatureResponseOutput() GalleryImageFeatureResponseOutput
	ToGalleryImageFeatureResponseOutputWithContext(context.Context) GalleryImageFeatureResponseOutput
}

// A feature for gallery image.
type GalleryImageFeatureResponseArgs struct {
	// The name of the gallery image feature.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the gallery image feature.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GalleryImageFeatureResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeatureResponse)(nil)).Elem()
}

func (i GalleryImageFeatureResponseArgs) ToGalleryImageFeatureResponseOutput() GalleryImageFeatureResponseOutput {
	return i.ToGalleryImageFeatureResponseOutputWithContext(context.Background())
}

func (i GalleryImageFeatureResponseArgs) ToGalleryImageFeatureResponseOutputWithContext(ctx context.Context) GalleryImageFeatureResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureResponseOutput)
}

// GalleryImageFeatureResponseArrayInput is an input type that accepts GalleryImageFeatureResponseArray and GalleryImageFeatureResponseArrayOutput values.
// You can construct a concrete instance of `GalleryImageFeatureResponseArrayInput` via:
//
//          GalleryImageFeatureResponseArray{ GalleryImageFeatureResponseArgs{...} }
type GalleryImageFeatureResponseArrayInput interface {
	pulumi.Input

	ToGalleryImageFeatureResponseArrayOutput() GalleryImageFeatureResponseArrayOutput
	ToGalleryImageFeatureResponseArrayOutputWithContext(context.Context) GalleryImageFeatureResponseArrayOutput
}

type GalleryImageFeatureResponseArray []GalleryImageFeatureResponseInput

func (GalleryImageFeatureResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeatureResponse)(nil)).Elem()
}

func (i GalleryImageFeatureResponseArray) ToGalleryImageFeatureResponseArrayOutput() GalleryImageFeatureResponseArrayOutput {
	return i.ToGalleryImageFeatureResponseArrayOutputWithContext(context.Background())
}

func (i GalleryImageFeatureResponseArray) ToGalleryImageFeatureResponseArrayOutputWithContext(ctx context.Context) GalleryImageFeatureResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageFeatureResponseArrayOutput)
}

// A feature for gallery image.
type GalleryImageFeatureResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageFeatureResponse)(nil)).Elem()
}

func (o GalleryImageFeatureResponseOutput) ToGalleryImageFeatureResponseOutput() GalleryImageFeatureResponseOutput {
	return o
}

func (o GalleryImageFeatureResponseOutput) ToGalleryImageFeatureResponseOutputWithContext(ctx context.Context) GalleryImageFeatureResponseOutput {
	return o
}

// The name of the gallery image feature.
func (o GalleryImageFeatureResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeatureResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the gallery image feature.
func (o GalleryImageFeatureResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageFeatureResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GalleryImageFeatureResponseArrayOutput struct{ *pulumi.OutputState }

func (GalleryImageFeatureResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GalleryImageFeatureResponse)(nil)).Elem()
}

func (o GalleryImageFeatureResponseArrayOutput) ToGalleryImageFeatureResponseArrayOutput() GalleryImageFeatureResponseArrayOutput {
	return o
}

func (o GalleryImageFeatureResponseArrayOutput) ToGalleryImageFeatureResponseArrayOutputWithContext(ctx context.Context) GalleryImageFeatureResponseArrayOutput {
	return o
}

func (o GalleryImageFeatureResponseArrayOutput) Index(i pulumi.IntInput) GalleryImageFeatureResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GalleryImageFeatureResponse {
		return vs[0].([]GalleryImageFeatureResponse)[vs[1].(int)]
	}).(GalleryImageFeatureResponseOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifier struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// GalleryImageIdentifierInput is an input type that accepts GalleryImageIdentifierArgs and GalleryImageIdentifierOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierInput` via:
//
//          GalleryImageIdentifierArgs{...}
type GalleryImageIdentifierInput interface {
	pulumi.Input

	ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput
	ToGalleryImageIdentifierOutputWithContext(context.Context) GalleryImageIdentifierOutput
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierArgs struct {
	// The name of the gallery image definition offer.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GalleryImageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return i.ToGalleryImageIdentifierOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierOutput)
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return i.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierOutput).ToGalleryImageIdentifierPtrOutputWithContext(ctx)
}

// GalleryImageIdentifierPtrInput is an input type that accepts GalleryImageIdentifierArgs, GalleryImageIdentifierPtr and GalleryImageIdentifierPtrOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierPtrInput` via:
//
//          GalleryImageIdentifierArgs{...}
//
//  or:
//
//          nil
type GalleryImageIdentifierPtrInput interface {
	pulumi.Input

	ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput
	ToGalleryImageIdentifierPtrOutputWithContext(context.Context) GalleryImageIdentifierPtrOutput
}

type galleryImageIdentifierPtrType GalleryImageIdentifierArgs

func GalleryImageIdentifierPtr(v *GalleryImageIdentifierArgs) GalleryImageIdentifierPtrInput {
	return (*galleryImageIdentifierPtrType)(v)
}

func (*galleryImageIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifier)(nil)).Elem()
}

func (i *galleryImageIdentifierPtrType) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return i.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (i *galleryImageIdentifierPtrType) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierPtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return o
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return o
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return o.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) *GalleryImageIdentifier {
		return &v
	}).(GalleryImageIdentifierPtrOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Sku }).(pulumi.StringOutput)
}

type GalleryImageIdentifierPtrOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifier)(nil)).Elem()
}

func (o GalleryImageIdentifierPtrOutput) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return o
}

func (o GalleryImageIdentifierPtrOutput) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return o
}

func (o GalleryImageIdentifierPtrOutput) Elem() GalleryImageIdentifierOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) GalleryImageIdentifier { return *v }).(GalleryImageIdentifierOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierPtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponse struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// GalleryImageIdentifierResponseInput is an input type that accepts GalleryImageIdentifierResponseArgs and GalleryImageIdentifierResponseOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierResponseInput` via:
//
//          GalleryImageIdentifierResponseArgs{...}
type GalleryImageIdentifierResponseInput interface {
	pulumi.Input

	ToGalleryImageIdentifierResponseOutput() GalleryImageIdentifierResponseOutput
	ToGalleryImageIdentifierResponseOutputWithContext(context.Context) GalleryImageIdentifierResponseOutput
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponseArgs struct {
	// The name of the gallery image definition offer.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GalleryImageIdentifierResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifierResponse)(nil)).Elem()
}

func (i GalleryImageIdentifierResponseArgs) ToGalleryImageIdentifierResponseOutput() GalleryImageIdentifierResponseOutput {
	return i.ToGalleryImageIdentifierResponseOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierResponseArgs) ToGalleryImageIdentifierResponseOutputWithContext(ctx context.Context) GalleryImageIdentifierResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierResponseOutput)
}

func (i GalleryImageIdentifierResponseArgs) ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput {
	return i.ToGalleryImageIdentifierResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierResponseArgs) ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryImageIdentifierResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierResponseOutput).ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx)
}

// GalleryImageIdentifierResponsePtrInput is an input type that accepts GalleryImageIdentifierResponseArgs, GalleryImageIdentifierResponsePtr and GalleryImageIdentifierResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierResponsePtrInput` via:
//
//          GalleryImageIdentifierResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageIdentifierResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput
	ToGalleryImageIdentifierResponsePtrOutputWithContext(context.Context) GalleryImageIdentifierResponsePtrOutput
}

type galleryImageIdentifierResponsePtrType GalleryImageIdentifierResponseArgs

func GalleryImageIdentifierResponsePtr(v *GalleryImageIdentifierResponseArgs) GalleryImageIdentifierResponsePtrInput {
	return (*galleryImageIdentifierResponsePtrType)(v)
}

func (*galleryImageIdentifierResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifierResponse)(nil)).Elem()
}

func (i *galleryImageIdentifierResponsePtrType) ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput {
	return i.ToGalleryImageIdentifierResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageIdentifierResponsePtrType) ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryImageIdentifierResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierResponsePtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifierResponse)(nil)).Elem()
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutput() GalleryImageIdentifierResponseOutput {
	return o
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutputWithContext(ctx context.Context) GalleryImageIdentifierResponseOutput {
	return o
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput {
	return o.ToGalleryImageIdentifierResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryImageIdentifierResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) *GalleryImageIdentifierResponse {
		return &v
	}).(GalleryImageIdentifierResponsePtrOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierResponseOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierResponseOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Sku }).(pulumi.StringOutput)
}

type GalleryImageIdentifierResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifierResponse)(nil)).Elem()
}

func (o GalleryImageIdentifierResponsePtrOutput) ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput {
	return o
}

func (o GalleryImageIdentifierResponsePtrOutput) ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryImageIdentifierResponsePtrOutput {
	return o
}

func (o GalleryImageIdentifierResponsePtrOutput) Elem() GalleryImageIdentifierResponseOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) GalleryImageIdentifierResponse { return *v }).(GalleryImageIdentifierResponseOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfile struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegion `pulumi:"targetRegions"`
}

// GalleryImageVersionPublishingProfileInput is an input type that accepts GalleryImageVersionPublishingProfileArgs and GalleryImageVersionPublishingProfileOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfileInput` via:
//
//          GalleryImageVersionPublishingProfileArgs{...}
type GalleryImageVersionPublishingProfileInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput
	ToGalleryImageVersionPublishingProfileOutputWithContext(context.Context) GalleryImageVersionPublishingProfileOutput
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileArgs struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput `pulumi:"excludeFromLatest"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionArrayInput `pulumi:"targetRegions"`
}

func (GalleryImageVersionPublishingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput {
	return i.ToGalleryImageVersionPublishingProfileOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileOutput)
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return i.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileArgs) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileOutput).ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx)
}

// GalleryImageVersionPublishingProfilePtrInput is an input type that accepts GalleryImageVersionPublishingProfileArgs, GalleryImageVersionPublishingProfilePtr and GalleryImageVersionPublishingProfilePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfilePtrInput` via:
//
//          GalleryImageVersionPublishingProfileArgs{...}
//
//  or:
//
//          nil
type GalleryImageVersionPublishingProfilePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput
	ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Context) GalleryImageVersionPublishingProfilePtrOutput
}

type galleryImageVersionPublishingProfilePtrType GalleryImageVersionPublishingProfileArgs

func GalleryImageVersionPublishingProfilePtr(v *GalleryImageVersionPublishingProfileArgs) GalleryImageVersionPublishingProfilePtrInput {
	return (*galleryImageVersionPublishingProfilePtrType)(v)
}

func (*galleryImageVersionPublishingProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (i *galleryImageVersionPublishingProfilePtrType) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return i.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionPublishingProfilePtrType) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfilePtrOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfileOutput() GalleryImageVersionPublishingProfileOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfileOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return o.ToGalleryImageVersionPublishingProfilePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionPublishingProfileOutput) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *GalleryImageVersionPublishingProfile {
		return &v
	}).(GalleryImageVersionPublishingProfilePtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfile) []TargetRegion { return v.TargetRegions }).(TargetRegionArrayOutput)
}

type GalleryImageVersionPublishingProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfile)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfilePtrOutput) ToGalleryImageVersionPublishingProfilePtrOutput() GalleryImageVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfilePtrOutput) ToGalleryImageVersionPublishingProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfilePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfilePtrOutput) Elem() GalleryImageVersionPublishingProfileOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) GalleryImageVersionPublishingProfile { return *v }).(GalleryImageVersionPublishingProfileOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfilePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfilePtrOutput) TargetRegions() TargetRegionArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfile) []TargetRegion {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionArrayOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileResponse struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The timestamp for when the gallery image version is published.
	PublishedDate string `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount *int `pulumi:"replicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions []TargetRegionResponse `pulumi:"targetRegions"`
}

// GalleryImageVersionPublishingProfileResponseInput is an input type that accepts GalleryImageVersionPublishingProfileResponseArgs and GalleryImageVersionPublishingProfileResponseOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfileResponseInput` via:
//
//          GalleryImageVersionPublishingProfileResponseArgs{...}
type GalleryImageVersionPublishingProfileResponseInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfileResponseOutput() GalleryImageVersionPublishingProfileResponseOutput
	ToGalleryImageVersionPublishingProfileResponseOutputWithContext(context.Context) GalleryImageVersionPublishingProfileResponseOutput
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileResponseArgs struct {
	// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
	EndOfLifeDate pulumi.StringPtrInput `pulumi:"endOfLifeDate"`
	// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
	ExcludeFromLatest pulumi.BoolPtrInput `pulumi:"excludeFromLatest"`
	// The timestamp for when the gallery image version is published.
	PublishedDate pulumi.StringInput `pulumi:"publishedDate"`
	// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
	ReplicaCount pulumi.IntPtrInput `pulumi:"replicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
	// The target regions where the Image Version is going to be replicated to. This property is updatable.
	TargetRegions TargetRegionResponseArrayInput `pulumi:"targetRegions"`
}

func (GalleryImageVersionPublishingProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (i GalleryImageVersionPublishingProfileResponseArgs) ToGalleryImageVersionPublishingProfileResponseOutput() GalleryImageVersionPublishingProfileResponseOutput {
	return i.ToGalleryImageVersionPublishingProfileResponseOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileResponseArgs) ToGalleryImageVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileResponseOutput)
}

func (i GalleryImageVersionPublishingProfileResponseArgs) ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput {
	return i.ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionPublishingProfileResponseArgs) ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileResponseOutput).ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx)
}

// GalleryImageVersionPublishingProfileResponsePtrInput is an input type that accepts GalleryImageVersionPublishingProfileResponseArgs, GalleryImageVersionPublishingProfileResponsePtr and GalleryImageVersionPublishingProfileResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionPublishingProfileResponsePtrInput` via:
//
//          GalleryImageVersionPublishingProfileResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageVersionPublishingProfileResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput
	ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput
}

type galleryImageVersionPublishingProfileResponsePtrType GalleryImageVersionPublishingProfileResponseArgs

func GalleryImageVersionPublishingProfileResponsePtr(v *GalleryImageVersionPublishingProfileResponseArgs) GalleryImageVersionPublishingProfileResponsePtrInput {
	return (*galleryImageVersionPublishingProfileResponsePtrType)(v)
}

func (*galleryImageVersionPublishingProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (i *galleryImageVersionPublishingProfileResponsePtrType) ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput {
	return i.ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionPublishingProfileResponsePtrType) ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPublishingProfileResponsePtrOutput)
}

// The publishing profile of a gallery image Version.
type GalleryImageVersionPublishingProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponseOutput() GalleryImageVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponseOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o.ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionPublishingProfileResponseOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *GalleryImageVersionPublishingProfileResponse {
		return &v
	}).(GalleryImageVersionPublishingProfileResponsePtrOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *string { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileResponseOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *bool { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryImageVersionPublishingProfileResponseOutput) PublishedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) string { return v.PublishedDate }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponseOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionPublishingProfileResponse) []TargetRegionResponse { return v.TargetRegions }).(TargetRegionResponseArrayOutput)
}

type GalleryImageVersionPublishingProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPublishingProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionPublishingProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutput() GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ToGalleryImageVersionPublishingProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionPublishingProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionPublishingProfileResponsePtrOutput) Elem() GalleryImageVersionPublishingProfileResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) GalleryImageVersionPublishingProfileResponse {
		return *v
	}).(GalleryImageVersionPublishingProfileResponseOutput)
}

// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndOfLifeDate
	}).(pulumi.StringPtrOutput)
}

// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFromLatest
	}).(pulumi.BoolPtrOutput)
}

// The timestamp for when the gallery image version is published.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) PublishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublishedDate
	}).(pulumi.StringPtrOutput)
}

// The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicaCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// The target regions where the Image Version is going to be replicated to. This property is updatable.
func (o GalleryImageVersionPublishingProfileResponsePtrOutput) TargetRegions() TargetRegionResponseArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionPublishingProfileResponse) []TargetRegionResponse {
		if v == nil {
			return nil
		}
		return v.TargetRegions
	}).(TargetRegionResponseArrayOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfile struct {
	// A list of data disk images.
	DataDiskImages []GalleryDataDiskImage `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage *GalleryOSDiskImage `pulumi:"osDiskImage"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSource `pulumi:"source"`
}

// GalleryImageVersionStorageProfileInput is an input type that accepts GalleryImageVersionStorageProfileArgs and GalleryImageVersionStorageProfileOutput values.
// You can construct a concrete instance of `GalleryImageVersionStorageProfileInput` via:
//
//          GalleryImageVersionStorageProfileArgs{...}
type GalleryImageVersionStorageProfileInput interface {
	pulumi.Input

	ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput
	ToGalleryImageVersionStorageProfileOutputWithContext(context.Context) GalleryImageVersionStorageProfileOutput
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileArgs struct {
	// A list of data disk images.
	DataDiskImages GalleryDataDiskImageArrayInput `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage GalleryOSDiskImagePtrInput `pulumi:"osDiskImage"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourcePtrInput `pulumi:"source"`
}

func (GalleryImageVersionStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput {
	return i.ToGalleryImageVersionStorageProfileOutputWithContext(context.Background())
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfileOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileOutput)
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfilePtrOutput() GalleryImageVersionStorageProfilePtrOutput {
	return i.ToGalleryImageVersionStorageProfilePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionStorageProfileArgs) ToGalleryImageVersionStorageProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileOutput).ToGalleryImageVersionStorageProfilePtrOutputWithContext(ctx)
}

// GalleryImageVersionStorageProfilePtrInput is an input type that accepts GalleryImageVersionStorageProfileArgs, GalleryImageVersionStorageProfilePtr and GalleryImageVersionStorageProfilePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionStorageProfilePtrInput` via:
//
//          GalleryImageVersionStorageProfileArgs{...}
//
//  or:
//
//          nil
type GalleryImageVersionStorageProfilePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionStorageProfilePtrOutput() GalleryImageVersionStorageProfilePtrOutput
	ToGalleryImageVersionStorageProfilePtrOutputWithContext(context.Context) GalleryImageVersionStorageProfilePtrOutput
}

type galleryImageVersionStorageProfilePtrType GalleryImageVersionStorageProfileArgs

func GalleryImageVersionStorageProfilePtr(v *GalleryImageVersionStorageProfileArgs) GalleryImageVersionStorageProfilePtrInput {
	return (*galleryImageVersionStorageProfilePtrType)(v)
}

func (*galleryImageVersionStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (i *galleryImageVersionStorageProfilePtrType) ToGalleryImageVersionStorageProfilePtrOutput() GalleryImageVersionStorageProfilePtrOutput {
	return i.ToGalleryImageVersionStorageProfilePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionStorageProfilePtrType) ToGalleryImageVersionStorageProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfilePtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfileOutput() GalleryImageVersionStorageProfileOutput {
	return o
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfileOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileOutput {
	return o
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfilePtrOutput() GalleryImageVersionStorageProfilePtrOutput {
	return o.ToGalleryImageVersionStorageProfilePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionStorageProfileOutput) ToGalleryImageVersionStorageProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfilePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) *GalleryImageVersionStorageProfile {
		return &v
	}).(GalleryImageVersionStorageProfilePtrOutput)
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfileOutput) DataDiskImages() GalleryDataDiskImageArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) []GalleryDataDiskImage { return v.DataDiskImages }).(GalleryDataDiskImageArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileOutput) OsDiskImage() GalleryOSDiskImagePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) *GalleryOSDiskImage { return v.OsDiskImage }).(GalleryOSDiskImagePtrOutput)
}

// The gallery artifact version source.
func (o GalleryImageVersionStorageProfileOutput) Source() GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfile) *GalleryArtifactVersionSource { return v.Source }).(GalleryArtifactVersionSourcePtrOutput)
}

type GalleryImageVersionStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionStorageProfile)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfilePtrOutput) ToGalleryImageVersionStorageProfilePtrOutput() GalleryImageVersionStorageProfilePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfilePtrOutput) ToGalleryImageVersionStorageProfilePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfilePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfilePtrOutput) Elem() GalleryImageVersionStorageProfileOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfile) GalleryImageVersionStorageProfile { return *v }).(GalleryImageVersionStorageProfileOutput)
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfilePtrOutput) DataDiskImages() GalleryDataDiskImageArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfile) []GalleryDataDiskImage {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(GalleryDataDiskImageArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfilePtrOutput) OsDiskImage() GalleryOSDiskImagePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfile) *GalleryOSDiskImage {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(GalleryOSDiskImagePtrOutput)
}

// The gallery artifact version source.
func (o GalleryImageVersionStorageProfilePtrOutput) Source() GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfile) *GalleryArtifactVersionSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryArtifactVersionSourcePtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponse struct {
	// A list of data disk images.
	DataDiskImages []GalleryDataDiskImageResponse `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage *GalleryOSDiskImageResponse `pulumi:"osDiskImage"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSourceResponse `pulumi:"source"`
}

// GalleryImageVersionStorageProfileResponseInput is an input type that accepts GalleryImageVersionStorageProfileResponseArgs and GalleryImageVersionStorageProfileResponseOutput values.
// You can construct a concrete instance of `GalleryImageVersionStorageProfileResponseInput` via:
//
//          GalleryImageVersionStorageProfileResponseArgs{...}
type GalleryImageVersionStorageProfileResponseInput interface {
	pulumi.Input

	ToGalleryImageVersionStorageProfileResponseOutput() GalleryImageVersionStorageProfileResponseOutput
	ToGalleryImageVersionStorageProfileResponseOutputWithContext(context.Context) GalleryImageVersionStorageProfileResponseOutput
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponseArgs struct {
	// A list of data disk images.
	DataDiskImages GalleryDataDiskImageResponseArrayInput `pulumi:"dataDiskImages"`
	// This is the OS disk image.
	OsDiskImage GalleryOSDiskImageResponsePtrInput `pulumi:"osDiskImage"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourceResponsePtrInput `pulumi:"source"`
}

func (GalleryImageVersionStorageProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (i GalleryImageVersionStorageProfileResponseArgs) ToGalleryImageVersionStorageProfileResponseOutput() GalleryImageVersionStorageProfileResponseOutput {
	return i.ToGalleryImageVersionStorageProfileResponseOutputWithContext(context.Background())
}

func (i GalleryImageVersionStorageProfileResponseArgs) ToGalleryImageVersionStorageProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileResponseOutput)
}

func (i GalleryImageVersionStorageProfileResponseArgs) ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput {
	return i.ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionStorageProfileResponseArgs) ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileResponseOutput).ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx)
}

// GalleryImageVersionStorageProfileResponsePtrInput is an input type that accepts GalleryImageVersionStorageProfileResponseArgs, GalleryImageVersionStorageProfileResponsePtr and GalleryImageVersionStorageProfileResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionStorageProfileResponsePtrInput` via:
//
//          GalleryImageVersionStorageProfileResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageVersionStorageProfileResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput
	ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(context.Context) GalleryImageVersionStorageProfileResponsePtrOutput
}

type galleryImageVersionStorageProfileResponsePtrType GalleryImageVersionStorageProfileResponseArgs

func GalleryImageVersionStorageProfileResponsePtr(v *GalleryImageVersionStorageProfileResponseArgs) GalleryImageVersionStorageProfileResponsePtrInput {
	return (*galleryImageVersionStorageProfileResponsePtrType)(v)
}

func (*galleryImageVersionStorageProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (i *galleryImageVersionStorageProfileResponsePtrType) ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput {
	return i.ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionStorageProfileResponsePtrType) ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionStorageProfileResponsePtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutput() GalleryImageVersionStorageProfileResponseOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponseOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput {
	return o.ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryImageVersionStorageProfileResponse {
		return &v
	}).(GalleryImageVersionStorageProfileResponsePtrOutput)
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfileResponseOutput) DataDiskImages() GalleryDataDiskImageResponseArrayOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) []GalleryDataDiskImageResponse {
		return v.DataDiskImages
	}).(GalleryDataDiskImageResponseArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileResponseOutput) OsDiskImage() GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryOSDiskImageResponse { return v.OsDiskImage }).(GalleryOSDiskImageResponsePtrOutput)
}

// The gallery artifact version source.
func (o GalleryImageVersionStorageProfileResponseOutput) Source() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryArtifactVersionSourceResponse {
		return v.Source
	}).(GalleryArtifactVersionSourceResponsePtrOutput)
}

type GalleryImageVersionStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) Elem() GalleryImageVersionStorageProfileResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) GalleryImageVersionStorageProfileResponse {
		return *v
	}).(GalleryImageVersionStorageProfileResponseOutput)
}

// A list of data disk images.
func (o GalleryImageVersionStorageProfileResponsePtrOutput) DataDiskImages() GalleryDataDiskImageResponseArrayOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) []GalleryDataDiskImageResponse {
		if v == nil {
			return nil
		}
		return v.DataDiskImages
	}).(GalleryDataDiskImageResponseArrayOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileResponsePtrOutput) OsDiskImage() GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) *GalleryOSDiskImageResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(GalleryOSDiskImageResponsePtrOutput)
}

// The gallery artifact version source.
func (o GalleryImageVersionStorageProfileResponsePtrOutput) Source() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) *GalleryArtifactVersionSourceResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryArtifactVersionSourceResponsePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImage struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSource `pulumi:"source"`
}

// GalleryOSDiskImageInput is an input type that accepts GalleryOSDiskImageArgs and GalleryOSDiskImageOutput values.
// You can construct a concrete instance of `GalleryOSDiskImageInput` via:
//
//          GalleryOSDiskImageArgs{...}
type GalleryOSDiskImageInput interface {
	pulumi.Input

	ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput
	ToGalleryOSDiskImageOutputWithContext(context.Context) GalleryOSDiskImageOutput
}

// This is the OS disk image.
type GalleryOSDiskImageArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourcePtrInput `pulumi:"source"`
}

func (GalleryOSDiskImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImage)(nil)).Elem()
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput {
	return i.ToGalleryOSDiskImageOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImageOutputWithContext(ctx context.Context) GalleryOSDiskImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageOutput)
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return i.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageArgs) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageOutput).ToGalleryOSDiskImagePtrOutputWithContext(ctx)
}

// GalleryOSDiskImagePtrInput is an input type that accepts GalleryOSDiskImageArgs, GalleryOSDiskImagePtr and GalleryOSDiskImagePtrOutput values.
// You can construct a concrete instance of `GalleryOSDiskImagePtrInput` via:
//
//          GalleryOSDiskImageArgs{...}
//
//  or:
//
//          nil
type GalleryOSDiskImagePtrInput interface {
	pulumi.Input

	ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput
	ToGalleryOSDiskImagePtrOutputWithContext(context.Context) GalleryOSDiskImagePtrOutput
}

type galleryOSDiskImagePtrType GalleryOSDiskImageArgs

func GalleryOSDiskImagePtr(v *GalleryOSDiskImageArgs) GalleryOSDiskImagePtrInput {
	return (*galleryOSDiskImagePtrType)(v)
}

func (*galleryOSDiskImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImage)(nil)).Elem()
}

func (i *galleryOSDiskImagePtrType) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return i.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (i *galleryOSDiskImagePtrType) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImagePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImage)(nil)).Elem()
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImageOutput() GalleryOSDiskImageOutput {
	return o
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImageOutputWithContext(ctx context.Context) GalleryOSDiskImageOutput {
	return o
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return o.ToGalleryOSDiskImagePtrOutputWithContext(context.Background())
}

func (o GalleryOSDiskImageOutput) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImage) *GalleryOSDiskImage {
		return &v
	}).(GalleryOSDiskImagePtrOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImage) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// The gallery artifact version source.
func (o GalleryOSDiskImageOutput) Source() GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImage) *GalleryArtifactVersionSource { return v.Source }).(GalleryArtifactVersionSourcePtrOutput)
}

type GalleryOSDiskImagePtrOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImage)(nil)).Elem()
}

func (o GalleryOSDiskImagePtrOutput) ToGalleryOSDiskImagePtrOutput() GalleryOSDiskImagePtrOutput {
	return o
}

func (o GalleryOSDiskImagePtrOutput) ToGalleryOSDiskImagePtrOutputWithContext(ctx context.Context) GalleryOSDiskImagePtrOutput {
	return o
}

func (o GalleryOSDiskImagePtrOutput) Elem() GalleryOSDiskImageOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) GalleryOSDiskImage { return *v }).(GalleryOSDiskImageOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImagePtrOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) *string {
		if v == nil {
			return nil
		}
		return v.HostCaching
	}).(pulumi.StringPtrOutput)
}

// The gallery artifact version source.
func (o GalleryOSDiskImagePtrOutput) Source() GalleryArtifactVersionSourcePtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImage) *GalleryArtifactVersionSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryArtifactVersionSourcePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageResponse struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching *string `pulumi:"hostCaching"`
	// This property indicates the size of the VHD to be created.
	SizeInGB int `pulumi:"sizeInGB"`
	// The gallery artifact version source.
	Source *GalleryArtifactVersionSourceResponse `pulumi:"source"`
}

// GalleryOSDiskImageResponseInput is an input type that accepts GalleryOSDiskImageResponseArgs and GalleryOSDiskImageResponseOutput values.
// You can construct a concrete instance of `GalleryOSDiskImageResponseInput` via:
//
//          GalleryOSDiskImageResponseArgs{...}
type GalleryOSDiskImageResponseInput interface {
	pulumi.Input

	ToGalleryOSDiskImageResponseOutput() GalleryOSDiskImageResponseOutput
	ToGalleryOSDiskImageResponseOutputWithContext(context.Context) GalleryOSDiskImageResponseOutput
}

// This is the OS disk image.
type GalleryOSDiskImageResponseArgs struct {
	// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
	HostCaching pulumi.StringPtrInput `pulumi:"hostCaching"`
	// This property indicates the size of the VHD to be created.
	SizeInGB pulumi.IntInput `pulumi:"sizeInGB"`
	// The gallery artifact version source.
	Source GalleryArtifactVersionSourceResponsePtrInput `pulumi:"source"`
}

func (GalleryOSDiskImageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImageResponse)(nil)).Elem()
}

func (i GalleryOSDiskImageResponseArgs) ToGalleryOSDiskImageResponseOutput() GalleryOSDiskImageResponseOutput {
	return i.ToGalleryOSDiskImageResponseOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageResponseArgs) ToGalleryOSDiskImageResponseOutputWithContext(ctx context.Context) GalleryOSDiskImageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageResponseOutput)
}

func (i GalleryOSDiskImageResponseArgs) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return i.ToGalleryOSDiskImageResponsePtrOutputWithContext(context.Background())
}

func (i GalleryOSDiskImageResponseArgs) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageResponseOutput).ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx)
}

// GalleryOSDiskImageResponsePtrInput is an input type that accepts GalleryOSDiskImageResponseArgs, GalleryOSDiskImageResponsePtr and GalleryOSDiskImageResponsePtrOutput values.
// You can construct a concrete instance of `GalleryOSDiskImageResponsePtrInput` via:
//
//          GalleryOSDiskImageResponseArgs{...}
//
//  or:
//
//          nil
type GalleryOSDiskImageResponsePtrInput interface {
	pulumi.Input

	ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput
	ToGalleryOSDiskImageResponsePtrOutputWithContext(context.Context) GalleryOSDiskImageResponsePtrOutput
}

type galleryOSDiskImageResponsePtrType GalleryOSDiskImageResponseArgs

func GalleryOSDiskImageResponsePtr(v *GalleryOSDiskImageResponseArgs) GalleryOSDiskImageResponsePtrInput {
	return (*galleryOSDiskImageResponsePtrType)(v)
}

func (*galleryOSDiskImageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImageResponse)(nil)).Elem()
}

func (i *galleryOSDiskImageResponsePtrType) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return i.ToGalleryOSDiskImageResponsePtrOutputWithContext(context.Background())
}

func (i *galleryOSDiskImageResponsePtrType) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryOSDiskImageResponsePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageResponseOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutput() GalleryOSDiskImageResponseOutput {
	return o
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutputWithContext(ctx context.Context) GalleryOSDiskImageResponseOutput {
	return o
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return o.ToGalleryOSDiskImageResponsePtrOutputWithContext(context.Background())
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) *GalleryOSDiskImageResponse {
		return &v
	}).(GalleryOSDiskImageResponsePtrOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageResponseOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) *string { return v.HostCaching }).(pulumi.StringPtrOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponseOutput) SizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) int { return v.SizeInGB }).(pulumi.IntOutput)
}

// The gallery artifact version source.
func (o GalleryOSDiskImageResponseOutput) Source() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) *GalleryArtifactVersionSourceResponse { return v.Source }).(GalleryArtifactVersionSourceResponsePtrOutput)
}

type GalleryOSDiskImageResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) Elem() GalleryOSDiskImageResponseOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) GalleryOSDiskImageResponse { return *v }).(GalleryOSDiskImageResponseOutput)
}

// The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
func (o GalleryOSDiskImageResponsePtrOutput) HostCaching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostCaching
	}).(pulumi.StringPtrOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponsePtrOutput) SizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SizeInGB
	}).(pulumi.IntPtrOutput)
}

// The gallery artifact version source.
func (o GalleryOSDiskImageResponsePtrOutput) Source() GalleryArtifactVersionSourceResponsePtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *GalleryArtifactVersionSourceResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(GalleryArtifactVersionSourceResponsePtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlan struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// The product ID.
	Product *string `pulumi:"product"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// ImagePurchasePlanInput is an input type that accepts ImagePurchasePlanArgs and ImagePurchasePlanOutput values.
// You can construct a concrete instance of `ImagePurchasePlanInput` via:
//
//          ImagePurchasePlanArgs{...}
type ImagePurchasePlanInput interface {
	pulumi.Input

	ToImagePurchasePlanOutput() ImagePurchasePlanOutput
	ToImagePurchasePlanOutputWithContext(context.Context) ImagePurchasePlanOutput
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The product ID.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (ImagePurchasePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlan)(nil)).Elem()
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanOutput() ImagePurchasePlanOutput {
	return i.ToImagePurchasePlanOutputWithContext(context.Background())
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanOutputWithContext(ctx context.Context) ImagePurchasePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanOutput)
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return i.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (i ImagePurchasePlanArgs) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanOutput).ToImagePurchasePlanPtrOutputWithContext(ctx)
}

// ImagePurchasePlanPtrInput is an input type that accepts ImagePurchasePlanArgs, ImagePurchasePlanPtr and ImagePurchasePlanPtrOutput values.
// You can construct a concrete instance of `ImagePurchasePlanPtrInput` via:
//
//          ImagePurchasePlanArgs{...}
//
//  or:
//
//          nil
type ImagePurchasePlanPtrInput interface {
	pulumi.Input

	ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput
	ToImagePurchasePlanPtrOutputWithContext(context.Context) ImagePurchasePlanPtrOutput
}

type imagePurchasePlanPtrType ImagePurchasePlanArgs

func ImagePurchasePlanPtr(v *ImagePurchasePlanArgs) ImagePurchasePlanPtrInput {
	return (*imagePurchasePlanPtrType)(v)
}

func (*imagePurchasePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlan)(nil)).Elem()
}

func (i *imagePurchasePlanPtrType) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return i.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (i *imagePurchasePlanPtrType) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanPtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlan)(nil)).Elem()
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanOutput() ImagePurchasePlanOutput {
	return o
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanOutputWithContext(ctx context.Context) ImagePurchasePlanOutput {
	return o
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return o.ToImagePurchasePlanPtrOutputWithContext(context.Background())
}

func (o ImagePurchasePlanOutput) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *ImagePurchasePlan {
		return &v
	}).(ImagePurchasePlanPtrOutput)
}

// The plan ID.
func (o ImagePurchasePlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlan) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type ImagePurchasePlanPtrOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlan)(nil)).Elem()
}

func (o ImagePurchasePlanPtrOutput) ToImagePurchasePlanPtrOutput() ImagePurchasePlanPtrOutput {
	return o
}

func (o ImagePurchasePlanPtrOutput) ToImagePurchasePlanPtrOutputWithContext(ctx context.Context) ImagePurchasePlanPtrOutput {
	return o
}

func (o ImagePurchasePlanPtrOutput) Elem() ImagePurchasePlanOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) ImagePurchasePlan { return *v }).(ImagePurchasePlanOutput)
}

// The plan ID.
func (o ImagePurchasePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlan) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanResponse struct {
	// The plan ID.
	Name *string `pulumi:"name"`
	// The product ID.
	Product *string `pulumi:"product"`
	// The publisher ID.
	Publisher *string `pulumi:"publisher"`
}

// ImagePurchasePlanResponseInput is an input type that accepts ImagePurchasePlanResponseArgs and ImagePurchasePlanResponseOutput values.
// You can construct a concrete instance of `ImagePurchasePlanResponseInput` via:
//
//          ImagePurchasePlanResponseArgs{...}
type ImagePurchasePlanResponseInput interface {
	pulumi.Input

	ToImagePurchasePlanResponseOutput() ImagePurchasePlanResponseOutput
	ToImagePurchasePlanResponseOutputWithContext(context.Context) ImagePurchasePlanResponseOutput
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanResponseArgs struct {
	// The plan ID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The product ID.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// The publisher ID.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
}

func (ImagePurchasePlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlanResponse)(nil)).Elem()
}

func (i ImagePurchasePlanResponseArgs) ToImagePurchasePlanResponseOutput() ImagePurchasePlanResponseOutput {
	return i.ToImagePurchasePlanResponseOutputWithContext(context.Background())
}

func (i ImagePurchasePlanResponseArgs) ToImagePurchasePlanResponseOutputWithContext(ctx context.Context) ImagePurchasePlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanResponseOutput)
}

func (i ImagePurchasePlanResponseArgs) ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput {
	return i.ToImagePurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i ImagePurchasePlanResponseArgs) ToImagePurchasePlanResponsePtrOutputWithContext(ctx context.Context) ImagePurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanResponseOutput).ToImagePurchasePlanResponsePtrOutputWithContext(ctx)
}

// ImagePurchasePlanResponsePtrInput is an input type that accepts ImagePurchasePlanResponseArgs, ImagePurchasePlanResponsePtr and ImagePurchasePlanResponsePtrOutput values.
// You can construct a concrete instance of `ImagePurchasePlanResponsePtrInput` via:
//
//          ImagePurchasePlanResponseArgs{...}
//
//  or:
//
//          nil
type ImagePurchasePlanResponsePtrInput interface {
	pulumi.Input

	ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput
	ToImagePurchasePlanResponsePtrOutputWithContext(context.Context) ImagePurchasePlanResponsePtrOutput
}

type imagePurchasePlanResponsePtrType ImagePurchasePlanResponseArgs

func ImagePurchasePlanResponsePtr(v *ImagePurchasePlanResponseArgs) ImagePurchasePlanResponsePtrInput {
	return (*imagePurchasePlanResponsePtrType)(v)
}

func (*imagePurchasePlanResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlanResponse)(nil)).Elem()
}

func (i *imagePurchasePlanResponsePtrType) ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput {
	return i.ToImagePurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (i *imagePurchasePlanResponsePtrType) ToImagePurchasePlanResponsePtrOutputWithContext(ctx context.Context) ImagePurchasePlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePurchasePlanResponsePtrOutput)
}

// Describes the gallery image definition purchase plan. This is used by marketplace images.
type ImagePurchasePlanResponseOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePurchasePlanResponse)(nil)).Elem()
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponseOutput() ImagePurchasePlanResponseOutput {
	return o
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponseOutputWithContext(ctx context.Context) ImagePurchasePlanResponseOutput {
	return o
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput {
	return o.ToImagePurchasePlanResponsePtrOutputWithContext(context.Background())
}

func (o ImagePurchasePlanResponseOutput) ToImagePurchasePlanResponsePtrOutputWithContext(ctx context.Context) ImagePurchasePlanResponsePtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *ImagePurchasePlanResponse {
		return &v
	}).(ImagePurchasePlanResponsePtrOutput)
}

// The plan ID.
func (o ImagePurchasePlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePurchasePlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

type ImagePurchasePlanResponsePtrOutput struct{ *pulumi.OutputState }

func (ImagePurchasePlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePurchasePlanResponse)(nil)).Elem()
}

func (o ImagePurchasePlanResponsePtrOutput) ToImagePurchasePlanResponsePtrOutput() ImagePurchasePlanResponsePtrOutput {
	return o
}

func (o ImagePurchasePlanResponsePtrOutput) ToImagePurchasePlanResponsePtrOutputWithContext(ctx context.Context) ImagePurchasePlanResponsePtrOutput {
	return o
}

func (o ImagePurchasePlanResponsePtrOutput) Elem() ImagePurchasePlanResponseOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) ImagePurchasePlanResponse { return *v }).(ImagePurchasePlanResponseOutput)
}

// The plan ID.
func (o ImagePurchasePlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product ID.
func (o ImagePurchasePlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The publisher ID.
func (o ImagePurchasePlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePurchasePlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryption struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
}

// OSDiskImageEncryptionInput is an input type that accepts OSDiskImageEncryptionArgs and OSDiskImageEncryptionOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionInput` via:
//
//          OSDiskImageEncryptionArgs{...}
type OSDiskImageEncryptionInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput
	ToOSDiskImageEncryptionOutputWithContext(context.Context) OSDiskImageEncryptionOutput
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
}

func (OSDiskImageEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryption)(nil)).Elem()
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput {
	return i.ToOSDiskImageEncryptionOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionOutputWithContext(ctx context.Context) OSDiskImageEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionOutput)
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return i.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionArgs) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionOutput).ToOSDiskImageEncryptionPtrOutputWithContext(ctx)
}

// OSDiskImageEncryptionPtrInput is an input type that accepts OSDiskImageEncryptionArgs, OSDiskImageEncryptionPtr and OSDiskImageEncryptionPtrOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionPtrInput` via:
//
//          OSDiskImageEncryptionArgs{...}
//
//  or:
//
//          nil
type OSDiskImageEncryptionPtrInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput
	ToOSDiskImageEncryptionPtrOutputWithContext(context.Context) OSDiskImageEncryptionPtrOutput
}

type osdiskImageEncryptionPtrType OSDiskImageEncryptionArgs

func OSDiskImageEncryptionPtr(v *OSDiskImageEncryptionArgs) OSDiskImageEncryptionPtrInput {
	return (*osdiskImageEncryptionPtrType)(v)
}

func (*osdiskImageEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryption)(nil)).Elem()
}

func (i *osdiskImageEncryptionPtrType) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return i.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (i *osdiskImageEncryptionPtrType) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionPtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryption)(nil)).Elem()
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionOutput() OSDiskImageEncryptionOutput {
	return o
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionOutputWithContext(ctx context.Context) OSDiskImageEncryptionOutput {
	return o
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return o.ToOSDiskImageEncryptionPtrOutputWithContext(context.Background())
}

func (o OSDiskImageEncryptionOutput) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryption) *OSDiskImageEncryption {
		return &v
	}).(OSDiskImageEncryptionPtrOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryption) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

type OSDiskImageEncryptionPtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryption)(nil)).Elem()
}

func (o OSDiskImageEncryptionPtrOutput) ToOSDiskImageEncryptionPtrOutput() OSDiskImageEncryptionPtrOutput {
	return o
}

func (o OSDiskImageEncryptionPtrOutput) ToOSDiskImageEncryptionPtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionPtrOutput {
	return o
}

func (o OSDiskImageEncryptionPtrOutput) Elem() OSDiskImageEncryptionOutput {
	return o.ApplyT(func(v *OSDiskImageEncryption) OSDiskImageEncryption { return *v }).(OSDiskImageEncryptionOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryption) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionResponse struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
}

// OSDiskImageEncryptionResponseInput is an input type that accepts OSDiskImageEncryptionResponseArgs and OSDiskImageEncryptionResponseOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionResponseInput` via:
//
//          OSDiskImageEncryptionResponseArgs{...}
type OSDiskImageEncryptionResponseInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionResponseOutput() OSDiskImageEncryptionResponseOutput
	ToOSDiskImageEncryptionResponseOutputWithContext(context.Context) OSDiskImageEncryptionResponseOutput
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionResponseArgs struct {
	// A relative URI containing the resource ID of the disk encryption set.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
}

func (OSDiskImageEncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (i OSDiskImageEncryptionResponseArgs) ToOSDiskImageEncryptionResponseOutput() OSDiskImageEncryptionResponseOutput {
	return i.ToOSDiskImageEncryptionResponseOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionResponseArgs) ToOSDiskImageEncryptionResponseOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionResponseOutput)
}

func (i OSDiskImageEncryptionResponseArgs) ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput {
	return i.ToOSDiskImageEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i OSDiskImageEncryptionResponseArgs) ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionResponseOutput).ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx)
}

// OSDiskImageEncryptionResponsePtrInput is an input type that accepts OSDiskImageEncryptionResponseArgs, OSDiskImageEncryptionResponsePtr and OSDiskImageEncryptionResponsePtrOutput values.
// You can construct a concrete instance of `OSDiskImageEncryptionResponsePtrInput` via:
//
//          OSDiskImageEncryptionResponseArgs{...}
//
//  or:
//
//          nil
type OSDiskImageEncryptionResponsePtrInput interface {
	pulumi.Input

	ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput
	ToOSDiskImageEncryptionResponsePtrOutputWithContext(context.Context) OSDiskImageEncryptionResponsePtrOutput
}

type osdiskImageEncryptionResponsePtrType OSDiskImageEncryptionResponseArgs

func OSDiskImageEncryptionResponsePtr(v *OSDiskImageEncryptionResponseArgs) OSDiskImageEncryptionResponsePtrInput {
	return (*osdiskImageEncryptionResponsePtrType)(v)
}

func (*osdiskImageEncryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (i *osdiskImageEncryptionResponsePtrType) ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput {
	return i.ToOSDiskImageEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *osdiskImageEncryptionResponsePtrType) ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OSDiskImageEncryptionResponsePtrOutput)
}

// Contains encryption settings for an OS disk image.
type OSDiskImageEncryptionResponseOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponseOutput() OSDiskImageEncryptionResponseOutput {
	return o
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponseOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponseOutput {
	return o
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput {
	return o.ToOSDiskImageEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o OSDiskImageEncryptionResponseOutput) ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponsePtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryptionResponse) *OSDiskImageEncryptionResponse {
		return &v
	}).(OSDiskImageEncryptionResponsePtrOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskImageEncryptionResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

type OSDiskImageEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskImageEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskImageEncryptionResponse)(nil)).Elem()
}

func (o OSDiskImageEncryptionResponsePtrOutput) ToOSDiskImageEncryptionResponsePtrOutput() OSDiskImageEncryptionResponsePtrOutput {
	return o
}

func (o OSDiskImageEncryptionResponsePtrOutput) ToOSDiskImageEncryptionResponsePtrOutputWithContext(ctx context.Context) OSDiskImageEncryptionResponsePtrOutput {
	return o
}

func (o OSDiskImageEncryptionResponsePtrOutput) Elem() OSDiskImageEncryptionResponseOutput {
	return o.ApplyT(func(v *OSDiskImageEncryptionResponse) OSDiskImageEncryptionResponse { return *v }).(OSDiskImageEncryptionResponseOutput)
}

// A relative URI containing the resource ID of the disk encryption set.
func (o OSDiskImageEncryptionResponsePtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskImageEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfiguration struct {
	// Describes the resource range.
	Memory *ResourceRange `pulumi:"memory"`
	// Describes the resource range.
	VCPUs *ResourceRange `pulumi:"vCPUs"`
}

// RecommendedMachineConfigurationInput is an input type that accepts RecommendedMachineConfigurationArgs and RecommendedMachineConfigurationOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationInput` via:
//
//          RecommendedMachineConfigurationArgs{...}
type RecommendedMachineConfigurationInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput
	ToRecommendedMachineConfigurationOutputWithContext(context.Context) RecommendedMachineConfigurationOutput
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationArgs struct {
	// Describes the resource range.
	Memory ResourceRangePtrInput `pulumi:"memory"`
	// Describes the resource range.
	VCPUs ResourceRangePtrInput `pulumi:"vCPUs"`
}

func (RecommendedMachineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfiguration)(nil)).Elem()
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput {
	return i.ToRecommendedMachineConfigurationOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationOutputWithContext(ctx context.Context) RecommendedMachineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationOutput)
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return i.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationArgs) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationOutput).ToRecommendedMachineConfigurationPtrOutputWithContext(ctx)
}

// RecommendedMachineConfigurationPtrInput is an input type that accepts RecommendedMachineConfigurationArgs, RecommendedMachineConfigurationPtr and RecommendedMachineConfigurationPtrOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationPtrInput` via:
//
//          RecommendedMachineConfigurationArgs{...}
//
//  or:
//
//          nil
type RecommendedMachineConfigurationPtrInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput
	ToRecommendedMachineConfigurationPtrOutputWithContext(context.Context) RecommendedMachineConfigurationPtrOutput
}

type recommendedMachineConfigurationPtrType RecommendedMachineConfigurationArgs

func RecommendedMachineConfigurationPtr(v *RecommendedMachineConfigurationArgs) RecommendedMachineConfigurationPtrInput {
	return (*recommendedMachineConfigurationPtrType)(v)
}

func (*recommendedMachineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfiguration)(nil)).Elem()
}

func (i *recommendedMachineConfigurationPtrType) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return i.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (i *recommendedMachineConfigurationPtrType) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationPtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfiguration)(nil)).Elem()
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationOutput() RecommendedMachineConfigurationOutput {
	return o
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationOutputWithContext(ctx context.Context) RecommendedMachineConfigurationOutput {
	return o
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return o.ToRecommendedMachineConfigurationPtrOutputWithContext(context.Background())
}

func (o RecommendedMachineConfigurationOutput) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfiguration) *RecommendedMachineConfiguration {
		return &v
	}).(RecommendedMachineConfigurationPtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationOutput) Memory() ResourceRangePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfiguration) *ResourceRange { return v.Memory }).(ResourceRangePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationOutput) VCPUs() ResourceRangePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfiguration) *ResourceRange { return v.VCPUs }).(ResourceRangePtrOutput)
}

type RecommendedMachineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfiguration)(nil)).Elem()
}

func (o RecommendedMachineConfigurationPtrOutput) ToRecommendedMachineConfigurationPtrOutput() RecommendedMachineConfigurationPtrOutput {
	return o
}

func (o RecommendedMachineConfigurationPtrOutput) ToRecommendedMachineConfigurationPtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationPtrOutput {
	return o
}

func (o RecommendedMachineConfigurationPtrOutput) Elem() RecommendedMachineConfigurationOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) RecommendedMachineConfiguration { return *v }).(RecommendedMachineConfigurationOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationPtrOutput) Memory() ResourceRangePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) *ResourceRange {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(ResourceRangePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationPtrOutput) VCPUs() ResourceRangePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfiguration) *ResourceRange {
		if v == nil {
			return nil
		}
		return v.VCPUs
	}).(ResourceRangePtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationResponse struct {
	// Describes the resource range.
	Memory *ResourceRangeResponse `pulumi:"memory"`
	// Describes the resource range.
	VCPUs *ResourceRangeResponse `pulumi:"vCPUs"`
}

// RecommendedMachineConfigurationResponseInput is an input type that accepts RecommendedMachineConfigurationResponseArgs and RecommendedMachineConfigurationResponseOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationResponseInput` via:
//
//          RecommendedMachineConfigurationResponseArgs{...}
type RecommendedMachineConfigurationResponseInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationResponseOutput() RecommendedMachineConfigurationResponseOutput
	ToRecommendedMachineConfigurationResponseOutputWithContext(context.Context) RecommendedMachineConfigurationResponseOutput
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationResponseArgs struct {
	// Describes the resource range.
	Memory ResourceRangeResponsePtrInput `pulumi:"memory"`
	// Describes the resource range.
	VCPUs ResourceRangeResponsePtrInput `pulumi:"vCPUs"`
}

func (RecommendedMachineConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (i RecommendedMachineConfigurationResponseArgs) ToRecommendedMachineConfigurationResponseOutput() RecommendedMachineConfigurationResponseOutput {
	return i.ToRecommendedMachineConfigurationResponseOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationResponseArgs) ToRecommendedMachineConfigurationResponseOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationResponseOutput)
}

func (i RecommendedMachineConfigurationResponseArgs) ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput {
	return i.ToRecommendedMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i RecommendedMachineConfigurationResponseArgs) ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationResponseOutput).ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx)
}

// RecommendedMachineConfigurationResponsePtrInput is an input type that accepts RecommendedMachineConfigurationResponseArgs, RecommendedMachineConfigurationResponsePtr and RecommendedMachineConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `RecommendedMachineConfigurationResponsePtrInput` via:
//
//          RecommendedMachineConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type RecommendedMachineConfigurationResponsePtrInput interface {
	pulumi.Input

	ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput
	ToRecommendedMachineConfigurationResponsePtrOutputWithContext(context.Context) RecommendedMachineConfigurationResponsePtrOutput
}

type recommendedMachineConfigurationResponsePtrType RecommendedMachineConfigurationResponseArgs

func RecommendedMachineConfigurationResponsePtr(v *RecommendedMachineConfigurationResponseArgs) RecommendedMachineConfigurationResponsePtrInput {
	return (*recommendedMachineConfigurationResponsePtrType)(v)
}

func (*recommendedMachineConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (i *recommendedMachineConfigurationResponsePtrType) ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput {
	return i.ToRecommendedMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *recommendedMachineConfigurationResponsePtrType) ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecommendedMachineConfigurationResponsePtrOutput)
}

// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
type RecommendedMachineConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponseOutput() RecommendedMachineConfigurationResponseOutput {
	return o
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponseOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponseOutput {
	return o
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput {
	return o.ToRecommendedMachineConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o RecommendedMachineConfigurationResponseOutput) ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponsePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfigurationResponse) *RecommendedMachineConfigurationResponse {
		return &v
	}).(RecommendedMachineConfigurationResponsePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponseOutput) Memory() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfigurationResponse) *ResourceRangeResponse { return v.Memory }).(ResourceRangeResponsePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponseOutput) VCPUs() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v RecommendedMachineConfigurationResponse) *ResourceRangeResponse { return v.VCPUs }).(ResourceRangeResponsePtrOutput)
}

type RecommendedMachineConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RecommendedMachineConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecommendedMachineConfigurationResponse)(nil)).Elem()
}

func (o RecommendedMachineConfigurationResponsePtrOutput) ToRecommendedMachineConfigurationResponsePtrOutput() RecommendedMachineConfigurationResponsePtrOutput {
	return o
}

func (o RecommendedMachineConfigurationResponsePtrOutput) ToRecommendedMachineConfigurationResponsePtrOutputWithContext(ctx context.Context) RecommendedMachineConfigurationResponsePtrOutput {
	return o
}

func (o RecommendedMachineConfigurationResponsePtrOutput) Elem() RecommendedMachineConfigurationResponseOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) RecommendedMachineConfigurationResponse { return *v }).(RecommendedMachineConfigurationResponseOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponsePtrOutput) Memory() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) *ResourceRangeResponse {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(ResourceRangeResponsePtrOutput)
}

// Describes the resource range.
func (o RecommendedMachineConfigurationResponsePtrOutput) VCPUs() ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v *RecommendedMachineConfigurationResponse) *ResourceRangeResponse {
		if v == nil {
			return nil
		}
		return v.VCPUs
	}).(ResourceRangeResponsePtrOutput)
}

// This is the regional replication status.
type RegionalReplicationStatusResponse struct {
	// The details of the replication status.
	Details string `pulumi:"details"`
	// It indicates progress of the replication job.
	Progress int `pulumi:"progress"`
	// The region to which the gallery image version is being replicated to.
	Region string `pulumi:"region"`
	// This is the regional replication state.
	State string `pulumi:"state"`
}

// RegionalReplicationStatusResponseInput is an input type that accepts RegionalReplicationStatusResponseArgs and RegionalReplicationStatusResponseOutput values.
// You can construct a concrete instance of `RegionalReplicationStatusResponseInput` via:
//
//          RegionalReplicationStatusResponseArgs{...}
type RegionalReplicationStatusResponseInput interface {
	pulumi.Input

	ToRegionalReplicationStatusResponseOutput() RegionalReplicationStatusResponseOutput
	ToRegionalReplicationStatusResponseOutputWithContext(context.Context) RegionalReplicationStatusResponseOutput
}

// This is the regional replication status.
type RegionalReplicationStatusResponseArgs struct {
	// The details of the replication status.
	Details pulumi.StringInput `pulumi:"details"`
	// It indicates progress of the replication job.
	Progress pulumi.IntInput `pulumi:"progress"`
	// The region to which the gallery image version is being replicated to.
	Region pulumi.StringInput `pulumi:"region"`
	// This is the regional replication state.
	State pulumi.StringInput `pulumi:"state"`
}

func (RegionalReplicationStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalReplicationStatusResponse)(nil)).Elem()
}

func (i RegionalReplicationStatusResponseArgs) ToRegionalReplicationStatusResponseOutput() RegionalReplicationStatusResponseOutput {
	return i.ToRegionalReplicationStatusResponseOutputWithContext(context.Background())
}

func (i RegionalReplicationStatusResponseArgs) ToRegionalReplicationStatusResponseOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalReplicationStatusResponseOutput)
}

// RegionalReplicationStatusResponseArrayInput is an input type that accepts RegionalReplicationStatusResponseArray and RegionalReplicationStatusResponseArrayOutput values.
// You can construct a concrete instance of `RegionalReplicationStatusResponseArrayInput` via:
//
//          RegionalReplicationStatusResponseArray{ RegionalReplicationStatusResponseArgs{...} }
type RegionalReplicationStatusResponseArrayInput interface {
	pulumi.Input

	ToRegionalReplicationStatusResponseArrayOutput() RegionalReplicationStatusResponseArrayOutput
	ToRegionalReplicationStatusResponseArrayOutputWithContext(context.Context) RegionalReplicationStatusResponseArrayOutput
}

type RegionalReplicationStatusResponseArray []RegionalReplicationStatusResponseInput

func (RegionalReplicationStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalReplicationStatusResponse)(nil)).Elem()
}

func (i RegionalReplicationStatusResponseArray) ToRegionalReplicationStatusResponseArrayOutput() RegionalReplicationStatusResponseArrayOutput {
	return i.ToRegionalReplicationStatusResponseArrayOutputWithContext(context.Background())
}

func (i RegionalReplicationStatusResponseArray) ToRegionalReplicationStatusResponseArrayOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalReplicationStatusResponseArrayOutput)
}

// This is the regional replication status.
type RegionalReplicationStatusResponseOutput struct{ *pulumi.OutputState }

func (RegionalReplicationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalReplicationStatusResponse)(nil)).Elem()
}

func (o RegionalReplicationStatusResponseOutput) ToRegionalReplicationStatusResponseOutput() RegionalReplicationStatusResponseOutput {
	return o
}

func (o RegionalReplicationStatusResponseOutput) ToRegionalReplicationStatusResponseOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseOutput {
	return o
}

// The details of the replication status.
func (o RegionalReplicationStatusResponseOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.Details }).(pulumi.StringOutput)
}

// It indicates progress of the replication job.
func (o RegionalReplicationStatusResponseOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) int { return v.Progress }).(pulumi.IntOutput)
}

// The region to which the gallery image version is being replicated to.
func (o RegionalReplicationStatusResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.Region }).(pulumi.StringOutput)
}

// This is the regional replication state.
func (o RegionalReplicationStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RegionalReplicationStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type RegionalReplicationStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (RegionalReplicationStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalReplicationStatusResponse)(nil)).Elem()
}

func (o RegionalReplicationStatusResponseArrayOutput) ToRegionalReplicationStatusResponseArrayOutput() RegionalReplicationStatusResponseArrayOutput {
	return o
}

func (o RegionalReplicationStatusResponseArrayOutput) ToRegionalReplicationStatusResponseArrayOutputWithContext(ctx context.Context) RegionalReplicationStatusResponseArrayOutput {
	return o
}

func (o RegionalReplicationStatusResponseArrayOutput) Index(i pulumi.IntInput) RegionalReplicationStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionalReplicationStatusResponse {
		return vs[0].([]RegionalReplicationStatusResponse)[vs[1].(int)]
	}).(RegionalReplicationStatusResponseOutput)
}

// This is the replication status of the gallery image version.
type ReplicationStatusResponse struct {
	// This is the aggregated replication status based on all the regional replication status flags.
	AggregatedState string `pulumi:"aggregatedState"`
	// This is a summary of replication status for each region.
	Summary []RegionalReplicationStatusResponse `pulumi:"summary"`
}

// ReplicationStatusResponseInput is an input type that accepts ReplicationStatusResponseArgs and ReplicationStatusResponseOutput values.
// You can construct a concrete instance of `ReplicationStatusResponseInput` via:
//
//          ReplicationStatusResponseArgs{...}
type ReplicationStatusResponseInput interface {
	pulumi.Input

	ToReplicationStatusResponseOutput() ReplicationStatusResponseOutput
	ToReplicationStatusResponseOutputWithContext(context.Context) ReplicationStatusResponseOutput
}

// This is the replication status of the gallery image version.
type ReplicationStatusResponseArgs struct {
	// This is the aggregated replication status based on all the regional replication status flags.
	AggregatedState pulumi.StringInput `pulumi:"aggregatedState"`
	// This is a summary of replication status for each region.
	Summary RegionalReplicationStatusResponseArrayInput `pulumi:"summary"`
}

func (ReplicationStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationStatusResponse)(nil)).Elem()
}

func (i ReplicationStatusResponseArgs) ToReplicationStatusResponseOutput() ReplicationStatusResponseOutput {
	return i.ToReplicationStatusResponseOutputWithContext(context.Background())
}

func (i ReplicationStatusResponseArgs) ToReplicationStatusResponseOutputWithContext(ctx context.Context) ReplicationStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationStatusResponseOutput)
}

func (i ReplicationStatusResponseArgs) ToReplicationStatusResponsePtrOutput() ReplicationStatusResponsePtrOutput {
	return i.ToReplicationStatusResponsePtrOutputWithContext(context.Background())
}

func (i ReplicationStatusResponseArgs) ToReplicationStatusResponsePtrOutputWithContext(ctx context.Context) ReplicationStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationStatusResponseOutput).ToReplicationStatusResponsePtrOutputWithContext(ctx)
}

// ReplicationStatusResponsePtrInput is an input type that accepts ReplicationStatusResponseArgs, ReplicationStatusResponsePtr and ReplicationStatusResponsePtrOutput values.
// You can construct a concrete instance of `ReplicationStatusResponsePtrInput` via:
//
//          ReplicationStatusResponseArgs{...}
//
//  or:
//
//          nil
type ReplicationStatusResponsePtrInput interface {
	pulumi.Input

	ToReplicationStatusResponsePtrOutput() ReplicationStatusResponsePtrOutput
	ToReplicationStatusResponsePtrOutputWithContext(context.Context) ReplicationStatusResponsePtrOutput
}

type replicationStatusResponsePtrType ReplicationStatusResponseArgs

func ReplicationStatusResponsePtr(v *ReplicationStatusResponseArgs) ReplicationStatusResponsePtrInput {
	return (*replicationStatusResponsePtrType)(v)
}

func (*replicationStatusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationStatusResponse)(nil)).Elem()
}

func (i *replicationStatusResponsePtrType) ToReplicationStatusResponsePtrOutput() ReplicationStatusResponsePtrOutput {
	return i.ToReplicationStatusResponsePtrOutputWithContext(context.Background())
}

func (i *replicationStatusResponsePtrType) ToReplicationStatusResponsePtrOutputWithContext(ctx context.Context) ReplicationStatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationStatusResponsePtrOutput)
}

// This is the replication status of the gallery image version.
type ReplicationStatusResponseOutput struct{ *pulumi.OutputState }

func (ReplicationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationStatusResponse)(nil)).Elem()
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponseOutput() ReplicationStatusResponseOutput {
	return o
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponseOutputWithContext(ctx context.Context) ReplicationStatusResponseOutput {
	return o
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponsePtrOutput() ReplicationStatusResponsePtrOutput {
	return o.ToReplicationStatusResponsePtrOutputWithContext(context.Background())
}

func (o ReplicationStatusResponseOutput) ToReplicationStatusResponsePtrOutputWithContext(ctx context.Context) ReplicationStatusResponsePtrOutput {
	return o.ApplyT(func(v ReplicationStatusResponse) *ReplicationStatusResponse {
		return &v
	}).(ReplicationStatusResponsePtrOutput)
}

// This is the aggregated replication status based on all the regional replication status flags.
func (o ReplicationStatusResponseOutput) AggregatedState() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationStatusResponse) string { return v.AggregatedState }).(pulumi.StringOutput)
}

// This is a summary of replication status for each region.
func (o ReplicationStatusResponseOutput) Summary() RegionalReplicationStatusResponseArrayOutput {
	return o.ApplyT(func(v ReplicationStatusResponse) []RegionalReplicationStatusResponse { return v.Summary }).(RegionalReplicationStatusResponseArrayOutput)
}

type ReplicationStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicationStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationStatusResponse)(nil)).Elem()
}

func (o ReplicationStatusResponsePtrOutput) ToReplicationStatusResponsePtrOutput() ReplicationStatusResponsePtrOutput {
	return o
}

func (o ReplicationStatusResponsePtrOutput) ToReplicationStatusResponsePtrOutputWithContext(ctx context.Context) ReplicationStatusResponsePtrOutput {
	return o
}

func (o ReplicationStatusResponsePtrOutput) Elem() ReplicationStatusResponseOutput {
	return o.ApplyT(func(v *ReplicationStatusResponse) ReplicationStatusResponse { return *v }).(ReplicationStatusResponseOutput)
}

// This is the aggregated replication status based on all the regional replication status flags.
func (o ReplicationStatusResponsePtrOutput) AggregatedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AggregatedState
	}).(pulumi.StringPtrOutput)
}

// This is a summary of replication status for each region.
func (o ReplicationStatusResponsePtrOutput) Summary() RegionalReplicationStatusResponseArrayOutput {
	return o.ApplyT(func(v *ReplicationStatusResponse) []RegionalReplicationStatusResponse {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(RegionalReplicationStatusResponseArrayOutput)
}

// Describes the resource range.
type ResourceRange struct {
	// The maximum number of the resource.
	Max *int `pulumi:"max"`
	// The minimum number of the resource.
	Min *int `pulumi:"min"`
}

// ResourceRangeInput is an input type that accepts ResourceRangeArgs and ResourceRangeOutput values.
// You can construct a concrete instance of `ResourceRangeInput` via:
//
//          ResourceRangeArgs{...}
type ResourceRangeInput interface {
	pulumi.Input

	ToResourceRangeOutput() ResourceRangeOutput
	ToResourceRangeOutputWithContext(context.Context) ResourceRangeOutput
}

// Describes the resource range.
type ResourceRangeArgs struct {
	// The maximum number of the resource.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum number of the resource.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ResourceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRange)(nil)).Elem()
}

func (i ResourceRangeArgs) ToResourceRangeOutput() ResourceRangeOutput {
	return i.ToResourceRangeOutputWithContext(context.Background())
}

func (i ResourceRangeArgs) ToResourceRangeOutputWithContext(ctx context.Context) ResourceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeOutput)
}

func (i ResourceRangeArgs) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return i.ToResourceRangePtrOutputWithContext(context.Background())
}

func (i ResourceRangeArgs) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeOutput).ToResourceRangePtrOutputWithContext(ctx)
}

// ResourceRangePtrInput is an input type that accepts ResourceRangeArgs, ResourceRangePtr and ResourceRangePtrOutput values.
// You can construct a concrete instance of `ResourceRangePtrInput` via:
//
//          ResourceRangeArgs{...}
//
//  or:
//
//          nil
type ResourceRangePtrInput interface {
	pulumi.Input

	ToResourceRangePtrOutput() ResourceRangePtrOutput
	ToResourceRangePtrOutputWithContext(context.Context) ResourceRangePtrOutput
}

type resourceRangePtrType ResourceRangeArgs

func ResourceRangePtr(v *ResourceRangeArgs) ResourceRangePtrInput {
	return (*resourceRangePtrType)(v)
}

func (*resourceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRange)(nil)).Elem()
}

func (i *resourceRangePtrType) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return i.ToResourceRangePtrOutputWithContext(context.Background())
}

func (i *resourceRangePtrType) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangePtrOutput)
}

// Describes the resource range.
type ResourceRangeOutput struct{ *pulumi.OutputState }

func (ResourceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRange)(nil)).Elem()
}

func (o ResourceRangeOutput) ToResourceRangeOutput() ResourceRangeOutput {
	return o
}

func (o ResourceRangeOutput) ToResourceRangeOutputWithContext(ctx context.Context) ResourceRangeOutput {
	return o
}

func (o ResourceRangeOutput) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return o.ToResourceRangePtrOutputWithContext(context.Background())
}

func (o ResourceRangeOutput) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return o.ApplyT(func(v ResourceRange) *ResourceRange {
		return &v
	}).(ResourceRangePtrOutput)
}

// The maximum number of the resource.
func (o ResourceRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRange) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ResourceRangePtrOutput struct{ *pulumi.OutputState }

func (ResourceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRange)(nil)).Elem()
}

func (o ResourceRangePtrOutput) ToResourceRangePtrOutput() ResourceRangePtrOutput {
	return o
}

func (o ResourceRangePtrOutput) ToResourceRangePtrOutputWithContext(ctx context.Context) ResourceRangePtrOutput {
	return o
}

func (o ResourceRangePtrOutput) Elem() ResourceRangeOutput {
	return o.ApplyT(func(v *ResourceRange) ResourceRange { return *v }).(ResourceRangeOutput)
}

// The maximum number of the resource.
func (o ResourceRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRange) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Describes the resource range.
type ResourceRangeResponse struct {
	// The maximum number of the resource.
	Max *int `pulumi:"max"`
	// The minimum number of the resource.
	Min *int `pulumi:"min"`
}

// ResourceRangeResponseInput is an input type that accepts ResourceRangeResponseArgs and ResourceRangeResponseOutput values.
// You can construct a concrete instance of `ResourceRangeResponseInput` via:
//
//          ResourceRangeResponseArgs{...}
type ResourceRangeResponseInput interface {
	pulumi.Input

	ToResourceRangeResponseOutput() ResourceRangeResponseOutput
	ToResourceRangeResponseOutputWithContext(context.Context) ResourceRangeResponseOutput
}

// Describes the resource range.
type ResourceRangeResponseArgs struct {
	// The maximum number of the resource.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimum number of the resource.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ResourceRangeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRangeResponse)(nil)).Elem()
}

func (i ResourceRangeResponseArgs) ToResourceRangeResponseOutput() ResourceRangeResponseOutput {
	return i.ToResourceRangeResponseOutputWithContext(context.Background())
}

func (i ResourceRangeResponseArgs) ToResourceRangeResponseOutputWithContext(ctx context.Context) ResourceRangeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeResponseOutput)
}

func (i ResourceRangeResponseArgs) ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput {
	return i.ToResourceRangeResponsePtrOutputWithContext(context.Background())
}

func (i ResourceRangeResponseArgs) ToResourceRangeResponsePtrOutputWithContext(ctx context.Context) ResourceRangeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeResponseOutput).ToResourceRangeResponsePtrOutputWithContext(ctx)
}

// ResourceRangeResponsePtrInput is an input type that accepts ResourceRangeResponseArgs, ResourceRangeResponsePtr and ResourceRangeResponsePtrOutput values.
// You can construct a concrete instance of `ResourceRangeResponsePtrInput` via:
//
//          ResourceRangeResponseArgs{...}
//
//  or:
//
//          nil
type ResourceRangeResponsePtrInput interface {
	pulumi.Input

	ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput
	ToResourceRangeResponsePtrOutputWithContext(context.Context) ResourceRangeResponsePtrOutput
}

type resourceRangeResponsePtrType ResourceRangeResponseArgs

func ResourceRangeResponsePtr(v *ResourceRangeResponseArgs) ResourceRangeResponsePtrInput {
	return (*resourceRangeResponsePtrType)(v)
}

func (*resourceRangeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRangeResponse)(nil)).Elem()
}

func (i *resourceRangeResponsePtrType) ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput {
	return i.ToResourceRangeResponsePtrOutputWithContext(context.Background())
}

func (i *resourceRangeResponsePtrType) ToResourceRangeResponsePtrOutputWithContext(ctx context.Context) ResourceRangeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceRangeResponsePtrOutput)
}

// Describes the resource range.
type ResourceRangeResponseOutput struct{ *pulumi.OutputState }

func (ResourceRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceRangeResponse)(nil)).Elem()
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponseOutput() ResourceRangeResponseOutput {
	return o
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponseOutputWithContext(ctx context.Context) ResourceRangeResponseOutput {
	return o
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput {
	return o.ToResourceRangeResponsePtrOutputWithContext(context.Background())
}

func (o ResourceRangeResponseOutput) ToResourceRangeResponsePtrOutputWithContext(ctx context.Context) ResourceRangeResponsePtrOutput {
	return o.ApplyT(func(v ResourceRangeResponse) *ResourceRangeResponse {
		return &v
	}).(ResourceRangeResponsePtrOutput)
}

// The maximum number of the resource.
func (o ResourceRangeResponseOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRangeResponse) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeResponseOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceRangeResponse) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ResourceRangeResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceRangeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceRangeResponse)(nil)).Elem()
}

func (o ResourceRangeResponsePtrOutput) ToResourceRangeResponsePtrOutput() ResourceRangeResponsePtrOutput {
	return o
}

func (o ResourceRangeResponsePtrOutput) ToResourceRangeResponsePtrOutputWithContext(ctx context.Context) ResourceRangeResponsePtrOutput {
	return o
}

func (o ResourceRangeResponsePtrOutput) Elem() ResourceRangeResponseOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) ResourceRangeResponse { return *v }).(ResourceRangeResponseOutput)
}

// The maximum number of the resource.
func (o ResourceRangeResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// The minimum number of the resource.
func (o ResourceRangeResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceRangeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfile struct {
	// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
	Permissions *string `pulumi:"permissions"`
}

// SharingProfileInput is an input type that accepts SharingProfileArgs and SharingProfileOutput values.
// You can construct a concrete instance of `SharingProfileInput` via:
//
//          SharingProfileArgs{...}
type SharingProfileInput interface {
	pulumi.Input

	ToSharingProfileOutput() SharingProfileOutput
	ToSharingProfileOutputWithContext(context.Context) SharingProfileOutput
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileArgs struct {
	// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (SharingProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfile)(nil)).Elem()
}

func (i SharingProfileArgs) ToSharingProfileOutput() SharingProfileOutput {
	return i.ToSharingProfileOutputWithContext(context.Background())
}

func (i SharingProfileArgs) ToSharingProfileOutputWithContext(ctx context.Context) SharingProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileOutput)
}

func (i SharingProfileArgs) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return i.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (i SharingProfileArgs) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileOutput).ToSharingProfilePtrOutputWithContext(ctx)
}

// SharingProfilePtrInput is an input type that accepts SharingProfileArgs, SharingProfilePtr and SharingProfilePtrOutput values.
// You can construct a concrete instance of `SharingProfilePtrInput` via:
//
//          SharingProfileArgs{...}
//
//  or:
//
//          nil
type SharingProfilePtrInput interface {
	pulumi.Input

	ToSharingProfilePtrOutput() SharingProfilePtrOutput
	ToSharingProfilePtrOutputWithContext(context.Context) SharingProfilePtrOutput
}

type sharingProfilePtrType SharingProfileArgs

func SharingProfilePtr(v *SharingProfileArgs) SharingProfilePtrInput {
	return (*sharingProfilePtrType)(v)
}

func (*sharingProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfile)(nil)).Elem()
}

func (i *sharingProfilePtrType) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return i.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (i *sharingProfilePtrType) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfilePtrOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileOutput struct{ *pulumi.OutputState }

func (SharingProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfile)(nil)).Elem()
}

func (o SharingProfileOutput) ToSharingProfileOutput() SharingProfileOutput {
	return o
}

func (o SharingProfileOutput) ToSharingProfileOutputWithContext(ctx context.Context) SharingProfileOutput {
	return o
}

func (o SharingProfileOutput) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return o.ToSharingProfilePtrOutputWithContext(context.Background())
}

func (o SharingProfileOutput) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return o.ApplyT(func(v SharingProfile) *SharingProfile {
		return &v
	}).(SharingProfilePtrOutput)
}

// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
func (o SharingProfileOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfile) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type SharingProfilePtrOutput struct{ *pulumi.OutputState }

func (SharingProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfile)(nil)).Elem()
}

func (o SharingProfilePtrOutput) ToSharingProfilePtrOutput() SharingProfilePtrOutput {
	return o
}

func (o SharingProfilePtrOutput) ToSharingProfilePtrOutputWithContext(ctx context.Context) SharingProfilePtrOutput {
	return o
}

func (o SharingProfilePtrOutput) Elem() SharingProfileOutput {
	return o.ApplyT(func(v *SharingProfile) SharingProfile { return *v }).(SharingProfileOutput)
}

// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
func (o SharingProfilePtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharingProfile) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Group of the gallery sharing profile
type SharingProfileGroupResponse struct {
	// A list of subscription/tenant ids the gallery is aimed to be shared to.
	Ids []string `pulumi:"ids"`
	// This property allows you to specify the type of sharing group. <br><br> Possible values are: <br><br> **Subscriptions** <br><br> **AADTenants**
	Type *string `pulumi:"type"`
}

// SharingProfileGroupResponseInput is an input type that accepts SharingProfileGroupResponseArgs and SharingProfileGroupResponseOutput values.
// You can construct a concrete instance of `SharingProfileGroupResponseInput` via:
//
//          SharingProfileGroupResponseArgs{...}
type SharingProfileGroupResponseInput interface {
	pulumi.Input

	ToSharingProfileGroupResponseOutput() SharingProfileGroupResponseOutput
	ToSharingProfileGroupResponseOutputWithContext(context.Context) SharingProfileGroupResponseOutput
}

// Group of the gallery sharing profile
type SharingProfileGroupResponseArgs struct {
	// A list of subscription/tenant ids the gallery is aimed to be shared to.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// This property allows you to specify the type of sharing group. <br><br> Possible values are: <br><br> **Subscriptions** <br><br> **AADTenants**
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SharingProfileGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileGroupResponse)(nil)).Elem()
}

func (i SharingProfileGroupResponseArgs) ToSharingProfileGroupResponseOutput() SharingProfileGroupResponseOutput {
	return i.ToSharingProfileGroupResponseOutputWithContext(context.Background())
}

func (i SharingProfileGroupResponseArgs) ToSharingProfileGroupResponseOutputWithContext(ctx context.Context) SharingProfileGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileGroupResponseOutput)
}

// SharingProfileGroupResponseArrayInput is an input type that accepts SharingProfileGroupResponseArray and SharingProfileGroupResponseArrayOutput values.
// You can construct a concrete instance of `SharingProfileGroupResponseArrayInput` via:
//
//          SharingProfileGroupResponseArray{ SharingProfileGroupResponseArgs{...} }
type SharingProfileGroupResponseArrayInput interface {
	pulumi.Input

	ToSharingProfileGroupResponseArrayOutput() SharingProfileGroupResponseArrayOutput
	ToSharingProfileGroupResponseArrayOutputWithContext(context.Context) SharingProfileGroupResponseArrayOutput
}

type SharingProfileGroupResponseArray []SharingProfileGroupResponseInput

func (SharingProfileGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharingProfileGroupResponse)(nil)).Elem()
}

func (i SharingProfileGroupResponseArray) ToSharingProfileGroupResponseArrayOutput() SharingProfileGroupResponseArrayOutput {
	return i.ToSharingProfileGroupResponseArrayOutputWithContext(context.Background())
}

func (i SharingProfileGroupResponseArray) ToSharingProfileGroupResponseArrayOutputWithContext(ctx context.Context) SharingProfileGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileGroupResponseArrayOutput)
}

// Group of the gallery sharing profile
type SharingProfileGroupResponseOutput struct{ *pulumi.OutputState }

func (SharingProfileGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileGroupResponse)(nil)).Elem()
}

func (o SharingProfileGroupResponseOutput) ToSharingProfileGroupResponseOutput() SharingProfileGroupResponseOutput {
	return o
}

func (o SharingProfileGroupResponseOutput) ToSharingProfileGroupResponseOutputWithContext(ctx context.Context) SharingProfileGroupResponseOutput {
	return o
}

// A list of subscription/tenant ids the gallery is aimed to be shared to.
func (o SharingProfileGroupResponseOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SharingProfileGroupResponse) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// This property allows you to specify the type of sharing group. <br><br> Possible values are: <br><br> **Subscriptions** <br><br> **AADTenants**
func (o SharingProfileGroupResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfileGroupResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SharingProfileGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (SharingProfileGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharingProfileGroupResponse)(nil)).Elem()
}

func (o SharingProfileGroupResponseArrayOutput) ToSharingProfileGroupResponseArrayOutput() SharingProfileGroupResponseArrayOutput {
	return o
}

func (o SharingProfileGroupResponseArrayOutput) ToSharingProfileGroupResponseArrayOutputWithContext(ctx context.Context) SharingProfileGroupResponseArrayOutput {
	return o
}

func (o SharingProfileGroupResponseArrayOutput) Index(i pulumi.IntInput) SharingProfileGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharingProfileGroupResponse {
		return vs[0].([]SharingProfileGroupResponse)[vs[1].(int)]
	}).(SharingProfileGroupResponseOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileResponse struct {
	// A list of sharing profile groups.
	Groups []SharingProfileGroupResponse `pulumi:"groups"`
	// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
	Permissions *string `pulumi:"permissions"`
}

// SharingProfileResponseInput is an input type that accepts SharingProfileResponseArgs and SharingProfileResponseOutput values.
// You can construct a concrete instance of `SharingProfileResponseInput` via:
//
//          SharingProfileResponseArgs{...}
type SharingProfileResponseInput interface {
	pulumi.Input

	ToSharingProfileResponseOutput() SharingProfileResponseOutput
	ToSharingProfileResponseOutputWithContext(context.Context) SharingProfileResponseOutput
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileResponseArgs struct {
	// A list of sharing profile groups.
	Groups SharingProfileGroupResponseArrayInput `pulumi:"groups"`
	// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
}

func (SharingProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileResponse)(nil)).Elem()
}

func (i SharingProfileResponseArgs) ToSharingProfileResponseOutput() SharingProfileResponseOutput {
	return i.ToSharingProfileResponseOutputWithContext(context.Background())
}

func (i SharingProfileResponseArgs) ToSharingProfileResponseOutputWithContext(ctx context.Context) SharingProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileResponseOutput)
}

func (i SharingProfileResponseArgs) ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput {
	return i.ToSharingProfileResponsePtrOutputWithContext(context.Background())
}

func (i SharingProfileResponseArgs) ToSharingProfileResponsePtrOutputWithContext(ctx context.Context) SharingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileResponseOutput).ToSharingProfileResponsePtrOutputWithContext(ctx)
}

// SharingProfileResponsePtrInput is an input type that accepts SharingProfileResponseArgs, SharingProfileResponsePtr and SharingProfileResponsePtrOutput values.
// You can construct a concrete instance of `SharingProfileResponsePtrInput` via:
//
//          SharingProfileResponseArgs{...}
//
//  or:
//
//          nil
type SharingProfileResponsePtrInput interface {
	pulumi.Input

	ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput
	ToSharingProfileResponsePtrOutputWithContext(context.Context) SharingProfileResponsePtrOutput
}

type sharingProfileResponsePtrType SharingProfileResponseArgs

func SharingProfileResponsePtr(v *SharingProfileResponseArgs) SharingProfileResponsePtrInput {
	return (*sharingProfileResponsePtrType)(v)
}

func (*sharingProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfileResponse)(nil)).Elem()
}

func (i *sharingProfileResponsePtrType) ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput {
	return i.ToSharingProfileResponsePtrOutputWithContext(context.Background())
}

func (i *sharingProfileResponsePtrType) ToSharingProfileResponsePtrOutputWithContext(ctx context.Context) SharingProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharingProfileResponsePtrOutput)
}

// Profile for gallery sharing to subscription or tenant
type SharingProfileResponseOutput struct{ *pulumi.OutputState }

func (SharingProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharingProfileResponse)(nil)).Elem()
}

func (o SharingProfileResponseOutput) ToSharingProfileResponseOutput() SharingProfileResponseOutput {
	return o
}

func (o SharingProfileResponseOutput) ToSharingProfileResponseOutputWithContext(ctx context.Context) SharingProfileResponseOutput {
	return o
}

func (o SharingProfileResponseOutput) ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput {
	return o.ToSharingProfileResponsePtrOutputWithContext(context.Background())
}

func (o SharingProfileResponseOutput) ToSharingProfileResponsePtrOutputWithContext(ctx context.Context) SharingProfileResponsePtrOutput {
	return o.ApplyT(func(v SharingProfileResponse) *SharingProfileResponse {
		return &v
	}).(SharingProfileResponsePtrOutput)
}

// A list of sharing profile groups.
func (o SharingProfileResponseOutput) Groups() SharingProfileGroupResponseArrayOutput {
	return o.ApplyT(func(v SharingProfileResponse) []SharingProfileGroupResponse { return v.Groups }).(SharingProfileGroupResponseArrayOutput)
}

// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
func (o SharingProfileResponseOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharingProfileResponse) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

type SharingProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (SharingProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharingProfileResponse)(nil)).Elem()
}

func (o SharingProfileResponsePtrOutput) ToSharingProfileResponsePtrOutput() SharingProfileResponsePtrOutput {
	return o
}

func (o SharingProfileResponsePtrOutput) ToSharingProfileResponsePtrOutputWithContext(ctx context.Context) SharingProfileResponsePtrOutput {
	return o
}

func (o SharingProfileResponsePtrOutput) Elem() SharingProfileResponseOutput {
	return o.ApplyT(func(v *SharingProfileResponse) SharingProfileResponse { return *v }).(SharingProfileResponseOutput)
}

// A list of sharing profile groups.
func (o SharingProfileResponsePtrOutput) Groups() SharingProfileGroupResponseArrayOutput {
	return o.ApplyT(func(v *SharingProfileResponse) []SharingProfileGroupResponse {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(SharingProfileGroupResponseArrayOutput)
}

// This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups**
func (o SharingProfileResponsePtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharingProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Permissions
	}).(pulumi.StringPtrOutput)
}

// Describes the target region information.
type TargetRegion struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImages `pulumi:"encryption"`
	// The name of the region.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount *int `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// TargetRegionInput is an input type that accepts TargetRegionArgs and TargetRegionOutput values.
// You can construct a concrete instance of `TargetRegionInput` via:
//
//          TargetRegionArgs{...}
type TargetRegionInput interface {
	pulumi.Input

	ToTargetRegionOutput() TargetRegionOutput
	ToTargetRegionOutputWithContext(context.Context) TargetRegionOutput
}

// Describes the target region information.
type TargetRegionArgs struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption EncryptionImagesPtrInput `pulumi:"encryption"`
	// The name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount pulumi.IntPtrInput `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (TargetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegion)(nil)).Elem()
}

func (i TargetRegionArgs) ToTargetRegionOutput() TargetRegionOutput {
	return i.ToTargetRegionOutputWithContext(context.Background())
}

func (i TargetRegionArgs) ToTargetRegionOutputWithContext(ctx context.Context) TargetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionOutput)
}

// TargetRegionArrayInput is an input type that accepts TargetRegionArray and TargetRegionArrayOutput values.
// You can construct a concrete instance of `TargetRegionArrayInput` via:
//
//          TargetRegionArray{ TargetRegionArgs{...} }
type TargetRegionArrayInput interface {
	pulumi.Input

	ToTargetRegionArrayOutput() TargetRegionArrayOutput
	ToTargetRegionArrayOutputWithContext(context.Context) TargetRegionArrayOutput
}

type TargetRegionArray []TargetRegionInput

func (TargetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegion)(nil)).Elem()
}

func (i TargetRegionArray) ToTargetRegionArrayOutput() TargetRegionArrayOutput {
	return i.ToTargetRegionArrayOutputWithContext(context.Background())
}

func (i TargetRegionArray) ToTargetRegionArrayOutputWithContext(ctx context.Context) TargetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionArrayOutput)
}

// Describes the target region information.
type TargetRegionOutput struct{ *pulumi.OutputState }

func (TargetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegion)(nil)).Elem()
}

func (o TargetRegionOutput) ToTargetRegionOutput() TargetRegionOutput {
	return o
}

func (o TargetRegionOutput) ToTargetRegionOutputWithContext(ctx context.Context) TargetRegionOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o TargetRegionOutput) Encryption() EncryptionImagesPtrOutput {
	return o.ApplyT(func(v TargetRegion) *EncryptionImages { return v.Encryption }).(EncryptionImagesPtrOutput)
}

// The name of the region.
func (o TargetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property is updatable.
func (o TargetRegionOutput) RegionalReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetRegion) *int { return v.RegionalReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o TargetRegionOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetRegion) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type TargetRegionArrayOutput struct{ *pulumi.OutputState }

func (TargetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegion)(nil)).Elem()
}

func (o TargetRegionArrayOutput) ToTargetRegionArrayOutput() TargetRegionArrayOutput {
	return o
}

func (o TargetRegionArrayOutput) ToTargetRegionArrayOutputWithContext(ctx context.Context) TargetRegionArrayOutput {
	return o
}

func (o TargetRegionArrayOutput) Index(i pulumi.IntInput) TargetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetRegion {
		return vs[0].([]TargetRegion)[vs[1].(int)]
	}).(TargetRegionOutput)
}

// Describes the target region information.
type TargetRegionResponse struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption *EncryptionImagesResponse `pulumi:"encryption"`
	// The name of the region.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount *int `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// TargetRegionResponseInput is an input type that accepts TargetRegionResponseArgs and TargetRegionResponseOutput values.
// You can construct a concrete instance of `TargetRegionResponseInput` via:
//
//          TargetRegionResponseArgs{...}
type TargetRegionResponseInput interface {
	pulumi.Input

	ToTargetRegionResponseOutput() TargetRegionResponseOutput
	ToTargetRegionResponseOutputWithContext(context.Context) TargetRegionResponseOutput
}

// Describes the target region information.
type TargetRegionResponseArgs struct {
	// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
	Encryption EncryptionImagesResponsePtrInput `pulumi:"encryption"`
	// The name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region. This property is updatable.
	RegionalReplicaCount pulumi.IntPtrInput `pulumi:"regionalReplicaCount"`
	// Specifies the storage account type to be used to store the image. This property is not updatable.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (TargetRegionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegionResponse)(nil)).Elem()
}

func (i TargetRegionResponseArgs) ToTargetRegionResponseOutput() TargetRegionResponseOutput {
	return i.ToTargetRegionResponseOutputWithContext(context.Background())
}

func (i TargetRegionResponseArgs) ToTargetRegionResponseOutputWithContext(ctx context.Context) TargetRegionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionResponseOutput)
}

// TargetRegionResponseArrayInput is an input type that accepts TargetRegionResponseArray and TargetRegionResponseArrayOutput values.
// You can construct a concrete instance of `TargetRegionResponseArrayInput` via:
//
//          TargetRegionResponseArray{ TargetRegionResponseArgs{...} }
type TargetRegionResponseArrayInput interface {
	pulumi.Input

	ToTargetRegionResponseArrayOutput() TargetRegionResponseArrayOutput
	ToTargetRegionResponseArrayOutputWithContext(context.Context) TargetRegionResponseArrayOutput
}

type TargetRegionResponseArray []TargetRegionResponseInput

func (TargetRegionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegionResponse)(nil)).Elem()
}

func (i TargetRegionResponseArray) ToTargetRegionResponseArrayOutput() TargetRegionResponseArrayOutput {
	return i.ToTargetRegionResponseArrayOutputWithContext(context.Background())
}

func (i TargetRegionResponseArray) ToTargetRegionResponseArrayOutputWithContext(ctx context.Context) TargetRegionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetRegionResponseArrayOutput)
}

// Describes the target region information.
type TargetRegionResponseOutput struct{ *pulumi.OutputState }

func (TargetRegionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetRegionResponse)(nil)).Elem()
}

func (o TargetRegionResponseOutput) ToTargetRegionResponseOutput() TargetRegionResponseOutput {
	return o
}

func (o TargetRegionResponseOutput) ToTargetRegionResponseOutputWithContext(ctx context.Context) TargetRegionResponseOutput {
	return o
}

// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
func (o TargetRegionResponseOutput) Encryption() EncryptionImagesResponsePtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *EncryptionImagesResponse { return v.Encryption }).(EncryptionImagesResponsePtrOutput)
}

// The name of the region.
func (o TargetRegionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetRegionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region. This property is updatable.
func (o TargetRegionResponseOutput) RegionalReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *int { return v.RegionalReplicaCount }).(pulumi.IntPtrOutput)
}

// Specifies the storage account type to be used to store the image. This property is not updatable.
func (o TargetRegionResponseOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetRegionResponse) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type TargetRegionResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetRegionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetRegionResponse)(nil)).Elem()
}

func (o TargetRegionResponseArrayOutput) ToTargetRegionResponseArrayOutput() TargetRegionResponseArrayOutput {
	return o
}

func (o TargetRegionResponseArrayOutput) ToTargetRegionResponseArrayOutputWithContext(ctx context.Context) TargetRegionResponseArrayOutput {
	return o
}

func (o TargetRegionResponseArrayOutput) Index(i pulumi.IntInput) TargetRegionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetRegionResponse {
		return vs[0].([]TargetRegionResponse)[vs[1].(int)]
	}).(TargetRegionResponseOutput)
}

type UserArtifactManage struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install string `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove string `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update *string `pulumi:"update"`
}

// UserArtifactManageInput is an input type that accepts UserArtifactManageArgs and UserArtifactManageOutput values.
// You can construct a concrete instance of `UserArtifactManageInput` via:
//
//          UserArtifactManageArgs{...}
type UserArtifactManageInput interface {
	pulumi.Input

	ToUserArtifactManageOutput() UserArtifactManageOutput
	ToUserArtifactManageOutputWithContext(context.Context) UserArtifactManageOutput
}

type UserArtifactManageArgs struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install pulumi.StringInput `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove pulumi.StringInput `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (UserArtifactManageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManage)(nil)).Elem()
}

func (i UserArtifactManageArgs) ToUserArtifactManageOutput() UserArtifactManageOutput {
	return i.ToUserArtifactManageOutputWithContext(context.Background())
}

func (i UserArtifactManageArgs) ToUserArtifactManageOutputWithContext(ctx context.Context) UserArtifactManageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageOutput)
}

func (i UserArtifactManageArgs) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return i.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (i UserArtifactManageArgs) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageOutput).ToUserArtifactManagePtrOutputWithContext(ctx)
}

// UserArtifactManagePtrInput is an input type that accepts UserArtifactManageArgs, UserArtifactManagePtr and UserArtifactManagePtrOutput values.
// You can construct a concrete instance of `UserArtifactManagePtrInput` via:
//
//          UserArtifactManageArgs{...}
//
//  or:
//
//          nil
type UserArtifactManagePtrInput interface {
	pulumi.Input

	ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput
	ToUserArtifactManagePtrOutputWithContext(context.Context) UserArtifactManagePtrOutput
}

type userArtifactManagePtrType UserArtifactManageArgs

func UserArtifactManagePtr(v *UserArtifactManageArgs) UserArtifactManagePtrInput {
	return (*userArtifactManagePtrType)(v)
}

func (*userArtifactManagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManage)(nil)).Elem()
}

func (i *userArtifactManagePtrType) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return i.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (i *userArtifactManagePtrType) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManagePtrOutput)
}

type UserArtifactManageOutput struct{ *pulumi.OutputState }

func (UserArtifactManageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManage)(nil)).Elem()
}

func (o UserArtifactManageOutput) ToUserArtifactManageOutput() UserArtifactManageOutput {
	return o
}

func (o UserArtifactManageOutput) ToUserArtifactManageOutputWithContext(ctx context.Context) UserArtifactManageOutput {
	return o
}

func (o UserArtifactManageOutput) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return o.ToUserArtifactManagePtrOutputWithContext(context.Background())
}

func (o UserArtifactManageOutput) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return o.ApplyT(func(v UserArtifactManage) *UserArtifactManage {
		return &v
	}).(UserArtifactManagePtrOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Install() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManage) string { return v.Install }).(pulumi.StringOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Remove() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManage) string { return v.Remove }).(pulumi.StringOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactManage) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type UserArtifactManagePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactManagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManage)(nil)).Elem()
}

func (o UserArtifactManagePtrOutput) ToUserArtifactManagePtrOutput() UserArtifactManagePtrOutput {
	return o
}

func (o UserArtifactManagePtrOutput) ToUserArtifactManagePtrOutputWithContext(ctx context.Context) UserArtifactManagePtrOutput {
	return o
}

func (o UserArtifactManagePtrOutput) Elem() UserArtifactManageOutput {
	return o.ApplyT(func(v *UserArtifactManage) UserArtifactManage { return *v }).(UserArtifactManageOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Install() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return &v.Install
	}).(pulumi.StringPtrOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Remove() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return &v.Remove
	}).(pulumi.StringPtrOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManagePtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManage) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type UserArtifactManageResponse struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install string `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove string `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update *string `pulumi:"update"`
}

// UserArtifactManageResponseInput is an input type that accepts UserArtifactManageResponseArgs and UserArtifactManageResponseOutput values.
// You can construct a concrete instance of `UserArtifactManageResponseInput` via:
//
//          UserArtifactManageResponseArgs{...}
type UserArtifactManageResponseInput interface {
	pulumi.Input

	ToUserArtifactManageResponseOutput() UserArtifactManageResponseOutput
	ToUserArtifactManageResponseOutputWithContext(context.Context) UserArtifactManageResponseOutput
}

type UserArtifactManageResponseArgs struct {
	// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
	Install pulumi.StringInput `pulumi:"install"`
	// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
	Remove pulumi.StringInput `pulumi:"remove"`
	// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (UserArtifactManageResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManageResponse)(nil)).Elem()
}

func (i UserArtifactManageResponseArgs) ToUserArtifactManageResponseOutput() UserArtifactManageResponseOutput {
	return i.ToUserArtifactManageResponseOutputWithContext(context.Background())
}

func (i UserArtifactManageResponseArgs) ToUserArtifactManageResponseOutputWithContext(ctx context.Context) UserArtifactManageResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageResponseOutput)
}

func (i UserArtifactManageResponseArgs) ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput {
	return i.ToUserArtifactManageResponsePtrOutputWithContext(context.Background())
}

func (i UserArtifactManageResponseArgs) ToUserArtifactManageResponsePtrOutputWithContext(ctx context.Context) UserArtifactManageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageResponseOutput).ToUserArtifactManageResponsePtrOutputWithContext(ctx)
}

// UserArtifactManageResponsePtrInput is an input type that accepts UserArtifactManageResponseArgs, UserArtifactManageResponsePtr and UserArtifactManageResponsePtrOutput values.
// You can construct a concrete instance of `UserArtifactManageResponsePtrInput` via:
//
//          UserArtifactManageResponseArgs{...}
//
//  or:
//
//          nil
type UserArtifactManageResponsePtrInput interface {
	pulumi.Input

	ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput
	ToUserArtifactManageResponsePtrOutputWithContext(context.Context) UserArtifactManageResponsePtrOutput
}

type userArtifactManageResponsePtrType UserArtifactManageResponseArgs

func UserArtifactManageResponsePtr(v *UserArtifactManageResponseArgs) UserArtifactManageResponsePtrInput {
	return (*userArtifactManageResponsePtrType)(v)
}

func (*userArtifactManageResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManageResponse)(nil)).Elem()
}

func (i *userArtifactManageResponsePtrType) ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput {
	return i.ToUserArtifactManageResponsePtrOutputWithContext(context.Background())
}

func (i *userArtifactManageResponsePtrType) ToUserArtifactManageResponsePtrOutputWithContext(ctx context.Context) UserArtifactManageResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactManageResponsePtrOutput)
}

type UserArtifactManageResponseOutput struct{ *pulumi.OutputState }

func (UserArtifactManageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactManageResponse)(nil)).Elem()
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponseOutput() UserArtifactManageResponseOutput {
	return o
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponseOutputWithContext(ctx context.Context) UserArtifactManageResponseOutput {
	return o
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput {
	return o.ToUserArtifactManageResponsePtrOutputWithContext(context.Background())
}

func (o UserArtifactManageResponseOutput) ToUserArtifactManageResponsePtrOutputWithContext(ctx context.Context) UserArtifactManageResponsePtrOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) *UserArtifactManageResponse {
		return &v
	}).(UserArtifactManageResponsePtrOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Install() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) string { return v.Install }).(pulumi.StringOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Remove() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) string { return v.Remove }).(pulumi.StringOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponseOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactManageResponse) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type UserArtifactManageResponsePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactManageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactManageResponse)(nil)).Elem()
}

func (o UserArtifactManageResponsePtrOutput) ToUserArtifactManageResponsePtrOutput() UserArtifactManageResponsePtrOutput {
	return o
}

func (o UserArtifactManageResponsePtrOutput) ToUserArtifactManageResponsePtrOutputWithContext(ctx context.Context) UserArtifactManageResponsePtrOutput {
	return o
}

func (o UserArtifactManageResponsePtrOutput) Elem() UserArtifactManageResponseOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) UserArtifactManageResponse { return *v }).(UserArtifactManageResponseOutput)
}

// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Install() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Install
	}).(pulumi.StringPtrOutput)
}

// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Remove() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Remove
	}).(pulumi.StringPtrOutput)
}

// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
func (o UserArtifactManageResponsePtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactManageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSource struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink *string `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink string `pulumi:"mediaLink"`
}

// UserArtifactSourceInput is an input type that accepts UserArtifactSourceArgs and UserArtifactSourceOutput values.
// You can construct a concrete instance of `UserArtifactSourceInput` via:
//
//          UserArtifactSourceArgs{...}
type UserArtifactSourceInput interface {
	pulumi.Input

	ToUserArtifactSourceOutput() UserArtifactSourceOutput
	ToUserArtifactSourceOutputWithContext(context.Context) UserArtifactSourceOutput
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceArgs struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink pulumi.StringPtrInput `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink pulumi.StringInput `pulumi:"mediaLink"`
}

func (UserArtifactSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSource)(nil)).Elem()
}

func (i UserArtifactSourceArgs) ToUserArtifactSourceOutput() UserArtifactSourceOutput {
	return i.ToUserArtifactSourceOutputWithContext(context.Background())
}

func (i UserArtifactSourceArgs) ToUserArtifactSourceOutputWithContext(ctx context.Context) UserArtifactSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceOutput)
}

func (i UserArtifactSourceArgs) ToUserArtifactSourcePtrOutput() UserArtifactSourcePtrOutput {
	return i.ToUserArtifactSourcePtrOutputWithContext(context.Background())
}

func (i UserArtifactSourceArgs) ToUserArtifactSourcePtrOutputWithContext(ctx context.Context) UserArtifactSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceOutput).ToUserArtifactSourcePtrOutputWithContext(ctx)
}

// UserArtifactSourcePtrInput is an input type that accepts UserArtifactSourceArgs, UserArtifactSourcePtr and UserArtifactSourcePtrOutput values.
// You can construct a concrete instance of `UserArtifactSourcePtrInput` via:
//
//          UserArtifactSourceArgs{...}
//
//  or:
//
//          nil
type UserArtifactSourcePtrInput interface {
	pulumi.Input

	ToUserArtifactSourcePtrOutput() UserArtifactSourcePtrOutput
	ToUserArtifactSourcePtrOutputWithContext(context.Context) UserArtifactSourcePtrOutput
}

type userArtifactSourcePtrType UserArtifactSourceArgs

func UserArtifactSourcePtr(v *UserArtifactSourceArgs) UserArtifactSourcePtrInput {
	return (*userArtifactSourcePtrType)(v)
}

func (*userArtifactSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSource)(nil)).Elem()
}

func (i *userArtifactSourcePtrType) ToUserArtifactSourcePtrOutput() UserArtifactSourcePtrOutput {
	return i.ToUserArtifactSourcePtrOutputWithContext(context.Background())
}

func (i *userArtifactSourcePtrType) ToUserArtifactSourcePtrOutputWithContext(ctx context.Context) UserArtifactSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourcePtrOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceOutput struct{ *pulumi.OutputState }

func (UserArtifactSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSource)(nil)).Elem()
}

func (o UserArtifactSourceOutput) ToUserArtifactSourceOutput() UserArtifactSourceOutput {
	return o
}

func (o UserArtifactSourceOutput) ToUserArtifactSourceOutputWithContext(ctx context.Context) UserArtifactSourceOutput {
	return o
}

func (o UserArtifactSourceOutput) ToUserArtifactSourcePtrOutput() UserArtifactSourcePtrOutput {
	return o.ToUserArtifactSourcePtrOutputWithContext(context.Background())
}

func (o UserArtifactSourceOutput) ToUserArtifactSourcePtrOutputWithContext(ctx context.Context) UserArtifactSourcePtrOutput {
	return o.ApplyT(func(v UserArtifactSource) *UserArtifactSource {
		return &v
	}).(UserArtifactSourcePtrOutput)
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSource) *string { return v.DefaultConfigurationLink }).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceOutput) MediaLink() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactSource) string { return v.MediaLink }).(pulumi.StringOutput)
}

type UserArtifactSourcePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSource)(nil)).Elem()
}

func (o UserArtifactSourcePtrOutput) ToUserArtifactSourcePtrOutput() UserArtifactSourcePtrOutput {
	return o
}

func (o UserArtifactSourcePtrOutput) ToUserArtifactSourcePtrOutputWithContext(ctx context.Context) UserArtifactSourcePtrOutput {
	return o
}

func (o UserArtifactSourcePtrOutput) Elem() UserArtifactSourceOutput {
	return o.ApplyT(func(v *UserArtifactSource) UserArtifactSource { return *v }).(UserArtifactSourceOutput)
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourcePtrOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSource) *string {
		if v == nil {
			return nil
		}
		return v.DefaultConfigurationLink
	}).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourcePtrOutput) MediaLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSource) *string {
		if v == nil {
			return nil
		}
		return &v.MediaLink
	}).(pulumi.StringPtrOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceResponse struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink *string `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink string `pulumi:"mediaLink"`
}

// UserArtifactSourceResponseInput is an input type that accepts UserArtifactSourceResponseArgs and UserArtifactSourceResponseOutput values.
// You can construct a concrete instance of `UserArtifactSourceResponseInput` via:
//
//          UserArtifactSourceResponseArgs{...}
type UserArtifactSourceResponseInput interface {
	pulumi.Input

	ToUserArtifactSourceResponseOutput() UserArtifactSourceResponseOutput
	ToUserArtifactSourceResponseOutputWithContext(context.Context) UserArtifactSourceResponseOutput
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceResponseArgs struct {
	// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
	DefaultConfigurationLink pulumi.StringPtrInput `pulumi:"defaultConfigurationLink"`
	// Required. The mediaLink of the artifact, must be a readable storage page blob.
	MediaLink pulumi.StringInput `pulumi:"mediaLink"`
}

func (UserArtifactSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSourceResponse)(nil)).Elem()
}

func (i UserArtifactSourceResponseArgs) ToUserArtifactSourceResponseOutput() UserArtifactSourceResponseOutput {
	return i.ToUserArtifactSourceResponseOutputWithContext(context.Background())
}

func (i UserArtifactSourceResponseArgs) ToUserArtifactSourceResponseOutputWithContext(ctx context.Context) UserArtifactSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceResponseOutput)
}

func (i UserArtifactSourceResponseArgs) ToUserArtifactSourceResponsePtrOutput() UserArtifactSourceResponsePtrOutput {
	return i.ToUserArtifactSourceResponsePtrOutputWithContext(context.Background())
}

func (i UserArtifactSourceResponseArgs) ToUserArtifactSourceResponsePtrOutputWithContext(ctx context.Context) UserArtifactSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceResponseOutput).ToUserArtifactSourceResponsePtrOutputWithContext(ctx)
}

// UserArtifactSourceResponsePtrInput is an input type that accepts UserArtifactSourceResponseArgs, UserArtifactSourceResponsePtr and UserArtifactSourceResponsePtrOutput values.
// You can construct a concrete instance of `UserArtifactSourceResponsePtrInput` via:
//
//          UserArtifactSourceResponseArgs{...}
//
//  or:
//
//          nil
type UserArtifactSourceResponsePtrInput interface {
	pulumi.Input

	ToUserArtifactSourceResponsePtrOutput() UserArtifactSourceResponsePtrOutput
	ToUserArtifactSourceResponsePtrOutputWithContext(context.Context) UserArtifactSourceResponsePtrOutput
}

type userArtifactSourceResponsePtrType UserArtifactSourceResponseArgs

func UserArtifactSourceResponsePtr(v *UserArtifactSourceResponseArgs) UserArtifactSourceResponsePtrInput {
	return (*userArtifactSourceResponsePtrType)(v)
}

func (*userArtifactSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSourceResponse)(nil)).Elem()
}

func (i *userArtifactSourceResponsePtrType) ToUserArtifactSourceResponsePtrOutput() UserArtifactSourceResponsePtrOutput {
	return i.ToUserArtifactSourceResponsePtrOutputWithContext(context.Background())
}

func (i *userArtifactSourceResponsePtrType) ToUserArtifactSourceResponsePtrOutputWithContext(ctx context.Context) UserArtifactSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserArtifactSourceResponsePtrOutput)
}

// The source image from which the Image Version is going to be created.
type UserArtifactSourceResponseOutput struct{ *pulumi.OutputState }

func (UserArtifactSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserArtifactSourceResponse)(nil)).Elem()
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponseOutput() UserArtifactSourceResponseOutput {
	return o
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponseOutputWithContext(ctx context.Context) UserArtifactSourceResponseOutput {
	return o
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponsePtrOutput() UserArtifactSourceResponsePtrOutput {
	return o.ToUserArtifactSourceResponsePtrOutputWithContext(context.Background())
}

func (o UserArtifactSourceResponseOutput) ToUserArtifactSourceResponsePtrOutputWithContext(ctx context.Context) UserArtifactSourceResponsePtrOutput {
	return o.ApplyT(func(v UserArtifactSourceResponse) *UserArtifactSourceResponse {
		return &v
	}).(UserArtifactSourceResponsePtrOutput)
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponseOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserArtifactSourceResponse) *string { return v.DefaultConfigurationLink }).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponseOutput) MediaLink() pulumi.StringOutput {
	return o.ApplyT(func(v UserArtifactSourceResponse) string { return v.MediaLink }).(pulumi.StringOutput)
}

type UserArtifactSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (UserArtifactSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserArtifactSourceResponse)(nil)).Elem()
}

func (o UserArtifactSourceResponsePtrOutput) ToUserArtifactSourceResponsePtrOutput() UserArtifactSourceResponsePtrOutput {
	return o
}

func (o UserArtifactSourceResponsePtrOutput) ToUserArtifactSourceResponsePtrOutputWithContext(ctx context.Context) UserArtifactSourceResponsePtrOutput {
	return o
}

func (o UserArtifactSourceResponsePtrOutput) Elem() UserArtifactSourceResponseOutput {
	return o.ApplyT(func(v *UserArtifactSourceResponse) UserArtifactSourceResponse { return *v }).(UserArtifactSourceResponseOutput)
}

// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponsePtrOutput) DefaultConfigurationLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultConfigurationLink
	}).(pulumi.StringPtrOutput)
}

// Required. The mediaLink of the artifact, must be a readable storage page blob.
func (o UserArtifactSourceResponsePtrOutput) MediaLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserArtifactSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MediaLink
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DataDiskImageEncryptionOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionArrayOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionResponseOutput{})
	pulumi.RegisterOutputType(DataDiskImageEncryptionResponseArrayOutput{})
	pulumi.RegisterOutputType(DisallowedOutput{})
	pulumi.RegisterOutputType(DisallowedPtrOutput{})
	pulumi.RegisterOutputType(DisallowedResponseOutput{})
	pulumi.RegisterOutputType(DisallowedResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionImagesOutput{})
	pulumi.RegisterOutputType(EncryptionImagesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionImagesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionImagesResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfileOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionPublishingProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionSourceOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionSourcePtrOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionSourceResponseOutput{})
	pulumi.RegisterOutputType(GalleryArtifactVersionSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageArrayOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageResponseOutput{})
	pulumi.RegisterOutputType(GalleryDataDiskImageResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryIdentifierResponseOutput{})
	pulumi.RegisterOutputType(GalleryIdentifierResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageFeatureResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierPtrOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPublishingProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImagePtrOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponseOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponsePtrOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanPtrOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanResponseOutput{})
	pulumi.RegisterOutputType(ImagePurchasePlanResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionPtrOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionResponseOutput{})
	pulumi.RegisterOutputType(OSDiskImageEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RecommendedMachineConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RegionalReplicationStatusResponseOutput{})
	pulumi.RegisterOutputType(RegionalReplicationStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationStatusResponseOutput{})
	pulumi.RegisterOutputType(ReplicationStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceRangeOutput{})
	pulumi.RegisterOutputType(ResourceRangePtrOutput{})
	pulumi.RegisterOutputType(ResourceRangeResponseOutput{})
	pulumi.RegisterOutputType(ResourceRangeResponsePtrOutput{})
	pulumi.RegisterOutputType(SharingProfileOutput{})
	pulumi.RegisterOutputType(SharingProfilePtrOutput{})
	pulumi.RegisterOutputType(SharingProfileGroupResponseOutput{})
	pulumi.RegisterOutputType(SharingProfileGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(SharingProfileResponseOutput{})
	pulumi.RegisterOutputType(SharingProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(TargetRegionOutput{})
	pulumi.RegisterOutputType(TargetRegionArrayOutput{})
	pulumi.RegisterOutputType(TargetRegionResponseOutput{})
	pulumi.RegisterOutputType(TargetRegionResponseArrayOutput{})
	pulumi.RegisterOutputType(UserArtifactManageOutput{})
	pulumi.RegisterOutputType(UserArtifactManagePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactManageResponseOutput{})
	pulumi.RegisterOutputType(UserArtifactManageResponsePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactSourceOutput{})
	pulumi.RegisterOutputType(UserArtifactSourcePtrOutput{})
	pulumi.RegisterOutputType(UserArtifactSourceResponseOutput{})
	pulumi.RegisterOutputType(UserArtifactSourceResponsePtrOutput{})
}
