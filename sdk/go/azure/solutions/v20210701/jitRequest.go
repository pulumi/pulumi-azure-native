// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about JIT request definition.
type JitRequest struct {
	pulumi.CustomResourceState

	// The parent application id.
	ApplicationResourceId pulumi.StringOutput `pulumi:"applicationResourceId"`
	// The client entity that created the JIT request.
	CreatedBy ApplicationClientDetailsResponseOutput `pulumi:"createdBy"`
	// The JIT authorization policies.
	JitAuthorizationPolicies JitAuthorizationPoliciesResponseArrayOutput `pulumi:"jitAuthorizationPolicies"`
	// The JIT request state.
	JitRequestState pulumi.StringOutput `pulumi:"jitRequestState"`
	// The JIT request properties.
	JitSchedulingPolicy JitSchedulingPolicyResponseOutput `pulumi:"jitSchedulingPolicy"`
	// Resource location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The JIT request provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The publisher tenant id.
	PublisherTenantId pulumi.StringOutput `pulumi:"publisherTenantId"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
	// The client entity that last updated the JIT request.
	UpdatedBy ApplicationClientDetailsResponseOutput `pulumi:"updatedBy"`
}

// NewJitRequest registers a new resource with the given unique name, arguments, and options.
func NewJitRequest(ctx *pulumi.Context,
	name string, args *JitRequestArgs, opts ...pulumi.ResourceOption) (*JitRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationResourceId'")
	}
	if args.JitAuthorizationPolicies == nil {
		return nil, errors.New("invalid value for required argument 'JitAuthorizationPolicies'")
	}
	if args.JitSchedulingPolicy == nil {
		return nil, errors.New("invalid value for required argument 'JitSchedulingPolicy'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:solutions:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20180301:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20180601:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20180901preview:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20190701:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20200821preview:JitRequest"),
		},
		{
			Type: pulumi.String("azure-native:solutions/v20210201preview:JitRequest"),
		},
	})
	opts = append(opts, aliases)
	var resource JitRequest
	err := ctx.RegisterResource("azure-native:solutions/v20210701:JitRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJitRequest gets an existing JitRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJitRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JitRequestState, opts ...pulumi.ResourceOption) (*JitRequest, error) {
	var resource JitRequest
	err := ctx.ReadResource("azure-native:solutions/v20210701:JitRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JitRequest resources.
type jitRequestState struct {
}

type JitRequestState struct {
}

func (JitRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*jitRequestState)(nil)).Elem()
}

type jitRequestArgs struct {
	// The parent application id.
	ApplicationResourceId string `pulumi:"applicationResourceId"`
	// The JIT authorization policies.
	JitAuthorizationPolicies []JitAuthorizationPolicies `pulumi:"jitAuthorizationPolicies"`
	// The name of the JIT request.
	JitRequestName *string `pulumi:"jitRequestName"`
	// The JIT request properties.
	JitSchedulingPolicy JitSchedulingPolicy `pulumi:"jitSchedulingPolicy"`
	// Resource location
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a JitRequest resource.
type JitRequestArgs struct {
	// The parent application id.
	ApplicationResourceId pulumi.StringInput
	// The JIT authorization policies.
	JitAuthorizationPolicies JitAuthorizationPoliciesArrayInput
	// The name of the JIT request.
	JitRequestName pulumi.StringPtrInput
	// The JIT request properties.
	JitSchedulingPolicy JitSchedulingPolicyInput
	// Resource location
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (JitRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jitRequestArgs)(nil)).Elem()
}

type JitRequestInput interface {
	pulumi.Input

	ToJitRequestOutput() JitRequestOutput
	ToJitRequestOutputWithContext(ctx context.Context) JitRequestOutput
}

func (*JitRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**JitRequest)(nil)).Elem()
}

func (i *JitRequest) ToJitRequestOutput() JitRequestOutput {
	return i.ToJitRequestOutputWithContext(context.Background())
}

func (i *JitRequest) ToJitRequestOutputWithContext(ctx context.Context) JitRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JitRequestOutput)
}

type JitRequestOutput struct{ *pulumi.OutputState }

func (JitRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JitRequest)(nil)).Elem()
}

func (o JitRequestOutput) ToJitRequestOutput() JitRequestOutput {
	return o
}

func (o JitRequestOutput) ToJitRequestOutputWithContext(ctx context.Context) JitRequestOutput {
	return o
}

// The parent application id.
func (o JitRequestOutput) ApplicationResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.ApplicationResourceId }).(pulumi.StringOutput)
}

// The client entity that created the JIT request.
func (o JitRequestOutput) CreatedBy() ApplicationClientDetailsResponseOutput {
	return o.ApplyT(func(v *JitRequest) ApplicationClientDetailsResponseOutput { return v.CreatedBy }).(ApplicationClientDetailsResponseOutput)
}

// The JIT authorization policies.
func (o JitRequestOutput) JitAuthorizationPolicies() JitAuthorizationPoliciesResponseArrayOutput {
	return o.ApplyT(func(v *JitRequest) JitAuthorizationPoliciesResponseArrayOutput { return v.JitAuthorizationPolicies }).(JitAuthorizationPoliciesResponseArrayOutput)
}

// The JIT request state.
func (o JitRequestOutput) JitRequestState() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.JitRequestState }).(pulumi.StringOutput)
}

// The JIT request properties.
func (o JitRequestOutput) JitSchedulingPolicy() JitSchedulingPolicyResponseOutput {
	return o.ApplyT(func(v *JitRequest) JitSchedulingPolicyResponseOutput { return v.JitSchedulingPolicy }).(JitSchedulingPolicyResponseOutput)
}

// Resource location
func (o JitRequestOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o JitRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The JIT request provisioning state.
func (o JitRequestOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The publisher tenant id.
func (o JitRequestOutput) PublisherTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.PublisherTenantId }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o JitRequestOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *JitRequest) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags
func (o JitRequestOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o JitRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *JitRequest) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The client entity that last updated the JIT request.
func (o JitRequestOutput) UpdatedBy() ApplicationClientDetailsResponseOutput {
	return o.ApplyT(func(v *JitRequest) ApplicationClientDetailsResponseOutput { return v.UpdatedBy }).(ApplicationClientDetailsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(JitRequestOutput{})
}
