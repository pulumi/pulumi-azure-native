// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The managed application definition artifact type.
type ApplicationArtifactType string

const (
	ApplicationArtifactTypeNotSpecified = ApplicationArtifactType("NotSpecified")
	ApplicationArtifactTypeTemplate     = ApplicationArtifactType("Template")
	ApplicationArtifactTypeCustom       = ApplicationArtifactType("Custom")
)

func (ApplicationArtifactType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifactType)(nil)).Elem()
}

func (e ApplicationArtifactType) ToApplicationArtifactTypeOutput() ApplicationArtifactTypeOutput {
	return pulumi.ToOutput(e).(ApplicationArtifactTypeOutput)
}

func (e ApplicationArtifactType) ToApplicationArtifactTypeOutputWithContext(ctx context.Context) ApplicationArtifactTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationArtifactTypeOutput)
}

func (e ApplicationArtifactType) ToApplicationArtifactTypePtrOutput() ApplicationArtifactTypePtrOutput {
	return e.ToApplicationArtifactTypePtrOutputWithContext(context.Background())
}

func (e ApplicationArtifactType) ToApplicationArtifactTypePtrOutputWithContext(ctx context.Context) ApplicationArtifactTypePtrOutput {
	return ApplicationArtifactType(e).ToApplicationArtifactTypeOutputWithContext(ctx).ToApplicationArtifactTypePtrOutputWithContext(ctx)
}

func (e ApplicationArtifactType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationArtifactType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationArtifactType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationArtifactType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationArtifactTypeOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArtifactType)(nil)).Elem()
}

func (o ApplicationArtifactTypeOutput) ToApplicationArtifactTypeOutput() ApplicationArtifactTypeOutput {
	return o
}

func (o ApplicationArtifactTypeOutput) ToApplicationArtifactTypeOutputWithContext(ctx context.Context) ApplicationArtifactTypeOutput {
	return o
}

func (o ApplicationArtifactTypeOutput) ToApplicationArtifactTypePtrOutput() ApplicationArtifactTypePtrOutput {
	return o.ToApplicationArtifactTypePtrOutputWithContext(context.Background())
}

func (o ApplicationArtifactTypeOutput) ToApplicationArtifactTypePtrOutputWithContext(ctx context.Context) ApplicationArtifactTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationArtifactType) *ApplicationArtifactType {
		return &v
	}).(ApplicationArtifactTypePtrOutput)
}

func (o ApplicationArtifactTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationArtifactTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationArtifactType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationArtifactTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationArtifactTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationArtifactType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationArtifactTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationArtifactTypePtrOutput) ElementType() reflect.Type {
	return applicationArtifactTypePtrType
}

func (o ApplicationArtifactTypePtrOutput) ToApplicationArtifactTypePtrOutput() ApplicationArtifactTypePtrOutput {
	return o
}

func (o ApplicationArtifactTypePtrOutput) ToApplicationArtifactTypePtrOutputWithContext(ctx context.Context) ApplicationArtifactTypePtrOutput {
	return o
}

func (o ApplicationArtifactTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationArtifactTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationArtifactType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationArtifactTypePtrOutput) Elem() ApplicationArtifactTypeOutput {
	return o.ApplyT(func(v *ApplicationArtifactType) ApplicationArtifactType {
		var ret ApplicationArtifactType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ApplicationArtifactTypeOutput)
}

// ApplicationArtifactTypeInput is an input type that accepts ApplicationArtifactTypeArgs and ApplicationArtifactTypeOutput values.
// You can construct a concrete instance of `ApplicationArtifactTypeInput` via:
//
//          ApplicationArtifactTypeArgs{...}
type ApplicationArtifactTypeInput interface {
	pulumi.Input

	ToApplicationArtifactTypeOutput() ApplicationArtifactTypeOutput
	ToApplicationArtifactTypeOutputWithContext(context.Context) ApplicationArtifactTypeOutput
}

var applicationArtifactTypePtrType = reflect.TypeOf((**ApplicationArtifactType)(nil)).Elem()

type ApplicationArtifactTypePtrInput interface {
	pulumi.Input

	ToApplicationArtifactTypePtrOutput() ApplicationArtifactTypePtrOutput
	ToApplicationArtifactTypePtrOutputWithContext(context.Context) ApplicationArtifactTypePtrOutput
}

type applicationArtifactTypePtr string

func ApplicationArtifactTypePtr(v string) ApplicationArtifactTypePtrInput {
	return (*applicationArtifactTypePtr)(&v)
}

func (*applicationArtifactTypePtr) ElementType() reflect.Type {
	return applicationArtifactTypePtrType
}

func (in *applicationArtifactTypePtr) ToApplicationArtifactTypePtrOutput() ApplicationArtifactTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationArtifactTypePtrOutput)
}

func (in *applicationArtifactTypePtr) ToApplicationArtifactTypePtrOutputWithContext(ctx context.Context) ApplicationArtifactTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationArtifactTypePtrOutput)
}

// The managed application definition artifact name.
type ApplicationDefinitionArtifactName string

const (
	ApplicationDefinitionArtifactNameNotSpecified                = ApplicationDefinitionArtifactName("NotSpecified")
	ApplicationDefinitionArtifactNameApplicationResourceTemplate = ApplicationDefinitionArtifactName("ApplicationResourceTemplate")
	ApplicationDefinitionArtifactNameCreateUiDefinition          = ApplicationDefinitionArtifactName("CreateUiDefinition")
	ApplicationDefinitionArtifactNameMainTemplateParameters      = ApplicationDefinitionArtifactName("MainTemplateParameters")
)

func (ApplicationDefinitionArtifactName) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionArtifactName)(nil)).Elem()
}

func (e ApplicationDefinitionArtifactName) ToApplicationDefinitionArtifactNameOutput() ApplicationDefinitionArtifactNameOutput {
	return pulumi.ToOutput(e).(ApplicationDefinitionArtifactNameOutput)
}

func (e ApplicationDefinitionArtifactName) ToApplicationDefinitionArtifactNameOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationDefinitionArtifactNameOutput)
}

func (e ApplicationDefinitionArtifactName) ToApplicationDefinitionArtifactNamePtrOutput() ApplicationDefinitionArtifactNamePtrOutput {
	return e.ToApplicationDefinitionArtifactNamePtrOutputWithContext(context.Background())
}

func (e ApplicationDefinitionArtifactName) ToApplicationDefinitionArtifactNamePtrOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNamePtrOutput {
	return ApplicationDefinitionArtifactName(e).ToApplicationDefinitionArtifactNameOutputWithContext(ctx).ToApplicationDefinitionArtifactNamePtrOutputWithContext(ctx)
}

func (e ApplicationDefinitionArtifactName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationDefinitionArtifactName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationDefinitionArtifactName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationDefinitionArtifactName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationDefinitionArtifactNameOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionArtifactNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinitionArtifactName)(nil)).Elem()
}

func (o ApplicationDefinitionArtifactNameOutput) ToApplicationDefinitionArtifactNameOutput() ApplicationDefinitionArtifactNameOutput {
	return o
}

func (o ApplicationDefinitionArtifactNameOutput) ToApplicationDefinitionArtifactNameOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNameOutput {
	return o
}

func (o ApplicationDefinitionArtifactNameOutput) ToApplicationDefinitionArtifactNamePtrOutput() ApplicationDefinitionArtifactNamePtrOutput {
	return o.ToApplicationDefinitionArtifactNamePtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionArtifactNameOutput) ToApplicationDefinitionArtifactNamePtrOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationDefinitionArtifactName) *ApplicationDefinitionArtifactName {
		return &v
	}).(ApplicationDefinitionArtifactNamePtrOutput)
}

func (o ApplicationDefinitionArtifactNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationDefinitionArtifactNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationDefinitionArtifactName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationDefinitionArtifactNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionArtifactNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationDefinitionArtifactName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationDefinitionArtifactNamePtrOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionArtifactNamePtrOutput) ElementType() reflect.Type {
	return applicationDefinitionArtifactNamePtrType
}

func (o ApplicationDefinitionArtifactNamePtrOutput) ToApplicationDefinitionArtifactNamePtrOutput() ApplicationDefinitionArtifactNamePtrOutput {
	return o
}

func (o ApplicationDefinitionArtifactNamePtrOutput) ToApplicationDefinitionArtifactNamePtrOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNamePtrOutput {
	return o
}

func (o ApplicationDefinitionArtifactNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionArtifactNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationDefinitionArtifactName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationDefinitionArtifactNamePtrOutput) Elem() ApplicationDefinitionArtifactNameOutput {
	return o.ApplyT(func(v *ApplicationDefinitionArtifactName) ApplicationDefinitionArtifactName {
		var ret ApplicationDefinitionArtifactName
		if v != nil {
			ret = *v
		}
		return ret
	}).(ApplicationDefinitionArtifactNameOutput)
}

// ApplicationDefinitionArtifactNameInput is an input type that accepts ApplicationDefinitionArtifactNameArgs and ApplicationDefinitionArtifactNameOutput values.
// You can construct a concrete instance of `ApplicationDefinitionArtifactNameInput` via:
//
//          ApplicationDefinitionArtifactNameArgs{...}
type ApplicationDefinitionArtifactNameInput interface {
	pulumi.Input

	ToApplicationDefinitionArtifactNameOutput() ApplicationDefinitionArtifactNameOutput
	ToApplicationDefinitionArtifactNameOutputWithContext(context.Context) ApplicationDefinitionArtifactNameOutput
}

var applicationDefinitionArtifactNamePtrType = reflect.TypeOf((**ApplicationDefinitionArtifactName)(nil)).Elem()

type ApplicationDefinitionArtifactNamePtrInput interface {
	pulumi.Input

	ToApplicationDefinitionArtifactNamePtrOutput() ApplicationDefinitionArtifactNamePtrOutput
	ToApplicationDefinitionArtifactNamePtrOutputWithContext(context.Context) ApplicationDefinitionArtifactNamePtrOutput
}

type applicationDefinitionArtifactNamePtr string

func ApplicationDefinitionArtifactNamePtr(v string) ApplicationDefinitionArtifactNamePtrInput {
	return (*applicationDefinitionArtifactNamePtr)(&v)
}

func (*applicationDefinitionArtifactNamePtr) ElementType() reflect.Type {
	return applicationDefinitionArtifactNamePtrType
}

func (in *applicationDefinitionArtifactNamePtr) ToApplicationDefinitionArtifactNamePtrOutput() ApplicationDefinitionArtifactNamePtrOutput {
	return pulumi.ToOutput(in).(ApplicationDefinitionArtifactNamePtrOutput)
}

func (in *applicationDefinitionArtifactNamePtr) ToApplicationDefinitionArtifactNamePtrOutputWithContext(ctx context.Context) ApplicationDefinitionArtifactNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationDefinitionArtifactNamePtrOutput)
}

// The managed application lock level.
type ApplicationLockLevel string

const (
	ApplicationLockLevelCanNotDelete = ApplicationLockLevel("CanNotDelete")
	ApplicationLockLevelReadOnly     = ApplicationLockLevel("ReadOnly")
	ApplicationLockLevelNone         = ApplicationLockLevel("None")
)

func (ApplicationLockLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLockLevel)(nil)).Elem()
}

func (e ApplicationLockLevel) ToApplicationLockLevelOutput() ApplicationLockLevelOutput {
	return pulumi.ToOutput(e).(ApplicationLockLevelOutput)
}

func (e ApplicationLockLevel) ToApplicationLockLevelOutputWithContext(ctx context.Context) ApplicationLockLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationLockLevelOutput)
}

func (e ApplicationLockLevel) ToApplicationLockLevelPtrOutput() ApplicationLockLevelPtrOutput {
	return e.ToApplicationLockLevelPtrOutputWithContext(context.Background())
}

func (e ApplicationLockLevel) ToApplicationLockLevelPtrOutputWithContext(ctx context.Context) ApplicationLockLevelPtrOutput {
	return ApplicationLockLevel(e).ToApplicationLockLevelOutputWithContext(ctx).ToApplicationLockLevelPtrOutputWithContext(ctx)
}

func (e ApplicationLockLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationLockLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationLockLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationLockLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationLockLevelOutput struct{ *pulumi.OutputState }

func (ApplicationLockLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLockLevel)(nil)).Elem()
}

func (o ApplicationLockLevelOutput) ToApplicationLockLevelOutput() ApplicationLockLevelOutput {
	return o
}

func (o ApplicationLockLevelOutput) ToApplicationLockLevelOutputWithContext(ctx context.Context) ApplicationLockLevelOutput {
	return o
}

func (o ApplicationLockLevelOutput) ToApplicationLockLevelPtrOutput() ApplicationLockLevelPtrOutput {
	return o.ToApplicationLockLevelPtrOutputWithContext(context.Background())
}

func (o ApplicationLockLevelOutput) ToApplicationLockLevelPtrOutputWithContext(ctx context.Context) ApplicationLockLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationLockLevel) *ApplicationLockLevel {
		return &v
	}).(ApplicationLockLevelPtrOutput)
}

func (o ApplicationLockLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationLockLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationLockLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationLockLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationLockLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationLockLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationLockLevelPtrOutput struct{ *pulumi.OutputState }

func (ApplicationLockLevelPtrOutput) ElementType() reflect.Type {
	return applicationLockLevelPtrType
}

func (o ApplicationLockLevelPtrOutput) ToApplicationLockLevelPtrOutput() ApplicationLockLevelPtrOutput {
	return o
}

func (o ApplicationLockLevelPtrOutput) ToApplicationLockLevelPtrOutputWithContext(ctx context.Context) ApplicationLockLevelPtrOutput {
	return o
}

func (o ApplicationLockLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationLockLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationLockLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationLockLevelPtrOutput) Elem() ApplicationLockLevelOutput {
	return o.ApplyT(func(v *ApplicationLockLevel) ApplicationLockLevel {
		var ret ApplicationLockLevel
		if v != nil {
			ret = *v
		}
		return ret
	}).(ApplicationLockLevelOutput)
}

// ApplicationLockLevelInput is an input type that accepts ApplicationLockLevelArgs and ApplicationLockLevelOutput values.
// You can construct a concrete instance of `ApplicationLockLevelInput` via:
//
//          ApplicationLockLevelArgs{...}
type ApplicationLockLevelInput interface {
	pulumi.Input

	ToApplicationLockLevelOutput() ApplicationLockLevelOutput
	ToApplicationLockLevelOutputWithContext(context.Context) ApplicationLockLevelOutput
}

var applicationLockLevelPtrType = reflect.TypeOf((**ApplicationLockLevel)(nil)).Elem()

type ApplicationLockLevelPtrInput interface {
	pulumi.Input

	ToApplicationLockLevelPtrOutput() ApplicationLockLevelPtrOutput
	ToApplicationLockLevelPtrOutputWithContext(context.Context) ApplicationLockLevelPtrOutput
}

type applicationLockLevelPtr string

func ApplicationLockLevelPtr(v string) ApplicationLockLevelPtrInput {
	return (*applicationLockLevelPtr)(&v)
}

func (*applicationLockLevelPtr) ElementType() reflect.Type {
	return applicationLockLevelPtrType
}

func (in *applicationLockLevelPtr) ToApplicationLockLevelPtrOutput() ApplicationLockLevelPtrOutput {
	return pulumi.ToOutput(in).(ApplicationLockLevelPtrOutput)
}

func (in *applicationLockLevelPtr) ToApplicationLockLevelPtrOutputWithContext(ctx context.Context) ApplicationLockLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationLockLevelPtrOutput)
}

// The managed application management mode.
type ApplicationManagementMode string

const (
	ApplicationManagementModeNotSpecified = ApplicationManagementMode("NotSpecified")
	ApplicationManagementModeUnmanaged    = ApplicationManagementMode("Unmanaged")
	ApplicationManagementModeManaged      = ApplicationManagementMode("Managed")
)

func (ApplicationManagementMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationManagementMode)(nil)).Elem()
}

func (e ApplicationManagementMode) ToApplicationManagementModeOutput() ApplicationManagementModeOutput {
	return pulumi.ToOutput(e).(ApplicationManagementModeOutput)
}

func (e ApplicationManagementMode) ToApplicationManagementModeOutputWithContext(ctx context.Context) ApplicationManagementModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationManagementModeOutput)
}

func (e ApplicationManagementMode) ToApplicationManagementModePtrOutput() ApplicationManagementModePtrOutput {
	return e.ToApplicationManagementModePtrOutputWithContext(context.Background())
}

func (e ApplicationManagementMode) ToApplicationManagementModePtrOutputWithContext(ctx context.Context) ApplicationManagementModePtrOutput {
	return ApplicationManagementMode(e).ToApplicationManagementModeOutputWithContext(ctx).ToApplicationManagementModePtrOutputWithContext(ctx)
}

func (e ApplicationManagementMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationManagementMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationManagementMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationManagementMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationManagementModeOutput struct{ *pulumi.OutputState }

func (ApplicationManagementModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationManagementMode)(nil)).Elem()
}

func (o ApplicationManagementModeOutput) ToApplicationManagementModeOutput() ApplicationManagementModeOutput {
	return o
}

func (o ApplicationManagementModeOutput) ToApplicationManagementModeOutputWithContext(ctx context.Context) ApplicationManagementModeOutput {
	return o
}

func (o ApplicationManagementModeOutput) ToApplicationManagementModePtrOutput() ApplicationManagementModePtrOutput {
	return o.ToApplicationManagementModePtrOutputWithContext(context.Background())
}

func (o ApplicationManagementModeOutput) ToApplicationManagementModePtrOutputWithContext(ctx context.Context) ApplicationManagementModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationManagementMode) *ApplicationManagementMode {
		return &v
	}).(ApplicationManagementModePtrOutput)
}

func (o ApplicationManagementModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationManagementModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationManagementMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationManagementModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationManagementModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationManagementMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationManagementModePtrOutput struct{ *pulumi.OutputState }

func (ApplicationManagementModePtrOutput) ElementType() reflect.Type {
	return applicationManagementModePtrType
}

func (o ApplicationManagementModePtrOutput) ToApplicationManagementModePtrOutput() ApplicationManagementModePtrOutput {
	return o
}

func (o ApplicationManagementModePtrOutput) ToApplicationManagementModePtrOutputWithContext(ctx context.Context) ApplicationManagementModePtrOutput {
	return o
}

func (o ApplicationManagementModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationManagementModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationManagementMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationManagementModePtrOutput) Elem() ApplicationManagementModeOutput {
	return o.ApplyT(func(v *ApplicationManagementMode) ApplicationManagementMode {
		var ret ApplicationManagementMode
		if v != nil {
			ret = *v
		}
		return ret
	}).(ApplicationManagementModeOutput)
}

// ApplicationManagementModeInput is an input type that accepts ApplicationManagementModeArgs and ApplicationManagementModeOutput values.
// You can construct a concrete instance of `ApplicationManagementModeInput` via:
//
//          ApplicationManagementModeArgs{...}
type ApplicationManagementModeInput interface {
	pulumi.Input

	ToApplicationManagementModeOutput() ApplicationManagementModeOutput
	ToApplicationManagementModeOutputWithContext(context.Context) ApplicationManagementModeOutput
}

var applicationManagementModePtrType = reflect.TypeOf((**ApplicationManagementMode)(nil)).Elem()

type ApplicationManagementModePtrInput interface {
	pulumi.Input

	ToApplicationManagementModePtrOutput() ApplicationManagementModePtrOutput
	ToApplicationManagementModePtrOutputWithContext(context.Context) ApplicationManagementModePtrOutput
}

type applicationManagementModePtr string

func ApplicationManagementModePtr(v string) ApplicationManagementModePtrInput {
	return (*applicationManagementModePtr)(&v)
}

func (*applicationManagementModePtr) ElementType() reflect.Type {
	return applicationManagementModePtrType
}

func (in *applicationManagementModePtr) ToApplicationManagementModePtrOutput() ApplicationManagementModePtrOutput {
	return pulumi.ToOutput(in).(ApplicationManagementModePtrOutput)
}

func (in *applicationManagementModePtr) ToApplicationManagementModePtrOutputWithContext(ctx context.Context) ApplicationManagementModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationManagementModePtrOutput)
}

// The managed application deployment mode.
type DeploymentMode string

const (
	DeploymentModeNotSpecified = DeploymentMode("NotSpecified")
	DeploymentModeIncremental  = DeploymentMode("Incremental")
	DeploymentModeComplete     = DeploymentMode("Complete")
)

func (DeploymentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (e DeploymentMode) ToDeploymentModeOutput() DeploymentModeOutput {
	return pulumi.ToOutput(e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return e.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return DeploymentMode(e).ToDeploymentModeOutputWithContext(ctx).ToDeploymentModePtrOutputWithContext(ctx)
}

func (e DeploymentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeploymentModeOutput struct{ *pulumi.OutputState }

func (DeploymentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (o DeploymentModeOutput) ToDeploymentModeOutput() DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentMode) *DeploymentMode {
		return &v
	}).(DeploymentModePtrOutput)
}

func (o DeploymentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeploymentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeploymentModePtrOutput struct{ *pulumi.OutputState }

func (DeploymentModePtrOutput) ElementType() reflect.Type {
	return deploymentModePtrType
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeploymentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentModePtrOutput) Elem() DeploymentModeOutput {
	return o.ApplyT(func(v *DeploymentMode) DeploymentMode {
		var ret DeploymentMode
		if v != nil {
			ret = *v
		}
		return ret
	}).(DeploymentModeOutput)
}

// DeploymentModeInput is an input type that accepts DeploymentModeArgs and DeploymentModeOutput values.
// You can construct a concrete instance of `DeploymentModeInput` via:
//
//          DeploymentModeArgs{...}
type DeploymentModeInput interface {
	pulumi.Input

	ToDeploymentModeOutput() DeploymentModeOutput
	ToDeploymentModeOutputWithContext(context.Context) DeploymentModeOutput
}

var deploymentModePtrType = reflect.TypeOf((**DeploymentMode)(nil)).Elem()

type DeploymentModePtrInput interface {
	pulumi.Input

	ToDeploymentModePtrOutput() DeploymentModePtrOutput
	ToDeploymentModePtrOutputWithContext(context.Context) DeploymentModePtrOutput
}

type deploymentModePtr string

func DeploymentModePtr(v string) DeploymentModePtrInput {
	return (*deploymentModePtr)(&v)
}

func (*deploymentModePtr) ElementType() reflect.Type {
	return deploymentModePtrType
}

func (in *deploymentModePtr) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return pulumi.ToOutput(in).(DeploymentModePtrOutput)
}

func (in *deploymentModePtr) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeploymentModePtrOutput)
}

// JIT approval mode.
type JitApprovalMode string

const (
	JitApprovalModeNotSpecified  = JitApprovalMode("NotSpecified")
	JitApprovalModeAutoApprove   = JitApprovalMode("AutoApprove")
	JitApprovalModeManualApprove = JitApprovalMode("ManualApprove")
)

func (JitApprovalMode) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApprovalMode)(nil)).Elem()
}

func (e JitApprovalMode) ToJitApprovalModeOutput() JitApprovalModeOutput {
	return pulumi.ToOutput(e).(JitApprovalModeOutput)
}

func (e JitApprovalMode) ToJitApprovalModeOutputWithContext(ctx context.Context) JitApprovalModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JitApprovalModeOutput)
}

func (e JitApprovalMode) ToJitApprovalModePtrOutput() JitApprovalModePtrOutput {
	return e.ToJitApprovalModePtrOutputWithContext(context.Background())
}

func (e JitApprovalMode) ToJitApprovalModePtrOutputWithContext(ctx context.Context) JitApprovalModePtrOutput {
	return JitApprovalMode(e).ToJitApprovalModeOutputWithContext(ctx).ToJitApprovalModePtrOutputWithContext(ctx)
}

func (e JitApprovalMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JitApprovalMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JitApprovalMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JitApprovalMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JitApprovalModeOutput struct{ *pulumi.OutputState }

func (JitApprovalModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApprovalMode)(nil)).Elem()
}

func (o JitApprovalModeOutput) ToJitApprovalModeOutput() JitApprovalModeOutput {
	return o
}

func (o JitApprovalModeOutput) ToJitApprovalModeOutputWithContext(ctx context.Context) JitApprovalModeOutput {
	return o
}

func (o JitApprovalModeOutput) ToJitApprovalModePtrOutput() JitApprovalModePtrOutput {
	return o.ToJitApprovalModePtrOutputWithContext(context.Background())
}

func (o JitApprovalModeOutput) ToJitApprovalModePtrOutputWithContext(ctx context.Context) JitApprovalModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JitApprovalMode) *JitApprovalMode {
		return &v
	}).(JitApprovalModePtrOutput)
}

func (o JitApprovalModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JitApprovalModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JitApprovalMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JitApprovalModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JitApprovalModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JitApprovalMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JitApprovalModePtrOutput struct{ *pulumi.OutputState }

func (JitApprovalModePtrOutput) ElementType() reflect.Type {
	return jitApprovalModePtrType
}

func (o JitApprovalModePtrOutput) ToJitApprovalModePtrOutput() JitApprovalModePtrOutput {
	return o
}

func (o JitApprovalModePtrOutput) ToJitApprovalModePtrOutputWithContext(ctx context.Context) JitApprovalModePtrOutput {
	return o
}

func (o JitApprovalModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JitApprovalModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JitApprovalMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o JitApprovalModePtrOutput) Elem() JitApprovalModeOutput {
	return o.ApplyT(func(v *JitApprovalMode) JitApprovalMode {
		var ret JitApprovalMode
		if v != nil {
			ret = *v
		}
		return ret
	}).(JitApprovalModeOutput)
}

// JitApprovalModeInput is an input type that accepts JitApprovalModeArgs and JitApprovalModeOutput values.
// You can construct a concrete instance of `JitApprovalModeInput` via:
//
//          JitApprovalModeArgs{...}
type JitApprovalModeInput interface {
	pulumi.Input

	ToJitApprovalModeOutput() JitApprovalModeOutput
	ToJitApprovalModeOutputWithContext(context.Context) JitApprovalModeOutput
}

var jitApprovalModePtrType = reflect.TypeOf((**JitApprovalMode)(nil)).Elem()

type JitApprovalModePtrInput interface {
	pulumi.Input

	ToJitApprovalModePtrOutput() JitApprovalModePtrOutput
	ToJitApprovalModePtrOutputWithContext(context.Context) JitApprovalModePtrOutput
}

type jitApprovalModePtr string

func JitApprovalModePtr(v string) JitApprovalModePtrInput {
	return (*jitApprovalModePtr)(&v)
}

func (*jitApprovalModePtr) ElementType() reflect.Type {
	return jitApprovalModePtrType
}

func (in *jitApprovalModePtr) ToJitApprovalModePtrOutput() JitApprovalModePtrOutput {
	return pulumi.ToOutput(in).(JitApprovalModePtrOutput)
}

func (in *jitApprovalModePtr) ToJitApprovalModePtrOutputWithContext(ctx context.Context) JitApprovalModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JitApprovalModePtrOutput)
}

// The approver type.
type JitApproverType string

const (
	JitApproverTypeUser  = JitApproverType("user")
	JitApproverTypeGroup = JitApproverType("group")
)

func (JitApproverType) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApproverType)(nil)).Elem()
}

func (e JitApproverType) ToJitApproverTypeOutput() JitApproverTypeOutput {
	return pulumi.ToOutput(e).(JitApproverTypeOutput)
}

func (e JitApproverType) ToJitApproverTypeOutputWithContext(ctx context.Context) JitApproverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JitApproverTypeOutput)
}

func (e JitApproverType) ToJitApproverTypePtrOutput() JitApproverTypePtrOutput {
	return e.ToJitApproverTypePtrOutputWithContext(context.Background())
}

func (e JitApproverType) ToJitApproverTypePtrOutputWithContext(ctx context.Context) JitApproverTypePtrOutput {
	return JitApproverType(e).ToJitApproverTypeOutputWithContext(ctx).ToJitApproverTypePtrOutputWithContext(ctx)
}

func (e JitApproverType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JitApproverType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JitApproverType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JitApproverType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JitApproverTypeOutput struct{ *pulumi.OutputState }

func (JitApproverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JitApproverType)(nil)).Elem()
}

func (o JitApproverTypeOutput) ToJitApproverTypeOutput() JitApproverTypeOutput {
	return o
}

func (o JitApproverTypeOutput) ToJitApproverTypeOutputWithContext(ctx context.Context) JitApproverTypeOutput {
	return o
}

func (o JitApproverTypeOutput) ToJitApproverTypePtrOutput() JitApproverTypePtrOutput {
	return o.ToJitApproverTypePtrOutputWithContext(context.Background())
}

func (o JitApproverTypeOutput) ToJitApproverTypePtrOutputWithContext(ctx context.Context) JitApproverTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JitApproverType) *JitApproverType {
		return &v
	}).(JitApproverTypePtrOutput)
}

func (o JitApproverTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JitApproverTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JitApproverType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JitApproverTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JitApproverTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JitApproverType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JitApproverTypePtrOutput struct{ *pulumi.OutputState }

func (JitApproverTypePtrOutput) ElementType() reflect.Type {
	return jitApproverTypePtrType
}

func (o JitApproverTypePtrOutput) ToJitApproverTypePtrOutput() JitApproverTypePtrOutput {
	return o
}

func (o JitApproverTypePtrOutput) ToJitApproverTypePtrOutputWithContext(ctx context.Context) JitApproverTypePtrOutput {
	return o
}

func (o JitApproverTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JitApproverTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JitApproverType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o JitApproverTypePtrOutput) Elem() JitApproverTypeOutput {
	return o.ApplyT(func(v *JitApproverType) JitApproverType {
		var ret JitApproverType
		if v != nil {
			ret = *v
		}
		return ret
	}).(JitApproverTypeOutput)
}

// JitApproverTypeInput is an input type that accepts JitApproverTypeArgs and JitApproverTypeOutput values.
// You can construct a concrete instance of `JitApproverTypeInput` via:
//
//          JitApproverTypeArgs{...}
type JitApproverTypeInput interface {
	pulumi.Input

	ToJitApproverTypeOutput() JitApproverTypeOutput
	ToJitApproverTypeOutputWithContext(context.Context) JitApproverTypeOutput
}

var jitApproverTypePtrType = reflect.TypeOf((**JitApproverType)(nil)).Elem()

type JitApproverTypePtrInput interface {
	pulumi.Input

	ToJitApproverTypePtrOutput() JitApproverTypePtrOutput
	ToJitApproverTypePtrOutputWithContext(context.Context) JitApproverTypePtrOutput
}

type jitApproverTypePtr string

func JitApproverTypePtr(v string) JitApproverTypePtrInput {
	return (*jitApproverTypePtr)(&v)
}

func (*jitApproverTypePtr) ElementType() reflect.Type {
	return jitApproverTypePtrType
}

func (in *jitApproverTypePtr) ToJitApproverTypePtrOutput() JitApproverTypePtrOutput {
	return pulumi.ToOutput(in).(JitApproverTypePtrOutput)
}

func (in *jitApproverTypePtr) ToJitApproverTypePtrOutputWithContext(ctx context.Context) JitApproverTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JitApproverTypePtrOutput)
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned               = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeUserAssigned                 = ResourceIdentityType("UserAssigned")
	ResourceIdentityType_SystemAssigned_UserAssigned = ResourceIdentityType("SystemAssigned, UserAssigned")
	ResourceIdentityTypeNone                         = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		var ret ResourceIdentityType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ResourceIdentityTypeOutput)
}

// ResourceIdentityTypeInput is an input type that accepts ResourceIdentityTypeArgs and ResourceIdentityTypeOutput values.
// You can construct a concrete instance of `ResourceIdentityTypeInput` via:
//
//          ResourceIdentityTypeArgs{...}
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationArtifactTypeOutput{})
	pulumi.RegisterOutputType(ApplicationArtifactTypePtrOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionArtifactNameOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionArtifactNamePtrOutput{})
	pulumi.RegisterOutputType(ApplicationLockLevelOutput{})
	pulumi.RegisterOutputType(ApplicationLockLevelPtrOutput{})
	pulumi.RegisterOutputType(ApplicationManagementModeOutput{})
	pulumi.RegisterOutputType(ApplicationManagementModePtrOutput{})
	pulumi.RegisterOutputType(DeploymentModeOutput{})
	pulumi.RegisterOutputType(DeploymentModePtrOutput{})
	pulumi.RegisterOutputType(JitApprovalModeOutput{})
	pulumi.RegisterOutputType(JitApprovalModePtrOutput{})
	pulumi.RegisterOutputType(JitApproverTypeOutput{})
	pulumi.RegisterOutputType(JitApproverTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
}
