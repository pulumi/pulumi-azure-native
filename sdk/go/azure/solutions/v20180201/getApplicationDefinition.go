// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about managed application definition.
//
// Deprecated: Version 2018-02-01 will be removed in v2 of the provider.
func LookupApplicationDefinition(ctx *pulumi.Context, args *LookupApplicationDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupApplicationDefinitionResult, error) {
	var rv LookupApplicationDefinitionResult
	err := ctx.Invoke("azure-native:solutions/v20180201:getApplicationDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationDefinitionArgs struct {
	// The name of the managed application definition.
	ApplicationDefinitionName string `pulumi:"applicationDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Information about managed application definition.
type LookupApplicationDefinitionResult struct {
	// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
	Artifacts []ApplicationDefinitionArtifactResponse `pulumi:"artifacts"`
	// The managed application provider authorizations.
	Authorizations []ApplicationAuthorizationResponse `pulumi:"authorizations"`
	// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
	CreateUiDefinition interface{} `pulumi:"createUiDefinition"`
	// The managed application definition description.
	Description *string `pulumi:"description"`
	// The managed application definition display name.
	DisplayName *string `pulumi:"displayName"`
	// Resource ID
	Id string `pulumi:"id"`
	// A value indicating whether the package is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Resource location
	Location *string `pulumi:"location"`
	// The managed application lock level.
	LockLevel string `pulumi:"lockLevel"`
	// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
	MainTemplate interface{} `pulumi:"mainTemplate"`
	// ID of the resource that manages this resource.
	ManagedBy *string `pulumi:"managedBy"`
	// Resource name
	Name string `pulumi:"name"`
	// The managed application definition package file Uri. Use this element
	PackageFileUri *string `pulumi:"packageFileUri"`
	// The managed application provider policies.
	Policies []ApplicationPolicyResponse `pulumi:"policies"`
	// The SKU of the resource.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

func LookupApplicationDefinitionOutput(ctx *pulumi.Context, args LookupApplicationDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationDefinitionResult, error) {
			args := v.(LookupApplicationDefinitionArgs)
			r, err := LookupApplicationDefinition(ctx, &args, opts...)
			var s LookupApplicationDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApplicationDefinitionResultOutput)
}

type LookupApplicationDefinitionOutputArgs struct {
	// The name of the managed application definition.
	ApplicationDefinitionName pulumi.StringInput `pulumi:"applicationDefinitionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupApplicationDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationDefinitionArgs)(nil)).Elem()
}

// Information about managed application definition.
type LookupApplicationDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationDefinitionResult)(nil)).Elem()
}

func (o LookupApplicationDefinitionResultOutput) ToLookupApplicationDefinitionResultOutput() LookupApplicationDefinitionResultOutput {
	return o
}

func (o LookupApplicationDefinitionResultOutput) ToLookupApplicationDefinitionResultOutputWithContext(ctx context.Context) LookupApplicationDefinitionResultOutput {
	return o
}

// The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition.
func (o LookupApplicationDefinitionResultOutput) Artifacts() ApplicationDefinitionArtifactResponseArrayOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) []ApplicationDefinitionArtifactResponse { return v.Artifacts }).(ApplicationDefinitionArtifactResponseArrayOutput)
}

// The managed application provider authorizations.
func (o LookupApplicationDefinitionResultOutput) Authorizations() ApplicationAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) []ApplicationAuthorizationResponse { return v.Authorizations }).(ApplicationAuthorizationResponseArrayOutput)
}

// The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string.
func (o LookupApplicationDefinitionResultOutput) CreateUiDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) interface{} { return v.CreateUiDefinition }).(pulumi.AnyOutput)
}

// The managed application definition description.
func (o LookupApplicationDefinitionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The managed application definition display name.
func (o LookupApplicationDefinitionResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Resource ID
func (o LookupApplicationDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// A value indicating whether the package is enabled or not.
func (o LookupApplicationDefinitionResultOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Resource location
func (o LookupApplicationDefinitionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The managed application lock level.
func (o LookupApplicationDefinitionResultOutput) LockLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) string { return v.LockLevel }).(pulumi.StringOutput)
}

// The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string.
func (o LookupApplicationDefinitionResultOutput) MainTemplate() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) interface{} { return v.MainTemplate }).(pulumi.AnyOutput)
}

// ID of the resource that manages this resource.
func (o LookupApplicationDefinitionResultOutput) ManagedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *string { return v.ManagedBy }).(pulumi.StringPtrOutput)
}

// Resource name
func (o LookupApplicationDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The managed application definition package file Uri. Use this element
func (o LookupApplicationDefinitionResultOutput) PackageFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *string { return v.PackageFileUri }).(pulumi.StringPtrOutput)
}

// The managed application provider policies.
func (o LookupApplicationDefinitionResultOutput) Policies() ApplicationPolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) []ApplicationPolicyResponse { return v.Policies }).(ApplicationPolicyResponseArrayOutput)
}

// The SKU of the resource.
func (o LookupApplicationDefinitionResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags
func (o LookupApplicationDefinitionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o LookupApplicationDefinitionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApplicationDefinitionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationDefinitionResultOutput{})
}
