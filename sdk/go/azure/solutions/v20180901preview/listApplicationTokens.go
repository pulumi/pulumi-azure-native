// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The array of managed identity tokens.
func ListApplicationTokens(ctx *pulumi.Context, args *ListApplicationTokensArgs, opts ...pulumi.InvokeOption) (*ListApplicationTokensResult, error) {
	var rv ListApplicationTokensResult
	err := ctx.Invoke("azure-native:solutions/v20180901preview:listApplicationTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListApplicationTokensArgs struct {
	// The name of the managed application.
	ApplicationName string `pulumi:"applicationName"`
	// The authorization audience.
	AuthorizationAudience *string `pulumi:"authorizationAudience"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The user assigned identities.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// The array of managed identity tokens.
type ListApplicationTokensResult struct {
	// The array of managed identity tokens.
	Value []ManagedIdentityTokenResponse `pulumi:"value"`
}

func ListApplicationTokensOutput(ctx *pulumi.Context, args ListApplicationTokensOutputArgs, opts ...pulumi.InvokeOption) ListApplicationTokensResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListApplicationTokensResult, error) {
			args := v.(ListApplicationTokensArgs)
			r, err := ListApplicationTokens(ctx, &args, opts...)
			var s ListApplicationTokensResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListApplicationTokensResultOutput)
}

type ListApplicationTokensOutputArgs struct {
	// The name of the managed application.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// The authorization audience.
	AuthorizationAudience pulumi.StringPtrInput `pulumi:"authorizationAudience"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The user assigned identities.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ListApplicationTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListApplicationTokensArgs)(nil)).Elem()
}

// The array of managed identity tokens.
type ListApplicationTokensResultOutput struct{ *pulumi.OutputState }

func (ListApplicationTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListApplicationTokensResult)(nil)).Elem()
}

func (o ListApplicationTokensResultOutput) ToListApplicationTokensResultOutput() ListApplicationTokensResultOutput {
	return o
}

func (o ListApplicationTokensResultOutput) ToListApplicationTokensResultOutputWithContext(ctx context.Context) ListApplicationTokensResultOutput {
	return o
}

// The array of managed identity tokens.
func (o ListApplicationTokensResultOutput) Value() ManagedIdentityTokenResponseArrayOutput {
	return o.ApplyT(func(v ListApplicationTokensResult) []ManagedIdentityTokenResponse { return v.Value }).(ManagedIdentityTokenResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListApplicationTokensResultOutput{})
}
