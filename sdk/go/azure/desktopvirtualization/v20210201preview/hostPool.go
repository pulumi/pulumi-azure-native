// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a HostPool definition.
type HostPool struct {
	pulumi.CustomResourceState

	// List of applicationGroup links.
	ApplicationGroupReferences pulumi.StringArrayOutput `pulumi:"applicationGroupReferences"`
	// Is cloud pc resource.
	CloudPcResource pulumi.BoolOutput `pulumi:"cloudPcResource"`
	// Custom rdp property of HostPool.
	CustomRdpProperty pulumi.StringPtrOutput `pulumi:"customRdpProperty"`
	// Description of HostPool.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Friendly name of HostPool.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// HostPool type for desktop.
	HostPoolType pulumi.StringOutput                                          `pulumi:"hostPoolType"`
	Identity     ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The type of the load balancer.
	LoadBalancerType pulumi.StringOutput `pulumi:"loadBalancerType"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrOutput `pulumi:"managedBy"`
	// The max session limit of HostPool.
	MaxSessionLimit pulumi.IntPtrOutput `pulumi:"maxSessionLimit"`
	// The registration info of HostPool.
	MigrationRequest MigrationRequestPropertiesResponsePtrOutput `pulumi:"migrationRequest"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// ObjectId of HostPool. (internal use)
	ObjectId pulumi.StringOutput `pulumi:"objectId"`
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType pulumi.StringPtrOutput                                   `pulumi:"personalDesktopAssignmentType"`
	Plan                          ResourceModelWithAllowedPropertySetResponsePlanPtrOutput `pulumi:"plan"`
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType pulumi.StringOutput `pulumi:"preferredAppGroupType"`
	// The registration info of HostPool.
	RegistrationInfo RegistrationInfoResponsePtrOutput `pulumi:"registrationInfo"`
	// The ring number of HostPool.
	Ring pulumi.IntPtrOutput                                     `pulumi:"ring"`
	Sku  ResourceModelWithAllowedPropertySetResponseSkuPtrOutput `pulumi:"sku"`
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId pulumi.StringPtrOutput `pulumi:"ssoClientId"`
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath pulumi.StringPtrOutput `pulumi:"ssoClientSecretKeyVaultPath"`
	// The type of single sign on Secret Type.
	SsoSecretType pulumi.StringPtrOutput `pulumi:"ssoSecretType"`
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority pulumi.StringPtrOutput `pulumi:"ssoadfsAuthority"`
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect pulumi.BoolPtrOutput `pulumi:"startVMOnConnect"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Is validation environment.
	ValidationEnvironment pulumi.BoolPtrOutput `pulumi:"validationEnvironment"`
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate pulumi.StringPtrOutput `pulumi:"vmTemplate"`
}

// NewHostPool registers a new resource with the given unique name, arguments, and options.
func NewHostPool(ctx *pulumi.Context,
	name string, args *HostPoolArgs, opts ...pulumi.ResourceOption) (*HostPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostPoolType == nil {
		return nil, errors.New("invalid value for required argument 'HostPoolType'")
	}
	if args.LoadBalancerType == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerType'")
	}
	if args.PreferredAppGroupType == nil {
		return nil, errors.New("invalid value for required argument 'PreferredAppGroupType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210201preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20190123preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20190123preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20190924preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20190924preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20191210preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20191210preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20200921preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20200921preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20201019preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20201019preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20201102preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20201102preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20201110preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20201110preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20210114preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210114preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20210309preview:HostPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210309preview:HostPool"),
		},
	})
	opts = append(opts, aliases)
	var resource HostPool
	err := ctx.RegisterResource("azure-native:desktopvirtualization/v20210201preview:HostPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostPool gets an existing HostPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostPoolState, opts ...pulumi.ResourceOption) (*HostPool, error) {
	var resource HostPool
	err := ctx.ReadResource("azure-native:desktopvirtualization/v20210201preview:HostPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostPool resources.
type hostPoolState struct {
	// List of applicationGroup links.
	ApplicationGroupReferences []string `pulumi:"applicationGroupReferences"`
	// Is cloud pc resource.
	CloudPcResource *bool `pulumi:"cloudPcResource"`
	// Custom rdp property of HostPool.
	CustomRdpProperty *string `pulumi:"customRdpProperty"`
	// Description of HostPool.
	Description *string `pulumi:"description"`
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag *string `pulumi:"etag"`
	// Friendly name of HostPool.
	FriendlyName *string `pulumi:"friendlyName"`
	// HostPool type for desktop.
	HostPoolType *string                                              `pulumi:"hostPoolType"`
	Identity     *ResourceModelWithAllowedPropertySetResponseIdentity `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// The type of the load balancer.
	LoadBalancerType *string `pulumi:"loadBalancerType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy *string `pulumi:"managedBy"`
	// The max session limit of HostPool.
	MaxSessionLimit *int `pulumi:"maxSessionLimit"`
	// The registration info of HostPool.
	MigrationRequest *MigrationRequestPropertiesResponse `pulumi:"migrationRequest"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// ObjectId of HostPool. (internal use)
	ObjectId *string `pulumi:"objectId"`
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType *string                                          `pulumi:"personalDesktopAssignmentType"`
	Plan                          *ResourceModelWithAllowedPropertySetResponsePlan `pulumi:"plan"`
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType *string `pulumi:"preferredAppGroupType"`
	// The registration info of HostPool.
	RegistrationInfo *RegistrationInfoResponse `pulumi:"registrationInfo"`
	// The ring number of HostPool.
	Ring *int                                            `pulumi:"ring"`
	Sku  *ResourceModelWithAllowedPropertySetResponseSku `pulumi:"sku"`
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId *string `pulumi:"ssoClientId"`
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath *string `pulumi:"ssoClientSecretKeyVaultPath"`
	// The type of single sign on Secret Type.
	SsoSecretType *string `pulumi:"ssoSecretType"`
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority *string `pulumi:"ssoadfsAuthority"`
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect *bool `pulumi:"startVMOnConnect"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
	// Is validation environment.
	ValidationEnvironment *bool `pulumi:"validationEnvironment"`
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate *string `pulumi:"vmTemplate"`
}

type HostPoolState struct {
	// List of applicationGroup links.
	ApplicationGroupReferences pulumi.StringArrayInput
	// Is cloud pc resource.
	CloudPcResource pulumi.BoolPtrInput
	// Custom rdp property of HostPool.
	CustomRdpProperty pulumi.StringPtrInput
	// Description of HostPool.
	Description pulumi.StringPtrInput
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag pulumi.StringPtrInput
	// Friendly name of HostPool.
	FriendlyName pulumi.StringPtrInput
	// HostPool type for desktop.
	HostPoolType pulumi.StringPtrInput
	Identity     ResourceModelWithAllowedPropertySetResponseIdentityPtrInput
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrInput
	// The type of the load balancer.
	LoadBalancerType pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrInput
	// The max session limit of HostPool.
	MaxSessionLimit pulumi.IntPtrInput
	// The registration info of HostPool.
	MigrationRequest MigrationRequestPropertiesResponsePtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// ObjectId of HostPool. (internal use)
	ObjectId pulumi.StringPtrInput
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType pulumi.StringPtrInput
	Plan                          ResourceModelWithAllowedPropertySetResponsePlanPtrInput
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType pulumi.StringPtrInput
	// The registration info of HostPool.
	RegistrationInfo RegistrationInfoResponsePtrInput
	// The ring number of HostPool.
	Ring pulumi.IntPtrInput
	Sku  ResourceModelWithAllowedPropertySetResponseSkuPtrInput
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId pulumi.StringPtrInput
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath pulumi.StringPtrInput
	// The type of single sign on Secret Type.
	SsoSecretType pulumi.StringPtrInput
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority pulumi.StringPtrInput
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect pulumi.BoolPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
	// Is validation environment.
	ValidationEnvironment pulumi.BoolPtrInput
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate pulumi.StringPtrInput
}

func (HostPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostPoolState)(nil)).Elem()
}

type hostPoolArgs struct {
	// Custom rdp property of HostPool.
	CustomRdpProperty *string `pulumi:"customRdpProperty"`
	// Description of HostPool.
	Description *string `pulumi:"description"`
	// Friendly name of HostPool.
	FriendlyName *string `pulumi:"friendlyName"`
	// The name of the host pool within the specified resource group
	HostPoolName *string `pulumi:"hostPoolName"`
	// HostPool type for desktop.
	HostPoolType string                                       `pulumi:"hostPoolType"`
	Identity     *ResourceModelWithAllowedPropertySetIdentity `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// The type of the load balancer.
	LoadBalancerType string `pulumi:"loadBalancerType"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy *string `pulumi:"managedBy"`
	// The max session limit of HostPool.
	MaxSessionLimit *int `pulumi:"maxSessionLimit"`
	// The registration info of HostPool.
	MigrationRequest *MigrationRequestProperties `pulumi:"migrationRequest"`
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType *string                                  `pulumi:"personalDesktopAssignmentType"`
	Plan                          *ResourceModelWithAllowedPropertySetPlan `pulumi:"plan"`
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType string `pulumi:"preferredAppGroupType"`
	// The registration info of HostPool.
	RegistrationInfo *RegistrationInfo `pulumi:"registrationInfo"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ring number of HostPool.
	Ring *int                                    `pulumi:"ring"`
	Sku  *ResourceModelWithAllowedPropertySetSku `pulumi:"sku"`
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId *string `pulumi:"ssoClientId"`
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath *string `pulumi:"ssoClientSecretKeyVaultPath"`
	// The type of single sign on Secret Type.
	SsoSecretType *string `pulumi:"ssoSecretType"`
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority *string `pulumi:"ssoadfsAuthority"`
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect *bool `pulumi:"startVMOnConnect"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Is validation environment.
	ValidationEnvironment *bool `pulumi:"validationEnvironment"`
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate *string `pulumi:"vmTemplate"`
}

// The set of arguments for constructing a HostPool resource.
type HostPoolArgs struct {
	// Custom rdp property of HostPool.
	CustomRdpProperty pulumi.StringPtrInput
	// Description of HostPool.
	Description pulumi.StringPtrInput
	// Friendly name of HostPool.
	FriendlyName pulumi.StringPtrInput
	// The name of the host pool within the specified resource group
	HostPoolName pulumi.StringPtrInput
	// HostPool type for desktop.
	HostPoolType pulumi.StringInput
	Identity     ResourceModelWithAllowedPropertySetIdentityPtrInput
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrInput
	// The type of the load balancer.
	LoadBalancerType pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrInput
	// The max session limit of HostPool.
	MaxSessionLimit pulumi.IntPtrInput
	// The registration info of HostPool.
	MigrationRequest MigrationRequestPropertiesPtrInput
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType pulumi.StringPtrInput
	Plan                          ResourceModelWithAllowedPropertySetPlanPtrInput
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType pulumi.StringInput
	// The registration info of HostPool.
	RegistrationInfo RegistrationInfoPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The ring number of HostPool.
	Ring pulumi.IntPtrInput
	Sku  ResourceModelWithAllowedPropertySetSkuPtrInput
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId pulumi.StringPtrInput
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath pulumi.StringPtrInput
	// The type of single sign on Secret Type.
	SsoSecretType pulumi.StringPtrInput
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority pulumi.StringPtrInput
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect pulumi.BoolPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Is validation environment.
	ValidationEnvironment pulumi.BoolPtrInput
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate pulumi.StringPtrInput
}

func (HostPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostPoolArgs)(nil)).Elem()
}

type HostPoolInput interface {
	pulumi.Input

	ToHostPoolOutput() HostPoolOutput
	ToHostPoolOutputWithContext(ctx context.Context) HostPoolOutput
}

func (*HostPool) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPool)(nil))
}

func (i *HostPool) ToHostPoolOutput() HostPoolOutput {
	return i.ToHostPoolOutputWithContext(context.Background())
}

func (i *HostPool) ToHostPoolOutputWithContext(ctx context.Context) HostPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostPoolOutput)
}

type HostPoolOutput struct {
	*pulumi.OutputState
}

func (HostPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPool)(nil))
}

func (o HostPoolOutput) ToHostPoolOutput() HostPoolOutput {
	return o
}

func (o HostPoolOutput) ToHostPoolOutputWithContext(ctx context.Context) HostPoolOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(HostPoolOutput{})
}
