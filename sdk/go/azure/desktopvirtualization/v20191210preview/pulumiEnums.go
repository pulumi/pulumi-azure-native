// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191210preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationGroupType string

const (
	ApplicationGroupTypeRemoteApp = ApplicationGroupType("RemoteApp")
	ApplicationGroupTypeDesktop   = ApplicationGroupType("Desktop")
)

func (ApplicationGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupType)(nil)).Elem()
}

func (e ApplicationGroupType) ToApplicationGroupTypeOutput() ApplicationGroupTypeOutput {
	return pulumi.ToOutput(e).(ApplicationGroupTypeOutput)
}

func (e ApplicationGroupType) ToApplicationGroupTypeOutputWithContext(ctx context.Context) ApplicationGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationGroupTypeOutput)
}

func (e ApplicationGroupType) ToApplicationGroupTypePtrOutput() ApplicationGroupTypePtrOutput {
	return e.ToApplicationGroupTypePtrOutputWithContext(context.Background())
}

func (e ApplicationGroupType) ToApplicationGroupTypePtrOutputWithContext(ctx context.Context) ApplicationGroupTypePtrOutput {
	return ApplicationGroupType(e).ToApplicationGroupTypeOutputWithContext(ctx).ToApplicationGroupTypePtrOutputWithContext(ctx)
}

func (e ApplicationGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationGroupTypeOutput struct{ *pulumi.OutputState }

func (ApplicationGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGroupType)(nil)).Elem()
}

func (o ApplicationGroupTypeOutput) ToApplicationGroupTypeOutput() ApplicationGroupTypeOutput {
	return o
}

func (o ApplicationGroupTypeOutput) ToApplicationGroupTypeOutputWithContext(ctx context.Context) ApplicationGroupTypeOutput {
	return o
}

func (o ApplicationGroupTypeOutput) ToApplicationGroupTypePtrOutput() ApplicationGroupTypePtrOutput {
	return o.ToApplicationGroupTypePtrOutputWithContext(context.Background())
}

func (o ApplicationGroupTypeOutput) ToApplicationGroupTypePtrOutputWithContext(ctx context.Context) ApplicationGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGroupType) *ApplicationGroupType {
		return &v
	}).(ApplicationGroupTypePtrOutput)
}

func (o ApplicationGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationGroupTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGroupType)(nil)).Elem()
}

func (o ApplicationGroupTypePtrOutput) ToApplicationGroupTypePtrOutput() ApplicationGroupTypePtrOutput {
	return o
}

func (o ApplicationGroupTypePtrOutput) ToApplicationGroupTypePtrOutputWithContext(ctx context.Context) ApplicationGroupTypePtrOutput {
	return o
}

func (o ApplicationGroupTypePtrOutput) Elem() ApplicationGroupTypeOutput {
	return o.ApplyT(func(v *ApplicationGroupType) ApplicationGroupType {
		if v != nil {
			return *v
		}
		var ret ApplicationGroupType
		return ret
	}).(ApplicationGroupTypeOutput)
}

func (o ApplicationGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationGroupTypeInput is an input type that accepts ApplicationGroupTypeArgs and ApplicationGroupTypeOutput values.
// You can construct a concrete instance of `ApplicationGroupTypeInput` via:
//
//          ApplicationGroupTypeArgs{...}
type ApplicationGroupTypeInput interface {
	pulumi.Input

	ToApplicationGroupTypeOutput() ApplicationGroupTypeOutput
	ToApplicationGroupTypeOutputWithContext(context.Context) ApplicationGroupTypeOutput
}

var applicationGroupTypePtrType = reflect.TypeOf((**ApplicationGroupType)(nil)).Elem()

type ApplicationGroupTypePtrInput interface {
	pulumi.Input

	ToApplicationGroupTypePtrOutput() ApplicationGroupTypePtrOutput
	ToApplicationGroupTypePtrOutputWithContext(context.Context) ApplicationGroupTypePtrOutput
}

type applicationGroupTypePtr string

func ApplicationGroupTypePtr(v string) ApplicationGroupTypePtrInput {
	return (*applicationGroupTypePtr)(&v)
}

func (*applicationGroupTypePtr) ElementType() reflect.Type {
	return applicationGroupTypePtrType
}

func (in *applicationGroupTypePtr) ToApplicationGroupTypePtrOutput() ApplicationGroupTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationGroupTypePtrOutput)
}

func (in *applicationGroupTypePtr) ToApplicationGroupTypePtrOutputWithContext(ctx context.Context) ApplicationGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationGroupTypePtrOutput)
}

type CommandLineSetting string

const (
	CommandLineSettingDoNotAllow = CommandLineSetting("DoNotAllow")
	CommandLineSettingAllow      = CommandLineSetting("Allow")
	CommandLineSettingRequire    = CommandLineSetting("Require")
)

func (CommandLineSetting) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandLineSetting)(nil)).Elem()
}

func (e CommandLineSetting) ToCommandLineSettingOutput() CommandLineSettingOutput {
	return pulumi.ToOutput(e).(CommandLineSettingOutput)
}

func (e CommandLineSetting) ToCommandLineSettingOutputWithContext(ctx context.Context) CommandLineSettingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CommandLineSettingOutput)
}

func (e CommandLineSetting) ToCommandLineSettingPtrOutput() CommandLineSettingPtrOutput {
	return e.ToCommandLineSettingPtrOutputWithContext(context.Background())
}

func (e CommandLineSetting) ToCommandLineSettingPtrOutputWithContext(ctx context.Context) CommandLineSettingPtrOutput {
	return CommandLineSetting(e).ToCommandLineSettingOutputWithContext(ctx).ToCommandLineSettingPtrOutputWithContext(ctx)
}

func (e CommandLineSetting) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommandLineSetting) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CommandLineSetting) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CommandLineSetting) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CommandLineSettingOutput struct{ *pulumi.OutputState }

func (CommandLineSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommandLineSetting)(nil)).Elem()
}

func (o CommandLineSettingOutput) ToCommandLineSettingOutput() CommandLineSettingOutput {
	return o
}

func (o CommandLineSettingOutput) ToCommandLineSettingOutputWithContext(ctx context.Context) CommandLineSettingOutput {
	return o
}

func (o CommandLineSettingOutput) ToCommandLineSettingPtrOutput() CommandLineSettingPtrOutput {
	return o.ToCommandLineSettingPtrOutputWithContext(context.Background())
}

func (o CommandLineSettingOutput) ToCommandLineSettingPtrOutputWithContext(ctx context.Context) CommandLineSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommandLineSetting) *CommandLineSetting {
		return &v
	}).(CommandLineSettingPtrOutput)
}

func (o CommandLineSettingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CommandLineSettingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommandLineSetting) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CommandLineSettingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommandLineSettingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CommandLineSetting) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CommandLineSettingPtrOutput struct{ *pulumi.OutputState }

func (CommandLineSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommandLineSetting)(nil)).Elem()
}

func (o CommandLineSettingPtrOutput) ToCommandLineSettingPtrOutput() CommandLineSettingPtrOutput {
	return o
}

func (o CommandLineSettingPtrOutput) ToCommandLineSettingPtrOutputWithContext(ctx context.Context) CommandLineSettingPtrOutput {
	return o
}

func (o CommandLineSettingPtrOutput) Elem() CommandLineSettingOutput {
	return o.ApplyT(func(v *CommandLineSetting) CommandLineSetting {
		if v != nil {
			return *v
		}
		var ret CommandLineSetting
		return ret
	}).(CommandLineSettingOutput)
}

func (o CommandLineSettingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CommandLineSettingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CommandLineSetting) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CommandLineSettingInput is an input type that accepts CommandLineSettingArgs and CommandLineSettingOutput values.
// You can construct a concrete instance of `CommandLineSettingInput` via:
//
//          CommandLineSettingArgs{...}
type CommandLineSettingInput interface {
	pulumi.Input

	ToCommandLineSettingOutput() CommandLineSettingOutput
	ToCommandLineSettingOutputWithContext(context.Context) CommandLineSettingOutput
}

var commandLineSettingPtrType = reflect.TypeOf((**CommandLineSetting)(nil)).Elem()

type CommandLineSettingPtrInput interface {
	pulumi.Input

	ToCommandLineSettingPtrOutput() CommandLineSettingPtrOutput
	ToCommandLineSettingPtrOutputWithContext(context.Context) CommandLineSettingPtrOutput
}

type commandLineSettingPtr string

func CommandLineSettingPtr(v string) CommandLineSettingPtrInput {
	return (*commandLineSettingPtr)(&v)
}

func (*commandLineSettingPtr) ElementType() reflect.Type {
	return commandLineSettingPtrType
}

func (in *commandLineSettingPtr) ToCommandLineSettingPtrOutput() CommandLineSettingPtrOutput {
	return pulumi.ToOutput(in).(CommandLineSettingPtrOutput)
}

func (in *commandLineSettingPtr) ToCommandLineSettingPtrOutputWithContext(ctx context.Context) CommandLineSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CommandLineSettingPtrOutput)
}

type HostPoolType string

const (
	HostPoolTypePersonal = HostPoolType("Personal")
	HostPoolTypePooled   = HostPoolType("Pooled")
)

func (HostPoolType) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPoolType)(nil)).Elem()
}

func (e HostPoolType) ToHostPoolTypeOutput() HostPoolTypeOutput {
	return pulumi.ToOutput(e).(HostPoolTypeOutput)
}

func (e HostPoolType) ToHostPoolTypeOutputWithContext(ctx context.Context) HostPoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HostPoolTypeOutput)
}

func (e HostPoolType) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return e.ToHostPoolTypePtrOutputWithContext(context.Background())
}

func (e HostPoolType) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return HostPoolType(e).ToHostPoolTypeOutputWithContext(ctx).ToHostPoolTypePtrOutputWithContext(ctx)
}

func (e HostPoolType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostPoolType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HostPoolType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HostPoolType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HostPoolTypeOutput struct{ *pulumi.OutputState }

func (HostPoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPoolType)(nil)).Elem()
}

func (o HostPoolTypeOutput) ToHostPoolTypeOutput() HostPoolTypeOutput {
	return o
}

func (o HostPoolTypeOutput) ToHostPoolTypeOutputWithContext(ctx context.Context) HostPoolTypeOutput {
	return o
}

func (o HostPoolTypeOutput) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return o.ToHostPoolTypePtrOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostPoolType) *HostPoolType {
		return &v
	}).(HostPoolTypePtrOutput)
}

func (o HostPoolTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostPoolType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HostPoolTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostPoolTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HostPoolType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HostPoolTypePtrOutput struct{ *pulumi.OutputState }

func (HostPoolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostPoolType)(nil)).Elem()
}

func (o HostPoolTypePtrOutput) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return o
}

func (o HostPoolTypePtrOutput) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return o
}

func (o HostPoolTypePtrOutput) Elem() HostPoolTypeOutput {
	return o.ApplyT(func(v *HostPoolType) HostPoolType {
		if v != nil {
			return *v
		}
		var ret HostPoolType
		return ret
	}).(HostPoolTypeOutput)
}

func (o HostPoolTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HostPoolTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HostPoolType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HostPoolTypeInput is an input type that accepts HostPoolTypeArgs and HostPoolTypeOutput values.
// You can construct a concrete instance of `HostPoolTypeInput` via:
//
//          HostPoolTypeArgs{...}
type HostPoolTypeInput interface {
	pulumi.Input

	ToHostPoolTypeOutput() HostPoolTypeOutput
	ToHostPoolTypeOutputWithContext(context.Context) HostPoolTypeOutput
}

var hostPoolTypePtrType = reflect.TypeOf((**HostPoolType)(nil)).Elem()

type HostPoolTypePtrInput interface {
	pulumi.Input

	ToHostPoolTypePtrOutput() HostPoolTypePtrOutput
	ToHostPoolTypePtrOutputWithContext(context.Context) HostPoolTypePtrOutput
}

type hostPoolTypePtr string

func HostPoolTypePtr(v string) HostPoolTypePtrInput {
	return (*hostPoolTypePtr)(&v)
}

func (*hostPoolTypePtr) ElementType() reflect.Type {
	return hostPoolTypePtrType
}

func (in *hostPoolTypePtr) ToHostPoolTypePtrOutput() HostPoolTypePtrOutput {
	return pulumi.ToOutput(in).(HostPoolTypePtrOutput)
}

func (in *hostPoolTypePtr) ToHostPoolTypePtrOutputWithContext(ctx context.Context) HostPoolTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HostPoolTypePtrOutput)
}

type LoadBalancerType string

const (
	LoadBalancerTypeBreadthFirst = LoadBalancerType("BreadthFirst")
	LoadBalancerTypeDepthFirst   = LoadBalancerType("DepthFirst")
	LoadBalancerTypePersistent   = LoadBalancerType("Persistent")
)

func (LoadBalancerType) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (e LoadBalancerType) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return pulumi.ToOutput(e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerTypeOutput)
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return e.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return LoadBalancerType(e).ToLoadBalancerTypeOutputWithContext(ctx).ToLoadBalancerTypePtrOutputWithContext(ctx)
}

func (e LoadBalancerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerTypeOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutput() LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypeOutputWithContext(ctx context.Context) LoadBalancerTypeOutput {
	return o
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o.ToLoadBalancerTypePtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerType) *LoadBalancerType {
		return &v
	}).(LoadBalancerTypePtrOutput)
}

func (o LoadBalancerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerTypePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerType)(nil)).Elem()
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return o
}

func (o LoadBalancerTypePtrOutput) Elem() LoadBalancerTypeOutput {
	return o.ApplyT(func(v *LoadBalancerType) LoadBalancerType {
		if v != nil {
			return *v
		}
		var ret LoadBalancerType
		return ret
	}).(LoadBalancerTypeOutput)
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerTypeInput is an input type that accepts LoadBalancerTypeArgs and LoadBalancerTypeOutput values.
// You can construct a concrete instance of `LoadBalancerTypeInput` via:
//
//          LoadBalancerTypeArgs{...}
type LoadBalancerTypeInput interface {
	pulumi.Input

	ToLoadBalancerTypeOutput() LoadBalancerTypeOutput
	ToLoadBalancerTypeOutputWithContext(context.Context) LoadBalancerTypeOutput
}

var loadBalancerTypePtrType = reflect.TypeOf((**LoadBalancerType)(nil)).Elem()

type LoadBalancerTypePtrInput interface {
	pulumi.Input

	ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput
	ToLoadBalancerTypePtrOutputWithContext(context.Context) LoadBalancerTypePtrOutput
}

type loadBalancerTypePtr string

func LoadBalancerTypePtr(v string) LoadBalancerTypePtrInput {
	return (*loadBalancerTypePtr)(&v)
}

func (*loadBalancerTypePtr) ElementType() reflect.Type {
	return loadBalancerTypePtrType
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutput() LoadBalancerTypePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerTypePtrOutput)
}

func (in *loadBalancerTypePtr) ToLoadBalancerTypePtrOutputWithContext(ctx context.Context) LoadBalancerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerTypePtrOutput)
}

type PersonalDesktopAssignmentType string

const (
	PersonalDesktopAssignmentTypeAutomatic = PersonalDesktopAssignmentType("Automatic")
	PersonalDesktopAssignmentTypeDirect    = PersonalDesktopAssignmentType("Direct")
)

func (PersonalDesktopAssignmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalDesktopAssignmentType)(nil)).Elem()
}

func (e PersonalDesktopAssignmentType) ToPersonalDesktopAssignmentTypeOutput() PersonalDesktopAssignmentTypeOutput {
	return pulumi.ToOutput(e).(PersonalDesktopAssignmentTypeOutput)
}

func (e PersonalDesktopAssignmentType) ToPersonalDesktopAssignmentTypeOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PersonalDesktopAssignmentTypeOutput)
}

func (e PersonalDesktopAssignmentType) ToPersonalDesktopAssignmentTypePtrOutput() PersonalDesktopAssignmentTypePtrOutput {
	return e.ToPersonalDesktopAssignmentTypePtrOutputWithContext(context.Background())
}

func (e PersonalDesktopAssignmentType) ToPersonalDesktopAssignmentTypePtrOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypePtrOutput {
	return PersonalDesktopAssignmentType(e).ToPersonalDesktopAssignmentTypeOutputWithContext(ctx).ToPersonalDesktopAssignmentTypePtrOutputWithContext(ctx)
}

func (e PersonalDesktopAssignmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersonalDesktopAssignmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersonalDesktopAssignmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PersonalDesktopAssignmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PersonalDesktopAssignmentTypeOutput struct{ *pulumi.OutputState }

func (PersonalDesktopAssignmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersonalDesktopAssignmentType)(nil)).Elem()
}

func (o PersonalDesktopAssignmentTypeOutput) ToPersonalDesktopAssignmentTypeOutput() PersonalDesktopAssignmentTypeOutput {
	return o
}

func (o PersonalDesktopAssignmentTypeOutput) ToPersonalDesktopAssignmentTypeOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypeOutput {
	return o
}

func (o PersonalDesktopAssignmentTypeOutput) ToPersonalDesktopAssignmentTypePtrOutput() PersonalDesktopAssignmentTypePtrOutput {
	return o.ToPersonalDesktopAssignmentTypePtrOutputWithContext(context.Background())
}

func (o PersonalDesktopAssignmentTypeOutput) ToPersonalDesktopAssignmentTypePtrOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersonalDesktopAssignmentType) *PersonalDesktopAssignmentType {
		return &v
	}).(PersonalDesktopAssignmentTypePtrOutput)
}

func (o PersonalDesktopAssignmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PersonalDesktopAssignmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersonalDesktopAssignmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PersonalDesktopAssignmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersonalDesktopAssignmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersonalDesktopAssignmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PersonalDesktopAssignmentTypePtrOutput struct{ *pulumi.OutputState }

func (PersonalDesktopAssignmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersonalDesktopAssignmentType)(nil)).Elem()
}

func (o PersonalDesktopAssignmentTypePtrOutput) ToPersonalDesktopAssignmentTypePtrOutput() PersonalDesktopAssignmentTypePtrOutput {
	return o
}

func (o PersonalDesktopAssignmentTypePtrOutput) ToPersonalDesktopAssignmentTypePtrOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypePtrOutput {
	return o
}

func (o PersonalDesktopAssignmentTypePtrOutput) Elem() PersonalDesktopAssignmentTypeOutput {
	return o.ApplyT(func(v *PersonalDesktopAssignmentType) PersonalDesktopAssignmentType {
		if v != nil {
			return *v
		}
		var ret PersonalDesktopAssignmentType
		return ret
	}).(PersonalDesktopAssignmentTypeOutput)
}

func (o PersonalDesktopAssignmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersonalDesktopAssignmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PersonalDesktopAssignmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PersonalDesktopAssignmentTypeInput is an input type that accepts PersonalDesktopAssignmentTypeArgs and PersonalDesktopAssignmentTypeOutput values.
// You can construct a concrete instance of `PersonalDesktopAssignmentTypeInput` via:
//
//          PersonalDesktopAssignmentTypeArgs{...}
type PersonalDesktopAssignmentTypeInput interface {
	pulumi.Input

	ToPersonalDesktopAssignmentTypeOutput() PersonalDesktopAssignmentTypeOutput
	ToPersonalDesktopAssignmentTypeOutputWithContext(context.Context) PersonalDesktopAssignmentTypeOutput
}

var personalDesktopAssignmentTypePtrType = reflect.TypeOf((**PersonalDesktopAssignmentType)(nil)).Elem()

type PersonalDesktopAssignmentTypePtrInput interface {
	pulumi.Input

	ToPersonalDesktopAssignmentTypePtrOutput() PersonalDesktopAssignmentTypePtrOutput
	ToPersonalDesktopAssignmentTypePtrOutputWithContext(context.Context) PersonalDesktopAssignmentTypePtrOutput
}

type personalDesktopAssignmentTypePtr string

func PersonalDesktopAssignmentTypePtr(v string) PersonalDesktopAssignmentTypePtrInput {
	return (*personalDesktopAssignmentTypePtr)(&v)
}

func (*personalDesktopAssignmentTypePtr) ElementType() reflect.Type {
	return personalDesktopAssignmentTypePtrType
}

func (in *personalDesktopAssignmentTypePtr) ToPersonalDesktopAssignmentTypePtrOutput() PersonalDesktopAssignmentTypePtrOutput {
	return pulumi.ToOutput(in).(PersonalDesktopAssignmentTypePtrOutput)
}

func (in *personalDesktopAssignmentTypePtr) ToPersonalDesktopAssignmentTypePtrOutputWithContext(ctx context.Context) PersonalDesktopAssignmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PersonalDesktopAssignmentTypePtrOutput)
}

type PreferredAppGroupType string

const (
	PreferredAppGroupTypeNone             = PreferredAppGroupType("None")
	PreferredAppGroupTypeDesktop          = PreferredAppGroupType("Desktop")
	PreferredAppGroupTypeRailApplications = PreferredAppGroupType("RailApplications")
)

func (PreferredAppGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferredAppGroupType)(nil)).Elem()
}

func (e PreferredAppGroupType) ToPreferredAppGroupTypeOutput() PreferredAppGroupTypeOutput {
	return pulumi.ToOutput(e).(PreferredAppGroupTypeOutput)
}

func (e PreferredAppGroupType) ToPreferredAppGroupTypeOutputWithContext(ctx context.Context) PreferredAppGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PreferredAppGroupTypeOutput)
}

func (e PreferredAppGroupType) ToPreferredAppGroupTypePtrOutput() PreferredAppGroupTypePtrOutput {
	return e.ToPreferredAppGroupTypePtrOutputWithContext(context.Background())
}

func (e PreferredAppGroupType) ToPreferredAppGroupTypePtrOutputWithContext(ctx context.Context) PreferredAppGroupTypePtrOutput {
	return PreferredAppGroupType(e).ToPreferredAppGroupTypeOutputWithContext(ctx).ToPreferredAppGroupTypePtrOutputWithContext(ctx)
}

func (e PreferredAppGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreferredAppGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreferredAppGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PreferredAppGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PreferredAppGroupTypeOutput struct{ *pulumi.OutputState }

func (PreferredAppGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferredAppGroupType)(nil)).Elem()
}

func (o PreferredAppGroupTypeOutput) ToPreferredAppGroupTypeOutput() PreferredAppGroupTypeOutput {
	return o
}

func (o PreferredAppGroupTypeOutput) ToPreferredAppGroupTypeOutputWithContext(ctx context.Context) PreferredAppGroupTypeOutput {
	return o
}

func (o PreferredAppGroupTypeOutput) ToPreferredAppGroupTypePtrOutput() PreferredAppGroupTypePtrOutput {
	return o.ToPreferredAppGroupTypePtrOutputWithContext(context.Background())
}

func (o PreferredAppGroupTypeOutput) ToPreferredAppGroupTypePtrOutputWithContext(ctx context.Context) PreferredAppGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreferredAppGroupType) *PreferredAppGroupType {
		return &v
	}).(PreferredAppGroupTypePtrOutput)
}

func (o PreferredAppGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PreferredAppGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreferredAppGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PreferredAppGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreferredAppGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreferredAppGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PreferredAppGroupTypePtrOutput struct{ *pulumi.OutputState }

func (PreferredAppGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferredAppGroupType)(nil)).Elem()
}

func (o PreferredAppGroupTypePtrOutput) ToPreferredAppGroupTypePtrOutput() PreferredAppGroupTypePtrOutput {
	return o
}

func (o PreferredAppGroupTypePtrOutput) ToPreferredAppGroupTypePtrOutputWithContext(ctx context.Context) PreferredAppGroupTypePtrOutput {
	return o
}

func (o PreferredAppGroupTypePtrOutput) Elem() PreferredAppGroupTypeOutput {
	return o.ApplyT(func(v *PreferredAppGroupType) PreferredAppGroupType {
		if v != nil {
			return *v
		}
		var ret PreferredAppGroupType
		return ret
	}).(PreferredAppGroupTypeOutput)
}

func (o PreferredAppGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreferredAppGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PreferredAppGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PreferredAppGroupTypeInput is an input type that accepts PreferredAppGroupTypeArgs and PreferredAppGroupTypeOutput values.
// You can construct a concrete instance of `PreferredAppGroupTypeInput` via:
//
//          PreferredAppGroupTypeArgs{...}
type PreferredAppGroupTypeInput interface {
	pulumi.Input

	ToPreferredAppGroupTypeOutput() PreferredAppGroupTypeOutput
	ToPreferredAppGroupTypeOutputWithContext(context.Context) PreferredAppGroupTypeOutput
}

var preferredAppGroupTypePtrType = reflect.TypeOf((**PreferredAppGroupType)(nil)).Elem()

type PreferredAppGroupTypePtrInput interface {
	pulumi.Input

	ToPreferredAppGroupTypePtrOutput() PreferredAppGroupTypePtrOutput
	ToPreferredAppGroupTypePtrOutputWithContext(context.Context) PreferredAppGroupTypePtrOutput
}

type preferredAppGroupTypePtr string

func PreferredAppGroupTypePtr(v string) PreferredAppGroupTypePtrInput {
	return (*preferredAppGroupTypePtr)(&v)
}

func (*preferredAppGroupTypePtr) ElementType() reflect.Type {
	return preferredAppGroupTypePtrType
}

func (in *preferredAppGroupTypePtr) ToPreferredAppGroupTypePtrOutput() PreferredAppGroupTypePtrOutput {
	return pulumi.ToOutput(in).(PreferredAppGroupTypePtrOutput)
}

func (in *preferredAppGroupTypePtr) ToPreferredAppGroupTypePtrOutputWithContext(ctx context.Context) PreferredAppGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PreferredAppGroupTypePtrOutput)
}

type RegistrationTokenOperation string

const (
	RegistrationTokenOperationDelete = RegistrationTokenOperation("Delete")
	RegistrationTokenOperationNone   = RegistrationTokenOperation("None")
	RegistrationTokenOperationUpdate = RegistrationTokenOperation("Update")
)

func (RegistrationTokenOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationTokenOperation)(nil)).Elem()
}

func (e RegistrationTokenOperation) ToRegistrationTokenOperationOutput() RegistrationTokenOperationOutput {
	return pulumi.ToOutput(e).(RegistrationTokenOperationOutput)
}

func (e RegistrationTokenOperation) ToRegistrationTokenOperationOutputWithContext(ctx context.Context) RegistrationTokenOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistrationTokenOperationOutput)
}

func (e RegistrationTokenOperation) ToRegistrationTokenOperationPtrOutput() RegistrationTokenOperationPtrOutput {
	return e.ToRegistrationTokenOperationPtrOutputWithContext(context.Background())
}

func (e RegistrationTokenOperation) ToRegistrationTokenOperationPtrOutputWithContext(ctx context.Context) RegistrationTokenOperationPtrOutput {
	return RegistrationTokenOperation(e).ToRegistrationTokenOperationOutputWithContext(ctx).ToRegistrationTokenOperationPtrOutputWithContext(ctx)
}

func (e RegistrationTokenOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationTokenOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrationTokenOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistrationTokenOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistrationTokenOperationOutput struct{ *pulumi.OutputState }

func (RegistrationTokenOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationTokenOperation)(nil)).Elem()
}

func (o RegistrationTokenOperationOutput) ToRegistrationTokenOperationOutput() RegistrationTokenOperationOutput {
	return o
}

func (o RegistrationTokenOperationOutput) ToRegistrationTokenOperationOutputWithContext(ctx context.Context) RegistrationTokenOperationOutput {
	return o
}

func (o RegistrationTokenOperationOutput) ToRegistrationTokenOperationPtrOutput() RegistrationTokenOperationPtrOutput {
	return o.ToRegistrationTokenOperationPtrOutputWithContext(context.Background())
}

func (o RegistrationTokenOperationOutput) ToRegistrationTokenOperationPtrOutputWithContext(ctx context.Context) RegistrationTokenOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistrationTokenOperation) *RegistrationTokenOperation {
		return &v
	}).(RegistrationTokenOperationPtrOutput)
}

func (o RegistrationTokenOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistrationTokenOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistrationTokenOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistrationTokenOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistrationTokenOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistrationTokenOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistrationTokenOperationPtrOutput struct{ *pulumi.OutputState }

func (RegistrationTokenOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationTokenOperation)(nil)).Elem()
}

func (o RegistrationTokenOperationPtrOutput) ToRegistrationTokenOperationPtrOutput() RegistrationTokenOperationPtrOutput {
	return o
}

func (o RegistrationTokenOperationPtrOutput) ToRegistrationTokenOperationPtrOutputWithContext(ctx context.Context) RegistrationTokenOperationPtrOutput {
	return o
}

func (o RegistrationTokenOperationPtrOutput) Elem() RegistrationTokenOperationOutput {
	return o.ApplyT(func(v *RegistrationTokenOperation) RegistrationTokenOperation {
		if v != nil {
			return *v
		}
		var ret RegistrationTokenOperation
		return ret
	}).(RegistrationTokenOperationOutput)
}

func (o RegistrationTokenOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistrationTokenOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistrationTokenOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistrationTokenOperationInput is an input type that accepts RegistrationTokenOperationArgs and RegistrationTokenOperationOutput values.
// You can construct a concrete instance of `RegistrationTokenOperationInput` via:
//
//          RegistrationTokenOperationArgs{...}
type RegistrationTokenOperationInput interface {
	pulumi.Input

	ToRegistrationTokenOperationOutput() RegistrationTokenOperationOutput
	ToRegistrationTokenOperationOutputWithContext(context.Context) RegistrationTokenOperationOutput
}

var registrationTokenOperationPtrType = reflect.TypeOf((**RegistrationTokenOperation)(nil)).Elem()

type RegistrationTokenOperationPtrInput interface {
	pulumi.Input

	ToRegistrationTokenOperationPtrOutput() RegistrationTokenOperationPtrOutput
	ToRegistrationTokenOperationPtrOutputWithContext(context.Context) RegistrationTokenOperationPtrOutput
}

type registrationTokenOperationPtr string

func RegistrationTokenOperationPtr(v string) RegistrationTokenOperationPtrInput {
	return (*registrationTokenOperationPtr)(&v)
}

func (*registrationTokenOperationPtr) ElementType() reflect.Type {
	return registrationTokenOperationPtrType
}

func (in *registrationTokenOperationPtr) ToRegistrationTokenOperationPtrOutput() RegistrationTokenOperationPtrOutput {
	return pulumi.ToOutput(in).(RegistrationTokenOperationPtrOutput)
}

func (in *registrationTokenOperationPtr) ToRegistrationTokenOperationPtrOutputWithContext(ctx context.Context) RegistrationTokenOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistrationTokenOperationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationGroupTypeOutput{})
	pulumi.RegisterOutputType(ApplicationGroupTypePtrOutput{})
	pulumi.RegisterOutputType(CommandLineSettingOutput{})
	pulumi.RegisterOutputType(CommandLineSettingPtrOutput{})
	pulumi.RegisterOutputType(HostPoolTypeOutput{})
	pulumi.RegisterOutputType(HostPoolTypePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypeOutput{})
	pulumi.RegisterOutputType(LoadBalancerTypePtrOutput{})
	pulumi.RegisterOutputType(PersonalDesktopAssignmentTypeOutput{})
	pulumi.RegisterOutputType(PersonalDesktopAssignmentTypePtrOutput{})
	pulumi.RegisterOutputType(PreferredAppGroupTypeOutput{})
	pulumi.RegisterOutputType(PreferredAppGroupTypePtrOutput{})
	pulumi.RegisterOutputType(RegistrationTokenOperationOutput{})
	pulumi.RegisterOutputType(RegistrationTokenOperationPtrOutput{})
}
