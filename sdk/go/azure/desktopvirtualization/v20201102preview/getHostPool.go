// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201102preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a HostPool definition.
//
// Deprecated: Version 2020-11-02-preview will be removed in v2 of the provider.
func LookupHostPool(ctx *pulumi.Context, args *LookupHostPoolArgs, opts ...pulumi.InvokeOption) (*LookupHostPoolResult, error) {
	var rv LookupHostPoolResult
	err := ctx.Invoke("azure-native:desktopvirtualization/v20201102preview:getHostPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupHostPoolArgs struct {
	// The name of the host pool within the specified resource group
	HostPoolName string `pulumi:"hostPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Represents a HostPool definition.
type LookupHostPoolResult struct {
	// List of applicationGroup links.
	ApplicationGroupReferences []string `pulumi:"applicationGroupReferences"`
	// Custom rdp property of HostPool.
	CustomRdpProperty *string `pulumi:"customRdpProperty"`
	// Description of HostPool.
	Description *string `pulumi:"description"`
	// Friendly name of HostPool.
	FriendlyName *string `pulumi:"friendlyName"`
	// HostPool type for desktop.
	HostPoolType string `pulumi:"hostPoolType"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The type of the load balancer.
	LoadBalancerType string `pulumi:"loadBalancerType"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The max session limit of HostPool.
	MaxSessionLimit *int `pulumi:"maxSessionLimit"`
	// The name of the resource
	Name string `pulumi:"name"`
	// PersonalDesktopAssignment type for HostPool.
	PersonalDesktopAssignmentType *string `pulumi:"personalDesktopAssignmentType"`
	// The type of preferred application group type, default to Desktop Application Group
	PreferredAppGroupType string `pulumi:"preferredAppGroupType"`
	// The registration info of HostPool.
	RegistrationInfo *RegistrationInfoResponse `pulumi:"registrationInfo"`
	// The ring number of HostPool.
	Ring *int `pulumi:"ring"`
	// ClientId for the registered Relying Party used to issue WVD SSO certificates.
	SsoClientId *string `pulumi:"ssoClientId"`
	// Path to Azure KeyVault storing the secret used for communication to ADFS.
	SsoClientSecretKeyVaultPath *string `pulumi:"ssoClientSecretKeyVaultPath"`
	// Path to keyvault containing ssoContext secret.
	SsoContext *string `pulumi:"ssoContext"`
	// The type of single sign on Secret Type.
	SsoSecretType *string `pulumi:"ssoSecretType"`
	// URL to customer ADFS server for signing WVD SSO certificates.
	SsoadfsAuthority *string `pulumi:"ssoadfsAuthority"`
	// The flag to turn on/off StartVMOnConnect feature.
	StartVMOnConnect *bool `pulumi:"startVMOnConnect"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Is validation environment.
	ValidationEnvironment *bool `pulumi:"validationEnvironment"`
	// VM template for sessionhosts configuration within hostpool.
	VmTemplate *string `pulumi:"vmTemplate"`
}

func LookupHostPoolOutput(ctx *pulumi.Context, args LookupHostPoolOutputArgs, opts ...pulumi.InvokeOption) LookupHostPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHostPoolResult, error) {
			args := v.(LookupHostPoolArgs)
			r, err := LookupHostPool(ctx, &args, opts...)
			var s LookupHostPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHostPoolResultOutput)
}

type LookupHostPoolOutputArgs struct {
	// The name of the host pool within the specified resource group
	HostPoolName pulumi.StringInput `pulumi:"hostPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupHostPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostPoolArgs)(nil)).Elem()
}

// Represents a HostPool definition.
type LookupHostPoolResultOutput struct{ *pulumi.OutputState }

func (LookupHostPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostPoolResult)(nil)).Elem()
}

func (o LookupHostPoolResultOutput) ToLookupHostPoolResultOutput() LookupHostPoolResultOutput {
	return o
}

func (o LookupHostPoolResultOutput) ToLookupHostPoolResultOutputWithContext(ctx context.Context) LookupHostPoolResultOutput {
	return o
}

// List of applicationGroup links.
func (o LookupHostPoolResultOutput) ApplicationGroupReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHostPoolResult) []string { return v.ApplicationGroupReferences }).(pulumi.StringArrayOutput)
}

// Custom rdp property of HostPool.
func (o LookupHostPoolResultOutput) CustomRdpProperty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.CustomRdpProperty }).(pulumi.StringPtrOutput)
}

// Description of HostPool.
func (o LookupHostPoolResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Friendly name of HostPool.
func (o LookupHostPoolResultOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// HostPool type for desktop.
func (o LookupHostPoolResultOutput) HostPoolType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.HostPoolType }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupHostPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the load balancer.
func (o LookupHostPoolResultOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupHostPoolResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.Location }).(pulumi.StringOutput)
}

// The max session limit of HostPool.
func (o LookupHostPoolResultOutput) MaxSessionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *int { return v.MaxSessionLimit }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o LookupHostPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// PersonalDesktopAssignment type for HostPool.
func (o LookupHostPoolResultOutput) PersonalDesktopAssignmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.PersonalDesktopAssignmentType }).(pulumi.StringPtrOutput)
}

// The type of preferred application group type, default to Desktop Application Group
func (o LookupHostPoolResultOutput) PreferredAppGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.PreferredAppGroupType }).(pulumi.StringOutput)
}

// The registration info of HostPool.
func (o LookupHostPoolResultOutput) RegistrationInfo() RegistrationInfoResponsePtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *RegistrationInfoResponse { return v.RegistrationInfo }).(RegistrationInfoResponsePtrOutput)
}

// The ring number of HostPool.
func (o LookupHostPoolResultOutput) Ring() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *int { return v.Ring }).(pulumi.IntPtrOutput)
}

// ClientId for the registered Relying Party used to issue WVD SSO certificates.
func (o LookupHostPoolResultOutput) SsoClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.SsoClientId }).(pulumi.StringPtrOutput)
}

// Path to Azure KeyVault storing the secret used for communication to ADFS.
func (o LookupHostPoolResultOutput) SsoClientSecretKeyVaultPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.SsoClientSecretKeyVaultPath }).(pulumi.StringPtrOutput)
}

// Path to keyvault containing ssoContext secret.
func (o LookupHostPoolResultOutput) SsoContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.SsoContext }).(pulumi.StringPtrOutput)
}

// The type of single sign on Secret Type.
func (o LookupHostPoolResultOutput) SsoSecretType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.SsoSecretType }).(pulumi.StringPtrOutput)
}

// URL to customer ADFS server for signing WVD SSO certificates.
func (o LookupHostPoolResultOutput) SsoadfsAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.SsoadfsAuthority }).(pulumi.StringPtrOutput)
}

// The flag to turn on/off StartVMOnConnect feature.
func (o LookupHostPoolResultOutput) StartVMOnConnect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *bool { return v.StartVMOnConnect }).(pulumi.BoolPtrOutput)
}

// Resource tags.
func (o LookupHostPoolResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHostPoolResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupHostPoolResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostPoolResult) string { return v.Type }).(pulumi.StringOutput)
}

// Is validation environment.
func (o LookupHostPoolResultOutput) ValidationEnvironment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *bool { return v.ValidationEnvironment }).(pulumi.BoolPtrOutput)
}

// VM template for sessionhosts configuration within hostpool.
func (o LookupHostPoolResultOutput) VmTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostPoolResult) *string { return v.VmTemplate }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHostPoolResultOutput{})
}
