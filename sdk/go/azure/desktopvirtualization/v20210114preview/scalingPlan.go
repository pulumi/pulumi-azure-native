// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210114preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a scaling plan definition.
type ScalingPlan struct {
	pulumi.CustomResourceState

	// Description of scaling plan.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Exclusion tag for scaling plan.
	ExclusionTag pulumi.StringPtrOutput `pulumi:"exclusionTag"`
	// User friendly name of scaling plan.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// List of ScalingHostPoolReference definitions.
	HostPoolReferences ScalingHostPoolReferenceResponseArrayOutput `pulumi:"hostPoolReferences"`
	// HostPool type for desktop.
	HostPoolType pulumi.StringPtrOutput                                       `pulumi:"hostPoolType"`
	Identity     ResourceModelWithAllowedPropertySetResponseIdentityPtrOutput `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrOutput `pulumi:"managedBy"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// ObjectId of scaling plan. (internal use)
	ObjectId pulumi.StringOutput                                      `pulumi:"objectId"`
	Plan     ResourceModelWithAllowedPropertySetResponsePlanPtrOutput `pulumi:"plan"`
	// The ring number of scaling plan.
	Ring pulumi.IntPtrOutput `pulumi:"ring"`
	// List of ScalingSchedule definitions.
	Schedules ScalingScheduleResponseArrayOutput                      `pulumi:"schedules"`
	Sku       ResourceModelWithAllowedPropertySetResponseSkuPtrOutput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Timezone of the scaling plan.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewScalingPlan registers a new resource with the given unique name, arguments, and options.
func NewScalingPlan(ctx *pulumi.Context,
	name string, args *ScalingPlanArgs, opts ...pulumi.ResourceOption) (*ScalingPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210114preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20201110preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20201110preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20210201preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210201preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-native:desktopvirtualization/v20210309preview:ScalingPlan"),
		},
		{
			Type: pulumi.String("azure-nextgen:desktopvirtualization/v20210309preview:ScalingPlan"),
		},
	})
	opts = append(opts, aliases)
	var resource ScalingPlan
	err := ctx.RegisterResource("azure-native:desktopvirtualization/v20210114preview:ScalingPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalingPlan gets an existing ScalingPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalingPlanState, opts ...pulumi.ResourceOption) (*ScalingPlan, error) {
	var resource ScalingPlan
	err := ctx.ReadResource("azure-native:desktopvirtualization/v20210114preview:ScalingPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalingPlan resources.
type scalingPlanState struct {
	// Description of scaling plan.
	Description *string `pulumi:"description"`
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag *string `pulumi:"etag"`
	// Exclusion tag for scaling plan.
	ExclusionTag *string `pulumi:"exclusionTag"`
	// User friendly name of scaling plan.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of ScalingHostPoolReference definitions.
	HostPoolReferences []ScalingHostPoolReferenceResponse `pulumi:"hostPoolReferences"`
	// HostPool type for desktop.
	HostPoolType *string                                              `pulumi:"hostPoolType"`
	Identity     *ResourceModelWithAllowedPropertySetResponseIdentity `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy *string `pulumi:"managedBy"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// ObjectId of scaling plan. (internal use)
	ObjectId *string                                          `pulumi:"objectId"`
	Plan     *ResourceModelWithAllowedPropertySetResponsePlan `pulumi:"plan"`
	// The ring number of scaling plan.
	Ring *int `pulumi:"ring"`
	// List of ScalingSchedule definitions.
	Schedules []ScalingScheduleResponse                       `pulumi:"schedules"`
	Sku       *ResourceModelWithAllowedPropertySetResponseSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Timezone of the scaling plan.
	TimeZone *string `pulumi:"timeZone"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `pulumi:"type"`
}

type ScalingPlanState struct {
	// Description of scaling plan.
	Description pulumi.StringPtrInput
	// The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	Etag pulumi.StringPtrInput
	// Exclusion tag for scaling plan.
	ExclusionTag pulumi.StringPtrInput
	// User friendly name of scaling plan.
	FriendlyName pulumi.StringPtrInput
	// List of ScalingHostPoolReference definitions.
	HostPoolReferences ScalingHostPoolReferenceResponseArrayInput
	// HostPool type for desktop.
	HostPoolType pulumi.StringPtrInput
	Identity     ResourceModelWithAllowedPropertySetResponseIdentityPtrInput
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// ObjectId of scaling plan. (internal use)
	ObjectId pulumi.StringPtrInput
	Plan     ResourceModelWithAllowedPropertySetResponsePlanPtrInput
	// The ring number of scaling plan.
	Ring pulumi.IntPtrInput
	// List of ScalingSchedule definitions.
	Schedules ScalingScheduleResponseArrayInput
	Sku       ResourceModelWithAllowedPropertySetResponseSkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Timezone of the scaling plan.
	TimeZone pulumi.StringPtrInput
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringPtrInput
}

func (ScalingPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingPlanState)(nil)).Elem()
}

type scalingPlanArgs struct {
	// Description of scaling plan.
	Description *string `pulumi:"description"`
	// Exclusion tag for scaling plan.
	ExclusionTag *string `pulumi:"exclusionTag"`
	// User friendly name of scaling plan.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of ScalingHostPoolReference definitions.
	HostPoolReferences []ScalingHostPoolReference `pulumi:"hostPoolReferences"`
	// HostPool type for desktop.
	HostPoolType *string                                      `pulumi:"hostPoolType"`
	Identity     *ResourceModelWithAllowedPropertySetIdentity `pulumi:"identity"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy *string                                  `pulumi:"managedBy"`
	Plan      *ResourceModelWithAllowedPropertySetPlan `pulumi:"plan"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ring number of scaling plan.
	Ring *int `pulumi:"ring"`
	// The name of the scaling plan.
	ScalingPlanName *string `pulumi:"scalingPlanName"`
	// List of ScalingSchedule definitions.
	Schedules []ScalingSchedule                       `pulumi:"schedules"`
	Sku       *ResourceModelWithAllowedPropertySetSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Timezone of the scaling plan.
	TimeZone *string `pulumi:"timeZone"`
}

// The set of arguments for constructing a ScalingPlan resource.
type ScalingPlanArgs struct {
	// Description of scaling plan.
	Description pulumi.StringPtrInput
	// Exclusion tag for scaling plan.
	ExclusionTag pulumi.StringPtrInput
	// User friendly name of scaling plan.
	FriendlyName pulumi.StringPtrInput
	// List of ScalingHostPoolReference definitions.
	HostPoolReferences ScalingHostPoolReferenceArrayInput
	// HostPool type for desktop.
	HostPoolType pulumi.StringPtrInput
	Identity     ResourceModelWithAllowedPropertySetIdentityPtrInput
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
	ManagedBy pulumi.StringPtrInput
	Plan      ResourceModelWithAllowedPropertySetPlanPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The ring number of scaling plan.
	Ring pulumi.IntPtrInput
	// The name of the scaling plan.
	ScalingPlanName pulumi.StringPtrInput
	// List of ScalingSchedule definitions.
	Schedules ScalingScheduleArrayInput
	Sku       ResourceModelWithAllowedPropertySetSkuPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Timezone of the scaling plan.
	TimeZone pulumi.StringPtrInput
}

func (ScalingPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingPlanArgs)(nil)).Elem()
}

type ScalingPlanInput interface {
	pulumi.Input

	ToScalingPlanOutput() ScalingPlanOutput
	ToScalingPlanOutputWithContext(ctx context.Context) ScalingPlanOutput
}

func (*ScalingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlan)(nil))
}

func (i *ScalingPlan) ToScalingPlanOutput() ScalingPlanOutput {
	return i.ToScalingPlanOutputWithContext(context.Background())
}

func (i *ScalingPlan) ToScalingPlanOutputWithContext(ctx context.Context) ScalingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanOutput)
}

type ScalingPlanOutput struct {
	*pulumi.OutputState
}

func (ScalingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlan)(nil))
}

func (o ScalingPlanOutput) ToScalingPlanOutput() ScalingPlanOutput {
	return o
}

func (o ScalingPlanOutput) ToScalingPlanOutputWithContext(ctx context.Context) ScalingPlanOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ScalingPlanOutput{})
}
