// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
type ArmDisasterRecoveryResponseProperties struct {
	// Alternate name specified when alias and namespace names are same.
	AlternateName *string `pulumi:"alternateName"`
	// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
	PartnerNamespace *string `pulumi:"partnerNamespace"`
	// Number of entities pending to be replicated.
	PendingReplicationOperationsCount int `pulumi:"pendingReplicationOperationsCount"`
	// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
	ProvisioningState string `pulumi:"provisioningState"`
	// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
	Role string `pulumi:"role"`
}

// ArmDisasterRecoveryResponsePropertiesInput is an input type that accepts ArmDisasterRecoveryResponsePropertiesArgs and ArmDisasterRecoveryResponsePropertiesOutput values.
// You can construct a concrete instance of `ArmDisasterRecoveryResponsePropertiesInput` via:
//
//          ArmDisasterRecoveryResponsePropertiesArgs{...}
type ArmDisasterRecoveryResponsePropertiesInput interface {
	pulumi.Input

	ToArmDisasterRecoveryResponsePropertiesOutput() ArmDisasterRecoveryResponsePropertiesOutput
	ToArmDisasterRecoveryResponsePropertiesOutputWithContext(context.Context) ArmDisasterRecoveryResponsePropertiesOutput
}

// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
type ArmDisasterRecoveryResponsePropertiesArgs struct {
	// Alternate name specified when alias and namespace names are same.
	AlternateName pulumi.StringPtrInput `pulumi:"alternateName"`
	// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
	PartnerNamespace pulumi.StringPtrInput `pulumi:"partnerNamespace"`
	// Number of entities pending to be replicated.
	PendingReplicationOperationsCount pulumi.IntInput `pulumi:"pendingReplicationOperationsCount"`
	// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
	Role pulumi.StringInput `pulumi:"role"`
}

func (ArmDisasterRecoveryResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmDisasterRecoveryResponseProperties)(nil)).Elem()
}

func (i ArmDisasterRecoveryResponsePropertiesArgs) ToArmDisasterRecoveryResponsePropertiesOutput() ArmDisasterRecoveryResponsePropertiesOutput {
	return i.ToArmDisasterRecoveryResponsePropertiesOutputWithContext(context.Background())
}

func (i ArmDisasterRecoveryResponsePropertiesArgs) ToArmDisasterRecoveryResponsePropertiesOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmDisasterRecoveryResponsePropertiesOutput)
}

func (i ArmDisasterRecoveryResponsePropertiesArgs) ToArmDisasterRecoveryResponsePropertiesPtrOutput() ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return i.ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ArmDisasterRecoveryResponsePropertiesArgs) ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmDisasterRecoveryResponsePropertiesOutput).ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(ctx)
}

// ArmDisasterRecoveryResponsePropertiesPtrInput is an input type that accepts ArmDisasterRecoveryResponsePropertiesArgs, ArmDisasterRecoveryResponsePropertiesPtr and ArmDisasterRecoveryResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ArmDisasterRecoveryResponsePropertiesPtrInput` via:
//
//          ArmDisasterRecoveryResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ArmDisasterRecoveryResponsePropertiesPtrInput interface {
	pulumi.Input

	ToArmDisasterRecoveryResponsePropertiesPtrOutput() ArmDisasterRecoveryResponsePropertiesPtrOutput
	ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(context.Context) ArmDisasterRecoveryResponsePropertiesPtrOutput
}

type armDisasterRecoveryResponsePropertiesPtrType ArmDisasterRecoveryResponsePropertiesArgs

func ArmDisasterRecoveryResponsePropertiesPtr(v *ArmDisasterRecoveryResponsePropertiesArgs) ArmDisasterRecoveryResponsePropertiesPtrInput {
	return (*armDisasterRecoveryResponsePropertiesPtrType)(v)
}

func (*armDisasterRecoveryResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmDisasterRecoveryResponseProperties)(nil)).Elem()
}

func (i *armDisasterRecoveryResponsePropertiesPtrType) ToArmDisasterRecoveryResponsePropertiesPtrOutput() ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return i.ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *armDisasterRecoveryResponsePropertiesPtrType) ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmDisasterRecoveryResponsePropertiesPtrOutput)
}

// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
type ArmDisasterRecoveryResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ArmDisasterRecoveryResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmDisasterRecoveryResponseProperties)(nil)).Elem()
}

func (o ArmDisasterRecoveryResponsePropertiesOutput) ToArmDisasterRecoveryResponsePropertiesOutput() ArmDisasterRecoveryResponsePropertiesOutput {
	return o
}

func (o ArmDisasterRecoveryResponsePropertiesOutput) ToArmDisasterRecoveryResponsePropertiesOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesOutput {
	return o
}

func (o ArmDisasterRecoveryResponsePropertiesOutput) ToArmDisasterRecoveryResponsePropertiesPtrOutput() ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return o.ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ArmDisasterRecoveryResponsePropertiesOutput) ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) *ArmDisasterRecoveryResponseProperties {
		return &v
	}).(ArmDisasterRecoveryResponsePropertiesPtrOutput)
}

// Alternate name specified when alias and namespace names are same.
func (o ArmDisasterRecoveryResponsePropertiesOutput) AlternateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) *string { return v.AlternateName }).(pulumi.StringPtrOutput)
}

// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
func (o ArmDisasterRecoveryResponsePropertiesOutput) PartnerNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) *string { return v.PartnerNamespace }).(pulumi.StringPtrOutput)
}

// Number of entities pending to be replicated.
func (o ArmDisasterRecoveryResponsePropertiesOutput) PendingReplicationOperationsCount() pulumi.IntOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) int { return v.PendingReplicationOperationsCount }).(pulumi.IntOutput)
}

// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
func (o ArmDisasterRecoveryResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
func (o ArmDisasterRecoveryResponsePropertiesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ArmDisasterRecoveryResponseProperties) string { return v.Role }).(pulumi.StringOutput)
}

type ArmDisasterRecoveryResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ArmDisasterRecoveryResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmDisasterRecoveryResponseProperties)(nil)).Elem()
}

func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) ToArmDisasterRecoveryResponsePropertiesPtrOutput() ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return o
}

func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) ToArmDisasterRecoveryResponsePropertiesPtrOutputWithContext(ctx context.Context) ArmDisasterRecoveryResponsePropertiesPtrOutput {
	return o
}

func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) Elem() ArmDisasterRecoveryResponsePropertiesOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) ArmDisasterRecoveryResponseProperties { return *v }).(ArmDisasterRecoveryResponsePropertiesOutput)
}

// Alternate name specified when alias and namespace names are same.
func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) AlternateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.AlternateName
	}).(pulumi.StringPtrOutput)
}

// ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) PartnerNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.PartnerNamespace
	}).(pulumi.StringPtrOutput)
}

// Number of entities pending to be replicated.
func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) PendingReplicationOperationsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) *int {
		if v == nil {
			return nil
		}
		return &v.PendingReplicationOperationsCount
	}).(pulumi.IntPtrOutput)
}

// Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'
func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'
func (o ArmDisasterRecoveryResponsePropertiesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmDisasterRecoveryResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// Properties supplied to create or update AuthorizationRule
type AuthorizationRuleResponseProperties struct {
	// The rights associated with the rule.
	Rights []string `pulumi:"rights"`
}

// AuthorizationRuleResponsePropertiesInput is an input type that accepts AuthorizationRuleResponsePropertiesArgs and AuthorizationRuleResponsePropertiesOutput values.
// You can construct a concrete instance of `AuthorizationRuleResponsePropertiesInput` via:
//
//          AuthorizationRuleResponsePropertiesArgs{...}
type AuthorizationRuleResponsePropertiesInput interface {
	pulumi.Input

	ToAuthorizationRuleResponsePropertiesOutput() AuthorizationRuleResponsePropertiesOutput
	ToAuthorizationRuleResponsePropertiesOutputWithContext(context.Context) AuthorizationRuleResponsePropertiesOutput
}

// Properties supplied to create or update AuthorizationRule
type AuthorizationRuleResponsePropertiesArgs struct {
	// The rights associated with the rule.
	Rights pulumi.StringArrayInput `pulumi:"rights"`
}

func (AuthorizationRuleResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRuleResponseProperties)(nil)).Elem()
}

func (i AuthorizationRuleResponsePropertiesArgs) ToAuthorizationRuleResponsePropertiesOutput() AuthorizationRuleResponsePropertiesOutput {
	return i.ToAuthorizationRuleResponsePropertiesOutputWithContext(context.Background())
}

func (i AuthorizationRuleResponsePropertiesArgs) ToAuthorizationRuleResponsePropertiesOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleResponsePropertiesOutput)
}

func (i AuthorizationRuleResponsePropertiesArgs) ToAuthorizationRuleResponsePropertiesPtrOutput() AuthorizationRuleResponsePropertiesPtrOutput {
	return i.ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i AuthorizationRuleResponsePropertiesArgs) ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleResponsePropertiesOutput).ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(ctx)
}

// AuthorizationRuleResponsePropertiesPtrInput is an input type that accepts AuthorizationRuleResponsePropertiesArgs, AuthorizationRuleResponsePropertiesPtr and AuthorizationRuleResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `AuthorizationRuleResponsePropertiesPtrInput` via:
//
//          AuthorizationRuleResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type AuthorizationRuleResponsePropertiesPtrInput interface {
	pulumi.Input

	ToAuthorizationRuleResponsePropertiesPtrOutput() AuthorizationRuleResponsePropertiesPtrOutput
	ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(context.Context) AuthorizationRuleResponsePropertiesPtrOutput
}

type authorizationRuleResponsePropertiesPtrType AuthorizationRuleResponsePropertiesArgs

func AuthorizationRuleResponsePropertiesPtr(v *AuthorizationRuleResponsePropertiesArgs) AuthorizationRuleResponsePropertiesPtrInput {
	return (*authorizationRuleResponsePropertiesPtrType)(v)
}

func (*authorizationRuleResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleResponseProperties)(nil)).Elem()
}

func (i *authorizationRuleResponsePropertiesPtrType) ToAuthorizationRuleResponsePropertiesPtrOutput() AuthorizationRuleResponsePropertiesPtrOutput {
	return i.ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *authorizationRuleResponsePropertiesPtrType) ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationRuleResponsePropertiesPtrOutput)
}

// Properties supplied to create or update AuthorizationRule
type AuthorizationRuleResponsePropertiesOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationRuleResponseProperties)(nil)).Elem()
}

func (o AuthorizationRuleResponsePropertiesOutput) ToAuthorizationRuleResponsePropertiesOutput() AuthorizationRuleResponsePropertiesOutput {
	return o
}

func (o AuthorizationRuleResponsePropertiesOutput) ToAuthorizationRuleResponsePropertiesOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesOutput {
	return o
}

func (o AuthorizationRuleResponsePropertiesOutput) ToAuthorizationRuleResponsePropertiesPtrOutput() AuthorizationRuleResponsePropertiesPtrOutput {
	return o.ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o AuthorizationRuleResponsePropertiesOutput) ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesPtrOutput {
	return o.ApplyT(func(v AuthorizationRuleResponseProperties) *AuthorizationRuleResponseProperties {
		return &v
	}).(AuthorizationRuleResponsePropertiesPtrOutput)
}

// The rights associated with the rule.
func (o AuthorizationRuleResponsePropertiesOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationRuleResponseProperties) []string { return v.Rights }).(pulumi.StringArrayOutput)
}

type AuthorizationRuleResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationRuleResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationRuleResponseProperties)(nil)).Elem()
}

func (o AuthorizationRuleResponsePropertiesPtrOutput) ToAuthorizationRuleResponsePropertiesPtrOutput() AuthorizationRuleResponsePropertiesPtrOutput {
	return o
}

func (o AuthorizationRuleResponsePropertiesPtrOutput) ToAuthorizationRuleResponsePropertiesPtrOutputWithContext(ctx context.Context) AuthorizationRuleResponsePropertiesPtrOutput {
	return o
}

func (o AuthorizationRuleResponsePropertiesPtrOutput) Elem() AuthorizationRuleResponsePropertiesOutput {
	return o.ApplyT(func(v *AuthorizationRuleResponseProperties) AuthorizationRuleResponseProperties { return *v }).(AuthorizationRuleResponsePropertiesOutput)
}

// The rights associated with the rule.
func (o AuthorizationRuleResponsePropertiesPtrOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizationRuleResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.Rights
	}).(pulumi.StringArrayOutput)
}

// Properties to configure capture description for eventhub
type CaptureDescription struct {
	// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
	Destination *Destination `pulumi:"destination"`
	// A value that indicates whether capture description is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
	Encoding *string `pulumi:"encoding"`
	// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
	SizeLimitInBytes *int `pulumi:"sizeLimitInBytes"`
	// A value that indicates whether to Skip Empty Archives
	SkipEmptyArchives *bool `pulumi:"skipEmptyArchives"`
}

// CaptureDescriptionInput is an input type that accepts CaptureDescriptionArgs and CaptureDescriptionOutput values.
// You can construct a concrete instance of `CaptureDescriptionInput` via:
//
//          CaptureDescriptionArgs{...}
type CaptureDescriptionInput interface {
	pulumi.Input

	ToCaptureDescriptionOutput() CaptureDescriptionOutput
	ToCaptureDescriptionOutputWithContext(context.Context) CaptureDescriptionOutput
}

// Properties to configure capture description for eventhub
type CaptureDescriptionArgs struct {
	// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
	Destination DestinationPtrInput `pulumi:"destination"`
	// A value that indicates whether capture description is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
	SizeLimitInBytes pulumi.IntPtrInput `pulumi:"sizeLimitInBytes"`
	// A value that indicates whether to Skip Empty Archives
	SkipEmptyArchives pulumi.BoolPtrInput `pulumi:"skipEmptyArchives"`
}

func (CaptureDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureDescription)(nil)).Elem()
}

func (i CaptureDescriptionArgs) ToCaptureDescriptionOutput() CaptureDescriptionOutput {
	return i.ToCaptureDescriptionOutputWithContext(context.Background())
}

func (i CaptureDescriptionArgs) ToCaptureDescriptionOutputWithContext(ctx context.Context) CaptureDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionOutput)
}

func (i CaptureDescriptionArgs) ToCaptureDescriptionPtrOutput() CaptureDescriptionPtrOutput {
	return i.ToCaptureDescriptionPtrOutputWithContext(context.Background())
}

func (i CaptureDescriptionArgs) ToCaptureDescriptionPtrOutputWithContext(ctx context.Context) CaptureDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionOutput).ToCaptureDescriptionPtrOutputWithContext(ctx)
}

// CaptureDescriptionPtrInput is an input type that accepts CaptureDescriptionArgs, CaptureDescriptionPtr and CaptureDescriptionPtrOutput values.
// You can construct a concrete instance of `CaptureDescriptionPtrInput` via:
//
//          CaptureDescriptionArgs{...}
//
//  or:
//
//          nil
type CaptureDescriptionPtrInput interface {
	pulumi.Input

	ToCaptureDescriptionPtrOutput() CaptureDescriptionPtrOutput
	ToCaptureDescriptionPtrOutputWithContext(context.Context) CaptureDescriptionPtrOutput
}

type captureDescriptionPtrType CaptureDescriptionArgs

func CaptureDescriptionPtr(v *CaptureDescriptionArgs) CaptureDescriptionPtrInput {
	return (*captureDescriptionPtrType)(v)
}

func (*captureDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureDescription)(nil)).Elem()
}

func (i *captureDescriptionPtrType) ToCaptureDescriptionPtrOutput() CaptureDescriptionPtrOutput {
	return i.ToCaptureDescriptionPtrOutputWithContext(context.Background())
}

func (i *captureDescriptionPtrType) ToCaptureDescriptionPtrOutputWithContext(ctx context.Context) CaptureDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionPtrOutput)
}

// Properties to configure capture description for eventhub
type CaptureDescriptionOutput struct{ *pulumi.OutputState }

func (CaptureDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureDescription)(nil)).Elem()
}

func (o CaptureDescriptionOutput) ToCaptureDescriptionOutput() CaptureDescriptionOutput {
	return o
}

func (o CaptureDescriptionOutput) ToCaptureDescriptionOutputWithContext(ctx context.Context) CaptureDescriptionOutput {
	return o
}

func (o CaptureDescriptionOutput) ToCaptureDescriptionPtrOutput() CaptureDescriptionPtrOutput {
	return o.ToCaptureDescriptionPtrOutputWithContext(context.Background())
}

func (o CaptureDescriptionOutput) ToCaptureDescriptionPtrOutputWithContext(ctx context.Context) CaptureDescriptionPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *CaptureDescription {
		return &v
	}).(CaptureDescriptionPtrOutput)
}

// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
func (o CaptureDescriptionOutput) Destination() DestinationPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *Destination { return v.Destination }).(DestinationPtrOutput)
}

// A value that indicates whether capture description is enabled.
func (o CaptureDescriptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
func (o CaptureDescriptionOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
func (o CaptureDescriptionOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
func (o CaptureDescriptionOutput) SizeLimitInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *int { return v.SizeLimitInBytes }).(pulumi.IntPtrOutput)
}

// A value that indicates whether to Skip Empty Archives
func (o CaptureDescriptionOutput) SkipEmptyArchives() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaptureDescription) *bool { return v.SkipEmptyArchives }).(pulumi.BoolPtrOutput)
}

type CaptureDescriptionPtrOutput struct{ *pulumi.OutputState }

func (CaptureDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureDescription)(nil)).Elem()
}

func (o CaptureDescriptionPtrOutput) ToCaptureDescriptionPtrOutput() CaptureDescriptionPtrOutput {
	return o
}

func (o CaptureDescriptionPtrOutput) ToCaptureDescriptionPtrOutputWithContext(ctx context.Context) CaptureDescriptionPtrOutput {
	return o
}

func (o CaptureDescriptionPtrOutput) Elem() CaptureDescriptionOutput {
	return o.ApplyT(func(v *CaptureDescription) CaptureDescription { return *v }).(CaptureDescriptionOutput)
}

// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
func (o CaptureDescriptionPtrOutput) Destination() DestinationPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *Destination {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(DestinationPtrOutput)
}

// A value that indicates whether capture description is enabled.
func (o CaptureDescriptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
func (o CaptureDescriptionPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
func (o CaptureDescriptionPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
func (o CaptureDescriptionPtrOutput) SizeLimitInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *int {
		if v == nil {
			return nil
		}
		return v.SizeLimitInBytes
	}).(pulumi.IntPtrOutput)
}

// A value that indicates whether to Skip Empty Archives
func (o CaptureDescriptionPtrOutput) SkipEmptyArchives() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaptureDescription) *bool {
		if v == nil {
			return nil
		}
		return v.SkipEmptyArchives
	}).(pulumi.BoolPtrOutput)
}

// Properties to configure capture description for eventhub
type CaptureDescriptionResponse struct {
	// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
	Destination *DestinationResponse `pulumi:"destination"`
	// A value that indicates whether capture description is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
	Encoding *string `pulumi:"encoding"`
	// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
	SizeLimitInBytes *int `pulumi:"sizeLimitInBytes"`
	// A value that indicates whether to Skip Empty Archives
	SkipEmptyArchives *bool `pulumi:"skipEmptyArchives"`
}

// CaptureDescriptionResponseInput is an input type that accepts CaptureDescriptionResponseArgs and CaptureDescriptionResponseOutput values.
// You can construct a concrete instance of `CaptureDescriptionResponseInput` via:
//
//          CaptureDescriptionResponseArgs{...}
type CaptureDescriptionResponseInput interface {
	pulumi.Input

	ToCaptureDescriptionResponseOutput() CaptureDescriptionResponseOutput
	ToCaptureDescriptionResponseOutputWithContext(context.Context) CaptureDescriptionResponseOutput
}

// Properties to configure capture description for eventhub
type CaptureDescriptionResponseArgs struct {
	// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
	Destination DestinationResponsePtrInput `pulumi:"destination"`
	// A value that indicates whether capture description is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
	SizeLimitInBytes pulumi.IntPtrInput `pulumi:"sizeLimitInBytes"`
	// A value that indicates whether to Skip Empty Archives
	SkipEmptyArchives pulumi.BoolPtrInput `pulumi:"skipEmptyArchives"`
}

func (CaptureDescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureDescriptionResponse)(nil)).Elem()
}

func (i CaptureDescriptionResponseArgs) ToCaptureDescriptionResponseOutput() CaptureDescriptionResponseOutput {
	return i.ToCaptureDescriptionResponseOutputWithContext(context.Background())
}

func (i CaptureDescriptionResponseArgs) ToCaptureDescriptionResponseOutputWithContext(ctx context.Context) CaptureDescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionResponseOutput)
}

func (i CaptureDescriptionResponseArgs) ToCaptureDescriptionResponsePtrOutput() CaptureDescriptionResponsePtrOutput {
	return i.ToCaptureDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i CaptureDescriptionResponseArgs) ToCaptureDescriptionResponsePtrOutputWithContext(ctx context.Context) CaptureDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionResponseOutput).ToCaptureDescriptionResponsePtrOutputWithContext(ctx)
}

// CaptureDescriptionResponsePtrInput is an input type that accepts CaptureDescriptionResponseArgs, CaptureDescriptionResponsePtr and CaptureDescriptionResponsePtrOutput values.
// You can construct a concrete instance of `CaptureDescriptionResponsePtrInput` via:
//
//          CaptureDescriptionResponseArgs{...}
//
//  or:
//
//          nil
type CaptureDescriptionResponsePtrInput interface {
	pulumi.Input

	ToCaptureDescriptionResponsePtrOutput() CaptureDescriptionResponsePtrOutput
	ToCaptureDescriptionResponsePtrOutputWithContext(context.Context) CaptureDescriptionResponsePtrOutput
}

type captureDescriptionResponsePtrType CaptureDescriptionResponseArgs

func CaptureDescriptionResponsePtr(v *CaptureDescriptionResponseArgs) CaptureDescriptionResponsePtrInput {
	return (*captureDescriptionResponsePtrType)(v)
}

func (*captureDescriptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureDescriptionResponse)(nil)).Elem()
}

func (i *captureDescriptionResponsePtrType) ToCaptureDescriptionResponsePtrOutput() CaptureDescriptionResponsePtrOutput {
	return i.ToCaptureDescriptionResponsePtrOutputWithContext(context.Background())
}

func (i *captureDescriptionResponsePtrType) ToCaptureDescriptionResponsePtrOutputWithContext(ctx context.Context) CaptureDescriptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureDescriptionResponsePtrOutput)
}

// Properties to configure capture description for eventhub
type CaptureDescriptionResponseOutput struct{ *pulumi.OutputState }

func (CaptureDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureDescriptionResponse)(nil)).Elem()
}

func (o CaptureDescriptionResponseOutput) ToCaptureDescriptionResponseOutput() CaptureDescriptionResponseOutput {
	return o
}

func (o CaptureDescriptionResponseOutput) ToCaptureDescriptionResponseOutputWithContext(ctx context.Context) CaptureDescriptionResponseOutput {
	return o
}

func (o CaptureDescriptionResponseOutput) ToCaptureDescriptionResponsePtrOutput() CaptureDescriptionResponsePtrOutput {
	return o.ToCaptureDescriptionResponsePtrOutputWithContext(context.Background())
}

func (o CaptureDescriptionResponseOutput) ToCaptureDescriptionResponsePtrOutputWithContext(ctx context.Context) CaptureDescriptionResponsePtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *CaptureDescriptionResponse {
		return &v
	}).(CaptureDescriptionResponsePtrOutput)
}

// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
func (o CaptureDescriptionResponseOutput) Destination() DestinationResponsePtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *DestinationResponse { return v.Destination }).(DestinationResponsePtrOutput)
}

// A value that indicates whether capture description is enabled.
func (o CaptureDescriptionResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
func (o CaptureDescriptionResponseOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
func (o CaptureDescriptionResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
func (o CaptureDescriptionResponseOutput) SizeLimitInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *int { return v.SizeLimitInBytes }).(pulumi.IntPtrOutput)
}

// A value that indicates whether to Skip Empty Archives
func (o CaptureDescriptionResponseOutput) SkipEmptyArchives() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CaptureDescriptionResponse) *bool { return v.SkipEmptyArchives }).(pulumi.BoolPtrOutput)
}

type CaptureDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (CaptureDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureDescriptionResponse)(nil)).Elem()
}

func (o CaptureDescriptionResponsePtrOutput) ToCaptureDescriptionResponsePtrOutput() CaptureDescriptionResponsePtrOutput {
	return o
}

func (o CaptureDescriptionResponsePtrOutput) ToCaptureDescriptionResponsePtrOutputWithContext(ctx context.Context) CaptureDescriptionResponsePtrOutput {
	return o
}

func (o CaptureDescriptionResponsePtrOutput) Elem() CaptureDescriptionResponseOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) CaptureDescriptionResponse { return *v }).(CaptureDescriptionResponseOutput)
}

// Properties of Destination where capture will be stored. (Storage Account, Blob Names)
func (o CaptureDescriptionResponsePtrOutput) Destination() DestinationResponsePtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *DestinationResponse {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(DestinationResponsePtrOutput)
}

// A value that indicates whether capture description is enabled.
func (o CaptureDescriptionResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
func (o CaptureDescriptionResponsePtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
func (o CaptureDescriptionResponsePtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
func (o CaptureDescriptionResponsePtrOutput) SizeLimitInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.SizeLimitInBytes
	}).(pulumi.IntPtrOutput)
}

// A value that indicates whether to Skip Empty Archives
func (o CaptureDescriptionResponsePtrOutput) SkipEmptyArchives() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CaptureDescriptionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SkipEmptyArchives
	}).(pulumi.BoolPtrOutput)
}

// Single item in List or Get Consumer group operation
type ConsumerGroupType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Single item in List or Get Consumer group operation
	Properties ConsumerGroupResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ConsumerGroupTypeInput is an input type that accepts ConsumerGroupTypeArgs and ConsumerGroupTypeOutput values.
// You can construct a concrete instance of `ConsumerGroupTypeInput` via:
//
//          ConsumerGroupTypeArgs{...}
type ConsumerGroupTypeInput interface {
	pulumi.Input

	ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput
	ToConsumerGroupTypeOutputWithContext(context.Context) ConsumerGroupTypeOutput
}

// Single item in List or Get Consumer group operation
type ConsumerGroupTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Single item in List or Get Consumer group operation
	Properties ConsumerGroupResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConsumerGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupType)(nil)).Elem()
}

func (i ConsumerGroupTypeArgs) ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput {
	return i.ToConsumerGroupTypeOutputWithContext(context.Background())
}

func (i ConsumerGroupTypeArgs) ToConsumerGroupTypeOutputWithContext(ctx context.Context) ConsumerGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupTypeOutput)
}

// Single item in List or Get Consumer group operation
type ConsumerGroupTypeOutput struct{ *pulumi.OutputState }

func (ConsumerGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupType)(nil)).Elem()
}

func (o ConsumerGroupTypeOutput) ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput {
	return o
}

func (o ConsumerGroupTypeOutput) ToConsumerGroupTypeOutputWithContext(ctx context.Context) ConsumerGroupTypeOutput {
	return o
}

// Resource name.
func (o ConsumerGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// Single item in List or Get Consumer group operation
func (o ConsumerGroupTypeOutput) Properties() ConsumerGroupResponsePropertiesOutput {
	return o.ApplyT(func(v ConsumerGroupType) ConsumerGroupResponseProperties { return v.Properties }).(ConsumerGroupResponsePropertiesOutput)
}

// Resource type.
func (o ConsumerGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// Single item in List or Get Consumer group operation
type ConsumerGroupResponseProperties struct {
	// Exact time the message was created.
	CreatedAt string `pulumi:"createdAt"`
	// The exact time the message was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata *string `pulumi:"userMetadata"`
}

// ConsumerGroupResponsePropertiesInput is an input type that accepts ConsumerGroupResponsePropertiesArgs and ConsumerGroupResponsePropertiesOutput values.
// You can construct a concrete instance of `ConsumerGroupResponsePropertiesInput` via:
//
//          ConsumerGroupResponsePropertiesArgs{...}
type ConsumerGroupResponsePropertiesInput interface {
	pulumi.Input

	ToConsumerGroupResponsePropertiesOutput() ConsumerGroupResponsePropertiesOutput
	ToConsumerGroupResponsePropertiesOutputWithContext(context.Context) ConsumerGroupResponsePropertiesOutput
}

// Single item in List or Get Consumer group operation
type ConsumerGroupResponsePropertiesArgs struct {
	// Exact time the message was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The exact time the message was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
	UserMetadata pulumi.StringPtrInput `pulumi:"userMetadata"`
}

func (ConsumerGroupResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupResponseProperties)(nil)).Elem()
}

func (i ConsumerGroupResponsePropertiesArgs) ToConsumerGroupResponsePropertiesOutput() ConsumerGroupResponsePropertiesOutput {
	return i.ToConsumerGroupResponsePropertiesOutputWithContext(context.Background())
}

func (i ConsumerGroupResponsePropertiesArgs) ToConsumerGroupResponsePropertiesOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupResponsePropertiesOutput)
}

func (i ConsumerGroupResponsePropertiesArgs) ToConsumerGroupResponsePropertiesPtrOutput() ConsumerGroupResponsePropertiesPtrOutput {
	return i.ToConsumerGroupResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i ConsumerGroupResponsePropertiesArgs) ToConsumerGroupResponsePropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupResponsePropertiesOutput).ToConsumerGroupResponsePropertiesPtrOutputWithContext(ctx)
}

// ConsumerGroupResponsePropertiesPtrInput is an input type that accepts ConsumerGroupResponsePropertiesArgs, ConsumerGroupResponsePropertiesPtr and ConsumerGroupResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `ConsumerGroupResponsePropertiesPtrInput` via:
//
//          ConsumerGroupResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type ConsumerGroupResponsePropertiesPtrInput interface {
	pulumi.Input

	ToConsumerGroupResponsePropertiesPtrOutput() ConsumerGroupResponsePropertiesPtrOutput
	ToConsumerGroupResponsePropertiesPtrOutputWithContext(context.Context) ConsumerGroupResponsePropertiesPtrOutput
}

type consumerGroupResponsePropertiesPtrType ConsumerGroupResponsePropertiesArgs

func ConsumerGroupResponsePropertiesPtr(v *ConsumerGroupResponsePropertiesArgs) ConsumerGroupResponsePropertiesPtrInput {
	return (*consumerGroupResponsePropertiesPtrType)(v)
}

func (*consumerGroupResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupResponseProperties)(nil)).Elem()
}

func (i *consumerGroupResponsePropertiesPtrType) ToConsumerGroupResponsePropertiesPtrOutput() ConsumerGroupResponsePropertiesPtrOutput {
	return i.ToConsumerGroupResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *consumerGroupResponsePropertiesPtrType) ToConsumerGroupResponsePropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupResponsePropertiesPtrOutput)
}

// Single item in List or Get Consumer group operation
type ConsumerGroupResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ConsumerGroupResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupResponseProperties)(nil)).Elem()
}

func (o ConsumerGroupResponsePropertiesOutput) ToConsumerGroupResponsePropertiesOutput() ConsumerGroupResponsePropertiesOutput {
	return o
}

func (o ConsumerGroupResponsePropertiesOutput) ToConsumerGroupResponsePropertiesOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesOutput {
	return o
}

func (o ConsumerGroupResponsePropertiesOutput) ToConsumerGroupResponsePropertiesPtrOutput() ConsumerGroupResponsePropertiesPtrOutput {
	return o.ToConsumerGroupResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o ConsumerGroupResponsePropertiesOutput) ToConsumerGroupResponsePropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesPtrOutput {
	return o.ApplyT(func(v ConsumerGroupResponseProperties) *ConsumerGroupResponseProperties {
		return &v
	}).(ConsumerGroupResponsePropertiesPtrOutput)
}

// Exact time the message was created.
func (o ConsumerGroupResponsePropertiesOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupResponseProperties) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The exact time the message was updated.
func (o ConsumerGroupResponsePropertiesOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupResponseProperties) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o ConsumerGroupResponsePropertiesOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsumerGroupResponseProperties) *string { return v.UserMetadata }).(pulumi.StringPtrOutput)
}

type ConsumerGroupResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConsumerGroupResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupResponseProperties)(nil)).Elem()
}

func (o ConsumerGroupResponsePropertiesPtrOutput) ToConsumerGroupResponsePropertiesPtrOutput() ConsumerGroupResponsePropertiesPtrOutput {
	return o
}

func (o ConsumerGroupResponsePropertiesPtrOutput) ToConsumerGroupResponsePropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupResponsePropertiesPtrOutput {
	return o
}

func (o ConsumerGroupResponsePropertiesPtrOutput) Elem() ConsumerGroupResponsePropertiesOutput {
	return o.ApplyT(func(v *ConsumerGroupResponseProperties) ConsumerGroupResponseProperties { return *v }).(ConsumerGroupResponsePropertiesOutput)
}

// Exact time the message was created.
func (o ConsumerGroupResponsePropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o ConsumerGroupResponsePropertiesPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.
func (o ConsumerGroupResponsePropertiesPtrOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.UserMetadata
	}).(pulumi.StringPtrOutput)
}

// Capture storage details for capture description
type Destination struct {
	// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
	ArchiveNameFormat *string `pulumi:"archiveNameFormat"`
	// Blob container Name
	BlobContainer *string `pulumi:"blobContainer"`
	// Name for capture destination
	Name *string `pulumi:"name"`
	// Resource id of the storage account to be used to create the blobs
	StorageAccountResourceId *string `pulumi:"storageAccountResourceId"`
}

// DestinationInput is an input type that accepts DestinationArgs and DestinationOutput values.
// You can construct a concrete instance of `DestinationInput` via:
//
//          DestinationArgs{...}
type DestinationInput interface {
	pulumi.Input

	ToDestinationOutput() DestinationOutput
	ToDestinationOutputWithContext(context.Context) DestinationOutput
}

// Capture storage details for capture description
type DestinationArgs struct {
	// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
	ArchiveNameFormat pulumi.StringPtrInput `pulumi:"archiveNameFormat"`
	// Blob container Name
	BlobContainer pulumi.StringPtrInput `pulumi:"blobContainer"`
	// Name for capture destination
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource id of the storage account to be used to create the blobs
	StorageAccountResourceId pulumi.StringPtrInput `pulumi:"storageAccountResourceId"`
}

func (DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Destination)(nil)).Elem()
}

func (i DestinationArgs) ToDestinationOutput() DestinationOutput {
	return i.ToDestinationOutputWithContext(context.Background())
}

func (i DestinationArgs) ToDestinationOutputWithContext(ctx context.Context) DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationOutput)
}

func (i DestinationArgs) ToDestinationPtrOutput() DestinationPtrOutput {
	return i.ToDestinationPtrOutputWithContext(context.Background())
}

func (i DestinationArgs) ToDestinationPtrOutputWithContext(ctx context.Context) DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationOutput).ToDestinationPtrOutputWithContext(ctx)
}

// DestinationPtrInput is an input type that accepts DestinationArgs, DestinationPtr and DestinationPtrOutput values.
// You can construct a concrete instance of `DestinationPtrInput` via:
//
//          DestinationArgs{...}
//
//  or:
//
//          nil
type DestinationPtrInput interface {
	pulumi.Input

	ToDestinationPtrOutput() DestinationPtrOutput
	ToDestinationPtrOutputWithContext(context.Context) DestinationPtrOutput
}

type destinationPtrType DestinationArgs

func DestinationPtr(v *DestinationArgs) DestinationPtrInput {
	return (*destinationPtrType)(v)
}

func (*destinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Destination)(nil)).Elem()
}

func (i *destinationPtrType) ToDestinationPtrOutput() DestinationPtrOutput {
	return i.ToDestinationPtrOutputWithContext(context.Background())
}

func (i *destinationPtrType) ToDestinationPtrOutputWithContext(ctx context.Context) DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationPtrOutput)
}

// Capture storage details for capture description
type DestinationOutput struct{ *pulumi.OutputState }

func (DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Destination)(nil)).Elem()
}

func (o DestinationOutput) ToDestinationOutput() DestinationOutput {
	return o
}

func (o DestinationOutput) ToDestinationOutputWithContext(ctx context.Context) DestinationOutput {
	return o
}

func (o DestinationOutput) ToDestinationPtrOutput() DestinationPtrOutput {
	return o.ToDestinationPtrOutputWithContext(context.Background())
}

func (o DestinationOutput) ToDestinationPtrOutputWithContext(ctx context.Context) DestinationPtrOutput {
	return o.ApplyT(func(v Destination) *Destination {
		return &v
	}).(DestinationPtrOutput)
}

// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
func (o DestinationOutput) ArchiveNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Destination) *string { return v.ArchiveNameFormat }).(pulumi.StringPtrOutput)
}

// Blob container Name
func (o DestinationOutput) BlobContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Destination) *string { return v.BlobContainer }).(pulumi.StringPtrOutput)
}

// Name for capture destination
func (o DestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Destination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource id of the storage account to be used to create the blobs
func (o DestinationOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Destination) *string { return v.StorageAccountResourceId }).(pulumi.StringPtrOutput)
}

type DestinationPtrOutput struct{ *pulumi.OutputState }

func (DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Destination)(nil)).Elem()
}

func (o DestinationPtrOutput) ToDestinationPtrOutput() DestinationPtrOutput {
	return o
}

func (o DestinationPtrOutput) ToDestinationPtrOutputWithContext(ctx context.Context) DestinationPtrOutput {
	return o
}

func (o DestinationPtrOutput) Elem() DestinationOutput {
	return o.ApplyT(func(v *Destination) Destination { return *v }).(DestinationOutput)
}

// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
func (o DestinationPtrOutput) ArchiveNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveNameFormat
	}).(pulumi.StringPtrOutput)
}

// Blob container Name
func (o DestinationPtrOutput) BlobContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) *string {
		if v == nil {
			return nil
		}
		return v.BlobContainer
	}).(pulumi.StringPtrOutput)
}

// Name for capture destination
func (o DestinationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource id of the storage account to be used to create the blobs
func (o DestinationPtrOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Destination) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountResourceId
	}).(pulumi.StringPtrOutput)
}

// Capture storage details for capture description
type DestinationResponse struct {
	// Name for capture destination
	Name *string `pulumi:"name"`
	// Properties describing the storage account, blob container and archive name format for capture destination
	Properties *DestinationResponseProperties `pulumi:"properties"`
}

// DestinationResponseInput is an input type that accepts DestinationResponseArgs and DestinationResponseOutput values.
// You can construct a concrete instance of `DestinationResponseInput` via:
//
//          DestinationResponseArgs{...}
type DestinationResponseInput interface {
	pulumi.Input

	ToDestinationResponseOutput() DestinationResponseOutput
	ToDestinationResponseOutputWithContext(context.Context) DestinationResponseOutput
}

// Capture storage details for capture description
type DestinationResponseArgs struct {
	// Name for capture destination
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Properties describing the storage account, blob container and archive name format for capture destination
	Properties DestinationResponsePropertiesPtrInput `pulumi:"properties"`
}

func (DestinationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationResponse)(nil)).Elem()
}

func (i DestinationResponseArgs) ToDestinationResponseOutput() DestinationResponseOutput {
	return i.ToDestinationResponseOutputWithContext(context.Background())
}

func (i DestinationResponseArgs) ToDestinationResponseOutputWithContext(ctx context.Context) DestinationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponseOutput)
}

func (i DestinationResponseArgs) ToDestinationResponsePtrOutput() DestinationResponsePtrOutput {
	return i.ToDestinationResponsePtrOutputWithContext(context.Background())
}

func (i DestinationResponseArgs) ToDestinationResponsePtrOutputWithContext(ctx context.Context) DestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponseOutput).ToDestinationResponsePtrOutputWithContext(ctx)
}

// DestinationResponsePtrInput is an input type that accepts DestinationResponseArgs, DestinationResponsePtr and DestinationResponsePtrOutput values.
// You can construct a concrete instance of `DestinationResponsePtrInput` via:
//
//          DestinationResponseArgs{...}
//
//  or:
//
//          nil
type DestinationResponsePtrInput interface {
	pulumi.Input

	ToDestinationResponsePtrOutput() DestinationResponsePtrOutput
	ToDestinationResponsePtrOutputWithContext(context.Context) DestinationResponsePtrOutput
}

type destinationResponsePtrType DestinationResponseArgs

func DestinationResponsePtr(v *DestinationResponseArgs) DestinationResponsePtrInput {
	return (*destinationResponsePtrType)(v)
}

func (*destinationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationResponse)(nil)).Elem()
}

func (i *destinationResponsePtrType) ToDestinationResponsePtrOutput() DestinationResponsePtrOutput {
	return i.ToDestinationResponsePtrOutputWithContext(context.Background())
}

func (i *destinationResponsePtrType) ToDestinationResponsePtrOutputWithContext(ctx context.Context) DestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponsePtrOutput)
}

// Capture storage details for capture description
type DestinationResponseOutput struct{ *pulumi.OutputState }

func (DestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationResponse)(nil)).Elem()
}

func (o DestinationResponseOutput) ToDestinationResponseOutput() DestinationResponseOutput {
	return o
}

func (o DestinationResponseOutput) ToDestinationResponseOutputWithContext(ctx context.Context) DestinationResponseOutput {
	return o
}

func (o DestinationResponseOutput) ToDestinationResponsePtrOutput() DestinationResponsePtrOutput {
	return o.ToDestinationResponsePtrOutputWithContext(context.Background())
}

func (o DestinationResponseOutput) ToDestinationResponsePtrOutputWithContext(ctx context.Context) DestinationResponsePtrOutput {
	return o.ApplyT(func(v DestinationResponse) *DestinationResponse {
		return &v
	}).(DestinationResponsePtrOutput)
}

// Name for capture destination
func (o DestinationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Properties describing the storage account, blob container and archive name format for capture destination
func (o DestinationResponseOutput) Properties() DestinationResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DestinationResponse) *DestinationResponseProperties { return v.Properties }).(DestinationResponsePropertiesPtrOutput)
}

type DestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (DestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationResponse)(nil)).Elem()
}

func (o DestinationResponsePtrOutput) ToDestinationResponsePtrOutput() DestinationResponsePtrOutput {
	return o
}

func (o DestinationResponsePtrOutput) ToDestinationResponsePtrOutputWithContext(ctx context.Context) DestinationResponsePtrOutput {
	return o
}

func (o DestinationResponsePtrOutput) Elem() DestinationResponseOutput {
	return o.ApplyT(func(v *DestinationResponse) DestinationResponse { return *v }).(DestinationResponseOutput)
}

// Name for capture destination
func (o DestinationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Properties describing the storage account, blob container and archive name format for capture destination
func (o DestinationResponsePtrOutput) Properties() DestinationResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *DestinationResponse) *DestinationResponseProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(DestinationResponsePropertiesPtrOutput)
}

// Properties describing the storage account, blob container and archive name format for capture destination
type DestinationResponseProperties struct {
	// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
	ArchiveNameFormat *string `pulumi:"archiveNameFormat"`
	// Blob container Name
	BlobContainer *string `pulumi:"blobContainer"`
	// Resource id of the storage account to be used to create the blobs
	StorageAccountResourceId *string `pulumi:"storageAccountResourceId"`
}

// DestinationResponsePropertiesInput is an input type that accepts DestinationResponsePropertiesArgs and DestinationResponsePropertiesOutput values.
// You can construct a concrete instance of `DestinationResponsePropertiesInput` via:
//
//          DestinationResponsePropertiesArgs{...}
type DestinationResponsePropertiesInput interface {
	pulumi.Input

	ToDestinationResponsePropertiesOutput() DestinationResponsePropertiesOutput
	ToDestinationResponsePropertiesOutputWithContext(context.Context) DestinationResponsePropertiesOutput
}

// Properties describing the storage account, blob container and archive name format for capture destination
type DestinationResponsePropertiesArgs struct {
	// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
	ArchiveNameFormat pulumi.StringPtrInput `pulumi:"archiveNameFormat"`
	// Blob container Name
	BlobContainer pulumi.StringPtrInput `pulumi:"blobContainer"`
	// Resource id of the storage account to be used to create the blobs
	StorageAccountResourceId pulumi.StringPtrInput `pulumi:"storageAccountResourceId"`
}

func (DestinationResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationResponseProperties)(nil)).Elem()
}

func (i DestinationResponsePropertiesArgs) ToDestinationResponsePropertiesOutput() DestinationResponsePropertiesOutput {
	return i.ToDestinationResponsePropertiesOutputWithContext(context.Background())
}

func (i DestinationResponsePropertiesArgs) ToDestinationResponsePropertiesOutputWithContext(ctx context.Context) DestinationResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponsePropertiesOutput)
}

func (i DestinationResponsePropertiesArgs) ToDestinationResponsePropertiesPtrOutput() DestinationResponsePropertiesPtrOutput {
	return i.ToDestinationResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i DestinationResponsePropertiesArgs) ToDestinationResponsePropertiesPtrOutputWithContext(ctx context.Context) DestinationResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponsePropertiesOutput).ToDestinationResponsePropertiesPtrOutputWithContext(ctx)
}

// DestinationResponsePropertiesPtrInput is an input type that accepts DestinationResponsePropertiesArgs, DestinationResponsePropertiesPtr and DestinationResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `DestinationResponsePropertiesPtrInput` via:
//
//          DestinationResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type DestinationResponsePropertiesPtrInput interface {
	pulumi.Input

	ToDestinationResponsePropertiesPtrOutput() DestinationResponsePropertiesPtrOutput
	ToDestinationResponsePropertiesPtrOutputWithContext(context.Context) DestinationResponsePropertiesPtrOutput
}

type destinationResponsePropertiesPtrType DestinationResponsePropertiesArgs

func DestinationResponsePropertiesPtr(v *DestinationResponsePropertiesArgs) DestinationResponsePropertiesPtrInput {
	return (*destinationResponsePropertiesPtrType)(v)
}

func (*destinationResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationResponseProperties)(nil)).Elem()
}

func (i *destinationResponsePropertiesPtrType) ToDestinationResponsePropertiesPtrOutput() DestinationResponsePropertiesPtrOutput {
	return i.ToDestinationResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *destinationResponsePropertiesPtrType) ToDestinationResponsePropertiesPtrOutputWithContext(ctx context.Context) DestinationResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationResponsePropertiesPtrOutput)
}

// Properties describing the storage account, blob container and archive name format for capture destination
type DestinationResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DestinationResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DestinationResponseProperties)(nil)).Elem()
}

func (o DestinationResponsePropertiesOutput) ToDestinationResponsePropertiesOutput() DestinationResponsePropertiesOutput {
	return o
}

func (o DestinationResponsePropertiesOutput) ToDestinationResponsePropertiesOutputWithContext(ctx context.Context) DestinationResponsePropertiesOutput {
	return o
}

func (o DestinationResponsePropertiesOutput) ToDestinationResponsePropertiesPtrOutput() DestinationResponsePropertiesPtrOutput {
	return o.ToDestinationResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o DestinationResponsePropertiesOutput) ToDestinationResponsePropertiesPtrOutputWithContext(ctx context.Context) DestinationResponsePropertiesPtrOutput {
	return o.ApplyT(func(v DestinationResponseProperties) *DestinationResponseProperties {
		return &v
	}).(DestinationResponsePropertiesPtrOutput)
}

// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
func (o DestinationResponsePropertiesOutput) ArchiveNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationResponseProperties) *string { return v.ArchiveNameFormat }).(pulumi.StringPtrOutput)
}

// Blob container Name
func (o DestinationResponsePropertiesOutput) BlobContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationResponseProperties) *string { return v.BlobContainer }).(pulumi.StringPtrOutput)
}

// Resource id of the storage account to be used to create the blobs
func (o DestinationResponsePropertiesOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DestinationResponseProperties) *string { return v.StorageAccountResourceId }).(pulumi.StringPtrOutput)
}

type DestinationResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DestinationResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationResponseProperties)(nil)).Elem()
}

func (o DestinationResponsePropertiesPtrOutput) ToDestinationResponsePropertiesPtrOutput() DestinationResponsePropertiesPtrOutput {
	return o
}

func (o DestinationResponsePropertiesPtrOutput) ToDestinationResponsePropertiesPtrOutputWithContext(ctx context.Context) DestinationResponsePropertiesPtrOutput {
	return o
}

func (o DestinationResponsePropertiesPtrOutput) Elem() DestinationResponsePropertiesOutput {
	return o.ApplyT(func(v *DestinationResponseProperties) DestinationResponseProperties { return *v }).(DestinationResponsePropertiesOutput)
}

// Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
func (o DestinationResponsePropertiesPtrOutput) ArchiveNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ArchiveNameFormat
	}).(pulumi.StringPtrOutput)
}

// Blob container Name
func (o DestinationResponsePropertiesPtrOutput) BlobContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.BlobContainer
	}).(pulumi.StringPtrOutput)
}

// Resource id of the storage account to be used to create the blobs
func (o DestinationResponsePropertiesPtrOutput) StorageAccountResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DestinationResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountResourceId
	}).(pulumi.StringPtrOutput)
}

// Single item in List or Get Alias(Disaster Recovery configuration) operation
type DisasterRecoveryConfigType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
	Properties ArmDisasterRecoveryResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// DisasterRecoveryConfigTypeInput is an input type that accepts DisasterRecoveryConfigTypeArgs and DisasterRecoveryConfigTypeOutput values.
// You can construct a concrete instance of `DisasterRecoveryConfigTypeInput` via:
//
//          DisasterRecoveryConfigTypeArgs{...}
type DisasterRecoveryConfigTypeInput interface {
	pulumi.Input

	ToDisasterRecoveryConfigTypeOutput() DisasterRecoveryConfigTypeOutput
	ToDisasterRecoveryConfigTypeOutputWithContext(context.Context) DisasterRecoveryConfigTypeOutput
}

// Single item in List or Get Alias(Disaster Recovery configuration) operation
type DisasterRecoveryConfigTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
	Properties ArmDisasterRecoveryResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DisasterRecoveryConfigTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DisasterRecoveryConfigType)(nil)).Elem()
}

func (i DisasterRecoveryConfigTypeArgs) ToDisasterRecoveryConfigTypeOutput() DisasterRecoveryConfigTypeOutput {
	return i.ToDisasterRecoveryConfigTypeOutputWithContext(context.Background())
}

func (i DisasterRecoveryConfigTypeArgs) ToDisasterRecoveryConfigTypeOutputWithContext(ctx context.Context) DisasterRecoveryConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DisasterRecoveryConfigTypeOutput)
}

// Single item in List or Get Alias(Disaster Recovery configuration) operation
type DisasterRecoveryConfigTypeOutput struct{ *pulumi.OutputState }

func (DisasterRecoveryConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DisasterRecoveryConfigType)(nil)).Elem()
}

func (o DisasterRecoveryConfigTypeOutput) ToDisasterRecoveryConfigTypeOutput() DisasterRecoveryConfigTypeOutput {
	return o
}

func (o DisasterRecoveryConfigTypeOutput) ToDisasterRecoveryConfigTypeOutputWithContext(ctx context.Context) DisasterRecoveryConfigTypeOutput {
	return o
}

// Resource name.
func (o DisasterRecoveryConfigTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DisasterRecoveryConfigType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties required to the Create Or Update Alias(Disaster Recovery configurations)
func (o DisasterRecoveryConfigTypeOutput) Properties() ArmDisasterRecoveryResponsePropertiesOutput {
	return o.ApplyT(func(v DisasterRecoveryConfigType) ArmDisasterRecoveryResponseProperties { return v.Properties }).(ArmDisasterRecoveryResponsePropertiesOutput)
}

// Resource type.
func (o DisasterRecoveryConfigTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DisasterRecoveryConfigType) string { return v.Type }).(pulumi.StringOutput)
}

// Namespace properties supplied for create namespace operation.
type EHNamespaceResponseProperties struct {
	// The time the Namespace was created.
	CreatedAt string `pulumi:"createdAt"`
	// Value that indicates whether AutoInflate is enabled for eventhub namespace.
	IsAutoInflateEnabled *bool `pulumi:"isAutoInflateEnabled"`
	// Value that indicates whether Kafka is enabled for eventhub namespace.
	KafkaEnabled *bool `pulumi:"kafkaEnabled"`
	// Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
	MaximumThroughputUnits *int `pulumi:"maximumThroughputUnits"`
	// Identifier for Azure Insights metrics.
	MetricId string `pulumi:"metricId"`
	// Provisioning state of the Namespace.
	ProvisioningState string `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint string `pulumi:"serviceBusEndpoint"`
	// The time the Namespace was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// EHNamespaceResponsePropertiesInput is an input type that accepts EHNamespaceResponsePropertiesArgs and EHNamespaceResponsePropertiesOutput values.
// You can construct a concrete instance of `EHNamespaceResponsePropertiesInput` via:
//
//          EHNamespaceResponsePropertiesArgs{...}
type EHNamespaceResponsePropertiesInput interface {
	pulumi.Input

	ToEHNamespaceResponsePropertiesOutput() EHNamespaceResponsePropertiesOutput
	ToEHNamespaceResponsePropertiesOutputWithContext(context.Context) EHNamespaceResponsePropertiesOutput
}

// Namespace properties supplied for create namespace operation.
type EHNamespaceResponsePropertiesArgs struct {
	// The time the Namespace was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Value that indicates whether AutoInflate is enabled for eventhub namespace.
	IsAutoInflateEnabled pulumi.BoolPtrInput `pulumi:"isAutoInflateEnabled"`
	// Value that indicates whether Kafka is enabled for eventhub namespace.
	KafkaEnabled pulumi.BoolPtrInput `pulumi:"kafkaEnabled"`
	// Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
	MaximumThroughputUnits pulumi.IntPtrInput `pulumi:"maximumThroughputUnits"`
	// Identifier for Azure Insights metrics.
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint pulumi.StringInput `pulumi:"serviceBusEndpoint"`
	// The time the Namespace was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (EHNamespaceResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EHNamespaceResponseProperties)(nil)).Elem()
}

func (i EHNamespaceResponsePropertiesArgs) ToEHNamespaceResponsePropertiesOutput() EHNamespaceResponsePropertiesOutput {
	return i.ToEHNamespaceResponsePropertiesOutputWithContext(context.Background())
}

func (i EHNamespaceResponsePropertiesArgs) ToEHNamespaceResponsePropertiesOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EHNamespaceResponsePropertiesOutput)
}

func (i EHNamespaceResponsePropertiesArgs) ToEHNamespaceResponsePropertiesPtrOutput() EHNamespaceResponsePropertiesPtrOutput {
	return i.ToEHNamespaceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i EHNamespaceResponsePropertiesArgs) ToEHNamespaceResponsePropertiesPtrOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EHNamespaceResponsePropertiesOutput).ToEHNamespaceResponsePropertiesPtrOutputWithContext(ctx)
}

// EHNamespaceResponsePropertiesPtrInput is an input type that accepts EHNamespaceResponsePropertiesArgs, EHNamespaceResponsePropertiesPtr and EHNamespaceResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `EHNamespaceResponsePropertiesPtrInput` via:
//
//          EHNamespaceResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type EHNamespaceResponsePropertiesPtrInput interface {
	pulumi.Input

	ToEHNamespaceResponsePropertiesPtrOutput() EHNamespaceResponsePropertiesPtrOutput
	ToEHNamespaceResponsePropertiesPtrOutputWithContext(context.Context) EHNamespaceResponsePropertiesPtrOutput
}

type ehnamespaceResponsePropertiesPtrType EHNamespaceResponsePropertiesArgs

func EHNamespaceResponsePropertiesPtr(v *EHNamespaceResponsePropertiesArgs) EHNamespaceResponsePropertiesPtrInput {
	return (*ehnamespaceResponsePropertiesPtrType)(v)
}

func (*ehnamespaceResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EHNamespaceResponseProperties)(nil)).Elem()
}

func (i *ehnamespaceResponsePropertiesPtrType) ToEHNamespaceResponsePropertiesPtrOutput() EHNamespaceResponsePropertiesPtrOutput {
	return i.ToEHNamespaceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *ehnamespaceResponsePropertiesPtrType) ToEHNamespaceResponsePropertiesPtrOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EHNamespaceResponsePropertiesPtrOutput)
}

// Namespace properties supplied for create namespace operation.
type EHNamespaceResponsePropertiesOutput struct{ *pulumi.OutputState }

func (EHNamespaceResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EHNamespaceResponseProperties)(nil)).Elem()
}

func (o EHNamespaceResponsePropertiesOutput) ToEHNamespaceResponsePropertiesOutput() EHNamespaceResponsePropertiesOutput {
	return o
}

func (o EHNamespaceResponsePropertiesOutput) ToEHNamespaceResponsePropertiesOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesOutput {
	return o
}

func (o EHNamespaceResponsePropertiesOutput) ToEHNamespaceResponsePropertiesPtrOutput() EHNamespaceResponsePropertiesPtrOutput {
	return o.ToEHNamespaceResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o EHNamespaceResponsePropertiesOutput) ToEHNamespaceResponsePropertiesPtrOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesPtrOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) *EHNamespaceResponseProperties {
		return &v
	}).(EHNamespaceResponsePropertiesPtrOutput)
}

// The time the Namespace was created.
func (o EHNamespaceResponsePropertiesOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Value that indicates whether AutoInflate is enabled for eventhub namespace.
func (o EHNamespaceResponsePropertiesOutput) IsAutoInflateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) *bool { return v.IsAutoInflateEnabled }).(pulumi.BoolPtrOutput)
}

// Value that indicates whether Kafka is enabled for eventhub namespace.
func (o EHNamespaceResponsePropertiesOutput) KafkaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) *bool { return v.KafkaEnabled }).(pulumi.BoolPtrOutput)
}

// Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
func (o EHNamespaceResponsePropertiesOutput) MaximumThroughputUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) *int { return v.MaximumThroughputUnits }).(pulumi.IntPtrOutput)
}

// Identifier for Azure Insights metrics.
func (o EHNamespaceResponsePropertiesOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) string { return v.MetricId }).(pulumi.StringOutput)
}

// Provisioning state of the Namespace.
func (o EHNamespaceResponsePropertiesOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o EHNamespaceResponsePropertiesOutput) ServiceBusEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) string { return v.ServiceBusEndpoint }).(pulumi.StringOutput)
}

// The time the Namespace was updated.
func (o EHNamespaceResponsePropertiesOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EHNamespaceResponseProperties) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EHNamespaceResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (EHNamespaceResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EHNamespaceResponseProperties)(nil)).Elem()
}

func (o EHNamespaceResponsePropertiesPtrOutput) ToEHNamespaceResponsePropertiesPtrOutput() EHNamespaceResponsePropertiesPtrOutput {
	return o
}

func (o EHNamespaceResponsePropertiesPtrOutput) ToEHNamespaceResponsePropertiesPtrOutputWithContext(ctx context.Context) EHNamespaceResponsePropertiesPtrOutput {
	return o
}

func (o EHNamespaceResponsePropertiesPtrOutput) Elem() EHNamespaceResponsePropertiesOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) EHNamespaceResponseProperties { return *v }).(EHNamespaceResponsePropertiesOutput)
}

// The time the Namespace was created.
func (o EHNamespaceResponsePropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Value that indicates whether AutoInflate is enabled for eventhub namespace.
func (o EHNamespaceResponsePropertiesPtrOutput) IsAutoInflateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoInflateEnabled
	}).(pulumi.BoolPtrOutput)
}

// Value that indicates whether Kafka is enabled for eventhub namespace.
func (o EHNamespaceResponsePropertiesPtrOutput) KafkaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *bool {
		if v == nil {
			return nil
		}
		return v.KafkaEnabled
	}).(pulumi.BoolPtrOutput)
}

// Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)
func (o EHNamespaceResponsePropertiesPtrOutput) MaximumThroughputUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaximumThroughputUnits
	}).(pulumi.IntPtrOutput)
}

// Identifier for Azure Insights metrics.
func (o EHNamespaceResponsePropertiesPtrOutput) MetricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.MetricId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the Namespace.
func (o EHNamespaceResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o EHNamespaceResponsePropertiesPtrOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceBusEndpoint
	}).(pulumi.StringPtrOutput)
}

// The time the Namespace was updated.
func (o EHNamespaceResponsePropertiesPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EHNamespaceResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Single item in List or Get Event Hub operation
type EventHubType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties supplied to the Create Or Update Event Hub operation.
	Properties EventhubResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// EventHubTypeInput is an input type that accepts EventHubTypeArgs and EventHubTypeOutput values.
// You can construct a concrete instance of `EventHubTypeInput` via:
//
//          EventHubTypeArgs{...}
type EventHubTypeInput interface {
	pulumi.Input

	ToEventHubTypeOutput() EventHubTypeOutput
	ToEventHubTypeOutputWithContext(context.Context) EventHubTypeOutput
}

// Single item in List or Get Event Hub operation
type EventHubTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to the Create Or Update Event Hub operation.
	Properties EventhubResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (i EventHubTypeArgs) ToEventHubTypeOutput() EventHubTypeOutput {
	return i.ToEventHubTypeOutputWithContext(context.Background())
}

func (i EventHubTypeArgs) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubTypeOutput)
}

// Single item in List or Get Event Hub operation
type EventHubTypeOutput struct{ *pulumi.OutputState }

func (EventHubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (o EventHubTypeOutput) ToEventHubTypeOutput() EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return o
}

// Resource name.
func (o EventHubTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
func (o EventHubTypeOutput) Properties() EventhubResponsePropertiesOutput {
	return o.ApplyT(func(v EventHubType) EventhubResponseProperties { return v.Properties }).(EventhubResponsePropertiesOutput)
}

// Resource type.
func (o EventHubTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubType) string { return v.Type }).(pulumi.StringOutput)
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties supplied to create or update AuthorizationRule
	Properties AuthorizationRuleResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// EventHubAuthorizationRuleTypeInput is an input type that accepts EventHubAuthorizationRuleTypeArgs and EventHubAuthorizationRuleTypeOutput values.
// You can construct a concrete instance of `EventHubAuthorizationRuleTypeInput` via:
//
//          EventHubAuthorizationRuleTypeArgs{...}
type EventHubAuthorizationRuleTypeInput interface {
	pulumi.Input

	ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput
	ToEventHubAuthorizationRuleTypeOutputWithContext(context.Context) EventHubAuthorizationRuleTypeOutput
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to create or update AuthorizationRule
	Properties AuthorizationRuleResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubAuthorizationRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubAuthorizationRuleType)(nil)).Elem()
}

func (i EventHubAuthorizationRuleTypeArgs) ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput {
	return i.ToEventHubAuthorizationRuleTypeOutputWithContext(context.Background())
}

func (i EventHubAuthorizationRuleTypeArgs) ToEventHubAuthorizationRuleTypeOutputWithContext(ctx context.Context) EventHubAuthorizationRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubAuthorizationRuleTypeOutput)
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleTypeOutput struct{ *pulumi.OutputState }

func (EventHubAuthorizationRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubAuthorizationRuleType)(nil)).Elem()
}

func (o EventHubAuthorizationRuleTypeOutput) ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput {
	return o
}

func (o EventHubAuthorizationRuleTypeOutput) ToEventHubAuthorizationRuleTypeOutputWithContext(ctx context.Context) EventHubAuthorizationRuleTypeOutput {
	return o
}

// Resource name.
func (o EventHubAuthorizationRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to create or update AuthorizationRule
func (o EventHubAuthorizationRuleTypeOutput) Properties() AuthorizationRuleResponsePropertiesOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) AuthorizationRuleResponseProperties { return v.Properties }).(AuthorizationRuleResponsePropertiesOutput)
}

// Resource type.
func (o EventHubAuthorizationRuleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventhubResponseProperties struct {
	// Properties of capture description
	CaptureDescription *CaptureDescriptionResponse `pulumi:"captureDescription"`
	// Exact time the Event Hub was created.
	CreatedAt string `pulumi:"createdAt"`
	// Number of days to retain the events for this Event Hub, value should be 1 to 7 days
	MessageRetentionInDays *int `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
	PartitionCount *int `pulumi:"partitionCount"`
	// Current number of shards on the Event Hub.
	PartitionIds []string `pulumi:"partitionIds"`
	// Enumerates the possible values for the status of the Event Hub.
	Status *string `pulumi:"status"`
	// The exact time the message was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// EventhubResponsePropertiesInput is an input type that accepts EventhubResponsePropertiesArgs and EventhubResponsePropertiesOutput values.
// You can construct a concrete instance of `EventhubResponsePropertiesInput` via:
//
//          EventhubResponsePropertiesArgs{...}
type EventhubResponsePropertiesInput interface {
	pulumi.Input

	ToEventhubResponsePropertiesOutput() EventhubResponsePropertiesOutput
	ToEventhubResponsePropertiesOutputWithContext(context.Context) EventhubResponsePropertiesOutput
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventhubResponsePropertiesArgs struct {
	// Properties of capture description
	CaptureDescription CaptureDescriptionResponsePtrInput `pulumi:"captureDescription"`
	// Exact time the Event Hub was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Number of days to retain the events for this Event Hub, value should be 1 to 7 days
	MessageRetentionInDays pulumi.IntPtrInput `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// Current number of shards on the Event Hub.
	PartitionIds pulumi.StringArrayInput `pulumi:"partitionIds"`
	// Enumerates the possible values for the status of the Event Hub.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The exact time the message was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (EventhubResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventhubResponseProperties)(nil)).Elem()
}

func (i EventhubResponsePropertiesArgs) ToEventhubResponsePropertiesOutput() EventhubResponsePropertiesOutput {
	return i.ToEventhubResponsePropertiesOutputWithContext(context.Background())
}

func (i EventhubResponsePropertiesArgs) ToEventhubResponsePropertiesOutputWithContext(ctx context.Context) EventhubResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubResponsePropertiesOutput)
}

func (i EventhubResponsePropertiesArgs) ToEventhubResponsePropertiesPtrOutput() EventhubResponsePropertiesPtrOutput {
	return i.ToEventhubResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i EventhubResponsePropertiesArgs) ToEventhubResponsePropertiesPtrOutputWithContext(ctx context.Context) EventhubResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubResponsePropertiesOutput).ToEventhubResponsePropertiesPtrOutputWithContext(ctx)
}

// EventhubResponsePropertiesPtrInput is an input type that accepts EventhubResponsePropertiesArgs, EventhubResponsePropertiesPtr and EventhubResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `EventhubResponsePropertiesPtrInput` via:
//
//          EventhubResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type EventhubResponsePropertiesPtrInput interface {
	pulumi.Input

	ToEventhubResponsePropertiesPtrOutput() EventhubResponsePropertiesPtrOutput
	ToEventhubResponsePropertiesPtrOutputWithContext(context.Context) EventhubResponsePropertiesPtrOutput
}

type eventhubResponsePropertiesPtrType EventhubResponsePropertiesArgs

func EventhubResponsePropertiesPtr(v *EventhubResponsePropertiesArgs) EventhubResponsePropertiesPtrInput {
	return (*eventhubResponsePropertiesPtrType)(v)
}

func (*eventhubResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventhubResponseProperties)(nil)).Elem()
}

func (i *eventhubResponsePropertiesPtrType) ToEventhubResponsePropertiesPtrOutput() EventhubResponsePropertiesPtrOutput {
	return i.ToEventhubResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *eventhubResponsePropertiesPtrType) ToEventhubResponsePropertiesPtrOutputWithContext(ctx context.Context) EventhubResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubResponsePropertiesPtrOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventhubResponsePropertiesOutput struct{ *pulumi.OutputState }

func (EventhubResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventhubResponseProperties)(nil)).Elem()
}

func (o EventhubResponsePropertiesOutput) ToEventhubResponsePropertiesOutput() EventhubResponsePropertiesOutput {
	return o
}

func (o EventhubResponsePropertiesOutput) ToEventhubResponsePropertiesOutputWithContext(ctx context.Context) EventhubResponsePropertiesOutput {
	return o
}

func (o EventhubResponsePropertiesOutput) ToEventhubResponsePropertiesPtrOutput() EventhubResponsePropertiesPtrOutput {
	return o.ToEventhubResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o EventhubResponsePropertiesOutput) ToEventhubResponsePropertiesPtrOutputWithContext(ctx context.Context) EventhubResponsePropertiesPtrOutput {
	return o.ApplyT(func(v EventhubResponseProperties) *EventhubResponseProperties {
		return &v
	}).(EventhubResponsePropertiesPtrOutput)
}

// Properties of capture description
func (o EventhubResponsePropertiesOutput) CaptureDescription() CaptureDescriptionResponsePtrOutput {
	return o.ApplyT(func(v EventhubResponseProperties) *CaptureDescriptionResponse { return v.CaptureDescription }).(CaptureDescriptionResponsePtrOutput)
}

// Exact time the Event Hub was created.
func (o EventhubResponsePropertiesOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EventhubResponseProperties) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Number of days to retain the events for this Event Hub, value should be 1 to 7 days
func (o EventhubResponsePropertiesOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventhubResponseProperties) *int { return v.MessageRetentionInDays }).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
func (o EventhubResponsePropertiesOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventhubResponseProperties) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// Current number of shards on the Event Hub.
func (o EventhubResponsePropertiesOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventhubResponseProperties) []string { return v.PartitionIds }).(pulumi.StringArrayOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventhubResponsePropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventhubResponseProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o EventhubResponsePropertiesOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EventhubResponseProperties) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EventhubResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (EventhubResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventhubResponseProperties)(nil)).Elem()
}

func (o EventhubResponsePropertiesPtrOutput) ToEventhubResponsePropertiesPtrOutput() EventhubResponsePropertiesPtrOutput {
	return o
}

func (o EventhubResponsePropertiesPtrOutput) ToEventhubResponsePropertiesPtrOutputWithContext(ctx context.Context) EventhubResponsePropertiesPtrOutput {
	return o
}

func (o EventhubResponsePropertiesPtrOutput) Elem() EventhubResponsePropertiesOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) EventhubResponseProperties { return *v }).(EventhubResponsePropertiesOutput)
}

// Properties of capture description
func (o EventhubResponsePropertiesPtrOutput) CaptureDescription() CaptureDescriptionResponsePtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *CaptureDescriptionResponse {
		if v == nil {
			return nil
		}
		return v.CaptureDescription
	}).(CaptureDescriptionResponsePtrOutput)
}

// Exact time the Event Hub was created.
func (o EventhubResponsePropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Number of days to retain the events for this Event Hub, value should be 1 to 7 days
func (o EventhubResponsePropertiesPtrOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.MessageRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
func (o EventhubResponsePropertiesPtrOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *int {
		if v == nil {
			return nil
		}
		return v.PartitionCount
	}).(pulumi.IntPtrOutput)
}

// Current number of shards on the Event Hub.
func (o EventhubResponsePropertiesPtrOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) []string {
		if v == nil {
			return nil
		}
		return v.PartitionIds
	}).(pulumi.StringArrayOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventhubResponsePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o EventhubResponsePropertiesPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventhubResponseProperties) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Single Namespace item in List or Get Operation
type NamespaceType struct {
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Namespace properties supplied for create namespace operation.
	Properties EHNamespaceResponseProperties `pulumi:"properties"`
	// Properties of sku resource
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NamespaceTypeInput is an input type that accepts NamespaceTypeArgs and NamespaceTypeOutput values.
// You can construct a concrete instance of `NamespaceTypeInput` via:
//
//          NamespaceTypeArgs{...}
type NamespaceTypeInput interface {
	pulumi.Input

	ToNamespaceTypeOutput() NamespaceTypeOutput
	ToNamespaceTypeOutputWithContext(context.Context) NamespaceTypeOutput
}

// Single Namespace item in List or Get Operation
type NamespaceTypeArgs struct {
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace properties supplied for create namespace operation.
	Properties EHNamespaceResponsePropertiesInput `pulumi:"properties"`
	// Properties of sku resource
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceType)(nil)).Elem()
}

func (i NamespaceTypeArgs) ToNamespaceTypeOutput() NamespaceTypeOutput {
	return i.ToNamespaceTypeOutputWithContext(context.Background())
}

func (i NamespaceTypeArgs) ToNamespaceTypeOutputWithContext(ctx context.Context) NamespaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceTypeOutput)
}

// Single Namespace item in List or Get Operation
type NamespaceTypeOutput struct{ *pulumi.OutputState }

func (NamespaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceType)(nil)).Elem()
}

func (o NamespaceTypeOutput) ToNamespaceTypeOutput() NamespaceTypeOutput {
	return o
}

func (o NamespaceTypeOutput) ToNamespaceTypeOutputWithContext(ctx context.Context) NamespaceTypeOutput {
	return o
}

// Resource location.
func (o NamespaceTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NamespaceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceType) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace properties supplied for create namespace operation.
func (o NamespaceTypeOutput) Properties() EHNamespaceResponsePropertiesOutput {
	return o.ApplyT(func(v NamespaceType) EHNamespaceResponseProperties { return v.Properties }).(EHNamespaceResponsePropertiesOutput)
}

// Properties of sku resource
func (o NamespaceTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v NamespaceType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags.
func (o NamespaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NamespaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NamespaceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceType) string { return v.Type }).(pulumi.StringOutput)
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleType struct {
	// Resource name.
	Name string `pulumi:"name"`
	// Properties supplied to create or update AuthorizationRule
	Properties AuthorizationRuleResponseProperties `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NamespaceAuthorizationRuleTypeInput is an input type that accepts NamespaceAuthorizationRuleTypeArgs and NamespaceAuthorizationRuleTypeOutput values.
// You can construct a concrete instance of `NamespaceAuthorizationRuleTypeInput` via:
//
//          NamespaceAuthorizationRuleTypeArgs{...}
type NamespaceAuthorizationRuleTypeInput interface {
	pulumi.Input

	ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput
	ToNamespaceAuthorizationRuleTypeOutputWithContext(context.Context) NamespaceAuthorizationRuleTypeOutput
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleTypeArgs struct {
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to create or update AuthorizationRule
	Properties AuthorizationRuleResponsePropertiesInput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceAuthorizationRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceAuthorizationRuleType)(nil)).Elem()
}

func (i NamespaceAuthorizationRuleTypeArgs) ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput {
	return i.ToNamespaceAuthorizationRuleTypeOutputWithContext(context.Background())
}

func (i NamespaceAuthorizationRuleTypeArgs) ToNamespaceAuthorizationRuleTypeOutputWithContext(ctx context.Context) NamespaceAuthorizationRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceAuthorizationRuleTypeOutput)
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleTypeOutput struct{ *pulumi.OutputState }

func (NamespaceAuthorizationRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceAuthorizationRuleType)(nil)).Elem()
}

func (o NamespaceAuthorizationRuleTypeOutput) ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput {
	return o
}

func (o NamespaceAuthorizationRuleTypeOutput) ToNamespaceAuthorizationRuleTypeOutputWithContext(ctx context.Context) NamespaceAuthorizationRuleTypeOutput {
	return o
}

// Resource name.
func (o NamespaceAuthorizationRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to create or update AuthorizationRule
func (o NamespaceAuthorizationRuleTypeOutput) Properties() AuthorizationRuleResponsePropertiesOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) AuthorizationRuleResponseProperties { return v.Properties }).(AuthorizationRuleResponsePropertiesOutput)
}

// Resource type.
func (o NamespaceAuthorizationRuleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) string { return v.Type }).(pulumi.StringOutput)
}

// SKU parameters supplied to the create namespace operation
type Sku struct {
	// The Event Hubs throughput units, value should be 0 to 20 throughput units.
	Capacity *int `pulumi:"capacity"`
	// Name of this SKU.
	Name string `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// SKU parameters supplied to the create namespace operation
type SkuArgs struct {
	// The Event Hubs throughput units, value should be 0 to 20 throughput units.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// SKU parameters supplied to the create namespace operation
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The Event Hubs throughput units, value should be 0 to 20 throughput units.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The billing tier of this particular SKU.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The Event Hubs throughput units, value should be 0 to 20 throughput units.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU parameters supplied to the create namespace operation
type SkuResponse struct {
	// The Event Hubs throughput units, value should be 0 to 20 throughput units.
	Capacity *int `pulumi:"capacity"`
	// Name of this SKU.
	Name string `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier *string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// SKU parameters supplied to the create namespace operation
type SkuResponseArgs struct {
	// The Event Hubs throughput units, value should be 0 to 20 throughput units.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of this SKU.
	Name pulumi.StringInput `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// SKU parameters supplied to the create namespace operation
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The Event Hubs throughput units, value should be 0 to 20 throughput units.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The billing tier of this particular SKU.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The Event Hubs throughput units, value should be 0 to 20 throughput units.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ArmDisasterRecoveryResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ArmDisasterRecoveryResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleResponsePropertiesOutput{})
	pulumi.RegisterOutputType(AuthorizationRuleResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CaptureDescriptionOutput{})
	pulumi.RegisterOutputType(CaptureDescriptionPtrOutput{})
	pulumi.RegisterOutputType(CaptureDescriptionResponseOutput{})
	pulumi.RegisterOutputType(CaptureDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsumerGroupTypeOutput{})
	pulumi.RegisterOutputType(ConsumerGroupResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ConsumerGroupResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DestinationOutput{})
	pulumi.RegisterOutputType(DestinationPtrOutput{})
	pulumi.RegisterOutputType(DestinationResponseOutput{})
	pulumi.RegisterOutputType(DestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(DestinationResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DestinationResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DisasterRecoveryConfigTypeOutput{})
	pulumi.RegisterOutputType(EHNamespaceResponsePropertiesOutput{})
	pulumi.RegisterOutputType(EHNamespaceResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(EventHubTypeOutput{})
	pulumi.RegisterOutputType(EventHubAuthorizationRuleTypeOutput{})
	pulumi.RegisterOutputType(EventhubResponsePropertiesOutput{})
	pulumi.RegisterOutputType(EventhubResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(NamespaceTypeOutput{})
	pulumi.RegisterOutputType(NamespaceAuthorizationRuleTypeOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
