// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Single item in List or Get Consumer group operation
type ConsumerGroupType struct {
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties supplied to the Create Or Update Consumer Group operation.
	Properties ConsumerGroupPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// ConsumerGroupTypeInput is an input type that accepts ConsumerGroupTypeArgs and ConsumerGroupTypeOutput values.
// You can construct a concrete instance of `ConsumerGroupTypeInput` via:
//
//          ConsumerGroupTypeArgs{...}
type ConsumerGroupTypeInput interface {
	pulumi.Input

	ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput
	ToConsumerGroupTypeOutputWithContext(context.Context) ConsumerGroupTypeOutput
}

// Single item in List or Get Consumer group operation
type ConsumerGroupTypeArgs struct {
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to the Create Or Update Consumer Group operation.
	Properties ConsumerGroupPropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConsumerGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupType)(nil)).Elem()
}

func (i ConsumerGroupTypeArgs) ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput {
	return i.ToConsumerGroupTypeOutputWithContext(context.Background())
}

func (i ConsumerGroupTypeArgs) ToConsumerGroupTypeOutputWithContext(ctx context.Context) ConsumerGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupTypeOutput)
}

// Single item in List or Get Consumer group operation
type ConsumerGroupTypeOutput struct{ *pulumi.OutputState }

func (ConsumerGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupType)(nil)).Elem()
}

func (o ConsumerGroupTypeOutput) ToConsumerGroupTypeOutput() ConsumerGroupTypeOutput {
	return o
}

func (o ConsumerGroupTypeOutput) ToConsumerGroupTypeOutputWithContext(ctx context.Context) ConsumerGroupTypeOutput {
	return o
}

// Resource location
func (o ConsumerGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsumerGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o ConsumerGroupTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Consumer Group operation.
func (o ConsumerGroupTypeOutput) Properties() ConsumerGroupPropertiesResponseOutput {
	return o.ApplyT(func(v ConsumerGroupType) ConsumerGroupPropertiesResponse { return v.Properties }).(ConsumerGroupPropertiesResponseOutput)
}

// Resource type
func (o ConsumerGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupProperties struct {
	// The user metadata.
	UserMetadata *string `pulumi:"userMetadata"`
}

// ConsumerGroupPropertiesInput is an input type that accepts ConsumerGroupPropertiesArgs and ConsumerGroupPropertiesOutput values.
// You can construct a concrete instance of `ConsumerGroupPropertiesInput` via:
//
//          ConsumerGroupPropertiesArgs{...}
type ConsumerGroupPropertiesInput interface {
	pulumi.Input

	ToConsumerGroupPropertiesOutput() ConsumerGroupPropertiesOutput
	ToConsumerGroupPropertiesOutputWithContext(context.Context) ConsumerGroupPropertiesOutput
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupPropertiesArgs struct {
	// The user metadata.
	UserMetadata pulumi.StringPtrInput `pulumi:"userMetadata"`
}

func (ConsumerGroupPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupProperties)(nil)).Elem()
}

func (i ConsumerGroupPropertiesArgs) ToConsumerGroupPropertiesOutput() ConsumerGroupPropertiesOutput {
	return i.ToConsumerGroupPropertiesOutputWithContext(context.Background())
}

func (i ConsumerGroupPropertiesArgs) ToConsumerGroupPropertiesOutputWithContext(ctx context.Context) ConsumerGroupPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesOutput)
}

func (i ConsumerGroupPropertiesArgs) ToConsumerGroupPropertiesPtrOutput() ConsumerGroupPropertiesPtrOutput {
	return i.ToConsumerGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i ConsumerGroupPropertiesArgs) ToConsumerGroupPropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesOutput).ToConsumerGroupPropertiesPtrOutputWithContext(ctx)
}

// ConsumerGroupPropertiesPtrInput is an input type that accepts ConsumerGroupPropertiesArgs, ConsumerGroupPropertiesPtr and ConsumerGroupPropertiesPtrOutput values.
// You can construct a concrete instance of `ConsumerGroupPropertiesPtrInput` via:
//
//          ConsumerGroupPropertiesArgs{...}
//
//  or:
//
//          nil
type ConsumerGroupPropertiesPtrInput interface {
	pulumi.Input

	ToConsumerGroupPropertiesPtrOutput() ConsumerGroupPropertiesPtrOutput
	ToConsumerGroupPropertiesPtrOutputWithContext(context.Context) ConsumerGroupPropertiesPtrOutput
}

type consumerGroupPropertiesPtrType ConsumerGroupPropertiesArgs

func ConsumerGroupPropertiesPtr(v *ConsumerGroupPropertiesArgs) ConsumerGroupPropertiesPtrInput {
	return (*consumerGroupPropertiesPtrType)(v)
}

func (*consumerGroupPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupProperties)(nil)).Elem()
}

func (i *consumerGroupPropertiesPtrType) ToConsumerGroupPropertiesPtrOutput() ConsumerGroupPropertiesPtrOutput {
	return i.ToConsumerGroupPropertiesPtrOutputWithContext(context.Background())
}

func (i *consumerGroupPropertiesPtrType) ToConsumerGroupPropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesPtrOutput)
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupPropertiesOutput struct{ *pulumi.OutputState }

func (ConsumerGroupPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupProperties)(nil)).Elem()
}

func (o ConsumerGroupPropertiesOutput) ToConsumerGroupPropertiesOutput() ConsumerGroupPropertiesOutput {
	return o
}

func (o ConsumerGroupPropertiesOutput) ToConsumerGroupPropertiesOutputWithContext(ctx context.Context) ConsumerGroupPropertiesOutput {
	return o
}

func (o ConsumerGroupPropertiesOutput) ToConsumerGroupPropertiesPtrOutput() ConsumerGroupPropertiesPtrOutput {
	return o.ToConsumerGroupPropertiesPtrOutputWithContext(context.Background())
}

func (o ConsumerGroupPropertiesOutput) ToConsumerGroupPropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesPtrOutput {
	return o.ApplyT(func(v ConsumerGroupProperties) *ConsumerGroupProperties {
		return &v
	}).(ConsumerGroupPropertiesPtrOutput)
}

// The user metadata.
func (o ConsumerGroupPropertiesOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsumerGroupProperties) *string { return v.UserMetadata }).(pulumi.StringPtrOutput)
}

type ConsumerGroupPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConsumerGroupPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupProperties)(nil)).Elem()
}

func (o ConsumerGroupPropertiesPtrOutput) ToConsumerGroupPropertiesPtrOutput() ConsumerGroupPropertiesPtrOutput {
	return o
}

func (o ConsumerGroupPropertiesPtrOutput) ToConsumerGroupPropertiesPtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesPtrOutput {
	return o
}

func (o ConsumerGroupPropertiesPtrOutput) Elem() ConsumerGroupPropertiesOutput {
	return o.ApplyT(func(v *ConsumerGroupProperties) ConsumerGroupProperties { return *v }).(ConsumerGroupPropertiesOutput)
}

// The user metadata.
func (o ConsumerGroupPropertiesPtrOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupProperties) *string {
		if v == nil {
			return nil
		}
		return v.UserMetadata
	}).(pulumi.StringPtrOutput)
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupPropertiesResponse struct {
	// Exact time the message was created.
	CreatedAt string `pulumi:"createdAt"`
	// The path of the Event Hub.
	EventHubPath string `pulumi:"eventHubPath"`
	// The exact time the message was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// The user metadata.
	UserMetadata *string `pulumi:"userMetadata"`
}

// ConsumerGroupPropertiesResponseInput is an input type that accepts ConsumerGroupPropertiesResponseArgs and ConsumerGroupPropertiesResponseOutput values.
// You can construct a concrete instance of `ConsumerGroupPropertiesResponseInput` via:
//
//          ConsumerGroupPropertiesResponseArgs{...}
type ConsumerGroupPropertiesResponseInput interface {
	pulumi.Input

	ToConsumerGroupPropertiesResponseOutput() ConsumerGroupPropertiesResponseOutput
	ToConsumerGroupPropertiesResponseOutputWithContext(context.Context) ConsumerGroupPropertiesResponseOutput
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupPropertiesResponseArgs struct {
	// Exact time the message was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The path of the Event Hub.
	EventHubPath pulumi.StringInput `pulumi:"eventHubPath"`
	// The exact time the message was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The user metadata.
	UserMetadata pulumi.StringPtrInput `pulumi:"userMetadata"`
}

func (ConsumerGroupPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupPropertiesResponse)(nil)).Elem()
}

func (i ConsumerGroupPropertiesResponseArgs) ToConsumerGroupPropertiesResponseOutput() ConsumerGroupPropertiesResponseOutput {
	return i.ToConsumerGroupPropertiesResponseOutputWithContext(context.Background())
}

func (i ConsumerGroupPropertiesResponseArgs) ToConsumerGroupPropertiesResponseOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesResponseOutput)
}

func (i ConsumerGroupPropertiesResponseArgs) ToConsumerGroupPropertiesResponsePtrOutput() ConsumerGroupPropertiesResponsePtrOutput {
	return i.ToConsumerGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ConsumerGroupPropertiesResponseArgs) ToConsumerGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesResponseOutput).ToConsumerGroupPropertiesResponsePtrOutputWithContext(ctx)
}

// ConsumerGroupPropertiesResponsePtrInput is an input type that accepts ConsumerGroupPropertiesResponseArgs, ConsumerGroupPropertiesResponsePtr and ConsumerGroupPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ConsumerGroupPropertiesResponsePtrInput` via:
//
//          ConsumerGroupPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ConsumerGroupPropertiesResponsePtrInput interface {
	pulumi.Input

	ToConsumerGroupPropertiesResponsePtrOutput() ConsumerGroupPropertiesResponsePtrOutput
	ToConsumerGroupPropertiesResponsePtrOutputWithContext(context.Context) ConsumerGroupPropertiesResponsePtrOutput
}

type consumerGroupPropertiesResponsePtrType ConsumerGroupPropertiesResponseArgs

func ConsumerGroupPropertiesResponsePtr(v *ConsumerGroupPropertiesResponseArgs) ConsumerGroupPropertiesResponsePtrInput {
	return (*consumerGroupPropertiesResponsePtrType)(v)
}

func (*consumerGroupPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupPropertiesResponse)(nil)).Elem()
}

func (i *consumerGroupPropertiesResponsePtrType) ToConsumerGroupPropertiesResponsePtrOutput() ConsumerGroupPropertiesResponsePtrOutput {
	return i.ToConsumerGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *consumerGroupPropertiesResponsePtrType) ToConsumerGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsumerGroupPropertiesResponsePtrOutput)
}

// Properties supplied to the Create Or Update Consumer Group operation.
type ConsumerGroupPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConsumerGroupPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsumerGroupPropertiesResponse)(nil)).Elem()
}

func (o ConsumerGroupPropertiesResponseOutput) ToConsumerGroupPropertiesResponseOutput() ConsumerGroupPropertiesResponseOutput {
	return o
}

func (o ConsumerGroupPropertiesResponseOutput) ToConsumerGroupPropertiesResponseOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponseOutput {
	return o
}

func (o ConsumerGroupPropertiesResponseOutput) ToConsumerGroupPropertiesResponsePtrOutput() ConsumerGroupPropertiesResponsePtrOutput {
	return o.ToConsumerGroupPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ConsumerGroupPropertiesResponseOutput) ToConsumerGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ConsumerGroupPropertiesResponse) *ConsumerGroupPropertiesResponse {
		return &v
	}).(ConsumerGroupPropertiesResponsePtrOutput)
}

// Exact time the message was created.
func (o ConsumerGroupPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The path of the Event Hub.
func (o ConsumerGroupPropertiesResponseOutput) EventHubPath() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupPropertiesResponse) string { return v.EventHubPath }).(pulumi.StringOutput)
}

// The exact time the message was updated.
func (o ConsumerGroupPropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ConsumerGroupPropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The user metadata.
func (o ConsumerGroupPropertiesResponseOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsumerGroupPropertiesResponse) *string { return v.UserMetadata }).(pulumi.StringPtrOutput)
}

type ConsumerGroupPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsumerGroupPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsumerGroupPropertiesResponse)(nil)).Elem()
}

func (o ConsumerGroupPropertiesResponsePtrOutput) ToConsumerGroupPropertiesResponsePtrOutput() ConsumerGroupPropertiesResponsePtrOutput {
	return o
}

func (o ConsumerGroupPropertiesResponsePtrOutput) ToConsumerGroupPropertiesResponsePtrOutputWithContext(ctx context.Context) ConsumerGroupPropertiesResponsePtrOutput {
	return o
}

func (o ConsumerGroupPropertiesResponsePtrOutput) Elem() ConsumerGroupPropertiesResponseOutput {
	return o.ApplyT(func(v *ConsumerGroupPropertiesResponse) ConsumerGroupPropertiesResponse { return *v }).(ConsumerGroupPropertiesResponseOutput)
}

// Exact time the message was created.
func (o ConsumerGroupPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The path of the Event Hub.
func (o ConsumerGroupPropertiesResponsePtrOutput) EventHubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EventHubPath
	}).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o ConsumerGroupPropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The user metadata.
func (o ConsumerGroupPropertiesResponsePtrOutput) UserMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsumerGroupPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserMetadata
	}).(pulumi.StringPtrOutput)
}

// Single item in List or Get Event Hub operation
type EventHubType struct {
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties supplied to the Create Or Update Event Hub operation.
	Properties EventHubPropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// EventHubTypeInput is an input type that accepts EventHubTypeArgs and EventHubTypeOutput values.
// You can construct a concrete instance of `EventHubTypeInput` via:
//
//          EventHubTypeArgs{...}
type EventHubTypeInput interface {
	pulumi.Input

	ToEventHubTypeOutput() EventHubTypeOutput
	ToEventHubTypeOutputWithContext(context.Context) EventHubTypeOutput
}

// Single item in List or Get Event Hub operation
type EventHubTypeArgs struct {
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to the Create Or Update Event Hub operation.
	Properties EventHubPropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (i EventHubTypeArgs) ToEventHubTypeOutput() EventHubTypeOutput {
	return i.ToEventHubTypeOutputWithContext(context.Background())
}

func (i EventHubTypeArgs) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubTypeOutput)
}

// Single item in List or Get Event Hub operation
type EventHubTypeOutput struct{ *pulumi.OutputState }

func (EventHubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubType)(nil)).Elem()
}

func (o EventHubTypeOutput) ToEventHubTypeOutput() EventHubTypeOutput {
	return o
}

func (o EventHubTypeOutput) ToEventHubTypeOutputWithContext(ctx context.Context) EventHubTypeOutput {
	return o
}

// Resource location
func (o EventHubTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o EventHubTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
func (o EventHubTypeOutput) Properties() EventHubPropertiesResponseOutput {
	return o.ApplyT(func(v EventHubType) EventHubPropertiesResponse { return v.Properties }).(EventHubPropertiesResponseOutput)
}

// Resource type
func (o EventHubTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubType) string { return v.Type }).(pulumi.StringOutput)
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleType struct {
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties supplied to create or update SharedAccessAuthorizationRule
	Properties SharedAccessAuthorizationRulePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// EventHubAuthorizationRuleTypeInput is an input type that accepts EventHubAuthorizationRuleTypeArgs and EventHubAuthorizationRuleTypeOutput values.
// You can construct a concrete instance of `EventHubAuthorizationRuleTypeInput` via:
//
//          EventHubAuthorizationRuleTypeArgs{...}
type EventHubAuthorizationRuleTypeInput interface {
	pulumi.Input

	ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput
	ToEventHubAuthorizationRuleTypeOutputWithContext(context.Context) EventHubAuthorizationRuleTypeOutput
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleTypeArgs struct {
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to create or update SharedAccessAuthorizationRule
	Properties SharedAccessAuthorizationRulePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubAuthorizationRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubAuthorizationRuleType)(nil)).Elem()
}

func (i EventHubAuthorizationRuleTypeArgs) ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput {
	return i.ToEventHubAuthorizationRuleTypeOutputWithContext(context.Background())
}

func (i EventHubAuthorizationRuleTypeArgs) ToEventHubAuthorizationRuleTypeOutputWithContext(ctx context.Context) EventHubAuthorizationRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubAuthorizationRuleTypeOutput)
}

// Single item in a List or Get AuthorizationRule operation
type EventHubAuthorizationRuleTypeOutput struct{ *pulumi.OutputState }

func (EventHubAuthorizationRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubAuthorizationRuleType)(nil)).Elem()
}

func (o EventHubAuthorizationRuleTypeOutput) ToEventHubAuthorizationRuleTypeOutput() EventHubAuthorizationRuleTypeOutput {
	return o
}

func (o EventHubAuthorizationRuleTypeOutput) ToEventHubAuthorizationRuleTypeOutputWithContext(ctx context.Context) EventHubAuthorizationRuleTypeOutput {
	return o
}

// Resource location
func (o EventHubAuthorizationRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o EventHubAuthorizationRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
func (o EventHubAuthorizationRuleTypeOutput) Properties() SharedAccessAuthorizationRulePropertiesResponseOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) SharedAccessAuthorizationRulePropertiesResponse {
		return v.Properties
	}).(SharedAccessAuthorizationRulePropertiesResponseOutput)
}

// Resource type
func (o EventHubAuthorizationRuleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubAuthorizationRuleType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubProperties struct {
	// Number of days to retain the events for this Event Hub.
	MessageRetentionInDays *int `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub.
	PartitionCount *int `pulumi:"partitionCount"`
	// Enumerates the possible values for the status of the Event Hub.
	Status *string `pulumi:"status"`
}

// EventHubPropertiesInput is an input type that accepts EventHubPropertiesArgs and EventHubPropertiesOutput values.
// You can construct a concrete instance of `EventHubPropertiesInput` via:
//
//          EventHubPropertiesArgs{...}
type EventHubPropertiesInput interface {
	pulumi.Input

	ToEventHubPropertiesOutput() EventHubPropertiesOutput
	ToEventHubPropertiesOutputWithContext(context.Context) EventHubPropertiesOutput
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubPropertiesArgs struct {
	// Number of days to retain the events for this Event Hub.
	MessageRetentionInDays pulumi.IntPtrInput `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// Enumerates the possible values for the status of the Event Hub.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (EventHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return i.ToEventHubPropertiesOutputWithContext(context.Background())
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesOutput)
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesPtrOutput() EventHubPropertiesPtrOutput {
	return i.ToEventHubPropertiesPtrOutputWithContext(context.Background())
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesPtrOutputWithContext(ctx context.Context) EventHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesOutput).ToEventHubPropertiesPtrOutputWithContext(ctx)
}

// EventHubPropertiesPtrInput is an input type that accepts EventHubPropertiesArgs, EventHubPropertiesPtr and EventHubPropertiesPtrOutput values.
// You can construct a concrete instance of `EventHubPropertiesPtrInput` via:
//
//          EventHubPropertiesArgs{...}
//
//  or:
//
//          nil
type EventHubPropertiesPtrInput interface {
	pulumi.Input

	ToEventHubPropertiesPtrOutput() EventHubPropertiesPtrOutput
	ToEventHubPropertiesPtrOutputWithContext(context.Context) EventHubPropertiesPtrOutput
}

type eventHubPropertiesPtrType EventHubPropertiesArgs

func EventHubPropertiesPtr(v *EventHubPropertiesArgs) EventHubPropertiesPtrInput {
	return (*eventHubPropertiesPtrType)(v)
}

func (*eventHubPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubProperties)(nil)).Elem()
}

func (i *eventHubPropertiesPtrType) ToEventHubPropertiesPtrOutput() EventHubPropertiesPtrOutput {
	return i.ToEventHubPropertiesPtrOutputWithContext(context.Background())
}

func (i *eventHubPropertiesPtrType) ToEventHubPropertiesPtrOutputWithContext(ctx context.Context) EventHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesPtrOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubPropertiesOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return o
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return o
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesPtrOutput() EventHubPropertiesPtrOutput {
	return o.ToEventHubPropertiesPtrOutputWithContext(context.Background())
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesPtrOutputWithContext(ctx context.Context) EventHubPropertiesPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *EventHubProperties {
		return &v
	}).(EventHubPropertiesPtrOutput)
}

// Number of days to retain the events for this Event Hub.
func (o EventHubPropertiesOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *int { return v.MessageRetentionInDays }).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub.
func (o EventHubPropertiesOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventHubPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type EventHubPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesPtrOutput) ToEventHubPropertiesPtrOutput() EventHubPropertiesPtrOutput {
	return o
}

func (o EventHubPropertiesPtrOutput) ToEventHubPropertiesPtrOutputWithContext(ctx context.Context) EventHubPropertiesPtrOutput {
	return o
}

func (o EventHubPropertiesPtrOutput) Elem() EventHubPropertiesOutput {
	return o.ApplyT(func(v *EventHubProperties) EventHubProperties { return *v }).(EventHubPropertiesOutput)
}

// Number of days to retain the events for this Event Hub.
func (o EventHubPropertiesPtrOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventHubProperties) *int {
		if v == nil {
			return nil
		}
		return v.MessageRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub.
func (o EventHubPropertiesPtrOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventHubProperties) *int {
		if v == nil {
			return nil
		}
		return v.PartitionCount
	}).(pulumi.IntPtrOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventHubPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubPropertiesResponse struct {
	// Exact time the Event Hub was created.
	CreatedAt string `pulumi:"createdAt"`
	// Number of days to retain the events for this Event Hub.
	MessageRetentionInDays *int `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub.
	PartitionCount *int `pulumi:"partitionCount"`
	// Current number of shards on the Event Hub.
	PartitionIds []string `pulumi:"partitionIds"`
	// Enumerates the possible values for the status of the Event Hub.
	Status *string `pulumi:"status"`
	// The exact time the message was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// EventHubPropertiesResponseInput is an input type that accepts EventHubPropertiesResponseArgs and EventHubPropertiesResponseOutput values.
// You can construct a concrete instance of `EventHubPropertiesResponseInput` via:
//
//          EventHubPropertiesResponseArgs{...}
type EventHubPropertiesResponseInput interface {
	pulumi.Input

	ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput
	ToEventHubPropertiesResponseOutputWithContext(context.Context) EventHubPropertiesResponseOutput
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubPropertiesResponseArgs struct {
	// Exact time the Event Hub was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Number of days to retain the events for this Event Hub.
	MessageRetentionInDays pulumi.IntPtrInput `pulumi:"messageRetentionInDays"`
	// Number of partitions created for the Event Hub.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// Current number of shards on the Event Hub.
	PartitionIds pulumi.StringArrayInput `pulumi:"partitionIds"`
	// Enumerates the possible values for the status of the Event Hub.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The exact time the message was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (EventHubPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesResponse)(nil)).Elem()
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput {
	return i.ToEventHubPropertiesResponseOutputWithContext(context.Background())
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponseOutputWithContext(ctx context.Context) EventHubPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesResponseOutput)
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponsePtrOutput() EventHubPropertiesResponsePtrOutput {
	return i.ToEventHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponsePtrOutputWithContext(ctx context.Context) EventHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesResponseOutput).ToEventHubPropertiesResponsePtrOutputWithContext(ctx)
}

// EventHubPropertiesResponsePtrInput is an input type that accepts EventHubPropertiesResponseArgs, EventHubPropertiesResponsePtr and EventHubPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `EventHubPropertiesResponsePtrInput` via:
//
//          EventHubPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type EventHubPropertiesResponsePtrInput interface {
	pulumi.Input

	ToEventHubPropertiesResponsePtrOutput() EventHubPropertiesResponsePtrOutput
	ToEventHubPropertiesResponsePtrOutputWithContext(context.Context) EventHubPropertiesResponsePtrOutput
}

type eventHubPropertiesResponsePtrType EventHubPropertiesResponseArgs

func EventHubPropertiesResponsePtr(v *EventHubPropertiesResponseArgs) EventHubPropertiesResponsePtrInput {
	return (*eventHubPropertiesResponsePtrType)(v)
}

func (*eventHubPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubPropertiesResponse)(nil)).Elem()
}

func (i *eventHubPropertiesResponsePtrType) ToEventHubPropertiesResponsePtrOutput() EventHubPropertiesResponsePtrOutput {
	return i.ToEventHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *eventHubPropertiesResponsePtrType) ToEventHubPropertiesResponsePtrOutputWithContext(ctx context.Context) EventHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesResponsePtrOutput)
}

// Properties supplied to the Create Or Update Event Hub operation.
type EventHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput {
	return o
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutputWithContext(ctx context.Context) EventHubPropertiesResponseOutput {
	return o
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponsePtrOutput() EventHubPropertiesResponsePtrOutput {
	return o.ToEventHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponsePtrOutputWithContext(ctx context.Context) EventHubPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *EventHubPropertiesResponse {
		return &v
	}).(EventHubPropertiesResponsePtrOutput)
}

// Exact time the Event Hub was created.
func (o EventHubPropertiesResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Number of days to retain the events for this Event Hub.
func (o EventHubPropertiesResponseOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *int { return v.MessageRetentionInDays }).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub.
func (o EventHubPropertiesResponseOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// Current number of shards on the Event Hub.
func (o EventHubPropertiesResponseOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) []string { return v.PartitionIds }).(pulumi.StringArrayOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventHubPropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o EventHubPropertiesResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EventHubPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponsePtrOutput) ToEventHubPropertiesResponsePtrOutput() EventHubPropertiesResponsePtrOutput {
	return o
}

func (o EventHubPropertiesResponsePtrOutput) ToEventHubPropertiesResponsePtrOutputWithContext(ctx context.Context) EventHubPropertiesResponsePtrOutput {
	return o
}

func (o EventHubPropertiesResponsePtrOutput) Elem() EventHubPropertiesResponseOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) EventHubPropertiesResponse { return *v }).(EventHubPropertiesResponseOutput)
}

// Exact time the Event Hub was created.
func (o EventHubPropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Number of days to retain the events for this Event Hub.
func (o EventHubPropertiesResponsePtrOutput) MessageRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MessageRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Number of partitions created for the Event Hub.
func (o EventHubPropertiesResponsePtrOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.PartitionCount
	}).(pulumi.IntPtrOutput)
}

// Current number of shards on the Event Hub.
func (o EventHubPropertiesResponsePtrOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.PartitionIds
	}).(pulumi.StringArrayOutput)
}

// Enumerates the possible values for the status of the Event Hub.
func (o EventHubPropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The exact time the message was updated.
func (o EventHubPropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Single Namespace item in List or Get Operation
type NamespaceType struct {
	// Resource location
	Location string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties of the Namespace supplied for create or update Namespace operation
	Properties NamespacePropertiesResponse `pulumi:"properties"`
	// SKU parameters supplied to the create Namespace operation
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// NamespaceTypeInput is an input type that accepts NamespaceTypeArgs and NamespaceTypeOutput values.
// You can construct a concrete instance of `NamespaceTypeInput` via:
//
//          NamespaceTypeArgs{...}
type NamespaceTypeInput interface {
	pulumi.Input

	ToNamespaceTypeOutput() NamespaceTypeOutput
	ToNamespaceTypeOutputWithContext(context.Context) NamespaceTypeOutput
}

// Single Namespace item in List or Get Operation
type NamespaceTypeArgs struct {
	// Resource location
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties of the Namespace supplied for create or update Namespace operation
	Properties NamespacePropertiesResponseInput `pulumi:"properties"`
	// SKU parameters supplied to the create Namespace operation
	Sku SkuResponsePtrInput `pulumi:"sku"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceType)(nil)).Elem()
}

func (i NamespaceTypeArgs) ToNamespaceTypeOutput() NamespaceTypeOutput {
	return i.ToNamespaceTypeOutputWithContext(context.Background())
}

func (i NamespaceTypeArgs) ToNamespaceTypeOutputWithContext(ctx context.Context) NamespaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceTypeOutput)
}

// Single Namespace item in List or Get Operation
type NamespaceTypeOutput struct{ *pulumi.OutputState }

func (NamespaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceType)(nil)).Elem()
}

func (o NamespaceTypeOutput) ToNamespaceTypeOutput() NamespaceTypeOutput {
	return o
}

func (o NamespaceTypeOutput) ToNamespaceTypeOutputWithContext(ctx context.Context) NamespaceTypeOutput {
	return o
}

// Resource location
func (o NamespaceTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceType) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name
func (o NamespaceTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of the Namespace supplied for create or update Namespace operation
func (o NamespaceTypeOutput) Properties() NamespacePropertiesResponseOutput {
	return o.ApplyT(func(v NamespaceType) NamespacePropertiesResponse { return v.Properties }).(NamespacePropertiesResponseOutput)
}

// SKU parameters supplied to the create Namespace operation
func (o NamespaceTypeOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v NamespaceType) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Resource tags
func (o NamespaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NamespaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o NamespaceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceType) string { return v.Type }).(pulumi.StringOutput)
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleType struct {
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name string `pulumi:"name"`
	// Properties supplied to create or update SharedAccessAuthorizationRule
	Properties SharedAccessAuthorizationRulePropertiesResponse `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// NamespaceAuthorizationRuleTypeInput is an input type that accepts NamespaceAuthorizationRuleTypeArgs and NamespaceAuthorizationRuleTypeOutput values.
// You can construct a concrete instance of `NamespaceAuthorizationRuleTypeInput` via:
//
//          NamespaceAuthorizationRuleTypeArgs{...}
type NamespaceAuthorizationRuleTypeInput interface {
	pulumi.Input

	ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput
	ToNamespaceAuthorizationRuleTypeOutputWithContext(context.Context) NamespaceAuthorizationRuleTypeOutput
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleTypeArgs struct {
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name
	Name pulumi.StringInput `pulumi:"name"`
	// Properties supplied to create or update SharedAccessAuthorizationRule
	Properties SharedAccessAuthorizationRulePropertiesResponseInput `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (NamespaceAuthorizationRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceAuthorizationRuleType)(nil)).Elem()
}

func (i NamespaceAuthorizationRuleTypeArgs) ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput {
	return i.ToNamespaceAuthorizationRuleTypeOutputWithContext(context.Background())
}

func (i NamespaceAuthorizationRuleTypeArgs) ToNamespaceAuthorizationRuleTypeOutputWithContext(ctx context.Context) NamespaceAuthorizationRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespaceAuthorizationRuleTypeOutput)
}

// Single item in a List or Get AuthorizationRule operation
type NamespaceAuthorizationRuleTypeOutput struct{ *pulumi.OutputState }

func (NamespaceAuthorizationRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceAuthorizationRuleType)(nil)).Elem()
}

func (o NamespaceAuthorizationRuleTypeOutput) ToNamespaceAuthorizationRuleTypeOutput() NamespaceAuthorizationRuleTypeOutput {
	return o
}

func (o NamespaceAuthorizationRuleTypeOutput) ToNamespaceAuthorizationRuleTypeOutputWithContext(ctx context.Context) NamespaceAuthorizationRuleTypeOutput {
	return o
}

// Resource location
func (o NamespaceAuthorizationRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o NamespaceAuthorizationRuleTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) string { return v.Name }).(pulumi.StringOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
func (o NamespaceAuthorizationRuleTypeOutput) Properties() SharedAccessAuthorizationRulePropertiesResponseOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) SharedAccessAuthorizationRulePropertiesResponse {
		return v.Properties
	}).(SharedAccessAuthorizationRulePropertiesResponseOutput)
}

// Resource type
func (o NamespaceAuthorizationRuleTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NamespaceAuthorizationRuleType) string { return v.Type }).(pulumi.StringOutput)
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespaceProperties struct {
	// The time the Namespace was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies whether this instance is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Provisioning state of the Namespace.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint *string `pulumi:"serviceBusEndpoint"`
	// State of the Namespace.
	Status *string `pulumi:"status"`
	// The time the Namespace was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// NamespacePropertiesInput is an input type that accepts NamespacePropertiesArgs and NamespacePropertiesOutput values.
// You can construct a concrete instance of `NamespacePropertiesInput` via:
//
//          NamespacePropertiesArgs{...}
type NamespacePropertiesInput interface {
	pulumi.Input

	ToNamespacePropertiesOutput() NamespacePropertiesOutput
	ToNamespacePropertiesOutputWithContext(context.Context) NamespacePropertiesOutput
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespacePropertiesArgs struct {
	// The time the Namespace was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Specifies whether this instance is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint pulumi.StringPtrInput `pulumi:"serviceBusEndpoint"`
	// State of the Namespace.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The time the Namespace was updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (NamespacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceProperties)(nil)).Elem()
}

func (i NamespacePropertiesArgs) ToNamespacePropertiesOutput() NamespacePropertiesOutput {
	return i.ToNamespacePropertiesOutputWithContext(context.Background())
}

func (i NamespacePropertiesArgs) ToNamespacePropertiesOutputWithContext(ctx context.Context) NamespacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesOutput)
}

func (i NamespacePropertiesArgs) ToNamespacePropertiesPtrOutput() NamespacePropertiesPtrOutput {
	return i.ToNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i NamespacePropertiesArgs) ToNamespacePropertiesPtrOutputWithContext(ctx context.Context) NamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesOutput).ToNamespacePropertiesPtrOutputWithContext(ctx)
}

// NamespacePropertiesPtrInput is an input type that accepts NamespacePropertiesArgs, NamespacePropertiesPtr and NamespacePropertiesPtrOutput values.
// You can construct a concrete instance of `NamespacePropertiesPtrInput` via:
//
//          NamespacePropertiesArgs{...}
//
//  or:
//
//          nil
type NamespacePropertiesPtrInput interface {
	pulumi.Input

	ToNamespacePropertiesPtrOutput() NamespacePropertiesPtrOutput
	ToNamespacePropertiesPtrOutputWithContext(context.Context) NamespacePropertiesPtrOutput
}

type namespacePropertiesPtrType NamespacePropertiesArgs

func NamespacePropertiesPtr(v *NamespacePropertiesArgs) NamespacePropertiesPtrInput {
	return (*namespacePropertiesPtrType)(v)
}

func (*namespacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceProperties)(nil)).Elem()
}

func (i *namespacePropertiesPtrType) ToNamespacePropertiesPtrOutput() NamespacePropertiesPtrOutput {
	return i.ToNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i *namespacePropertiesPtrType) ToNamespacePropertiesPtrOutputWithContext(ctx context.Context) NamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesPtrOutput)
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespacePropertiesOutput struct{ *pulumi.OutputState }

func (NamespacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespaceProperties)(nil)).Elem()
}

func (o NamespacePropertiesOutput) ToNamespacePropertiesOutput() NamespacePropertiesOutput {
	return o
}

func (o NamespacePropertiesOutput) ToNamespacePropertiesOutputWithContext(ctx context.Context) NamespacePropertiesOutput {
	return o
}

func (o NamespacePropertiesOutput) ToNamespacePropertiesPtrOutput() NamespacePropertiesPtrOutput {
	return o.ToNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (o NamespacePropertiesOutput) ToNamespacePropertiesPtrOutputWithContext(ctx context.Context) NamespacePropertiesPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *NamespaceProperties {
		return &v
	}).(NamespacePropertiesPtrOutput)
}

// The time the Namespace was created.
func (o NamespacePropertiesOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Specifies whether this instance is enabled.
func (o NamespacePropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Provisioning state of the Namespace.
func (o NamespacePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o NamespacePropertiesOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *string { return v.ServiceBusEndpoint }).(pulumi.StringPtrOutput)
}

// State of the Namespace.
func (o NamespacePropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The time the Namespace was updated.
func (o NamespacePropertiesOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespaceProperties) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type NamespacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (NamespacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespaceProperties)(nil)).Elem()
}

func (o NamespacePropertiesPtrOutput) ToNamespacePropertiesPtrOutput() NamespacePropertiesPtrOutput {
	return o
}

func (o NamespacePropertiesPtrOutput) ToNamespacePropertiesPtrOutputWithContext(ctx context.Context) NamespacePropertiesPtrOutput {
	return o
}

func (o NamespacePropertiesPtrOutput) Elem() NamespacePropertiesOutput {
	return o.ApplyT(func(v *NamespaceProperties) NamespaceProperties { return *v }).(NamespacePropertiesOutput)
}

// The time the Namespace was created.
func (o NamespacePropertiesPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Specifies whether this instance is enabled.
func (o NamespacePropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Provisioning state of the Namespace.
func (o NamespacePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o NamespacePropertiesPtrOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusEndpoint
	}).(pulumi.StringPtrOutput)
}

// State of the Namespace.
func (o NamespacePropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The time the Namespace was updated.
func (o NamespacePropertiesPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespacePropertiesResponse struct {
	// The time the Namespace was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies whether this instance is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Identifier for Azure Insights metrics
	MetricId string `pulumi:"metricId"`
	// Provisioning state of the Namespace.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint *string `pulumi:"serviceBusEndpoint"`
	// State of the Namespace.
	Status *string `pulumi:"status"`
	// The time the Namespace was updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// NamespacePropertiesResponseInput is an input type that accepts NamespacePropertiesResponseArgs and NamespacePropertiesResponseOutput values.
// You can construct a concrete instance of `NamespacePropertiesResponseInput` via:
//
//          NamespacePropertiesResponseArgs{...}
type NamespacePropertiesResponseInput interface {
	pulumi.Input

	ToNamespacePropertiesResponseOutput() NamespacePropertiesResponseOutput
	ToNamespacePropertiesResponseOutputWithContext(context.Context) NamespacePropertiesResponseOutput
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespacePropertiesResponseArgs struct {
	// The time the Namespace was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Specifies whether this instance is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identifier for Azure Insights metrics
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Provisioning state of the Namespace.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Endpoint you can use to perform Service Bus operations.
	ServiceBusEndpoint pulumi.StringPtrInput `pulumi:"serviceBusEndpoint"`
	// State of the Namespace.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The time the Namespace was updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (NamespacePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacePropertiesResponse)(nil)).Elem()
}

func (i NamespacePropertiesResponseArgs) ToNamespacePropertiesResponseOutput() NamespacePropertiesResponseOutput {
	return i.ToNamespacePropertiesResponseOutputWithContext(context.Background())
}

func (i NamespacePropertiesResponseArgs) ToNamespacePropertiesResponseOutputWithContext(ctx context.Context) NamespacePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesResponseOutput)
}

func (i NamespacePropertiesResponseArgs) ToNamespacePropertiesResponsePtrOutput() NamespacePropertiesResponsePtrOutput {
	return i.ToNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i NamespacePropertiesResponseArgs) ToNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) NamespacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesResponseOutput).ToNamespacePropertiesResponsePtrOutputWithContext(ctx)
}

// NamespacePropertiesResponsePtrInput is an input type that accepts NamespacePropertiesResponseArgs, NamespacePropertiesResponsePtr and NamespacePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `NamespacePropertiesResponsePtrInput` via:
//
//          NamespacePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type NamespacePropertiesResponsePtrInput interface {
	pulumi.Input

	ToNamespacePropertiesResponsePtrOutput() NamespacePropertiesResponsePtrOutput
	ToNamespacePropertiesResponsePtrOutputWithContext(context.Context) NamespacePropertiesResponsePtrOutput
}

type namespacePropertiesResponsePtrType NamespacePropertiesResponseArgs

func NamespacePropertiesResponsePtr(v *NamespacePropertiesResponseArgs) NamespacePropertiesResponsePtrInput {
	return (*namespacePropertiesResponsePtrType)(v)
}

func (*namespacePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacePropertiesResponse)(nil)).Elem()
}

func (i *namespacePropertiesResponsePtrType) ToNamespacePropertiesResponsePtrOutput() NamespacePropertiesResponsePtrOutput {
	return i.ToNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *namespacePropertiesResponsePtrType) ToNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) NamespacePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacePropertiesResponsePtrOutput)
}

// Properties of the Namespace supplied for create or update Namespace operation
type NamespacePropertiesResponseOutput struct{ *pulumi.OutputState }

func (NamespacePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacePropertiesResponse)(nil)).Elem()
}

func (o NamespacePropertiesResponseOutput) ToNamespacePropertiesResponseOutput() NamespacePropertiesResponseOutput {
	return o
}

func (o NamespacePropertiesResponseOutput) ToNamespacePropertiesResponseOutputWithContext(ctx context.Context) NamespacePropertiesResponseOutput {
	return o
}

func (o NamespacePropertiesResponseOutput) ToNamespacePropertiesResponsePtrOutput() NamespacePropertiesResponsePtrOutput {
	return o.ToNamespacePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o NamespacePropertiesResponseOutput) ToNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) NamespacePropertiesResponsePtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *NamespacePropertiesResponse {
		return &v
	}).(NamespacePropertiesResponsePtrOutput)
}

// The time the Namespace was created.
func (o NamespacePropertiesResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Specifies whether this instance is enabled.
func (o NamespacePropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier for Azure Insights metrics
func (o NamespacePropertiesResponseOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) string { return v.MetricId }).(pulumi.StringOutput)
}

// Provisioning state of the Namespace.
func (o NamespacePropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o NamespacePropertiesResponseOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *string { return v.ServiceBusEndpoint }).(pulumi.StringPtrOutput)
}

// State of the Namespace.
func (o NamespacePropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The time the Namespace was updated.
func (o NamespacePropertiesResponseOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacePropertiesResponse) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type NamespacePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NamespacePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacePropertiesResponse)(nil)).Elem()
}

func (o NamespacePropertiesResponsePtrOutput) ToNamespacePropertiesResponsePtrOutput() NamespacePropertiesResponsePtrOutput {
	return o
}

func (o NamespacePropertiesResponsePtrOutput) ToNamespacePropertiesResponsePtrOutputWithContext(ctx context.Context) NamespacePropertiesResponsePtrOutput {
	return o
}

func (o NamespacePropertiesResponsePtrOutput) Elem() NamespacePropertiesResponseOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) NamespacePropertiesResponse { return *v }).(NamespacePropertiesResponseOutput)
}

// The time the Namespace was created.
func (o NamespacePropertiesResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// Specifies whether this instance is enabled.
func (o NamespacePropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Identifier for Azure Insights metrics
func (o NamespacePropertiesResponsePtrOutput) MetricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MetricId
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the Namespace.
func (o NamespacePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Endpoint you can use to perform Service Bus operations.
func (o NamespacePropertiesResponsePtrOutput) ServiceBusEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusEndpoint
	}).(pulumi.StringPtrOutput)
}

// State of the Namespace.
func (o NamespacePropertiesResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The time the Namespace was updated.
func (o NamespacePropertiesResponsePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamespacePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRuleProperties struct {
	// The rights associated with the rule.
	Rights []string `pulumi:"rights"`
}

// SharedAccessAuthorizationRulePropertiesInput is an input type that accepts SharedAccessAuthorizationRulePropertiesArgs and SharedAccessAuthorizationRulePropertiesOutput values.
// You can construct a concrete instance of `SharedAccessAuthorizationRulePropertiesInput` via:
//
//          SharedAccessAuthorizationRulePropertiesArgs{...}
type SharedAccessAuthorizationRulePropertiesInput interface {
	pulumi.Input

	ToSharedAccessAuthorizationRulePropertiesOutput() SharedAccessAuthorizationRulePropertiesOutput
	ToSharedAccessAuthorizationRulePropertiesOutputWithContext(context.Context) SharedAccessAuthorizationRulePropertiesOutput
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRulePropertiesArgs struct {
	// The rights associated with the rule.
	Rights pulumi.StringArrayInput `pulumi:"rights"`
}

func (SharedAccessAuthorizationRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessAuthorizationRuleProperties)(nil)).Elem()
}

func (i SharedAccessAuthorizationRulePropertiesArgs) ToSharedAccessAuthorizationRulePropertiesOutput() SharedAccessAuthorizationRulePropertiesOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesOutputWithContext(context.Background())
}

func (i SharedAccessAuthorizationRulePropertiesArgs) ToSharedAccessAuthorizationRulePropertiesOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesOutput)
}

func (i SharedAccessAuthorizationRulePropertiesArgs) ToSharedAccessAuthorizationRulePropertiesPtrOutput() SharedAccessAuthorizationRulePropertiesPtrOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(context.Background())
}

func (i SharedAccessAuthorizationRulePropertiesArgs) ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesOutput).ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(ctx)
}

// SharedAccessAuthorizationRulePropertiesPtrInput is an input type that accepts SharedAccessAuthorizationRulePropertiesArgs, SharedAccessAuthorizationRulePropertiesPtr and SharedAccessAuthorizationRulePropertiesPtrOutput values.
// You can construct a concrete instance of `SharedAccessAuthorizationRulePropertiesPtrInput` via:
//
//          SharedAccessAuthorizationRulePropertiesArgs{...}
//
//  or:
//
//          nil
type SharedAccessAuthorizationRulePropertiesPtrInput interface {
	pulumi.Input

	ToSharedAccessAuthorizationRulePropertiesPtrOutput() SharedAccessAuthorizationRulePropertiesPtrOutput
	ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(context.Context) SharedAccessAuthorizationRulePropertiesPtrOutput
}

type sharedAccessAuthorizationRulePropertiesPtrType SharedAccessAuthorizationRulePropertiesArgs

func SharedAccessAuthorizationRulePropertiesPtr(v *SharedAccessAuthorizationRulePropertiesArgs) SharedAccessAuthorizationRulePropertiesPtrInput {
	return (*sharedAccessAuthorizationRulePropertiesPtrType)(v)
}

func (*sharedAccessAuthorizationRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedAccessAuthorizationRuleProperties)(nil)).Elem()
}

func (i *sharedAccessAuthorizationRulePropertiesPtrType) ToSharedAccessAuthorizationRulePropertiesPtrOutput() SharedAccessAuthorizationRulePropertiesPtrOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *sharedAccessAuthorizationRulePropertiesPtrType) ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesPtrOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRulePropertiesOutput struct{ *pulumi.OutputState }

func (SharedAccessAuthorizationRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessAuthorizationRuleProperties)(nil)).Elem()
}

func (o SharedAccessAuthorizationRulePropertiesOutput) ToSharedAccessAuthorizationRulePropertiesOutput() SharedAccessAuthorizationRulePropertiesOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesOutput) ToSharedAccessAuthorizationRulePropertiesOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesOutput) ToSharedAccessAuthorizationRulePropertiesPtrOutput() SharedAccessAuthorizationRulePropertiesPtrOutput {
	return o.ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(context.Background())
}

func (o SharedAccessAuthorizationRulePropertiesOutput) ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesPtrOutput {
	return o.ApplyT(func(v SharedAccessAuthorizationRuleProperties) *SharedAccessAuthorizationRuleProperties {
		return &v
	}).(SharedAccessAuthorizationRulePropertiesPtrOutput)
}

// The rights associated with the rule.
func (o SharedAccessAuthorizationRulePropertiesOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SharedAccessAuthorizationRuleProperties) []string { return v.Rights }).(pulumi.StringArrayOutput)
}

type SharedAccessAuthorizationRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SharedAccessAuthorizationRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedAccessAuthorizationRuleProperties)(nil)).Elem()
}

func (o SharedAccessAuthorizationRulePropertiesPtrOutput) ToSharedAccessAuthorizationRulePropertiesPtrOutput() SharedAccessAuthorizationRulePropertiesPtrOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesPtrOutput) ToSharedAccessAuthorizationRulePropertiesPtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesPtrOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesPtrOutput) Elem() SharedAccessAuthorizationRulePropertiesOutput {
	return o.ApplyT(func(v *SharedAccessAuthorizationRuleProperties) SharedAccessAuthorizationRuleProperties { return *v }).(SharedAccessAuthorizationRulePropertiesOutput)
}

// The rights associated with the rule.
func (o SharedAccessAuthorizationRulePropertiesPtrOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SharedAccessAuthorizationRuleProperties) []string {
		if v == nil {
			return nil
		}
		return v.Rights
	}).(pulumi.StringArrayOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRulePropertiesResponse struct {
	// The rights associated with the rule.
	Rights []string `pulumi:"rights"`
}

// SharedAccessAuthorizationRulePropertiesResponseInput is an input type that accepts SharedAccessAuthorizationRulePropertiesResponseArgs and SharedAccessAuthorizationRulePropertiesResponseOutput values.
// You can construct a concrete instance of `SharedAccessAuthorizationRulePropertiesResponseInput` via:
//
//          SharedAccessAuthorizationRulePropertiesResponseArgs{...}
type SharedAccessAuthorizationRulePropertiesResponseInput interface {
	pulumi.Input

	ToSharedAccessAuthorizationRulePropertiesResponseOutput() SharedAccessAuthorizationRulePropertiesResponseOutput
	ToSharedAccessAuthorizationRulePropertiesResponseOutputWithContext(context.Context) SharedAccessAuthorizationRulePropertiesResponseOutput
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRulePropertiesResponseArgs struct {
	// The rights associated with the rule.
	Rights pulumi.StringArrayInput `pulumi:"rights"`
}

func (SharedAccessAuthorizationRulePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessAuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (i SharedAccessAuthorizationRulePropertiesResponseArgs) ToSharedAccessAuthorizationRulePropertiesResponseOutput() SharedAccessAuthorizationRulePropertiesResponseOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesResponseOutputWithContext(context.Background())
}

func (i SharedAccessAuthorizationRulePropertiesResponseArgs) ToSharedAccessAuthorizationRulePropertiesResponseOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesResponseOutput)
}

func (i SharedAccessAuthorizationRulePropertiesResponseArgs) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutput() SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SharedAccessAuthorizationRulePropertiesResponseArgs) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesResponseOutput).ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx)
}

// SharedAccessAuthorizationRulePropertiesResponsePtrInput is an input type that accepts SharedAccessAuthorizationRulePropertiesResponseArgs, SharedAccessAuthorizationRulePropertiesResponsePtr and SharedAccessAuthorizationRulePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SharedAccessAuthorizationRulePropertiesResponsePtrInput` via:
//
//          SharedAccessAuthorizationRulePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SharedAccessAuthorizationRulePropertiesResponsePtrInput interface {
	pulumi.Input

	ToSharedAccessAuthorizationRulePropertiesResponsePtrOutput() SharedAccessAuthorizationRulePropertiesResponsePtrOutput
	ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Context) SharedAccessAuthorizationRulePropertiesResponsePtrOutput
}

type sharedAccessAuthorizationRulePropertiesResponsePtrType SharedAccessAuthorizationRulePropertiesResponseArgs

func SharedAccessAuthorizationRulePropertiesResponsePtr(v *SharedAccessAuthorizationRulePropertiesResponseArgs) SharedAccessAuthorizationRulePropertiesResponsePtrInput {
	return (*sharedAccessAuthorizationRulePropertiesResponsePtrType)(v)
}

func (*sharedAccessAuthorizationRulePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedAccessAuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (i *sharedAccessAuthorizationRulePropertiesResponsePtrType) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutput() SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return i.ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *sharedAccessAuthorizationRulePropertiesResponsePtrType) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessAuthorizationRulePropertiesResponsePtrOutput)
}

// Properties supplied to create or update SharedAccessAuthorizationRule
type SharedAccessAuthorizationRulePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessAuthorizationRulePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessAuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (o SharedAccessAuthorizationRulePropertiesResponseOutput) ToSharedAccessAuthorizationRulePropertiesResponseOutput() SharedAccessAuthorizationRulePropertiesResponseOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesResponseOutput) ToSharedAccessAuthorizationRulePropertiesResponseOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponseOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesResponseOutput) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutput() SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return o.ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SharedAccessAuthorizationRulePropertiesResponseOutput) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return o.ApplyT(func(v SharedAccessAuthorizationRulePropertiesResponse) *SharedAccessAuthorizationRulePropertiesResponse {
		return &v
	}).(SharedAccessAuthorizationRulePropertiesResponsePtrOutput)
}

// The rights associated with the rule.
func (o SharedAccessAuthorizationRulePropertiesResponseOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SharedAccessAuthorizationRulePropertiesResponse) []string { return v.Rights }).(pulumi.StringArrayOutput)
}

type SharedAccessAuthorizationRulePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SharedAccessAuthorizationRulePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedAccessAuthorizationRulePropertiesResponse)(nil)).Elem()
}

func (o SharedAccessAuthorizationRulePropertiesResponsePtrOutput) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutput() SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesResponsePtrOutput) ToSharedAccessAuthorizationRulePropertiesResponsePtrOutputWithContext(ctx context.Context) SharedAccessAuthorizationRulePropertiesResponsePtrOutput {
	return o
}

func (o SharedAccessAuthorizationRulePropertiesResponsePtrOutput) Elem() SharedAccessAuthorizationRulePropertiesResponseOutput {
	return o.ApplyT(func(v *SharedAccessAuthorizationRulePropertiesResponse) SharedAccessAuthorizationRulePropertiesResponse {
		return *v
	}).(SharedAccessAuthorizationRulePropertiesResponseOutput)
}

// The rights associated with the rule.
func (o SharedAccessAuthorizationRulePropertiesResponsePtrOutput) Rights() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SharedAccessAuthorizationRulePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Rights
	}).(pulumi.StringArrayOutput)
}

// SKU parameters supplied to the create Namespace operation
type Sku struct {
	// The Event Hubs throughput units.
	Capacity *int `pulumi:"capacity"`
	// Name of this SKU.
	Name *string `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//          SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// SKU parameters supplied to the create Namespace operation
type SkuArgs struct {
	// The Event Hubs throughput units.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of this SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//          SkuArgs{...}
//
//  or:
//
//          nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// SKU parameters supplied to the create Namespace operation
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyT(func(v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The Event Hubs throughput units.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku { return *v }).(SkuOutput)
}

// The Event Hubs throughput units.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU parameters supplied to the create Namespace operation
type SkuResponse struct {
	// The Event Hubs throughput units.
	Capacity *int `pulumi:"capacity"`
	// Name of this SKU.
	Name *string `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier string `pulumi:"tier"`
}

// SkuResponseInput is an input type that accepts SkuResponseArgs and SkuResponseOutput values.
// You can construct a concrete instance of `SkuResponseInput` via:
//
//          SkuResponseArgs{...}
type SkuResponseInput interface {
	pulumi.Input

	ToSkuResponseOutput() SkuResponseOutput
	ToSkuResponseOutputWithContext(context.Context) SkuResponseOutput
}

// SKU parameters supplied to the create Namespace operation
type SkuResponseArgs struct {
	// The Event Hubs throughput units.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of this SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The billing tier of this particular SKU.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (i SkuResponseArgs) ToSkuResponseOutput() SkuResponseOutput {
	return i.ToSkuResponseOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput)
}

func (i SkuResponseArgs) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i SkuResponseArgs) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponseOutput).ToSkuResponsePtrOutputWithContext(ctx)
}

// SkuResponsePtrInput is an input type that accepts SkuResponseArgs, SkuResponsePtr and SkuResponsePtrOutput values.
// You can construct a concrete instance of `SkuResponsePtrInput` via:
//
//          SkuResponseArgs{...}
//
//  or:
//
//          nil
type SkuResponsePtrInput interface {
	pulumi.Input

	ToSkuResponsePtrOutput() SkuResponsePtrOutput
	ToSkuResponsePtrOutputWithContext(context.Context) SkuResponsePtrOutput
}

type skuResponsePtrType SkuResponseArgs

func SkuResponsePtr(v *SkuResponseArgs) SkuResponsePtrInput {
	return (*skuResponsePtrType)(v)
}

func (*skuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return i.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (i *skuResponsePtrType) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuResponsePtrOutput)
}

// SKU parameters supplied to the create Namespace operation
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o.ToSkuResponsePtrOutputWithContext(context.Background())
}

func (o SkuResponseOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o.ApplyT(func(v SkuResponse) *SkuResponse {
		return &v
	}).(SkuResponsePtrOutput)
}

// The Event Hubs throughput units.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse { return *v }).(SkuResponseOutput)
}

// The Event Hubs throughput units.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of this SKU.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The billing tier of this particular SKU.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConsumerGroupTypeOutput{})
	pulumi.RegisterOutputType(ConsumerGroupPropertiesOutput{})
	pulumi.RegisterOutputType(ConsumerGroupPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConsumerGroupPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConsumerGroupPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EventHubTypeOutput{})
	pulumi.RegisterOutputType(EventHubAuthorizationRuleTypeOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NamespaceTypeOutput{})
	pulumi.RegisterOutputType(NamespaceAuthorizationRuleTypeOutput{})
	pulumi.RegisterOutputType(NamespacePropertiesOutput{})
	pulumi.RegisterOutputType(NamespacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(NamespacePropertiesResponseOutput{})
	pulumi.RegisterOutputType(NamespacePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SharedAccessAuthorizationRulePropertiesOutput{})
	pulumi.RegisterOutputType(SharedAccessAuthorizationRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SharedAccessAuthorizationRulePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessAuthorizationRulePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
}
