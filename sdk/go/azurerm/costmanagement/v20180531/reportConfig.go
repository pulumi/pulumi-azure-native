// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180531

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A report config resource.
type ReportConfig struct {
	pulumi.CustomResourceState

	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the report config.
	Properties ReportConfigPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewReportConfig registers a new resource with the given unique name, arguments, and options.
func NewReportConfig(ctx *pulumi.Context,
	name string, args *ReportConfigArgs, opts ...pulumi.ResourceOption) (*ReportConfig, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &ReportConfigArgs{}
	}
	var resource ReportConfig
	err := ctx.RegisterResource("azurerm:costmanagement/v20180531:ReportConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportConfig gets an existing ReportConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportConfigState, opts ...pulumi.ResourceOption) (*ReportConfig, error) {
	var resource ReportConfig
	err := ctx.ReadResource("azurerm:costmanagement/v20180531:ReportConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportConfig resources.
type reportConfigState struct {
	// Resource name.
	Name *string `pulumi:"name"`
	// The properties of the report config.
	Properties *ReportConfigPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type ReportConfigState struct {
	// Resource name.
	Name pulumi.StringPtrInput
	// The properties of the report config.
	Properties ReportConfigPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (ReportConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigState)(nil)).Elem()
}

type reportConfigArgs struct {
	// Report Config Name.
	Name string `pulumi:"name"`
	// The properties of the report config.
	Properties *ReportConfigProperties `pulumi:"properties"`
}

// The set of arguments for constructing a ReportConfig resource.
type ReportConfigArgs struct {
	// Report Config Name.
	Name pulumi.StringInput
	// The properties of the report config.
	Properties ReportConfigPropertiesPtrInput
}

func (ReportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportConfigArgs)(nil)).Elem()
}
