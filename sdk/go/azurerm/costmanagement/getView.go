// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package costmanagement

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupView(ctx *pulumi.Context, args *LookupViewArgs, opts ...pulumi.InvokeOption) (*LookupViewResult, error) {
	var rv LookupViewResult
	err := ctx.Invoke("azurerm:costmanagement:getView", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupViewArgs struct {
	// View name
	Name string `pulumi:"name"`
}

// States and configurations of Cost Analysis.
type LookupViewResult struct {
	// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.
	ETag *string `pulumi:"eTag"`
	// Resource name.
	Name string `pulumi:"name"`
	// The properties of the view.
	Properties ViewPropertiesResponse `pulumi:"properties"`
	// Resource type.
	Type string `pulumi:"type"`
}
