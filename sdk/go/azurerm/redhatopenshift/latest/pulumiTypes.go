// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// APIServerProfile represents an API server profile.
type APIServerProfile struct {
	// The IP of the cluster API server (immutable).
	Ip *string `pulumi:"ip"`
	// The URL to access the cluster API server (immutable).
	Url *string `pulumi:"url"`
	// API server visibility (immutable).
	Visibility *string `pulumi:"visibility"`
}

// APIServerProfileInput is an input type that accepts APIServerProfileArgs and APIServerProfileOutput values.
// You can construct a concrete instance of `APIServerProfileInput` via:
//
//          APIServerProfileArgs{...}
type APIServerProfileInput interface {
	pulumi.Input

	ToAPIServerProfileOutput() APIServerProfileOutput
	ToAPIServerProfileOutputWithContext(context.Context) APIServerProfileOutput
}

// APIServerProfile represents an API server profile.
type APIServerProfileArgs struct {
	// The IP of the cluster API server (immutable).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The URL to access the cluster API server (immutable).
	Url pulumi.StringPtrInput `pulumi:"url"`
	// API server visibility (immutable).
	Visibility pulumi.StringPtrInput `pulumi:"visibility"`
}

func (APIServerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*APIServerProfile)(nil)).Elem()
}

func (i APIServerProfileArgs) ToAPIServerProfileOutput() APIServerProfileOutput {
	return i.ToAPIServerProfileOutputWithContext(context.Background())
}

func (i APIServerProfileArgs) ToAPIServerProfileOutputWithContext(ctx context.Context) APIServerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIServerProfileOutput)
}

func (i APIServerProfileArgs) ToAPIServerProfilePtrOutput() APIServerProfilePtrOutput {
	return i.ToAPIServerProfilePtrOutputWithContext(context.Background())
}

func (i APIServerProfileArgs) ToAPIServerProfilePtrOutputWithContext(ctx context.Context) APIServerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIServerProfileOutput).ToAPIServerProfilePtrOutputWithContext(ctx)
}

// APIServerProfilePtrInput is an input type that accepts APIServerProfileArgs, APIServerProfilePtr and APIServerProfilePtrOutput values.
// You can construct a concrete instance of `APIServerProfilePtrInput` via:
//
//          APIServerProfileArgs{...}
//
//  or:
//
//          nil
type APIServerProfilePtrInput interface {
	pulumi.Input

	ToAPIServerProfilePtrOutput() APIServerProfilePtrOutput
	ToAPIServerProfilePtrOutputWithContext(context.Context) APIServerProfilePtrOutput
}

type apiserverProfilePtrType APIServerProfileArgs

func APIServerProfilePtr(v *APIServerProfileArgs) APIServerProfilePtrInput {
	return (*apiserverProfilePtrType)(v)
}

func (*apiserverProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**APIServerProfile)(nil)).Elem()
}

func (i *apiserverProfilePtrType) ToAPIServerProfilePtrOutput() APIServerProfilePtrOutput {
	return i.ToAPIServerProfilePtrOutputWithContext(context.Background())
}

func (i *apiserverProfilePtrType) ToAPIServerProfilePtrOutputWithContext(ctx context.Context) APIServerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APIServerProfilePtrOutput)
}

// APIServerProfile represents an API server profile.
type APIServerProfileResponse struct {
	// The IP of the cluster API server (immutable).
	Ip *string `pulumi:"ip"`
	// The URL to access the cluster API server (immutable).
	Url *string `pulumi:"url"`
	// API server visibility (immutable).
	Visibility *string `pulumi:"visibility"`
}

// APIServerProfile represents an API server profile.
type APIServerProfileResponseOutput struct{ *pulumi.OutputState }

func (APIServerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*APIServerProfileResponse)(nil)).Elem()
}

func (o APIServerProfileResponseOutput) ToAPIServerProfileResponseOutput() APIServerProfileResponseOutput {
	return o
}

func (o APIServerProfileResponseOutput) ToAPIServerProfileResponseOutputWithContext(ctx context.Context) APIServerProfileResponseOutput {
	return o
}

func (o APIServerProfileResponseOutput) ToAPIServerProfileResponsePtrOutput() APIServerProfileResponsePtrOutput {
	return o.ToAPIServerProfileResponsePtrOutputWithContext(context.Background())
}

func (o APIServerProfileResponseOutput) ToAPIServerProfileResponsePtrOutputWithContext(ctx context.Context) APIServerProfileResponsePtrOutput {
	return o.ApplyT(func(v APIServerProfileResponse) *APIServerProfileResponse {
		return &v
	}).(APIServerProfileResponsePtrOutput)
}

// The IP of the cluster API server (immutable).
func (o APIServerProfileResponseOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIServerProfileResponse) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The URL to access the cluster API server (immutable).
func (o APIServerProfileResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIServerProfileResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// API server visibility (immutable).
func (o APIServerProfileResponseOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v APIServerProfileResponse) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

type APIServerProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (APIServerProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APIServerProfileResponse)(nil)).Elem()
}

func (o APIServerProfileResponsePtrOutput) ToAPIServerProfileResponsePtrOutput() APIServerProfileResponsePtrOutput {
	return o
}

func (o APIServerProfileResponsePtrOutput) ToAPIServerProfileResponsePtrOutputWithContext(ctx context.Context) APIServerProfileResponsePtrOutput {
	return o
}

func (o APIServerProfileResponsePtrOutput) Elem() APIServerProfileResponseOutput {
	return o.ApplyT(func(v *APIServerProfileResponse) APIServerProfileResponse { return *v }).(APIServerProfileResponseOutput)
}

// The IP of the cluster API server (immutable).
func (o APIServerProfileResponsePtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APIServerProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// The URL to access the cluster API server (immutable).
func (o APIServerProfileResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APIServerProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// API server visibility (immutable).
func (o APIServerProfileResponsePtrOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *APIServerProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(pulumi.StringPtrOutput)
}

// ClusterProfile represents a cluster profile.
type ClusterProfile struct {
	// The domain for the cluster (immutable).
	Domain *string `pulumi:"domain"`
	// The pull secret for the cluster (immutable).
	PullSecret *string `pulumi:"pullSecret"`
	// The ID of the cluster resource group (immutable).
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The version of the cluster (immutable).
	Version *string `pulumi:"version"`
}

// ClusterProfileInput is an input type that accepts ClusterProfileArgs and ClusterProfileOutput values.
// You can construct a concrete instance of `ClusterProfileInput` via:
//
//          ClusterProfileArgs{...}
type ClusterProfileInput interface {
	pulumi.Input

	ToClusterProfileOutput() ClusterProfileOutput
	ToClusterProfileOutputWithContext(context.Context) ClusterProfileOutput
}

// ClusterProfile represents a cluster profile.
type ClusterProfileArgs struct {
	// The domain for the cluster (immutable).
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The pull secret for the cluster (immutable).
	PullSecret pulumi.StringPtrInput `pulumi:"pullSecret"`
	// The ID of the cluster resource group (immutable).
	ResourceGroupId pulumi.StringPtrInput `pulumi:"resourceGroupId"`
	// The version of the cluster (immutable).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProfile)(nil)).Elem()
}

func (i ClusterProfileArgs) ToClusterProfileOutput() ClusterProfileOutput {
	return i.ToClusterProfileOutputWithContext(context.Background())
}

func (i ClusterProfileArgs) ToClusterProfileOutputWithContext(ctx context.Context) ClusterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProfileOutput)
}

func (i ClusterProfileArgs) ToClusterProfilePtrOutput() ClusterProfilePtrOutput {
	return i.ToClusterProfilePtrOutputWithContext(context.Background())
}

func (i ClusterProfileArgs) ToClusterProfilePtrOutputWithContext(ctx context.Context) ClusterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProfileOutput).ToClusterProfilePtrOutputWithContext(ctx)
}

// ClusterProfilePtrInput is an input type that accepts ClusterProfileArgs, ClusterProfilePtr and ClusterProfilePtrOutput values.
// You can construct a concrete instance of `ClusterProfilePtrInput` via:
//
//          ClusterProfileArgs{...}
//
//  or:
//
//          nil
type ClusterProfilePtrInput interface {
	pulumi.Input

	ToClusterProfilePtrOutput() ClusterProfilePtrOutput
	ToClusterProfilePtrOutputWithContext(context.Context) ClusterProfilePtrOutput
}

type clusterProfilePtrType ClusterProfileArgs

func ClusterProfilePtr(v *ClusterProfileArgs) ClusterProfilePtrInput {
	return (*clusterProfilePtrType)(v)
}

func (*clusterProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProfile)(nil)).Elem()
}

func (i *clusterProfilePtrType) ToClusterProfilePtrOutput() ClusterProfilePtrOutput {
	return i.ToClusterProfilePtrOutputWithContext(context.Background())
}

func (i *clusterProfilePtrType) ToClusterProfilePtrOutputWithContext(ctx context.Context) ClusterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterProfilePtrOutput)
}

// ClusterProfile represents a cluster profile.
type ClusterProfileResponse struct {
	// The domain for the cluster (immutable).
	Domain *string `pulumi:"domain"`
	// The pull secret for the cluster (immutable).
	PullSecret *string `pulumi:"pullSecret"`
	// The ID of the cluster resource group (immutable).
	ResourceGroupId *string `pulumi:"resourceGroupId"`
	// The version of the cluster (immutable).
	Version *string `pulumi:"version"`
}

// ClusterProfile represents a cluster profile.
type ClusterProfileResponseOutput struct{ *pulumi.OutputState }

func (ClusterProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterProfileResponse)(nil)).Elem()
}

func (o ClusterProfileResponseOutput) ToClusterProfileResponseOutput() ClusterProfileResponseOutput {
	return o
}

func (o ClusterProfileResponseOutput) ToClusterProfileResponseOutputWithContext(ctx context.Context) ClusterProfileResponseOutput {
	return o
}

func (o ClusterProfileResponseOutput) ToClusterProfileResponsePtrOutput() ClusterProfileResponsePtrOutput {
	return o.ToClusterProfileResponsePtrOutputWithContext(context.Background())
}

func (o ClusterProfileResponseOutput) ToClusterProfileResponsePtrOutputWithContext(ctx context.Context) ClusterProfileResponsePtrOutput {
	return o.ApplyT(func(v ClusterProfileResponse) *ClusterProfileResponse {
		return &v
	}).(ClusterProfileResponsePtrOutput)
}

// The domain for the cluster (immutable).
func (o ClusterProfileResponseOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProfileResponse) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The pull secret for the cluster (immutable).
func (o ClusterProfileResponseOutput) PullSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProfileResponse) *string { return v.PullSecret }).(pulumi.StringPtrOutput)
}

// The ID of the cluster resource group (immutable).
func (o ClusterProfileResponseOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProfileResponse) *string { return v.ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The version of the cluster (immutable).
func (o ClusterProfileResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterProfileResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterProfileResponse)(nil)).Elem()
}

func (o ClusterProfileResponsePtrOutput) ToClusterProfileResponsePtrOutput() ClusterProfileResponsePtrOutput {
	return o
}

func (o ClusterProfileResponsePtrOutput) ToClusterProfileResponsePtrOutputWithContext(ctx context.Context) ClusterProfileResponsePtrOutput {
	return o
}

func (o ClusterProfileResponsePtrOutput) Elem() ClusterProfileResponseOutput {
	return o.ApplyT(func(v *ClusterProfileResponse) ClusterProfileResponse { return *v }).(ClusterProfileResponseOutput)
}

// The domain for the cluster (immutable).
func (o ClusterProfileResponsePtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// The pull secret for the cluster (immutable).
func (o ClusterProfileResponsePtrOutput) PullSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PullSecret
	}).(pulumi.StringPtrOutput)
}

// The ID of the cluster resource group (immutable).
func (o ClusterProfileResponsePtrOutput) ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The version of the cluster (immutable).
func (o ClusterProfileResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// ConsoleProfile represents a console profile.
type ConsoleProfile struct {
	// The URL to access the cluster console (immutable).
	Url *string `pulumi:"url"`
}

// ConsoleProfileInput is an input type that accepts ConsoleProfileArgs and ConsoleProfileOutput values.
// You can construct a concrete instance of `ConsoleProfileInput` via:
//
//          ConsoleProfileArgs{...}
type ConsoleProfileInput interface {
	pulumi.Input

	ToConsoleProfileOutput() ConsoleProfileOutput
	ToConsoleProfileOutputWithContext(context.Context) ConsoleProfileOutput
}

// ConsoleProfile represents a console profile.
type ConsoleProfileArgs struct {
	// The URL to access the cluster console (immutable).
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ConsoleProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsoleProfile)(nil)).Elem()
}

func (i ConsoleProfileArgs) ToConsoleProfileOutput() ConsoleProfileOutput {
	return i.ToConsoleProfileOutputWithContext(context.Background())
}

func (i ConsoleProfileArgs) ToConsoleProfileOutputWithContext(ctx context.Context) ConsoleProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleProfileOutput)
}

func (i ConsoleProfileArgs) ToConsoleProfilePtrOutput() ConsoleProfilePtrOutput {
	return i.ToConsoleProfilePtrOutputWithContext(context.Background())
}

func (i ConsoleProfileArgs) ToConsoleProfilePtrOutputWithContext(ctx context.Context) ConsoleProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleProfileOutput).ToConsoleProfilePtrOutputWithContext(ctx)
}

// ConsoleProfilePtrInput is an input type that accepts ConsoleProfileArgs, ConsoleProfilePtr and ConsoleProfilePtrOutput values.
// You can construct a concrete instance of `ConsoleProfilePtrInput` via:
//
//          ConsoleProfileArgs{...}
//
//  or:
//
//          nil
type ConsoleProfilePtrInput interface {
	pulumi.Input

	ToConsoleProfilePtrOutput() ConsoleProfilePtrOutput
	ToConsoleProfilePtrOutputWithContext(context.Context) ConsoleProfilePtrOutput
}

type consoleProfilePtrType ConsoleProfileArgs

func ConsoleProfilePtr(v *ConsoleProfileArgs) ConsoleProfilePtrInput {
	return (*consoleProfilePtrType)(v)
}

func (*consoleProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsoleProfile)(nil)).Elem()
}

func (i *consoleProfilePtrType) ToConsoleProfilePtrOutput() ConsoleProfilePtrOutput {
	return i.ToConsoleProfilePtrOutputWithContext(context.Background())
}

func (i *consoleProfilePtrType) ToConsoleProfilePtrOutputWithContext(ctx context.Context) ConsoleProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsoleProfilePtrOutput)
}

// ConsoleProfile represents a console profile.
type ConsoleProfileResponse struct {
	// The URL to access the cluster console (immutable).
	Url *string `pulumi:"url"`
}

// ConsoleProfile represents a console profile.
type ConsoleProfileResponseOutput struct{ *pulumi.OutputState }

func (ConsoleProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsoleProfileResponse)(nil)).Elem()
}

func (o ConsoleProfileResponseOutput) ToConsoleProfileResponseOutput() ConsoleProfileResponseOutput {
	return o
}

func (o ConsoleProfileResponseOutput) ToConsoleProfileResponseOutputWithContext(ctx context.Context) ConsoleProfileResponseOutput {
	return o
}

func (o ConsoleProfileResponseOutput) ToConsoleProfileResponsePtrOutput() ConsoleProfileResponsePtrOutput {
	return o.ToConsoleProfileResponsePtrOutputWithContext(context.Background())
}

func (o ConsoleProfileResponseOutput) ToConsoleProfileResponsePtrOutputWithContext(ctx context.Context) ConsoleProfileResponsePtrOutput {
	return o.ApplyT(func(v ConsoleProfileResponse) *ConsoleProfileResponse {
		return &v
	}).(ConsoleProfileResponsePtrOutput)
}

// The URL to access the cluster console (immutable).
func (o ConsoleProfileResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsoleProfileResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ConsoleProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsoleProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsoleProfileResponse)(nil)).Elem()
}

func (o ConsoleProfileResponsePtrOutput) ToConsoleProfileResponsePtrOutput() ConsoleProfileResponsePtrOutput {
	return o
}

func (o ConsoleProfileResponsePtrOutput) ToConsoleProfileResponsePtrOutputWithContext(ctx context.Context) ConsoleProfileResponsePtrOutput {
	return o
}

func (o ConsoleProfileResponsePtrOutput) Elem() ConsoleProfileResponseOutput {
	return o.ApplyT(func(v *ConsoleProfileResponse) ConsoleProfileResponse { return *v }).(ConsoleProfileResponseOutput)
}

// The URL to access the cluster console (immutable).
func (o ConsoleProfileResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsoleProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// IngressProfile represents an ingress profile.
type IngressProfile struct {
	// The IP of the ingress (immutable).
	Ip *string `pulumi:"ip"`
	// The ingress profile name.  Must be "default" (immutable).
	Name *string `pulumi:"name"`
	// Ingress visibility (immutable).
	Visibility *string `pulumi:"visibility"`
}

// IngressProfileInput is an input type that accepts IngressProfileArgs and IngressProfileOutput values.
// You can construct a concrete instance of `IngressProfileInput` via:
//
//          IngressProfileArgs{...}
type IngressProfileInput interface {
	pulumi.Input

	ToIngressProfileOutput() IngressProfileOutput
	ToIngressProfileOutputWithContext(context.Context) IngressProfileOutput
}

// IngressProfile represents an ingress profile.
type IngressProfileArgs struct {
	// The IP of the ingress (immutable).
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ingress profile name.  Must be "default" (immutable).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Ingress visibility (immutable).
	Visibility pulumi.StringPtrInput `pulumi:"visibility"`
}

func (IngressProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressProfile)(nil)).Elem()
}

func (i IngressProfileArgs) ToIngressProfileOutput() IngressProfileOutput {
	return i.ToIngressProfileOutputWithContext(context.Background())
}

func (i IngressProfileArgs) ToIngressProfileOutputWithContext(ctx context.Context) IngressProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressProfileOutput)
}

// IngressProfileArrayInput is an input type that accepts IngressProfileArray and IngressProfileArrayOutput values.
// You can construct a concrete instance of `IngressProfileArrayInput` via:
//
//          IngressProfileArray{ IngressProfileArgs{...} }
type IngressProfileArrayInput interface {
	pulumi.Input

	ToIngressProfileArrayOutput() IngressProfileArrayOutput
	ToIngressProfileArrayOutputWithContext(context.Context) IngressProfileArrayOutput
}

type IngressProfileArray []IngressProfileInput

func (IngressProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IngressProfile)(nil)).Elem()
}

func (i IngressProfileArray) ToIngressProfileArrayOutput() IngressProfileArrayOutput {
	return i.ToIngressProfileArrayOutputWithContext(context.Background())
}

func (i IngressProfileArray) ToIngressProfileArrayOutputWithContext(ctx context.Context) IngressProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressProfileArrayOutput)
}

// IngressProfile represents an ingress profile.
type IngressProfileResponse struct {
	// The IP of the ingress (immutable).
	Ip *string `pulumi:"ip"`
	// The ingress profile name.  Must be "default" (immutable).
	Name *string `pulumi:"name"`
	// Ingress visibility (immutable).
	Visibility *string `pulumi:"visibility"`
}

// IngressProfile represents an ingress profile.
type IngressProfileResponseOutput struct{ *pulumi.OutputState }

func (IngressProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressProfileResponse)(nil)).Elem()
}

func (o IngressProfileResponseOutput) ToIngressProfileResponseOutput() IngressProfileResponseOutput {
	return o
}

func (o IngressProfileResponseOutput) ToIngressProfileResponseOutputWithContext(ctx context.Context) IngressProfileResponseOutput {
	return o
}

// The IP of the ingress (immutable).
func (o IngressProfileResponseOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressProfileResponse) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ingress profile name.  Must be "default" (immutable).
func (o IngressProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Ingress visibility (immutable).
func (o IngressProfileResponseOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressProfileResponse) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

type IngressProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IngressProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IngressProfileResponse)(nil)).Elem()
}

func (o IngressProfileResponseArrayOutput) ToIngressProfileResponseArrayOutput() IngressProfileResponseArrayOutput {
	return o
}

func (o IngressProfileResponseArrayOutput) ToIngressProfileResponseArrayOutputWithContext(ctx context.Context) IngressProfileResponseArrayOutput {
	return o
}

func (o IngressProfileResponseArrayOutput) Index(i pulumi.IntInput) IngressProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IngressProfileResponse {
		return vs[0].([]IngressProfileResponse)[vs[1].(int)]
	}).(IngressProfileResponseOutput)
}

// MasterProfile represents a master profile.
type MasterProfile struct {
	// The Azure resource ID of the master subnet (immutable).
	SubnetId *string `pulumi:"subnetId"`
	// The size of the master VMs (immutable).
	VmSize *string `pulumi:"vmSize"`
}

// MasterProfileInput is an input type that accepts MasterProfileArgs and MasterProfileOutput values.
// You can construct a concrete instance of `MasterProfileInput` via:
//
//          MasterProfileArgs{...}
type MasterProfileInput interface {
	pulumi.Input

	ToMasterProfileOutput() MasterProfileOutput
	ToMasterProfileOutputWithContext(context.Context) MasterProfileOutput
}

// MasterProfile represents a master profile.
type MasterProfileArgs struct {
	// The Azure resource ID of the master subnet (immutable).
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The size of the master VMs (immutable).
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (MasterProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterProfile)(nil)).Elem()
}

func (i MasterProfileArgs) ToMasterProfileOutput() MasterProfileOutput {
	return i.ToMasterProfileOutputWithContext(context.Background())
}

func (i MasterProfileArgs) ToMasterProfileOutputWithContext(ctx context.Context) MasterProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterProfileOutput)
}

func (i MasterProfileArgs) ToMasterProfilePtrOutput() MasterProfilePtrOutput {
	return i.ToMasterProfilePtrOutputWithContext(context.Background())
}

func (i MasterProfileArgs) ToMasterProfilePtrOutputWithContext(ctx context.Context) MasterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterProfileOutput).ToMasterProfilePtrOutputWithContext(ctx)
}

// MasterProfilePtrInput is an input type that accepts MasterProfileArgs, MasterProfilePtr and MasterProfilePtrOutput values.
// You can construct a concrete instance of `MasterProfilePtrInput` via:
//
//          MasterProfileArgs{...}
//
//  or:
//
//          nil
type MasterProfilePtrInput interface {
	pulumi.Input

	ToMasterProfilePtrOutput() MasterProfilePtrOutput
	ToMasterProfilePtrOutputWithContext(context.Context) MasterProfilePtrOutput
}

type masterProfilePtrType MasterProfileArgs

func MasterProfilePtr(v *MasterProfileArgs) MasterProfilePtrInput {
	return (*masterProfilePtrType)(v)
}

func (*masterProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MasterProfile)(nil)).Elem()
}

func (i *masterProfilePtrType) ToMasterProfilePtrOutput() MasterProfilePtrOutput {
	return i.ToMasterProfilePtrOutputWithContext(context.Background())
}

func (i *masterProfilePtrType) ToMasterProfilePtrOutputWithContext(ctx context.Context) MasterProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MasterProfilePtrOutput)
}

// MasterProfile represents a master profile.
type MasterProfileResponse struct {
	// The Azure resource ID of the master subnet (immutable).
	SubnetId *string `pulumi:"subnetId"`
	// The size of the master VMs (immutable).
	VmSize *string `pulumi:"vmSize"`
}

// MasterProfile represents a master profile.
type MasterProfileResponseOutput struct{ *pulumi.OutputState }

func (MasterProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterProfileResponse)(nil)).Elem()
}

func (o MasterProfileResponseOutput) ToMasterProfileResponseOutput() MasterProfileResponseOutput {
	return o
}

func (o MasterProfileResponseOutput) ToMasterProfileResponseOutputWithContext(ctx context.Context) MasterProfileResponseOutput {
	return o
}

func (o MasterProfileResponseOutput) ToMasterProfileResponsePtrOutput() MasterProfileResponsePtrOutput {
	return o.ToMasterProfileResponsePtrOutputWithContext(context.Background())
}

func (o MasterProfileResponseOutput) ToMasterProfileResponsePtrOutputWithContext(ctx context.Context) MasterProfileResponsePtrOutput {
	return o.ApplyT(func(v MasterProfileResponse) *MasterProfileResponse {
		return &v
	}).(MasterProfileResponsePtrOutput)
}

// The Azure resource ID of the master subnet (immutable).
func (o MasterProfileResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterProfileResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The size of the master VMs (immutable).
func (o MasterProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type MasterProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (MasterProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MasterProfileResponse)(nil)).Elem()
}

func (o MasterProfileResponsePtrOutput) ToMasterProfileResponsePtrOutput() MasterProfileResponsePtrOutput {
	return o
}

func (o MasterProfileResponsePtrOutput) ToMasterProfileResponsePtrOutputWithContext(ctx context.Context) MasterProfileResponsePtrOutput {
	return o
}

func (o MasterProfileResponsePtrOutput) Elem() MasterProfileResponseOutput {
	return o.ApplyT(func(v *MasterProfileResponse) MasterProfileResponse { return *v }).(MasterProfileResponseOutput)
}

// The Azure resource ID of the master subnet (immutable).
func (o MasterProfileResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The size of the master VMs (immutable).
func (o MasterProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MasterProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// NetworkProfile represents a network profile.
type NetworkProfile struct {
	// The CIDR used for OpenShift/Kubernetes Pods (immutable).
	PodCidr *string `pulumi:"podCidr"`
	// The CIDR used for OpenShift/Kubernetes Services (immutable).
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//          NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// NetworkProfile represents a network profile.
type NetworkProfileArgs struct {
	// The CIDR used for OpenShift/Kubernetes Pods (immutable).
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// The CIDR used for OpenShift/Kubernetes Services (immutable).
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//          NetworkProfileArgs{...}
//
//  or:
//
//          nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// NetworkProfile represents a network profile.
type NetworkProfileResponse struct {
	// The CIDR used for OpenShift/Kubernetes Pods (immutable).
	PodCidr *string `pulumi:"podCidr"`
	// The CIDR used for OpenShift/Kubernetes Services (immutable).
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// NetworkProfile represents a network profile.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o.ToNetworkProfileResponsePtrOutputWithContext(context.Background())
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *NetworkProfileResponse {
		return &v
	}).(NetworkProfileResponsePtrOutput)
}

// The CIDR used for OpenShift/Kubernetes Pods (immutable).
func (o NetworkProfileResponseOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// The CIDR used for OpenShift/Kubernetes Services (immutable).
func (o NetworkProfileResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse { return *v }).(NetworkProfileResponseOutput)
}

// The CIDR used for OpenShift/Kubernetes Pods (immutable).
func (o NetworkProfileResponsePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// The CIDR used for OpenShift/Kubernetes Services (immutable).
func (o NetworkProfileResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// ServicePrincipalProfile represents a service principal profile.
type ServicePrincipalProfile struct {
	// The client ID used for the cluster (immutable).
	ClientId *string `pulumi:"clientId"`
	// The client secret used for the cluster (immutable).
	ClientSecret *string `pulumi:"clientSecret"`
}

// ServicePrincipalProfileInput is an input type that accepts ServicePrincipalProfileArgs and ServicePrincipalProfileOutput values.
// You can construct a concrete instance of `ServicePrincipalProfileInput` via:
//
//          ServicePrincipalProfileArgs{...}
type ServicePrincipalProfileInput interface {
	pulumi.Input

	ToServicePrincipalProfileOutput() ServicePrincipalProfileOutput
	ToServicePrincipalProfileOutputWithContext(context.Context) ServicePrincipalProfileOutput
}

// ServicePrincipalProfile represents a service principal profile.
type ServicePrincipalProfileArgs struct {
	// The client ID used for the cluster (immutable).
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret used for the cluster (immutable).
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (ServicePrincipalProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProfile)(nil)).Elem()
}

func (i ServicePrincipalProfileArgs) ToServicePrincipalProfileOutput() ServicePrincipalProfileOutput {
	return i.ToServicePrincipalProfileOutputWithContext(context.Background())
}

func (i ServicePrincipalProfileArgs) ToServicePrincipalProfileOutputWithContext(ctx context.Context) ServicePrincipalProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalProfileOutput)
}

func (i ServicePrincipalProfileArgs) ToServicePrincipalProfilePtrOutput() ServicePrincipalProfilePtrOutput {
	return i.ToServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i ServicePrincipalProfileArgs) ToServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalProfileOutput).ToServicePrincipalProfilePtrOutputWithContext(ctx)
}

// ServicePrincipalProfilePtrInput is an input type that accepts ServicePrincipalProfileArgs, ServicePrincipalProfilePtr and ServicePrincipalProfilePtrOutput values.
// You can construct a concrete instance of `ServicePrincipalProfilePtrInput` via:
//
//          ServicePrincipalProfileArgs{...}
//
//  or:
//
//          nil
type ServicePrincipalProfilePtrInput interface {
	pulumi.Input

	ToServicePrincipalProfilePtrOutput() ServicePrincipalProfilePtrOutput
	ToServicePrincipalProfilePtrOutputWithContext(context.Context) ServicePrincipalProfilePtrOutput
}

type servicePrincipalProfilePtrType ServicePrincipalProfileArgs

func ServicePrincipalProfilePtr(v *ServicePrincipalProfileArgs) ServicePrincipalProfilePtrInput {
	return (*servicePrincipalProfilePtrType)(v)
}

func (*servicePrincipalProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalProfile)(nil)).Elem()
}

func (i *servicePrincipalProfilePtrType) ToServicePrincipalProfilePtrOutput() ServicePrincipalProfilePtrOutput {
	return i.ToServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i *servicePrincipalProfilePtrType) ToServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalProfilePtrOutput)
}

// ServicePrincipalProfile represents a service principal profile.
type ServicePrincipalProfileResponse struct {
	// The client ID used for the cluster (immutable).
	ClientId *string `pulumi:"clientId"`
	// The client secret used for the cluster (immutable).
	ClientSecret *string `pulumi:"clientSecret"`
}

// ServicePrincipalProfile represents a service principal profile.
type ServicePrincipalProfileResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ServicePrincipalProfileResponseOutput) ToServicePrincipalProfileResponseOutput() ServicePrincipalProfileResponseOutput {
	return o
}

func (o ServicePrincipalProfileResponseOutput) ToServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ServicePrincipalProfileResponseOutput {
	return o
}

func (o ServicePrincipalProfileResponseOutput) ToServicePrincipalProfileResponsePtrOutput() ServicePrincipalProfileResponsePtrOutput {
	return o.ToServicePrincipalProfileResponsePtrOutputWithContext(context.Background())
}

func (o ServicePrincipalProfileResponseOutput) ToServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v ServicePrincipalProfileResponse) *ServicePrincipalProfileResponse {
		return &v
	}).(ServicePrincipalProfileResponsePtrOutput)
}

// The client ID used for the cluster (immutable).
func (o ServicePrincipalProfileResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalProfileResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret used for the cluster (immutable).
func (o ServicePrincipalProfileResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalProfileResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type ServicePrincipalProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ServicePrincipalProfileResponsePtrOutput) ToServicePrincipalProfileResponsePtrOutput() ServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ServicePrincipalProfileResponsePtrOutput) ToServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ServicePrincipalProfileResponsePtrOutput) Elem() ServicePrincipalProfileResponseOutput {
	return o.ApplyT(func(v *ServicePrincipalProfileResponse) ServicePrincipalProfileResponse { return *v }).(ServicePrincipalProfileResponseOutput)
}

// The client ID used for the cluster (immutable).
func (o ServicePrincipalProfileResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret used for the cluster (immutable).
func (o ServicePrincipalProfileResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// WorkerProfile represents a worker profile.
type WorkerProfile struct {
	// The number of worker VMs.  Must be between 3 and 20 (immutable).
	Count *int `pulumi:"count"`
	// The disk size of the worker VMs.  Must be 128 or greater (immutable).
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The worker profile name.  Must be "worker" (immutable).
	Name *string `pulumi:"name"`
	// The Azure resource ID of the worker subnet (immutable).
	SubnetId *string `pulumi:"subnetId"`
	// The size of the worker VMs (immutable).
	VmSize *string `pulumi:"vmSize"`
}

// WorkerProfileInput is an input type that accepts WorkerProfileArgs and WorkerProfileOutput values.
// You can construct a concrete instance of `WorkerProfileInput` via:
//
//          WorkerProfileArgs{...}
type WorkerProfileInput interface {
	pulumi.Input

	ToWorkerProfileOutput() WorkerProfileOutput
	ToWorkerProfileOutputWithContext(context.Context) WorkerProfileOutput
}

// WorkerProfile represents a worker profile.
type WorkerProfileArgs struct {
	// The number of worker VMs.  Must be between 3 and 20 (immutable).
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The disk size of the worker VMs.  Must be 128 or greater (immutable).
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// The worker profile name.  Must be "worker" (immutable).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Azure resource ID of the worker subnet (immutable).
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The size of the worker VMs (immutable).
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

func (WorkerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerProfile)(nil)).Elem()
}

func (i WorkerProfileArgs) ToWorkerProfileOutput() WorkerProfileOutput {
	return i.ToWorkerProfileOutputWithContext(context.Background())
}

func (i WorkerProfileArgs) ToWorkerProfileOutputWithContext(ctx context.Context) WorkerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerProfileOutput)
}

// WorkerProfileArrayInput is an input type that accepts WorkerProfileArray and WorkerProfileArrayOutput values.
// You can construct a concrete instance of `WorkerProfileArrayInput` via:
//
//          WorkerProfileArray{ WorkerProfileArgs{...} }
type WorkerProfileArrayInput interface {
	pulumi.Input

	ToWorkerProfileArrayOutput() WorkerProfileArrayOutput
	ToWorkerProfileArrayOutputWithContext(context.Context) WorkerProfileArrayOutput
}

type WorkerProfileArray []WorkerProfileInput

func (WorkerProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerProfile)(nil)).Elem()
}

func (i WorkerProfileArray) ToWorkerProfileArrayOutput() WorkerProfileArrayOutput {
	return i.ToWorkerProfileArrayOutputWithContext(context.Background())
}

func (i WorkerProfileArray) ToWorkerProfileArrayOutputWithContext(ctx context.Context) WorkerProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerProfileArrayOutput)
}

// WorkerProfile represents a worker profile.
type WorkerProfileResponse struct {
	// The number of worker VMs.  Must be between 3 and 20 (immutable).
	Count *int `pulumi:"count"`
	// The disk size of the worker VMs.  Must be 128 or greater (immutable).
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The worker profile name.  Must be "worker" (immutable).
	Name *string `pulumi:"name"`
	// The Azure resource ID of the worker subnet (immutable).
	SubnetId *string `pulumi:"subnetId"`
	// The size of the worker VMs (immutable).
	VmSize *string `pulumi:"vmSize"`
}

// WorkerProfile represents a worker profile.
type WorkerProfileResponseOutput struct{ *pulumi.OutputState }

func (WorkerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerProfileResponse)(nil)).Elem()
}

func (o WorkerProfileResponseOutput) ToWorkerProfileResponseOutput() WorkerProfileResponseOutput {
	return o
}

func (o WorkerProfileResponseOutput) ToWorkerProfileResponseOutputWithContext(ctx context.Context) WorkerProfileResponseOutput {
	return o
}

// The number of worker VMs.  Must be between 3 and 20 (immutable).
func (o WorkerProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The disk size of the worker VMs.  Must be 128 or greater (immutable).
func (o WorkerProfileResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkerProfileResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// The worker profile name.  Must be "worker" (immutable).
func (o WorkerProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Azure resource ID of the worker subnet (immutable).
func (o WorkerProfileResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerProfileResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The size of the worker VMs (immutable).
func (o WorkerProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkerProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type WorkerProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkerProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerProfileResponse)(nil)).Elem()
}

func (o WorkerProfileResponseArrayOutput) ToWorkerProfileResponseArrayOutput() WorkerProfileResponseArrayOutput {
	return o
}

func (o WorkerProfileResponseArrayOutput) ToWorkerProfileResponseArrayOutputWithContext(ctx context.Context) WorkerProfileResponseArrayOutput {
	return o
}

func (o WorkerProfileResponseArrayOutput) Index(i pulumi.IntInput) WorkerProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerProfileResponse {
		return vs[0].([]WorkerProfileResponse)[vs[1].(int)]
	}).(WorkerProfileResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(APIServerProfileOutput{})
	pulumi.RegisterOutputType(APIServerProfilePtrOutput{})
	pulumi.RegisterOutputType(APIServerProfileResponseOutput{})
	pulumi.RegisterOutputType(APIServerProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterProfileOutput{})
	pulumi.RegisterOutputType(ClusterProfilePtrOutput{})
	pulumi.RegisterOutputType(ClusterProfileResponseOutput{})
	pulumi.RegisterOutputType(ClusterProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsoleProfileOutput{})
	pulumi.RegisterOutputType(ConsoleProfilePtrOutput{})
	pulumi.RegisterOutputType(ConsoleProfileResponseOutput{})
	pulumi.RegisterOutputType(ConsoleProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressProfileOutput{})
	pulumi.RegisterOutputType(IngressProfileArrayOutput{})
	pulumi.RegisterOutputType(IngressProfileResponseOutput{})
	pulumi.RegisterOutputType(IngressProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(MasterProfileOutput{})
	pulumi.RegisterOutputType(MasterProfilePtrOutput{})
	pulumi.RegisterOutputType(MasterProfileResponseOutput{})
	pulumi.RegisterOutputType(MasterProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalProfileOutput{})
	pulumi.RegisterOutputType(ServicePrincipalProfilePtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalProfileResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkerProfileOutput{})
	pulumi.RegisterOutputType(WorkerProfileArrayOutput{})
	pulumi.RegisterOutputType(WorkerProfileResponseOutput{})
	pulumi.RegisterOutputType(WorkerProfileResponseArrayOutput{})
}
