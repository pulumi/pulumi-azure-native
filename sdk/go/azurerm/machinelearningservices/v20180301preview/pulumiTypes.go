// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Machine Learning compute object.
type Compute struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	ComputeType string `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// ARM resource id of the compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeInput is an input type that accepts ComputeArgs and ComputeOutput values.
// You can construct a concrete instance of `ComputeInput` via:
//
//          ComputeArgs{...}
type ComputeInput interface {
	pulumi.Input

	ToComputeOutput() ComputeOutput
	ToComputeOutputWithContext(context.Context) ComputeOutput
}

// Machine Learning compute object.
type ComputeArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// ARM resource id of the compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Compute)(nil)).Elem()
}

func (i ComputeArgs) ToComputeOutput() ComputeOutput {
	return i.ToComputeOutputWithContext(context.Background())
}

func (i ComputeArgs) ToComputeOutputWithContext(ctx context.Context) ComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeOutput)
}

func (i ComputeArgs) ToComputePtrOutput() ComputePtrOutput {
	return i.ToComputePtrOutputWithContext(context.Background())
}

func (i ComputeArgs) ToComputePtrOutputWithContext(ctx context.Context) ComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeOutput).ToComputePtrOutputWithContext(ctx)
}

// ComputePtrInput is an input type that accepts ComputeArgs, ComputePtr and ComputePtrOutput values.
// You can construct a concrete instance of `ComputePtrInput` via:
//
//          ComputeArgs{...}
//
//  or:
//
//          nil
type ComputePtrInput interface {
	pulumi.Input

	ToComputePtrOutput() ComputePtrOutput
	ToComputePtrOutputWithContext(context.Context) ComputePtrOutput
}

type computePtrType ComputeArgs

func ComputePtr(v *ComputeArgs) ComputePtrInput {
	return (*computePtrType)(v)
}

func (*computePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Compute)(nil)).Elem()
}

func (i *computePtrType) ToComputePtrOutput() ComputePtrOutput {
	return i.ToComputePtrOutputWithContext(context.Background())
}

func (i *computePtrType) ToComputePtrOutputWithContext(ctx context.Context) ComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputePtrOutput)
}

// Machine Learning compute object.
type ComputeOutput struct{ *pulumi.OutputState }

func (ComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Compute)(nil)).Elem()
}

func (o ComputeOutput) ToComputeOutput() ComputeOutput {
	return o
}

func (o ComputeOutput) ToComputeOutputWithContext(ctx context.Context) ComputeOutput {
	return o
}

func (o ComputeOutput) ToComputePtrOutput() ComputePtrOutput {
	return o.ToComputePtrOutputWithContext(context.Background())
}

func (o ComputeOutput) ToComputePtrOutputWithContext(ctx context.Context) ComputePtrOutput {
	return o.ApplyT(func(v Compute) *Compute {
		return &v
	}).(ComputePtrOutput)
}

// Location for the underlying compute
func (o ComputeOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Compute) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
func (o ComputeOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v Compute) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Compute) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARM resource id of the compute
func (o ComputeOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Compute) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputePtrOutput struct{ *pulumi.OutputState }

func (ComputePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Compute)(nil)).Elem()
}

func (o ComputePtrOutput) ToComputePtrOutput() ComputePtrOutput {
	return o
}

func (o ComputePtrOutput) ToComputePtrOutputWithContext(ctx context.Context) ComputePtrOutput {
	return o
}

func (o ComputePtrOutput) Elem() ComputeOutput {
	return o.ApplyT(func(v *Compute) Compute { return *v }).(ComputeOutput)
}

// Location for the underlying compute
func (o ComputePtrOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Compute) *string {
		if v == nil {
			return nil
		}
		return v.ComputeLocation
	}).(pulumi.StringPtrOutput)
}

// The type of compute
func (o ComputePtrOutput) ComputeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Compute) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(pulumi.StringPtrOutput)
}

// The description of the Machine Learning compute.
func (o ComputePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Compute) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// ARM resource id of the compute
func (o ComputePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Compute) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Machine Learning compute object.
type ComputeResponse struct {
	// Location for the underlying compute
	ComputeLocation *string `pulumi:"computeLocation"`
	// The type of compute
	ComputeType string `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn string `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description *string `pulumi:"description"`
	// The date and time when the compute was last modified.
	ModifiedOn string `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors []MachineLearningServiceErrorResponse `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState string `pulumi:"provisioningState"`
	// ARM resource id of the compute
	ResourceId *string `pulumi:"resourceId"`
}

// ComputeResponseInput is an input type that accepts ComputeResponseArgs and ComputeResponseOutput values.
// You can construct a concrete instance of `ComputeResponseInput` via:
//
//          ComputeResponseArgs{...}
type ComputeResponseInput interface {
	pulumi.Input

	ToComputeResponseOutput() ComputeResponseOutput
	ToComputeResponseOutputWithContext(context.Context) ComputeResponseOutput
}

// Machine Learning compute object.
type ComputeResponseArgs struct {
	// Location for the underlying compute
	ComputeLocation pulumi.StringPtrInput `pulumi:"computeLocation"`
	// The type of compute
	ComputeType pulumi.StringInput `pulumi:"computeType"`
	// The date and time when the compute was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// The description of the Machine Learning compute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The date and time when the compute was last modified.
	ModifiedOn pulumi.StringInput `pulumi:"modifiedOn"`
	// Errors during provisioning
	ProvisioningErrors MachineLearningServiceErrorResponseArrayInput `pulumi:"provisioningErrors"`
	// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// ARM resource id of the compute
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ComputeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeResponse)(nil)).Elem()
}

func (i ComputeResponseArgs) ToComputeResponseOutput() ComputeResponseOutput {
	return i.ToComputeResponseOutputWithContext(context.Background())
}

func (i ComputeResponseArgs) ToComputeResponseOutputWithContext(ctx context.Context) ComputeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResponseOutput)
}

func (i ComputeResponseArgs) ToComputeResponsePtrOutput() ComputeResponsePtrOutput {
	return i.ToComputeResponsePtrOutputWithContext(context.Background())
}

func (i ComputeResponseArgs) ToComputeResponsePtrOutputWithContext(ctx context.Context) ComputeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResponseOutput).ToComputeResponsePtrOutputWithContext(ctx)
}

// ComputeResponsePtrInput is an input type that accepts ComputeResponseArgs, ComputeResponsePtr and ComputeResponsePtrOutput values.
// You can construct a concrete instance of `ComputeResponsePtrInput` via:
//
//          ComputeResponseArgs{...}
//
//  or:
//
//          nil
type ComputeResponsePtrInput interface {
	pulumi.Input

	ToComputeResponsePtrOutput() ComputeResponsePtrOutput
	ToComputeResponsePtrOutputWithContext(context.Context) ComputeResponsePtrOutput
}

type computeResponsePtrType ComputeResponseArgs

func ComputeResponsePtr(v *ComputeResponseArgs) ComputeResponsePtrInput {
	return (*computeResponsePtrType)(v)
}

func (*computeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResponse)(nil)).Elem()
}

func (i *computeResponsePtrType) ToComputeResponsePtrOutput() ComputeResponsePtrOutput {
	return i.ToComputeResponsePtrOutputWithContext(context.Background())
}

func (i *computeResponsePtrType) ToComputeResponsePtrOutputWithContext(ctx context.Context) ComputeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResponsePtrOutput)
}

// Machine Learning compute object.
type ComputeResponseOutput struct{ *pulumi.OutputState }

func (ComputeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeResponse)(nil)).Elem()
}

func (o ComputeResponseOutput) ToComputeResponseOutput() ComputeResponseOutput {
	return o
}

func (o ComputeResponseOutput) ToComputeResponseOutputWithContext(ctx context.Context) ComputeResponseOutput {
	return o
}

func (o ComputeResponseOutput) ToComputeResponsePtrOutput() ComputeResponsePtrOutput {
	return o.ToComputeResponsePtrOutputWithContext(context.Background())
}

func (o ComputeResponseOutput) ToComputeResponsePtrOutputWithContext(ctx context.Context) ComputeResponsePtrOutput {
	return o.ApplyT(func(v ComputeResponse) *ComputeResponse {
		return &v
	}).(ComputeResponsePtrOutput)
}

// Location for the underlying compute
func (o ComputeResponseOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeResponse) *string { return v.ComputeLocation }).(pulumi.StringPtrOutput)
}

// The type of compute
func (o ComputeResponseOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeResponse) string { return v.ComputeType }).(pulumi.StringOutput)
}

// The date and time when the compute was created.
func (o ComputeResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of the Machine Learning compute.
func (o ComputeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The date and time when the compute was last modified.
func (o ComputeResponseOutput) ModifiedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeResponse) string { return v.ModifiedOn }).(pulumi.StringOutput)
}

// Errors during provisioning
func (o ComputeResponseOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v ComputeResponse) []MachineLearningServiceErrorResponse { return v.ProvisioningErrors }).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o ComputeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// ARM resource id of the compute
func (o ComputeResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ComputeResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResponse)(nil)).Elem()
}

func (o ComputeResponsePtrOutput) ToComputeResponsePtrOutput() ComputeResponsePtrOutput {
	return o
}

func (o ComputeResponsePtrOutput) ToComputeResponsePtrOutputWithContext(ctx context.Context) ComputeResponsePtrOutput {
	return o
}

func (o ComputeResponsePtrOutput) Elem() ComputeResponseOutput {
	return o.ApplyT(func(v *ComputeResponse) ComputeResponse { return *v }).(ComputeResponseOutput)
}

// Location for the underlying compute
func (o ComputeResponsePtrOutput) ComputeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputeLocation
	}).(pulumi.StringPtrOutput)
}

// The type of compute
func (o ComputeResponsePtrOutput) ComputeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(pulumi.StringPtrOutput)
}

// The date and time when the compute was created.
func (o ComputeResponsePtrOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedOn
	}).(pulumi.StringPtrOutput)
}

// The description of the Machine Learning compute.
func (o ComputeResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The date and time when the compute was last modified.
func (o ComputeResponsePtrOutput) ModifiedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ModifiedOn
	}).(pulumi.StringPtrOutput)
}

// Errors during provisioning
func (o ComputeResponsePtrOutput) ProvisioningErrors() MachineLearningServiceErrorResponseArrayOutput {
	return o.ApplyT(func(v *ComputeResponse) []MachineLearningServiceErrorResponse {
		if v == nil {
			return nil
		}
		return v.ProvisioningErrors
	}).(MachineLearningServiceErrorResponseArrayOutput)
}

// The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
func (o ComputeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// ARM resource id of the compute
func (o ComputeResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Error detail information.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorDetailResponseInput is an input type that accepts ErrorDetailResponseArgs and ErrorDetailResponseOutput values.
// You can construct a concrete instance of `ErrorDetailResponseInput` via:
//
//          ErrorDetailResponseArgs{...}
type ErrorDetailResponseInput interface {
	pulumi.Input

	ToErrorDetailResponseOutput() ErrorDetailResponseOutput
	ToErrorDetailResponseOutputWithContext(context.Context) ErrorDetailResponseOutput
}

// Error detail information.
type ErrorDetailResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorDetailResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return i.ToErrorDetailResponseOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArgs) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseOutput)
}

// ErrorDetailResponseArrayInput is an input type that accepts ErrorDetailResponseArray and ErrorDetailResponseArrayOutput values.
// You can construct a concrete instance of `ErrorDetailResponseArrayInput` via:
//
//          ErrorDetailResponseArray{ ErrorDetailResponseArgs{...} }
type ErrorDetailResponseArrayInput interface {
	pulumi.Input

	ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput
	ToErrorDetailResponseArrayOutputWithContext(context.Context) ErrorDetailResponseArrayOutput
}

type ErrorDetailResponseArray []ErrorDetailResponseInput

func (ErrorDetailResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return i.ToErrorDetailResponseArrayOutputWithContext(context.Background())
}

func (i ErrorDetailResponseArray) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailResponseArrayOutput)
}

// Error detail information.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Error response information.
type ErrorResponseResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// An array of error detail objects.
	Details []ErrorDetailResponse `pulumi:"details"`
	// Error message.
	Message string `pulumi:"message"`
}

// ErrorResponseResponseInput is an input type that accepts ErrorResponseResponseArgs and ErrorResponseResponseOutput values.
// You can construct a concrete instance of `ErrorResponseResponseInput` via:
//
//          ErrorResponseResponseArgs{...}
type ErrorResponseResponseInput interface {
	pulumi.Input

	ToErrorResponseResponseOutput() ErrorResponseResponseOutput
	ToErrorResponseResponseOutputWithContext(context.Context) ErrorResponseResponseOutput
}

// Error response information.
type ErrorResponseResponseArgs struct {
	// Error code.
	Code pulumi.StringInput `pulumi:"code"`
	// An array of error detail objects.
	Details ErrorDetailResponseArrayInput `pulumi:"details"`
	// Error message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (ErrorResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return i.ToErrorResponseResponseOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput)
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i ErrorResponseResponseArgs) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponseOutput).ToErrorResponseResponsePtrOutputWithContext(ctx)
}

// ErrorResponseResponsePtrInput is an input type that accepts ErrorResponseResponseArgs, ErrorResponseResponsePtr and ErrorResponseResponsePtrOutput values.
// You can construct a concrete instance of `ErrorResponseResponsePtrInput` via:
//
//          ErrorResponseResponseArgs{...}
//
//  or:
//
//          nil
type ErrorResponseResponsePtrInput interface {
	pulumi.Input

	ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput
	ToErrorResponseResponsePtrOutputWithContext(context.Context) ErrorResponseResponsePtrOutput
}

type errorResponseResponsePtrType ErrorResponseResponseArgs

func ErrorResponseResponsePtr(v *ErrorResponseResponseArgs) ErrorResponseResponsePtrInput {
	return (*errorResponseResponsePtrType)(v)
}

func (*errorResponseResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return i.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (i *errorResponseResponsePtrType) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorResponseResponsePtrOutput)
}

// Error response information.
type ErrorResponseResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutput() ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponseOutputWithContext(ctx context.Context) ErrorResponseResponseOutput {
	return o
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o.ToErrorResponseResponsePtrOutputWithContext(context.Background())
}

func (o ErrorResponseResponseOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v ErrorResponseResponse) *ErrorResponseResponse {
		return &v
	}).(ErrorResponseResponsePtrOutput)
}

// Error code.
func (o ErrorResponseResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Code }).(pulumi.StringOutput)
}

// An array of error detail objects.
func (o ErrorResponseResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorResponseResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ErrorResponseResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorResponseResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ErrorResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorResponseResponse)(nil)).Elem()
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutput() ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) ToErrorResponseResponsePtrOutputWithContext(ctx context.Context) ErrorResponseResponsePtrOutput {
	return o
}

func (o ErrorResponseResponsePtrOutput) Elem() ErrorResponseResponseOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) ErrorResponseResponse { return *v }).(ErrorResponseResponseOutput)
}

// Error code.
func (o ErrorResponseResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// An array of error detail objects.
func (o ErrorResponseResponsePtrOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) []ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ErrorDetailResponseArrayOutput)
}

// Error message.
func (o ErrorResponseResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorResponseResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponse struct {
	// The error response.
	Error *ErrorResponseResponse `pulumi:"error"`
}

// MachineLearningServiceErrorResponseInput is an input type that accepts MachineLearningServiceErrorResponseArgs and MachineLearningServiceErrorResponseOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseInput` via:
//
//          MachineLearningServiceErrorResponseArgs{...}
type MachineLearningServiceErrorResponseInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput
	ToMachineLearningServiceErrorResponseOutputWithContext(context.Context) MachineLearningServiceErrorResponseOutput
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponseArgs struct {
	// The error response.
	Error ErrorResponseResponsePtrInput `pulumi:"error"`
}

func (MachineLearningServiceErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return i.ToMachineLearningServiceErrorResponseOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArgs) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseOutput)
}

// MachineLearningServiceErrorResponseArrayInput is an input type that accepts MachineLearningServiceErrorResponseArray and MachineLearningServiceErrorResponseArrayOutput values.
// You can construct a concrete instance of `MachineLearningServiceErrorResponseArrayInput` via:
//
//          MachineLearningServiceErrorResponseArray{ MachineLearningServiceErrorResponseArgs{...} }
type MachineLearningServiceErrorResponseArrayInput interface {
	pulumi.Input

	ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput
	ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Context) MachineLearningServiceErrorResponseArrayOutput
}

type MachineLearningServiceErrorResponseArray []MachineLearningServiceErrorResponseInput

func (MachineLearningServiceErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return i.ToMachineLearningServiceErrorResponseArrayOutputWithContext(context.Background())
}

func (i MachineLearningServiceErrorResponseArray) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineLearningServiceErrorResponseArrayOutput)
}

// Wrapper for error response to follow ARM guidelines.
type MachineLearningServiceErrorResponseOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutput() MachineLearningServiceErrorResponseOutput {
	return o
}

func (o MachineLearningServiceErrorResponseOutput) ToMachineLearningServiceErrorResponseOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseOutput {
	return o
}

// The error response.
func (o MachineLearningServiceErrorResponseOutput) Error() ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v MachineLearningServiceErrorResponse) *ErrorResponseResponse { return v.Error }).(ErrorResponseResponsePtrOutput)
}

type MachineLearningServiceErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (MachineLearningServiceErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineLearningServiceErrorResponse)(nil)).Elem()
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutput() MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) ToMachineLearningServiceErrorResponseArrayOutputWithContext(ctx context.Context) MachineLearningServiceErrorResponseArrayOutput {
	return o
}

func (o MachineLearningServiceErrorResponseArrayOutput) Index(i pulumi.IntInput) MachineLearningServiceErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineLearningServiceErrorResponse {
		return vs[0].([]MachineLearningServiceErrorResponse)[vs[1].(int)]
	}).(MachineLearningServiceErrorResponseOutput)
}

type PasswordResponse struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// PasswordResponseInput is an input type that accepts PasswordResponseArgs and PasswordResponseOutput values.
// You can construct a concrete instance of `PasswordResponseInput` via:
//
//          PasswordResponseArgs{...}
type PasswordResponseInput interface {
	pulumi.Input

	ToPasswordResponseOutput() PasswordResponseOutput
	ToPasswordResponseOutputWithContext(context.Context) PasswordResponseOutput
}

type PasswordResponseArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PasswordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArgs) ToPasswordResponseOutput() PasswordResponseOutput {
	return i.ToPasswordResponseOutputWithContext(context.Background())
}

func (i PasswordResponseArgs) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseOutput)
}

// PasswordResponseArrayInput is an input type that accepts PasswordResponseArray and PasswordResponseArrayOutput values.
// You can construct a concrete instance of `PasswordResponseArrayInput` via:
//
//          PasswordResponseArray{ PasswordResponseArgs{...} }
type PasswordResponseArrayInput interface {
	pulumi.Input

	ToPasswordResponseArrayOutput() PasswordResponseArrayOutput
	ToPasswordResponseArrayOutputWithContext(context.Context) PasswordResponseArrayOutput
}

type PasswordResponseArray []PasswordResponseInput

func (PasswordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return i.ToPasswordResponseArrayOutputWithContext(context.Background())
}

func (i PasswordResponseArray) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PasswordResponseArrayOutput)
}

type PasswordResponseOutput struct{ *pulumi.OutputState }

func (PasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseOutput) ToPasswordResponseOutput() PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) ToPasswordResponseOutputWithContext(ctx context.Context) PasswordResponseOutput {
	return o
}

func (o PasswordResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Name }).(pulumi.StringOutput)
}

func (o PasswordResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PasswordResponse) string { return v.Value }).(pulumi.StringOutput)
}

type PasswordResponseArrayOutput struct{ *pulumi.OutputState }

func (PasswordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PasswordResponse)(nil)).Elem()
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutput() PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) ToPasswordResponseArrayOutputWithContext(ctx context.Context) PasswordResponseArrayOutput {
	return o
}

func (o PasswordResponseArrayOutput) Index(i pulumi.IntInput) PasswordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PasswordResponse {
		return vs[0].([]PasswordResponse)[vs[1].(int)]
	}).(PasswordResponseOutput)
}

type RegistryListCredentialsResultResponse struct {
	Location  string             `pulumi:"location"`
	Passwords []PasswordResponse `pulumi:"passwords"`
	Username  string             `pulumi:"username"`
}

// RegistryListCredentialsResultResponseInput is an input type that accepts RegistryListCredentialsResultResponseArgs and RegistryListCredentialsResultResponseOutput values.
// You can construct a concrete instance of `RegistryListCredentialsResultResponseInput` via:
//
//          RegistryListCredentialsResultResponseArgs{...}
type RegistryListCredentialsResultResponseInput interface {
	pulumi.Input

	ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput
	ToRegistryListCredentialsResultResponseOutputWithContext(context.Context) RegistryListCredentialsResultResponseOutput
}

type RegistryListCredentialsResultResponseArgs struct {
	Location  pulumi.StringInput         `pulumi:"location"`
	Passwords PasswordResponseArrayInput `pulumi:"passwords"`
	Username  pulumi.StringInput         `pulumi:"username"`
}

func (RegistryListCredentialsResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return i.ToRegistryListCredentialsResultResponseOutputWithContext(context.Background())
}

func (i RegistryListCredentialsResultResponseArgs) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryListCredentialsResultResponseOutput)
}

type RegistryListCredentialsResultResponseOutput struct{ *pulumi.OutputState }

func (RegistryListCredentialsResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryListCredentialsResultResponse)(nil)).Elem()
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutput() RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) ToRegistryListCredentialsResultResponseOutputWithContext(ctx context.Context) RegistryListCredentialsResultResponseOutput {
	return o
}

func (o RegistryListCredentialsResultResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Location }).(pulumi.StringOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Passwords() PasswordResponseArrayOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) []PasswordResponse { return v.Passwords }).(PasswordResponseArrayOutput)
}

func (o RegistryListCredentialsResultResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryListCredentialsResultResponse) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ComputeOutput{})
	pulumi.RegisterOutputType(ComputePtrOutput{})
	pulumi.RegisterOutputType(ComputeResponseOutput{})
	pulumi.RegisterOutputType(ComputeResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseOutput{})
	pulumi.RegisterOutputType(MachineLearningServiceErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(PasswordResponseOutput{})
	pulumi.RegisterOutputType(PasswordResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryListCredentialsResultResponseOutput{})
}
