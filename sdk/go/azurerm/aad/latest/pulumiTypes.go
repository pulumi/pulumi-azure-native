// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Container Account Description
type ContainerAccountResponse struct {
	// The account name
	AccountName *string `pulumi:"accountName"`
	// The account password
	Password *string `pulumi:"password"`
	// The account spn
	Spn *string `pulumi:"spn"`
}

// ContainerAccountResponseInput is an input type that accepts ContainerAccountResponseArgs and ContainerAccountResponseOutput values.
// You can construct a concrete instance of `ContainerAccountResponseInput` via:
//
//          ContainerAccountResponseArgs{...}
type ContainerAccountResponseInput interface {
	pulumi.Input

	ToContainerAccountResponseOutput() ContainerAccountResponseOutput
	ToContainerAccountResponseOutputWithContext(context.Context) ContainerAccountResponseOutput
}

// Container Account Description
type ContainerAccountResponseArgs struct {
	// The account name
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The account password
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The account spn
	Spn pulumi.StringPtrInput `pulumi:"spn"`
}

func (ContainerAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerAccountResponse)(nil)).Elem()
}

func (i ContainerAccountResponseArgs) ToContainerAccountResponseOutput() ContainerAccountResponseOutput {
	return i.ToContainerAccountResponseOutputWithContext(context.Background())
}

func (i ContainerAccountResponseArgs) ToContainerAccountResponseOutputWithContext(ctx context.Context) ContainerAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAccountResponseOutput)
}

// ContainerAccountResponseArrayInput is an input type that accepts ContainerAccountResponseArray and ContainerAccountResponseArrayOutput values.
// You can construct a concrete instance of `ContainerAccountResponseArrayInput` via:
//
//          ContainerAccountResponseArray{ ContainerAccountResponseArgs{...} }
type ContainerAccountResponseArrayInput interface {
	pulumi.Input

	ToContainerAccountResponseArrayOutput() ContainerAccountResponseArrayOutput
	ToContainerAccountResponseArrayOutputWithContext(context.Context) ContainerAccountResponseArrayOutput
}

type ContainerAccountResponseArray []ContainerAccountResponseInput

func (ContainerAccountResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerAccountResponse)(nil)).Elem()
}

func (i ContainerAccountResponseArray) ToContainerAccountResponseArrayOutput() ContainerAccountResponseArrayOutput {
	return i.ToContainerAccountResponseArrayOutputWithContext(context.Background())
}

func (i ContainerAccountResponseArray) ToContainerAccountResponseArrayOutputWithContext(ctx context.Context) ContainerAccountResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAccountResponseArrayOutput)
}

// Container Account Description
type ContainerAccountResponseOutput struct{ *pulumi.OutputState }

func (ContainerAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerAccountResponse)(nil)).Elem()
}

func (o ContainerAccountResponseOutput) ToContainerAccountResponseOutput() ContainerAccountResponseOutput {
	return o
}

func (o ContainerAccountResponseOutput) ToContainerAccountResponseOutputWithContext(ctx context.Context) ContainerAccountResponseOutput {
	return o
}

// The account name
func (o ContainerAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The account password
func (o ContainerAccountResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerAccountResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The account spn
func (o ContainerAccountResponseOutput) Spn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerAccountResponse) *string { return v.Spn }).(pulumi.StringPtrOutput)
}

type ContainerAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerAccountResponse)(nil)).Elem()
}

func (o ContainerAccountResponseArrayOutput) ToContainerAccountResponseArrayOutput() ContainerAccountResponseArrayOutput {
	return o
}

func (o ContainerAccountResponseArrayOutput) ToContainerAccountResponseArrayOutputWithContext(ctx context.Context) ContainerAccountResponseArrayOutput {
	return o
}

func (o ContainerAccountResponseArrayOutput) Index(i pulumi.IntInput) ContainerAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerAccountResponse {
		return vs[0].([]ContainerAccountResponse)[vs[1].(int)]
	}).(ContainerAccountResponseOutput)
}

// Domain Security Settings
type DomainSecuritySettings struct {
	// A flag to determine whether or not NtlmV1 is enabled or disabled.
	NtlmV1 *string `pulumi:"ntlmV1"`
	// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
	SyncNtlmPasswords *string `pulumi:"syncNtlmPasswords"`
	// A flag to determine whether or not TlsV1 is enabled or disabled.
	TlsV1 *string `pulumi:"tlsV1"`
}

// DomainSecuritySettingsInput is an input type that accepts DomainSecuritySettingsArgs and DomainSecuritySettingsOutput values.
// You can construct a concrete instance of `DomainSecuritySettingsInput` via:
//
//          DomainSecuritySettingsArgs{...}
type DomainSecuritySettingsInput interface {
	pulumi.Input

	ToDomainSecuritySettingsOutput() DomainSecuritySettingsOutput
	ToDomainSecuritySettingsOutputWithContext(context.Context) DomainSecuritySettingsOutput
}

// Domain Security Settings
type DomainSecuritySettingsArgs struct {
	// A flag to determine whether or not NtlmV1 is enabled or disabled.
	NtlmV1 pulumi.StringPtrInput `pulumi:"ntlmV1"`
	// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
	SyncNtlmPasswords pulumi.StringPtrInput `pulumi:"syncNtlmPasswords"`
	// A flag to determine whether or not TlsV1 is enabled or disabled.
	TlsV1 pulumi.StringPtrInput `pulumi:"tlsV1"`
}

func (DomainSecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSecuritySettings)(nil)).Elem()
}

func (i DomainSecuritySettingsArgs) ToDomainSecuritySettingsOutput() DomainSecuritySettingsOutput {
	return i.ToDomainSecuritySettingsOutputWithContext(context.Background())
}

func (i DomainSecuritySettingsArgs) ToDomainSecuritySettingsOutputWithContext(ctx context.Context) DomainSecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsOutput)
}

func (i DomainSecuritySettingsArgs) ToDomainSecuritySettingsPtrOutput() DomainSecuritySettingsPtrOutput {
	return i.ToDomainSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i DomainSecuritySettingsArgs) ToDomainSecuritySettingsPtrOutputWithContext(ctx context.Context) DomainSecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsOutput).ToDomainSecuritySettingsPtrOutputWithContext(ctx)
}

// DomainSecuritySettingsPtrInput is an input type that accepts DomainSecuritySettingsArgs, DomainSecuritySettingsPtr and DomainSecuritySettingsPtrOutput values.
// You can construct a concrete instance of `DomainSecuritySettingsPtrInput` via:
//
//          DomainSecuritySettingsArgs{...}
//
//  or:
//
//          nil
type DomainSecuritySettingsPtrInput interface {
	pulumi.Input

	ToDomainSecuritySettingsPtrOutput() DomainSecuritySettingsPtrOutput
	ToDomainSecuritySettingsPtrOutputWithContext(context.Context) DomainSecuritySettingsPtrOutput
}

type domainSecuritySettingsPtrType DomainSecuritySettingsArgs

func DomainSecuritySettingsPtr(v *DomainSecuritySettingsArgs) DomainSecuritySettingsPtrInput {
	return (*domainSecuritySettingsPtrType)(v)
}

func (*domainSecuritySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSecuritySettings)(nil)).Elem()
}

func (i *domainSecuritySettingsPtrType) ToDomainSecuritySettingsPtrOutput() DomainSecuritySettingsPtrOutput {
	return i.ToDomainSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *domainSecuritySettingsPtrType) ToDomainSecuritySettingsPtrOutputWithContext(ctx context.Context) DomainSecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsPtrOutput)
}

// Domain Security Settings
type DomainSecuritySettingsOutput struct{ *pulumi.OutputState }

func (DomainSecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSecuritySettings)(nil)).Elem()
}

func (o DomainSecuritySettingsOutput) ToDomainSecuritySettingsOutput() DomainSecuritySettingsOutput {
	return o
}

func (o DomainSecuritySettingsOutput) ToDomainSecuritySettingsOutputWithContext(ctx context.Context) DomainSecuritySettingsOutput {
	return o
}

func (o DomainSecuritySettingsOutput) ToDomainSecuritySettingsPtrOutput() DomainSecuritySettingsPtrOutput {
	return o.ToDomainSecuritySettingsPtrOutputWithContext(context.Background())
}

func (o DomainSecuritySettingsOutput) ToDomainSecuritySettingsPtrOutputWithContext(ctx context.Context) DomainSecuritySettingsPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettings) *DomainSecuritySettings {
		return &v
	}).(DomainSecuritySettingsPtrOutput)
}

// A flag to determine whether or not NtlmV1 is enabled or disabled.
func (o DomainSecuritySettingsOutput) NtlmV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettings) *string { return v.NtlmV1 }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
func (o DomainSecuritySettingsOutput) SyncNtlmPasswords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettings) *string { return v.SyncNtlmPasswords }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not TlsV1 is enabled or disabled.
func (o DomainSecuritySettingsOutput) TlsV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettings) *string { return v.TlsV1 }).(pulumi.StringPtrOutput)
}

type DomainSecuritySettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainSecuritySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSecuritySettings)(nil)).Elem()
}

func (o DomainSecuritySettingsPtrOutput) ToDomainSecuritySettingsPtrOutput() DomainSecuritySettingsPtrOutput {
	return o
}

func (o DomainSecuritySettingsPtrOutput) ToDomainSecuritySettingsPtrOutputWithContext(ctx context.Context) DomainSecuritySettingsPtrOutput {
	return o
}

func (o DomainSecuritySettingsPtrOutput) Elem() DomainSecuritySettingsOutput {
	return o.ApplyT(func(v *DomainSecuritySettings) DomainSecuritySettings { return *v }).(DomainSecuritySettingsOutput)
}

// A flag to determine whether or not NtlmV1 is enabled or disabled.
func (o DomainSecuritySettingsPtrOutput) NtlmV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettings) *string {
		if v == nil {
			return nil
		}
		return v.NtlmV1
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
func (o DomainSecuritySettingsPtrOutput) SyncNtlmPasswords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettings) *string {
		if v == nil {
			return nil
		}
		return v.SyncNtlmPasswords
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not TlsV1 is enabled or disabled.
func (o DomainSecuritySettingsPtrOutput) TlsV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettings) *string {
		if v == nil {
			return nil
		}
		return v.TlsV1
	}).(pulumi.StringPtrOutput)
}

// Domain Security Settings
type DomainSecuritySettingsResponse struct {
	// A flag to determine whether or not NtlmV1 is enabled or disabled.
	NtlmV1 *string `pulumi:"ntlmV1"`
	// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
	SyncNtlmPasswords *string `pulumi:"syncNtlmPasswords"`
	// A flag to determine whether or not TlsV1 is enabled or disabled.
	TlsV1 *string `pulumi:"tlsV1"`
}

// DomainSecuritySettingsResponseInput is an input type that accepts DomainSecuritySettingsResponseArgs and DomainSecuritySettingsResponseOutput values.
// You can construct a concrete instance of `DomainSecuritySettingsResponseInput` via:
//
//          DomainSecuritySettingsResponseArgs{...}
type DomainSecuritySettingsResponseInput interface {
	pulumi.Input

	ToDomainSecuritySettingsResponseOutput() DomainSecuritySettingsResponseOutput
	ToDomainSecuritySettingsResponseOutputWithContext(context.Context) DomainSecuritySettingsResponseOutput
}

// Domain Security Settings
type DomainSecuritySettingsResponseArgs struct {
	// A flag to determine whether or not NtlmV1 is enabled or disabled.
	NtlmV1 pulumi.StringPtrInput `pulumi:"ntlmV1"`
	// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
	SyncNtlmPasswords pulumi.StringPtrInput `pulumi:"syncNtlmPasswords"`
	// A flag to determine whether or not TlsV1 is enabled or disabled.
	TlsV1 pulumi.StringPtrInput `pulumi:"tlsV1"`
}

func (DomainSecuritySettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSecuritySettingsResponse)(nil)).Elem()
}

func (i DomainSecuritySettingsResponseArgs) ToDomainSecuritySettingsResponseOutput() DomainSecuritySettingsResponseOutput {
	return i.ToDomainSecuritySettingsResponseOutputWithContext(context.Background())
}

func (i DomainSecuritySettingsResponseArgs) ToDomainSecuritySettingsResponseOutputWithContext(ctx context.Context) DomainSecuritySettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsResponseOutput)
}

func (i DomainSecuritySettingsResponseArgs) ToDomainSecuritySettingsResponsePtrOutput() DomainSecuritySettingsResponsePtrOutput {
	return i.ToDomainSecuritySettingsResponsePtrOutputWithContext(context.Background())
}

func (i DomainSecuritySettingsResponseArgs) ToDomainSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) DomainSecuritySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsResponseOutput).ToDomainSecuritySettingsResponsePtrOutputWithContext(ctx)
}

// DomainSecuritySettingsResponsePtrInput is an input type that accepts DomainSecuritySettingsResponseArgs, DomainSecuritySettingsResponsePtr and DomainSecuritySettingsResponsePtrOutput values.
// You can construct a concrete instance of `DomainSecuritySettingsResponsePtrInput` via:
//
//          DomainSecuritySettingsResponseArgs{...}
//
//  or:
//
//          nil
type DomainSecuritySettingsResponsePtrInput interface {
	pulumi.Input

	ToDomainSecuritySettingsResponsePtrOutput() DomainSecuritySettingsResponsePtrOutput
	ToDomainSecuritySettingsResponsePtrOutputWithContext(context.Context) DomainSecuritySettingsResponsePtrOutput
}

type domainSecuritySettingsResponsePtrType DomainSecuritySettingsResponseArgs

func DomainSecuritySettingsResponsePtr(v *DomainSecuritySettingsResponseArgs) DomainSecuritySettingsResponsePtrInput {
	return (*domainSecuritySettingsResponsePtrType)(v)
}

func (*domainSecuritySettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSecuritySettingsResponse)(nil)).Elem()
}

func (i *domainSecuritySettingsResponsePtrType) ToDomainSecuritySettingsResponsePtrOutput() DomainSecuritySettingsResponsePtrOutput {
	return i.ToDomainSecuritySettingsResponsePtrOutputWithContext(context.Background())
}

func (i *domainSecuritySettingsResponsePtrType) ToDomainSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) DomainSecuritySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSecuritySettingsResponsePtrOutput)
}

// Domain Security Settings
type DomainSecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (DomainSecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSecuritySettingsResponse)(nil)).Elem()
}

func (o DomainSecuritySettingsResponseOutput) ToDomainSecuritySettingsResponseOutput() DomainSecuritySettingsResponseOutput {
	return o
}

func (o DomainSecuritySettingsResponseOutput) ToDomainSecuritySettingsResponseOutputWithContext(ctx context.Context) DomainSecuritySettingsResponseOutput {
	return o
}

func (o DomainSecuritySettingsResponseOutput) ToDomainSecuritySettingsResponsePtrOutput() DomainSecuritySettingsResponsePtrOutput {
	return o.ToDomainSecuritySettingsResponsePtrOutputWithContext(context.Background())
}

func (o DomainSecuritySettingsResponseOutput) ToDomainSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) DomainSecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v DomainSecuritySettingsResponse) *DomainSecuritySettingsResponse {
		return &v
	}).(DomainSecuritySettingsResponsePtrOutput)
}

// A flag to determine whether or not NtlmV1 is enabled or disabled.
func (o DomainSecuritySettingsResponseOutput) NtlmV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettingsResponse) *string { return v.NtlmV1 }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
func (o DomainSecuritySettingsResponseOutput) SyncNtlmPasswords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettingsResponse) *string { return v.SyncNtlmPasswords }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not TlsV1 is enabled or disabled.
func (o DomainSecuritySettingsResponseOutput) TlsV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSecuritySettingsResponse) *string { return v.TlsV1 }).(pulumi.StringPtrOutput)
}

type DomainSecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DomainSecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSecuritySettingsResponse)(nil)).Elem()
}

func (o DomainSecuritySettingsResponsePtrOutput) ToDomainSecuritySettingsResponsePtrOutput() DomainSecuritySettingsResponsePtrOutput {
	return o
}

func (o DomainSecuritySettingsResponsePtrOutput) ToDomainSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) DomainSecuritySettingsResponsePtrOutput {
	return o
}

func (o DomainSecuritySettingsResponsePtrOutput) Elem() DomainSecuritySettingsResponseOutput {
	return o.ApplyT(func(v *DomainSecuritySettingsResponse) DomainSecuritySettingsResponse { return *v }).(DomainSecuritySettingsResponseOutput)
}

// A flag to determine whether or not NtlmV1 is enabled or disabled.
func (o DomainSecuritySettingsResponsePtrOutput) NtlmV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NtlmV1
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.
func (o DomainSecuritySettingsResponsePtrOutput) SyncNtlmPasswords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SyncNtlmPasswords
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not TlsV1 is enabled or disabled.
func (o DomainSecuritySettingsResponsePtrOutput) TlsV1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TlsV1
	}).(pulumi.StringPtrOutput)
}

// Health Alert Description
type HealthAlertResponse struct {
	// Health Alert Id
	Id string `pulumi:"id"`
	// Health Alert Issue
	Issue string `pulumi:"issue"`
	// Health Alert Last Detected DateTime
	LastDetected string `pulumi:"lastDetected"`
	// Health Alert Name
	Name string `pulumi:"name"`
	// Health Alert Raised DateTime
	Raised string `pulumi:"raised"`
	// Health Alert TSG Link
	ResolutionUri string `pulumi:"resolutionUri"`
	// Health Alert Severity
	Severity string `pulumi:"severity"`
}

// HealthAlertResponseInput is an input type that accepts HealthAlertResponseArgs and HealthAlertResponseOutput values.
// You can construct a concrete instance of `HealthAlertResponseInput` via:
//
//          HealthAlertResponseArgs{...}
type HealthAlertResponseInput interface {
	pulumi.Input

	ToHealthAlertResponseOutput() HealthAlertResponseOutput
	ToHealthAlertResponseOutputWithContext(context.Context) HealthAlertResponseOutput
}

// Health Alert Description
type HealthAlertResponseArgs struct {
	// Health Alert Id
	Id pulumi.StringInput `pulumi:"id"`
	// Health Alert Issue
	Issue pulumi.StringInput `pulumi:"issue"`
	// Health Alert Last Detected DateTime
	LastDetected pulumi.StringInput `pulumi:"lastDetected"`
	// Health Alert Name
	Name pulumi.StringInput `pulumi:"name"`
	// Health Alert Raised DateTime
	Raised pulumi.StringInput `pulumi:"raised"`
	// Health Alert TSG Link
	ResolutionUri pulumi.StringInput `pulumi:"resolutionUri"`
	// Health Alert Severity
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (HealthAlertResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthAlertResponse)(nil)).Elem()
}

func (i HealthAlertResponseArgs) ToHealthAlertResponseOutput() HealthAlertResponseOutput {
	return i.ToHealthAlertResponseOutputWithContext(context.Background())
}

func (i HealthAlertResponseArgs) ToHealthAlertResponseOutputWithContext(ctx context.Context) HealthAlertResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthAlertResponseOutput)
}

// HealthAlertResponseArrayInput is an input type that accepts HealthAlertResponseArray and HealthAlertResponseArrayOutput values.
// You can construct a concrete instance of `HealthAlertResponseArrayInput` via:
//
//          HealthAlertResponseArray{ HealthAlertResponseArgs{...} }
type HealthAlertResponseArrayInput interface {
	pulumi.Input

	ToHealthAlertResponseArrayOutput() HealthAlertResponseArrayOutput
	ToHealthAlertResponseArrayOutputWithContext(context.Context) HealthAlertResponseArrayOutput
}

type HealthAlertResponseArray []HealthAlertResponseInput

func (HealthAlertResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthAlertResponse)(nil)).Elem()
}

func (i HealthAlertResponseArray) ToHealthAlertResponseArrayOutput() HealthAlertResponseArrayOutput {
	return i.ToHealthAlertResponseArrayOutputWithContext(context.Background())
}

func (i HealthAlertResponseArray) ToHealthAlertResponseArrayOutputWithContext(ctx context.Context) HealthAlertResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthAlertResponseArrayOutput)
}

// Health Alert Description
type HealthAlertResponseOutput struct{ *pulumi.OutputState }

func (HealthAlertResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthAlertResponse)(nil)).Elem()
}

func (o HealthAlertResponseOutput) ToHealthAlertResponseOutput() HealthAlertResponseOutput {
	return o
}

func (o HealthAlertResponseOutput) ToHealthAlertResponseOutputWithContext(ctx context.Context) HealthAlertResponseOutput {
	return o
}

// Health Alert Id
func (o HealthAlertResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Health Alert Issue
func (o HealthAlertResponseOutput) Issue() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.Issue }).(pulumi.StringOutput)
}

// Health Alert Last Detected DateTime
func (o HealthAlertResponseOutput) LastDetected() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.LastDetected }).(pulumi.StringOutput)
}

// Health Alert Name
func (o HealthAlertResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Health Alert Raised DateTime
func (o HealthAlertResponseOutput) Raised() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.Raised }).(pulumi.StringOutput)
}

// Health Alert TSG Link
func (o HealthAlertResponseOutput) ResolutionUri() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.ResolutionUri }).(pulumi.StringOutput)
}

// Health Alert Severity
func (o HealthAlertResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v HealthAlertResponse) string { return v.Severity }).(pulumi.StringOutput)
}

type HealthAlertResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthAlertResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthAlertResponse)(nil)).Elem()
}

func (o HealthAlertResponseArrayOutput) ToHealthAlertResponseArrayOutput() HealthAlertResponseArrayOutput {
	return o
}

func (o HealthAlertResponseArrayOutput) ToHealthAlertResponseArrayOutputWithContext(ctx context.Context) HealthAlertResponseArrayOutput {
	return o
}

func (o HealthAlertResponseArrayOutput) Index(i pulumi.IntInput) HealthAlertResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthAlertResponse {
		return vs[0].([]HealthAlertResponse)[vs[1].(int)]
	}).(HealthAlertResponseOutput)
}

// Health Monitor Description
type HealthMonitorResponse struct {
	// Health Monitor Details
	Details string `pulumi:"details"`
	// Health Monitor Id
	Id string `pulumi:"id"`
	// Health Monitor Name
	Name string `pulumi:"name"`
}

// HealthMonitorResponseInput is an input type that accepts HealthMonitorResponseArgs and HealthMonitorResponseOutput values.
// You can construct a concrete instance of `HealthMonitorResponseInput` via:
//
//          HealthMonitorResponseArgs{...}
type HealthMonitorResponseInput interface {
	pulumi.Input

	ToHealthMonitorResponseOutput() HealthMonitorResponseOutput
	ToHealthMonitorResponseOutputWithContext(context.Context) HealthMonitorResponseOutput
}

// Health Monitor Description
type HealthMonitorResponseArgs struct {
	// Health Monitor Details
	Details pulumi.StringInput `pulumi:"details"`
	// Health Monitor Id
	Id pulumi.StringInput `pulumi:"id"`
	// Health Monitor Name
	Name pulumi.StringInput `pulumi:"name"`
}

func (HealthMonitorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthMonitorResponse)(nil)).Elem()
}

func (i HealthMonitorResponseArgs) ToHealthMonitorResponseOutput() HealthMonitorResponseOutput {
	return i.ToHealthMonitorResponseOutputWithContext(context.Background())
}

func (i HealthMonitorResponseArgs) ToHealthMonitorResponseOutputWithContext(ctx context.Context) HealthMonitorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthMonitorResponseOutput)
}

// HealthMonitorResponseArrayInput is an input type that accepts HealthMonitorResponseArray and HealthMonitorResponseArrayOutput values.
// You can construct a concrete instance of `HealthMonitorResponseArrayInput` via:
//
//          HealthMonitorResponseArray{ HealthMonitorResponseArgs{...} }
type HealthMonitorResponseArrayInput interface {
	pulumi.Input

	ToHealthMonitorResponseArrayOutput() HealthMonitorResponseArrayOutput
	ToHealthMonitorResponseArrayOutputWithContext(context.Context) HealthMonitorResponseArrayOutput
}

type HealthMonitorResponseArray []HealthMonitorResponseInput

func (HealthMonitorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthMonitorResponse)(nil)).Elem()
}

func (i HealthMonitorResponseArray) ToHealthMonitorResponseArrayOutput() HealthMonitorResponseArrayOutput {
	return i.ToHealthMonitorResponseArrayOutputWithContext(context.Background())
}

func (i HealthMonitorResponseArray) ToHealthMonitorResponseArrayOutputWithContext(ctx context.Context) HealthMonitorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthMonitorResponseArrayOutput)
}

// Health Monitor Description
type HealthMonitorResponseOutput struct{ *pulumi.OutputState }

func (HealthMonitorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthMonitorResponse)(nil)).Elem()
}

func (o HealthMonitorResponseOutput) ToHealthMonitorResponseOutput() HealthMonitorResponseOutput {
	return o
}

func (o HealthMonitorResponseOutput) ToHealthMonitorResponseOutputWithContext(ctx context.Context) HealthMonitorResponseOutput {
	return o
}

// Health Monitor Details
func (o HealthMonitorResponseOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v HealthMonitorResponse) string { return v.Details }).(pulumi.StringOutput)
}

// Health Monitor Id
func (o HealthMonitorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HealthMonitorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Health Monitor Name
func (o HealthMonitorResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HealthMonitorResponse) string { return v.Name }).(pulumi.StringOutput)
}

type HealthMonitorResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthMonitorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthMonitorResponse)(nil)).Elem()
}

func (o HealthMonitorResponseArrayOutput) ToHealthMonitorResponseArrayOutput() HealthMonitorResponseArrayOutput {
	return o
}

func (o HealthMonitorResponseArrayOutput) ToHealthMonitorResponseArrayOutputWithContext(ctx context.Context) HealthMonitorResponseArrayOutput {
	return o
}

func (o HealthMonitorResponseArrayOutput) Index(i pulumi.IntInput) HealthMonitorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthMonitorResponse {
		return vs[0].([]HealthMonitorResponse)[vs[1].(int)]
	}).(HealthMonitorResponseOutput)
}

// Secure LDAP Settings
type LdapsSettings struct {
	// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
	ExternalAccess *string `pulumi:"externalAccess"`
	// A flag to determine whether or not Secure LDAP is enabled or disabled.
	Ldaps *string `pulumi:"ldaps"`
	// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
	PfxCertificate *string `pulumi:"pfxCertificate"`
	// The password to decrypt the provided Secure LDAP certificate pfx file.
	PfxCertificatePassword *string `pulumi:"pfxCertificatePassword"`
}

// LdapsSettingsInput is an input type that accepts LdapsSettingsArgs and LdapsSettingsOutput values.
// You can construct a concrete instance of `LdapsSettingsInput` via:
//
//          LdapsSettingsArgs{...}
type LdapsSettingsInput interface {
	pulumi.Input

	ToLdapsSettingsOutput() LdapsSettingsOutput
	ToLdapsSettingsOutputWithContext(context.Context) LdapsSettingsOutput
}

// Secure LDAP Settings
type LdapsSettingsArgs struct {
	// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
	ExternalAccess pulumi.StringPtrInput `pulumi:"externalAccess"`
	// A flag to determine whether or not Secure LDAP is enabled or disabled.
	Ldaps pulumi.StringPtrInput `pulumi:"ldaps"`
	// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
	PfxCertificate pulumi.StringPtrInput `pulumi:"pfxCertificate"`
	// The password to decrypt the provided Secure LDAP certificate pfx file.
	PfxCertificatePassword pulumi.StringPtrInput `pulumi:"pfxCertificatePassword"`
}

func (LdapsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapsSettings)(nil)).Elem()
}

func (i LdapsSettingsArgs) ToLdapsSettingsOutput() LdapsSettingsOutput {
	return i.ToLdapsSettingsOutputWithContext(context.Background())
}

func (i LdapsSettingsArgs) ToLdapsSettingsOutputWithContext(ctx context.Context) LdapsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsOutput)
}

func (i LdapsSettingsArgs) ToLdapsSettingsPtrOutput() LdapsSettingsPtrOutput {
	return i.ToLdapsSettingsPtrOutputWithContext(context.Background())
}

func (i LdapsSettingsArgs) ToLdapsSettingsPtrOutputWithContext(ctx context.Context) LdapsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsOutput).ToLdapsSettingsPtrOutputWithContext(ctx)
}

// LdapsSettingsPtrInput is an input type that accepts LdapsSettingsArgs, LdapsSettingsPtr and LdapsSettingsPtrOutput values.
// You can construct a concrete instance of `LdapsSettingsPtrInput` via:
//
//          LdapsSettingsArgs{...}
//
//  or:
//
//          nil
type LdapsSettingsPtrInput interface {
	pulumi.Input

	ToLdapsSettingsPtrOutput() LdapsSettingsPtrOutput
	ToLdapsSettingsPtrOutputWithContext(context.Context) LdapsSettingsPtrOutput
}

type ldapsSettingsPtrType LdapsSettingsArgs

func LdapsSettingsPtr(v *LdapsSettingsArgs) LdapsSettingsPtrInput {
	return (*ldapsSettingsPtrType)(v)
}

func (*ldapsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapsSettings)(nil)).Elem()
}

func (i *ldapsSettingsPtrType) ToLdapsSettingsPtrOutput() LdapsSettingsPtrOutput {
	return i.ToLdapsSettingsPtrOutputWithContext(context.Background())
}

func (i *ldapsSettingsPtrType) ToLdapsSettingsPtrOutputWithContext(ctx context.Context) LdapsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsPtrOutput)
}

// Secure LDAP Settings
type LdapsSettingsOutput struct{ *pulumi.OutputState }

func (LdapsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapsSettings)(nil)).Elem()
}

func (o LdapsSettingsOutput) ToLdapsSettingsOutput() LdapsSettingsOutput {
	return o
}

func (o LdapsSettingsOutput) ToLdapsSettingsOutputWithContext(ctx context.Context) LdapsSettingsOutput {
	return o
}

func (o LdapsSettingsOutput) ToLdapsSettingsPtrOutput() LdapsSettingsPtrOutput {
	return o.ToLdapsSettingsPtrOutputWithContext(context.Background())
}

func (o LdapsSettingsOutput) ToLdapsSettingsPtrOutputWithContext(ctx context.Context) LdapsSettingsPtrOutput {
	return o.ApplyT(func(v LdapsSettings) *LdapsSettings {
		return &v
	}).(LdapsSettingsPtrOutput)
}

// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
func (o LdapsSettingsOutput) ExternalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettings) *string { return v.ExternalAccess }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not Secure LDAP is enabled or disabled.
func (o LdapsSettingsOutput) Ldaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettings) *string { return v.Ldaps }).(pulumi.StringPtrOutput)
}

// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
func (o LdapsSettingsOutput) PfxCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettings) *string { return v.PfxCertificate }).(pulumi.StringPtrOutput)
}

// The password to decrypt the provided Secure LDAP certificate pfx file.
func (o LdapsSettingsOutput) PfxCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettings) *string { return v.PfxCertificatePassword }).(pulumi.StringPtrOutput)
}

type LdapsSettingsPtrOutput struct{ *pulumi.OutputState }

func (LdapsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapsSettings)(nil)).Elem()
}

func (o LdapsSettingsPtrOutput) ToLdapsSettingsPtrOutput() LdapsSettingsPtrOutput {
	return o
}

func (o LdapsSettingsPtrOutput) ToLdapsSettingsPtrOutputWithContext(ctx context.Context) LdapsSettingsPtrOutput {
	return o
}

func (o LdapsSettingsPtrOutput) Elem() LdapsSettingsOutput {
	return o.ApplyT(func(v *LdapsSettings) LdapsSettings { return *v }).(LdapsSettingsOutput)
}

// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
func (o LdapsSettingsPtrOutput) ExternalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExternalAccess
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not Secure LDAP is enabled or disabled.
func (o LdapsSettingsPtrOutput) Ldaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Ldaps
	}).(pulumi.StringPtrOutput)
}

// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
func (o LdapsSettingsPtrOutput) PfxCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettings) *string {
		if v == nil {
			return nil
		}
		return v.PfxCertificate
	}).(pulumi.StringPtrOutput)
}

// The password to decrypt the provided Secure LDAP certificate pfx file.
func (o LdapsSettingsPtrOutput) PfxCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettings) *string {
		if v == nil {
			return nil
		}
		return v.PfxCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// Secure LDAP Settings
type LdapsSettingsResponse struct {
	// NotAfter DateTime of configure ldaps certificate.
	CertificateNotAfter string `pulumi:"certificateNotAfter"`
	// Thumbprint of configure ldaps certificate.
	CertificateThumbprint string `pulumi:"certificateThumbprint"`
	// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
	ExternalAccess *string `pulumi:"externalAccess"`
	// A flag to determine whether or not Secure LDAP is enabled or disabled.
	Ldaps *string `pulumi:"ldaps"`
	// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
	PfxCertificate *string `pulumi:"pfxCertificate"`
	// The password to decrypt the provided Secure LDAP certificate pfx file.
	PfxCertificatePassword *string `pulumi:"pfxCertificatePassword"`
	// Public certificate used to configure secure ldap.
	PublicCertificate string `pulumi:"publicCertificate"`
}

// LdapsSettingsResponseInput is an input type that accepts LdapsSettingsResponseArgs and LdapsSettingsResponseOutput values.
// You can construct a concrete instance of `LdapsSettingsResponseInput` via:
//
//          LdapsSettingsResponseArgs{...}
type LdapsSettingsResponseInput interface {
	pulumi.Input

	ToLdapsSettingsResponseOutput() LdapsSettingsResponseOutput
	ToLdapsSettingsResponseOutputWithContext(context.Context) LdapsSettingsResponseOutput
}

// Secure LDAP Settings
type LdapsSettingsResponseArgs struct {
	// NotAfter DateTime of configure ldaps certificate.
	CertificateNotAfter pulumi.StringInput `pulumi:"certificateNotAfter"`
	// Thumbprint of configure ldaps certificate.
	CertificateThumbprint pulumi.StringInput `pulumi:"certificateThumbprint"`
	// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
	ExternalAccess pulumi.StringPtrInput `pulumi:"externalAccess"`
	// A flag to determine whether or not Secure LDAP is enabled or disabled.
	Ldaps pulumi.StringPtrInput `pulumi:"ldaps"`
	// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
	PfxCertificate pulumi.StringPtrInput `pulumi:"pfxCertificate"`
	// The password to decrypt the provided Secure LDAP certificate pfx file.
	PfxCertificatePassword pulumi.StringPtrInput `pulumi:"pfxCertificatePassword"`
	// Public certificate used to configure secure ldap.
	PublicCertificate pulumi.StringInput `pulumi:"publicCertificate"`
}

func (LdapsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapsSettingsResponse)(nil)).Elem()
}

func (i LdapsSettingsResponseArgs) ToLdapsSettingsResponseOutput() LdapsSettingsResponseOutput {
	return i.ToLdapsSettingsResponseOutputWithContext(context.Background())
}

func (i LdapsSettingsResponseArgs) ToLdapsSettingsResponseOutputWithContext(ctx context.Context) LdapsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsResponseOutput)
}

func (i LdapsSettingsResponseArgs) ToLdapsSettingsResponsePtrOutput() LdapsSettingsResponsePtrOutput {
	return i.ToLdapsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i LdapsSettingsResponseArgs) ToLdapsSettingsResponsePtrOutputWithContext(ctx context.Context) LdapsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsResponseOutput).ToLdapsSettingsResponsePtrOutputWithContext(ctx)
}

// LdapsSettingsResponsePtrInput is an input type that accepts LdapsSettingsResponseArgs, LdapsSettingsResponsePtr and LdapsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `LdapsSettingsResponsePtrInput` via:
//
//          LdapsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type LdapsSettingsResponsePtrInput interface {
	pulumi.Input

	ToLdapsSettingsResponsePtrOutput() LdapsSettingsResponsePtrOutput
	ToLdapsSettingsResponsePtrOutputWithContext(context.Context) LdapsSettingsResponsePtrOutput
}

type ldapsSettingsResponsePtrType LdapsSettingsResponseArgs

func LdapsSettingsResponsePtr(v *LdapsSettingsResponseArgs) LdapsSettingsResponsePtrInput {
	return (*ldapsSettingsResponsePtrType)(v)
}

func (*ldapsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapsSettingsResponse)(nil)).Elem()
}

func (i *ldapsSettingsResponsePtrType) ToLdapsSettingsResponsePtrOutput() LdapsSettingsResponsePtrOutput {
	return i.ToLdapsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *ldapsSettingsResponsePtrType) ToLdapsSettingsResponsePtrOutputWithContext(ctx context.Context) LdapsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapsSettingsResponsePtrOutput)
}

// Secure LDAP Settings
type LdapsSettingsResponseOutput struct{ *pulumi.OutputState }

func (LdapsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapsSettingsResponse)(nil)).Elem()
}

func (o LdapsSettingsResponseOutput) ToLdapsSettingsResponseOutput() LdapsSettingsResponseOutput {
	return o
}

func (o LdapsSettingsResponseOutput) ToLdapsSettingsResponseOutputWithContext(ctx context.Context) LdapsSettingsResponseOutput {
	return o
}

func (o LdapsSettingsResponseOutput) ToLdapsSettingsResponsePtrOutput() LdapsSettingsResponsePtrOutput {
	return o.ToLdapsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o LdapsSettingsResponseOutput) ToLdapsSettingsResponsePtrOutputWithContext(ctx context.Context) LdapsSettingsResponsePtrOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) *LdapsSettingsResponse {
		return &v
	}).(LdapsSettingsResponsePtrOutput)
}

// NotAfter DateTime of configure ldaps certificate.
func (o LdapsSettingsResponseOutput) CertificateNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) string { return v.CertificateNotAfter }).(pulumi.StringOutput)
}

// Thumbprint of configure ldaps certificate.
func (o LdapsSettingsResponseOutput) CertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) string { return v.CertificateThumbprint }).(pulumi.StringOutput)
}

// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
func (o LdapsSettingsResponseOutput) ExternalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) *string { return v.ExternalAccess }).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not Secure LDAP is enabled or disabled.
func (o LdapsSettingsResponseOutput) Ldaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) *string { return v.Ldaps }).(pulumi.StringPtrOutput)
}

// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
func (o LdapsSettingsResponseOutput) PfxCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) *string { return v.PfxCertificate }).(pulumi.StringPtrOutput)
}

// The password to decrypt the provided Secure LDAP certificate pfx file.
func (o LdapsSettingsResponseOutput) PfxCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) *string { return v.PfxCertificatePassword }).(pulumi.StringPtrOutput)
}

// Public certificate used to configure secure ldap.
func (o LdapsSettingsResponseOutput) PublicCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LdapsSettingsResponse) string { return v.PublicCertificate }).(pulumi.StringOutput)
}

type LdapsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (LdapsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LdapsSettingsResponse)(nil)).Elem()
}

func (o LdapsSettingsResponsePtrOutput) ToLdapsSettingsResponsePtrOutput() LdapsSettingsResponsePtrOutput {
	return o
}

func (o LdapsSettingsResponsePtrOutput) ToLdapsSettingsResponsePtrOutputWithContext(ctx context.Context) LdapsSettingsResponsePtrOutput {
	return o
}

func (o LdapsSettingsResponsePtrOutput) Elem() LdapsSettingsResponseOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) LdapsSettingsResponse { return *v }).(LdapsSettingsResponseOutput)
}

// NotAfter DateTime of configure ldaps certificate.
func (o LdapsSettingsResponsePtrOutput) CertificateNotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateNotAfter
	}).(pulumi.StringPtrOutput)
}

// Thumbprint of configure ldaps certificate.
func (o LdapsSettingsResponsePtrOutput) CertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.
func (o LdapsSettingsResponsePtrOutput) ExternalAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExternalAccess
	}).(pulumi.StringPtrOutput)
}

// A flag to determine whether or not Secure LDAP is enabled or disabled.
func (o LdapsSettingsResponsePtrOutput) Ldaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Ldaps
	}).(pulumi.StringPtrOutput)
}

// The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.
func (o LdapsSettingsResponsePtrOutput) PfxCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PfxCertificate
	}).(pulumi.StringPtrOutput)
}

// The password to decrypt the provided Secure LDAP certificate pfx file.
func (o LdapsSettingsResponsePtrOutput) PfxCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PfxCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// Public certificate used to configure secure ldap.
func (o LdapsSettingsResponsePtrOutput) PublicCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LdapsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicCertificate
	}).(pulumi.StringPtrOutput)
}

// Settings for notification
type NotificationSettings struct {
	// The list of additional recipients
	AdditionalRecipients []string `pulumi:"additionalRecipients"`
	// Should domain controller admins be notified
	NotifyDcAdmins *string `pulumi:"notifyDcAdmins"`
	// Should global admins be notified
	NotifyGlobalAdmins *string `pulumi:"notifyGlobalAdmins"`
}

// NotificationSettingsInput is an input type that accepts NotificationSettingsArgs and NotificationSettingsOutput values.
// You can construct a concrete instance of `NotificationSettingsInput` via:
//
//          NotificationSettingsArgs{...}
type NotificationSettingsInput interface {
	pulumi.Input

	ToNotificationSettingsOutput() NotificationSettingsOutput
	ToNotificationSettingsOutputWithContext(context.Context) NotificationSettingsOutput
}

// Settings for notification
type NotificationSettingsArgs struct {
	// The list of additional recipients
	AdditionalRecipients pulumi.StringArrayInput `pulumi:"additionalRecipients"`
	// Should domain controller admins be notified
	NotifyDcAdmins pulumi.StringPtrInput `pulumi:"notifyDcAdmins"`
	// Should global admins be notified
	NotifyGlobalAdmins pulumi.StringPtrInput `pulumi:"notifyGlobalAdmins"`
}

func (NotificationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettings)(nil)).Elem()
}

func (i NotificationSettingsArgs) ToNotificationSettingsOutput() NotificationSettingsOutput {
	return i.ToNotificationSettingsOutputWithContext(context.Background())
}

func (i NotificationSettingsArgs) ToNotificationSettingsOutputWithContext(ctx context.Context) NotificationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsOutput)
}

func (i NotificationSettingsArgs) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return i.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (i NotificationSettingsArgs) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsOutput).ToNotificationSettingsPtrOutputWithContext(ctx)
}

// NotificationSettingsPtrInput is an input type that accepts NotificationSettingsArgs, NotificationSettingsPtr and NotificationSettingsPtrOutput values.
// You can construct a concrete instance of `NotificationSettingsPtrInput` via:
//
//          NotificationSettingsArgs{...}
//
//  or:
//
//          nil
type NotificationSettingsPtrInput interface {
	pulumi.Input

	ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput
	ToNotificationSettingsPtrOutputWithContext(context.Context) NotificationSettingsPtrOutput
}

type notificationSettingsPtrType NotificationSettingsArgs

func NotificationSettingsPtr(v *NotificationSettingsArgs) NotificationSettingsPtrInput {
	return (*notificationSettingsPtrType)(v)
}

func (*notificationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettings)(nil)).Elem()
}

func (i *notificationSettingsPtrType) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return i.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (i *notificationSettingsPtrType) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsPtrOutput)
}

// Settings for notification
type NotificationSettingsOutput struct{ *pulumi.OutputState }

func (NotificationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettings)(nil)).Elem()
}

func (o NotificationSettingsOutput) ToNotificationSettingsOutput() NotificationSettingsOutput {
	return o
}

func (o NotificationSettingsOutput) ToNotificationSettingsOutputWithContext(ctx context.Context) NotificationSettingsOutput {
	return o
}

func (o NotificationSettingsOutput) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return o.ToNotificationSettingsPtrOutputWithContext(context.Background())
}

func (o NotificationSettingsOutput) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *NotificationSettings {
		return &v
	}).(NotificationSettingsPtrOutput)
}

// The list of additional recipients
func (o NotificationSettingsOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationSettings) []string { return v.AdditionalRecipients }).(pulumi.StringArrayOutput)
}

// Should domain controller admins be notified
func (o NotificationSettingsOutput) NotifyDcAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.NotifyDcAdmins }).(pulumi.StringPtrOutput)
}

// Should global admins be notified
func (o NotificationSettingsOutput) NotifyGlobalAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettings) *string { return v.NotifyGlobalAdmins }).(pulumi.StringPtrOutput)
}

type NotificationSettingsPtrOutput struct{ *pulumi.OutputState }

func (NotificationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettings)(nil)).Elem()
}

func (o NotificationSettingsPtrOutput) ToNotificationSettingsPtrOutput() NotificationSettingsPtrOutput {
	return o
}

func (o NotificationSettingsPtrOutput) ToNotificationSettingsPtrOutputWithContext(ctx context.Context) NotificationSettingsPtrOutput {
	return o
}

func (o NotificationSettingsPtrOutput) Elem() NotificationSettingsOutput {
	return o.ApplyT(func(v *NotificationSettings) NotificationSettings { return *v }).(NotificationSettingsOutput)
}

// The list of additional recipients
func (o NotificationSettingsPtrOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationSettings) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalRecipients
	}).(pulumi.StringArrayOutput)
}

// Should domain controller admins be notified
func (o NotificationSettingsPtrOutput) NotifyDcAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotifyDcAdmins
	}).(pulumi.StringPtrOutput)
}

// Should global admins be notified
func (o NotificationSettingsPtrOutput) NotifyGlobalAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettings) *string {
		if v == nil {
			return nil
		}
		return v.NotifyGlobalAdmins
	}).(pulumi.StringPtrOutput)
}

// Settings for notification
type NotificationSettingsResponse struct {
	// The list of additional recipients
	AdditionalRecipients []string `pulumi:"additionalRecipients"`
	// Should domain controller admins be notified
	NotifyDcAdmins *string `pulumi:"notifyDcAdmins"`
	// Should global admins be notified
	NotifyGlobalAdmins *string `pulumi:"notifyGlobalAdmins"`
}

// NotificationSettingsResponseInput is an input type that accepts NotificationSettingsResponseArgs and NotificationSettingsResponseOutput values.
// You can construct a concrete instance of `NotificationSettingsResponseInput` via:
//
//          NotificationSettingsResponseArgs{...}
type NotificationSettingsResponseInput interface {
	pulumi.Input

	ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput
	ToNotificationSettingsResponseOutputWithContext(context.Context) NotificationSettingsResponseOutput
}

// Settings for notification
type NotificationSettingsResponseArgs struct {
	// The list of additional recipients
	AdditionalRecipients pulumi.StringArrayInput `pulumi:"additionalRecipients"`
	// Should domain controller admins be notified
	NotifyDcAdmins pulumi.StringPtrInput `pulumi:"notifyDcAdmins"`
	// Should global admins be notified
	NotifyGlobalAdmins pulumi.StringPtrInput `pulumi:"notifyGlobalAdmins"`
}

func (NotificationSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsResponse)(nil)).Elem()
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput {
	return i.ToNotificationSettingsResponseOutputWithContext(context.Background())
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponseOutputWithContext(ctx context.Context) NotificationSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponseOutput)
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return i.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NotificationSettingsResponseArgs) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponseOutput).ToNotificationSettingsResponsePtrOutputWithContext(ctx)
}

// NotificationSettingsResponsePtrInput is an input type that accepts NotificationSettingsResponseArgs, NotificationSettingsResponsePtr and NotificationSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NotificationSettingsResponsePtrInput` via:
//
//          NotificationSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NotificationSettingsResponsePtrInput interface {
	pulumi.Input

	ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput
	ToNotificationSettingsResponsePtrOutputWithContext(context.Context) NotificationSettingsResponsePtrOutput
}

type notificationSettingsResponsePtrType NotificationSettingsResponseArgs

func NotificationSettingsResponsePtr(v *NotificationSettingsResponseArgs) NotificationSettingsResponsePtrInput {
	return (*notificationSettingsResponsePtrType)(v)
}

func (*notificationSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsResponse)(nil)).Elem()
}

func (i *notificationSettingsResponsePtrType) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return i.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *notificationSettingsResponsePtrType) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSettingsResponsePtrOutput)
}

// Settings for notification
type NotificationSettingsResponseOutput struct{ *pulumi.OutputState }

func (NotificationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSettingsResponse)(nil)).Elem()
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponseOutput() NotificationSettingsResponseOutput {
	return o
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponseOutputWithContext(ctx context.Context) NotificationSettingsResponseOutput {
	return o
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return o.ToNotificationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NotificationSettingsResponseOutput) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *NotificationSettingsResponse {
		return &v
	}).(NotificationSettingsResponsePtrOutput)
}

// The list of additional recipients
func (o NotificationSettingsResponseOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) []string { return v.AdditionalRecipients }).(pulumi.StringArrayOutput)
}

// Should domain controller admins be notified
func (o NotificationSettingsResponseOutput) NotifyDcAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.NotifyDcAdmins }).(pulumi.StringPtrOutput)
}

// Should global admins be notified
func (o NotificationSettingsResponseOutput) NotifyGlobalAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationSettingsResponse) *string { return v.NotifyGlobalAdmins }).(pulumi.StringPtrOutput)
}

type NotificationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NotificationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationSettingsResponse)(nil)).Elem()
}

func (o NotificationSettingsResponsePtrOutput) ToNotificationSettingsResponsePtrOutput() NotificationSettingsResponsePtrOutput {
	return o
}

func (o NotificationSettingsResponsePtrOutput) ToNotificationSettingsResponsePtrOutputWithContext(ctx context.Context) NotificationSettingsResponsePtrOutput {
	return o
}

func (o NotificationSettingsResponsePtrOutput) Elem() NotificationSettingsResponseOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) NotificationSettingsResponse { return *v }).(NotificationSettingsResponseOutput)
}

// The list of additional recipients
func (o NotificationSettingsResponsePtrOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalRecipients
	}).(pulumi.StringArrayOutput)
}

// Should domain controller admins be notified
func (o NotificationSettingsResponsePtrOutput) NotifyDcAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotifyDcAdmins
	}).(pulumi.StringPtrOutput)
}

// Should global admins be notified
func (o NotificationSettingsResponsePtrOutput) NotifyGlobalAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.NotifyGlobalAdmins
	}).(pulumi.StringPtrOutput)
}

// Replica Set Definition
type ReplicaSet struct {
	// Virtual network location
	Location *string `pulumi:"location"`
	// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
	SubnetId *string `pulumi:"subnetId"`
}

// ReplicaSetInput is an input type that accepts ReplicaSetArgs and ReplicaSetOutput values.
// You can construct a concrete instance of `ReplicaSetInput` via:
//
//          ReplicaSetArgs{...}
type ReplicaSetInput interface {
	pulumi.Input

	ToReplicaSetOutput() ReplicaSetOutput
	ToReplicaSetOutputWithContext(context.Context) ReplicaSetOutput
}

// Replica Set Definition
type ReplicaSetArgs struct {
	// Virtual network location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (ReplicaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSet)(nil)).Elem()
}

func (i ReplicaSetArgs) ToReplicaSetOutput() ReplicaSetOutput {
	return i.ToReplicaSetOutputWithContext(context.Background())
}

func (i ReplicaSetArgs) ToReplicaSetOutputWithContext(ctx context.Context) ReplicaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSetOutput)
}

// ReplicaSetArrayInput is an input type that accepts ReplicaSetArray and ReplicaSetArrayOutput values.
// You can construct a concrete instance of `ReplicaSetArrayInput` via:
//
//          ReplicaSetArray{ ReplicaSetArgs{...} }
type ReplicaSetArrayInput interface {
	pulumi.Input

	ToReplicaSetArrayOutput() ReplicaSetArrayOutput
	ToReplicaSetArrayOutputWithContext(context.Context) ReplicaSetArrayOutput
}

type ReplicaSetArray []ReplicaSetInput

func (ReplicaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSet)(nil)).Elem()
}

func (i ReplicaSetArray) ToReplicaSetArrayOutput() ReplicaSetArrayOutput {
	return i.ToReplicaSetArrayOutputWithContext(context.Background())
}

func (i ReplicaSetArray) ToReplicaSetArrayOutputWithContext(ctx context.Context) ReplicaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSetArrayOutput)
}

// Replica Set Definition
type ReplicaSetOutput struct{ *pulumi.OutputState }

func (ReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSet)(nil)).Elem()
}

func (o ReplicaSetOutput) ToReplicaSetOutput() ReplicaSetOutput {
	return o
}

func (o ReplicaSetOutput) ToReplicaSetOutputWithContext(ctx context.Context) ReplicaSetOutput {
	return o
}

// Virtual network location
func (o ReplicaSetOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSet) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
func (o ReplicaSetOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSet) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ReplicaSetArrayOutput struct{ *pulumi.OutputState }

func (ReplicaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSet)(nil)).Elem()
}

func (o ReplicaSetArrayOutput) ToReplicaSetArrayOutput() ReplicaSetArrayOutput {
	return o
}

func (o ReplicaSetArrayOutput) ToReplicaSetArrayOutputWithContext(ctx context.Context) ReplicaSetArrayOutput {
	return o
}

func (o ReplicaSetArrayOutput) Index(i pulumi.IntInput) ReplicaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaSet {
		return vs[0].([]ReplicaSet)[vs[1].(int)]
	}).(ReplicaSetOutput)
}

// Replica Set Definition
type ReplicaSetResponse struct {
	// List of Domain Controller IP Address
	DomainControllerIpAddress []string `pulumi:"domainControllerIpAddress"`
	// External access ip address.
	ExternalAccessIpAddress string `pulumi:"externalAccessIpAddress"`
	// List of Domain Health Alerts
	HealthAlerts []HealthAlertResponse `pulumi:"healthAlerts"`
	// Last domain evaluation run DateTime
	HealthLastEvaluated string `pulumi:"healthLastEvaluated"`
	// List of Domain Health Monitors
	HealthMonitors []HealthMonitorResponse `pulumi:"healthMonitors"`
	// Virtual network location
	Location *string `pulumi:"location"`
	// ReplicaSet Id
	ReplicaSetId string `pulumi:"replicaSetId"`
	// Status of Domain Service instance
	ServiceStatus string `pulumi:"serviceStatus"`
	// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
	SubnetId *string `pulumi:"subnetId"`
	// Virtual network site id
	VnetSiteId string `pulumi:"vnetSiteId"`
}

// ReplicaSetResponseInput is an input type that accepts ReplicaSetResponseArgs and ReplicaSetResponseOutput values.
// You can construct a concrete instance of `ReplicaSetResponseInput` via:
//
//          ReplicaSetResponseArgs{...}
type ReplicaSetResponseInput interface {
	pulumi.Input

	ToReplicaSetResponseOutput() ReplicaSetResponseOutput
	ToReplicaSetResponseOutputWithContext(context.Context) ReplicaSetResponseOutput
}

// Replica Set Definition
type ReplicaSetResponseArgs struct {
	// List of Domain Controller IP Address
	DomainControllerIpAddress pulumi.StringArrayInput `pulumi:"domainControllerIpAddress"`
	// External access ip address.
	ExternalAccessIpAddress pulumi.StringInput `pulumi:"externalAccessIpAddress"`
	// List of Domain Health Alerts
	HealthAlerts HealthAlertResponseArrayInput `pulumi:"healthAlerts"`
	// Last domain evaluation run DateTime
	HealthLastEvaluated pulumi.StringInput `pulumi:"healthLastEvaluated"`
	// List of Domain Health Monitors
	HealthMonitors HealthMonitorResponseArrayInput `pulumi:"healthMonitors"`
	// Virtual network location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// ReplicaSet Id
	ReplicaSetId pulumi.StringInput `pulumi:"replicaSetId"`
	// Status of Domain Service instance
	ServiceStatus pulumi.StringInput `pulumi:"serviceStatus"`
	// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Virtual network site id
	VnetSiteId pulumi.StringInput `pulumi:"vnetSiteId"`
}

func (ReplicaSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSetResponse)(nil)).Elem()
}

func (i ReplicaSetResponseArgs) ToReplicaSetResponseOutput() ReplicaSetResponseOutput {
	return i.ToReplicaSetResponseOutputWithContext(context.Background())
}

func (i ReplicaSetResponseArgs) ToReplicaSetResponseOutputWithContext(ctx context.Context) ReplicaSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSetResponseOutput)
}

// ReplicaSetResponseArrayInput is an input type that accepts ReplicaSetResponseArray and ReplicaSetResponseArrayOutput values.
// You can construct a concrete instance of `ReplicaSetResponseArrayInput` via:
//
//          ReplicaSetResponseArray{ ReplicaSetResponseArgs{...} }
type ReplicaSetResponseArrayInput interface {
	pulumi.Input

	ToReplicaSetResponseArrayOutput() ReplicaSetResponseArrayOutput
	ToReplicaSetResponseArrayOutputWithContext(context.Context) ReplicaSetResponseArrayOutput
}

type ReplicaSetResponseArray []ReplicaSetResponseInput

func (ReplicaSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSetResponse)(nil)).Elem()
}

func (i ReplicaSetResponseArray) ToReplicaSetResponseArrayOutput() ReplicaSetResponseArrayOutput {
	return i.ToReplicaSetResponseArrayOutputWithContext(context.Background())
}

func (i ReplicaSetResponseArray) ToReplicaSetResponseArrayOutputWithContext(ctx context.Context) ReplicaSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaSetResponseArrayOutput)
}

// Replica Set Definition
type ReplicaSetResponseOutput struct{ *pulumi.OutputState }

func (ReplicaSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaSetResponse)(nil)).Elem()
}

func (o ReplicaSetResponseOutput) ToReplicaSetResponseOutput() ReplicaSetResponseOutput {
	return o
}

func (o ReplicaSetResponseOutput) ToReplicaSetResponseOutputWithContext(ctx context.Context) ReplicaSetResponseOutput {
	return o
}

// List of Domain Controller IP Address
func (o ReplicaSetResponseOutput) DomainControllerIpAddress() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicaSetResponse) []string { return v.DomainControllerIpAddress }).(pulumi.StringArrayOutput)
}

// External access ip address.
func (o ReplicaSetResponseOutput) ExternalAccessIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaSetResponse) string { return v.ExternalAccessIpAddress }).(pulumi.StringOutput)
}

// List of Domain Health Alerts
func (o ReplicaSetResponseOutput) HealthAlerts() HealthAlertResponseArrayOutput {
	return o.ApplyT(func(v ReplicaSetResponse) []HealthAlertResponse { return v.HealthAlerts }).(HealthAlertResponseArrayOutput)
}

// Last domain evaluation run DateTime
func (o ReplicaSetResponseOutput) HealthLastEvaluated() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaSetResponse) string { return v.HealthLastEvaluated }).(pulumi.StringOutput)
}

// List of Domain Health Monitors
func (o ReplicaSetResponseOutput) HealthMonitors() HealthMonitorResponseArrayOutput {
	return o.ApplyT(func(v ReplicaSetResponse) []HealthMonitorResponse { return v.HealthMonitors }).(HealthMonitorResponseArrayOutput)
}

// Virtual network location
func (o ReplicaSetResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSetResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// ReplicaSet Id
func (o ReplicaSetResponseOutput) ReplicaSetId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaSetResponse) string { return v.ReplicaSetId }).(pulumi.StringOutput)
}

// Status of Domain Service instance
func (o ReplicaSetResponseOutput) ServiceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaSetResponse) string { return v.ServiceStatus }).(pulumi.StringOutput)
}

// The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.
func (o ReplicaSetResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaSetResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Virtual network site id
func (o ReplicaSetResponseOutput) VnetSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaSetResponse) string { return v.VnetSiteId }).(pulumi.StringOutput)
}

type ReplicaSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicaSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaSetResponse)(nil)).Elem()
}

func (o ReplicaSetResponseArrayOutput) ToReplicaSetResponseArrayOutput() ReplicaSetResponseArrayOutput {
	return o
}

func (o ReplicaSetResponseArrayOutput) ToReplicaSetResponseArrayOutputWithContext(ctx context.Context) ReplicaSetResponseArrayOutput {
	return o
}

func (o ReplicaSetResponseArrayOutput) Index(i pulumi.IntInput) ReplicaSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaSetResponse {
		return vs[0].([]ReplicaSetResponse)[vs[1].(int)]
	}).(ReplicaSetResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerAccountResponseOutput{})
	pulumi.RegisterOutputType(ContainerAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(DomainSecuritySettingsOutput{})
	pulumi.RegisterOutputType(DomainSecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainSecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(DomainSecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(HealthAlertResponseOutput{})
	pulumi.RegisterOutputType(HealthAlertResponseArrayOutput{})
	pulumi.RegisterOutputType(HealthMonitorResponseOutput{})
	pulumi.RegisterOutputType(HealthMonitorResponseArrayOutput{})
	pulumi.RegisterOutputType(LdapsSettingsOutput{})
	pulumi.RegisterOutputType(LdapsSettingsPtrOutput{})
	pulumi.RegisterOutputType(LdapsSettingsResponseOutput{})
	pulumi.RegisterOutputType(LdapsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationSettingsOutput{})
	pulumi.RegisterOutputType(NotificationSettingsPtrOutput{})
	pulumi.RegisterOutputType(NotificationSettingsResponseOutput{})
	pulumi.RegisterOutputType(NotificationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicaSetOutput{})
	pulumi.RegisterOutputType(ReplicaSetArrayOutput{})
	pulumi.RegisterOutputType(ReplicaSetResponseOutput{})
	pulumi.RegisterOutputType(ReplicaSetResponseArrayOutput{})
}
