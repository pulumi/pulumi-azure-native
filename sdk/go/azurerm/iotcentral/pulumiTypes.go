// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotcentral

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The IoT Central application.
type AppType struct {
	// The resource location.
	Location string `pulumi:"location"`
	// The ARM resource name.
	Name string `pulumi:"name"`
	// The common properties of an IoT Central application.
	Properties AppPropertiesResponse `pulumi:"properties"`
	// A valid instance SKU.
	Sku AppSkuInfoResponse `pulumi:"sku"`
	// The resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The resource type.
	Type string `pulumi:"type"`
}

// AppTypeInput is an input type that accepts AppTypeArgs and AppTypeOutput values.
// You can construct a concrete instance of `AppTypeInput` via:
//
//          AppTypeArgs{...}
type AppTypeInput interface {
	pulumi.Input

	ToAppTypeOutput() AppTypeOutput
	ToAppTypeOutputWithContext(context.Context) AppTypeOutput
}

// The IoT Central application.
type AppTypeArgs struct {
	// The resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// The ARM resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The common properties of an IoT Central application.
	Properties AppPropertiesResponseInput `pulumi:"properties"`
	// A valid instance SKU.
	Sku AppSkuInfoResponseInput `pulumi:"sku"`
	// The resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppType)(nil)).Elem()
}

func (i AppTypeArgs) ToAppTypeOutput() AppTypeOutput {
	return i.ToAppTypeOutputWithContext(context.Background())
}

func (i AppTypeArgs) ToAppTypeOutputWithContext(ctx context.Context) AppTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTypeOutput)
}

// The IoT Central application.
type AppTypeOutput struct{ *pulumi.OutputState }

func (AppTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppType)(nil)).Elem()
}

func (o AppTypeOutput) ToAppTypeOutput() AppTypeOutput {
	return o
}

func (o AppTypeOutput) ToAppTypeOutputWithContext(ctx context.Context) AppTypeOutput {
	return o
}

// The resource location.
func (o AppTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AppType) string { return v.Location }).(pulumi.StringOutput)
}

// The ARM resource name.
func (o AppTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppType) string { return v.Name }).(pulumi.StringOutput)
}

// The common properties of an IoT Central application.
func (o AppTypeOutput) Properties() AppPropertiesResponseOutput {
	return o.ApplyT(func(v AppType) AppPropertiesResponse { return v.Properties }).(AppPropertiesResponseOutput)
}

// A valid instance SKU.
func (o AppTypeOutput) Sku() AppSkuInfoResponseOutput {
	return o.ApplyT(func(v AppType) AppSkuInfoResponse { return v.Sku }).(AppSkuInfoResponseOutput)
}

// The resource tags.
func (o AppTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The resource type.
func (o AppTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppType) string { return v.Type }).(pulumi.StringOutput)
}

// The properties of an IoT Central application.
type AppProperties struct {
	// The display name of the application.
	DisplayName *string `pulumi:"displayName"`
	// The subdomain of the application.
	Subdomain *string `pulumi:"subdomain"`
	// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
	Template *string `pulumi:"template"`
}

// AppPropertiesInput is an input type that accepts AppPropertiesArgs and AppPropertiesOutput values.
// You can construct a concrete instance of `AppPropertiesInput` via:
//
//          AppPropertiesArgs{...}
type AppPropertiesInput interface {
	pulumi.Input

	ToAppPropertiesOutput() AppPropertiesOutput
	ToAppPropertiesOutputWithContext(context.Context) AppPropertiesOutput
}

// The properties of an IoT Central application.
type AppPropertiesArgs struct {
	// The display name of the application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The subdomain of the application.
	Subdomain pulumi.StringPtrInput `pulumi:"subdomain"`
	// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
	Template pulumi.StringPtrInput `pulumi:"template"`
}

func (AppPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProperties)(nil)).Elem()
}

func (i AppPropertiesArgs) ToAppPropertiesOutput() AppPropertiesOutput {
	return i.ToAppPropertiesOutputWithContext(context.Background())
}

func (i AppPropertiesArgs) ToAppPropertiesOutputWithContext(ctx context.Context) AppPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesOutput)
}

func (i AppPropertiesArgs) ToAppPropertiesPtrOutput() AppPropertiesPtrOutput {
	return i.ToAppPropertiesPtrOutputWithContext(context.Background())
}

func (i AppPropertiesArgs) ToAppPropertiesPtrOutputWithContext(ctx context.Context) AppPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesOutput).ToAppPropertiesPtrOutputWithContext(ctx)
}

// AppPropertiesPtrInput is an input type that accepts AppPropertiesArgs, AppPropertiesPtr and AppPropertiesPtrOutput values.
// You can construct a concrete instance of `AppPropertiesPtrInput` via:
//
//          AppPropertiesArgs{...}
//
//  or:
//
//          nil
type AppPropertiesPtrInput interface {
	pulumi.Input

	ToAppPropertiesPtrOutput() AppPropertiesPtrOutput
	ToAppPropertiesPtrOutputWithContext(context.Context) AppPropertiesPtrOutput
}

type appPropertiesPtrType AppPropertiesArgs

func AppPropertiesPtr(v *AppPropertiesArgs) AppPropertiesPtrInput {
	return (*appPropertiesPtrType)(v)
}

func (*appPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProperties)(nil)).Elem()
}

func (i *appPropertiesPtrType) ToAppPropertiesPtrOutput() AppPropertiesPtrOutput {
	return i.ToAppPropertiesPtrOutputWithContext(context.Background())
}

func (i *appPropertiesPtrType) ToAppPropertiesPtrOutputWithContext(ctx context.Context) AppPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesPtrOutput)
}

// The properties of an IoT Central application.
type AppPropertiesOutput struct{ *pulumi.OutputState }

func (AppPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppProperties)(nil)).Elem()
}

func (o AppPropertiesOutput) ToAppPropertiesOutput() AppPropertiesOutput {
	return o
}

func (o AppPropertiesOutput) ToAppPropertiesOutputWithContext(ctx context.Context) AppPropertiesOutput {
	return o
}

func (o AppPropertiesOutput) ToAppPropertiesPtrOutput() AppPropertiesPtrOutput {
	return o.ToAppPropertiesPtrOutputWithContext(context.Background())
}

func (o AppPropertiesOutput) ToAppPropertiesPtrOutputWithContext(ctx context.Context) AppPropertiesPtrOutput {
	return o.ApplyT(func(v AppProperties) *AppProperties {
		return &v
	}).(AppPropertiesPtrOutput)
}

// The display name of the application.
func (o AppPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The subdomain of the application.
func (o AppPropertiesOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProperties) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
func (o AppPropertiesOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppProperties) *string { return v.Template }).(pulumi.StringPtrOutput)
}

type AppPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AppPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppProperties)(nil)).Elem()
}

func (o AppPropertiesPtrOutput) ToAppPropertiesPtrOutput() AppPropertiesPtrOutput {
	return o
}

func (o AppPropertiesPtrOutput) ToAppPropertiesPtrOutputWithContext(ctx context.Context) AppPropertiesPtrOutput {
	return o
}

func (o AppPropertiesPtrOutput) Elem() AppPropertiesOutput {
	return o.ApplyT(func(v *AppProperties) AppProperties { return *v }).(AppPropertiesOutput)
}

// The display name of the application.
func (o AppPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The subdomain of the application.
func (o AppPropertiesPtrOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProperties) *string {
		if v == nil {
			return nil
		}
		return v.Subdomain
	}).(pulumi.StringPtrOutput)
}

// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
func (o AppPropertiesPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppProperties) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// The properties of an IoT Central application.
type AppPropertiesResponse struct {
	// The ID of the application.
	ApplicationId string `pulumi:"applicationId"`
	// The display name of the application.
	DisplayName *string `pulumi:"displayName"`
	// The subdomain of the application.
	Subdomain *string `pulumi:"subdomain"`
	// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
	Template *string `pulumi:"template"`
}

// AppPropertiesResponseInput is an input type that accepts AppPropertiesResponseArgs and AppPropertiesResponseOutput values.
// You can construct a concrete instance of `AppPropertiesResponseInput` via:
//
//          AppPropertiesResponseArgs{...}
type AppPropertiesResponseInput interface {
	pulumi.Input

	ToAppPropertiesResponseOutput() AppPropertiesResponseOutput
	ToAppPropertiesResponseOutputWithContext(context.Context) AppPropertiesResponseOutput
}

// The properties of an IoT Central application.
type AppPropertiesResponseArgs struct {
	// The ID of the application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The display name of the application.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The subdomain of the application.
	Subdomain pulumi.StringPtrInput `pulumi:"subdomain"`
	// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
	Template pulumi.StringPtrInput `pulumi:"template"`
}

func (AppPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppPropertiesResponse)(nil)).Elem()
}

func (i AppPropertiesResponseArgs) ToAppPropertiesResponseOutput() AppPropertiesResponseOutput {
	return i.ToAppPropertiesResponseOutputWithContext(context.Background())
}

func (i AppPropertiesResponseArgs) ToAppPropertiesResponseOutputWithContext(ctx context.Context) AppPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesResponseOutput)
}

func (i AppPropertiesResponseArgs) ToAppPropertiesResponsePtrOutput() AppPropertiesResponsePtrOutput {
	return i.ToAppPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AppPropertiesResponseArgs) ToAppPropertiesResponsePtrOutputWithContext(ctx context.Context) AppPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesResponseOutput).ToAppPropertiesResponsePtrOutputWithContext(ctx)
}

// AppPropertiesResponsePtrInput is an input type that accepts AppPropertiesResponseArgs, AppPropertiesResponsePtr and AppPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AppPropertiesResponsePtrInput` via:
//
//          AppPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AppPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAppPropertiesResponsePtrOutput() AppPropertiesResponsePtrOutput
	ToAppPropertiesResponsePtrOutputWithContext(context.Context) AppPropertiesResponsePtrOutput
}

type appPropertiesResponsePtrType AppPropertiesResponseArgs

func AppPropertiesResponsePtr(v *AppPropertiesResponseArgs) AppPropertiesResponsePtrInput {
	return (*appPropertiesResponsePtrType)(v)
}

func (*appPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppPropertiesResponse)(nil)).Elem()
}

func (i *appPropertiesResponsePtrType) ToAppPropertiesResponsePtrOutput() AppPropertiesResponsePtrOutput {
	return i.ToAppPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *appPropertiesResponsePtrType) ToAppPropertiesResponsePtrOutputWithContext(ctx context.Context) AppPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppPropertiesResponsePtrOutput)
}

// The properties of an IoT Central application.
type AppPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AppPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppPropertiesResponse)(nil)).Elem()
}

func (o AppPropertiesResponseOutput) ToAppPropertiesResponseOutput() AppPropertiesResponseOutput {
	return o
}

func (o AppPropertiesResponseOutput) ToAppPropertiesResponseOutputWithContext(ctx context.Context) AppPropertiesResponseOutput {
	return o
}

func (o AppPropertiesResponseOutput) ToAppPropertiesResponsePtrOutput() AppPropertiesResponsePtrOutput {
	return o.ToAppPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AppPropertiesResponseOutput) ToAppPropertiesResponsePtrOutputWithContext(ctx context.Context) AppPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AppPropertiesResponse) *AppPropertiesResponse {
		return &v
	}).(AppPropertiesResponsePtrOutput)
}

// The ID of the application.
func (o AppPropertiesResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AppPropertiesResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The display name of the application.
func (o AppPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The subdomain of the application.
func (o AppPropertiesResponseOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPropertiesResponse) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
func (o AppPropertiesResponseOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPropertiesResponse) *string { return v.Template }).(pulumi.StringPtrOutput)
}

type AppPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AppPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppPropertiesResponse)(nil)).Elem()
}

func (o AppPropertiesResponsePtrOutput) ToAppPropertiesResponsePtrOutput() AppPropertiesResponsePtrOutput {
	return o
}

func (o AppPropertiesResponsePtrOutput) ToAppPropertiesResponsePtrOutputWithContext(ctx context.Context) AppPropertiesResponsePtrOutput {
	return o
}

func (o AppPropertiesResponsePtrOutput) Elem() AppPropertiesResponseOutput {
	return o.ApplyT(func(v *AppPropertiesResponse) AppPropertiesResponse { return *v }).(AppPropertiesResponseOutput)
}

// The ID of the application.
func (o AppPropertiesResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The display name of the application.
func (o AppPropertiesResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The subdomain of the application.
func (o AppPropertiesResponsePtrOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Subdomain
	}).(pulumi.StringPtrOutput)
}

// The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.
func (o AppPropertiesResponsePtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Information about the SKU of the IoT Central application.
type AppSkuInfo struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// AppSkuInfoInput is an input type that accepts AppSkuInfoArgs and AppSkuInfoOutput values.
// You can construct a concrete instance of `AppSkuInfoInput` via:
//
//          AppSkuInfoArgs{...}
type AppSkuInfoInput interface {
	pulumi.Input

	ToAppSkuInfoOutput() AppSkuInfoOutput
	ToAppSkuInfoOutputWithContext(context.Context) AppSkuInfoOutput
}

// Information about the SKU of the IoT Central application.
type AppSkuInfoArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AppSkuInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSkuInfo)(nil)).Elem()
}

func (i AppSkuInfoArgs) ToAppSkuInfoOutput() AppSkuInfoOutput {
	return i.ToAppSkuInfoOutputWithContext(context.Background())
}

func (i AppSkuInfoArgs) ToAppSkuInfoOutputWithContext(ctx context.Context) AppSkuInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoOutput)
}

func (i AppSkuInfoArgs) ToAppSkuInfoPtrOutput() AppSkuInfoPtrOutput {
	return i.ToAppSkuInfoPtrOutputWithContext(context.Background())
}

func (i AppSkuInfoArgs) ToAppSkuInfoPtrOutputWithContext(ctx context.Context) AppSkuInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoOutput).ToAppSkuInfoPtrOutputWithContext(ctx)
}

// AppSkuInfoPtrInput is an input type that accepts AppSkuInfoArgs, AppSkuInfoPtr and AppSkuInfoPtrOutput values.
// You can construct a concrete instance of `AppSkuInfoPtrInput` via:
//
//          AppSkuInfoArgs{...}
//
//  or:
//
//          nil
type AppSkuInfoPtrInput interface {
	pulumi.Input

	ToAppSkuInfoPtrOutput() AppSkuInfoPtrOutput
	ToAppSkuInfoPtrOutputWithContext(context.Context) AppSkuInfoPtrOutput
}

type appSkuInfoPtrType AppSkuInfoArgs

func AppSkuInfoPtr(v *AppSkuInfoArgs) AppSkuInfoPtrInput {
	return (*appSkuInfoPtrType)(v)
}

func (*appSkuInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSkuInfo)(nil)).Elem()
}

func (i *appSkuInfoPtrType) ToAppSkuInfoPtrOutput() AppSkuInfoPtrOutput {
	return i.ToAppSkuInfoPtrOutputWithContext(context.Background())
}

func (i *appSkuInfoPtrType) ToAppSkuInfoPtrOutputWithContext(ctx context.Context) AppSkuInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoPtrOutput)
}

// Information about the SKU of the IoT Central application.
type AppSkuInfoOutput struct{ *pulumi.OutputState }

func (AppSkuInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSkuInfo)(nil)).Elem()
}

func (o AppSkuInfoOutput) ToAppSkuInfoOutput() AppSkuInfoOutput {
	return o
}

func (o AppSkuInfoOutput) ToAppSkuInfoOutputWithContext(ctx context.Context) AppSkuInfoOutput {
	return o
}

func (o AppSkuInfoOutput) ToAppSkuInfoPtrOutput() AppSkuInfoPtrOutput {
	return o.ToAppSkuInfoPtrOutputWithContext(context.Background())
}

func (o AppSkuInfoOutput) ToAppSkuInfoPtrOutputWithContext(ctx context.Context) AppSkuInfoPtrOutput {
	return o.ApplyT(func(v AppSkuInfo) *AppSkuInfo {
		return &v
	}).(AppSkuInfoPtrOutput)
}

// The name of the SKU.
func (o AppSkuInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSkuInfo) string { return v.Name }).(pulumi.StringOutput)
}

type AppSkuInfoPtrOutput struct{ *pulumi.OutputState }

func (AppSkuInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSkuInfo)(nil)).Elem()
}

func (o AppSkuInfoPtrOutput) ToAppSkuInfoPtrOutput() AppSkuInfoPtrOutput {
	return o
}

func (o AppSkuInfoPtrOutput) ToAppSkuInfoPtrOutputWithContext(ctx context.Context) AppSkuInfoPtrOutput {
	return o
}

func (o AppSkuInfoPtrOutput) Elem() AppSkuInfoOutput {
	return o.ApplyT(func(v *AppSkuInfo) AppSkuInfo { return *v }).(AppSkuInfoOutput)
}

// The name of the SKU.
func (o AppSkuInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSkuInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about the SKU of the IoT Central application.
type AppSkuInfoResponse struct {
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// AppSkuInfoResponseInput is an input type that accepts AppSkuInfoResponseArgs and AppSkuInfoResponseOutput values.
// You can construct a concrete instance of `AppSkuInfoResponseInput` via:
//
//          AppSkuInfoResponseArgs{...}
type AppSkuInfoResponseInput interface {
	pulumi.Input

	ToAppSkuInfoResponseOutput() AppSkuInfoResponseOutput
	ToAppSkuInfoResponseOutputWithContext(context.Context) AppSkuInfoResponseOutput
}

// Information about the SKU of the IoT Central application.
type AppSkuInfoResponseArgs struct {
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AppSkuInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSkuInfoResponse)(nil)).Elem()
}

func (i AppSkuInfoResponseArgs) ToAppSkuInfoResponseOutput() AppSkuInfoResponseOutput {
	return i.ToAppSkuInfoResponseOutputWithContext(context.Background())
}

func (i AppSkuInfoResponseArgs) ToAppSkuInfoResponseOutputWithContext(ctx context.Context) AppSkuInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoResponseOutput)
}

func (i AppSkuInfoResponseArgs) ToAppSkuInfoResponsePtrOutput() AppSkuInfoResponsePtrOutput {
	return i.ToAppSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (i AppSkuInfoResponseArgs) ToAppSkuInfoResponsePtrOutputWithContext(ctx context.Context) AppSkuInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoResponseOutput).ToAppSkuInfoResponsePtrOutputWithContext(ctx)
}

// AppSkuInfoResponsePtrInput is an input type that accepts AppSkuInfoResponseArgs, AppSkuInfoResponsePtr and AppSkuInfoResponsePtrOutput values.
// You can construct a concrete instance of `AppSkuInfoResponsePtrInput` via:
//
//          AppSkuInfoResponseArgs{...}
//
//  or:
//
//          nil
type AppSkuInfoResponsePtrInput interface {
	pulumi.Input

	ToAppSkuInfoResponsePtrOutput() AppSkuInfoResponsePtrOutput
	ToAppSkuInfoResponsePtrOutputWithContext(context.Context) AppSkuInfoResponsePtrOutput
}

type appSkuInfoResponsePtrType AppSkuInfoResponseArgs

func AppSkuInfoResponsePtr(v *AppSkuInfoResponseArgs) AppSkuInfoResponsePtrInput {
	return (*appSkuInfoResponsePtrType)(v)
}

func (*appSkuInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSkuInfoResponse)(nil)).Elem()
}

func (i *appSkuInfoResponsePtrType) ToAppSkuInfoResponsePtrOutput() AppSkuInfoResponsePtrOutput {
	return i.ToAppSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (i *appSkuInfoResponsePtrType) ToAppSkuInfoResponsePtrOutputWithContext(ctx context.Context) AppSkuInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSkuInfoResponsePtrOutput)
}

// Information about the SKU of the IoT Central application.
type AppSkuInfoResponseOutput struct{ *pulumi.OutputState }

func (AppSkuInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSkuInfoResponse)(nil)).Elem()
}

func (o AppSkuInfoResponseOutput) ToAppSkuInfoResponseOutput() AppSkuInfoResponseOutput {
	return o
}

func (o AppSkuInfoResponseOutput) ToAppSkuInfoResponseOutputWithContext(ctx context.Context) AppSkuInfoResponseOutput {
	return o
}

func (o AppSkuInfoResponseOutput) ToAppSkuInfoResponsePtrOutput() AppSkuInfoResponsePtrOutput {
	return o.ToAppSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (o AppSkuInfoResponseOutput) ToAppSkuInfoResponsePtrOutputWithContext(ctx context.Context) AppSkuInfoResponsePtrOutput {
	return o.ApplyT(func(v AppSkuInfoResponse) *AppSkuInfoResponse {
		return &v
	}).(AppSkuInfoResponsePtrOutput)
}

// The name of the SKU.
func (o AppSkuInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSkuInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

type AppSkuInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AppSkuInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSkuInfoResponse)(nil)).Elem()
}

func (o AppSkuInfoResponsePtrOutput) ToAppSkuInfoResponsePtrOutput() AppSkuInfoResponsePtrOutput {
	return o
}

func (o AppSkuInfoResponsePtrOutput) ToAppSkuInfoResponsePtrOutputWithContext(ctx context.Context) AppSkuInfoResponsePtrOutput {
	return o
}

func (o AppSkuInfoResponsePtrOutput) Elem() AppSkuInfoResponseOutput {
	return o.ApplyT(func(v *AppSkuInfoResponse) AppSkuInfoResponse { return *v }).(AppSkuInfoResponseOutput)
}

// The name of the SKU.
func (o AppSkuInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSkuInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppTypeOutput{})
	pulumi.RegisterOutputType(AppPropertiesOutput{})
	pulumi.RegisterOutputType(AppPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AppPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AppPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AppSkuInfoOutput{})
	pulumi.RegisterOutputType(AppSkuInfoPtrOutput{})
	pulumi.RegisterOutputType(AppSkuInfoResponseOutput{})
	pulumi.RegisterOutputType(AppSkuInfoResponsePtrOutput{})
}
