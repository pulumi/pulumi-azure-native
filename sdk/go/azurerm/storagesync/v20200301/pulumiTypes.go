// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Server endpoint cloud tiering status object.
type CloudTieringCachePerformanceResponse struct {
	// Count of bytes that were served from the local server
	CacheHitBytes int `pulumi:"cacheHitBytes"`
	// Percentage of total bytes (hit + miss) that were served from the local server
	CacheHitBytesPercent int `pulumi:"cacheHitBytesPercent"`
	// Count of bytes that were served from the cloud
	CacheMissBytes int `pulumi:"cacheMissBytes"`
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
}

// Server endpoint cloud tiering status object.
type CloudTieringCachePerformanceResponseOutput struct{ *pulumi.OutputState }

func (CloudTieringCachePerformanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudTieringCachePerformanceResponse)(nil)).Elem()
}

func (o CloudTieringCachePerformanceResponseOutput) ToCloudTieringCachePerformanceResponseOutput() CloudTieringCachePerformanceResponseOutput {
	return o
}

func (o CloudTieringCachePerformanceResponseOutput) ToCloudTieringCachePerformanceResponseOutputWithContext(ctx context.Context) CloudTieringCachePerformanceResponseOutput {
	return o
}

func (o CloudTieringCachePerformanceResponseOutput) ToCloudTieringCachePerformanceResponsePtrOutput() CloudTieringCachePerformanceResponsePtrOutput {
	return o.ToCloudTieringCachePerformanceResponsePtrOutputWithContext(context.Background())
}

func (o CloudTieringCachePerformanceResponseOutput) ToCloudTieringCachePerformanceResponsePtrOutputWithContext(ctx context.Context) CloudTieringCachePerformanceResponsePtrOutput {
	return o.ApplyT(func(v CloudTieringCachePerformanceResponse) *CloudTieringCachePerformanceResponse {
		return &v
	}).(CloudTieringCachePerformanceResponsePtrOutput)
}

// Count of bytes that were served from the local server
func (o CloudTieringCachePerformanceResponseOutput) CacheHitBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringCachePerformanceResponse) int { return v.CacheHitBytes }).(pulumi.IntOutput)
}

// Percentage of total bytes (hit + miss) that were served from the local server
func (o CloudTieringCachePerformanceResponseOutput) CacheHitBytesPercent() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringCachePerformanceResponse) int { return v.CacheHitBytesPercent }).(pulumi.IntOutput)
}

// Count of bytes that were served from the cloud
func (o CloudTieringCachePerformanceResponseOutput) CacheMissBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringCachePerformanceResponse) int { return v.CacheMissBytes }).(pulumi.IntOutput)
}

// Last updated timestamp
func (o CloudTieringCachePerformanceResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringCachePerformanceResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

type CloudTieringCachePerformanceResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudTieringCachePerformanceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudTieringCachePerformanceResponse)(nil)).Elem()
}

func (o CloudTieringCachePerformanceResponsePtrOutput) ToCloudTieringCachePerformanceResponsePtrOutput() CloudTieringCachePerformanceResponsePtrOutput {
	return o
}

func (o CloudTieringCachePerformanceResponsePtrOutput) ToCloudTieringCachePerformanceResponsePtrOutputWithContext(ctx context.Context) CloudTieringCachePerformanceResponsePtrOutput {
	return o
}

func (o CloudTieringCachePerformanceResponsePtrOutput) Elem() CloudTieringCachePerformanceResponseOutput {
	return o.ApplyT(func(v *CloudTieringCachePerformanceResponse) CloudTieringCachePerformanceResponse { return *v }).(CloudTieringCachePerformanceResponseOutput)
}

// Count of bytes that were served from the local server
func (o CloudTieringCachePerformanceResponsePtrOutput) CacheHitBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringCachePerformanceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CacheHitBytes
	}).(pulumi.IntPtrOutput)
}

// Percentage of total bytes (hit + miss) that were served from the local server
func (o CloudTieringCachePerformanceResponsePtrOutput) CacheHitBytesPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringCachePerformanceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CacheHitBytesPercent
	}).(pulumi.IntPtrOutput)
}

// Count of bytes that were served from the cloud
func (o CloudTieringCachePerformanceResponsePtrOutput) CacheMissBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringCachePerformanceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CacheMissBytes
	}).(pulumi.IntPtrOutput)
}

// Last updated timestamp
func (o CloudTieringCachePerformanceResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringCachePerformanceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Status of the date policy
type CloudTieringDatePolicyStatusResponse struct {
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Most recent access time of tiered files
	TieredFilesMostRecentAccessTimestamp string `pulumi:"tieredFilesMostRecentAccessTimestamp"`
}

// Status of the date policy
type CloudTieringDatePolicyStatusResponseOutput struct{ *pulumi.OutputState }

func (CloudTieringDatePolicyStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudTieringDatePolicyStatusResponse)(nil)).Elem()
}

func (o CloudTieringDatePolicyStatusResponseOutput) ToCloudTieringDatePolicyStatusResponseOutput() CloudTieringDatePolicyStatusResponseOutput {
	return o
}

func (o CloudTieringDatePolicyStatusResponseOutput) ToCloudTieringDatePolicyStatusResponseOutputWithContext(ctx context.Context) CloudTieringDatePolicyStatusResponseOutput {
	return o
}

func (o CloudTieringDatePolicyStatusResponseOutput) ToCloudTieringDatePolicyStatusResponsePtrOutput() CloudTieringDatePolicyStatusResponsePtrOutput {
	return o.ToCloudTieringDatePolicyStatusResponsePtrOutputWithContext(context.Background())
}

func (o CloudTieringDatePolicyStatusResponseOutput) ToCloudTieringDatePolicyStatusResponsePtrOutputWithContext(ctx context.Context) CloudTieringDatePolicyStatusResponsePtrOutput {
	return o.ApplyT(func(v CloudTieringDatePolicyStatusResponse) *CloudTieringDatePolicyStatusResponse {
		return &v
	}).(CloudTieringDatePolicyStatusResponsePtrOutput)
}

// Last updated timestamp
func (o CloudTieringDatePolicyStatusResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringDatePolicyStatusResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Most recent access time of tiered files
func (o CloudTieringDatePolicyStatusResponseOutput) TieredFilesMostRecentAccessTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringDatePolicyStatusResponse) string { return v.TieredFilesMostRecentAccessTimestamp }).(pulumi.StringOutput)
}

type CloudTieringDatePolicyStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudTieringDatePolicyStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudTieringDatePolicyStatusResponse)(nil)).Elem()
}

func (o CloudTieringDatePolicyStatusResponsePtrOutput) ToCloudTieringDatePolicyStatusResponsePtrOutput() CloudTieringDatePolicyStatusResponsePtrOutput {
	return o
}

func (o CloudTieringDatePolicyStatusResponsePtrOutput) ToCloudTieringDatePolicyStatusResponsePtrOutputWithContext(ctx context.Context) CloudTieringDatePolicyStatusResponsePtrOutput {
	return o
}

func (o CloudTieringDatePolicyStatusResponsePtrOutput) Elem() CloudTieringDatePolicyStatusResponseOutput {
	return o.ApplyT(func(v *CloudTieringDatePolicyStatusResponse) CloudTieringDatePolicyStatusResponse { return *v }).(CloudTieringDatePolicyStatusResponseOutput)
}

// Last updated timestamp
func (o CloudTieringDatePolicyStatusResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringDatePolicyStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Most recent access time of tiered files
func (o CloudTieringDatePolicyStatusResponsePtrOutput) TieredFilesMostRecentAccessTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringDatePolicyStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TieredFilesMostRecentAccessTimestamp
	}).(pulumi.StringPtrOutput)
}

// Server endpoint cloud tiering status object.
type CloudTieringFilesNotTieringResponse struct {
	// Array of tiering errors
	Errors []FilesNotTieringErrorResponse `pulumi:"errors"`
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Last cloud tiering result (HResult)
	TotalFileCount int `pulumi:"totalFileCount"`
}

// Server endpoint cloud tiering status object.
type CloudTieringFilesNotTieringResponseOutput struct{ *pulumi.OutputState }

func (CloudTieringFilesNotTieringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudTieringFilesNotTieringResponse)(nil)).Elem()
}

func (o CloudTieringFilesNotTieringResponseOutput) ToCloudTieringFilesNotTieringResponseOutput() CloudTieringFilesNotTieringResponseOutput {
	return o
}

func (o CloudTieringFilesNotTieringResponseOutput) ToCloudTieringFilesNotTieringResponseOutputWithContext(ctx context.Context) CloudTieringFilesNotTieringResponseOutput {
	return o
}

func (o CloudTieringFilesNotTieringResponseOutput) ToCloudTieringFilesNotTieringResponsePtrOutput() CloudTieringFilesNotTieringResponsePtrOutput {
	return o.ToCloudTieringFilesNotTieringResponsePtrOutputWithContext(context.Background())
}

func (o CloudTieringFilesNotTieringResponseOutput) ToCloudTieringFilesNotTieringResponsePtrOutputWithContext(ctx context.Context) CloudTieringFilesNotTieringResponsePtrOutput {
	return o.ApplyT(func(v CloudTieringFilesNotTieringResponse) *CloudTieringFilesNotTieringResponse {
		return &v
	}).(CloudTieringFilesNotTieringResponsePtrOutput)
}

// Array of tiering errors
func (o CloudTieringFilesNotTieringResponseOutput) Errors() FilesNotTieringErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudTieringFilesNotTieringResponse) []FilesNotTieringErrorResponse { return v.Errors }).(FilesNotTieringErrorResponseArrayOutput)
}

// Last updated timestamp
func (o CloudTieringFilesNotTieringResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringFilesNotTieringResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Last cloud tiering result (HResult)
func (o CloudTieringFilesNotTieringResponseOutput) TotalFileCount() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringFilesNotTieringResponse) int { return v.TotalFileCount }).(pulumi.IntOutput)
}

type CloudTieringFilesNotTieringResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudTieringFilesNotTieringResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudTieringFilesNotTieringResponse)(nil)).Elem()
}

func (o CloudTieringFilesNotTieringResponsePtrOutput) ToCloudTieringFilesNotTieringResponsePtrOutput() CloudTieringFilesNotTieringResponsePtrOutput {
	return o
}

func (o CloudTieringFilesNotTieringResponsePtrOutput) ToCloudTieringFilesNotTieringResponsePtrOutputWithContext(ctx context.Context) CloudTieringFilesNotTieringResponsePtrOutput {
	return o
}

func (o CloudTieringFilesNotTieringResponsePtrOutput) Elem() CloudTieringFilesNotTieringResponseOutput {
	return o.ApplyT(func(v *CloudTieringFilesNotTieringResponse) CloudTieringFilesNotTieringResponse { return *v }).(CloudTieringFilesNotTieringResponseOutput)
}

// Array of tiering errors
func (o CloudTieringFilesNotTieringResponsePtrOutput) Errors() FilesNotTieringErrorResponseArrayOutput {
	return o.ApplyT(func(v *CloudTieringFilesNotTieringResponse) []FilesNotTieringErrorResponse {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(FilesNotTieringErrorResponseArrayOutput)
}

// Last updated timestamp
func (o CloudTieringFilesNotTieringResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringFilesNotTieringResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Last cloud tiering result (HResult)
func (o CloudTieringFilesNotTieringResponsePtrOutput) TotalFileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringFilesNotTieringResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalFileCount
	}).(pulumi.IntPtrOutput)
}

// Server endpoint cloud tiering status object.
type CloudTieringSpaceSavingsResponse struct {
	// Cached content size on the server
	CachedSizeBytes int `pulumi:"cachedSizeBytes"`
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Count of bytes saved on the server
	SpaceSavingsBytes int `pulumi:"spaceSavingsBytes"`
	// Percentage of cached size over total size
	SpaceSavingsPercent int `pulumi:"spaceSavingsPercent"`
	// Total size of content in the azure file share
	TotalSizeCloudBytes int `pulumi:"totalSizeCloudBytes"`
	// Volume size
	VolumeSizeBytes int `pulumi:"volumeSizeBytes"`
}

// Server endpoint cloud tiering status object.
type CloudTieringSpaceSavingsResponseOutput struct{ *pulumi.OutputState }

func (CloudTieringSpaceSavingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudTieringSpaceSavingsResponse)(nil)).Elem()
}

func (o CloudTieringSpaceSavingsResponseOutput) ToCloudTieringSpaceSavingsResponseOutput() CloudTieringSpaceSavingsResponseOutput {
	return o
}

func (o CloudTieringSpaceSavingsResponseOutput) ToCloudTieringSpaceSavingsResponseOutputWithContext(ctx context.Context) CloudTieringSpaceSavingsResponseOutput {
	return o
}

func (o CloudTieringSpaceSavingsResponseOutput) ToCloudTieringSpaceSavingsResponsePtrOutput() CloudTieringSpaceSavingsResponsePtrOutput {
	return o.ToCloudTieringSpaceSavingsResponsePtrOutputWithContext(context.Background())
}

func (o CloudTieringSpaceSavingsResponseOutput) ToCloudTieringSpaceSavingsResponsePtrOutputWithContext(ctx context.Context) CloudTieringSpaceSavingsResponsePtrOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) *CloudTieringSpaceSavingsResponse {
		return &v
	}).(CloudTieringSpaceSavingsResponsePtrOutput)
}

// Cached content size on the server
func (o CloudTieringSpaceSavingsResponseOutput) CachedSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) int { return v.CachedSizeBytes }).(pulumi.IntOutput)
}

// Last updated timestamp
func (o CloudTieringSpaceSavingsResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Count of bytes saved on the server
func (o CloudTieringSpaceSavingsResponseOutput) SpaceSavingsBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) int { return v.SpaceSavingsBytes }).(pulumi.IntOutput)
}

// Percentage of cached size over total size
func (o CloudTieringSpaceSavingsResponseOutput) SpaceSavingsPercent() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) int { return v.SpaceSavingsPercent }).(pulumi.IntOutput)
}

// Total size of content in the azure file share
func (o CloudTieringSpaceSavingsResponseOutput) TotalSizeCloudBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) int { return v.TotalSizeCloudBytes }).(pulumi.IntOutput)
}

// Volume size
func (o CloudTieringSpaceSavingsResponseOutput) VolumeSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringSpaceSavingsResponse) int { return v.VolumeSizeBytes }).(pulumi.IntOutput)
}

type CloudTieringSpaceSavingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudTieringSpaceSavingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudTieringSpaceSavingsResponse)(nil)).Elem()
}

func (o CloudTieringSpaceSavingsResponsePtrOutput) ToCloudTieringSpaceSavingsResponsePtrOutput() CloudTieringSpaceSavingsResponsePtrOutput {
	return o
}

func (o CloudTieringSpaceSavingsResponsePtrOutput) ToCloudTieringSpaceSavingsResponsePtrOutputWithContext(ctx context.Context) CloudTieringSpaceSavingsResponsePtrOutput {
	return o
}

func (o CloudTieringSpaceSavingsResponsePtrOutput) Elem() CloudTieringSpaceSavingsResponseOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) CloudTieringSpaceSavingsResponse { return *v }).(CloudTieringSpaceSavingsResponseOutput)
}

// Cached content size on the server
func (o CloudTieringSpaceSavingsResponsePtrOutput) CachedSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CachedSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Last updated timestamp
func (o CloudTieringSpaceSavingsResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Count of bytes saved on the server
func (o CloudTieringSpaceSavingsResponsePtrOutput) SpaceSavingsBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SpaceSavingsBytes
	}).(pulumi.IntPtrOutput)
}

// Percentage of cached size over total size
func (o CloudTieringSpaceSavingsResponsePtrOutput) SpaceSavingsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SpaceSavingsPercent
	}).(pulumi.IntPtrOutput)
}

// Total size of content in the azure file share
func (o CloudTieringSpaceSavingsResponsePtrOutput) TotalSizeCloudBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalSizeCloudBytes
	}).(pulumi.IntPtrOutput)
}

// Volume size
func (o CloudTieringSpaceSavingsResponsePtrOutput) VolumeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringSpaceSavingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Status of the volume free space policy
type CloudTieringVolumeFreeSpacePolicyStatusResponse struct {
	// Current volume free space percentage.
	CurrentVolumeFreeSpacePercent int `pulumi:"currentVolumeFreeSpacePercent"`
	// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
	EffectiveVolumeFreeSpacePolicy int `pulumi:"effectiveVolumeFreeSpacePolicy"`
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
}

// Status of the volume free space policy
type CloudTieringVolumeFreeSpacePolicyStatusResponseOutput struct{ *pulumi.OutputState }

func (CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudTieringVolumeFreeSpacePolicyStatusResponse)(nil)).Elem()
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponseOutput() CloudTieringVolumeFreeSpacePolicyStatusResponseOutput {
	return o
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponseOutputWithContext(ctx context.Context) CloudTieringVolumeFreeSpacePolicyStatusResponseOutput {
	return o
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput() CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput {
	return o.ToCloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutputWithContext(context.Background())
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutputWithContext(ctx context.Context) CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput {
	return o.ApplyT(func(v CloudTieringVolumeFreeSpacePolicyStatusResponse) *CloudTieringVolumeFreeSpacePolicyStatusResponse {
		return &v
	}).(CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput)
}

// Current volume free space percentage.
func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) CurrentVolumeFreeSpacePercent() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringVolumeFreeSpacePolicyStatusResponse) int { return v.CurrentVolumeFreeSpacePercent }).(pulumi.IntOutput)
}

// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) EffectiveVolumeFreeSpacePolicy() pulumi.IntOutput {
	return o.ApplyT(func(v CloudTieringVolumeFreeSpacePolicyStatusResponse) int { return v.EffectiveVolumeFreeSpacePolicy }).(pulumi.IntOutput)
}

// Last updated timestamp
func (o CloudTieringVolumeFreeSpacePolicyStatusResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudTieringVolumeFreeSpacePolicyStatusResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

type CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudTieringVolumeFreeSpacePolicyStatusResponse)(nil)).Elem()
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput() CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput {
	return o
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) ToCloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutputWithContext(ctx context.Context) CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput {
	return o
}

func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) Elem() CloudTieringVolumeFreeSpacePolicyStatusResponseOutput {
	return o.ApplyT(func(v *CloudTieringVolumeFreeSpacePolicyStatusResponse) CloudTieringVolumeFreeSpacePolicyStatusResponse {
		return *v
	}).(CloudTieringVolumeFreeSpacePolicyStatusResponseOutput)
}

// Current volume free space percentage.
func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) CurrentVolumeFreeSpacePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringVolumeFreeSpacePolicyStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CurrentVolumeFreeSpacePercent
	}).(pulumi.IntPtrOutput)
}

// In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) EffectiveVolumeFreeSpacePolicy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudTieringVolumeFreeSpacePolicyStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.EffectiveVolumeFreeSpacePolicy
	}).(pulumi.IntPtrOutput)
}

// Last updated timestamp
func (o CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudTieringVolumeFreeSpacePolicyStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Files not tiering error object
type FilesNotTieringErrorResponse struct {
	// Error code (HResult)
	ErrorCode int `pulumi:"errorCode"`
	// Count of files with this error
	FileCount int `pulumi:"fileCount"`
}

// Files not tiering error object
type FilesNotTieringErrorResponseOutput struct{ *pulumi.OutputState }

func (FilesNotTieringErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilesNotTieringErrorResponse)(nil)).Elem()
}

func (o FilesNotTieringErrorResponseOutput) ToFilesNotTieringErrorResponseOutput() FilesNotTieringErrorResponseOutput {
	return o
}

func (o FilesNotTieringErrorResponseOutput) ToFilesNotTieringErrorResponseOutputWithContext(ctx context.Context) FilesNotTieringErrorResponseOutput {
	return o
}

// Error code (HResult)
func (o FilesNotTieringErrorResponseOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v FilesNotTieringErrorResponse) int { return v.ErrorCode }).(pulumi.IntOutput)
}

// Count of files with this error
func (o FilesNotTieringErrorResponseOutput) FileCount() pulumi.IntOutput {
	return o.ApplyT(func(v FilesNotTieringErrorResponse) int { return v.FileCount }).(pulumi.IntOutput)
}

type FilesNotTieringErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (FilesNotTieringErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilesNotTieringErrorResponse)(nil)).Elem()
}

func (o FilesNotTieringErrorResponseArrayOutput) ToFilesNotTieringErrorResponseArrayOutput() FilesNotTieringErrorResponseArrayOutput {
	return o
}

func (o FilesNotTieringErrorResponseArrayOutput) ToFilesNotTieringErrorResponseArrayOutputWithContext(ctx context.Context) FilesNotTieringErrorResponseArrayOutput {
	return o
}

func (o FilesNotTieringErrorResponseArrayOutput) Index(i pulumi.IntInput) FilesNotTieringErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilesNotTieringErrorResponse {
		return vs[0].([]FilesNotTieringErrorResponse)[vs[1].(int)]
	}).(FilesNotTieringErrorResponseOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Server endpoint cloud tiering status object.
type ServerEndpointCloudTieringStatusResponse struct {
	// Information regarding how well the local cache on the server is performing.
	CachePerformance CloudTieringCachePerformanceResponse `pulumi:"cachePerformance"`
	// Status of the date policy
	DatePolicyStatus CloudTieringDatePolicyStatusResponse `pulumi:"datePolicyStatus"`
	// Information regarding files that failed to be tiered
	FilesNotTiering CloudTieringFilesNotTieringResponse `pulumi:"filesNotTiering"`
	// Cloud tiering health state.
	Health string `pulumi:"health"`
	// The last updated timestamp of health state
	HealthLastUpdatedTimestamp string `pulumi:"healthLastUpdatedTimestamp"`
	// Last cloud tiering result (HResult)
	LastCloudTieringResult int `pulumi:"lastCloudTieringResult"`
	// Last cloud tiering success timestamp
	LastSuccessTimestamp string `pulumi:"lastSuccessTimestamp"`
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Information regarding how much local space cloud tiering is saving.
	SpaceSavings CloudTieringSpaceSavingsResponse `pulumi:"spaceSavings"`
	// Status of the volume free space policy
	VolumeFreeSpacePolicyStatus CloudTieringVolumeFreeSpacePolicyStatusResponse `pulumi:"volumeFreeSpacePolicyStatus"`
}

// Server endpoint cloud tiering status object.
type ServerEndpointCloudTieringStatusResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointCloudTieringStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointCloudTieringStatusResponse)(nil)).Elem()
}

func (o ServerEndpointCloudTieringStatusResponseOutput) ToServerEndpointCloudTieringStatusResponseOutput() ServerEndpointCloudTieringStatusResponseOutput {
	return o
}

func (o ServerEndpointCloudTieringStatusResponseOutput) ToServerEndpointCloudTieringStatusResponseOutputWithContext(ctx context.Context) ServerEndpointCloudTieringStatusResponseOutput {
	return o
}

func (o ServerEndpointCloudTieringStatusResponseOutput) ToServerEndpointCloudTieringStatusResponsePtrOutput() ServerEndpointCloudTieringStatusResponsePtrOutput {
	return o.ToServerEndpointCloudTieringStatusResponsePtrOutputWithContext(context.Background())
}

func (o ServerEndpointCloudTieringStatusResponseOutput) ToServerEndpointCloudTieringStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointCloudTieringStatusResponsePtrOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) *ServerEndpointCloudTieringStatusResponse {
		return &v
	}).(ServerEndpointCloudTieringStatusResponsePtrOutput)
}

// Information regarding how well the local cache on the server is performing.
func (o ServerEndpointCloudTieringStatusResponseOutput) CachePerformance() CloudTieringCachePerformanceResponseOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) CloudTieringCachePerformanceResponse {
		return v.CachePerformance
	}).(CloudTieringCachePerformanceResponseOutput)
}

// Status of the date policy
func (o ServerEndpointCloudTieringStatusResponseOutput) DatePolicyStatus() CloudTieringDatePolicyStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) CloudTieringDatePolicyStatusResponse {
		return v.DatePolicyStatus
	}).(CloudTieringDatePolicyStatusResponseOutput)
}

// Information regarding files that failed to be tiered
func (o ServerEndpointCloudTieringStatusResponseOutput) FilesNotTiering() CloudTieringFilesNotTieringResponseOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) CloudTieringFilesNotTieringResponse {
		return v.FilesNotTiering
	}).(CloudTieringFilesNotTieringResponseOutput)
}

// Cloud tiering health state.
func (o ServerEndpointCloudTieringStatusResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The last updated timestamp of health state
func (o ServerEndpointCloudTieringStatusResponseOutput) HealthLastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) string { return v.HealthLastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Last cloud tiering result (HResult)
func (o ServerEndpointCloudTieringStatusResponseOutput) LastCloudTieringResult() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) int { return v.LastCloudTieringResult }).(pulumi.IntOutput)
}

// Last cloud tiering success timestamp
func (o ServerEndpointCloudTieringStatusResponseOutput) LastSuccessTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) string { return v.LastSuccessTimestamp }).(pulumi.StringOutput)
}

// Last updated timestamp
func (o ServerEndpointCloudTieringStatusResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Information regarding how much local space cloud tiering is saving.
func (o ServerEndpointCloudTieringStatusResponseOutput) SpaceSavings() CloudTieringSpaceSavingsResponseOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) CloudTieringSpaceSavingsResponse {
		return v.SpaceSavings
	}).(CloudTieringSpaceSavingsResponseOutput)
}

// Status of the volume free space policy
func (o ServerEndpointCloudTieringStatusResponseOutput) VolumeFreeSpacePolicyStatus() CloudTieringVolumeFreeSpacePolicyStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointCloudTieringStatusResponse) CloudTieringVolumeFreeSpacePolicyStatusResponse {
		return v.VolumeFreeSpacePolicyStatus
	}).(CloudTieringVolumeFreeSpacePolicyStatusResponseOutput)
}

type ServerEndpointCloudTieringStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointCloudTieringStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointCloudTieringStatusResponse)(nil)).Elem()
}

func (o ServerEndpointCloudTieringStatusResponsePtrOutput) ToServerEndpointCloudTieringStatusResponsePtrOutput() ServerEndpointCloudTieringStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointCloudTieringStatusResponsePtrOutput) ToServerEndpointCloudTieringStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointCloudTieringStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointCloudTieringStatusResponsePtrOutput) Elem() ServerEndpointCloudTieringStatusResponseOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) ServerEndpointCloudTieringStatusResponse { return *v }).(ServerEndpointCloudTieringStatusResponseOutput)
}

// Information regarding how well the local cache on the server is performing.
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) CachePerformance() CloudTieringCachePerformanceResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *CloudTieringCachePerformanceResponse {
		if v == nil {
			return nil
		}
		return &v.CachePerformance
	}).(CloudTieringCachePerformanceResponsePtrOutput)
}

// Status of the date policy
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) DatePolicyStatus() CloudTieringDatePolicyStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *CloudTieringDatePolicyStatusResponse {
		if v == nil {
			return nil
		}
		return &v.DatePolicyStatus
	}).(CloudTieringDatePolicyStatusResponsePtrOutput)
}

// Information regarding files that failed to be tiered
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) FilesNotTiering() CloudTieringFilesNotTieringResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *CloudTieringFilesNotTieringResponse {
		if v == nil {
			return nil
		}
		return &v.FilesNotTiering
	}).(CloudTieringFilesNotTieringResponsePtrOutput)
}

// Cloud tiering health state.
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Health
	}).(pulumi.StringPtrOutput)
}

// The last updated timestamp of health state
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) HealthLastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HealthLastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Last cloud tiering result (HResult)
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) LastCloudTieringResult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LastCloudTieringResult
	}).(pulumi.IntPtrOutput)
}

// Last cloud tiering success timestamp
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) LastSuccessTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSuccessTimestamp
	}).(pulumi.StringPtrOutput)
}

// Last updated timestamp
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Information regarding how much local space cloud tiering is saving.
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) SpaceSavings() CloudTieringSpaceSavingsResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *CloudTieringSpaceSavingsResponse {
		if v == nil {
			return nil
		}
		return &v.SpaceSavings
	}).(CloudTieringSpaceSavingsResponsePtrOutput)
}

// Status of the volume free space policy
func (o ServerEndpointCloudTieringStatusResponsePtrOutput) VolumeFreeSpacePolicyStatus() CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointCloudTieringStatusResponse) *CloudTieringVolumeFreeSpacePolicyStatusResponse {
		if v == nil {
			return nil
		}
		return &v.VolumeFreeSpacePolicyStatus
	}).(CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput)
}

// Files not syncing error object
type ServerEndpointFilesNotSyncingErrorResponse struct {
	// Error code (HResult)
	ErrorCode int `pulumi:"errorCode"`
	// Count of persistent files not syncing with the specified error code
	PersistentCount int `pulumi:"persistentCount"`
	// Count of transient files not syncing with the specified error code
	TransientCount int `pulumi:"transientCount"`
}

// Files not syncing error object
type ServerEndpointFilesNotSyncingErrorResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointFilesNotSyncingErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointFilesNotSyncingErrorResponse)(nil)).Elem()
}

func (o ServerEndpointFilesNotSyncingErrorResponseOutput) ToServerEndpointFilesNotSyncingErrorResponseOutput() ServerEndpointFilesNotSyncingErrorResponseOutput {
	return o
}

func (o ServerEndpointFilesNotSyncingErrorResponseOutput) ToServerEndpointFilesNotSyncingErrorResponseOutputWithContext(ctx context.Context) ServerEndpointFilesNotSyncingErrorResponseOutput {
	return o
}

// Error code (HResult)
func (o ServerEndpointFilesNotSyncingErrorResponseOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointFilesNotSyncingErrorResponse) int { return v.ErrorCode }).(pulumi.IntOutput)
}

// Count of persistent files not syncing with the specified error code
func (o ServerEndpointFilesNotSyncingErrorResponseOutput) PersistentCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointFilesNotSyncingErrorResponse) int { return v.PersistentCount }).(pulumi.IntOutput)
}

// Count of transient files not syncing with the specified error code
func (o ServerEndpointFilesNotSyncingErrorResponseOutput) TransientCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointFilesNotSyncingErrorResponse) int { return v.TransientCount }).(pulumi.IntOutput)
}

type ServerEndpointFilesNotSyncingErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ServerEndpointFilesNotSyncingErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEndpointFilesNotSyncingErrorResponse)(nil)).Elem()
}

func (o ServerEndpointFilesNotSyncingErrorResponseArrayOutput) ToServerEndpointFilesNotSyncingErrorResponseArrayOutput() ServerEndpointFilesNotSyncingErrorResponseArrayOutput {
	return o
}

func (o ServerEndpointFilesNotSyncingErrorResponseArrayOutput) ToServerEndpointFilesNotSyncingErrorResponseArrayOutputWithContext(ctx context.Context) ServerEndpointFilesNotSyncingErrorResponseArrayOutput {
	return o
}

func (o ServerEndpointFilesNotSyncingErrorResponseArrayOutput) Index(i pulumi.IntInput) ServerEndpointFilesNotSyncingErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerEndpointFilesNotSyncingErrorResponse {
		return vs[0].([]ServerEndpointFilesNotSyncingErrorResponse)[vs[1].(int)]
	}).(ServerEndpointFilesNotSyncingErrorResponseOutput)
}

// Server endpoint recall error object
type ServerEndpointRecallErrorResponse struct {
	// Count of occurences of the error
	Count int `pulumi:"count"`
	// Error code (HResult)
	ErrorCode int `pulumi:"errorCode"`
}

// Server endpoint recall error object
type ServerEndpointRecallErrorResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointRecallErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointRecallErrorResponse)(nil)).Elem()
}

func (o ServerEndpointRecallErrorResponseOutput) ToServerEndpointRecallErrorResponseOutput() ServerEndpointRecallErrorResponseOutput {
	return o
}

func (o ServerEndpointRecallErrorResponseOutput) ToServerEndpointRecallErrorResponseOutputWithContext(ctx context.Context) ServerEndpointRecallErrorResponseOutput {
	return o
}

// Count of occurences of the error
func (o ServerEndpointRecallErrorResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointRecallErrorResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Error code (HResult)
func (o ServerEndpointRecallErrorResponseOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointRecallErrorResponse) int { return v.ErrorCode }).(pulumi.IntOutput)
}

type ServerEndpointRecallErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ServerEndpointRecallErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEndpointRecallErrorResponse)(nil)).Elem()
}

func (o ServerEndpointRecallErrorResponseArrayOutput) ToServerEndpointRecallErrorResponseArrayOutput() ServerEndpointRecallErrorResponseArrayOutput {
	return o
}

func (o ServerEndpointRecallErrorResponseArrayOutput) ToServerEndpointRecallErrorResponseArrayOutputWithContext(ctx context.Context) ServerEndpointRecallErrorResponseArrayOutput {
	return o
}

func (o ServerEndpointRecallErrorResponseArrayOutput) Index(i pulumi.IntInput) ServerEndpointRecallErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerEndpointRecallErrorResponse {
		return vs[0].([]ServerEndpointRecallErrorResponse)[vs[1].(int)]
	}).(ServerEndpointRecallErrorResponseOutput)
}

// Server endpoint recall status object.
type ServerEndpointRecallStatusResponse struct {
	// Last updated timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Array of recall errors
	RecallErrors []ServerEndpointRecallErrorResponse `pulumi:"recallErrors"`
	// Total count of recall errors.
	TotalRecallErrorsCount int `pulumi:"totalRecallErrorsCount"`
}

// Server endpoint recall status object.
type ServerEndpointRecallStatusResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointRecallStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointRecallStatusResponse)(nil)).Elem()
}

func (o ServerEndpointRecallStatusResponseOutput) ToServerEndpointRecallStatusResponseOutput() ServerEndpointRecallStatusResponseOutput {
	return o
}

func (o ServerEndpointRecallStatusResponseOutput) ToServerEndpointRecallStatusResponseOutputWithContext(ctx context.Context) ServerEndpointRecallStatusResponseOutput {
	return o
}

func (o ServerEndpointRecallStatusResponseOutput) ToServerEndpointRecallStatusResponsePtrOutput() ServerEndpointRecallStatusResponsePtrOutput {
	return o.ToServerEndpointRecallStatusResponsePtrOutputWithContext(context.Background())
}

func (o ServerEndpointRecallStatusResponseOutput) ToServerEndpointRecallStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointRecallStatusResponsePtrOutput {
	return o.ApplyT(func(v ServerEndpointRecallStatusResponse) *ServerEndpointRecallStatusResponse {
		return &v
	}).(ServerEndpointRecallStatusResponsePtrOutput)
}

// Last updated timestamp
func (o ServerEndpointRecallStatusResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointRecallStatusResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Array of recall errors
func (o ServerEndpointRecallStatusResponseOutput) RecallErrors() ServerEndpointRecallErrorResponseArrayOutput {
	return o.ApplyT(func(v ServerEndpointRecallStatusResponse) []ServerEndpointRecallErrorResponse { return v.RecallErrors }).(ServerEndpointRecallErrorResponseArrayOutput)
}

// Total count of recall errors.
func (o ServerEndpointRecallStatusResponseOutput) TotalRecallErrorsCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointRecallStatusResponse) int { return v.TotalRecallErrorsCount }).(pulumi.IntOutput)
}

type ServerEndpointRecallStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointRecallStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointRecallStatusResponse)(nil)).Elem()
}

func (o ServerEndpointRecallStatusResponsePtrOutput) ToServerEndpointRecallStatusResponsePtrOutput() ServerEndpointRecallStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointRecallStatusResponsePtrOutput) ToServerEndpointRecallStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointRecallStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointRecallStatusResponsePtrOutput) Elem() ServerEndpointRecallStatusResponseOutput {
	return o.ApplyT(func(v *ServerEndpointRecallStatusResponse) ServerEndpointRecallStatusResponse { return *v }).(ServerEndpointRecallStatusResponseOutput)
}

// Last updated timestamp
func (o ServerEndpointRecallStatusResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointRecallStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Array of recall errors
func (o ServerEndpointRecallStatusResponsePtrOutput) RecallErrors() ServerEndpointRecallErrorResponseArrayOutput {
	return o.ApplyT(func(v *ServerEndpointRecallStatusResponse) []ServerEndpointRecallErrorResponse {
		if v == nil {
			return nil
		}
		return v.RecallErrors
	}).(ServerEndpointRecallErrorResponseArrayOutput)
}

// Total count of recall errors.
func (o ServerEndpointRecallStatusResponsePtrOutput) TotalRecallErrorsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointRecallStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalRecallErrorsCount
	}).(pulumi.IntPtrOutput)
}

// Sync Session status object.
type ServerEndpointSyncActivityStatusResponse struct {
	// Applied bytes
	AppliedBytes int `pulumi:"appliedBytes"`
	// Applied item count.
	AppliedItemCount int `pulumi:"appliedItemCount"`
	// Per item error count
	PerItemErrorCount int `pulumi:"perItemErrorCount"`
	// Timestamp when properties were updated
	Timestamp string `pulumi:"timestamp"`
	// Total bytes (if available)
	TotalBytes int `pulumi:"totalBytes"`
	// Total item count (if available)
	TotalItemCount int `pulumi:"totalItemCount"`
}

// Sync Session status object.
type ServerEndpointSyncActivityStatusResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncActivityStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointSyncActivityStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncActivityStatusResponseOutput) ToServerEndpointSyncActivityStatusResponseOutput() ServerEndpointSyncActivityStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncActivityStatusResponseOutput) ToServerEndpointSyncActivityStatusResponseOutputWithContext(ctx context.Context) ServerEndpointSyncActivityStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncActivityStatusResponseOutput) ToServerEndpointSyncActivityStatusResponsePtrOutput() ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o.ToServerEndpointSyncActivityStatusResponsePtrOutputWithContext(context.Background())
}

func (o ServerEndpointSyncActivityStatusResponseOutput) ToServerEndpointSyncActivityStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) *ServerEndpointSyncActivityStatusResponse {
		return &v
	}).(ServerEndpointSyncActivityStatusResponsePtrOutput)
}

// Applied bytes
func (o ServerEndpointSyncActivityStatusResponseOutput) AppliedBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) int { return v.AppliedBytes }).(pulumi.IntOutput)
}

// Applied item count.
func (o ServerEndpointSyncActivityStatusResponseOutput) AppliedItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) int { return v.AppliedItemCount }).(pulumi.IntOutput)
}

// Per item error count
func (o ServerEndpointSyncActivityStatusResponseOutput) PerItemErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) int { return v.PerItemErrorCount }).(pulumi.IntOutput)
}

// Timestamp when properties were updated
func (o ServerEndpointSyncActivityStatusResponseOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Total bytes (if available)
func (o ServerEndpointSyncActivityStatusResponseOutput) TotalBytes() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) int { return v.TotalBytes }).(pulumi.IntOutput)
}

// Total item count (if available)
func (o ServerEndpointSyncActivityStatusResponseOutput) TotalItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncActivityStatusResponse) int { return v.TotalItemCount }).(pulumi.IntOutput)
}

type ServerEndpointSyncActivityStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncActivityStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointSyncActivityStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncActivityStatusResponsePtrOutput) ToServerEndpointSyncActivityStatusResponsePtrOutput() ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncActivityStatusResponsePtrOutput) ToServerEndpointSyncActivityStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncActivityStatusResponsePtrOutput) Elem() ServerEndpointSyncActivityStatusResponseOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) ServerEndpointSyncActivityStatusResponse { return *v }).(ServerEndpointSyncActivityStatusResponseOutput)
}

// Applied bytes
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) AppliedBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AppliedBytes
	}).(pulumi.IntPtrOutput)
}

// Applied item count.
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) AppliedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AppliedItemCount
	}).(pulumi.IntPtrOutput)
}

// Per item error count
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) PerItemErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PerItemErrorCount
	}).(pulumi.IntPtrOutput)
}

// Timestamp when properties were updated
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) Timestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Timestamp
	}).(pulumi.StringPtrOutput)
}

// Total bytes (if available)
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) TotalBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalBytes
	}).(pulumi.IntPtrOutput)
}

// Total item count (if available)
func (o ServerEndpointSyncActivityStatusResponsePtrOutput) TotalItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncActivityStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalItemCount
	}).(pulumi.IntPtrOutput)
}

// Sync Session status object.
type ServerEndpointSyncSessionStatusResponse struct {
	// Array of per-item errors coming from the last sync session.
	FilesNotSyncingErrors []ServerEndpointFilesNotSyncingErrorResponse `pulumi:"filesNotSyncingErrors"`
	// Last sync per item error count.
	LastSyncPerItemErrorCount int `pulumi:"lastSyncPerItemErrorCount"`
	// Last sync result (HResult)
	LastSyncResult int `pulumi:"lastSyncResult"`
	// Last sync success timestamp
	LastSyncSuccessTimestamp string `pulumi:"lastSyncSuccessTimestamp"`
	// Last sync timestamp
	LastSyncTimestamp string `pulumi:"lastSyncTimestamp"`
	// Count of persistent files not syncing.
	PersistentFilesNotSyncingCount int `pulumi:"persistentFilesNotSyncingCount"`
	// Count of transient files not syncing.
	TransientFilesNotSyncingCount int `pulumi:"transientFilesNotSyncingCount"`
}

// Sync Session status object.
type ServerEndpointSyncSessionStatusResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncSessionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointSyncSessionStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncSessionStatusResponseOutput) ToServerEndpointSyncSessionStatusResponseOutput() ServerEndpointSyncSessionStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncSessionStatusResponseOutput) ToServerEndpointSyncSessionStatusResponseOutputWithContext(ctx context.Context) ServerEndpointSyncSessionStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncSessionStatusResponseOutput) ToServerEndpointSyncSessionStatusResponsePtrOutput() ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o.ToServerEndpointSyncSessionStatusResponsePtrOutputWithContext(context.Background())
}

func (o ServerEndpointSyncSessionStatusResponseOutput) ToServerEndpointSyncSessionStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) *ServerEndpointSyncSessionStatusResponse {
		return &v
	}).(ServerEndpointSyncSessionStatusResponsePtrOutput)
}

// Array of per-item errors coming from the last sync session.
func (o ServerEndpointSyncSessionStatusResponseOutput) FilesNotSyncingErrors() ServerEndpointFilesNotSyncingErrorResponseArrayOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) []ServerEndpointFilesNotSyncingErrorResponse {
		return v.FilesNotSyncingErrors
	}).(ServerEndpointFilesNotSyncingErrorResponseArrayOutput)
}

// Last sync per item error count.
func (o ServerEndpointSyncSessionStatusResponseOutput) LastSyncPerItemErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) int { return v.LastSyncPerItemErrorCount }).(pulumi.IntOutput)
}

// Last sync result (HResult)
func (o ServerEndpointSyncSessionStatusResponseOutput) LastSyncResult() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) int { return v.LastSyncResult }).(pulumi.IntOutput)
}

// Last sync success timestamp
func (o ServerEndpointSyncSessionStatusResponseOutput) LastSyncSuccessTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) string { return v.LastSyncSuccessTimestamp }).(pulumi.StringOutput)
}

// Last sync timestamp
func (o ServerEndpointSyncSessionStatusResponseOutput) LastSyncTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) string { return v.LastSyncTimestamp }).(pulumi.StringOutput)
}

// Count of persistent files not syncing.
func (o ServerEndpointSyncSessionStatusResponseOutput) PersistentFilesNotSyncingCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) int { return v.PersistentFilesNotSyncingCount }).(pulumi.IntOutput)
}

// Count of transient files not syncing.
func (o ServerEndpointSyncSessionStatusResponseOutput) TransientFilesNotSyncingCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncSessionStatusResponse) int { return v.TransientFilesNotSyncingCount }).(pulumi.IntOutput)
}

type ServerEndpointSyncSessionStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncSessionStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointSyncSessionStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncSessionStatusResponsePtrOutput) ToServerEndpointSyncSessionStatusResponsePtrOutput() ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncSessionStatusResponsePtrOutput) ToServerEndpointSyncSessionStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncSessionStatusResponsePtrOutput) Elem() ServerEndpointSyncSessionStatusResponseOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) ServerEndpointSyncSessionStatusResponse { return *v }).(ServerEndpointSyncSessionStatusResponseOutput)
}

// Array of per-item errors coming from the last sync session.
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) FilesNotSyncingErrors() ServerEndpointFilesNotSyncingErrorResponseArrayOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) []ServerEndpointFilesNotSyncingErrorResponse {
		if v == nil {
			return nil
		}
		return v.FilesNotSyncingErrors
	}).(ServerEndpointFilesNotSyncingErrorResponseArrayOutput)
}

// Last sync per item error count.
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) LastSyncPerItemErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LastSyncPerItemErrorCount
	}).(pulumi.IntPtrOutput)
}

// Last sync result (HResult)
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) LastSyncResult() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LastSyncResult
	}).(pulumi.IntPtrOutput)
}

// Last sync success timestamp
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) LastSyncSuccessTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSyncSuccessTimestamp
	}).(pulumi.StringPtrOutput)
}

// Last sync timestamp
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) LastSyncTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastSyncTimestamp
	}).(pulumi.StringPtrOutput)
}

// Count of persistent files not syncing.
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) PersistentFilesNotSyncingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.PersistentFilesNotSyncingCount
	}).(pulumi.IntPtrOutput)
}

// Count of transient files not syncing.
func (o ServerEndpointSyncSessionStatusResponsePtrOutput) TransientFilesNotSyncingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncSessionStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TransientFilesNotSyncingCount
	}).(pulumi.IntPtrOutput)
}

// Server Endpoint sync status
type ServerEndpointSyncStatusResponse struct {
	// Combined Health Status.
	CombinedHealth string `pulumi:"combinedHealth"`
	// Download sync activity
	DownloadActivity ServerEndpointSyncActivityStatusResponse `pulumi:"downloadActivity"`
	// Download Health Status.
	DownloadHealth string `pulumi:"downloadHealth"`
	// Download Status
	DownloadStatus ServerEndpointSyncSessionStatusResponse `pulumi:"downloadStatus"`
	// Last Updated Timestamp
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Offline Data Transfer State
	OfflineDataTransferStatus string `pulumi:"offlineDataTransferStatus"`
	// Sync activity
	SyncActivity string `pulumi:"syncActivity"`
	// Total count of persistent files not syncing (combined upload + download).
	TotalPersistentFilesNotSyncingCount int `pulumi:"totalPersistentFilesNotSyncingCount"`
	// Upload sync activity
	UploadActivity ServerEndpointSyncActivityStatusResponse `pulumi:"uploadActivity"`
	// Upload Health Status.
	UploadHealth string `pulumi:"uploadHealth"`
	// Upload Status
	UploadStatus ServerEndpointSyncSessionStatusResponse `pulumi:"uploadStatus"`
}

// Server Endpoint sync status
type ServerEndpointSyncStatusResponseOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointSyncStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncStatusResponseOutput) ToServerEndpointSyncStatusResponseOutput() ServerEndpointSyncStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncStatusResponseOutput) ToServerEndpointSyncStatusResponseOutputWithContext(ctx context.Context) ServerEndpointSyncStatusResponseOutput {
	return o
}

func (o ServerEndpointSyncStatusResponseOutput) ToServerEndpointSyncStatusResponsePtrOutput() ServerEndpointSyncStatusResponsePtrOutput {
	return o.ToServerEndpointSyncStatusResponsePtrOutputWithContext(context.Background())
}

func (o ServerEndpointSyncStatusResponseOutput) ToServerEndpointSyncStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncStatusResponsePtrOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) *ServerEndpointSyncStatusResponse {
		return &v
	}).(ServerEndpointSyncStatusResponsePtrOutput)
}

// Combined Health Status.
func (o ServerEndpointSyncStatusResponseOutput) CombinedHealth() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.CombinedHealth }).(pulumi.StringOutput)
}

// Download sync activity
func (o ServerEndpointSyncStatusResponseOutput) DownloadActivity() ServerEndpointSyncActivityStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) ServerEndpointSyncActivityStatusResponse {
		return v.DownloadActivity
	}).(ServerEndpointSyncActivityStatusResponseOutput)
}

// Download Health Status.
func (o ServerEndpointSyncStatusResponseOutput) DownloadHealth() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.DownloadHealth }).(pulumi.StringOutput)
}

// Download Status
func (o ServerEndpointSyncStatusResponseOutput) DownloadStatus() ServerEndpointSyncSessionStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) ServerEndpointSyncSessionStatusResponse {
		return v.DownloadStatus
	}).(ServerEndpointSyncSessionStatusResponseOutput)
}

// Last Updated Timestamp
func (o ServerEndpointSyncStatusResponseOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Offline Data Transfer State
func (o ServerEndpointSyncStatusResponseOutput) OfflineDataTransferStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.OfflineDataTransferStatus }).(pulumi.StringOutput)
}

// Sync activity
func (o ServerEndpointSyncStatusResponseOutput) SyncActivity() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.SyncActivity }).(pulumi.StringOutput)
}

// Total count of persistent files not syncing (combined upload + download).
func (o ServerEndpointSyncStatusResponseOutput) TotalPersistentFilesNotSyncingCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) int { return v.TotalPersistentFilesNotSyncingCount }).(pulumi.IntOutput)
}

// Upload sync activity
func (o ServerEndpointSyncStatusResponseOutput) UploadActivity() ServerEndpointSyncActivityStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) ServerEndpointSyncActivityStatusResponse {
		return v.UploadActivity
	}).(ServerEndpointSyncActivityStatusResponseOutput)
}

// Upload Health Status.
func (o ServerEndpointSyncStatusResponseOutput) UploadHealth() pulumi.StringOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) string { return v.UploadHealth }).(pulumi.StringOutput)
}

// Upload Status
func (o ServerEndpointSyncStatusResponseOutput) UploadStatus() ServerEndpointSyncSessionStatusResponseOutput {
	return o.ApplyT(func(v ServerEndpointSyncStatusResponse) ServerEndpointSyncSessionStatusResponse {
		return v.UploadStatus
	}).(ServerEndpointSyncSessionStatusResponseOutput)
}

type ServerEndpointSyncStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointSyncStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointSyncStatusResponse)(nil)).Elem()
}

func (o ServerEndpointSyncStatusResponsePtrOutput) ToServerEndpointSyncStatusResponsePtrOutput() ServerEndpointSyncStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncStatusResponsePtrOutput) ToServerEndpointSyncStatusResponsePtrOutputWithContext(ctx context.Context) ServerEndpointSyncStatusResponsePtrOutput {
	return o
}

func (o ServerEndpointSyncStatusResponsePtrOutput) Elem() ServerEndpointSyncStatusResponseOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) ServerEndpointSyncStatusResponse { return *v }).(ServerEndpointSyncStatusResponseOutput)
}

// Combined Health Status.
func (o ServerEndpointSyncStatusResponsePtrOutput) CombinedHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CombinedHealth
	}).(pulumi.StringPtrOutput)
}

// Download sync activity
func (o ServerEndpointSyncStatusResponsePtrOutput) DownloadActivity() ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *ServerEndpointSyncActivityStatusResponse {
		if v == nil {
			return nil
		}
		return &v.DownloadActivity
	}).(ServerEndpointSyncActivityStatusResponsePtrOutput)
}

// Download Health Status.
func (o ServerEndpointSyncStatusResponsePtrOutput) DownloadHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DownloadHealth
	}).(pulumi.StringPtrOutput)
}

// Download Status
func (o ServerEndpointSyncStatusResponsePtrOutput) DownloadStatus() ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *ServerEndpointSyncSessionStatusResponse {
		if v == nil {
			return nil
		}
		return &v.DownloadStatus
	}).(ServerEndpointSyncSessionStatusResponsePtrOutput)
}

// Last Updated Timestamp
func (o ServerEndpointSyncStatusResponsePtrOutput) LastUpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// Offline Data Transfer State
func (o ServerEndpointSyncStatusResponsePtrOutput) OfflineDataTransferStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OfflineDataTransferStatus
	}).(pulumi.StringPtrOutput)
}

// Sync activity
func (o ServerEndpointSyncStatusResponsePtrOutput) SyncActivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SyncActivity
	}).(pulumi.StringPtrOutput)
}

// Total count of persistent files not syncing (combined upload + download).
func (o ServerEndpointSyncStatusResponsePtrOutput) TotalPersistentFilesNotSyncingCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalPersistentFilesNotSyncingCount
	}).(pulumi.IntPtrOutput)
}

// Upload sync activity
func (o ServerEndpointSyncStatusResponsePtrOutput) UploadActivity() ServerEndpointSyncActivityStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *ServerEndpointSyncActivityStatusResponse {
		if v == nil {
			return nil
		}
		return &v.UploadActivity
	}).(ServerEndpointSyncActivityStatusResponsePtrOutput)
}

// Upload Health Status.
func (o ServerEndpointSyncStatusResponsePtrOutput) UploadHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UploadHealth
	}).(pulumi.StringPtrOutput)
}

// Upload Status
func (o ServerEndpointSyncStatusResponsePtrOutput) UploadStatus() ServerEndpointSyncSessionStatusResponsePtrOutput {
	return o.ApplyT(func(v *ServerEndpointSyncStatusResponse) *ServerEndpointSyncSessionStatusResponse {
		if v == nil {
			return nil
		}
		return &v.UploadStatus
	}).(ServerEndpointSyncSessionStatusResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudTieringCachePerformanceResponseOutput{})
	pulumi.RegisterOutputType(CloudTieringCachePerformanceResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudTieringDatePolicyStatusResponseOutput{})
	pulumi.RegisterOutputType(CloudTieringDatePolicyStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudTieringFilesNotTieringResponseOutput{})
	pulumi.RegisterOutputType(CloudTieringFilesNotTieringResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudTieringSpaceSavingsResponseOutput{})
	pulumi.RegisterOutputType(CloudTieringSpaceSavingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudTieringVolumeFreeSpacePolicyStatusResponseOutput{})
	pulumi.RegisterOutputType(CloudTieringVolumeFreeSpacePolicyStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(FilesNotTieringErrorResponseOutput{})
	pulumi.RegisterOutputType(FilesNotTieringErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointCloudTieringStatusResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointCloudTieringStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointFilesNotSyncingErrorResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointFilesNotSyncingErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerEndpointRecallErrorResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointRecallErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerEndpointRecallStatusResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointRecallStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncActivityStatusResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncActivityStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncSessionStatusResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncSessionStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncStatusResponseOutput{})
	pulumi.RegisterOutputType(ServerEndpointSyncStatusResponsePtrOutput{})
}
