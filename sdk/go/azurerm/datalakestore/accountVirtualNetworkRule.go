// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datalakestore

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Data Lake Store virtual network rule information.
type AccountVirtualNetworkRule struct {
	pulumi.CustomResourceState

	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The virtual network rule properties.
	Properties VirtualNetworkRulePropertiesResponseOutput `pulumi:"properties"`
	// The resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccountVirtualNetworkRule registers a new resource with the given unique name, arguments, and options.
func NewAccountVirtualNetworkRule(ctx *pulumi.Context,
	name string, args *AccountVirtualNetworkRuleArgs, opts ...pulumi.ResourceOption) (*AccountVirtualNetworkRule, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &AccountVirtualNetworkRuleArgs{}
	}
	var resource AccountVirtualNetworkRule
	err := ctx.RegisterResource("azurerm:datalakestore:AccountVirtualNetworkRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountVirtualNetworkRule gets an existing AccountVirtualNetworkRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountVirtualNetworkRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountVirtualNetworkRuleState, opts ...pulumi.ResourceOption) (*AccountVirtualNetworkRule, error) {
	var resource AccountVirtualNetworkRule
	err := ctx.ReadResource("azurerm:datalakestore:AccountVirtualNetworkRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountVirtualNetworkRule resources.
type accountVirtualNetworkRuleState struct {
	// The resource name.
	Name *string `pulumi:"name"`
	// The virtual network rule properties.
	Properties *VirtualNetworkRulePropertiesResponse `pulumi:"properties"`
	// The resource type.
	Type *string `pulumi:"type"`
}

type AccountVirtualNetworkRuleState struct {
	// The resource name.
	Name pulumi.StringPtrInput
	// The virtual network rule properties.
	Properties VirtualNetworkRulePropertiesResponsePtrInput
	// The resource type.
	Type pulumi.StringPtrInput
}

func (AccountVirtualNetworkRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountVirtualNetworkRuleState)(nil)).Elem()
}

type accountVirtualNetworkRuleArgs struct {
	// The name of the Data Lake Store account.
	AccountName string `pulumi:"accountName"`
	// The name of the virtual network rule to create or update.
	Name string `pulumi:"name"`
	// The virtual network rule properties to use when creating a new virtual network rule.
	Properties CreateOrUpdateVirtualNetworkRuleProperties `pulumi:"properties"`
	// The name of the Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AccountVirtualNetworkRule resource.
type AccountVirtualNetworkRuleArgs struct {
	// The name of the Data Lake Store account.
	AccountName pulumi.StringInput
	// The name of the virtual network rule to create or update.
	Name pulumi.StringInput
	// The virtual network rule properties to use when creating a new virtual network rule.
	Properties CreateOrUpdateVirtualNetworkRulePropertiesInput
	// The name of the Azure resource group.
	ResourceGroupName pulumi.StringInput
}

func (AccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountVirtualNetworkRuleArgs)(nil)).Elem()
}
