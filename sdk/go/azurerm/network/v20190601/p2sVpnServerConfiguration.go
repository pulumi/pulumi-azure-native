// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190601

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// P2SVpnServerConfiguration Resource.
type P2sVpnServerConfiguration struct {
	pulumi.CustomResourceState

	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the P2SVpnServer configuration.
	Properties P2SVpnServerConfigurationPropertiesResponseOutput `pulumi:"properties"`
}

// NewP2sVpnServerConfiguration registers a new resource with the given unique name, arguments, and options.
func NewP2sVpnServerConfiguration(ctx *pulumi.Context,
	name string, args *P2sVpnServerConfigurationArgs, opts ...pulumi.ResourceOption) (*P2sVpnServerConfiguration, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VirtualWanName == nil {
		return nil, errors.New("missing required argument 'VirtualWanName'")
	}
	if args == nil {
		args = &P2sVpnServerConfigurationArgs{}
	}
	var resource P2sVpnServerConfiguration
	err := ctx.RegisterResource("azurerm:network/v20190601:P2sVpnServerConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetP2sVpnServerConfiguration gets an existing P2sVpnServerConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetP2sVpnServerConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *P2sVpnServerConfigurationState, opts ...pulumi.ResourceOption) (*P2sVpnServerConfiguration, error) {
	var resource P2sVpnServerConfiguration
	err := ctx.ReadResource("azurerm:network/v20190601:P2sVpnServerConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering P2sVpnServerConfiguration resources.
type p2sVpnServerConfigurationState struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the P2SVpnServer configuration.
	Properties *P2SVpnServerConfigurationPropertiesResponse `pulumi:"properties"`
}

type P2sVpnServerConfigurationState struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// Properties of the P2SVpnServer configuration.
	Properties P2SVpnServerConfigurationPropertiesResponsePtrInput
}

func (P2sVpnServerConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*p2sVpnServerConfigurationState)(nil)).Elem()
}

type p2sVpnServerConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the P2SVpnServerConfiguration.
	Name string `pulumi:"name"`
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates []P2SVpnServerConfigRadiusClientRootCertificate `pulumi:"p2SVpnServerConfigRadiusClientRootCertificates"`
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates []P2SVpnServerConfigRadiusServerRootCertificate `pulumi:"p2SVpnServerConfigRadiusServerRootCertificates"`
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates []P2SVpnServerConfigVpnClientRevokedCertificate `pulumi:"p2SVpnServerConfigVpnClientRevokedCertificates"`
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates []P2SVpnServerConfigVpnClientRootCertificate `pulumi:"p2SVpnServerConfigVpnClientRootCertificates"`
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The resource group name of the VirtualWan.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the VirtualWan.
	VirtualWanName string `pulumi:"virtualWanName"`
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VPN protocols for the P2SVpnServerConfiguration.
	VpnProtocols []string `pulumi:"vpnProtocols"`
}

// The set of arguments for constructing a P2sVpnServerConfiguration resource.
type P2sVpnServerConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the P2SVpnServerConfiguration.
	Name pulumi.StringInput
	// Radius client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusClientRootCertificates P2SVpnServerConfigRadiusClientRootCertificateArrayInput
	// Radius Server root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigRadiusServerRootCertificates P2SVpnServerConfigRadiusServerRootCertificateArrayInput
	// VPN client revoked certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRevokedCertificates P2SVpnServerConfigVpnClientRevokedCertificateArrayInput
	// VPN client root certificate of P2SVpnServerConfiguration.
	P2SVpnServerConfigVpnClientRootCertificates P2SVpnServerConfigVpnClientRootCertificateArrayInput
	// The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerAddress pulumi.StringPtrInput
	// The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.
	RadiusServerSecret pulumi.StringPtrInput
	// The resource group name of the VirtualWan.
	ResourceGroupName pulumi.StringInput
	// The name of the VirtualWan.
	VirtualWanName pulumi.StringInput
	// VpnClientIpsecPolicies for P2SVpnServerConfiguration.
	VpnClientIpsecPolicies IpsecPolicyArrayInput
	// VPN protocols for the P2SVpnServerConfiguration.
	VpnProtocols pulumi.StringArrayInput
}

func (P2sVpnServerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*p2sVpnServerConfigurationArgs)(nil)).Elem()
}
