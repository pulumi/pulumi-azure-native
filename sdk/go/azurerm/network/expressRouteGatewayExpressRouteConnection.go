// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ExpressRouteConnection resource.
type ExpressRouteGatewayExpressRouteConnection struct {
	pulumi.CustomResourceState

	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the express route connection.
	Properties ExpressRouteConnectionPropertiesResponseOutput `pulumi:"properties"`
}

// NewExpressRouteGatewayExpressRouteConnection registers a new resource with the given unique name, arguments, and options.
func NewExpressRouteGatewayExpressRouteConnection(ctx *pulumi.Context,
	name string, args *ExpressRouteGatewayExpressRouteConnectionArgs, opts ...pulumi.ResourceOption) (*ExpressRouteGatewayExpressRouteConnection, error) {
	if args == nil || args.ConnectionName == nil {
		return nil, errors.New("missing required argument 'ConnectionName'")
	}
	if args == nil || args.ExpressRouteGatewayName == nil {
		return nil, errors.New("missing required argument 'ExpressRouteGatewayName'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ExpressRouteGatewayExpressRouteConnectionArgs{}
	}
	var resource ExpressRouteGatewayExpressRouteConnection
	err := ctx.RegisterResource("azurerm:network:ExpressRouteGatewayExpressRouteConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExpressRouteGatewayExpressRouteConnection gets an existing ExpressRouteGatewayExpressRouteConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExpressRouteGatewayExpressRouteConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExpressRouteGatewayExpressRouteConnectionState, opts ...pulumi.ResourceOption) (*ExpressRouteGatewayExpressRouteConnection, error) {
	var resource ExpressRouteGatewayExpressRouteConnection
	err := ctx.ReadResource("azurerm:network:ExpressRouteGatewayExpressRouteConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExpressRouteGatewayExpressRouteConnection resources.
type expressRouteGatewayExpressRouteConnectionState struct {
	// The name of the resource.
	Name *string `pulumi:"name"`
	// Properties of the express route connection.
	Properties *ExpressRouteConnectionPropertiesResponse `pulumi:"properties"`
}

type ExpressRouteGatewayExpressRouteConnectionState struct {
	// The name of the resource.
	Name pulumi.StringPtrInput
	// Properties of the express route connection.
	Properties ExpressRouteConnectionPropertiesResponsePtrInput
}

func (ExpressRouteGatewayExpressRouteConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*expressRouteGatewayExpressRouteConnectionState)(nil)).Elem()
}

type expressRouteGatewayExpressRouteConnectionArgs struct {
	// The name of the connection subresource.
	ConnectionName string `pulumi:"connectionName"`
	// The name of the ExpressRoute gateway.
	ExpressRouteGatewayName string `pulumi:"expressRouteGatewayName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Properties of the express route connection.
	Properties *ExpressRouteConnectionProperties `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ExpressRouteGatewayExpressRouteConnection resource.
type ExpressRouteGatewayExpressRouteConnectionArgs struct {
	// The name of the connection subresource.
	ConnectionName pulumi.StringInput
	// The name of the ExpressRoute gateway.
	ExpressRouteGatewayName pulumi.StringInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringInput
	// Properties of the express route connection.
	Properties ExpressRouteConnectionPropertiesPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (ExpressRouteGatewayExpressRouteConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*expressRouteGatewayExpressRouteConnectionArgs)(nil)).Elem()
}
