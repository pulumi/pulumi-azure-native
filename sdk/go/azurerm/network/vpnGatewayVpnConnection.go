// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// VpnConnection Resource.
type VpnGatewayVpnConnection struct {
	pulumi.CustomResourceState

	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the VPN connection.
	Properties VpnConnectionPropertiesResponseOutput `pulumi:"properties"`
}

// NewVpnGatewayVpnConnection registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayVpnConnection(ctx *pulumi.Context,
	name string, args *VpnGatewayVpnConnectionArgs, opts ...pulumi.ResourceOption) (*VpnGatewayVpnConnection, error) {
	if args == nil || args.ConnectionName == nil {
		return nil, errors.New("missing required argument 'ConnectionName'")
	}
	if args == nil || args.GatewayName == nil {
		return nil, errors.New("missing required argument 'GatewayName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &VpnGatewayVpnConnectionArgs{}
	}
	var resource VpnGatewayVpnConnection
	err := ctx.RegisterResource("azurerm:network:VpnGatewayVpnConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGatewayVpnConnection gets an existing VpnGatewayVpnConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayVpnConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayVpnConnectionState, opts ...pulumi.ResourceOption) (*VpnGatewayVpnConnection, error) {
	var resource VpnGatewayVpnConnection
	err := ctx.ReadResource("azurerm:network:VpnGatewayVpnConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGatewayVpnConnection resources.
type vpnGatewayVpnConnectionState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the VPN connection.
	Properties *VpnConnectionPropertiesResponse `pulumi:"properties"`
}

type VpnGatewayVpnConnectionState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// Properties of the VPN connection.
	Properties VpnConnectionPropertiesResponsePtrInput
}

func (VpnGatewayVpnConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayVpnConnectionState)(nil)).Elem()
}

type vpnGatewayVpnConnectionArgs struct {
	// The name of the connection.
	ConnectionName string `pulumi:"connectionName"`
	// The name of the gateway.
	GatewayName string `pulumi:"gatewayName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the VPN connection.
	Properties *VpnConnectionProperties `pulumi:"properties"`
	// The resource group name of the VpnGateway.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a VpnGatewayVpnConnection resource.
type VpnGatewayVpnConnectionArgs struct {
	// The name of the connection.
	ConnectionName pulumi.StringInput
	// The name of the gateway.
	GatewayName pulumi.StringInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// Properties of the VPN connection.
	Properties VpnConnectionPropertiesPtrInput
	// The resource group name of the VpnGateway.
	ResourceGroupName pulumi.StringInput
}

func (VpnGatewayVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayVpnConnectionArgs)(nil)).Elem()
}
