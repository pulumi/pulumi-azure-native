// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Describes a DNS record set (a collection of DNS records with the same name and type) in a Private DNS zone.
type RecordSet struct {
	pulumi.CustomResourceState

	// The ETag of the record set.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of the record set.
	Properties RecordSetPropertiesResponseOutput `pulumi:"properties"`
	// The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRecordSet registers a new resource with the given unique name, arguments, and options.
func NewRecordSet(ctx *pulumi.Context,
	name string, args *RecordSetArgs, opts ...pulumi.ResourceOption) (*RecordSet, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.PrivateZoneName == nil {
		return nil, errors.New("missing required argument 'PrivateZoneName'")
	}
	if args == nil || args.RecordType == nil {
		return nil, errors.New("missing required argument 'RecordType'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &RecordSetArgs{}
	}
	var resource RecordSet
	err := ctx.RegisterResource("azurerm:network/v20180901:RecordSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecordSet gets an existing RecordSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecordSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecordSetState, opts ...pulumi.ResourceOption) (*RecordSet, error) {
	var resource RecordSet
	err := ctx.ReadResource("azurerm:network/v20180901:RecordSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecordSet resources.
type recordSetState struct {
	// The ETag of the record set.
	Etag *string `pulumi:"etag"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The properties of the record set.
	Properties *RecordSetPropertiesResponse `pulumi:"properties"`
	// The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.
	Type *string `pulumi:"type"`
}

type RecordSetState struct {
	// The ETag of the record set.
	Etag pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// The properties of the record set.
	Properties RecordSetPropertiesResponsePtrInput
	// The type of the resource. Example - 'Microsoft.Network/privateDnsZones'.
	Type pulumi.StringPtrInput
}

func (RecordSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*recordSetState)(nil)).Elem()
}

type recordSetArgs struct {
	// The list of A records in the record set.
	ARecords []ARecord `pulumi:"aRecords"`
	// The list of AAAA records in the record set.
	AaaaRecords []AaaaRecord `pulumi:"aaaaRecords"`
	// The CNAME record in the record set.
	CnameRecord *CnameRecord `pulumi:"cnameRecord"`
	// The ETag of the record set.
	Etag *string `pulumi:"etag"`
	// The metadata attached to the record set.
	Metadata map[string]string `pulumi:"metadata"`
	// The list of MX records in the record set.
	MxRecords []MxRecord `pulumi:"mxRecords"`
	// The name of the record set, relative to the name of the zone.
	Name string `pulumi:"name"`
	// The name of the Private DNS zone (without a terminating dot).
	PrivateZoneName string `pulumi:"privateZoneName"`
	// The list of PTR records in the record set.
	PtrRecords []PtrRecord `pulumi:"ptrRecords"`
	// The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the Private DNS zone is created).
	RecordType string `pulumi:"recordType"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SOA record in the record set.
	SoaRecord *SoaRecord `pulumi:"soaRecord"`
	// The list of SRV records in the record set.
	SrvRecords []SrvRecord `pulumi:"srvRecords"`
	// The TTL (time-to-live) of the records in the record set.
	Ttl *int `pulumi:"ttl"`
	// The list of TXT records in the record set.
	TxtRecords []TxtRecord `pulumi:"txtRecords"`
}

// The set of arguments for constructing a RecordSet resource.
type RecordSetArgs struct {
	// The list of A records in the record set.
	ARecords ARecordArrayInput
	// The list of AAAA records in the record set.
	AaaaRecords AaaaRecordArrayInput
	// The CNAME record in the record set.
	CnameRecord CnameRecordPtrInput
	// The ETag of the record set.
	Etag pulumi.StringPtrInput
	// The metadata attached to the record set.
	Metadata pulumi.StringMapInput
	// The list of MX records in the record set.
	MxRecords MxRecordArrayInput
	// The name of the record set, relative to the name of the zone.
	Name pulumi.StringInput
	// The name of the Private DNS zone (without a terminating dot).
	PrivateZoneName pulumi.StringInput
	// The list of PTR records in the record set.
	PtrRecords PtrRecordArrayInput
	// The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the Private DNS zone is created).
	RecordType pulumi.StringInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The SOA record in the record set.
	SoaRecord SoaRecordPtrInput
	// The list of SRV records in the record set.
	SrvRecords SrvRecordArrayInput
	// The TTL (time-to-live) of the records in the record set.
	Ttl pulumi.IntPtrInput
	// The list of TXT records in the record set.
	TxtRecords TxtRecordArrayInput
}

func (RecordSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recordSetArgs)(nil)).Elem()
}
