// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Information about packet capture session.
type NetworkWatcherPacketCapture struct {
	pulumi.CustomResourceState

	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Name of the packet capture session.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the packet capture result.
	Properties PacketCaptureResultPropertiesResponseOutput `pulumi:"properties"`
}

// NewNetworkWatcherPacketCapture registers a new resource with the given unique name, arguments, and options.
func NewNetworkWatcherPacketCapture(ctx *pulumi.Context,
	name string, args *NetworkWatcherPacketCaptureArgs, opts ...pulumi.ResourceOption) (*NetworkWatcherPacketCapture, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.NetworkWatcherName == nil {
		return nil, errors.New("missing required argument 'NetworkWatcherName'")
	}
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &NetworkWatcherPacketCaptureArgs{}
	}
	var resource NetworkWatcherPacketCapture
	err := ctx.RegisterResource("azurerm:network:NetworkWatcherPacketCapture", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkWatcherPacketCapture gets an existing NetworkWatcherPacketCapture resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkWatcherPacketCapture(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkWatcherPacketCaptureState, opts ...pulumi.ResourceOption) (*NetworkWatcherPacketCapture, error) {
	var resource NetworkWatcherPacketCapture
	err := ctx.ReadResource("azurerm:network:NetworkWatcherPacketCapture", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkWatcherPacketCapture resources.
type networkWatcherPacketCaptureState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Name of the packet capture session.
	Name *string `pulumi:"name"`
	// Properties of the packet capture result.
	Properties *PacketCaptureResultPropertiesResponse `pulumi:"properties"`
}

type NetworkWatcherPacketCaptureState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Name of the packet capture session.
	Name pulumi.StringPtrInput
	// Properties of the packet capture result.
	Properties PacketCaptureResultPropertiesResponsePtrInput
}

func (NetworkWatcherPacketCaptureState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkWatcherPacketCaptureState)(nil)).Elem()
}

type networkWatcherPacketCaptureArgs struct {
	// The name of the packet capture session.
	Name string `pulumi:"name"`
	// The name of the network watcher.
	NetworkWatcherName string `pulumi:"networkWatcherName"`
	// Properties of the packet capture.
	Properties PacketCaptureParameters `pulumi:"properties"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a NetworkWatcherPacketCapture resource.
type NetworkWatcherPacketCaptureArgs struct {
	// The name of the packet capture session.
	Name pulumi.StringInput
	// The name of the network watcher.
	NetworkWatcherName pulumi.StringInput
	// Properties of the packet capture.
	Properties PacketCaptureParametersInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (NetworkWatcherPacketCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkWatcherPacketCaptureArgs)(nil)).Elem()
}
