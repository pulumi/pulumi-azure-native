// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// RouteTable resource in a virtual hub.
type VirtualHubHubRouteTable struct {
	pulumi.CustomResourceState

	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Properties of the RouteTable resource.
	Properties HubRouteTablePropertiesResponseOutput `pulumi:"properties"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualHubHubRouteTable registers a new resource with the given unique name, arguments, and options.
func NewVirtualHubHubRouteTable(ctx *pulumi.Context,
	name string, args *VirtualHubHubRouteTableArgs, opts ...pulumi.ResourceOption) (*VirtualHubHubRouteTable, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RouteTableName == nil {
		return nil, errors.New("missing required argument 'RouteTableName'")
	}
	if args == nil || args.VirtualHubName == nil {
		return nil, errors.New("missing required argument 'VirtualHubName'")
	}
	if args == nil {
		args = &VirtualHubHubRouteTableArgs{}
	}
	var resource VirtualHubHubRouteTable
	err := ctx.RegisterResource("azurerm:network:VirtualHubHubRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualHubHubRouteTable gets an existing VirtualHubHubRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualHubHubRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualHubHubRouteTableState, opts ...pulumi.ResourceOption) (*VirtualHubHubRouteTable, error) {
	var resource VirtualHubHubRouteTable
	err := ctx.ReadResource("azurerm:network:VirtualHubHubRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualHubHubRouteTable resources.
type virtualHubHubRouteTableState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the RouteTable resource.
	Properties *HubRouteTablePropertiesResponse `pulumi:"properties"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type VirtualHubHubRouteTableState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// Properties of the RouteTable resource.
	Properties HubRouteTablePropertiesResponsePtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (VirtualHubHubRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHubHubRouteTableState)(nil)).Elem()
}

type virtualHubHubRouteTableArgs struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Properties of the RouteTable resource.
	Properties *HubRouteTableProperties `pulumi:"properties"`
	// The resource group name of the VirtualHub.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the RouteTable.
	RouteTableName string `pulumi:"routeTableName"`
	// The name of the VirtualHub.
	VirtualHubName string `pulumi:"virtualHubName"`
}

// The set of arguments for constructing a VirtualHubHubRouteTable resource.
type VirtualHubHubRouteTableArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// Properties of the RouteTable resource.
	Properties HubRouteTablePropertiesPtrInput
	// The resource group name of the VirtualHub.
	ResourceGroupName pulumi.StringInput
	// The name of the RouteTable.
	RouteTableName pulumi.StringInput
	// The name of the VirtualHub.
	VirtualHubName pulumi.StringInput
}

func (VirtualHubHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHubHubRouteTableArgs)(nil)).Elem()
}
