// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200501

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Virtual Appliance Site resource.
type VirtualHubBgpConnection struct {
	pulumi.CustomResourceState

	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Name of the connection.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The properties of the Bgp connections.
	Properties BgpConnectionPropertiesResponseOutput `pulumi:"properties"`
	// Connection type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualHubBgpConnection registers a new resource with the given unique name, arguments, and options.
func NewVirtualHubBgpConnection(ctx *pulumi.Context,
	name string, args *VirtualHubBgpConnectionArgs, opts ...pulumi.ResourceOption) (*VirtualHubBgpConnection, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VirtualHubName == nil {
		return nil, errors.New("missing required argument 'VirtualHubName'")
	}
	if args == nil {
		args = &VirtualHubBgpConnectionArgs{}
	}
	var resource VirtualHubBgpConnection
	err := ctx.RegisterResource("azurerm:network/v20200501:VirtualHubBgpConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualHubBgpConnection gets an existing VirtualHubBgpConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualHubBgpConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualHubBgpConnectionState, opts ...pulumi.ResourceOption) (*VirtualHubBgpConnection, error) {
	var resource VirtualHubBgpConnection
	err := ctx.ReadResource("azurerm:network/v20200501:VirtualHubBgpConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualHubBgpConnection resources.
type virtualHubBgpConnectionState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Name of the connection.
	Name *string `pulumi:"name"`
	// The properties of the Bgp connections.
	Properties *BgpConnectionPropertiesResponse `pulumi:"properties"`
	// Connection type.
	Type *string `pulumi:"type"`
}

type VirtualHubBgpConnectionState struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Name of the connection.
	Name pulumi.StringPtrInput
	// The properties of the Bgp connections.
	Properties BgpConnectionPropertiesResponsePtrInput
	// Connection type.
	Type pulumi.StringPtrInput
}

func (VirtualHubBgpConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHubBgpConnectionState)(nil)).Elem()
}

type virtualHubBgpConnectionArgs struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the connection.
	Name string `pulumi:"name"`
	// The properties of the Bgp connections.
	Properties *BgpConnectionProperties `pulumi:"properties"`
	// The resource group name of the VirtualHub.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the VirtualHub.
	VirtualHubName string `pulumi:"virtualHubName"`
}

// The set of arguments for constructing a VirtualHubBgpConnection resource.
type VirtualHubBgpConnectionArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput
	// The name of the connection.
	Name pulumi.StringInput
	// The properties of the Bgp connections.
	Properties BgpConnectionPropertiesPtrInput
	// The resource group name of the VirtualHub.
	ResourceGroupName pulumi.StringInput
	// The name of the VirtualHub.
	VirtualHubName pulumi.StringInput
}

func (VirtualHubBgpConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualHubBgpConnectionArgs)(nil)).Elem()
}
