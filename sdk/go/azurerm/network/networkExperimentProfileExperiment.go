// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines the properties of an Experiment
type NetworkExperimentProfileExperiment struct {
	pulumi.CustomResourceState

	// Resource location.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The properties of an Experiment
	Properties ExperimentPropertiesResponseOutput `pulumi:"properties"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewNetworkExperimentProfileExperiment registers a new resource with the given unique name, arguments, and options.
func NewNetworkExperimentProfileExperiment(ctx *pulumi.Context,
	name string, args *NetworkExperimentProfileExperimentArgs, opts ...pulumi.ResourceOption) (*NetworkExperimentProfileExperiment, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ProfileName == nil {
		return nil, errors.New("missing required argument 'ProfileName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &NetworkExperimentProfileExperimentArgs{}
	}
	var resource NetworkExperimentProfileExperiment
	err := ctx.RegisterResource("azurerm:network:NetworkExperimentProfileExperiment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkExperimentProfileExperiment gets an existing NetworkExperimentProfileExperiment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkExperimentProfileExperiment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkExperimentProfileExperimentState, opts ...pulumi.ResourceOption) (*NetworkExperimentProfileExperiment, error) {
	var resource NetworkExperimentProfileExperiment
	err := ctx.ReadResource("azurerm:network:NetworkExperimentProfileExperiment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkExperimentProfileExperiment resources.
type networkExperimentProfileExperimentState struct {
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The properties of an Experiment
	Properties *ExperimentPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type NetworkExperimentProfileExperimentState struct {
	// Resource location.
	Location pulumi.StringPtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// The properties of an Experiment
	Properties ExperimentPropertiesResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (NetworkExperimentProfileExperimentState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkExperimentProfileExperimentState)(nil)).Elem()
}

type networkExperimentProfileExperimentArgs struct {
	// Resource location.
	Location *string `pulumi:"location"`
	// The Experiment identifier associated with the Experiment
	Name string `pulumi:"name"`
	// The Profile identifier associated with the Tenant and Partner
	ProfileName string `pulumi:"profileName"`
	// The properties of an Experiment
	Properties *ExperimentProperties `pulumi:"properties"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkExperimentProfileExperiment resource.
type NetworkExperimentProfileExperimentArgs struct {
	// Resource location.
	Location pulumi.StringPtrInput
	// The Experiment identifier associated with the Experiment
	Name pulumi.StringInput
	// The Profile identifier associated with the Tenant and Partner
	ProfileName pulumi.StringInput
	// The properties of an Experiment
	Properties ExperimentPropertiesPtrInput
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (NetworkExperimentProfileExperimentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkExperimentProfileExperimentArgs)(nil)).Elem()
}
